; ModuleID = 'function.bc'
source_filename = "function.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_function_p_heap = type { %struct.VEC_function_p_base }
%struct.VEC_function_p_base = type { i32, i32, [1 x %struct.function*] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type { %struct.temp_slot*, %struct.temp_slot*, %struct.rtx_def*, i64, %union.tree_node*, i32, i8, i8, i32, i32, i64, i64 }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.ggc_cache_tab = type { %struct.htab**, i64, i64, void (i8*)*, void (i8*)*, i32 (i8*)* }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.regstat_n_sets_and_refs_t = type { i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.temp_slot_address_entry = type { i32, %struct.rtx_def*, %struct.temp_slot* }
%struct.assign_parm_data_all = type { %struct.ix86_args, %struct.args_size, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i64, i64, i32 }
%struct.args_size = type { i64, %union.tree_node* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.assign_parm_data_one = type { %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.locate_and_pad_arg_data, i32, i8 }
%struct.locate_and_pad_arg_data = type { %struct.args_size, %struct.args_size, %struct.args_size, %struct.args_size, i32, i32 }
%struct.pointer_set_t = type opaque
%struct.tree_block = type { %struct.tree_common, i32, i32, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.cl_optimization = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.types_used_by_vars_entry = type { %union.tree_node*, %union.tree_node* }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cfun = dso_local local_unnamed_addr global %struct.function* null, align 8, !dbg !0
@types_used_by_vars_hash = dso_local local_unnamed_addr global %struct.htab* null, align 8, !dbg !2183
@types_used_by_cur_var_decl = dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !2185
@function_context_stack = internal global %struct.VEC_function_p_heap* null, align 8, !dbg !2276
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@virtuals_instantiated = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2263
@generating_concat_p = external dso_local local_unnamed_addr global i32, align 4
@prologue_insn_hash = internal global %struct.htab* null, align 8, !dbg !2272
@epilogue_insn_hash = internal global %struct.htab* null, align 8, !dbg !2274
@x_rtl = external dso_local global %struct.rtl_data, align 8
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@.str = private unnamed_addr constant [38 x i8] c"total size of local objects too large\00", align 1
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"function.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@ix86_preferred_stack_boundary = external dso_local local_unnamed_addr global i32, align 4
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.3 = private unnamed_addr constant [35 x i8] c"size of variable %q+D is too large\00", align 1
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@temp_slot_address_table = internal global %struct.htab* null, align 8, !dbg !2278
@.str.4 = private unnamed_addr constant [6 x i8] c"vregs\00", align 1
@pass_instantiate_virtual_regs = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8 ()* null, i32 ()* @instantiate_virtual_regs, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2187
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@flag_pcc_struct_return = external dso_local local_unnamed_addr global i32, align 4
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@call_used_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@flag_float_store = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@next_block_index = internal global i32 2, align 4, !dbg !2296
@cfun_stack = internal global %struct.VEC_function_p_heap* null, align 8, !dbg !2282
@funcdef_no = internal global i32 0, align 4, !dbg !2265
@init_machine_status = common dso_local local_unnamed_addr global %struct.machine_function* ()* null, align 8, !dbg !2267
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@in_dummy_function = internal unnamed_addr global i1 false, align 1, !dbg !2298
@.str.5 = private unnamed_addr constant [30 x i8] c"function returns an aggregate\00", align 1
@reg_renumber = external dso_local local_unnamed_addr global i16*, align 8
@.str.6 = private unnamed_addr constant [15 x i8] c"*init_function\00", align 1
@pass_init_function = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8 ()* null, i32 ()* @init_function_for_compilation, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2215
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@profile_flag = external dso_local local_unnamed_addr global i32, align 4
@stack_limit_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str.7 = private unnamed_addr constant [22 x i8] c"unused parameter %q+D\00", align 1
@input_location = external dso_local local_unnamed_addr global i32, align 4
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.8 = private unnamed_addr constant [7 x i8] c"<none>\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@debug_info_level = external dso_local local_unnamed_addr global i32, align 4
@.str.9 = private unnamed_addr constant [11 x i8] c"*leaf_regs\00", align 1
@pass_leaf_regs = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_check_leaf_regs, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2217
@.str.10 = private unnamed_addr constant [17 x i8] c"pro_and_epilogue\00", align 1
@pass_thread_prologue_and_epilogue = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_thread_prologue_and_epilogue, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 153, i32 0, i32 0, i32 0, i32 8, i32 394243 } }, align 8, !dbg !2219
@.str.11 = private unnamed_addr constant [8 x i8] c"asmcons\00", align 1
@pass_match_asm_constraints = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_match_asm_constraints, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2221
@initial_trampoline = internal global %struct.rtx_def* null, align 8, !dbg !2284
@gt_ggc_r_gt_function_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.rtx_def** @initial_trampoline to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @temp_slot_address_table to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P23temp_slot_address_entry4htab, void (i8*)* @gt_pch_n_P23temp_slot_address_entry4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2223
@gt_ggc_rc_gt_function_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { %struct.htab** @epilogue_insn_hash, i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @prologue_insn_hash, i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16, !dbg !2237
@gt_pch_rc_gt_function_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @epilogue_insn_hash to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7rtx_def4htab, void (i8*)* @gt_pch_n_P7rtx_def4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @prologue_insn_hash to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7rtx_def4htab, void (i8*)* @gt_pch_n_P7rtx_def4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2253
@gt_pch_rs_gt_function_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @next_block_index to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @funcdef_no to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2255
@current_function_is_leaf = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2257
@current_function_sp_is_unchanging = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2259
@current_function_uses_only_leaf_regs = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2261
@flag_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@flag_expensive_optimizations = external dso_local local_unnamed_addr global i32, align 4
@dynamic_offset = internal unnamed_addr global i32 0, align 4, !dbg !2290
@cfa_offset = internal unnamed_addr global i32 0, align 4, !dbg !2294
@target_flags = external dso_local local_unnamed_addr global i32, align 4
@recog_data = external dso_local local_unnamed_addr global %struct.recog_data, align 8
@insn_data = external dso_local local_unnamed_addr constant [0 x %struct.insn_data], align 8
@.str.12 = private unnamed_addr constant [33 x i8] c"impossible constraint in %<asm%>\00", align 1
@.str.13 = private unnamed_addr constant [61 x i8] c"variable %q+D might be clobbered by %<longjmp%> or %<vfork%>\00", align 1
@regstat_n_sets_and_refs = external dso_local local_unnamed_addr global %struct.regstat_n_sets_and_refs_t*, align 8
@.str.14 = private unnamed_addr constant [61 x i8] c"argument %q+D might be clobbered by %<longjmp%> or %<vfork%>\00", align 1
@cse_not_expected = external dso_local local_unnamed_addr global i32, align 4
@caller_save_needed = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@flag_stack_protect = external dso_local local_unnamed_addr global i32, align 4
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.15 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@htab_eq_pointer = external dso_local local_unnamed_addr global i32 (i8*, i8*)*, align 8
@prologue_locator = external dso_local local_unnamed_addr global i32, align 4
@epilogue_completed = external dso_local local_unnamed_addr global i32, align 4
@epilogue_locator = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2303 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2316, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2317, metadata !DIExpression()), !dbg !2318
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2319
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2320
  ret i32 %call, !dbg !2321
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2322 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2326
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2327
  ret i32 %call, !dbg !2328
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2329 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2383, metadata !DIExpression()), !dbg !2384
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2385
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2385
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2385
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2385
  %cmp = icmp uge i8* %0, %1, !dbg !2385
  %conv1 = zext i1 %cmp to i64, !dbg !2385
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2385
  %tobool = icmp eq i64 %expval, 0, !dbg !2385
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2385

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2385
  br label %cond.end, !dbg !2385

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2385
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2385
  %2 = load i8, i8* %0, align 1, !dbg !2385
  %conv3 = zext i8 %2 to i32, !dbg !2385
  br label %cond.end, !dbg !2385

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2385
  ret i32 %cond, !dbg !2386
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2389, metadata !DIExpression()), !dbg !2390
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2391
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2391
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2391
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2391
  %cmp = icmp uge i8* %0, %1, !dbg !2391
  %conv1 = zext i1 %cmp to i64, !dbg !2391
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2391
  %tobool = icmp eq i64 %expval, 0, !dbg !2391
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2391

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2391
  br label %cond.end, !dbg !2391

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2391
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2391
  %2 = load i8, i8* %0, align 1, !dbg !2391
  %conv3 = zext i8 %2 to i32, !dbg !2391
  br label %cond.end, !dbg !2391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2391
  ret i32 %cond, !dbg !2392
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2393 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2394
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2394
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2394
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2394
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2394
  %cmp = icmp uge i8* %1, %2, !dbg !2394
  %conv1 = zext i1 %cmp to i64, !dbg !2394
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2394
  %tobool = icmp eq i64 %expval, 0, !dbg !2394
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2394

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2394
  br label %cond.end, !dbg !2394

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2394
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2394
  %3 = load i8, i8* %1, align 1, !dbg !2394
  %conv3 = zext i8 %3 to i32, !dbg !2394
  br label %cond.end, !dbg !2394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2394
  ret i32 %cond, !dbg !2395
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2400, metadata !DIExpression()), !dbg !2401
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2402
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2403
  ret i32 %call, !dbg !2404
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2405 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2409, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2410, metadata !DIExpression()), !dbg !2411
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2412
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2412
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2412
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2412
  %cmp = icmp uge i8* %0, %1, !dbg !2412
  %conv1 = zext i1 %cmp to i64, !dbg !2412
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2412
  %tobool = icmp eq i64 %expval, 0, !dbg !2412
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2412

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2412
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2412
  br label %cond.end, !dbg !2412

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2412
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2412
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2412
  store i8 %conv2, i8* %0, align 1, !dbg !2412
  %conv6 = and i32 %__c, 255, !dbg !2412
  br label %cond.end, !dbg !2412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2412
  ret i32 %cond, !dbg !2413
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2414 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2416, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2417, metadata !DIExpression()), !dbg !2418
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2419
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2419
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2419
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2419
  %cmp = icmp uge i8* %0, %1, !dbg !2419
  %conv1 = zext i1 %cmp to i64, !dbg !2419
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2419
  %tobool = icmp eq i64 %expval, 0, !dbg !2419
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2419

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2419
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2419
  br label %cond.end, !dbg !2419

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2419
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2419
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2419
  store i8 %conv2, i8* %0, align 1, !dbg !2419
  %conv6 = and i32 %__c, 255, !dbg !2419
  br label %cond.end, !dbg !2419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2419
  ret i32 %cond, !dbg !2420
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2421 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2423, metadata !DIExpression()), !dbg !2424
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2425
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2425
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2425
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2425
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2425
  %cmp = icmp uge i8* %1, %2, !dbg !2425
  %conv1 = zext i1 %cmp to i64, !dbg !2425
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2425
  %tobool = icmp eq i64 %expval, 0, !dbg !2425
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2425

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2425
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2425
  br label %cond.end, !dbg !2425

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2425
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2425
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2425
  store i8 %conv4, i8* %1, align 1, !dbg !2425
  %conv6 = and i32 %__c, 255, !dbg !2425
  br label %cond.end, !dbg !2425

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2425
  ret i32 %cond, !dbg !2426
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2427 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2433, metadata !DIExpression()), !dbg !2436
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2434, metadata !DIExpression()), !dbg !2436
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2435, metadata !DIExpression()), !dbg !2436
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2437
  ret i64 %call, !dbg !2438
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2439 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2441, metadata !DIExpression()), !dbg !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2443
  %0 = load i32, i32* %_flags, align 8, !dbg !2443
  %and = lshr i32 %0, 4, !dbg !2443
  %and.lobit = and i32 %and, 1, !dbg !2443
  ret i32 %and.lobit, !dbg !2444
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2447, metadata !DIExpression()), !dbg !2448
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2449
  %0 = load i32, i32* %_flags, align 8, !dbg !2449
  %and = lshr i32 %0, 5, !dbg !2449
  %and.lobit = and i32 %and, 1, !dbg !2449
  ret i32 %and.lobit, !dbg !2450
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2451 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2454, metadata !DIExpression()), !dbg !2455
  %__c.off = add i32 %__c, 128, !dbg !2456
  %0 = icmp ult i32 %__c.off, 384, !dbg !2456
  br i1 %0, label %cond.true, label %cond.end, !dbg !2456

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2457
  %1 = load i32*, i32** %call, align 8, !dbg !2458
  %idxprom = sext i32 %__c to i64, !dbg !2459
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2459
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2459
  br label %cond.end, !dbg !2460

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2460
  ret i32 %cond, !dbg !2461
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2462 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2464, metadata !DIExpression()), !dbg !2465
  %__c.off = add i32 %__c, 128, !dbg !2466
  %0 = icmp ult i32 %__c.off, 384, !dbg !2466
  br i1 %0, label %cond.true, label %cond.end, !dbg !2466

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2467
  %1 = load i32*, i32** %call, align 8, !dbg !2468
  %idxprom = sext i32 %__c to i64, !dbg !2469
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2469
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2469
  br label %cond.end, !dbg !2470

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2470
  ret i32 %cond, !dbg !2471
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2477, metadata !DIExpression()), !dbg !2478
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2479
  %conv = trunc i64 %call to i32, !dbg !2480
  ret i32 %conv, !dbg !2481
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2482 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2486, metadata !DIExpression()), !dbg !2487
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2488
  ret i64 %call, !dbg !2489
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2495, metadata !DIExpression()), !dbg !2496
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2497
  ret i64 %call, !dbg !2498
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2499 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2505, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2506, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2507, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2508, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2509, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 0, metadata !2510, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2511, metadata !DIExpression()), !dbg !2515
  br label %while.cond, !dbg !2516

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2517
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2511, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2510, metadata !DIExpression()), !dbg !2515
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2518
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2516

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2519
  %div = lshr i64 %add, 1, !dbg !2521
  call void @llvm.dbg.value(metadata i64 %div, metadata !2512, metadata !DIExpression()), !dbg !2515
  %mul = mul i64 %div, %__size, !dbg !2522
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2523
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2513, metadata !DIExpression()), !dbg !2515
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2524
  call void @llvm.dbg.value(metadata i32 %call, metadata !2514, metadata !DIExpression()), !dbg !2515
  %cmp1 = icmp slt i32 %call, 0, !dbg !2525
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2527

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2528
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2530

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2531
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2510, metadata !DIExpression()), !dbg !2515
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2515
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2511, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2510, metadata !DIExpression()), !dbg !2515
  br label %while.cond, !dbg !2516, !llvm.loop !2532

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2515
  ret i8* %retval.0, !dbg !2534
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2541, metadata !DIExpression()), !dbg !2542
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2543
  ret double %call, !dbg !2544
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2545 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2554, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2555, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata i32 %base, metadata !2556, metadata !DIExpression()), !dbg !2557
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2558
  ret i64 %call, !dbg !2559
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2560 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2566, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2567, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i32 %base, metadata !2568, metadata !DIExpression()), !dbg !2569
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2570
  ret i64 %call, !dbg !2571
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2572 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2583, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2584, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32 %base, metadata !2585, metadata !DIExpression()), !dbg !2586
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2587
  ret i64 %call, !dbg !2588
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2589 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2593, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2594, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.value(metadata i32 %base, metadata !2595, metadata !DIExpression()), !dbg !2596
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2597
  ret i64 %call, !dbg !2598
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2599 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2639, metadata !DIExpression()), !dbg !2641
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2640, metadata !DIExpression()), !dbg !2641
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2642
  ret i32 %call, !dbg !2643
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2644 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2646, metadata !DIExpression()), !dbg !2648
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2647, metadata !DIExpression()), !dbg !2648
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2649
  ret i32 %call, !dbg !2650
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2651 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2655, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2656, metadata !DIExpression()), !dbg !2657
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2658
  ret i32 %call, !dbg !2659
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2660 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2664, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2665, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2666, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2667, metadata !DIExpression()), !dbg !2668
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2669
  ret i32 %call, !dbg !2670
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2671 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2675, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2676, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2677, metadata !DIExpression()), !dbg !2678
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2677, metadata !DIExpression(DW_OP_deref)), !dbg !2678
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2679
  ret i32 %call, !dbg !2680
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2681 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2685, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2686, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2687, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2688, metadata !DIExpression()), !dbg !2689
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2688, metadata !DIExpression(DW_OP_deref)), !dbg !2689
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2690
  ret i32 %call, !dbg !2691
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2692 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2716, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2717, metadata !DIExpression()), !dbg !2718
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2719
  ret i32 %call, !dbg !2720
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2721 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2723, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2724, metadata !DIExpression()), !dbg !2725
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2726
  ret i32 %call, !dbg !2727
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2728 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2732, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2733, metadata !DIExpression()), !dbg !2734
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2735
  ret i32 %call, !dbg !2736
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2737 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2741, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2742, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2743, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2744, metadata !DIExpression()), !dbg !2745
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2746
  ret i32 %call, !dbg !2747
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @push_function_context() local_unnamed_addr #4 !dbg !2748 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2751
  %cmp = icmp eq %struct.function* %0, null, !dbg !2753
  br i1 %cmp, label %if.then, label %if.end, !dbg !2754

if.then:                                          ; preds = %entry
  tail call void @allocate_struct_function(%union.tree_node* null, i8 zeroext 0) #7, !dbg !2755
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2756
  br label %if.end, !dbg !2755

if.end:                                           ; preds = %if.then, %entry
  %1 = phi %struct.function* [ %.pre, %if.then ], [ %0, %entry ], !dbg !2756
  %call = tail call fastcc %struct.function** @VEC_function_p_heap_safe_push(%struct.VEC_function_p_heap** nonnull @function_context_stack, %struct.function* %1) #7, !dbg !2756
  tail call void @set_cfun(%struct.function* null) #7, !dbg !2757
  ret void, !dbg !2758
}

; Function Attrs: nounwind uwtable
define dso_local void @allocate_struct_function(%union.tree_node* %fndecl, i8 zeroext %abstract_p) local_unnamed_addr #4 !dbg !2759 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !2763, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata i8 %abstract_p, metadata !2764, metadata !DIExpression()), !dbg !2767
  %tobool = icmp eq %union.tree_node* %fndecl, null, !dbg !2768
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2768

cond.true:                                        ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2769
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2769
  %1 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !2768
  br label %cond.end, !dbg !2768

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.tree_type* [ %1, %cond.true ], [ null, %entry ], !dbg !2768
  %cond = phi %union.tree_node* [ %0, %cond.true ], [ null, %entry ], !dbg !2768
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !2766, metadata !DIExpression()), !dbg !2767
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 144) #6, !dbg !2770
  store i8* %call, i8** bitcast (%struct.function** @cfun to i8**), align 8, !dbg !2771
  %function_frequency = getelementptr inbounds i8, i8* %call, i64 136, !dbg !2772
  %3 = bitcast i8* %function_frequency to i32*, !dbg !2772
  %bf.load = load i32, i32* %3, align 8, !dbg !2773
  %bf.clear = and i32 %bf.load, -196609, !dbg !2773
  %bf.set = or i32 %bf.clear, 65536, !dbg !2773
  store i32 %bf.set, i32* %3, align 8, !dbg !2773
  tail call void @init_eh_for_function() #6, !dbg !2774
  %4 = load %struct.machine_function* ()*, %struct.machine_function* ()** @init_machine_status, align 8, !dbg !2775
  %tobool1 = icmp eq %struct.machine_function* ()* %4, null, !dbg !2775
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2777

if.then:                                          ; preds = %cond.end
  %call2 = tail call %struct.machine_function* %4() #6, !dbg !2778
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2779
  %machine = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 10, !dbg !2780
  store %struct.machine_function* %call2, %struct.machine_function** %machine, align 8, !dbg !2781
  br label %if.end, !dbg !2779

if.end:                                           ; preds = %cond.end, %if.then
  tail call void @ix86_call_abi_override(%union.tree_node* %fndecl) #6, !dbg !2782
  tail call fastcc void @invoke_set_current_function_hook(%union.tree_node* %fndecl) #7, !dbg !2783
  br i1 %tobool, label %if.end31, label %if.then3, !dbg !2784

if.then3:                                         ; preds = %if.end
  %6 = load i64, i64* bitcast (%struct.function** @cfun to i64*), align 8, !dbg !2785
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 1, !dbg !2788
  %7 = bitcast %struct.function** %f to i64*, !dbg !2789
  store i64 %6, i64* %7, align 8, !dbg !2789
  %.cast = inttoptr i64 %6 to %struct.function*, !dbg !2790
  %decl = getelementptr inbounds %struct.function, %struct.function* %.cast, i64 0, i32 6, !dbg !2791
  store %union.tree_node* %fndecl, %union.tree_node** %decl, align 8, !dbg !2792
  %call4 = tail call i32 @get_next_funcdef_no() #7, !dbg !2793
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2794
  %funcdef_no = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 14, !dbg !2794
  store i32 %call4, i32* %funcdef_no, align 4, !dbg !2795
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !2765, metadata !DIExpression()), !dbg !2767
  %tobool6 = icmp eq i8 %abstract_p, 0, !dbg !2796
  br i1 %tobool6, label %land.lhs.true, label %if.end13, !dbg !2798

land.lhs.true:                                    ; preds = %if.then3
  %result5 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 3, !dbg !2799
  %9 = load %union.tree_node*, %union.tree_node** %result5, align 8, !dbg !2799
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !2765, metadata !DIExpression()), !dbg !2767
  %call7 = tail call i32 @aggregate_value_p(%union.tree_node* %9, %union.tree_node* nonnull %fndecl) #7, !dbg !2800
  %tobool8 = icmp eq i32 %call7, 0, !dbg !2800
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !2801

if.then9:                                         ; preds = %land.lhs.true
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2802
  %returns_struct = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 20, !dbg !2804
  %bf.load10 = load i32, i32* %returns_struct, align 8, !dbg !2805
  %bf.set12 = or i32 %bf.load10, 67108864, !dbg !2805
  store i32 %bf.set12, i32* %returns_struct, align 8, !dbg !2805
  br label %if.end13, !dbg !2806

if.end13:                                         ; preds = %land.lhs.true, %if.then3, %if.then9
  %tobool14 = icmp eq %union.tree_node* %cond, null, !dbg !2807
  br i1 %tobool14, label %land.end, label %land.lhs.true15, !dbg !2808

land.lhs.true15:                                  ; preds = %if.end13
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 1, !dbg !2809
  %11 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !2809
  %cmp17 = icmp eq %union.tree_node* %11, null, !dbg !2810
  br i1 %cmp17, label %land.end, label %land.rhs, !dbg !2811

land.rhs:                                         ; preds = %land.lhs.true15
  %call20 = tail call %union.tree_node* @tree_last(%union.tree_node* nonnull %11) #6, !dbg !2812
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2812
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2812
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !2813
  %cmp21 = icmp ne %union.tree_node* %13, %14, !dbg !2814
  %phitmp = zext i1 %cmp21 to i32
  %phitmp1 = shl nuw nsw i32 %phitmp, 22
  br label %land.end

land.end:                                         ; preds = %land.lhs.true15, %if.end13, %land.rhs
  %15 = phi i32 [ 0, %land.lhs.true15 ], [ 0, %if.end13 ], [ %phitmp1, %land.rhs ]
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2815
  %stdarg = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 20, !dbg !2816
  %bf.load22 = load i32, i32* %stdarg, align 8, !dbg !2817
  %bf.clear23 = and i32 %bf.load22, -4259840, !dbg !2817
  %bf.set24 = or i32 %bf.clear23, %15, !dbg !2817
  %bf.set30 = or i32 %bf.set24, 65535, !dbg !2818
  store i32 %bf.set30, i32* %stdarg, align 8, !dbg !2818
  br label %if.end31, !dbg !2819

if.end31:                                         ; preds = %if.end, %land.end
  ret void, !dbg !2820
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.function** @VEC_function_p_heap_safe_push(%struct.VEC_function_p_heap** %vec_, %struct.function* %obj_) unnamed_addr #0 !dbg !2821 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_function_p_heap** %vec_, metadata !2827, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.value(metadata %struct.function* %obj_, metadata !2828, metadata !DIExpression()), !dbg !2829
  %call = tail call fastcc i32 @VEC_function_p_heap_reserve(%struct.VEC_function_p_heap** %vec_, i32 1) #7, !dbg !2830
  %0 = load %struct.VEC_function_p_heap*, %struct.VEC_function_p_heap** %vec_, align 8, !dbg !2830
  %tobool = icmp eq %struct.VEC_function_p_heap* %0, null, !dbg !2830
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2830

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_function_p_heap, %struct.VEC_function_p_heap* %0, i64 0, i32 0, !dbg !2830
  br label %cond.end, !dbg !2830

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_function_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2830
  %call1 = tail call fastcc %struct.function** @VEC_function_p_base_quick_push(%struct.VEC_function_p_base* %cond, %struct.function* %obj_) #7, !dbg !2830
  ret %struct.function** %call1, !dbg !2830
}

; Function Attrs: nounwind uwtable
define dso_local void @set_cfun(%struct.function* %new_cfun) local_unnamed_addr #4 !dbg !2831 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %new_cfun, metadata !2835, metadata !DIExpression()), !dbg !2836
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2837
  %cmp = icmp eq %struct.function* %0, %new_cfun, !dbg !2839
  br i1 %cmp, label %if.end, label %if.then, !dbg !2840

if.then:                                          ; preds = %entry
  store %struct.function* %new_cfun, %struct.function** @cfun, align 8, !dbg !2841
  %tobool = icmp eq %struct.function* %new_cfun, null, !dbg !2843
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2843

cond.true:                                        ; preds = %if.then
  %decl = getelementptr inbounds %struct.function, %struct.function* %new_cfun, i64 0, i32 6, !dbg !2844
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2844
  br label %cond.end, !dbg !2843

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ null, %if.then ], !dbg !2843
  tail call fastcc void @invoke_set_current_function_hook(%union.tree_node* %cond) #7, !dbg !2845
  br label %if.end, !dbg !2846

if.end:                                           ; preds = %entry, %cond.end
  ret void, !dbg !2847
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_function_context() local_unnamed_addr #4 !dbg !2848 {
entry:
  %0 = load %struct.VEC_function_p_heap*, %struct.VEC_function_p_heap** @function_context_stack, align 8, !dbg !2851
  %base = getelementptr inbounds %struct.VEC_function_p_heap, %struct.VEC_function_p_heap* %0, i64 0, i32 0, !dbg !2851
  %call = tail call fastcc %struct.function* @VEC_function_p_base_pop(%struct.VEC_function_p_base* %base) #7, !dbg !2851
  call void @llvm.dbg.value(metadata %struct.function* %call, metadata !2850, metadata !DIExpression()), !dbg !2852
  tail call void @set_cfun(%struct.function* %call) #7, !dbg !2853
  %decl = getelementptr inbounds %struct.function, %struct.function* %call, i64 0, i32 6, !dbg !2854
  %1 = bitcast %union.tree_node** %decl to i64*, !dbg !2854
  %2 = load i64, i64* %1, align 8, !dbg !2854
  store i64 %2, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2855
  store i32 0, i32* @virtuals_instantiated, align 4, !dbg !2856
  store i32 1, i32* @generating_concat_p, align 4, !dbg !2857
  ret void, !dbg !2858
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.function* @VEC_function_p_base_pop(%struct.VEC_function_p_base* %vec_) unnamed_addr #0 !dbg !2859 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_function_p_base* %vec_, metadata !2864, metadata !DIExpression()), !dbg !2866
  %num1 = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 0, !dbg !2867
  %0 = load i32, i32* %num1, align 8, !dbg !2867
  %dec = add i32 %0, -1, !dbg !2867
  store i32 %dec, i32* %num1, align 8, !dbg !2867
  %idxprom = zext i32 %dec to i64, !dbg !2867
  %arrayidx = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2867
  %1 = load %struct.function*, %struct.function** %arrayidx, align 8, !dbg !2867
  call void @llvm.dbg.value(metadata %struct.function* %1, metadata !2865, metadata !DIExpression()), !dbg !2866
  ret %struct.function* %1, !dbg !2867
}

; Function Attrs: nounwind uwtable
define dso_local void @free_after_parsing(%struct.function* %f) local_unnamed_addr #4 !dbg !2868 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %f, metadata !2870, metadata !DIExpression()), !dbg !2871
  %language = getelementptr inbounds %struct.function, %struct.function* %f, i64 0, i32 11, !dbg !2872
  store %struct.language_function* null, %struct.language_function** %language, align 8, !dbg !2873
  ret void, !dbg !2874
}

; Function Attrs: nounwind uwtable
define dso_local void @free_after_compilation(%struct.function* %f) local_unnamed_addr #4 !dbg !2875 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %f, metadata !2877, metadata !DIExpression()), !dbg !2878
  store %struct.htab* null, %struct.htab** @prologue_insn_hash, align 8, !dbg !2879
  store %struct.htab* null, %struct.htab** @epilogue_insn_hash, align 8, !dbg !2880
  %0 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !2881
  %tobool = icmp eq i8* %0, null, !dbg !2883
  br i1 %tobool, label %if.end, label %if.then, !dbg !2884

if.then:                                          ; preds = %entry
  tail call void @free(i8* nonnull %0) #6, !dbg !2885
  br label %if.end, !dbg !2885

if.end:                                           ; preds = %entry, %if.then
  %call = tail call i8* @memset(i8* bitcast (%struct.rtl_data* @x_rtl to i8*), i32 0, i64 488) #6, !dbg !2886
  %eh = getelementptr inbounds %struct.function, %struct.function* %f, i64 0, i32 0, !dbg !2887
  store %struct.eh_status* null, %struct.eh_status** %eh, align 8, !dbg !2888
  %machine = getelementptr inbounds %struct.function, %struct.function* %f, i64 0, i32 10, !dbg !2889
  store %struct.machine_function* null, %struct.machine_function** %machine, align 8, !dbg !2890
  %cfg = getelementptr inbounds %struct.function, %struct.function* %f, i64 0, i32 1, !dbg !2891
  store %struct.control_flow_graph* null, %struct.control_flow_graph** %cfg, align 8, !dbg !2892
  store %struct.rtx_def** null, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !2893
  tail call void @insn_locators_free() #6, !dbg !2894
  ret void, !dbg !2895
}

declare dso_local void @free(i8*) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

declare dso_local void @insn_locators_free() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i64 @get_frame_size() local_unnamed_addr #4 !dbg !2896 {
entry:
  %0 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !2899
  %sub = sub nsw i64 0, %0, !dbg !2901
  ret i64 %sub, !dbg !2902
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @frame_offset_overflow(i64 %offset, %union.tree_node* %func) local_unnamed_addr #4 !dbg !2903 {
entry:
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2907, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata %union.tree_node* %func, metadata !2908, metadata !DIExpression()), !dbg !2910
  %sub = sub nsw i64 0, %offset, !dbg !2911
  call void @llvm.dbg.value(metadata i64 %sub, metadata !2909, metadata !DIExpression()), !dbg !2910
  %0 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !2912
  %conv1 = zext i8 %0 to i64, !dbg !2912
  %mul = shl nuw nsw i64 %conv1, 3, !dbg !2912
  %sub4 = add nuw nsw i64 %mul, 4294967295, !dbg !2914
  %sh_prom = and i64 %sub4, 4294967295, !dbg !2915
  %shl = shl i64 1, %sh_prom, !dbg !2915
  %sub5 = add i64 %shl, -256, !dbg !2916
  %cmp = icmp ult i64 %sub5, %sub, !dbg !2917
  br i1 %cmp, label %if.then, label %cleanup, !dbg !2918

if.then:                                          ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %func, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2919
  %1 = load i32, i32* %locus, align 8, !dbg !2919
  tail call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2921
  br label %cleanup, !dbg !2922

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !2910
  ret i8 %retval.0, !dbg !2923
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %size, i32 %align, i8 zeroext %reduce_alignment_ok) local_unnamed_addr #4 !dbg !2924 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2928, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i64 %size, metadata !2929, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 %align, metadata !2930, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i8 %reduce_alignment_ok, metadata !2931, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 0, metadata !2934, metadata !DIExpression()), !dbg !2940
  switch i32 %align, label %if.else12 [
    i32 0, label %if.then
    i32 -1, label %if.then2
    i32 -2, label %if.end15
  ], !dbg !2941

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @get_stack_local_alignment(%union.tree_node* null, i32 %mode) #7, !dbg !2942
  call void @llvm.dbg.value(metadata i32 %call, metadata !2935, metadata !DIExpression()), !dbg !2940
  %div = lshr i32 %call, 3, !dbg !2945
  call void @llvm.dbg.value(metadata i32 %div, metadata !2935, metadata !DIExpression()), !dbg !2940
  br label %if.end15, !dbg !2946

if.then2:                                         ; preds = %entry
  %0 = load i32, i32* @ix86_isa_flags, align 4, !dbg !2947
  %and = and i32 %0, 32, !dbg !2947
  %cmp3 = icmp eq i32 %and, 0, !dbg !2947
  %div4 = select i1 %cmp3, i32 16, i32 32, !dbg !2950
  call void @llvm.dbg.value(metadata i32 %div4, metadata !2935, metadata !DIExpression()), !dbg !2940
  %conv = zext i32 %div4 to i64, !dbg !2951
  %add = add nsw i64 %conv, %size, !dbg !2951
  %sub = add i64 %add, 4294967295, !dbg !2951
  %neg = sub nsw i32 0, %div4, !dbg !2951
  %conv6 = zext i32 %neg to i64, !dbg !2951
  %and7 = and i64 %sub, %conv6, !dbg !2951
  call void @llvm.dbg.value(metadata i64 %and7, metadata !2929, metadata !DIExpression()), !dbg !2940
  br label %if.end15, !dbg !2952

if.else12:                                        ; preds = %entry
  %div13 = sdiv i32 %align, 8, !dbg !2953
  call void @llvm.dbg.value(metadata i32 %div13, metadata !2935, metadata !DIExpression()), !dbg !2940
  br label %if.end15

if.end15:                                         ; preds = %if.then2, %entry, %if.else12, %if.then
  %alignment.2 = phi i32 [ %div, %if.then ], [ %div4, %if.then2 ], [ %div13, %if.else12 ], [ 1, %entry ], !dbg !2955
  %size.addr.1 = phi i64 [ %size, %if.then ], [ %and7, %if.then2 ], [ %size, %if.else12 ], [ %size, %entry ]
  call void @llvm.dbg.value(metadata i64 %size.addr.1, metadata !2929, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 %alignment.2, metadata !2935, metadata !DIExpression()), !dbg !2940
  %mul = shl i32 %alignment.2, 3, !dbg !2956
  call void @llvm.dbg.value(metadata i32 %mul, metadata !2936, metadata !DIExpression()), !dbg !2940
  %1 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !2957
  %sub16 = sub nsw i64 %1, %size.addr.1, !dbg !2957
  store i64 %sub16, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !2957
  %cmp17 = icmp ugt i32 %mul, -2147483648, !dbg !2959
  %alignment.3 = select i1 %cmp17, i32 268435456, i32 %alignment.2, !dbg !2961
  %alignment_in_bits.0 = select i1 %cmp17, i32 -2147483648, i32 %mul, !dbg !2961
  call void @llvm.dbg.value(metadata i32 %alignment_in_bits.0, metadata !2936, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 %alignment.3, metadata !2935, metadata !DIExpression()), !dbg !2940
  %2 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !2962
  %cmp22 = icmp ult i32 %2, %alignment_in_bits.0, !dbg !2966
  br i1 %cmp22, label %if.then24, label %if.end46, !dbg !2967

if.then24:                                        ; preds = %if.end15
  %3 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !2968
  %tobool = icmp eq i8 %3, 0, !dbg !2971
  br i1 %tobool, label %if.then25, label %if.else26, !dbg !2972

if.then25:                                        ; preds = %if.then24
  store i32 %alignment_in_bits.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !2973
  br label %if.end46, !dbg !2974

if.else26:                                        ; preds = %if.then24
  %4 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 47), align 1, !dbg !2975
  %tobool27 = icmp eq i8 %4, 0, !dbg !2975
  br i1 %tobool27, label %cond.end, label %cond.true, !dbg !2975

cond.true:                                        ; preds = %if.else26
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 344, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2975
  br label %cond.end, !dbg !2975

cond.end:                                         ; preds = %if.else26, %cond.true
  %5 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !2977
  %tobool29 = icmp eq i8 %5, 0, !dbg !2979
  br i1 %tobool29, label %if.then30, label %if.end46, !dbg !2980

if.then30:                                        ; preds = %cond.end
  %tobool32 = icmp ne i8 %reduce_alignment_ok, 0, !dbg !2981
  %cmp33 = icmp eq i64 %size.addr.1, 0, !dbg !2981
  %or.cond = or i1 %tobool32, %cmp33, !dbg !2981
  br i1 %or.cond, label %cond.end41, label %lor.lhs.false35, !dbg !2981

lor.lhs.false35:                                  ; preds = %if.then30
  %6 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !2981
  %call36 = tail call i32 @get_mode_alignment(i32 %mode) #6, !dbg !2981
  %cmp37 = icmp ult i32 %6, %call36, !dbg !2981
  br i1 %cmp37, label %cond.true39, label %cond.end41, !dbg !2981

cond.true39:                                      ; preds = %lor.lhs.false35
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2981
  br label %cond.end41, !dbg !2981

cond.end41:                                       ; preds = %lor.lhs.false35, %if.then30, %cond.true39
  %7 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %7, metadata !2936, metadata !DIExpression()), !dbg !2940
  %div43 = lshr i32 %7, 3, !dbg !2984
  call void @llvm.dbg.value(metadata i32 %div43, metadata !2935, metadata !DIExpression()), !dbg !2940
  br label %if.end46, !dbg !2985

if.end46:                                         ; preds = %cond.end, %if.then25, %cond.end41, %if.end15
  %alignment.6 = phi i32 [ %alignment.3, %if.end15 ], [ %alignment.3, %if.then25 ], [ %alignment.3, %cond.end ], [ %div43, %cond.end41 ], !dbg !2986
  %alignment_in_bits.3 = phi i32 [ %alignment_in_bits.0, %if.end15 ], [ %alignment_in_bits.0, %if.then25 ], [ %alignment_in_bits.0, %cond.end ], [ %7, %cond.end41 ], !dbg !2988
  call void @llvm.dbg.value(metadata i32 %alignment_in_bits.3, metadata !2936, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 %alignment.6, metadata !2935, metadata !DIExpression()), !dbg !2940
  %8 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !2989
  %cmp47 = icmp ult i32 %8, %alignment_in_bits.3, !dbg !2991
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2992

if.then49:                                        ; preds = %if.end46
  store i32 %alignment_in_bits.3, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !2993
  br label %if.end50, !dbg !2994

if.end50:                                         ; preds = %if.then49, %if.end46
  %9 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 25), align 8, !dbg !2995
  %cmp51 = icmp ult i32 %9, %alignment_in_bits.3, !dbg !2997
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !2998

if.then53:                                        ; preds = %if.end50
  store i32 %alignment_in_bits.3, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 25), align 8, !dbg !2999
  br label %if.end54, !dbg !3000

if.end54:                                         ; preds = %if.then53, %if.end50
  call void @llvm.dbg.value(metadata i32 0, metadata !2937, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 0, metadata !2939, metadata !DIExpression()), !dbg !2940
  %10 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3001
  %conv64 = zext i32 %alignment.6 to i64, !dbg !3001
  %neg66 = sub nsw i64 0, %conv64, !dbg !3001
  %and67 = and i64 %10, %neg66, !dbg !3001
  store i64 %and67, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3005
  %11 = load i32, i32* @virtuals_instantiated, align 4, !dbg !3006
  %tobool70 = icmp eq i32 %11, 0, !dbg !3006
  br i1 %tobool70, label %if.else77, label %if.then71, !dbg !3008

if.then71:                                        ; preds = %if.end54
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !3009
  %call75 = tail call i64 @trunc_int_for_mode(i64 %and67, i32 16) #6, !dbg !3010
  %call76 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %12, i64 %call75) #6, !dbg !3011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call76, metadata !2933, metadata !DIExpression()), !dbg !2940
  br label %if.end82, !dbg !3012

if.else77:                                        ; preds = %if.end54
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !3013
  %call80 = tail call i64 @trunc_int_for_mode(i64 %and67, i32 16) #6, !dbg !3014
  %call81 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %13, i64 %call80) #6, !dbg !3015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call81, metadata !2933, metadata !DIExpression()), !dbg !2940
  br label %if.end82

if.end82:                                         ; preds = %if.else77, %if.then71
  %addr.0 = phi %struct.rtx_def* [ %call76, %if.then71 ], [ %call81, %if.else77 ], !dbg !3016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !2933, metadata !DIExpression()), !dbg !2940
  %call83 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr.0) #6, !dbg !3017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call83, metadata !2932, metadata !DIExpression()), !dbg !2940
  tail call void @set_mem_align(%struct.rtx_def* %call83, i32 %alignment_in_bits.3) #6, !dbg !3018
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call83, i64 0, i32 0, !dbg !3019
  %bf.load = load i32, i32* %14, align 8, !dbg !3020
  %bf.set = or i32 %bf.load, 33554432, !dbg !3020
  store i32 %bf.set, i32* %14, align 8, !dbg !3020
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3021
  %call84 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call83, %struct.rtx_def* %15) #6, !dbg !3021
  store %struct.rtx_def* %call84, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3022
  %16 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3023
  %17 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3025
  %call85 = tail call zeroext i8 @frame_offset_overflow(i64 %16, %union.tree_node* %17) #7, !dbg !3026
  %tobool86 = icmp eq i8 %call85, 0, !dbg !3026
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !3027

if.then87:                                        ; preds = %if.end82
  store i64 0, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3028
  br label %if.end88, !dbg !3029

if.end88:                                         ; preds = %if.end82, %if.then87
  ret %struct.rtx_def* %call83, !dbg !3030
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_stack_local_alignment(%union.tree_node* %type, i32 %mode) unnamed_addr #4 !dbg !3031 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3035, metadata !DIExpression()), !dbg !3038
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3036, metadata !DIExpression()), !dbg !3038
  %cmp = icmp eq i32 %mode, 1, !dbg !3039
  br i1 %cmp, label %if.then, label %if.else, !dbg !3041

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @ix86_isa_flags, align 4, !dbg !3042
  %and = and i32 %0, 32, !dbg !3042
  %cmp1 = icmp eq i32 %and, 0, !dbg !3042
  %cond = select i1 %cmp1, i32 128, i32 256, !dbg !3042
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3037, metadata !DIExpression()), !dbg !3038
  br label %if.end, !dbg !3043

if.else:                                          ; preds = %entry
  %call = tail call i32 @get_mode_alignment(i32 %mode) #6, !dbg !3044
  call void @llvm.dbg.value(metadata i32 %call, metadata !3037, metadata !DIExpression()), !dbg !3038
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %alignment.0 = phi i32 [ %cond, %if.then ], [ %call, %if.else ], !dbg !3045
  call void @llvm.dbg.value(metadata i32 %alignment.0, metadata !3037, metadata !DIExpression()), !dbg !3038
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !3046
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !3048

if.then2:                                         ; preds = %if.end
  %1 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !3049
  %call3 = tail call %union.tree_node* %1(i32 %mode, i32 0) #6, !dbg !3050
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3035, metadata !DIExpression()), !dbg !3038
  br label %if.end4, !dbg !3051

if.end4:                                          ; preds = %if.end, %if.then2
  %type.addr.0 = phi %union.tree_node* [ %type, %if.end ], [ %call3, %if.then2 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !3035, metadata !DIExpression()), !dbg !3038
  %call5 = tail call i32 @ix86_local_alignment(%union.tree_node* %type.addr.0, i32 %mode, i32 %alignment.0) #6, !dbg !3052
  ret i32 %call5, !dbg !3053
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

declare dso_local i32 @get_mode_alignment(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #1

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assign_stack_local(i32 %mode, i64 %size, i32 %align) local_unnamed_addr #4 !dbg !3054 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3058, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i64 %size, metadata !3059, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i32 %align, metadata !3060, metadata !DIExpression()), !dbg !3061
  %call = tail call %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %size, i32 %align, i8 zeroext 0) #7, !dbg !3062
  ret %struct.rtx_def* %call, !dbg !3063
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assign_stack_temp_for_type(i32 %mode, i64 %size, i32 %keep, %union.tree_node* %type) local_unnamed_addr #4 !dbg !3064 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3068, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata i64 %size, metadata !3069, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata i32 %keep, metadata !3070, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3071, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* null, metadata !3074, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* null, metadata !3075, metadata !DIExpression()), !dbg !3088
  %cmp = icmp eq i64 %size, -1, !dbg !3089
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3089

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 703, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3089
  br label %cond.end, !dbg !3089

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp slt i32 %keep, 2, !dbg !3090
  br i1 %cmp1, label %cond.end4, label %cond.true2, !dbg !3090

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 706, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3090
  br label %cond.end4, !dbg !3090

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %call = tail call fastcc i32 @get_stack_local_alignment(%union.tree_node* %type, i32 %mode) #7, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %call, metadata !3072, metadata !DIExpression()), !dbg !3088
  %0 = load i32, i32* @virtuals_instantiated, align 4, !dbg !3092
  %tobool = icmp eq i32 %0, 0, !dbg !3092
  br i1 %tobool, label %if.then, label %if.end39, !dbg !3094

if.then:                                          ; preds = %cond.end4
  br label %for.cond, !dbg !3095

for.cond:                                         ; preds = %for.inc, %if.then
  %p.0.in = phi %struct.temp_slot** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20), %if.then ], [ %next, %for.inc ]
  %best_p.0 = phi %struct.temp_slot* [ null, %if.then ], [ %best_p.1, %for.inc ], !dbg !3088
  %p.0 = load %struct.temp_slot*, %struct.temp_slot** %p.0.in, align 8, !dbg !3098
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.0, metadata !3074, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3073, metadata !DIExpression()), !dbg !3088
  %tobool6 = icmp eq %struct.temp_slot* %p.0, null, !dbg !3099
  br i1 %tobool6, label %if.end39.loopexit, label %for.body, !dbg !3099

for.body:                                         ; preds = %for.cond
  %align7 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 5, !dbg !3100
  %1 = load i32, i32* %align7, align 8, !dbg !3100
  %cmp8 = icmp ult i32 %1, %call, !dbg !3104
  br i1 %cmp8, label %for.inc, label %land.lhs.true, !dbg !3105

land.lhs.true:                                    ; preds = %for.body
  %size9 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 3, !dbg !3106
  %2 = load i64, i64* %size9, align 8, !dbg !3106
  %cmp10 = icmp slt i64 %2, %size, !dbg !3107
  br i1 %cmp10, label %for.inc, label %land.lhs.true11, !dbg !3108

land.lhs.true11:                                  ; preds = %land.lhs.true
  %slot12 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 2, !dbg !3109
  %3 = bitcast %struct.rtx_def** %slot12 to i32**, !dbg !3109
  %4 = load i32*, i32** %3, align 8, !dbg !3109
  %bf.load = load i32, i32* %4, align 8, !dbg !3109
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3109
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3109
  %cmp13 = icmp eq i32 %bf.clear, %mode, !dbg !3110
  br i1 %cmp13, label %land.lhs.true14, label %for.inc, !dbg !3111

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %type15 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 4, !dbg !3112
  %5 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !3112
  %call16 = tail call i32 @objects_must_conflict_p(%union.tree_node* %5, %union.tree_node* %type) #6, !dbg !3113
  %tobool17 = icmp eq i32 %call16, 0, !dbg !3113
  br i1 %tobool17, label %for.inc, label %land.lhs.true18, !dbg !3114

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %cmp19 = icmp eq %struct.temp_slot* %best_p.0, null, !dbg !3115
  br i1 %cmp19, label %if.then31, label %lor.lhs.false, !dbg !3116

lor.lhs.false:                                    ; preds = %land.lhs.true18
  %size20 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.0, i64 0, i32 3, !dbg !3117
  %6 = load i64, i64* %size20, align 8, !dbg !3117
  %7 = load i64, i64* %size9, align 8, !dbg !3118
  %cmp22 = icmp sgt i64 %6, %7, !dbg !3119
  br i1 %cmp22, label %if.then31, label %lor.lhs.false23, !dbg !3120

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %cmp26 = icmp eq i64 %6, %7, !dbg !3121
  br i1 %cmp26, label %land.lhs.true27, label %for.inc, !dbg !3122

land.lhs.true27:                                  ; preds = %lor.lhs.false23
  %align28 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.0, i64 0, i32 5, !dbg !3123
  %8 = load i32, i32* %align28, align 8, !dbg !3123
  %9 = load i32, i32* %align7, align 8, !dbg !3124
  %cmp30 = icmp ugt i32 %8, %9, !dbg !3125
  br i1 %cmp30, label %if.then31, label %for.inc, !dbg !3126

if.then31:                                        ; preds = %land.lhs.true27, %lor.lhs.false, %land.lhs.true18
  %10 = load i32, i32* %align7, align 8, !dbg !3127
  %cmp33 = icmp eq i32 %10, %call, !dbg !3130
  br i1 %cmp33, label %land.lhs.true34, label %for.inc, !dbg !3131

land.lhs.true34:                                  ; preds = %if.then31
  %11 = load i64, i64* %size9, align 8, !dbg !3132
  %cmp36 = icmp eq i64 %11, %size, !dbg !3133
  br i1 %cmp36, label %if.then37, label %for.inc, !dbg !3134

if.then37:                                        ; preds = %land.lhs.true34
  %p.0.lcssa12 = phi %struct.temp_slot* [ %p.0, %land.lhs.true34 ], !dbg !3098
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0.lcssa12, metadata !3075, metadata !DIExpression()), !dbg !3088
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* nonnull %p.0.lcssa12, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3135
  call void @llvm.dbg.value(metadata %struct.temp_slot* null, metadata !3074, metadata !DIExpression()), !dbg !3088
  br label %if.end39, !dbg !3137

for.inc:                                          ; preds = %land.lhs.true14, %land.lhs.true, %for.body, %land.lhs.true11, %lor.lhs.false23, %land.lhs.true27, %land.lhs.true34, %if.then31
  %best_p.1 = phi %struct.temp_slot* [ %best_p.0, %land.lhs.true27 ], [ %best_p.0, %lor.lhs.false23 ], [ %best_p.0, %land.lhs.true14 ], [ %best_p.0, %land.lhs.true11 ], [ %best_p.0, %land.lhs.true ], [ %best_p.0, %for.body ], [ %p.0, %land.lhs.true34 ], [ %p.0, %if.then31 ], !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.1, metadata !3074, metadata !DIExpression()), !dbg !3088
  %next = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3138
  br label %for.cond, !dbg !3139, !llvm.loop !3140

if.end39.loopexit:                                ; preds = %for.cond
  %best_p.0.lcssa = phi %struct.temp_slot* [ %best_p.0, %for.cond ], !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.0.lcssa, metadata !3074, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.0.lcssa, metadata !3074, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.0.lcssa, metadata !3074, metadata !DIExpression()), !dbg !3088
  br label %if.end39, !dbg !3142

if.end39:                                         ; preds = %if.end39.loopexit, %cond.end4, %if.then37
  %best_p.3 = phi %struct.temp_slot* [ null, %cond.end4 ], [ null, %if.then37 ], [ %best_p.0.lcssa, %if.end39.loopexit ], !dbg !3088
  %selected.1 = phi %struct.temp_slot* [ null, %cond.end4 ], [ %p.0.lcssa12, %if.then37 ], [ null, %if.end39.loopexit ], !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %selected.1, metadata !3075, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.3, metadata !3074, metadata !DIExpression()), !dbg !3088
  %tobool40 = icmp eq %struct.temp_slot* %best_p.3, null, !dbg !3142
  br i1 %tobool40, label %if.end78, label %if.then41, !dbg !3143

if.then41:                                        ; preds = %if.end39
  call void @llvm.dbg.value(metadata %struct.temp_slot* %best_p.3, metadata !3075, metadata !DIExpression()), !dbg !3088
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* nonnull %best_p.3, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3144
  %slot42 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 2, !dbg !3145
  %12 = bitcast %struct.rtx_def** %slot42 to i32**, !dbg !3145
  %13 = load i32*, i32** %12, align 8, !dbg !3145
  %bf.load43 = load i32, i32* %13, align 8, !dbg !3145
  %bf.clear45 = and i32 %bf.load43, 16711680, !dbg !3145
  %cmp46 = icmp eq i32 %bf.clear45, 65536, !dbg !3146
  br i1 %cmp46, label %if.then47, label %if.end78, !dbg !3147

if.then47:                                        ; preds = %if.then41
  %align48 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 5, !dbg !3148
  %14 = load i32, i32* %align48, align 8, !dbg !3148
  %div = lshr i32 %14, 3, !dbg !3149
  call void @llvm.dbg.value(metadata i32 %div, metadata !3079, metadata !DIExpression()), !dbg !3150
  %conv = zext i32 %div to i64, !dbg !3151
  %add = add nsw i64 %conv, %size, !dbg !3151
  %sub = add nsw i64 %add, -1, !dbg !3151
  %neg = sub nsw i32 0, %div, !dbg !3151
  %conv50 = sext i32 %neg to i64, !dbg !3151
  %and = and i64 %sub, %conv50, !dbg !3151
  call void @llvm.dbg.value(metadata i64 %and, metadata !3084, metadata !DIExpression()), !dbg !3150
  %size51 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 3, !dbg !3152
  %15 = load i64, i64* %size51, align 8, !dbg !3152
  %sub52 = sub nsw i64 %15, %and, !dbg !3154
  %cmp54 = icmp slt i64 %sub52, %conv, !dbg !3155
  br i1 %cmp54, label %if.end78, label %if.then56, !dbg !3156

if.then56:                                        ; preds = %if.then47
  %call57 = tail call i8* @ggc_alloc_stat(i64 72) #6, !dbg !3157
  %16 = bitcast i8* %call57 to %struct.temp_slot*, !dbg !3157
  call void @llvm.dbg.value(metadata %struct.temp_slot* %16, metadata !3073, metadata !DIExpression()), !dbg !3088
  %17 = getelementptr inbounds i8, i8* %call57, i64 45, !dbg !3159
  store i8 0, i8* %17, align 1, !dbg !3160
  %18 = getelementptr inbounds i8, i8* %call57, i64 44, !dbg !3161
  store i8 0, i8* %18, align 4, !dbg !3162
  %19 = load i64, i64* %size51, align 8, !dbg !3163
  %sub59 = sub nsw i64 %19, %and, !dbg !3164
  %size60 = getelementptr inbounds i8, i8* %call57, i64 24, !dbg !3165
  %20 = bitcast i8* %size60 to i64*, !dbg !3165
  store i64 %sub59, i64* %20, align 8, !dbg !3166
  %base_offset = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 10, !dbg !3167
  %21 = load i64, i64* %base_offset, align 8, !dbg !3167
  %add61 = add nsw i64 %21, %and, !dbg !3168
  %base_offset62 = getelementptr inbounds i8, i8* %call57, i64 56, !dbg !3169
  %22 = bitcast i8* %base_offset62 to i64*, !dbg !3169
  store i64 %add61, i64* %22, align 8, !dbg !3170
  %full_size = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 11, !dbg !3171
  %23 = load i64, i64* %full_size, align 8, !dbg !3171
  %sub63 = sub nsw i64 %23, %and, !dbg !3172
  %full_size64 = getelementptr inbounds i8, i8* %call57, i64 64, !dbg !3173
  %24 = bitcast i8* %full_size64 to i64*, !dbg !3173
  store i64 %sub63, i64* %24, align 8, !dbg !3174
  %25 = load %struct.rtx_def*, %struct.rtx_def** %slot42, align 8, !dbg !3175
  %call66 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %25, i32 1, i64 %and, i32 0, i32 1) #6, !dbg !3175
  %slot67 = getelementptr inbounds i8, i8* %call57, i64 16, !dbg !3176
  %26 = bitcast i8* %slot67 to %struct.rtx_def**, !dbg !3176
  store %struct.rtx_def* %call66, %struct.rtx_def** %26, align 8, !dbg !3177
  %27 = load i32, i32* %align48, align 8, !dbg !3178
  %align69 = getelementptr inbounds i8, i8* %call57, i64 40, !dbg !3179
  %28 = bitcast i8* %align69 to i32*, !dbg !3179
  store i32 %27, i32* %28, align 8, !dbg !3180
  %type70 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %best_p.3, i64 0, i32 4, !dbg !3181
  %29 = bitcast %union.tree_node** %type70 to i64*, !dbg !3181
  %30 = load i64, i64* %29, align 8, !dbg !3181
  %type71 = getelementptr inbounds i8, i8* %call57, i64 32, !dbg !3182
  %31 = bitcast i8* %type71 to i64*, !dbg !3183
  store i64 %30, i64* %31, align 8, !dbg !3183
  tail call fastcc void @insert_slot_to_list(%struct.temp_slot* %16, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3184
  %32 = load %struct.rtx_def*, %struct.rtx_def** %26, align 8, !dbg !3185
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3185
  %call73 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %32, %struct.rtx_def* %33) #6, !dbg !3185
  store %struct.rtx_def* %call73, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3186
  store i64 %and, i64* %size51, align 8, !dbg !3187
  store i64 %and, i64* %full_size, align 8, !dbg !3188
  br label %if.end78, !dbg !3189

if.end78:                                         ; preds = %if.then47, %if.end39, %if.then41, %if.then56
  %selected.2 = phi %struct.temp_slot* [ %selected.1, %if.end39 ], [ %best_p.3, %if.then47 ], [ %best_p.3, %if.then56 ], [ %best_p.3, %if.then41 ], !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %selected.2, metadata !3075, metadata !DIExpression()), !dbg !3088
  %cmp79 = icmp eq %struct.temp_slot* %selected.2, null, !dbg !3190
  br i1 %cmp79, label %if.then81, label %if.end119, !dbg !3191

if.then81:                                        ; preds = %if.end78
  %34 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3192
  call void @llvm.dbg.value(metadata i64 %34, metadata !3085, metadata !DIExpression()), !dbg !3193
  %call82 = tail call i8* @ggc_alloc_stat(i64 72) #6, !dbg !3194
  %35 = bitcast i8* %call82 to %struct.temp_slot*, !dbg !3194
  call void @llvm.dbg.value(metadata %struct.temp_slot* %35, metadata !3073, metadata !DIExpression()), !dbg !3088
  %cmp83 = icmp eq i32 %mode, 1, !dbg !3195
  br i1 %cmp83, label %lor.lhs.false85, label %cond.end94, !dbg !3195

lor.lhs.false85:                                  ; preds = %if.then81
  %36 = load i32, i32* @ix86_isa_flags, align 4, !dbg !3195
  %and86 = and i32 %36, 32, !dbg !3195
  %cmp87 = icmp eq i32 %and86, 0, !dbg !3195
  %cond89 = select i1 %cmp87, i32 128, i32 256, !dbg !3195
  %cmp90 = icmp eq i32 %call, %cond89, !dbg !3195
  br i1 %cmp90, label %cond.end94, label %cond.true92, !dbg !3195

cond.true92:                                      ; preds = %lor.lhs.false85
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 788, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3195
  br label %cond.end94, !dbg !3195

cond.end94:                                       ; preds = %if.then81, %lor.lhs.false85, %cond.true92
  br i1 %cmp83, label %cond.true98, label %cond.end109, !dbg !3196

cond.true98:                                      ; preds = %cond.end94
  %div99 = sdiv i32 %call, 8, !dbg !3197
  %conv100 = sext i32 %div99 to i64, !dbg !3197
  %add101 = add nsw i64 %conv100, %size, !dbg !3197
  %sub102 = add nsw i64 %add101, -1, !dbg !3197
  %neg105 = sdiv i32 %call, -8, !dbg !3197
  %conv106 = sext i32 %neg105 to i64, !dbg !3197
  %and107 = and i64 %sub102, %conv106, !dbg !3197
  br label %cond.end109, !dbg !3196

cond.end109:                                      ; preds = %cond.end94, %cond.true98
  %cond110 = phi i64 [ %and107, %cond.true98 ], [ %size, %cond.end94 ], !dbg !3196
  %call111 = tail call %struct.rtx_def* @assign_stack_local(i32 %mode, i64 %cond110, i32 %call) #7, !dbg !3198
  %slot112 = getelementptr inbounds i8, i8* %call82, i64 16, !dbg !3199
  %37 = bitcast i8* %slot112 to %struct.rtx_def**, !dbg !3199
  store %struct.rtx_def* %call111, %struct.rtx_def** %37, align 8, !dbg !3200
  %align113 = getelementptr inbounds i8, i8* %call82, i64 40, !dbg !3201
  %38 = bitcast i8* %align113 to i32*, !dbg !3201
  store i32 %call, i32* %38, align 8, !dbg !3202
  %39 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3203
  %sub114 = sub nsw i64 %34, %39, !dbg !3205
  %size115 = getelementptr inbounds i8, i8* %call82, i64 24, !dbg !3206
  %40 = bitcast i8* %size115 to i64*, !dbg !3206
  store i64 %sub114, i64* %40, align 8, !dbg !3207
  %41 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3208
  %base_offset116 = getelementptr inbounds i8, i8* %call82, i64 56, !dbg !3211
  %42 = bitcast i8* %base_offset116 to i64*, !dbg !3211
  store i64 %41, i64* %42, align 8, !dbg !3212
  %43 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3213
  %sub117 = sub nsw i64 %34, %43, !dbg !3214
  %full_size118 = getelementptr inbounds i8, i8* %call82, i64 64, !dbg !3215
  %44 = bitcast i8* %full_size118 to i64*, !dbg !3215
  store i64 %sub117, i64* %44, align 8, !dbg !3216
  call void @llvm.dbg.value(metadata %struct.temp_slot* %35, metadata !3075, metadata !DIExpression()), !dbg !3088
  br label %if.end119, !dbg !3217

if.end119:                                        ; preds = %cond.end109, %if.end78
  %selected.3 = phi %struct.temp_slot* [ %35, %cond.end109 ], [ %selected.2, %if.end78 ], !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %selected.3, metadata !3075, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata %struct.temp_slot* %selected.3, metadata !3073, metadata !DIExpression()), !dbg !3088
  %in_use120 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 6, !dbg !3218
  store i8 1, i8* %in_use120, align 4, !dbg !3219
  %addr_taken121 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 7, !dbg !3220
  store i8 0, i8* %addr_taken121, align 1, !dbg !3221
  %type122 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 4, !dbg !3222
  store %union.tree_node* %type, %union.tree_node** %type122, align 8, !dbg !3223
  %45 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3224
  %level = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 8, !dbg !3225
  store i32 %45, i32* %level, align 8, !dbg !3226
  %keep123 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 9, !dbg !3227
  store i32 %keep, i32* %keep123, align 4, !dbg !3228
  %call125 = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %45) #7, !dbg !3229
  call void @llvm.dbg.value(metadata %struct.temp_slot** %call125, metadata !3076, metadata !DIExpression()), !dbg !3088
  tail call fastcc void @insert_slot_to_list(%struct.temp_slot* %selected.3, %struct.temp_slot** %call125) #7, !dbg !3230
  %slot126 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %selected.3, i64 0, i32 2, !dbg !3231
  %46 = load %struct.rtx_def*, %struct.rtx_def** %slot126, align 8, !dbg !3231
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3231
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3231
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3231
  tail call fastcc void @insert_temp_slot_address(%struct.rtx_def* %47, %struct.temp_slot* %selected.3) #7, !dbg !3232
  %48 = load %struct.rtx_def*, %struct.rtx_def** %slot126, align 8, !dbg !3233
  %arrayidx130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3233
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !3233
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !3233
  %call132 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %49) #6, !dbg !3234
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call132, metadata !3078, metadata !DIExpression()), !dbg !3088
  %50 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3235
  %call133 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call132, %struct.rtx_def* %50) #6, !dbg !3235
  store %struct.rtx_def* %call133, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !3236
  %tobool134 = icmp eq %union.tree_node* %type, null, !dbg !3237
  br i1 %tobool134, label %cond.end138, label %cond.true135, !dbg !3237

cond.true135:                                     ; preds = %if.end119
  %call136 = tail call i32 @get_alias_set(%union.tree_node* nonnull %type) #6, !dbg !3238
  br label %cond.end138, !dbg !3237

cond.end138:                                      ; preds = %if.end119, %cond.true135
  %cond139 = phi i32 [ %call136, %cond.true135 ], [ 0, %if.end119 ], !dbg !3237
  tail call void @set_mem_alias_set(%struct.rtx_def* %call132, i32 %cond139) #6, !dbg !3239
  tail call void @set_mem_align(%struct.rtx_def* %call132, i32 %call) #6, !dbg !3240
  br i1 %tobool134, label %cond.end138.if.end194_crit_edge, label %if.then142, !dbg !3241

cond.end138.if.end194_crit_edge:                  ; preds = %cond.end138
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call132, i64 0, i32 0, !dbg !3088
  %bf.load195.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3242
  br label %if.end194, !dbg !3241

if.then142:                                       ; preds = %cond.end138
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3243
  %bf.load143 = load i64, i64* %51, align 8, !dbg !3243
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call132, i64 0, i32 0, !dbg !3246
  %bf.load146 = load i32, i32* %52, align 8, !dbg !3247
  %bf.load143.tr = trunc i64 %bf.load143 to i32, !dbg !3247
  %53 = shl i32 %bf.load143.tr, 8, !dbg !3247
  %bf.shl = and i32 %53, 134217728, !dbg !3247
  %bf.clear147 = and i32 %bf.load146, -134217729, !dbg !3247
  %bf.set = or i32 %bf.clear147, %bf.shl, !dbg !3247
  store i32 %bf.set, i32* %52, align 8, !dbg !3247
  %bf.load149 = load i64, i64* %51, align 8, !dbg !3248
  %bf.cast1512 = and i64 %bf.load149, 65535, !dbg !3248
  %cmp152 = icmp eq i64 %bf.cast1512, 15, !dbg !3248
  br i1 %cmp152, label %if.then182, label %lor.lhs.false154, !dbg !3248

lor.lhs.false154:                                 ; preds = %if.then142
  %cmp159 = icmp eq i64 %bf.cast1512, 16, !dbg !3248
  br i1 %cmp159, label %if.then182, label %lor.lhs.false161, !dbg !3248

lor.lhs.false161:                                 ; preds = %lor.lhs.false154
  %cmp166 = icmp eq i64 %bf.cast1512, 17, !dbg !3248
  br i1 %cmp166, label %if.then182, label %lor.lhs.false168, !dbg !3248

lor.lhs.false168:                                 ; preds = %lor.lhs.false161
  %cmp173 = icmp eq i64 %bf.cast1512, 18, !dbg !3248
  br i1 %cmp173, label %if.then182, label %lor.lhs.false175, !dbg !3248

lor.lhs.false175:                                 ; preds = %lor.lhs.false168
  %cmp180 = icmp eq i64 %bf.cast1512, 13, !dbg !3248
  br i1 %cmp180, label %if.then182, label %if.else, !dbg !3251

if.then182:                                       ; preds = %lor.lhs.false175, %lor.lhs.false168, %lor.lhs.false161, %lor.lhs.false154, %if.then142
  %bf.set185 = and i32 %bf.set, 1879048191, !dbg !3252
  %bf.clear187 = or i32 %bf.set185, 268435456, !dbg !3252
  store i32 %bf.clear187, i32* %52, align 8, !dbg !3252
  br label %if.end194, !dbg !3252

if.else:                                          ; preds = %lor.lhs.false175
  %bf.clear191 = and i32 %bf.set, 1879048191, !dbg !3254
  %bf.set192 = or i32 %bf.clear191, -2147483648, !dbg !3254
  store i32 %bf.set192, i32* %52, align 8, !dbg !3254
  br label %if.end194

if.end194:                                        ; preds = %cond.end138.if.end194_crit_edge, %if.then182, %if.else
  %bf.load195 = phi i32 [ %bf.load195.pre, %cond.end138.if.end194_crit_edge ], [ %bf.clear187, %if.then182 ], [ %bf.set192, %if.else ], !dbg !3242
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call132, i64 0, i32 0, !dbg !3256
  %bf.set197 = or i32 %bf.load195, 33554432, !dbg !3242
  store i32 %bf.set197, i32* %54, align 8, !dbg !3242
  ret %struct.rtx_def* %call132, !dbg !3257
}

declare dso_local i32 @objects_must_conflict_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @cut_slot_from_list(%struct.temp_slot* %temp, %struct.temp_slot** %list) unnamed_addr #4 !dbg !3258 {
entry:
  call void @llvm.dbg.value(metadata %struct.temp_slot* %temp, metadata !3262, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.temp_slot** %list, metadata !3263, metadata !DIExpression()), !dbg !3264
  %next = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 0, !dbg !3265
  %0 = load %struct.temp_slot*, %struct.temp_slot** %next, align 8, !dbg !3265
  %tobool = icmp eq %struct.temp_slot* %0, null, !dbg !3267
  br i1 %tobool, label %entry.if.end_crit_edge, label %if.then, !dbg !3268

entry.if.end_crit_edge:                           ; preds = %entry
  %1 = ptrtoint %struct.temp_slot* %0 to i64, !dbg !3268
  br label %if.end, !dbg !3268

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 1, !dbg !3269
  %2 = bitcast %struct.temp_slot** %prev to i64*, !dbg !3269
  %3 = load i64, i64* %2, align 8, !dbg !3269
  %prev2 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %0, i64 0, i32 1, !dbg !3270
  %4 = bitcast %struct.temp_slot** %prev2 to i64*, !dbg !3271
  store i64 %3, i64* %4, align 8, !dbg !3271
  %.phi.trans.insert = bitcast %struct.temp_slot* %temp to i64*, !dbg !3272
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3272
  br label %if.end, !dbg !3274

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %5 = phi i64 [ %1, %entry.if.end_crit_edge ], [ %.pre, %if.then ], !dbg !3272
  %prev3 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 1, !dbg !3275
  %6 = load %struct.temp_slot*, %struct.temp_slot** %prev3, align 8, !dbg !3275
  %tobool4 = icmp eq %struct.temp_slot* %6, null, !dbg !3276
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !3277

if.then5:                                         ; preds = %if.end
  %7 = bitcast %struct.temp_slot* %6 to i64*, !dbg !3277
  store i64 %5, i64* %7, align 8, !dbg !3278
  br label %if.end10, !dbg !3279

if.else:                                          ; preds = %if.end
  %8 = bitcast %struct.temp_slot** %list to i64*, !dbg !3280
  store i64 %5, i64* %8, align 8, !dbg !3280
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then5
  store %struct.temp_slot* null, %struct.temp_slot** %next, align 8, !dbg !3281
  store %struct.temp_slot* null, %struct.temp_slot** %prev3, align 8, !dbg !3282
  ret void, !dbg !3283
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_slot_to_list(%struct.temp_slot* %temp, %struct.temp_slot** %list) unnamed_addr #4 !dbg !3284 {
entry:
  call void @llvm.dbg.value(metadata %struct.temp_slot* %temp, metadata !3286, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata %struct.temp_slot** %list, metadata !3287, metadata !DIExpression()), !dbg !3288
  %0 = bitcast %struct.temp_slot** %list to i64*, !dbg !3289
  %1 = load i64, i64* %0, align 8, !dbg !3289
  %2 = bitcast %struct.temp_slot* %temp to i64*, !dbg !3290
  store i64 %1, i64* %2, align 8, !dbg !3290
  %3 = load %struct.temp_slot*, %struct.temp_slot** %list, align 8, !dbg !3291
  %tobool = icmp eq %struct.temp_slot* %3, null, !dbg !3291
  br i1 %tobool, label %if.end, label %if.then, !dbg !3293

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %3, i64 0, i32 1, !dbg !3294
  store %struct.temp_slot* %temp, %struct.temp_slot** %prev, align 8, !dbg !3295
  br label %if.end, !dbg !3296

if.end:                                           ; preds = %entry, %if.then
  %prev1 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 1, !dbg !3297
  store %struct.temp_slot* null, %struct.temp_slot** %prev1, align 8, !dbg !3298
  store %struct.temp_slot* %temp, %struct.temp_slot** %list, align 8, !dbg !3299
  ret void, !dbg !3300
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.temp_slot** @temp_slots_at_level(i32 %level) unnamed_addr #4 !dbg !3301 {
entry:
  call void @llvm.dbg.value(metadata i32 %level, metadata !3305, metadata !DIExpression()), !dbg !3306
  %0 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !3307
  %base = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %0, i64 0, i32 0, !dbg !3307
  %call = tail call fastcc i32 @VEC_temp_slot_p_base_length(%struct.VEC_temp_slot_p_base* %base) #7, !dbg !3307
  %cmp = icmp sgt i32 %call, %level, !dbg !3309
  br i1 %cmp, label %if.end, label %if.then, !dbg !3310

if.then:                                          ; preds = %entry
  %add = add nsw i32 %level, 1, !dbg !3311
  tail call fastcc void @VEC_temp_slot_p_gc_safe_grow_cleared(%struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), i32 %add) #7, !dbg !3311
  br label %if.end, !dbg !3311

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !3312
  %base3 = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %1, i64 0, i32 0, !dbg !3312
  %call7 = tail call fastcc %struct.temp_slot** @VEC_temp_slot_p_base_address(%struct.VEC_temp_slot_p_base* %base3) #7, !dbg !3312
  %idxprom = sext i32 %level to i64, !dbg !3312
  %arrayidx = getelementptr inbounds %struct.temp_slot*, %struct.temp_slot** %call7, i64 %idxprom, !dbg !3312
  ret %struct.temp_slot** %arrayidx, !dbg !3313
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_temp_slot_address(%struct.rtx_def* %address, %struct.temp_slot* %temp_slot) unnamed_addr #4 !dbg !3314 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address, metadata !3318, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata %struct.temp_slot* %temp_slot, metadata !3319, metadata !DIExpression()), !dbg !3322
  %call = tail call i8* @ggc_alloc_stat(i64 24) #6, !dbg !3323
  %0 = bitcast i8* %call to %struct.temp_slot_address_entry*, !dbg !3323
  call void @llvm.dbg.value(metadata %struct.temp_slot_address_entry* %0, metadata !3321, metadata !DIExpression()), !dbg !3322
  %address1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3324
  %1 = bitcast i8* %address1 to %struct.rtx_def**, !dbg !3324
  store %struct.rtx_def* %address, %struct.rtx_def** %1, align 8, !dbg !3325
  %temp_slot2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !3326
  %2 = bitcast i8* %temp_slot2 to %struct.temp_slot**, !dbg !3326
  store %struct.temp_slot* %temp_slot, %struct.temp_slot** %2, align 8, !dbg !3327
  %call3 = tail call fastcc i32 @temp_slot_address_compute_hash(%struct.temp_slot_address_entry* %0) #7, !dbg !3328
  %hash = bitcast i8* %call to i32*, !dbg !3329
  store i32 %call3, i32* %hash, align 8, !dbg !3330
  %3 = load %struct.htab*, %struct.htab** @temp_slot_address_table, align 8, !dbg !3331
  %call5 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %3, i8* %call, i32 %call3, i32 1) #6, !dbg !3332
  call void @llvm.dbg.value(metadata i8** %call5, metadata !3320, metadata !DIExpression()), !dbg !3322
  store i8* %call, i8** %call5, align 8, !dbg !3333
  ret void, !dbg !3334
}

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assign_stack_temp(i32 %mode, i64 %size, i32 %keep) local_unnamed_addr #4 !dbg !3335 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3337, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i64 %size, metadata !3338, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 %keep, metadata !3339, metadata !DIExpression()), !dbg !3340
  %call = tail call %struct.rtx_def* @assign_stack_temp_for_type(i32 %mode, i64 %size, i32 %keep, %union.tree_node* null) #7, !dbg !3341
  ret %struct.rtx_def* %call, !dbg !3342
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assign_temp(%union.tree_node* %type_or_decl, i32 %keep, i32 %memory_required, i32 %dont_promote) local_unnamed_addr #4 !dbg !3343 {
entry:
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %type_or_decl, metadata !3347, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i32 %keep, metadata !3348, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i32 %memory_required, metadata !3349, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i32 %dont_promote, metadata !3350, metadata !DIExpression()), !dbg !3359
  %0 = bitcast i32* %unsignedp to i8*, !dbg !3360
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3360
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_or_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3361
  %bf.load = load i64, i64* %1, align 8, !dbg !3361
  %bf.cast = and i64 %bf.load, 65535, !dbg !3361
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3361
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3361
  %cmp = icmp eq i32 %2, 3, !dbg !3361
  br i1 %cmp, label %if.then, label %if.end, !dbg !3363

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %type_or_decl, metadata !3352, metadata !DIExpression()), !dbg !3359
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_or_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3364
  %3 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3364
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3351, metadata !DIExpression()), !dbg !3359
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3359
  %bf.load3.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3365
  br label %if.end, !dbg !3366

if.end:                                           ; preds = %entry, %if.then
  %bf.load3 = phi i64 [ %bf.load3.pre, %if.then ], [ %bf.load, %entry ], !dbg !3365
  %type.0 = phi %union.tree_node* [ %3, %if.then ], [ %type_or_decl, %entry ], !dbg !3367
  %decl.0 = phi %union.tree_node* [ %type_or_decl, %if.then ], [ null, %entry ], !dbg !3367
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !3352, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !3351, metadata !DIExpression()), !dbg !3359
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !3365
  %cmp6 = icmp eq i64 %bf.cast52, 14, !dbg !3365
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3365

cond.true:                                        ; preds = %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3365
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type.0) #6, !dbg !3365
  %bf.load12.pre = load i64, i64* %4, align 8, !dbg !3368
  br label %cond.end, !dbg !3365

cond.false:                                       ; preds = %if.end
  %type7 = bitcast %union.tree_node* %type.0 to %struct.tree_type*, !dbg !3365
  %mode8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !3365
  %bf.load9 = load i32, i32* %mode8, align 4, !dbg !3365
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !3365
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !3365
  br label %cond.end, !dbg !3365

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load12 = phi i64 [ %bf.load12.pre, %cond.true ], [ %bf.load3, %cond.false ], !dbg !3368
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear10, %cond.false ], !dbg !3365
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3353, metadata !DIExpression()), !dbg !3359
  %bf.lshr13 = lshr i64 %bf.load12, 21, !dbg !3368
  %5 = trunc i64 %bf.lshr13 to i32, !dbg !3368
  %bf.cast15 = and i32 %5, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !3354, metadata !DIExpression()), !dbg !3359
  store i32 %bf.cast15, i32* %unsignedp, align 4, !dbg !3369
  %cmp16 = icmp eq i32 %cond, 1, !dbg !3370
  %tobool = icmp ne i32 %memory_required, 0, !dbg !3371
  %or.cond = or i1 %cmp16, %tobool, !dbg !3372
  br i1 %or.cond, label %if.then17, label %if.end39, !dbg !3372

if.then17:                                        ; preds = %cond.end
  %call18 = tail call i64 @int_size_in_bytes(%union.tree_node* %type.0) #6, !dbg !3373
  call void @llvm.dbg.value(metadata i64 %call18, metadata !3355, metadata !DIExpression()), !dbg !3374
  switch i64 %call18, label %if.end25 [
    i64 0, label %if.end26
    i64 -1, label %if.then23
  ], !dbg !3375

if.then23:                                        ; preds = %if.then17
  %call24 = tail call i64 @max_int_size_in_bytes(%union.tree_node* %type.0) #6, !dbg !3376
  call void @llvm.dbg.value(metadata i64 %call24, metadata !3355, metadata !DIExpression()), !dbg !3374
  br label %if.end25, !dbg !3379

if.end25:                                         ; preds = %if.then17, %if.then23
  %size.0 = phi i64 [ %call24, %if.then23 ], [ %call18, %if.then17 ], !dbg !3374
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !3355, metadata !DIExpression()), !dbg !3374
  br label %if.end26

if.end26:                                         ; preds = %if.then17, %if.end25
  %size.1 = phi i64 [ %size.0, %if.end25 ], [ 1, %if.then17 ], !dbg !3380
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !3355, metadata !DIExpression()), !dbg !3374
  %tobool27 = icmp ne %union.tree_node* %decl.0, null, !dbg !3381
  %cmp28 = icmp eq i64 %size.1, -1, !dbg !3383
  %or.cond1 = and i1 %tobool27, %cmp28, !dbg !3384
  br i1 %or.cond1, label %land.lhs.true29, label %if.end37, !dbg !3384

land.lhs.true29:                                  ; preds = %if.end26
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3385
  %7 = bitcast %union.tree_node** %6 to i64**, !dbg !3385
  %8 = load i64*, i64** %7, align 8, !dbg !3385
  %bf.load32 = load i64, i64* %8, align 8, !dbg !3385
  %bf.cast343 = and i64 %bf.load32, 65535, !dbg !3386
  %cmp35 = icmp eq i64 %bf.cast343, 23, !dbg !3386
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !3387

if.then36:                                        ; preds = %land.lhs.true29
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), %union.tree_node* nonnull %decl.0) #6, !dbg !3388
  call void @llvm.dbg.value(metadata i64 1, metadata !3355, metadata !DIExpression()), !dbg !3374
  br label %if.end37, !dbg !3390

if.end37:                                         ; preds = %if.then36, %land.lhs.true29, %if.end26
  %size.2 = phi i64 [ 1, %if.then36 ], [ -1, %land.lhs.true29 ], [ %size.1, %if.end26 ], !dbg !3374
  call void @llvm.dbg.value(metadata i64 %size.2, metadata !3355, metadata !DIExpression()), !dbg !3374
  %call38 = tail call %struct.rtx_def* @assign_stack_temp_for_type(i32 %cond, i64 %size.2, i32 %keep, %union.tree_node* %type.0) #7, !dbg !3391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !3358, metadata !DIExpression()), !dbg !3374
  br label %cleanup

if.end39:                                         ; preds = %cond.end
  %tobool40 = icmp eq i32 %dont_promote, 0, !dbg !3392
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !3394

if.then41:                                        ; preds = %if.end39
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !3354, metadata !DIExpression(DW_OP_deref)), !dbg !3359
  %call42 = call i32 @promote_mode(%union.tree_node* %type.0, i32 %cond, i32* nonnull %unsignedp) #6, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %call42, metadata !3353, metadata !DIExpression()), !dbg !3359
  br label %if.end43, !dbg !3396

if.end43:                                         ; preds = %if.end39, %if.then41
  %mode.0 = phi i32 [ %cond, %if.end39 ], [ %call42, %if.then41 ], !dbg !3359
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !3353, metadata !DIExpression()), !dbg !3359
  %call44 = call %struct.rtx_def* @gen_reg_rtx(i32 %mode.0) #6, !dbg !3397
  br label %cleanup, !dbg !3398

cleanup:                                          ; preds = %if.end43, %if.end37
  %retval.0 = phi %struct.rtx_def* [ %call38, %if.end37 ], [ %call44, %if.end43 ], !dbg !3359
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3399
  ret %struct.rtx_def* %retval.0, !dbg !3399
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @max_int_size_in_bytes(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @error(i8*, ...) local_unnamed_addr #1

declare dso_local i32 @promote_mode(%union.tree_node*, i32, i32*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @update_temp_slot_address(%struct.rtx_def* %old_rtx, %struct.rtx_def* %new_rtx) local_unnamed_addr #4 !dbg !3400 {
entry:
  br label %tailrecurse.outer, !dbg !3407

tailrecurse.outer:                                ; preds = %tailrecurse.outer.backedge, %entry
  %old_rtx.tr.ph = phi %struct.rtx_def* [ %old_rtx, %entry ], [ %old_rtx.tr.ph.be, %tailrecurse.outer.backedge ]
  %new_rtx.tr.ph = phi %struct.rtx_def* [ %new_rtx, %entry ], [ %new_rtx.tr.ph.be, %tailrecurse.outer.backedge ]
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.tr.ph, i64 0, i32 0, !dbg !3411
  br label %tailrecurse, !dbg !3413

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.then9
  %old_rtx.tr = phi %struct.rtx_def* [ %4, %if.then9 ], [ %old_rtx.tr.ph, %tailrecurse.outer ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_rtx.tr, metadata !3404, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.tr.ph, metadata !3405, metadata !DIExpression()), !dbg !3414
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %old_rtx.tr, %struct.rtx_def* %new_rtx.tr.ph) #6, !dbg !3415
  %tobool = icmp eq i32 %call, 0, !dbg !3415
  br i1 %tobool, label %if.end, label %cleanup.cont.loopexit.loopexit, !dbg !3413

if.end:                                           ; preds = %tailrecurse
  %call1 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %old_rtx.tr) #7, !dbg !3417
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call1, metadata !3406, metadata !DIExpression()), !dbg !3414
  %cmp = icmp eq %struct.temp_slot* %call1, null, !dbg !3418
  br i1 %cmp, label %if.then2, label %if.end103, !dbg !3419

if.then2:                                         ; preds = %if.end
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_rtx.tr, i64 0, i32 0, !dbg !3420
  %bf.load = load i32, i32* %1, align 8, !dbg !3420
  %bf.clear = and i32 %bf.load, 65535, !dbg !3420
  %cmp3 = icmp eq i32 %bf.clear, 49, !dbg !3422
  br i1 %cmp3, label %if.end5, label %cleanup.cont.loopexit.loopexit, !dbg !3423

if.end5:                                          ; preds = %if.then2
  %bf.load6 = load i32, i32* %0, align 8, !dbg !3424
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !3424
  %cmp8 = icmp eq i32 %bf.clear7, 37, !dbg !3424
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !3425

if.then9:                                         ; preds = %if.end5
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_rtx.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3426
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3426
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3426
  tail call void @update_temp_slot_address(%struct.rtx_def* %2, %struct.rtx_def* %new_rtx.tr.ph) #7, !dbg !3428
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_rtx.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3429
  %rt_rtx13 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3429
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !3429
  br label %tailrecurse, !dbg !3430

if.else:                                          ; preds = %if.end5
  %bf.clear7.lcssa = phi i32 [ %bf.clear7, %if.end5 ], !dbg !3424
  %old_rtx.tr.lcssa13 = phi %struct.rtx_def* [ %old_rtx.tr, %if.end5 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_rtx.tr.lcssa13, metadata !3404, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_rtx.tr.lcssa13, metadata !3404, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_rtx.tr.lcssa13, metadata !3404, metadata !DIExpression()), !dbg !3414
  %cmp16 = icmp eq i32 %bf.clear7.lcssa, 49, !dbg !3431
  br i1 %cmp16, label %if.end19, label %cleanup.cont.loopexit.loopexit1, !dbg !3433

if.end19:                                         ; preds = %if.else
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_rtx.tr.lcssa13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3434
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !3434
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3434
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.tr.ph, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3435
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !3435
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3435
  %call28 = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %6) #6, !dbg !3436
  %tobool29 = icmp eq i32 %call28, 0, !dbg !3436
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_rtx.tr.lcssa13, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3437
  %rt_rtx34 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3437
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !3437
  br i1 %tobool29, label %if.else39, label %if.then30, !dbg !3438

if.then30:                                        ; preds = %if.end19
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.tr.ph, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3439
  %rt_rtx38 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !3439
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !3439
  br label %tailrecurse.outer.backedge, !dbg !3407

tailrecurse.outer.backedge:                       ; preds = %if.then30, %if.then70, %if.then90, %if.then50
  %old_rtx.tr.ph.be = phi %struct.rtx_def* [ %12, %if.then50 ], [ %18, %if.then90 ], [ %15, %if.then70 ], [ %8, %if.then30 ]
  %new_rtx.tr.ph.be = phi %struct.rtx_def* [ %14, %if.then50 ], [ %19, %if.then90 ], [ %16, %if.then70 ], [ %10, %if.then30 ]
  br label %tailrecurse.outer, !dbg !3413

if.else39:                                        ; preds = %if.end19
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.tr.ph, i64 0, i32 1, !dbg !3437
  %rt_rtx47 = bitcast %union.u* %u35 to %struct.rtx_def**, !dbg !3440
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !3440
  %call48 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %11) #6, !dbg !3442
  %tobool49 = icmp eq i32 %call48, 0, !dbg !3442
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3443
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.tr.ph, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3443
  %rt_rtx58 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3443
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !3443
  br i1 %tobool49, label %if.else59, label %if.then50, !dbg !3444

if.then50:                                        ; preds = %if.else39
  br label %tailrecurse.outer.backedge, !dbg !3445

if.else59:                                        ; preds = %if.else39
  %call68 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %14) #6, !dbg !3446
  %tobool69 = icmp eq i32 %call68, 0, !dbg !3446
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !3448
  br i1 %tobool69, label %if.else79, label %if.then70, !dbg !3449

if.then70:                                        ; preds = %if.else59
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3450
  br label %tailrecurse.outer.backedge, !dbg !3451

if.else79:                                        ; preds = %if.else59
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !3452
  %call88 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %17) #6, !dbg !3454
  %tobool89 = icmp eq i32 %call88, 0, !dbg !3454
  br i1 %tobool89, label %cleanup.cont.loopexit.loopexit1, label %if.then90, !dbg !3455

if.then90:                                        ; preds = %if.else79
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3456
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3457
  br label %tailrecurse.outer.backedge, !dbg !3458

if.end103:                                        ; preds = %if.end
  %new_rtx.tr.ph.lcssa15 = phi %struct.rtx_def* [ %new_rtx.tr.ph, %if.end ]
  %call1.lcssa = phi %struct.temp_slot* [ %call1, %if.end ], !dbg !3417
  tail call fastcc void @insert_temp_slot_address(%struct.rtx_def* %new_rtx.tr.ph.lcssa15, %struct.temp_slot* nonnull %call1.lcssa) #7, !dbg !3459
  br label %cleanup.cont, !dbg !3460

cleanup.cont.loopexit.loopexit:                   ; preds = %if.then2, %tailrecurse
  br label %cleanup.cont.loopexit, !dbg !3460

cleanup.cont.loopexit.loopexit1:                  ; preds = %if.else79, %if.else
  br label %cleanup.cont.loopexit, !dbg !3460

cleanup.cont.loopexit:                            ; preds = %cleanup.cont.loopexit.loopexit1, %cleanup.cont.loopexit.loopexit
  br label %cleanup.cont, !dbg !3460

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end103
  ret void, !dbg !3460
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %x) unnamed_addr #4 !dbg !3461 {
entry:
  %tmp = alloca %struct.temp_slot_address_entry, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3465, metadata !DIExpression()), !dbg !3472
  %0 = bitcast %struct.temp_slot_address_entry* %tmp to i8*, !dbg !3473
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3473
  %address = getelementptr inbounds %struct.temp_slot_address_entry, %struct.temp_slot_address_entry* %tmp, i64 0, i32 1, !dbg !3474
  store %struct.rtx_def* %x, %struct.rtx_def** %address, align 8, !dbg !3475
  %temp_slot = getelementptr inbounds %struct.temp_slot_address_entry, %struct.temp_slot_address_entry* %tmp, i64 0, i32 2, !dbg !3476
  store %struct.temp_slot* null, %struct.temp_slot** %temp_slot, align 8, !dbg !3477
  call void @llvm.dbg.value(metadata %struct.temp_slot_address_entry* %tmp, metadata !3467, metadata !DIExpression(DW_OP_deref)), !dbg !3472
  %call = call fastcc i32 @temp_slot_address_compute_hash(%struct.temp_slot_address_entry* nonnull %tmp) #7, !dbg !3478
  %hash = getelementptr inbounds %struct.temp_slot_address_entry, %struct.temp_slot_address_entry* %tmp, i64 0, i32 0, !dbg !3479
  store i32 %call, i32* %hash, align 8, !dbg !3480
  %1 = load %struct.htab*, %struct.htab** @temp_slot_address_table, align 8, !dbg !3481
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call) #6, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %call2, metadata !3468, metadata !DIExpression()), !dbg !3472
  %tobool = icmp eq i8* %call2, null, !dbg !3483
  br i1 %tobool, label %if.end, label %if.then, !dbg !3485

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call2, metadata !3468, metadata !DIExpression()), !dbg !3472
  %temp_slot3 = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !3486
  %2 = bitcast i8* %temp_slot3 to %struct.temp_slot**, !dbg !3486
  %3 = load %struct.temp_slot*, %struct.temp_slot** %2, align 8, !dbg !3486
  br label %cleanup82, !dbg !3487

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3488
  %bf.load = load i32, i32* %4, align 8, !dbg !3488
  %bf.clear = and i32 %bf.load, 65535, !dbg !3488
  %cmp = icmp eq i32 %bf.clear, 49, !dbg !3490
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3491

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3492
  %5 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3492
  %6 = load i32*, i32** %5, align 8, !dbg !3492
  %bf.load4 = load i32, i32* %6, align 8, !dbg !3492
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !3492
  %cmp6 = icmp eq i32 %bf.clear5, 37, !dbg !3492
  br i1 %cmp6, label %land.lhs.true7, label %if.else, !dbg !3493

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !3493
  %call12 = call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %7) #7, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call12, metadata !3466, metadata !DIExpression()), !dbg !3472
  %cmp13 = icmp eq %struct.temp_slot* %call12, null, !dbg !3495
  br i1 %cmp13, label %land.lhs.true7.if.else_crit_edge, label %cleanup82, !dbg !3496

land.lhs.true7.if.else_crit_edge:                 ; preds = %land.lhs.true7
  %bf.load15.pre = load i32, i32* %4, align 8, !dbg !3497
  br label %if.else, !dbg !3496

if.else:                                          ; preds = %land.lhs.true7.if.else_crit_edge, %land.lhs.true, %if.end
  %bf.load15 = phi i32 [ %bf.load15.pre, %land.lhs.true7.if.else_crit_edge ], [ %bf.load, %land.lhs.true ], [ %bf.load, %if.end ], !dbg !3497
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3497
  %cmp17 = icmp eq i32 %bf.clear16, 49, !dbg !3499
  br i1 %cmp17, label %land.lhs.true18, label %if.end35, !dbg !3500

land.lhs.true18:                                  ; preds = %if.else
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3501
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !3501
  %10 = load i32*, i32** %9, align 8, !dbg !3501
  %bf.load23 = load i32, i32* %10, align 8, !dbg !3501
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3501
  %cmp25 = icmp eq i32 %bf.clear24, 37, !dbg !3501
  br i1 %cmp25, label %land.lhs.true26, label %if.end35, !dbg !3502

land.lhs.true26:                                  ; preds = %land.lhs.true18
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !3502
  %call31 = call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %11) #7, !dbg !3503
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call31, metadata !3466, metadata !DIExpression()), !dbg !3472
  %cmp32 = icmp eq %struct.temp_slot* %call31, null, !dbg !3504
  br i1 %cmp32, label %land.lhs.true26.if.end35_crit_edge, label %cleanup82, !dbg !3505

land.lhs.true26.if.end35_crit_edge:               ; preds = %land.lhs.true26
  %bf.load36.pre = load i32, i32* %4, align 8, !dbg !3506
  br label %if.end35, !dbg !3505

if.end35:                                         ; preds = %land.lhs.true26.if.end35_crit_edge, %if.else, %land.lhs.true18
  %bf.load36 = phi i32 [ %bf.load36.pre, %land.lhs.true26.if.end35_crit_edge ], [ %bf.load15, %if.else ], [ %bf.load15, %land.lhs.true18 ], !dbg !3506
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !3506
  %cmp38 = icmp eq i32 %bf.clear37, 49, !dbg !3507
  br i1 %cmp38, label %land.lhs.true39, label %if.end81, !dbg !3508

land.lhs.true39:                                  ; preds = %if.end35
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3509
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !3509
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !3509
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !3510
  %cmp44 = icmp eq %struct.rtx_def* %12, %13, !dbg !3511
  br i1 %cmp44, label %land.lhs.true45, label %if.end81, !dbg !3512

land.lhs.true45:                                  ; preds = %land.lhs.true39
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3513
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !3513
  %16 = load i32*, i32** %15, align 8, !dbg !3513
  %bf.load50 = load i32, i32* %16, align 8, !dbg !3513
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !3513
  %cmp52 = icmp eq i32 %bf.clear51, 30, !dbg !3513
  br i1 %cmp52, label %if.then53, label %if.end81, !dbg !3514

if.then53:                                        ; preds = %land.lhs.true45
  %call54 = call fastcc i32 @max_slot_level() #7, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %call54, metadata !3469, metadata !DIExpression()), !dbg !3517
  %rt_rtx63 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !3518
  br label %for.cond, !dbg !3524

for.cond:                                         ; preds = %for.inc79, %if.then53
  %i.0 = phi i32 [ %call54, %if.then53 ], [ %dec, %for.inc79 ], !dbg !3525
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3469, metadata !DIExpression()), !dbg !3517
  %cmp55 = icmp sgt i32 %i.0, -1, !dbg !3526
  br i1 %cmp55, label %for.body, label %cleanup.loopexit1, !dbg !3527

for.body:                                         ; preds = %for.cond
  %call56 = call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %i.0) #7, !dbg !3528
  br label %for.cond57, !dbg !3529

for.cond57:                                       ; preds = %for.inc, %for.body
  %p.0.in = phi %struct.temp_slot** [ %call56, %for.body ], [ %next, %for.inc ]
  %p.0 = load %struct.temp_slot*, %struct.temp_slot** %p.0.in, align 8, !dbg !3530
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3466, metadata !DIExpression()), !dbg !3472
  %tobool58 = icmp eq %struct.temp_slot* %p.0, null, !dbg !3531
  br i1 %tobool58, label %for.inc79, label %for.body59, !dbg !3531

for.body59:                                       ; preds = %for.cond57
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !3532
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !3532
  %arrayidx65 = bitcast %union.u* %u64 to i64*, !dbg !3532
  %18 = load i64, i64* %arrayidx65, align 8, !dbg !3532
  %base_offset = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 10, !dbg !3533
  %19 = load i64, i64* %base_offset, align 8, !dbg !3533
  %cmp66 = icmp slt i64 %18, %19, !dbg !3534
  br i1 %cmp66, label %for.inc, label %land.lhs.true67, !dbg !3535

land.lhs.true67:                                  ; preds = %for.body59
  %full_size = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 11, !dbg !3536
  %20 = load i64, i64* %full_size, align 8, !dbg !3536
  %add = add nsw i64 %19, %20, !dbg !3537
  %cmp76 = icmp slt i64 %18, %add, !dbg !3538
  br i1 %cmp76, label %cleanup.loopexit, label %for.inc, !dbg !3539

for.inc:                                          ; preds = %for.body59, %land.lhs.true67
  %next = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3540
  br label %for.cond57, !dbg !3541, !llvm.loop !3542

for.inc79:                                        ; preds = %for.cond57
  %dec = add nsw i32 %i.0, -1, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3469, metadata !DIExpression()), !dbg !3517
  br label %for.cond, !dbg !3545, !llvm.loop !3546

cleanup.loopexit:                                 ; preds = %land.lhs.true67
  %p.0.lcssa6 = phi %struct.temp_slot* [ %p.0, %land.lhs.true67 ], !dbg !3530
  br label %cleanup

cleanup.loopexit1:                                ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit
  %cleanup.dest.slot.0 = phi i1 [ false, %cleanup.loopexit ], [ true, %cleanup.loopexit1 ]
  %retval.0 = phi %struct.temp_slot* [ %p.0.lcssa6, %cleanup.loopexit ], [ undef, %cleanup.loopexit1 ]
  br i1 %cleanup.dest.slot.0, label %if.end81, label %cleanup82

if.end81:                                         ; preds = %cleanup, %land.lhs.true45, %land.lhs.true39, %if.end35
  br label %cleanup82, !dbg !3548

cleanup82:                                        ; preds = %land.lhs.true7, %land.lhs.true26, %cleanup, %if.end81, %if.then
  %retval.1 = phi %struct.temp_slot* [ %3, %if.then ], [ %retval.0, %cleanup ], [ null, %if.end81 ], [ %call12, %land.lhs.true7 ], [ %call31, %land.lhs.true26 ], !dbg !3472
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3549
  ret %struct.temp_slot* %retval.1, !dbg !3549
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_temp_addr_taken(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3550 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3554, metadata !DIExpression()), !dbg !3556
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !3557
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3559

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3560
  %bf.load = load i32, i32* %0, align 8, !dbg !3560
  %bf.clear = and i32 %bf.load, 65535, !dbg !3560
  %cmp1 = icmp eq i32 %bf.clear, 43, !dbg !3560
  br i1 %cmp1, label %lor.lhs.false, label %cleanup.cont, !dbg !3562

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3563
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3563
  %2 = load i32*, i32** %1, align 8, !dbg !3563
  %bf.load2 = load i32, i32* %2, align 8, !dbg !3563
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !3563
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !3563
  %arrayidx4 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3563
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !3563
  %cmp5 = icmp eq i32 %3, 9, !dbg !3563
  br i1 %cmp5, label %cleanup.cont, label %if.end7, !dbg !3564

if.end7:                                          ; preds = %lor.lhs.false
  %4 = bitcast i32* %2 to %struct.rtx_def*, !dbg !3564
  %call = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %4) #7, !dbg !3565
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call, metadata !3555, metadata !DIExpression()), !dbg !3556
  %cmp12 = icmp eq %struct.temp_slot* %call, null, !dbg !3566
  br i1 %cmp12, label %cleanup.cont, label %if.then13, !dbg !3568

if.then13:                                        ; preds = %if.end7
  %addr_taken = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %call, i64 0, i32 7, !dbg !3569
  store i8 1, i8* %addr_taken, align 1, !dbg !3570
  br label %cleanup.cont, !dbg !3571

cleanup.cont:                                     ; preds = %if.end7, %entry, %lor.lhs.false, %if.end, %if.then13
  ret void, !dbg !3572
}

; Function Attrs: nounwind uwtable
define dso_local void @preserve_temp_slots(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3573 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3575, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata %struct.temp_slot* null, metadata !3576, metadata !DIExpression()), !dbg !3581
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !3582
  br i1 %cmp, label %if.then, label %if.end4, !dbg !3584

if.then:                                          ; preds = %entry
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3585
  %call = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %0) #7, !dbg !3588
  %1 = load %struct.temp_slot*, %struct.temp_slot** %call, align 8, !dbg !3589
  call void @llvm.dbg.value(metadata %struct.temp_slot* %1, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond, !dbg !3590

for.cond:                                         ; preds = %for.inc, %if.then
  %p.0 = phi %struct.temp_slot* [ %1, %if.then ], [ %2, %for.inc ], !dbg !3591
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3576, metadata !DIExpression()), !dbg !3581
  %tobool = icmp eq %struct.temp_slot* %p.0, null, !dbg !3592
  br i1 %tobool, label %cleanup.cont.loopexit, label %for.body, !dbg !3592

for.body:                                         ; preds = %for.cond
  %next1 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3593
  %2 = load %struct.temp_slot*, %struct.temp_slot** %next1, align 8, !dbg !3593
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3577, metadata !DIExpression()), !dbg !3581
  %addr_taken = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 7, !dbg !3596
  %3 = load i8, i8* %addr_taken, align 1, !dbg !3596
  %tobool2 = icmp eq i8 %3, 0, !dbg !3598
  br i1 %tobool2, label %for.inc, label %if.then3, !dbg !3599

if.then3:                                         ; preds = %for.body
  %4 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3600
  %sub = add nsw i32 %4, -1, !dbg !3601
  tail call fastcc void @move_slot_to_level(%struct.temp_slot* nonnull %p.0, i32 %sub) #7, !dbg !3602
  br label %for.inc, !dbg !3602

for.inc:                                          ; preds = %for.body, %if.then3
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond, !dbg !3603, !llvm.loop !3604

if.end4:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3606
  %bf.load = load i32, i32* %5, align 8, !dbg !3606
  %bf.clear = and i32 %bf.load, 65535, !dbg !3606
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !3606
  br i1 %cmp5, label %land.lhs.true, label %if.end11, !dbg !3608

land.lhs.true:                                    ; preds = %if.end4
  %bf.clear7 = and i32 %bf.load, 1073741824, !dbg !3609
  %tobool8 = icmp eq i32 %bf.clear7, 0, !dbg !3609
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !3610

if.then9:                                         ; preds = %land.lhs.true
  %call10 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* nonnull %x) #7, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call10, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %if.end11, !dbg !3612

if.end11:                                         ; preds = %land.lhs.true, %if.then9, %if.end4
  %p.1 = phi %struct.temp_slot* [ %call10, %if.then9 ], [ null, %land.lhs.true ], [ null, %if.end4 ], !dbg !3581
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.1, metadata !3576, metadata !DIExpression()), !dbg !3581
  %cond = icmp eq %struct.temp_slot* %p.1, null, !dbg !3613
  br i1 %cond, label %land.lhs.true13, label %if.end42, !dbg !3613

land.lhs.true13:                                  ; preds = %if.end11
  %bf.load14 = load i32, i32* %5, align 8, !dbg !3615
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !3615
  %cmp16 = icmp eq i32 %bf.clear15, 43, !dbg !3615
  br i1 %cmp16, label %lor.lhs.false, label %if.then21, !dbg !3616

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3617
  %6 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3617
  %7 = load i32*, i32** %6, align 8, !dbg !3617
  %bf.load17 = load i32, i32* %7, align 8, !dbg !3617
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !3617
  %idxprom = zext i32 %bf.clear18 to i64, !dbg !3617
  %arrayidx19 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3617
  %8 = load i32, i32* %arrayidx19, align 4, !dbg !3617
  %cmp20 = icmp eq i32 %8, 9, !dbg !3617
  %9 = bitcast i32* %7 to %struct.rtx_def*, !dbg !3618
  br i1 %cmp20, label %if.then21, label %if.end34, !dbg !3618

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true13
  %10 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3619
  %call22 = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %10) #7, !dbg !3622
  %11 = load %struct.temp_slot*, %struct.temp_slot** %call22, align 8, !dbg !3623
  call void @llvm.dbg.value(metadata %struct.temp_slot* %11, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond23, !dbg !3624

for.cond23:                                       ; preds = %for.inc32, %if.then21
  %p.2 = phi %struct.temp_slot* [ %11, %if.then21 ], [ %12, %for.inc32 ], !dbg !3625
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.2, metadata !3576, metadata !DIExpression()), !dbg !3581
  %tobool24 = icmp eq %struct.temp_slot* %p.2, null, !dbg !3626
  br i1 %tobool24, label %cleanup.cont.loopexit1, label %for.body25, !dbg !3626

for.body25:                                       ; preds = %for.cond23
  %next26 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.2, i64 0, i32 0, !dbg !3627
  %12 = load %struct.temp_slot*, %struct.temp_slot** %next26, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.temp_slot* %12, metadata !3577, metadata !DIExpression()), !dbg !3581
  %addr_taken27 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.2, i64 0, i32 7, !dbg !3630
  %13 = load i8, i8* %addr_taken27, align 1, !dbg !3630
  %tobool28 = icmp eq i8 %13, 0, !dbg !3632
  br i1 %tobool28, label %for.inc32, label %if.then29, !dbg !3633

if.then29:                                        ; preds = %for.body25
  %14 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3634
  %sub30 = add nsw i32 %14, -1, !dbg !3635
  tail call fastcc void @move_slot_to_level(%struct.temp_slot* nonnull %p.2, i32 %sub30) #7, !dbg !3636
  br label %for.inc32, !dbg !3636

for.inc32:                                        ; preds = %for.body25, %if.then29
  call void @llvm.dbg.value(metadata %struct.temp_slot* %12, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond23, !dbg !3637, !llvm.loop !3638

if.end34:                                         ; preds = %lor.lhs.false
  br i1 true, label %if.then36, label %if.end34.if.end42_crit_edge, !dbg !3640

if.end34.if.end42_crit_edge:                      ; preds = %if.end34
  br label %if.end42, !dbg !3640

if.then36:                                        ; preds = %if.end34
  %call41 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %9) #7, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.temp_slot* %call41, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %if.end42, !dbg !3643

if.end42:                                         ; preds = %if.end34.if.end42_crit_edge, %if.end11, %if.then36
  %p.3 = phi %struct.temp_slot* [ %call41, %if.then36 ], [ undef, %if.end34.if.end42_crit_edge ], [ %p.1, %if.end11 ], !dbg !3581
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.3, metadata !3576, metadata !DIExpression()), !dbg !3581
  %cmp43 = icmp eq %struct.temp_slot* %p.3, null, !dbg !3644
  br i1 %cmp43, label %if.end64, label %if.then44, !dbg !3645

if.then44:                                        ; preds = %if.end42
  %level = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.3, i64 0, i32 8, !dbg !3646
  %15 = load i32, i32* %level, align 8, !dbg !3646
  %16 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3648
  %cmp45 = icmp eq i32 %15, %16, !dbg !3649
  br i1 %cmp45, label %if.then46, label %cleanup.cont, !dbg !3650

if.then46:                                        ; preds = %if.then44
  %call47 = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %15) #7, !dbg !3651
  %17 = load %struct.temp_slot*, %struct.temp_slot** %call47, align 8, !dbg !3654
  call void @llvm.dbg.value(metadata %struct.temp_slot* %17, metadata !3578, metadata !DIExpression()), !dbg !3655
  br label %for.cond48, !dbg !3656

for.cond48:                                       ; preds = %for.inc59, %if.then46
  %q.0 = phi %struct.temp_slot* [ %17, %if.then46 ], [ %18, %for.inc59 ], !dbg !3657
  call void @llvm.dbg.value(metadata %struct.temp_slot* %q.0, metadata !3578, metadata !DIExpression()), !dbg !3655
  %tobool49 = icmp eq %struct.temp_slot* %q.0, null, !dbg !3658
  br i1 %tobool49, label %for.end60, label %for.body50, !dbg !3658

for.body50:                                       ; preds = %for.cond48
  %next51 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 0, !dbg !3659
  %18 = load %struct.temp_slot*, %struct.temp_slot** %next51, align 8, !dbg !3659
  call void @llvm.dbg.value(metadata %struct.temp_slot* %18, metadata !3577, metadata !DIExpression()), !dbg !3581
  %cmp52 = icmp eq %struct.temp_slot* %p.3, %q.0, !dbg !3662
  br i1 %cmp52, label %for.inc59, label %land.lhs.true53, !dbg !3664

land.lhs.true53:                                  ; preds = %for.body50
  %addr_taken54 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 7, !dbg !3665
  %19 = load i8, i8* %addr_taken54, align 1, !dbg !3665
  %tobool55 = icmp eq i8 %19, 0, !dbg !3666
  br i1 %tobool55, label %for.inc59, label %if.then56, !dbg !3667

if.then56:                                        ; preds = %land.lhs.true53
  %20 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3668
  %sub57 = add nsw i32 %20, -1, !dbg !3669
  tail call fastcc void @move_slot_to_level(%struct.temp_slot* nonnull %q.0, i32 %sub57) #7, !dbg !3670
  br label %for.inc59, !dbg !3670

for.inc59:                                        ; preds = %land.lhs.true53, %for.body50, %if.then56
  call void @llvm.dbg.value(metadata %struct.temp_slot* %18, metadata !3578, metadata !DIExpression()), !dbg !3655
  br label %for.cond48, !dbg !3671, !llvm.loop !3672

for.end60:                                        ; preds = %for.cond48
  %21 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3674
  %sub61 = add nsw i32 %21, -1, !dbg !3675
  tail call fastcc void @move_slot_to_level(%struct.temp_slot* nonnull %p.3, i32 %sub61) #7, !dbg !3676
  %addr_taken62 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.3, i64 0, i32 7, !dbg !3677
  store i8 0, i8* %addr_taken62, align 1, !dbg !3678
  br label %cleanup.cont, !dbg !3679

if.end64:                                         ; preds = %if.end42
  %22 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3680
  %call65 = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %22) #7, !dbg !3682
  %23 = load %struct.temp_slot*, %struct.temp_slot** %call65, align 8, !dbg !3683
  call void @llvm.dbg.value(metadata %struct.temp_slot* %23, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond66, !dbg !3684

for.cond66:                                       ; preds = %for.inc74, %if.end64
  %p.4 = phi %struct.temp_slot* [ %23, %if.end64 ], [ %24, %for.inc74 ], !dbg !3685
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.4, metadata !3576, metadata !DIExpression()), !dbg !3581
  %tobool67 = icmp eq %struct.temp_slot* %p.4, null, !dbg !3686
  br i1 %tobool67, label %cleanup.cont.loopexit2, label %for.body68, !dbg !3686

for.body68:                                       ; preds = %for.cond66
  %next69 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.4, i64 0, i32 0, !dbg !3687
  %24 = load %struct.temp_slot*, %struct.temp_slot** %next69, align 8, !dbg !3687
  call void @llvm.dbg.value(metadata %struct.temp_slot* %24, metadata !3577, metadata !DIExpression()), !dbg !3581
  %keep = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.4, i64 0, i32 9, !dbg !3690
  %25 = load i32, i32* %keep, align 4, !dbg !3690
  %tobool70 = icmp eq i32 %25, 0, !dbg !3692
  br i1 %tobool70, label %if.then71, label %for.inc74, !dbg !3693

if.then71:                                        ; preds = %for.body68
  %26 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3694
  %sub72 = add nsw i32 %26, -1, !dbg !3695
  tail call fastcc void @move_slot_to_level(%struct.temp_slot* nonnull %p.4, i32 %sub72) #7, !dbg !3696
  br label %for.inc74, !dbg !3696

for.inc74:                                        ; preds = %for.body68, %if.then71
  call void @llvm.dbg.value(metadata %struct.temp_slot* %24, metadata !3576, metadata !DIExpression()), !dbg !3581
  br label %for.cond66, !dbg !3697, !llvm.loop !3698

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3700

cleanup.cont.loopexit1:                           ; preds = %for.cond23
  br label %cleanup.cont, !dbg !3700

cleanup.cont.loopexit2:                           ; preds = %for.cond66
  br label %cleanup.cont, !dbg !3700

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit2, %cleanup.cont.loopexit1, %cleanup.cont.loopexit, %for.end60, %if.then44
  ret void, !dbg !3700
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_slot_to_level(%struct.temp_slot* %temp, i32 %level) unnamed_addr #4 !dbg !3701 {
entry:
  call void @llvm.dbg.value(metadata %struct.temp_slot* %temp, metadata !3705, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %level, metadata !3706, metadata !DIExpression()), !dbg !3707
  %level1 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 8, !dbg !3708
  %0 = load i32, i32* %level1, align 8, !dbg !3708
  %call = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %0) #7, !dbg !3709
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* %temp, %struct.temp_slot** %call) #7, !dbg !3710
  %call2 = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %level) #7, !dbg !3711
  tail call fastcc void @insert_slot_to_list(%struct.temp_slot* %temp, %struct.temp_slot** %call2) #7, !dbg !3712
  store i32 %level, i32* %level1, align 8, !dbg !3713
  ret void, !dbg !3714
}

; Function Attrs: nounwind uwtable
define dso_local void @free_temp_slots() local_unnamed_addr #4 !dbg !3715 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !3719, metadata !DIExpression()), !dbg !3720
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3721
  %call = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %0) #7, !dbg !3723
  %1 = load %struct.temp_slot*, %struct.temp_slot** %call, align 8, !dbg !3724
  call void @llvm.dbg.value(metadata %struct.temp_slot* %1, metadata !3717, metadata !DIExpression()), !dbg !3720
  br label %for.cond, !dbg !3725

for.cond:                                         ; preds = %for.inc, %entry
  %some_available.0 = phi i8 [ 0, %entry ], [ %some_available.1, %for.inc ], !dbg !3726
  %p.0 = phi %struct.temp_slot* [ %1, %entry ], [ %2, %for.inc ], !dbg !3727
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3717, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i8 %some_available.0, metadata !3719, metadata !DIExpression()), !dbg !3720
  %tobool = icmp eq %struct.temp_slot* %p.0, null, !dbg !3728
  br i1 %tobool, label %for.end, label %for.body, !dbg !3728

for.body:                                         ; preds = %for.cond
  %next1 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3729
  %2 = load %struct.temp_slot*, %struct.temp_slot** %next1, align 8, !dbg !3729
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3718, metadata !DIExpression()), !dbg !3720
  %keep = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 9, !dbg !3732
  %3 = load i32, i32* %keep, align 4, !dbg !3732
  %tobool2 = icmp eq i32 %3, 0, !dbg !3734
  br i1 %tobool2, label %if.then, label %for.inc, !dbg !3735

if.then:                                          ; preds = %for.body
  tail call fastcc void @make_slot_available(%struct.temp_slot* nonnull %p.0) #7, !dbg !3736
  call void @llvm.dbg.value(metadata i8 1, metadata !3719, metadata !DIExpression()), !dbg !3720
  br label %for.inc, !dbg !3738

for.inc:                                          ; preds = %for.body, %if.then
  %some_available.1 = phi i8 [ %some_available.0, %for.body ], [ 1, %if.then ], !dbg !3720
  call void @llvm.dbg.value(metadata i8 %some_available.1, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3717, metadata !DIExpression()), !dbg !3720
  br label %for.cond, !dbg !3739, !llvm.loop !3740

for.end:                                          ; preds = %for.cond
  %some_available.0.lcssa = phi i8 [ %some_available.0, %for.cond ], !dbg !3726
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3719, metadata !DIExpression()), !dbg !3720
  %tobool3 = icmp eq i8 %some_available.0.lcssa, 0, !dbg !3742
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !3744

if.then4:                                         ; preds = %for.end
  tail call fastcc void @remove_unused_temp_slot_addresses() #7, !dbg !3745
  tail call fastcc void @combine_temp_slots() #7, !dbg !3747
  br label %if.end5, !dbg !3748

if.end5:                                          ; preds = %for.end, %if.then4
  ret void, !dbg !3749
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_slot_available(%struct.temp_slot* %temp) unnamed_addr #4 !dbg !3750 {
entry:
  call void @llvm.dbg.value(metadata %struct.temp_slot* %temp, metadata !3754, metadata !DIExpression()), !dbg !3755
  %level = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 8, !dbg !3756
  %0 = load i32, i32* %level, align 8, !dbg !3756
  %call = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %0) #7, !dbg !3757
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* %temp, %struct.temp_slot** %call) #7, !dbg !3758
  tail call fastcc void @insert_slot_to_list(%struct.temp_slot* %temp, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3759
  %in_use = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %temp, i64 0, i32 6, !dbg !3760
  store i8 0, i8* %in_use, align 4, !dbg !3761
  store i32 -1, i32* %level, align 8, !dbg !3762
  ret void, !dbg !3763
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unused_temp_slot_addresses() unnamed_addr #4 !dbg !3764 {
entry:
  %0 = load %struct.htab*, %struct.htab** @temp_slot_address_table, align 8, !dbg !3765
  tail call void @htab_traverse(%struct.htab* %0, i32 (i8**, i8*)* nonnull @remove_unused_temp_slot_addresses_1, i8* null) #6, !dbg !3766
  ret void, !dbg !3767
}

; Function Attrs: nounwind uwtable
define internal fastcc void @combine_temp_slots() unnamed_addr #4 !dbg !3768 {
entry:
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !3783
  %tobool = icmp eq i32 %0, 0, !dbg !3783
  br i1 %tobool, label %if.end, label %cleanup.cont70, !dbg !3785

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !3786
  %tobool1 = icmp eq i32 %1, 0, !dbg !3786
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !3788

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3789
  %2 = load i32, i32* @optimize, align 4, !dbg !3790
  %cmp5 = icmp eq i32 %2, 0, !dbg !3790
  br i1 %cmp5, label %if.then2.split.us, label %if.then2.if.then2.split_crit_edge, !dbg !3794

if.then2.if.then2.split_crit_edge:                ; preds = %if.then2
  br label %for.cond, !dbg !3794

if.then2.split.us:                                ; preds = %if.then2
  br label %for.cond.us, !dbg !3794

for.cond.us:                                      ; preds = %for.inc.us, %if.then2.split.us
  %num_slots.0.us = phi i32 [ 0, %if.then2.split.us ], [ %inc.us, %for.inc.us ], !dbg !3795
  %p.0.in.us = phi %struct.temp_slot** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20), %if.then2.split.us ], [ %next8.us, %for.inc.us ]
  %p.0.us = load %struct.temp_slot*, %struct.temp_slot** %p.0.in.us, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0.us, metadata !3770, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 %num_slots.0.us, metadata !3774, metadata !DIExpression()), !dbg !3789
  %tobool3.us = icmp eq %struct.temp_slot* %p.0.us, null, !dbg !3796
  br i1 %tobool3.us, label %if.end9.loopexit.us-lcssa.us, label %for.body.us, !dbg !3796

for.body.us:                                      ; preds = %for.cond.us
  br i1 false, label %cleanup.cont70.loopexit2.us-lcssa.us, label %lor.lhs.false.us, !dbg !3797

lor.lhs.false.us:                                 ; preds = %for.body.us
  %exitcond = icmp eq i32 %num_slots.0.us, 11, !dbg !3798
  br i1 %exitcond, label %cleanup.cont70.loopexit2.us-lcssa.us, label %for.inc.us, !dbg !3799

for.inc.us:                                       ; preds = %lor.lhs.false.us
  %next8.us = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0.us, i64 0, i32 0, !dbg !3800
  %inc.us = add nuw nsw i32 %num_slots.0.us, 1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3774, metadata !DIExpression()), !dbg !3789
  br label %for.cond.us, !dbg !3802, !llvm.loop !3803

if.end9.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  br label %if.end9.loopexit, !dbg !3805

cleanup.cont70.loopexit2.us-lcssa.us:             ; preds = %lor.lhs.false.us, %for.body.us
  br label %cleanup.cont70.loopexit2, !dbg !3806

for.cond:                                         ; preds = %lor.lhs.false, %if.then2.if.then2.split_crit_edge
  %num_slots.0 = phi i32 [ 0, %if.then2.if.then2.split_crit_edge ], [ %inc, %lor.lhs.false ], !dbg !3795
  %p.0.in = phi %struct.temp_slot** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20), %if.then2.if.then2.split_crit_edge ], [ %next8, %lor.lhs.false ]
  %p.0 = load %struct.temp_slot*, %struct.temp_slot** %p.0.in, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3770, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 %num_slots.0, metadata !3774, metadata !DIExpression()), !dbg !3789
  %tobool3 = icmp eq %struct.temp_slot* %p.0, null, !dbg !3796
  br i1 %tobool3, label %if.end9.loopexit.us-lcssa, label %for.body, !dbg !3796

for.body:                                         ; preds = %for.cond
  %exitcond3 = icmp eq i32 %num_slots.0, 101, !dbg !3807
  br i1 %exitcond3, label %cleanup.cont70.loopexit2.us-lcssa, label %lor.lhs.false, !dbg !3797

lor.lhs.false:                                    ; preds = %for.body
  %next8 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3800
  %inc = add nuw nsw i32 %num_slots.0, 1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3774, metadata !DIExpression()), !dbg !3789
  br label %for.cond, !dbg !3802, !llvm.loop !3803

if.end9.loopexit.us-lcssa:                        ; preds = %for.cond
  br label %if.end9.loopexit, !dbg !3805

if.end9.loopexit:                                 ; preds = %if.end9.loopexit.us-lcssa.us, %if.end9.loopexit.us-lcssa
  br label %if.end9, !dbg !3805

if.end9:                                          ; preds = %if.end9.loopexit, %if.end
  %3 = load %struct.temp_slot*, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20), align 8, !dbg !3805
  call void @llvm.dbg.value(metadata %struct.temp_slot* %3, metadata !3770, metadata !DIExpression()), !dbg !3789
  br label %for.cond10, !dbg !3808

for.cond10:                                       ; preds = %cleanup59, %if.end9
  %p.1 = phi %struct.temp_slot* [ %3, %if.end9 ], [ %4, %cleanup59 ], !dbg !3809
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.1, metadata !3770, metadata !DIExpression()), !dbg !3789
  %tobool11 = icmp eq %struct.temp_slot* %p.1, null, !dbg !3810
  br i1 %tobool11, label %cleanup.cont70.loopexit, label %for.body12, !dbg !3810

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !3775, metadata !DIExpression()), !dbg !3811
  %next13 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.1, i64 0, i32 0, !dbg !3812
  %4 = load %struct.temp_slot*, %struct.temp_slot** %next13, align 8, !dbg !3812
  call void @llvm.dbg.value(metadata %struct.temp_slot* %4, metadata !3772, metadata !DIExpression()), !dbg !3789
  %slot = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.1, i64 0, i32 2, !dbg !3813
  %5 = bitcast %struct.rtx_def** %slot to i32**, !dbg !3813
  %6 = load i32*, i32** %5, align 8, !dbg !3813
  %bf.load = load i32, i32* %6, align 8, !dbg !3813
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3813
  %cmp14 = icmp eq i32 %bf.clear, 65536, !dbg !3815
  br i1 %cmp14, label %if.end16, label %cleanup59, !dbg !3816

if.end16:                                         ; preds = %for.body12
  call void @llvm.dbg.value(metadata %struct.temp_slot* %4, metadata !3771, metadata !DIExpression()), !dbg !3789
  %base_offset = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.1, i64 0, i32 10, !dbg !3817
  %full_size = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.1, i64 0, i32 11, !dbg !3817
  %size43 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.1, i64 0, i32 3, !dbg !3819
  br label %for.cond18, !dbg !3822

for.cond18:                                       ; preds = %cleanup, %if.end16
  %delete_p.0 = phi i32 [ 0, %if.end16 ], [ %delete_p.1, %cleanup ], !dbg !3823
  %q.0 = phi %struct.temp_slot* [ %4, %if.end16 ], [ %7, %cleanup ], !dbg !3824
  call void @llvm.dbg.value(metadata %struct.temp_slot* %q.0, metadata !3771, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 %delete_p.0, metadata !3775, metadata !DIExpression()), !dbg !3811
  %tobool19 = icmp eq %struct.temp_slot* %q.0, null, !dbg !3825
  br i1 %tobool19, label %for.end55, label %for.body20, !dbg !3825

for.body20:                                       ; preds = %for.cond18
  call void @llvm.dbg.value(metadata i32 0, metadata !3779, metadata !DIExpression()), !dbg !3826
  %next21 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 0, !dbg !3827
  %7 = load %struct.temp_slot*, %struct.temp_slot** %next21, align 8, !dbg !3827
  call void @llvm.dbg.value(metadata %struct.temp_slot* %7, metadata !3773, metadata !DIExpression()), !dbg !3789
  %slot22 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 2, !dbg !3828
  %8 = bitcast %struct.rtx_def** %slot22 to i32**, !dbg !3828
  %9 = load i32*, i32** %8, align 8, !dbg !3828
  %bf.load23 = load i32, i32* %9, align 8, !dbg !3828
  %bf.clear25 = and i32 %bf.load23, 16711680, !dbg !3828
  %cmp26 = icmp eq i32 %bf.clear25, 65536, !dbg !3830
  br i1 %cmp26, label %if.end28, label %cleanup, !dbg !3831

if.end28:                                         ; preds = %for.body20
  %10 = load i64, i64* %base_offset, align 8, !dbg !3832
  %11 = load i64, i64* %full_size, align 8, !dbg !3833
  %add = add nsw i64 %10, %11, !dbg !3834
  %base_offset29 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 10, !dbg !3835
  %12 = load i64, i64* %base_offset29, align 8, !dbg !3835
  %cmp30 = icmp eq i64 %add, %12, !dbg !3836
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !3837

if.then31:                                        ; preds = %if.end28
  %size = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 3, !dbg !3838
  %13 = load i64, i64* %size, align 8, !dbg !3838
  %14 = load i64, i64* %size43, align 8, !dbg !3840
  %add33 = add nsw i64 %14, %13, !dbg !3840
  store i64 %add33, i64* %size43, align 8, !dbg !3840
  %full_size34 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 11, !dbg !3841
  %15 = load i64, i64* %full_size34, align 8, !dbg !3841
  %add36 = add nsw i64 %11, %15, !dbg !3842
  store i64 %add36, i64* %full_size, align 8, !dbg !3842
  call void @llvm.dbg.value(metadata i32 1, metadata !3779, metadata !DIExpression()), !dbg !3826
  br label %if.end50, !dbg !3843

if.else:                                          ; preds = %if.end28
  %full_size38 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 11, !dbg !3844
  %16 = load i64, i64* %full_size38, align 8, !dbg !3844
  %add39 = add nsw i64 %12, %16, !dbg !3845
  %cmp41 = icmp eq i64 %add39, %10, !dbg !3846
  br i1 %cmp41, label %if.then42, label %if.end50, !dbg !3847

if.then42:                                        ; preds = %if.else
  %17 = load i64, i64* %size43, align 8, !dbg !3848
  %size44 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %q.0, i64 0, i32 3, !dbg !3849
  %18 = load i64, i64* %size44, align 8, !dbg !3850
  %add45 = add nsw i64 %18, %17, !dbg !3850
  store i64 %add45, i64* %size44, align 8, !dbg !3850
  %19 = load i64, i64* %full_size, align 8, !dbg !3851
  %add48 = add nsw i64 %16, %19, !dbg !3852
  store i64 %add48, i64* %full_size38, align 8, !dbg !3852
  call void @llvm.dbg.value(metadata i32 1, metadata !3775, metadata !DIExpression()), !dbg !3811
  br label %cleanup, !dbg !3853

if.end50:                                         ; preds = %if.else, %if.then31
  %delete_q.0 = phi i1 [ true, %if.then31 ], [ false, %if.else ]
  br i1 %delete_q.0, label %if.then52, label %cleanup, !dbg !3854

if.then52:                                        ; preds = %if.end50
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* nonnull %q.0, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3855
  br label %cleanup, !dbg !3855

cleanup:                                          ; preds = %for.body20, %if.end50, %if.then52, %if.then42
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then42 ], [ false, %for.body20 ], [ false, %if.then52 ], [ false, %if.end50 ]
  %delete_p.1 = phi i32 [ 1, %if.then42 ], [ %delete_p.0, %for.body20 ], [ %delete_p.0, %if.then52 ], [ %delete_p.0, %if.end50 ], !dbg !3811
  call void @llvm.dbg.value(metadata i32 %delete_p.1, metadata !3775, metadata !DIExpression()), !dbg !3811
  br i1 %cleanup.dest.slot.0, label %for.end55, label %for.cond18, !llvm.loop !3857

for.end55:                                        ; preds = %for.cond18, %cleanup
  %delete_p.2 = phi i32 [ %delete_p.1, %cleanup ], [ %delete_p.0, %for.cond18 ], !dbg !3823
  call void @llvm.dbg.value(metadata i32 %delete_p.2, metadata !3775, metadata !DIExpression()), !dbg !3811
  %tobool56 = icmp eq i32 %delete_p.2, 0, !dbg !3859
  br i1 %tobool56, label %cleanup59, label %if.then57, !dbg !3861

if.then57:                                        ; preds = %for.end55
  tail call fastcc void @cut_slot_from_list(%struct.temp_slot* nonnull %p.1, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20)) #7, !dbg !3862
  br label %cleanup59, !dbg !3862

cleanup59:                                        ; preds = %for.end55, %for.body12, %if.then57
  call void @llvm.dbg.value(metadata %struct.temp_slot* %4, metadata !3770, metadata !DIExpression()), !dbg !3789
  br label %for.cond10, !dbg !3863, !llvm.loop !3864

cleanup.cont70.loopexit:                          ; preds = %for.cond10
  br label %cleanup.cont70, !dbg !3806

cleanup.cont70.loopexit2.us-lcssa:                ; preds = %for.body
  br label %cleanup.cont70.loopexit2, !dbg !3806

cleanup.cont70.loopexit2:                         ; preds = %cleanup.cont70.loopexit2.us-lcssa.us, %cleanup.cont70.loopexit2.us-lcssa
  br label %cleanup.cont70, !dbg !3806

cleanup.cont70:                                   ; preds = %cleanup.cont70.loopexit2, %cleanup.cont70.loopexit, %entry
  ret void, !dbg !3806
}

; Function Attrs: nounwind uwtable
define dso_local void @push_temp_slots() local_unnamed_addr #4 !dbg !3866 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3867
  %inc = add nsw i32 %0, 1, !dbg !3867
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3867
  ret void, !dbg !3868
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_temp_slots() local_unnamed_addr #4 !dbg !3869 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !3873, metadata !DIExpression()), !dbg !3874
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3875
  %call = tail call fastcc %struct.temp_slot** @temp_slots_at_level(i32 %0) #7, !dbg !3877
  %1 = load %struct.temp_slot*, %struct.temp_slot** %call, align 8, !dbg !3878
  call void @llvm.dbg.value(metadata %struct.temp_slot* %1, metadata !3871, metadata !DIExpression()), !dbg !3874
  br label %for.cond, !dbg !3879

for.cond:                                         ; preds = %for.body, %entry
  %some_available.0 = phi i8 [ 0, %entry ], [ 1, %for.body ], !dbg !3874
  %p.0 = phi %struct.temp_slot* [ %1, %entry ], [ %2, %for.body ], !dbg !3880
  call void @llvm.dbg.value(metadata %struct.temp_slot* %p.0, metadata !3871, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %some_available.0, metadata !3873, metadata !DIExpression()), !dbg !3874
  %tobool = icmp eq %struct.temp_slot* %p.0, null, !dbg !3881
  br i1 %tobool, label %for.end, label %for.body, !dbg !3881

for.body:                                         ; preds = %for.cond
  %next1 = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %p.0, i64 0, i32 0, !dbg !3882
  %2 = load %struct.temp_slot*, %struct.temp_slot** %next1, align 8, !dbg !3882
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3872, metadata !DIExpression()), !dbg !3874
  tail call fastcc void @make_slot_available(%struct.temp_slot* nonnull %p.0) #7, !dbg !3885
  call void @llvm.dbg.value(metadata i8 1, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %struct.temp_slot* %2, metadata !3871, metadata !DIExpression()), !dbg !3874
  br label %for.cond, !dbg !3886, !llvm.loop !3887

for.end:                                          ; preds = %for.cond
  %some_available.0.lcssa = phi i8 [ %some_available.0, %for.cond ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %some_available.0.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3874
  %tobool2 = icmp eq i8 %some_available.0.lcssa, 0, !dbg !3889
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3891

if.then:                                          ; preds = %for.end
  tail call fastcc void @remove_unused_temp_slot_addresses() #7, !dbg !3892
  tail call fastcc void @combine_temp_slots() #7, !dbg !3894
  br label %if.end, !dbg !3895

if.end:                                           ; preds = %for.end, %if.then
  %3 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3896
  %dec = add nsw i32 %3, -1, !dbg !3896
  store i32 %dec, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3896
  ret void, !dbg !3897
}

; Function Attrs: nounwind uwtable
define dso_local void @init_temp_slots() local_unnamed_addr #4 !dbg !3898 {
entry:
  store %struct.temp_slot* null, %struct.temp_slot** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 20), align 8, !dbg !3899
  store %struct.VEC_temp_slot_p_gc* null, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !3900
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 21), align 8, !dbg !3901
  %0 = load %struct.htab*, %struct.htab** @temp_slot_address_table, align 8, !dbg !3902
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3902
  br i1 %tobool, label %if.then, label %if.else, !dbg !3904

if.then:                                          ; preds = %entry
  %call = tail call %struct.htab* @htab_create_alloc(i64 32, i32 (i8*)* nonnull @temp_slot_address_hash, i32 (i8*, i8*)* nonnull @temp_slot_address_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !3905
  store %struct.htab* %call, %struct.htab** @temp_slot_address_table, align 8, !dbg !3906
  br label %if.end, !dbg !3907

if.else:                                          ; preds = %entry
  tail call void @htab_empty(%struct.htab* nonnull %0) #6, !dbg !3908
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3909
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @temp_slot_address_hash(i8* %p) #4 !dbg !3910 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !3912, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i8* %p, metadata !3913, metadata !DIExpression()), !dbg !3914
  %hash = bitcast i8* %p to i32*, !dbg !3915
  %0 = load i32, i32* %hash, align 8, !dbg !3915
  ret i32 %0, !dbg !3916
}

; Function Attrs: nounwind uwtable
define internal i32 @temp_slot_address_eq(i8* %p1, i8* %p2) #4 !dbg !3917 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3919, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3920, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3921, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3922, metadata !DIExpression()), !dbg !3923
  %address = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !3924
  %0 = bitcast i8* %address to %struct.rtx_def**, !dbg !3924
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !3924
  %address1 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !3925
  %2 = bitcast i8* %address1 to %struct.rtx_def**, !dbg !3925
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !3925
  %call = tail call i32 @exp_equiv_p(%struct.rtx_def* %1, %struct.rtx_def* %3, i32 0, i8 zeroext 1) #6, !dbg !3926
  ret i32 %call, !dbg !3927
}

declare dso_local i8* @ggc_calloc(i64, i64) #1

declare dso_local void @ggc_free(i8*) #1

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @instantiate_decl_rtl(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3928 {
entry:
  br label %tailrecurse, !dbg !3932

tailrecurse:                                      ; preds = %if.then2, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %3, %if.then2 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !3930, metadata !DIExpression()), !dbg !3935
  %cmp = icmp eq %struct.rtx_def* %x.tr, null, !dbg !3936
  br i1 %cmp, label %cleanup.cont.loopexit, label %if.end, !dbg !3938

if.end:                                           ; preds = %tailrecurse
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !3939
  %bf.load = load i32, i32* %0, align 8, !dbg !3939
  %bf.clear = and i32 %bf.load, 65535, !dbg !3939
  %cmp1 = icmp eq i32 %bf.clear, 41, !dbg !3940
  br i1 %cmp1, label %if.then2, label %if.end7, !dbg !3941

if.then2:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3942
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3942
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3942
  tail call void @instantiate_decl_rtl(%struct.rtx_def* %1) #7, !dbg !3943
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3944
  %rt_rtx6 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3944
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !3944
  br label %tailrecurse, !dbg !3932

if.end7:                                          ; preds = %if.end
  %bf.clear.lcssa = phi i32 [ %bf.clear, %if.end ], !dbg !3939
  %x.tr.lcssa3 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa3, metadata !3930, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa3, metadata !3930, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa3, metadata !3930, metadata !DIExpression()), !dbg !3935
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 43, !dbg !3945
  br i1 %cmp10, label %if.end12, label %cleanup.cont, !dbg !3947

if.end12:                                         ; preds = %if.end7
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3948
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !3948
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3931, metadata !DIExpression()), !dbg !3935
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3949
  %bf.load17 = load i32, i32* %5, align 8, !dbg !3949
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !3949
  %idxprom = zext i32 %bf.clear18 to i64, !dbg !3949
  %arrayidx19 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3949
  %6 = load i32, i32* %arrayidx19, align 4, !dbg !3949
  %cmp20 = icmp eq i32 %6, 9, !dbg !3949
  br i1 %cmp20, label %cleanup.cont, label %lor.lhs.false, !dbg !3951

lor.lhs.false:                                    ; preds = %if.end12
  %cmp23 = icmp eq i32 %bf.clear18, 37, !dbg !3952
  br i1 %cmp23, label %land.lhs.true, label %if.end29, !dbg !3953

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !3954
  %cmp24 = icmp ult i32 %call, 53, !dbg !3955
  br i1 %cmp24, label %cleanup.cont, label %lor.lhs.false25, !dbg !3956

lor.lhs.false25:                                  ; preds = %land.lhs.true
  %call26 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !3957
  %cmp27 = icmp ugt i32 %call26, 57, !dbg !3958
  br i1 %cmp27, label %cleanup.cont, label %if.end29, !dbg !3959

if.end29:                                         ; preds = %lor.lhs.false25, %lor.lhs.false
  %call34 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx16, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* null) #6, !dbg !3960
  br label %cleanup.cont, !dbg !3961

cleanup.cont.loopexit:                            ; preds = %tailrecurse
  br label %cleanup.cont, !dbg !3961

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end29, %if.end7, %lor.lhs.false25, %land.lhs.true, %if.end12
  ret void, !dbg !3961
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3962 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3969, metadata !DIExpression()), !dbg !3970
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3971
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3971
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3971
  ret i32 %0, !dbg !3972
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @instantiate_virtual_regs_in_rtx(%struct.rtx_def** %loc, i8* %data) #4 !dbg !3973 {
entry:
  %offset = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3978, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %data, metadata !3979, metadata !DIExpression()), !dbg !3984
  %0 = bitcast i64* %offset to i8*, !dbg !3985
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3985
  call void @llvm.dbg.value(metadata i8* %data, metadata !3981, metadata !DIExpression()), !dbg !3984
  %1 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !3986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3982, metadata !DIExpression()), !dbg !3984
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !3987
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3989

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3990
  %bf.load = load i32, i32* %2, align 8, !dbg !3990
  %trunc = trunc i32 %bf.load to i16, !dbg !3991
  switch i16 %trunc, label %cleanup [
    i16 37, label %sw.bb
    i16 49, label %sw.bb7
  ], !dbg !3991

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.value(metadata i64* %offset, metadata !3980, metadata !DIExpression(DW_OP_deref)), !dbg !3984
  %call = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* nonnull %1, i64* nonnull %offset) #7, !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3983, metadata !DIExpression()), !dbg !3984
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3994
  br i1 %tobool, label %cleanup, label %if.then1, !dbg !3996

if.then1:                                         ; preds = %sw.bb
  %3 = load i64, i64* %offset, align 8, !dbg !3997
  call void @llvm.dbg.value(metadata i64 %3, metadata !3980, metadata !DIExpression()), !dbg !3984
  %call2 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %call, i64 %3) #6, !dbg !3999
  store %struct.rtx_def* %call2, %struct.rtx_def** %loc, align 8, !dbg !4000
  %tobool3 = icmp eq i8* %data, null, !dbg !4001
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !4003

if.then4:                                         ; preds = %if.then1
  store i8 1, i8* %data, align 1, !dbg !4004
  br label %cleanup, !dbg !4005

sw.bb7:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4006
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4006
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4006
  call void @llvm.dbg.value(metadata i64* %offset, metadata !3980, metadata !DIExpression(DW_OP_deref)), !dbg !3984
  %call8 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %4, i64* nonnull %offset) #7, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !3983, metadata !DIExpression()), !dbg !3984
  %tobool9 = icmp eq %struct.rtx_def* %call8, null, !dbg !4008
  br i1 %tobool9, label %cleanup, label %if.then10, !dbg !4010

if.then10:                                        ; preds = %sw.bb7
  %5 = load i64, i64* %offset, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata i64 %5, metadata !3980, metadata !DIExpression()), !dbg !3984
  %call11 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %call8, i64 %5) #6, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !3983, metadata !DIExpression()), !dbg !3984
  %bf.load12 = load i32, i32* %2, align 8, !dbg !4014
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4014
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4014
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4015
  %rt_rtx17 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4015
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !4015
  %call18 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear13, %struct.rtx_def* %call11, %struct.rtx_def* %7) #6, !dbg !4016
  store %struct.rtx_def* %call18, %struct.rtx_def** %loc, align 8, !dbg !4017
  %tobool19 = icmp eq i8* %data, null, !dbg !4018
  br i1 %tobool19, label %cleanup, label %if.then20, !dbg !4020

if.then20:                                        ; preds = %if.then10
  store i8 1, i8* %data, align 1, !dbg !4021
  br label %cleanup, !dbg !4022

cleanup:                                          ; preds = %if.then1, %sw.bb, %if.then10, %sw.bb7, %if.end, %if.then20, %if.then4, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ -1, %if.then1 ], [ -1, %if.then4 ], [ -1, %sw.bb ], [ -1, %if.then20 ], [ -1, %if.then10 ], [ 0, %if.end ], [ 0, %sw.bb7 ], !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4023
  ret i32 %retval.0, !dbg !4023
}

; Function Attrs: nounwind uwtable
define internal i32 @instantiate_virtual_regs() #4 !dbg !4024 {
entry:
  %0 = load i32, i32* @target_flags, align 4, !dbg !4027
  %and = and i32 %0, 4, !dbg !4027
  %cmp = icmp eq i32 %and, 0, !dbg !4027
  br i1 %cmp, label %lor.lhs.false, label %cond.true, !dbg !4027

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @ix86_cfun_abi() #6, !dbg !4027
  %cmp1 = icmp eq i32 %call, 1, !dbg !4027
  br i1 %cmp1, label %cond.true, label %cond.end11, !dbg !4027

cond.true:                                        ; preds = %entry, %lor.lhs.false
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 6), align 8, !dbg !4027
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4027
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4027
  br i1 %tobool, label %cond.end, label %cond.false, !dbg !4027

cond.false:                                       ; preds = %cond.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4027
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4027
  br label %cond.end, !dbg !4027

cond.end:                                         ; preds = %cond.true, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ null, %cond.true ], !dbg !4027
  %call3 = tail call i32 @ix86_function_type_abi(%union.tree_node* %cond) #6, !dbg !4027
  %cmp4 = icmp eq i32 %call3, 1, !dbg !4027
  br i1 %cmp4, label %cond.end8, label %cond.false6, !dbg !4027

cond.false6:                                      ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4027
  %call7 = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* %4) #6, !dbg !4027
  br label %cond.end8, !dbg !4027

cond.end8:                                        ; preds = %cond.end, %cond.false6
  %cond9 = phi i32 [ %call7, %cond.false6 ], [ 0, %cond.end ], !dbg !4027
  %add = add nsw i32 %1, %cond9, !dbg !4027
  br label %cond.end11, !dbg !4027

cond.end11:                                       ; preds = %lor.lhs.false, %cond.end8
  %cond12 = phi i32 [ %add, %cond.end8 ], [ 0, %lor.lhs.false ], !dbg !4027
  store i32 %cond12, i32* @dynamic_offset, align 4, !dbg !4028
  %5 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 2), align 8, !dbg !4029
  store i32 %5, i32* @cfa_offset, align 4, !dbg !4030
  tail call void @init_recog() #6, !dbg !4031
  %call15 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4032
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !4026, metadata !DIExpression()), !dbg !4034
  br label %for.cond, !dbg !4035

for.cond:                                         ; preds = %for.inc, %cond.end11
  %insn.0 = phi %struct.rtx_def* [ %call15, %cond.end11 ], [ %12, %for.inc ], !dbg !4036
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4026, metadata !DIExpression()), !dbg !4034
  %tobool16 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4037
  br i1 %tobool16, label %for.end, label %for.body, !dbg !4037

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4038
  %bf.load = load i32, i32* %6, align 8, !dbg !4038
  %bf.clear = and i32 %bf.load, 65535, !dbg !4038
  %cmp17 = icmp eq i32 %bf.clear, 8, !dbg !4038
  br i1 %cmp17, label %if.then, label %lor.lhs.false18, !dbg !4038

lor.lhs.false18:                                  ; preds = %for.body
  %cmp21 = icmp eq i32 %bf.clear, 7, !dbg !4038
  br i1 %cmp21, label %if.then, label %lor.lhs.false22, !dbg !4038

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 9, !dbg !4038
  br i1 %cmp25, label %if.then, label %lor.lhs.false26, !dbg !4038

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %cmp29 = icmp eq i32 %bf.clear, 10, !dbg !4038
  br i1 %cmp29, label %if.then, label %for.inc, !dbg !4041

if.then:                                          ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false18, %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4042
  %7 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4042
  %8 = bitcast %union.rtunion_def* %7 to i32**, !dbg !4042
  %9 = load i32*, i32** %8, align 8, !dbg !4042
  %bf.load30 = load i32, i32* %9, align 8, !dbg !4042
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !4042
  %cmp32 = icmp eq i32 %bf.clear31, 24, !dbg !4045
  br i1 %cmp32, label %for.inc, label %lor.lhs.false33, !dbg !4046

lor.lhs.false33:                                  ; preds = %if.then
  %cmp40 = icmp eq i32 %bf.clear31, 25, !dbg !4047
  br i1 %cmp40, label %for.inc, label %lor.lhs.false41, !dbg !4048

lor.lhs.false41:                                  ; preds = %lor.lhs.false33
  %cmp48 = icmp eq i32 %bf.clear31, 20, !dbg !4049
  br i1 %cmp48, label %for.inc, label %lor.lhs.false49, !dbg !4050

lor.lhs.false49:                                  ; preds = %lor.lhs.false41
  %cmp56 = icmp eq i32 %bf.clear31, 21, !dbg !4051
  br i1 %cmp56, label %for.inc, label %lor.lhs.false57, !dbg !4052

lor.lhs.false57:                                  ; preds = %lor.lhs.false49
  %cmp64 = icmp eq i32 %bf.clear31, 16, !dbg !4053
  br i1 %cmp64, label %for.inc, label %if.else, !dbg !4054

if.else:                                          ; preds = %lor.lhs.false57
  %cmp68 = icmp eq i32 %bf.clear, 7, !dbg !4055
  br i1 %cmp68, label %if.then69, label %if.else75, !dbg !4057

if.then69:                                        ; preds = %if.else
  %rt_rtx73 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !4058
  %call74 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx73, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* null) #6, !dbg !4059
  br label %if.end76, !dbg !4059

if.else75:                                        ; preds = %if.else
  tail call fastcc void @instantiate_virtual_regs_in_insn(%struct.rtx_def* nonnull %insn.0) #7, !dbg !4060
  br label %if.end76

if.end76:                                         ; preds = %if.then69, %if.else75
  %bf.load77 = load i32, i32* %6, align 8, !dbg !4061
  %bf.clear78 = and i32 %bf.load77, 134217728, !dbg !4061
  %tobool79 = icmp eq i32 %bf.clear78, 0, !dbg !4061
  br i1 %tobool79, label %if.end81, label %for.inc, !dbg !4063

if.end81:                                         ; preds = %if.end76
  %10 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4064
  %rt_rtx85 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4064
  %call86 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx85, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* null) #6, !dbg !4065
  %bf.load87 = load i32, i32* %6, align 8, !dbg !4066
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !4066
  %cmp89 = icmp eq i32 %bf.clear88, 10, !dbg !4066
  br i1 %cmp89, label %if.then90, label %for.inc, !dbg !4068

if.then90:                                        ; preds = %if.end81
  %arrayidx93 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !4069
  %rt_rtx94 = bitcast %struct.object_block** %arrayidx93 to %struct.rtx_def**, !dbg !4069
  %call95 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx94, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* null) #6, !dbg !4070
  br label %for.inc, !dbg !4070

for.inc:                                          ; preds = %if.end76, %lor.lhs.false26, %if.then90, %if.end81, %if.then, %lor.lhs.false33, %lor.lhs.false41, %lor.lhs.false49, %lor.lhs.false57
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4071
  %rt_rtx101 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4071
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !4071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4026, metadata !DIExpression()), !dbg !4034
  br label %for.cond, !dbg !4072, !llvm.loop !4073

for.end:                                          ; preds = %for.cond
  %13 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4075
  tail call fastcc void @instantiate_decls(%union.tree_node* %13) #7, !dbg !4076
  %14 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 99), align 8, !dbg !4077
  tail call void %14() #6, !dbg !4078
  store i32 1, i32* @virtuals_instantiated, align 4, !dbg !4079
  ret i32 0, !dbg !4080
}

; Function Attrs: nounwind uwtable
define dso_local i32 @aggregate_value_p(%union.tree_node* %exp, %union.tree_node* %fntype) local_unnamed_addr #4 !dbg !4081 {
entry:
  br label %tailrecurse, !dbg !4096

tailrecurse:                                      ; preds = %if.then40, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %call41, %if.then40 ]
  %fntype.tr = phi %union.tree_node* [ %fntype, %entry ], [ %fntype.addr.1, %if.then40 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.tr, metadata !4089, metadata !DIExpression()), !dbg !4098
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4099
  %bf.load = load i64, i64* %0, align 8, !dbg !4099
  %bf.cast = and i64 %bf.load, 65535, !dbg !4099
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4099
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4099
  %cmp = icmp eq i32 %1, 2, !dbg !4099
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4100

cond.false:                                       ; preds = %tailrecurse
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4101
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4101
  br label %cond.end, !dbg !4100

cond.end:                                         ; preds = %tailrecurse, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ %exp.tr, %tailrecurse ], !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4095, metadata !DIExpression()), !dbg !4098
  %tobool = icmp eq %union.tree_node* %fntype.tr, null, !dbg !4102
  br i1 %tobool, label %if.end, label %if.then, !dbg !4104

if.then:                                          ; preds = %cond.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4105
  %bf.load3 = load i64, i64* %3, align 8, !dbg !4105
  %4 = trunc i64 %bf.load3 to i16, !dbg !4105
  switch i16 %4, label %sw.default [
    i16 59, label %sw.bb
    i16 29, label %sw.bb19
    i16 20, label %if.end
    i16 21, label %if.end
    i16 1, label %sw.bb23
  ], !dbg !4106

sw.bb:                                            ; preds = %if.then
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* nonnull %fntype.tr) #6, !dbg !4107
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4095, metadata !DIExpression()), !dbg !4098
  %tobool6 = icmp eq %union.tree_node* %call, null, !dbg !4109
  br i1 %tobool6, label %cond.false10, label %cond.true7, !dbg !4109

cond.true7:                                       ; preds = %sw.bb
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4110
  %5 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !4110
  br label %if.end, !dbg !4109

cond.false10:                                     ; preds = %sw.bb
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4111
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4111
  %6 = bitcast %union.tree_node** %arrayidx12 to %struct.tree_common**, !dbg !4111
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !4111
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !4111
  %8 = bitcast %union.tree_node** %type14 to %struct.tree_common**, !dbg !4111
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !4111
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !4111
  %10 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !4111
  br label %if.end, !dbg !4109

sw.bb19:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.tr, metadata !4095, metadata !DIExpression()), !dbg !4098
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4112
  %11 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !4112
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4089, metadata !DIExpression()), !dbg !4098
  br label %if.end, !dbg !4113

sw.bb23:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4089, metadata !DIExpression()), !dbg !4098
  br label %if.end, !dbg !4114

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1887, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4115
  br label %if.end, !dbg !4116

if.end:                                           ; preds = %cond.end, %sw.bb19, %sw.bb23, %sw.default, %cond.false10, %cond.true7, %if.then, %if.then
  %fndecl.1 = phi %union.tree_node* [ null, %cond.end ], [ null, %sw.default ], [ null, %sw.bb23 ], [ %fntype.tr, %sw.bb19 ], [ null, %cond.false10 ], [ %call, %cond.true7 ], [ null, %if.then ], [ null, %if.then ], !dbg !4117
  %fntype.addr.1 = phi %union.tree_node* [ null, %cond.end ], [ %fntype.tr, %sw.default ], [ null, %sw.bb23 ], [ %11, %sw.bb19 ], [ %10, %cond.false10 ], [ %5, %cond.true7 ], [ %fntype.tr, %if.then ], [ %fntype.tr, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1, metadata !4095, metadata !DIExpression()), !dbg !4098
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4118
  %bf.load25 = load i64, i64* %12, align 8, !dbg !4118
  %bf.cast271 = and i64 %bf.load25, 65535, !dbg !4120
  %cmp28 = icmp eq i64 %bf.cast271, 19, !dbg !4120
  br i1 %cmp28, label %cleanup.loopexit14, label %if.end30, !dbg !4121

if.end30:                                         ; preds = %if.end
  %cmp35 = icmp eq i64 %bf.cast271, 16, !dbg !4122
  br i1 %cmp35, label %land.lhs.true, label %if.end43, !dbg !4123

land.lhs.true:                                    ; preds = %if.end30
  %type36 = bitcast %union.tree_node* %cond to %struct.tree_type*, !dbg !4124
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i64 0, i32 6, !dbg !4124
  %bf.load37 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !4124
  %bf.clear38 = and i32 %bf.load37, 4096, !dbg !4124
  %tobool39 = icmp eq i32 %bf.clear38, 0, !dbg !4124
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !4125

if.then40:                                        ; preds = %land.lhs.true
  %call41 = tail call %union.tree_node* @first_field(%union.tree_node* %cond) #6, !dbg !4126
  br label %tailrecurse, !dbg !4096

if.end43:                                         ; preds = %land.lhs.true, %if.end30
  %fndecl.1.lcssa36 = phi %union.tree_node* [ %fndecl.1, %land.lhs.true ], [ %fndecl.1, %if.end30 ], !dbg !4117
  %fntype.addr.1.lcssa35 = phi %union.tree_node* [ %fntype.addr.1, %land.lhs.true ], [ %fntype.addr.1, %if.end30 ]
  %.lcssa34 = phi i64* [ %12, %land.lhs.true ], [ %12, %if.end30 ], !dbg !4118
  %cond.lcssa32 = phi %union.tree_node* [ %cond, %land.lhs.true ], [ %cond, %if.end30 ], !dbg !4100
  %exp.tr.lcssa31 = phi %union.tree_node* [ %exp.tr, %land.lhs.true ], [ %exp.tr, %if.end30 ]
  %.lcssa30 = phi i64* [ %0, %land.lhs.true ], [ %0, %if.end30 ], !dbg !4099
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1.lcssa36, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.addr.1.lcssa35, metadata !4089, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.lcssa32, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa31, metadata !4088, metadata !DIExpression()), !dbg !4098
  %bf.load45 = load i64, i64* %.lcssa30, align 8, !dbg !4127
  %bf.cast473 = and i64 %bf.load45, 65535, !dbg !4129
  %cmp48 = icmp eq i64 %bf.cast473, 34, !dbg !4129
  br i1 %cmp48, label %land.lhs.true54, label %lor.lhs.false, !dbg !4130

lor.lhs.false:                                    ; preds = %if.end43
  %cmp53 = icmp eq i64 %bf.cast473, 36, !dbg !4131
  br i1 %cmp53, label %land.lhs.true54, label %if.end61, !dbg !4132

land.lhs.true54:                                  ; preds = %lor.lhs.false, %if.end43
  %decl_by_reference_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4133
  %13 = bitcast i40* %decl_by_reference_flag to i64*, !dbg !4133
  %bf.load55 = load i64, i64* %13, align 8, !dbg !4133
  %bf.cast5813 = and i64 %bf.load55, 268435456, !dbg !4133
  %tobool59 = icmp eq i64 %bf.cast5813, 0, !dbg !4133
  br i1 %tobool59, label %if.end61, label %cleanup, !dbg !4134

if.end61:                                         ; preds = %land.lhs.true54, %lor.lhs.false
  %cmp66 = icmp eq i64 %bf.cast473, 59, !dbg !4135
  %tobool68 = icmp ne %union.tree_node* %fndecl.1.lcssa36, null, !dbg !4137
  %or.cond = and i1 %cmp66, %tobool68, !dbg !4138
  br i1 %or.cond, label %land.lhs.true69, label %if.end82, !dbg !4138

land.lhs.true69:                                  ; preds = %if.end61
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.1.lcssa36, i64 0, i32 0, i32 0, i32 3, !dbg !4139
  %14 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4139
  %tobool70 = icmp eq %union.tree_node* %14, null, !dbg !4139
  br i1 %tobool70, label %if.end82, label %land.lhs.true71, !dbg !4140

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %decl_by_reference_flag75 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4141
  %15 = bitcast i40* %decl_by_reference_flag75 to i64*, !dbg !4141
  %bf.load76 = load i64, i64* %15, align 8, !dbg !4141
  %bf.cast7912 = and i64 %bf.load76, 268435456, !dbg !4141
  %tobool80 = icmp eq i64 %bf.cast7912, 0, !dbg !4141
  br i1 %tobool80, label %if.end82, label %cleanup, !dbg !4142

if.end82:                                         ; preds = %land.lhs.true71, %land.lhs.true69, %if.end61
  %16 = load i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 3), align 8, !dbg !4143
  %call83 = tail call zeroext i8 %16(%union.tree_node* %cond.lcssa32, %union.tree_node* %fntype.addr.1.lcssa35) #6, !dbg !4145
  %tobool84 = icmp eq i8 %call83, 0, !dbg !4145
  br i1 %tobool84, label %if.end86, label %cleanup, !dbg !4146

if.end86:                                         ; preds = %if.end82
  %bf.load88 = load i64, i64* %.lcssa34, align 8, !dbg !4147
  %bf.cast916 = and i64 %bf.load88, 262144, !dbg !4147
  %tobool92 = icmp eq i64 %bf.cast916, 0, !dbg !4147
  br i1 %tobool92, label %if.end94, label %cleanup, !dbg !4149

if.end94:                                         ; preds = %if.end86
  %17 = load i32, i32* @flag_pcc_struct_return, align 4, !dbg !4150
  %tobool95 = icmp eq i32 %17, 0, !dbg !4150
  br i1 %tobool95, label %if.end121, label %land.lhs.true96, !dbg !4152

land.lhs.true96:                                  ; preds = %if.end94
  %bf.cast1008 = and i64 %bf.load88, 65535, !dbg !4153
  %cmp101 = icmp eq i64 %bf.cast1008, 15, !dbg !4153
  br i1 %cmp101, label %cleanup, label %lor.lhs.false102, !dbg !4153

lor.lhs.false102:                                 ; preds = %land.lhs.true96
  %cmp107 = icmp eq i64 %bf.cast1008, 16, !dbg !4153
  br i1 %cmp107, label %cleanup, label %lor.lhs.false108, !dbg !4153

lor.lhs.false108:                                 ; preds = %lor.lhs.false102
  %cmp113 = icmp eq i64 %bf.cast1008, 17, !dbg !4153
  br i1 %cmp113, label %cleanup, label %lor.lhs.false114, !dbg !4153

lor.lhs.false114:                                 ; preds = %lor.lhs.false108
  %cmp119 = icmp eq i64 %bf.cast1008, 18, !dbg !4153
  br i1 %cmp119, label %cleanup, label %if.end121, !dbg !4154

if.end121:                                        ; preds = %if.end94, %lor.lhs.false114
  %call122 = tail call %struct.rtx_def* @hard_function_value(%union.tree_node* %cond.lcssa32, %union.tree_node* null, %union.tree_node* %fntype.addr.1.lcssa35, i32 0) #6, !dbg !4155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !4093, metadata !DIExpression()), !dbg !4098
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call122, i64 0, i32 0, !dbg !4156
  %bf.load123 = load i32, i32* %18, align 8, !dbg !4156
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !4156
  %cmp125 = icmp eq i32 %bf.clear124, 37, !dbg !4156
  br i1 %cmp125, label %if.end127, label %cleanup, !dbg !4158

if.end127:                                        ; preds = %if.end121
  %call128 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call122) #7, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %call128, metadata !4091, metadata !DIExpression()), !dbg !4098
  %idxprom129 = sext i32 %call128 to i64, !dbg !4160
  %bf.load132 = load i64, i64* %.lcssa34, align 8, !dbg !4161
  %bf.cast1347 = and i64 %bf.load132, 65535, !dbg !4161
  %cmp135 = icmp eq i64 %bf.cast1347, 14, !dbg !4161
  br i1 %cmp135, label %cond.true136, label %cond.false138, !dbg !4161

cond.true136:                                     ; preds = %if.end127
  %call137 = tail call i32 @vector_type_mode(%union.tree_node* %cond.lcssa32) #6, !dbg !4161
  br label %cond.end143, !dbg !4161

cond.false138:                                    ; preds = %if.end127
  %type139 = bitcast %union.tree_node* %cond.lcssa32 to %struct.tree_type*, !dbg !4161
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type139, i64 0, i32 6, !dbg !4161
  %bf.load140 = load i32, i32* %mode, align 4, !dbg !4161
  %bf.lshr141 = lshr i32 %bf.load140, 16, !dbg !4161
  %bf.clear142 = and i32 %bf.lshr141, 255, !dbg !4161
  br label %cond.end143, !dbg !4161

cond.end143:                                      ; preds = %cond.false138, %cond.true136
  %cond144 = phi i32 [ %call137, %cond.true136 ], [ %bf.clear142, %cond.false138 ], !dbg !4161
  %idxprom145 = zext i32 %cond144 to i64, !dbg !4160
  %arrayidx146 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom129, i64 %idxprom145, !dbg !4160
  %19 = load i8, i8* %arrayidx146, align 1, !dbg !4160
  call void @llvm.dbg.value(metadata i8 %19, metadata !4092, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i32 0, metadata !4090, metadata !DIExpression()), !dbg !4098
  %20 = sext i32 %call128 to i64, !dbg !4162
  %wide.trip.count = zext i8 %19 to i64, !dbg !4164
  br label %for.cond, !dbg !4162

for.cond:                                         ; preds = %for.inc, %cond.end143
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end143 ], !dbg !4166
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4090, metadata !DIExpression()), !dbg !4098
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4164
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !4167

for.body:                                         ; preds = %for.cond
  %21 = add nsw i64 %indvars.iv, %20, !dbg !4168
  %arrayidx150 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %21, !dbg !4170
  %22 = load i8, i8* %arrayidx150, align 1, !dbg !4170
  %tobool151 = icmp eq i8 %22, 0, !dbg !4170
  br i1 %tobool151, label %cleanup.loopexit, label %for.inc, !dbg !4171

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4172
  call void @llvm.dbg.value(metadata i32 undef, metadata !4090, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4098
  br label %for.cond, !dbg !4173, !llvm.loop !4174

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !4176

cleanup.loopexit14:                               ; preds = %if.end
  br label %cleanup, !dbg !4176

cleanup:                                          ; preds = %cleanup.loopexit14, %cleanup.loopexit, %land.lhs.true54, %land.lhs.true71, %if.end86, %if.end82, %if.end121, %land.lhs.true96, %lor.lhs.false102, %lor.lhs.false108, %lor.lhs.false114
  %retval.0 = phi i32 [ 1, %land.lhs.true54 ], [ 1, %land.lhs.true71 ], [ 1, %if.end82 ], [ 1, %if.end86 ], [ 1, %lor.lhs.false114 ], [ 1, %lor.lhs.false108 ], [ 1, %lor.lhs.false102 ], [ 1, %land.lhs.true96 ], [ 0, %if.end121 ], [ %retval.0.ph, %cleanup.loopexit ], [ 0, %cleanup.loopexit14 ], !dbg !4098
  ret i32 %retval.0, !dbg !4176
}

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @first_field(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @hard_function_value(%union.tree_node*, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @use_register_for_decl(%union.tree_node* %decl) local_unnamed_addr #4 !dbg !4177 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4181, metadata !DIExpression()), !dbg !4182
  %0 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 20), align 8, !dbg !4183
  %call = tail call zeroext i8 %0() #6, !dbg !4185
  %tobool = icmp eq i8 %call, 0, !dbg !4185
  br i1 %tobool, label %return, label %if.end, !dbg !4186

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4187
  %bf.load = load i64, i64* %1, align 8, !dbg !4187
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !4187
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !4187
  br i1 %tobool1, label %if.end3, label %return, !dbg !4189

if.end3:                                          ; preds = %if.end
  %bf.cast82 = and i64 %bf.load, 262144, !dbg !4190
  %tobool9 = icmp eq i64 %bf.cast82, 0, !dbg !4190
  br i1 %tobool9, label %if.end11, label %return, !dbg !4192

if.end11:                                         ; preds = %if.end3
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4193
  %2 = bitcast i40* %mode to i64*, !dbg !4193
  %bf.load12 = load i64, i64* %2, align 8, !dbg !4193
  %bf.cast143 = and i64 %bf.load12, 255, !dbg !4195
  %cmp = icmp eq i64 %bf.cast143, 1, !dbg !4195
  br i1 %cmp, label %return, label %if.end16, !dbg !4196

if.end16:                                         ; preds = %if.end11
  %3 = load i32, i32* @flag_float_store, align 4, !dbg !4197
  %tobool17 = icmp eq i32 %3, 0, !dbg !4197
  br i1 %tobool17, label %if.end49, label %land.lhs.true, !dbg !4199

land.lhs.true:                                    ; preds = %if.end16
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4200
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !4200
  %5 = load i64*, i64** %4, align 8, !dbg !4200
  %bf.load19 = load i64, i64* %5, align 8, !dbg !4200
  %bf.cast216 = and i64 %bf.load19, 65535, !dbg !4200
  %cmp22 = icmp eq i64 %bf.cast216, 9, !dbg !4200
  br i1 %cmp22, label %return, label %lor.lhs.false, !dbg !4200

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp29 = icmp eq i64 %bf.cast216, 13, !dbg !4200
  br i1 %cmp29, label %land.lhs.true38, label %lor.lhs.false30, !dbg !4200

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %cmp37 = icmp eq i64 %bf.cast216, 14, !dbg !4200
  br i1 %cmp37, label %land.lhs.true38, label %if.end49, !dbg !4200

land.lhs.true38:                                  ; preds = %lor.lhs.false30, %lor.lhs.false
  %type42 = getelementptr inbounds i64, i64* %5, i64 2, !dbg !4200
  %6 = bitcast i64* %type42 to i64**, !dbg !4200
  %7 = load i64*, i64** %6, align 8, !dbg !4200
  %bf.load44 = load i64, i64* %7, align 8, !dbg !4200
  %bf.cast469 = and i64 %bf.load44, 65535, !dbg !4200
  %cmp47 = icmp eq i64 %bf.cast469, 9, !dbg !4200
  br i1 %cmp47, label %return, label %if.end49, !dbg !4201

if.end49:                                         ; preds = %if.end16, %land.lhs.true38, %lor.lhs.false30
  %bf.cast544 = and i64 %bf.load12, 1024, !dbg !4202
  %tobool55 = icmp ne i64 %bf.cast544, 0, !dbg !4202
  %8 = load i32, i32* @optimize, align 4, !dbg !4204
  %tobool58 = icmp ne i32 %8, 0, !dbg !4204
  %or.cond = or i1 %tobool55, %tobool58, !dbg !4206
  br i1 %or.cond, label %return, label %if.end60, !dbg !4206

if.end60:                                         ; preds = %if.end49
  %bf.cast655 = and i64 %bf.load12, 16777216, !dbg !4207
  %tobool66 = icmp eq i64 %bf.cast655, 0, !dbg !4207
  br i1 %tobool66, label %return, label %if.end68, !dbg !4209

if.end68:                                         ; preds = %if.end60
  %type70 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4210
  %9 = bitcast %union.tree_node** %type70 to i64**, !dbg !4210
  %10 = load i64*, i64** %9, align 8, !dbg !4210
  %bf.load72 = load i64, i64* %10, align 8, !dbg !4210
  %11 = trunc i64 %bf.load72 to i32, !dbg !4210
  %bf.cast74 = and i32 %11, 65535, !dbg !4210
  %bf.cast74.off = add nsw i32 %bf.cast74, -16, !dbg !4211
  %switch = icmp ult i32 %bf.cast74.off, 3, !dbg !4211
  br i1 %switch, label %sw.bb, label %sw.epilog, !dbg !4211

sw.bb:                                            ; preds = %if.end68
  %maxval = getelementptr inbounds i64, i64* %10, i64 14, !dbg !4212
  %12 = bitcast i64* %maxval to %union.tree_node**, !dbg !4212
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4212
  %tobool78 = icmp eq %union.tree_node* %13, null, !dbg !4212
  br i1 %tobool78, label %sw.epilog, label %return, !dbg !4215

sw.epilog:                                        ; preds = %sw.bb, %if.end68
  br label %return, !dbg !4216

return:                                           ; preds = %sw.bb, %if.end60, %if.end3, %if.end, %entry, %if.end49, %land.lhs.true, %land.lhs.true38, %if.end11, %sw.epilog
  %retval.0 = phi i8 [ 1, %sw.epilog ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ 0, %if.end11 ], [ 0, %land.lhs.true38 ], [ 0, %land.lhs.true ], [ 1, %if.end49 ], [ 0, %if.end60 ], [ 0, %sw.bb ], !dbg !4182
  ret i8 %retval.0, !dbg !4217
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @pass_by_reference(%struct.ix86_args* %ca, i32 %mode, %union.tree_node* %type, i8 zeroext %named_arg) local_unnamed_addr #4 !dbg !4218 {
entry:
  call void @llvm.dbg.value(metadata %struct.ix86_args* %ca, metadata !4242, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4243, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 %named_arg, metadata !4245, metadata !DIExpression()), !dbg !4246
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4247
  br i1 %tobool, label %if.end37, label %if.then, !dbg !4249

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4250
  %bf.load = load i64, i64* %0, align 8, !dbg !4250
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !4250
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !4250
  br i1 %tobool1, label %if.end, label %return, !dbg !4253

if.end:                                           ; preds = %if.then
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4254
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4254
  %tobool4 = icmp eq %union.tree_node* %2, null, !dbg !4254
  br i1 %tobool4, label %return, label %lor.lhs.false, !dbg !4256

lor.lhs.false:                                    ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4256
  %bf.load8 = load i64, i64* %3, align 8, !dbg !4257
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !4258
  %cmp = icmp eq i64 %bf.cast102, 23, !dbg !4258
  br i1 %cmp, label %if.end12, label %return, !dbg !4259

if.end12:                                         ; preds = %lor.lhs.false
  %bf.cast163 = and i64 %bf.load, 65535, !dbg !4260
  %cmp17 = icmp eq i64 %bf.cast163, 16, !dbg !4260
  br i1 %cmp17, label %land.lhs.true, label %if.end37, !dbg !4262

land.lhs.true:                                    ; preds = %if.end12
  %type18 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4263
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i64 0, i32 6, !dbg !4263
  %bf.load19 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !4263
  %bf.clear21 = and i32 %bf.load19, 4096, !dbg !4263
  %tobool22 = icmp eq i32 %bf.clear21, 0, !dbg !4263
  br i1 %tobool22, label %if.end37, label %if.then23, !dbg !4264

if.then23:                                        ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @first_field(%union.tree_node* nonnull %type) #6, !dbg !4265
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4265
  %4 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !4265
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4244, metadata !DIExpression()), !dbg !4246
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4267
  %bf.load26 = load i64, i64* %5, align 8, !dbg !4267
  %bf.cast284 = and i64 %bf.load26, 65535, !dbg !4267
  %cmp29 = icmp eq i64 %bf.cast284, 14, !dbg !4267
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !4267

cond.true:                                        ; preds = %if.then23
  %call30 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !4267
  br label %if.end37, !dbg !4267

cond.false:                                       ; preds = %if.then23
  %type31 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !4267
  %mode32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i64 0, i32 6, !dbg !4267
  %bf.load33 = load i32, i32* %mode32, align 4, !dbg !4267
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !4267
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !4267
  br label %if.end37, !dbg !4267

if.end37:                                         ; preds = %land.lhs.true, %entry, %if.end12, %cond.false, %cond.true
  %mode.addr.1 = phi i32 [ %mode, %entry ], [ %mode, %land.lhs.true ], [ %mode, %if.end12 ], [ %call30, %cond.true ], [ %bf.clear35, %cond.false ]
  %type.addr.1 = phi %union.tree_node* [ null, %entry ], [ %type, %land.lhs.true ], [ %type, %if.end12 ], [ %4, %cond.true ], [ %4, %cond.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %mode.addr.1, metadata !4243, metadata !DIExpression()), !dbg !4246
  %6 = load i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 5), align 8, !dbg !4268
  %call38 = tail call zeroext i8 %6(%struct.ix86_args* %ca, i32 %mode.addr.1, %union.tree_node* %type.addr.1, i8 zeroext %named_arg) #6, !dbg !4269
  br label %return, !dbg !4270

return:                                           ; preds = %lor.lhs.false, %if.end, %if.then, %if.end37
  %retval.0 = phi i8 [ %call38, %if.end37 ], [ 1, %if.then ], [ 1, %lor.lhs.false ], [ 1, %if.end ], !dbg !4246
  ret i8 %retval.0, !dbg !4271
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @reference_callee_copied(%struct.ix86_args* %ca, i32 %mode, %union.tree_node* %type, i8 zeroext %named_arg) local_unnamed_addr #4 !dbg !4272 {
entry:
  call void @llvm.dbg.value(metadata %struct.ix86_args* %ca, metadata !4274, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4275, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4276, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %named_arg, metadata !4277, metadata !DIExpression()), !dbg !4278
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4279
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4281

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4282
  %bf.load = load i64, i64* %0, align 8, !dbg !4282
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !4282
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !4282
  br i1 %tobool1, label %if.end, label %return, !dbg !4283

if.end:                                           ; preds = %land.lhs.true, %entry
  %1 = load i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 12), align 8, !dbg !4284
  %call = tail call zeroext i8 %1(%struct.ix86_args* %ca, i32 %mode, %union.tree_node* %type, i8 zeroext %named_arg) #6, !dbg !4285
  br label %return, !dbg !4286

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i8 [ %call, %if.end ], [ 0, %land.lhs.true ], !dbg !4278
  ret i8 %retval.0, !dbg !4287
}

; Function Attrs: nounwind uwtable
define dso_local %struct.gimple_seq_d* @gimplify_parameters() local_unnamed_addr #4 !dbg !4288 {
entry:
  %all = alloca %struct.assign_parm_data_all, align 8
  %parm = alloca %union.tree_node*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %fnargs = alloca %struct.VEC_tree_heap*, align 8
  %data = alloca %struct.assign_parm_data_one, align 8
  %0 = bitcast %struct.assign_parm_data_all* %all to i8*, !dbg !4350
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %0) #8, !dbg !4350
  %1 = bitcast %union.tree_node** %parm to i8*, !dbg !4351
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4351
  %2 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !4352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4352
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4309, metadata !DIExpression()), !dbg !4353
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !4354
  %3 = bitcast %struct.VEC_tree_heap** %fnargs to i8*, !dbg !4355
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4355
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4292, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call fastcc void @assign_parms_initialize_all(%struct.assign_parm_data_all* nonnull %all) #7, !dbg !4356
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4292, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  %call = call fastcc %struct.VEC_tree_heap* @assign_parms_augmented_arg_list(%struct.assign_parm_data_all* nonnull %all) #7, !dbg !4357
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !4310, metadata !DIExpression()), !dbg !4353
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !4358
  call void @llvm.dbg.value(metadata i32 0, metadata !4311, metadata !DIExpression()), !dbg !4353
  %4 = bitcast %struct.assign_parm_data_one* %data to i8*, !dbg !4359
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !4360
  %5 = bitcast %union.tree_node** %parm to %struct.tree_decl_common**, !dbg !4360
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !4359
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !4359
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !4359
  %named_arg = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !4359
  %6 = bitcast %union.tree_node** %passed_type to %struct.tree_common**, !dbg !4362
  %7 = bitcast %union.tree_node** %parm to i64**, !dbg !4363
  br label %for.cond, !dbg !4366

for.cond:                                         ; preds = %cleanup, %entry
  %8 = phi %struct.VEC_tree_heap* [ %call, %entry ], [ %.pre, %cleanup ], !dbg !4367
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !4368
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4311, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !4310, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !4310, metadata !DIExpression()), !dbg !4353
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !4367
  call void @llvm.dbg.value(metadata %union.tree_node** %parm, metadata !4308, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  %call1 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %parm) #7, !dbg !4367
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4369
  br i1 %tobool2, label %for.end, label %for.body, !dbg !4369

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #8, !dbg !4370
  %9 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4371
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4308, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4292, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !4312, metadata !DIExpression(DW_OP_deref)), !dbg !4359
  call fastcc void @assign_parm_find_data_types(%struct.assign_parm_data_all* nonnull %all, %union.tree_node* %9, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !4372
  %10 = load i32, i32* %passed_mode, align 4, !dbg !4373
  %cmp = icmp eq i32 %10, 0, !dbg !4374
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !4375

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4376
  %size = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %11, i64 0, i32 1, !dbg !4376
  %12 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4376
  %cmp3 = icmp eq %union.tree_node* %12, null, !dbg !4377
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !4378

if.end:                                           ; preds = %lor.lhs.false
  %13 = load i32, i32* %promoted_mode, align 8, !dbg !4379
  %14 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !4379
  %bf.load = load i8, i8* %named_arg, align 4, !dbg !4379
  %bf.clear = and i8 %bf.load, 1, !dbg !4379
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4379
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 %13, %union.tree_node* %14, i32 %bf.cast) #6, !dbg !4379
  %call5 = call %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node** nonnull %passed_type, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @gimplify_parm_type, i8* nonnull %2, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4380
  %15 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4381
  %size_unit = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 4, !dbg !4381
  %16 = bitcast %union.tree_node** %size_unit to i64**, !dbg !4381
  %17 = load i64*, i64** %16, align 8, !dbg !4381
  %bf.load8 = load i64, i64* %17, align 8, !dbg !4381
  %bf.cast101 = and i64 %bf.load8, 65535, !dbg !4383
  %cmp11 = icmp eq i64 %bf.cast101, 23, !dbg !4383
  br i1 %cmp11, label %if.end17, label %if.then12, !dbg !4384

if.then12:                                        ; preds = %if.end
  %size14 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 1, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call void @gimplify_one_sizepos(%union.tree_node** nonnull %size14, %struct.gimple_seq_d** nonnull %stmts) #6, !dbg !4387
  %18 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4388
  %size_unit16 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %18, i64 0, i32 4, !dbg !4388
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call void @gimplify_one_sizepos(%union.tree_node** nonnull %size_unit16, %struct.gimple_seq_d** nonnull %stmts) #6, !dbg !4389
  br label %if.end17, !dbg !4390

if.end17:                                         ; preds = %if.end, %if.then12
  %bf.load18 = load i8, i8* %named_arg, align 4, !dbg !4391
  %bf.clear19 = and i8 %bf.load18, 2, !dbg !4391
  %tobool21 = icmp eq i8 %bf.clear19, 0, !dbg !4392
  br i1 %tobool21, label %cleanup, label %if.then22, !dbg !4393

if.then22:                                        ; preds = %if.end17
  %19 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !4394
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !4394
  %20 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !4394
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !4339, metadata !DIExpression()), !dbg !4362
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4395
  %bf.load27 = load i64, i64* %21, align 8, !dbg !4395
  %bf.cast292 = and i64 %bf.load27, 65535, !dbg !4395
  %cmp30 = icmp eq i64 %bf.cast292, 14, !dbg !4395
  br i1 %cmp30, label %cond.true31, label %cond.false33, !dbg !4395

cond.true31:                                      ; preds = %if.then22
  %call32 = call i32 @vector_type_mode(%union.tree_node* %20) #6, !dbg !4395
  %bf.load41.pre = load i8, i8* %named_arg, align 4, !dbg !4396
  br label %cond.end38, !dbg !4395

cond.false33:                                     ; preds = %if.then22
  %type34 = bitcast %union.tree_node* %20 to %struct.tree_type*, !dbg !4395
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i64 0, i32 6, !dbg !4395
  %bf.load35 = load i32, i32* %mode, align 4, !dbg !4395
  %bf.lshr36 = lshr i32 %bf.load35, 16, !dbg !4395
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !4395
  br label %cond.end38, !dbg !4395

cond.end38:                                       ; preds = %cond.false33, %cond.true31
  %bf.load41 = phi i8 [ %bf.load41.pre, %cond.true31 ], [ %bf.load18, %cond.false33 ], !dbg !4396
  %cond39 = phi i32 [ %call32, %cond.true31 ], [ %bf.clear37, %cond.false33 ], !dbg !4395
  %bf.clear42 = and i8 %bf.load41, 1, !dbg !4396
  %call44 = call zeroext i8 @reference_callee_copied(%struct.ix86_args* nonnull %args_so_far, i32 %cond39, %union.tree_node* %20, i8 zeroext %bf.clear42) #7, !dbg !4397
  %tobool45 = icmp eq i8 %call44, 0, !dbg !4397
  br i1 %tobool45, label %cleanup, label %if.then46, !dbg !4398

if.then46:                                        ; preds = %cond.end38
  %22 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4399
  %size_unit48 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %22, i64 0, i32 4, !dbg !4399
  %23 = bitcast %union.tree_node** %size_unit48 to i64**, !dbg !4399
  %24 = load i64*, i64** %23, align 8, !dbg !4399
  %bf.load50 = load i64, i64* %24, align 8, !dbg !4399
  %bf.cast523 = and i64 %bf.load50, 65535, !dbg !4400
  %cmp53 = icmp eq i64 %bf.cast523, 23, !dbg !4400
  %25 = bitcast i64* %24 to %union.tree_node*, !dbg !4401
  br i1 %cmp53, label %land.lhs.true, label %if.else, !dbg !4401

land.lhs.true:                                    ; preds = %if.then46
  %26 = bitcast %struct.tree_decl_common* %22 to %union.tree_node*, !dbg !4401
  %27 = load i32, i32* @flag_stack_check, align 4, !dbg !4402
  %cmp55 = icmp eq i32 %27, 1, !dbg !4403
  br i1 %cmp55, label %land.lhs.true57, label %if.then63, !dbg !4404

land.lhs.true57:                                  ; preds = %land.lhs.true
  %call60 = call i32 @compare_tree_int(%union.tree_node* %25, i64 40) #6, !dbg !4405
  %cmp61 = icmp sgt i32 %call60, 0, !dbg !4406
  br i1 %cmp61, label %if.else, label %land.lhs.true57.if.then63_crit_edge, !dbg !4407

land.lhs.true57.if.then63_crit_edge:              ; preds = %land.lhs.true57
  %.pre6 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4408
  br label %if.then63, !dbg !4407

if.then63:                                        ; preds = %land.lhs.true57.if.then63_crit_edge, %land.lhs.true
  %28 = phi %union.tree_node* [ %.pre6, %land.lhs.true57.if.then63_crit_edge ], [ %26, %land.lhs.true ], !dbg !4408
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !4308, metadata !DIExpression()), !dbg !4353
  %call64 = call i8* @get_name(%union.tree_node* %28) #6, !dbg !4409
  %call65 = call %union.tree_node* @create_tmp_var(%union.tree_node* %20, i8* %call64) #6, !dbg !4410
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !4342, metadata !DIExpression()), !dbg !4411
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4412
  %29 = bitcast i40* %ignored_flag to i64*, !dbg !4412
  %bf.load67 = load i64, i64* %29, align 8, !dbg !4413
  %bf.clear68 = and i64 %bf.load67, -1025, !dbg !4413
  store i64 %bf.clear68, i64* %29, align 8, !dbg !4413
  %30 = load i64*, i64** %7, align 8, !dbg !4414
  %bf.load70 = load i64, i64* %30, align 8, !dbg !4414
  %bf.cast734 = and i64 %bf.load70, 262144, !dbg !4414
  %tobool74 = icmp eq i64 %bf.cast734, 0, !dbg !4414
  br i1 %tobool74, label %if.end98, label %if.then75, !dbg !4415

if.then75:                                        ; preds = %if.then63
  %bf.clear78 = and i64 %bf.load70, -262145, !dbg !4416
  store i64 %bf.clear78, i64* %30, align 8, !dbg !4416
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4418
  %bf.load80 = load i64, i64* %31, align 8, !dbg !4419
  %bf.set = or i64 %bf.load80, 262144, !dbg !4419
  store i64 %bf.set, i64* %31, align 8, !dbg !4419
  br label %if.end98, !dbg !4420

if.else:                                          ; preds = %land.lhs.true57, %if.then46
  %call83 = call %union.tree_node* @build_pointer_type(%union.tree_node* %20) #6, !dbg !4421
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !4346, metadata !DIExpression()), !dbg !4422
  %32 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4423
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4308, metadata !DIExpression()), !dbg !4353
  %call84 = call i8* @get_name(%union.tree_node* %32) #6, !dbg !4424
  %call85 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call83, i8* %call84) #6, !dbg !4425
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !4349, metadata !DIExpression()), !dbg !4422
  %ignored_flag87 = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4426
  %33 = bitcast i40* %ignored_flag87 to i64*, !dbg !4426
  %bf.load88 = load i64, i64* %33, align 8, !dbg !4427
  %bf.clear89 = and i64 %bf.load88, -1025, !dbg !4427
  store i64 %bf.clear89, i64* %33, align 8, !dbg !4427
  %call90 = call %union.tree_node* @build_fold_indirect_ref_loc(i32 0, %union.tree_node* %call85) #6, !dbg !4428
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !4342, metadata !DIExpression()), !dbg !4411
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 415), align 8, !dbg !4429
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !4345, metadata !DIExpression()), !dbg !4411
  %35 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4430
  %size_unit92 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %35, i64 0, i32 4, !dbg !4430
  %36 = load %union.tree_node*, %union.tree_node** %size_unit92, align 8, !dbg !4430
  %call93 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %34, i32 1, %union.tree_node* %36) #6, !dbg !4430
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4345, metadata !DIExpression()), !dbg !4411
  %call94 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call83, %union.tree_node* %call93) #6, !dbg !4431
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !4345, metadata !DIExpression()), !dbg !4411
  %type96 = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4432
  %37 = load %union.tree_node*, %union.tree_node** %type96, align 8, !dbg !4432
  %call97 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %37, %union.tree_node* %call85, %union.tree_node* %call94) #6, !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !4345, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call void @gimplify_and_add(%union.tree_node* %call97, %struct.gimple_seq_d** nonnull %stmts) #6, !dbg !4433
  br label %if.end98

if.end98:                                         ; preds = %if.then63, %if.then75, %if.else
  %local.0 = phi %union.tree_node* [ %call90, %if.else ], [ %call65, %if.then75 ], [ %call65, %if.then63 ], !dbg !4434
  call void @llvm.dbg.value(metadata %union.tree_node* %local.0, metadata !4342, metadata !DIExpression()), !dbg !4411
  %38 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4435
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !4308, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  %call99 = call %union.gimple_statement_d* @gimplify_assign(%union.tree_node* %local.0, %union.tree_node* %38, %struct.gimple_seq_d** nonnull %stmts) #6, !dbg !4436
  %39 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4437
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !4308, metadata !DIExpression()), !dbg !4353
  call void @decl_value_expr_insert(%union.tree_node* %39, %union.tree_node* %local.0) #6, !dbg !4437
  %40 = load %struct.tree_decl_common*, %struct.tree_decl_common** %5, align 8, !dbg !4438
  %decl_flag_2 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %40, i64 0, i32 2, !dbg !4438
  %41 = bitcast i40* %decl_flag_2 to i64*, !dbg !4438
  %bf.load101 = load i64, i64* %41, align 8, !dbg !4439
  %bf.set103 = or i64 %bf.load101, 67108864, !dbg !4439
  store i64 %bf.set103, i64* %41, align 8, !dbg !4439
  br label %cleanup, !dbg !4440

cleanup:                                          ; preds = %cond.end38, %if.end17, %if.end98, %for.body, %lor.lhs.false
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #8, !dbg !4441
  %inc = add i32 %i.0, 1, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4311, metadata !DIExpression()), !dbg !4353
  %.pre = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !4367
  br label %for.cond, !dbg !4443, !llvm.loop !4444

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fnargs, metadata !4310, metadata !DIExpression(DW_OP_deref)), !dbg !4353
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %fnargs) #7, !dbg !4446
  %42 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4447
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %42, metadata !4309, metadata !DIExpression()), !dbg !4353
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4448
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %0) #8, !dbg !4448
  ret %struct.gimple_seq_d* %42, !dbg !4449
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parms_initialize_all(%struct.assign_parm_data_all* %all) unnamed_addr #4 !dbg !4450 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4455, metadata !DIExpression()), !dbg !4457
  %0 = bitcast %struct.assign_parm_data_all* %all to i8*, !dbg !4458
  %call = tail call i8* @memset(i8* %0, i32 0, i64 136) #6, !dbg !4459
  %1 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !4460
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !4460
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4460
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4456, metadata !DIExpression()), !dbg !4457
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !4461
  %.cast = bitcast %struct.tree_common* %1 to %union.tree_node*, !dbg !4461
  tail call void @init_cumulative_args(%struct.ix86_args* %args_so_far, %union.tree_node* %2, %struct.rtx_def* null, %union.tree_node* %.cast) #6, !dbg !4461
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4462
  %call1 = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* %3) #6, !dbg !4462
  %reg_parm_stack_space = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 8, !dbg !4463
  store i32 %call1, i32* %reg_parm_stack_space, align 8, !dbg !4464
  ret void, !dbg !4465
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @assign_parms_augmented_arg_list(%struct.assign_parm_data_all* %all) unnamed_addr #4 !dbg !4466 {
entry:
  %fnargs = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4470, metadata !DIExpression()), !dbg !4479
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4480
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4471, metadata !DIExpression()), !dbg !4479
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4481
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4481
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !4481
  %3 = bitcast %struct.VEC_tree_heap** %fnargs to i8*, !dbg !4482
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4482
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !4473, metadata !DIExpression()), !dbg !4479
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !4483
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !4484
  br label %for.cond, !dbg !4486

for.cond:                                         ; preds = %for.body, %entry
  %arg.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.body ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !4474, metadata !DIExpression()), !dbg !4479
  %tobool = icmp eq %union.tree_node* %arg.0, null, !dbg !4488
  br i1 %tobool, label %for.end, label %for.body, !dbg !4488

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fnargs, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4479
  %call = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %fnargs, %union.tree_node* nonnull %arg.0) #7, !dbg !4489
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4491
  br label %for.cond, !dbg !4492, !llvm.loop !4493

for.end:                                          ; preds = %for.cond
  %4 = bitcast %union.tree_node** %arguments to i64*, !dbg !4495
  %5 = load i64, i64* %4, align 8, !dbg !4495
  %orig_fnargs = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 3, !dbg !4496
  %6 = bitcast %union.tree_node** %orig_fnargs to i64*, !dbg !4497
  store i64 %5, i64* %6, align 8, !dbg !4497
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 3, !dbg !4498
  %7 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4498
  %call5 = call i32 @aggregate_value_p(%union.tree_node* %7, %union.tree_node* %0) #7, !dbg !4499
  %tobool6 = icmp eq i32 %call5, 0, !dbg !4499
  br i1 %tobool6, label %if.end, label %land.lhs.true, !dbg !4500

land.lhs.true:                                    ; preds = %for.end
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4501
  %returns_pcc_struct = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 20, !dbg !4502
  %bf.load = load i32, i32* %returns_pcc_struct, align 8, !dbg !4502
  %bf.clear = and i32 %bf.load, 134217728, !dbg !4502
  %tobool7 = icmp eq i32 %bf.clear, 0, !dbg !4501
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !4503

land.lhs.true8:                                   ; preds = %land.lhs.true
  %9 = load %struct.rtx_def* (%union.tree_node*, i32)*, %struct.rtx_def* (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 2), align 8, !dbg !4504
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4505
  %call11 = call %struct.rtx_def* %9(%union.tree_node* %10, i32 1) #6, !dbg !4506
  %cmp = icmp eq %struct.rtx_def* %call11, null, !dbg !4507
  br i1 %cmp, label %if.then, label %if.end, !dbg !4508

if.then:                                          ; preds = %land.lhs.true8
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !4509
  %11 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4509
  %call15 = call %union.tree_node* @build_pointer_type(%union.tree_node* %11) #6, !dbg !4510
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !4475, metadata !DIExpression()), !dbg !4511
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4512
  %12 = load i32, i32* %locus, align 8, !dbg !4512
  %call16 = call %union.tree_node* @build_decl_stat(i32 %12, i32 34, %union.tree_node* null, %union.tree_node* %call15) #6, !dbg !4512
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4478, metadata !DIExpression()), !dbg !4511
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4513
  store %union.tree_node* %call15, %union.tree_node** %initial, align 8, !dbg !4514
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4515
  %13 = bitcast i40* %artificial_flag to i64*, !dbg !4515
  %bf.load18 = load i64, i64* %13, align 8, !dbg !4516
  %bf.set23 = or i64 %bf.load18, 5120, !dbg !4517
  store i64 %bf.set23, i64* %13, align 8, !dbg !4517
  %14 = load i64, i64* %6, align 8, !dbg !4518
  %chain26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4519
  %15 = bitcast %union.tree_node** %chain26 to i64*, !dbg !4520
  store i64 %14, i64* %15, align 8, !dbg !4520
  store %union.tree_node* %call16, %union.tree_node** %orig_fnargs, align 8, !dbg !4521
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fnargs, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4479
  %call28 = call fastcc %union.tree_node** @VEC_tree_heap_safe_insert(%struct.VEC_tree_heap** nonnull %fnargs, i32 0, %union.tree_node* %call16) #7, !dbg !4522
  %function_result_decl = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 2, !dbg !4523
  store %union.tree_node* %call16, %union.tree_node** %function_result_decl, align 8, !dbg !4524
  br label %if.end, !dbg !4525

if.end:                                           ; preds = %land.lhs.true, %for.end, %if.then, %land.lhs.true8
  %16 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !4526
  %tobool29 = icmp eq i8 (%union.tree_node*)* %16, null, !dbg !4528
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !4529

if.then30:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fnargs, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4479
  call fastcc void @split_complex_args(%struct.VEC_tree_heap** nonnull %fnargs) #7, !dbg !4530
  br label %if.end31, !dbg !4530

if.end31:                                         ; preds = %if.end, %if.then30
  %17 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !4531
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !4473, metadata !DIExpression()), !dbg !4479
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4532
  ret %struct.VEC_tree_heap* %17, !dbg !4533
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !4534 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4540, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4541, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !4542, metadata !DIExpression()), !dbg !4543
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4544
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4544

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4544
  %0 = load i32, i32* %num, align 8, !dbg !4544
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4544
  br i1 %cmp, label %if.then, label %if.else, !dbg !4546

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4547
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4547
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4547
  br label %return, !dbg !4547

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4549

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !4551
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4551
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !4551
  ret i32 %retval.0, !dbg !4546
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_find_data_types(%struct.assign_parm_data_all* %all, %union.tree_node* %parm, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !4552 {
entry:
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !4557, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !4558, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !4559, metadata !DIExpression()), !dbg !4567
  %0 = bitcast i32* %unsignedp to i8*, !dbg !4568
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4568
  %1 = bitcast %struct.assign_parm_data_one* %data to i8*, !dbg !4569
  %call = tail call i8* @memset(i8* %1, i32 0, i64 128) #6, !dbg !4570
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4571
  %stdarg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !4573
  %bf.load = load i32, i32* %stdarg, align 8, !dbg !4573
  %bf.clear = and i32 %bf.load, 4194304, !dbg !4573
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4571
  br i1 %tobool, label %if.then, label %if.else, !dbg !4574

if.then:                                          ; preds = %entry
  %named_arg = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !4575
  %bf.load1 = load i8, i8* %named_arg, align 4, !dbg !4576
  %bf.set = or i8 %bf.load1, 1, !dbg !4576
  store i8 %bf.set, i8* %named_arg, align 4, !dbg !4576
  br label %if.end22, !dbg !4577

if.else:                                          ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4578
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4578
  %tobool3 = icmp eq %union.tree_node* %3, null, !dbg !4578
  br i1 %tobool3, label %if.else9, label %if.then4, !dbg !4580

if.then4:                                         ; preds = %if.else
  %named_arg5 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !4581
  %bf.load6 = load i8, i8* %named_arg5, align 4, !dbg !4582
  %bf.set8 = or i8 %bf.load6, 1, !dbg !4582
  store i8 %bf.set8, i8* %named_arg5, align 4, !dbg !4582
  br label %if.end22, !dbg !4583

if.else9:                                         ; preds = %if.else
  %4 = load i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 8), align 8, !dbg !4584
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !4586
  %call10 = tail call zeroext i8 %4(%struct.ix86_args* %args_so_far) #6, !dbg !4587
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4587
  %named_arg13 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !4588
  %bf.load14 = load i8, i8* %named_arg13, align 4, !dbg !4588
  br i1 %tobool11, label %if.else17, label %if.then12, !dbg !4589

if.then12:                                        ; preds = %if.else9
  %bf.set16 = or i8 %bf.load14, 1, !dbg !4590
  store i8 %bf.set16, i8* %named_arg13, align 4, !dbg !4590
  br label %if.end22, !dbg !4591

if.else17:                                        ; preds = %if.else9
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !4588
  store i8 %bf.clear15, i8* %named_arg13, align 4, !dbg !4592
  br label %if.end22

if.end22:                                         ; preds = %if.then4, %if.else17, %if.then12, %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4593
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4593
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4560, metadata !DIExpression()), !dbg !4567
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4594
  %6 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4594
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4561, metadata !DIExpression()), !dbg !4567
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4595
  %cmp = icmp eq %union.tree_node* %5, %7, !dbg !4597
  br i1 %cmp, label %if.then37, label %lor.lhs.false, !dbg !4598

lor.lhs.false:                                    ; preds = %if.end22
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4599
  %bf.load26 = load i64, i64* %8, align 8, !dbg !4599
  %bf.cast1 = and i64 %bf.load26, 65535, !dbg !4600
  %cmp28 = icmp ne i64 %bf.cast1, 34, !dbg !4600
  %cmp30 = icmp eq %union.tree_node* %6, null, !dbg !4601
  %or.cond = or i1 %cmp28, %cmp30, !dbg !4602
  br i1 %or.cond, label %if.then37, label %lor.lhs.false31, !dbg !4602

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4603
  %bf.load33 = load i64, i64* %9, align 8, !dbg !4603
  %bf.cast352 = and i64 %bf.load33, 65535, !dbg !4603
  %cmp36 = icmp eq i64 %bf.cast352, 19, !dbg !4603
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !4604

if.then37:                                        ; preds = %lor.lhs.false31, %lor.lhs.false, %if.end22
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4605
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4561, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4560, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 0, metadata !4564, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 0, metadata !4563, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 0, metadata !4562, metadata !DIExpression()), !dbg !4567
  br label %egress, !dbg !4607

if.end38:                                         ; preds = %lor.lhs.false31
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4608
  %bf.load40 = load i64, i64* %11, align 8, !dbg !4608
  %bf.cast423 = and i64 %bf.load40, 65535, !dbg !4608
  %cmp43 = icmp eq i64 %bf.cast423, 14, !dbg !4608
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !4608

cond.true:                                        ; preds = %if.end38
  %call44 = tail call i32 @vector_type_mode(%union.tree_node* %6) #6, !dbg !4608
  %bf.load50.pre = load i64, i64* %9, align 8, !dbg !4609
  br label %cond.end, !dbg !4608

cond.false:                                       ; preds = %if.end38
  %type45 = bitcast %union.tree_node* %6 to %struct.tree_type*, !dbg !4608
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i64 0, i32 6, !dbg !4608
  %bf.load46 = load i32, i32* %mode, align 4, !dbg !4608
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !4608
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !4608
  br label %cond.end, !dbg !4608

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load50 = phi i64 [ %bf.load50.pre, %cond.true ], [ %bf.load33, %cond.false ], !dbg !4609
  %cond = phi i32 [ %call44, %cond.true ], [ %bf.clear48, %cond.false ], !dbg !4608
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4563, metadata !DIExpression()), !dbg !4567
  %bf.cast524 = and i64 %bf.load50, 65535, !dbg !4609
  %cmp53 = icmp eq i64 %bf.cast524, 14, !dbg !4609
  br i1 %cmp53, label %cond.true54, label %cond.false56, !dbg !4609

cond.true54:                                      ; preds = %cond.end
  %call55 = tail call i32 @vector_type_mode(%union.tree_node* %5) #6, !dbg !4609
  br label %cond.end62, !dbg !4609

cond.false56:                                     ; preds = %cond.end
  %type57 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !4609
  %mode58 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type57, i64 0, i32 6, !dbg !4609
  %bf.load59 = load i32, i32* %mode58, align 4, !dbg !4609
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !4609
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !4609
  br label %cond.end62, !dbg !4609

cond.end62:                                       ; preds = %cond.false56, %cond.true54
  %cond63 = phi i32 [ %call55, %cond.true54 ], [ %bf.clear61, %cond.false56 ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %cond63, metadata !4562, metadata !DIExpression()), !dbg !4567
  %bf.load65 = load i64, i64* %11, align 8, !dbg !4610
  %bf.cast675 = and i64 %bf.load65, 65535, !dbg !4612
  %cmp68 = icmp eq i64 %bf.cast675, 17, !dbg !4612
  br i1 %cmp68, label %land.lhs.true, label %lor.lhs.false69, !dbg !4613

lor.lhs.false69:                                  ; preds = %cond.end62
  %cmp74 = icmp eq i64 %bf.cast675, 16, !dbg !4614
  br i1 %cmp74, label %land.lhs.true, label %if.end84, !dbg !4615

land.lhs.true:                                    ; preds = %lor.lhs.false69, %cond.end62
  %type75 = bitcast %union.tree_node* %6 to %struct.tree_type*, !dbg !4616
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i64 0, i32 6, !dbg !4616
  %bf.load76 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !4616
  %bf.clear78 = and i32 %bf.load76, 4096, !dbg !4616
  %tobool79 = icmp eq i32 %bf.clear78, 0, !dbg !4616
  br i1 %tobool79, label %if.end84, label %if.then80, !dbg !4617

if.then80:                                        ; preds = %land.lhs.true
  %call81 = tail call %union.tree_node* @first_field(%union.tree_node* %6) #6, !dbg !4618
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4618
  %12 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !4618
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4561, metadata !DIExpression()), !dbg !4567
  br label %if.end84, !dbg !4619

if.end84:                                         ; preds = %land.lhs.true, %if.then80, %lor.lhs.false69
  %passed_type.0 = phi %union.tree_node* [ %12, %if.then80 ], [ %6, %land.lhs.true ], [ %6, %lor.lhs.false69 ], !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %passed_type.0, metadata !4561, metadata !DIExpression()), !dbg !4567
  %args_so_far85 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !4620
  %named_arg86 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !4622
  %bf.load87 = load i8, i8* %named_arg86, align 4, !dbg !4622
  %bf.clear88 = and i8 %bf.load87, 1, !dbg !4622
  %call90 = tail call zeroext i8 @pass_by_reference(%struct.ix86_args* %args_so_far85, i32 %cond, %union.tree_node* %passed_type.0, i8 zeroext %bf.clear88) #7, !dbg !4623
  %tobool91 = icmp eq i8 %call90, 0, !dbg !4623
  br i1 %tobool91, label %if.end97, label %if.then92, !dbg !4624

if.then92:                                        ; preds = %if.end84
  %call93 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %passed_type.0) #6, !dbg !4625
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4560, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4561, metadata !DIExpression()), !dbg !4567
  %bf.load94 = load i8, i8* %named_arg86, align 4, !dbg !4627
  %bf.set96 = or i8 %bf.load94, 2, !dbg !4627
  store i8 %bf.set96, i8* %named_arg86, align 4, !dbg !4627
  call void @llvm.dbg.value(metadata i32 16, metadata !4562, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 16, metadata !4563, metadata !DIExpression()), !dbg !4567
  br label %if.end97, !dbg !4628

if.end97:                                         ; preds = %if.end84, %if.then92
  %passed_type.1 = phi %union.tree_node* [ %call93, %if.then92 ], [ %passed_type.0, %if.end84 ], !dbg !4567
  %nominal_type.0 = phi %union.tree_node* [ %call93, %if.then92 ], [ %5, %if.end84 ], !dbg !4567
  %nominal_mode.0 = phi i32 [ 16, %if.then92 ], [ %cond63, %if.end84 ], !dbg !4567
  %passed_mode.0 = phi i32 [ 16, %if.then92 ], [ %cond, %if.end84 ], !dbg !4567
  call void @llvm.dbg.value(metadata i32 %passed_mode.0, metadata !4563, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %nominal_mode.0, metadata !4562, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %nominal_type.0, metadata !4560, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %passed_type.1, metadata !4561, metadata !DIExpression()), !dbg !4567
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %passed_type.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4629
  %bf.load99 = load i64, i64* %13, align 8, !dbg !4629
  %bf.lshr100 = lshr i64 %bf.load99, 21, !dbg !4629
  %14 = trunc i64 %bf.lshr100 to i32, !dbg !4629
  %bf.cast102 = and i32 %14, 1, !dbg !4629
  call void @llvm.dbg.value(metadata i32 %bf.cast102, metadata !4565, metadata !DIExpression()), !dbg !4567
  store i32 %bf.cast102, i32* %unsignedp, align 4, !dbg !4630
  %15 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !4631
  %type104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !4631
  %16 = load %union.tree_node*, %union.tree_node** %type104, align 8, !dbg !4631
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !4565, metadata !DIExpression(DW_OP_deref)), !dbg !4567
  %call105 = call i32 @promote_function_mode(%union.tree_node* %passed_type.1, i32 %passed_mode.0, i32* nonnull %unsignedp, %union.tree_node* %16, i32 0) #6, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %call105, metadata !4564, metadata !DIExpression()), !dbg !4567
  br label %egress, !dbg !4633

egress:                                           ; preds = %if.end97, %if.then37
  %passed_type.2 = phi %union.tree_node* [ %10, %if.then37 ], [ %passed_type.1, %if.end97 ], !dbg !4567
  %nominal_type.1 = phi %union.tree_node* [ %10, %if.then37 ], [ %nominal_type.0, %if.end97 ], !dbg !4567
  %nominal_mode.1 = phi i32 [ 0, %if.then37 ], [ %nominal_mode.0, %if.end97 ], !dbg !4567
  %passed_mode.1 = phi i32 [ 0, %if.then37 ], [ %passed_mode.0, %if.end97 ], !dbg !4567
  %promoted_mode.0 = phi i32 [ 0, %if.then37 ], [ %call105, %if.end97 ], !dbg !4567
  call void @llvm.dbg.value(metadata i32 %promoted_mode.0, metadata !4564, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %passed_mode.1, metadata !4563, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %nominal_mode.1, metadata !4562, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %nominal_type.1, metadata !4560, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %union.tree_node* %passed_type.2, metadata !4561, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.label(metadata !4566), !dbg !4634
  %nominal_type106 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 0, !dbg !4635
  store %union.tree_node* %nominal_type.1, %union.tree_node** %nominal_type106, align 8, !dbg !4636
  %passed_type107 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !4637
  store %union.tree_node* %passed_type.2, %union.tree_node** %passed_type107, align 8, !dbg !4638
  %nominal_mode108 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !4639
  store i32 %nominal_mode.1, i32* %nominal_mode108, align 8, !dbg !4640
  %passed_mode109 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !4641
  store i32 %passed_mode.1, i32* %passed_mode109, align 4, !dbg !4642
  %promoted_mode110 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !4643
  store i32 %promoted_mode.0, i32* %promoted_mode110, align 8, !dbg !4644
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4645
  ret void, !dbg !4645
}

declare dso_local void @function_arg_advance(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @gimplify_parm_type(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #4 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !4651, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !4652, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %data, metadata !4653, metadata !DIExpression()), !dbg !4655
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !4656
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4654, metadata !DIExpression()), !dbg !4655
  store i32 0, i32* %walk_subtrees, align 4, !dbg !4657
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4658
  %bf.load = load i64, i64* %1, align 8, !dbg !4658
  %bf.cast = and i64 %bf.load, 65535, !dbg !4658
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4658
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4658
  %cmp = icmp eq i32 %2, 2, !dbg !4658
  br i1 %cmp, label %if.then, label %if.end28, !dbg !4660

if.then:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast, 10, !dbg !4661
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4661

lor.lhs.false:                                    ; preds = %if.then
  %cmp10 = icmp eq i64 %bf.cast, 12, !dbg !4661
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !4664

if.then11:                                        ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %walk_subtrees, align 4, !dbg !4665
  br label %if.end28, !dbg !4666

if.else:                                          ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4667
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !4667
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !4667
  br i1 %tobool, label %if.end28, label %land.lhs.true, !dbg !4669

land.lhs.true:                                    ; preds = %if.else
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4669
  %bf.load15 = load i64, i64* %5, align 8, !dbg !4670
  %bf.cast173 = and i64 %bf.load15, 131072, !dbg !4670
  %tobool18 = icmp eq i64 %bf.cast173, 0, !dbg !4670
  br i1 %tobool18, label %land.lhs.true19, label %if.end28, !dbg !4671

land.lhs.true19:                                  ; preds = %land.lhs.true
  %bf.cast244 = and i64 %bf.load, 131072, !dbg !4672
  %tobool25 = icmp eq i64 %bf.cast244, 0, !dbg !4672
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4673

if.then26:                                        ; preds = %land.lhs.true19
  %6 = bitcast i8* %data to %struct.gimple_seq_d**, !dbg !4674
  tail call void @gimplify_type_sizes(%union.tree_node* %0, %struct.gimple_seq_d** %6) #6, !dbg !4676
  store i32 1, i32* %walk_subtrees, align 4, !dbg !4677
  br label %if.end28, !dbg !4678

if.end28:                                         ; preds = %land.lhs.true19, %land.lhs.true, %if.else, %if.then11, %if.then26, %entry
  ret %union.tree_node* null, !dbg !4679
}

declare dso_local void @gimplify_one_sizepos(%union.tree_node**, %struct.gimple_seq_d**) local_unnamed_addr #1

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #1

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #1

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_call_expr_loc(i32, %union.tree_node*, i32, ...) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @gimplify_and_add(%union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #1

declare dso_local %union.gimple_statement_d* @gimplify_assign(%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #1

declare dso_local void @decl_value_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !4680 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !4685, metadata !DIExpression()), !dbg !4686
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4687
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4687
  br i1 %tobool, label %if.end, label %if.then, !dbg !4689

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !4689
  tail call void @free(i8* nonnull %1) #6, !dbg !4687
  br label %if.end, !dbg !4687

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4689
  ret void, !dbg !4689
}

; Function Attrs: nounwind uwtable
define dso_local void @locate_and_pad_parm(i32 %passed_mode, %union.tree_node* %type, i32 %in_regs, i32 %partial, %union.tree_node* %fndecl, %struct.args_size* %initial_offset_ptr, %struct.locate_and_pad_arg_data* %locate) local_unnamed_addr #4 !dbg !4690 {
entry:
  call void @llvm.dbg.value(metadata i32 %passed_mode, metadata !4696, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4697, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 %in_regs, metadata !4698, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 %partial, metadata !4699, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !4700, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.args_size* %initial_offset_ptr, metadata !4701, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.locate_and_pad_arg_data* %locate, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 0, metadata !4706, metadata !DIExpression()), !dbg !4710
  %call = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* %fndecl) #6, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %call, metadata !4706, metadata !DIExpression()), !dbg !4710
  %tobool = icmp eq i32 %in_regs, 0, !dbg !4712
  %cmp = icmp sgt i32 %call, 0, !dbg !4714
  %or.cond = and i1 %tobool, %cmp, !dbg !4717
  br i1 %or.cond, label %if.then1, label %if.end25, !dbg !4717

if.then1:                                         ; preds = %entry
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %initial_offset_ptr, i64 0, i32 1, !dbg !4718
  %0 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4718
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !4721
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !4722

if.then3:                                         ; preds = %if.then1
  br i1 false, label %cond.true, label %cond.false, !dbg !4723

cond.true:                                        ; preds = %if.then3
  br label %cond.end, !dbg !4723

cond.false:                                       ; preds = %if.then3
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4723
  %call8 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %1, %union.tree_node* nonnull %0) #6, !dbg !4723
  %constant9 = getelementptr inbounds %struct.args_size, %struct.args_size* %initial_offset_ptr, i64 0, i32 0, !dbg !4723
  %2 = load i64, i64* %constant9, align 8, !dbg !4723
  %call10 = tail call %union.tree_node* @size_int_kind(i64 %2, i32 1) #6, !dbg !4723
  %call11 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call8, %union.tree_node* %call10) #6, !dbg !4723
  br label %cond.end, !dbg !4723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ undef, %cond.true ], [ %call11, %cond.false ], !dbg !4723
  %conv = sext i32 %call to i64, !dbg !4723
  %call12 = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 1) #6, !dbg !4723
  %call13 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 81, %union.tree_node* %cond, %union.tree_node* %call12) #6, !dbg !4723
  store %union.tree_node* %call13, %union.tree_node** %var, align 8, !dbg !4725
  %constant15 = getelementptr inbounds %struct.args_size, %struct.args_size* %initial_offset_ptr, i64 0, i32 0, !dbg !4726
  store i64 0, i64* %constant15, align 8, !dbg !4727
  br label %if.end25, !dbg !4728

if.else:                                          ; preds = %if.then1
  %constant16 = getelementptr inbounds %struct.args_size, %struct.args_size* %initial_offset_ptr, i64 0, i32 0, !dbg !4729
  %3 = load i64, i64* %constant16, align 8, !dbg !4729
  %conv17 = sext i32 %call to i64, !dbg !4731
  %cmp18 = icmp slt i64 %3, %conv17, !dbg !4732
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !4733

if.then20:                                        ; preds = %if.else
  store i64 %conv17, i64* %constant16, align 8, !dbg !4734
  br label %if.end25, !dbg !4735

if.end25:                                         ; preds = %entry, %if.else, %if.then20, %cond.end
  %cmp26 = icmp eq i32 %call, 0, !dbg !4736
  %partial. = select i1 %cmp26, i32 %partial, i32 0, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %partial., metadata !4707, metadata !DIExpression()), !dbg !4710
  %tobool32 = icmp eq %union.tree_node* %type, null, !dbg !4738
  br i1 %tobool32, label %cond.false35, label %cond.true33, !dbg !4738

cond.true33:                                      ; preds = %if.end25
  %call34 = tail call %union.tree_node* @size_in_bytes(%union.tree_node* nonnull %type) #6, !dbg !4739
  br label %cond.end39, !dbg !4738

cond.false35:                                     ; preds = %if.end25
  %idxprom = zext i32 %passed_mode to i64, !dbg !4740
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4740
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4740
  %conv37 = zext i8 %4 to i64, !dbg !4740
  %call38 = tail call %union.tree_node* @size_int_kind(i64 %conv37, i32 0) #6, !dbg !4740
  br label %cond.end39, !dbg !4738

cond.end39:                                       ; preds = %cond.false35, %cond.true33
  %cond40 = phi %union.tree_node* [ %call34, %cond.true33 ], [ %call38, %cond.false35 ], !dbg !4738
  call void @llvm.dbg.value(metadata %union.tree_node* %cond40, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 1, metadata !4704, metadata !DIExpression()), !dbg !4710
  %call41 = tail call i32 @ix86_function_arg_boundary(i32 %passed_mode, %union.tree_node* %type) #6, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %call41, metadata !4705, metadata !DIExpression()), !dbg !4710
  %where_pad42 = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 4, !dbg !4742
  store i32 1, i32* %where_pad42, align 8, !dbg !4743
  %5 = icmp ult i32 %call41, -2147483648, !dbg !4744
  %spec.select = select i1 %5, i32 %call41, i32 -2147483648, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4705, metadata !DIExpression()), !dbg !4710
  %boundary47 = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 5, !dbg !4745
  store i32 %spec.select, i32* %boundary47, align 4, !dbg !4746
  %6 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !4747
  %cmp48 = icmp ult i32 %6, %spec.select, !dbg !4751
  br i1 %cmp48, label %if.then50, label %if.end62, !dbg !4752

if.then50:                                        ; preds = %cond.end39
  %7 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !4753
  %tobool51 = icmp eq i8 %7, 0, !dbg !4756
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !4757

if.then52:                                        ; preds = %if.then50
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !4758
  br label %if.end62, !dbg !4759

if.else53:                                        ; preds = %if.then50
  %8 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 47), align 1, !dbg !4760
  %tobool54 = icmp eq i8 %8, 0, !dbg !4760
  br i1 %tobool54, label %land.lhs.true, label %cond.true57, !dbg !4760

land.lhs.true:                                    ; preds = %if.else53
  %9 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !4760
  %tobool56 = icmp eq i8 %9, 0, !dbg !4760
  br i1 %tobool56, label %cond.true57, label %if.end62, !dbg !4760

cond.true57:                                      ; preds = %land.lhs.true, %if.else53
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3558, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4760
  br label %if.end62, !dbg !4760

if.end62:                                         ; preds = %land.lhs.true, %if.then52, %cond.true57, %cond.end39
  %10 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !4762
  %cmp63 = icmp ult i32 %10, %spec.select, !dbg !4764
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !4765

if.then65:                                        ; preds = %if.end62
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !4766
  br label %if.end66, !dbg !4767

if.end66:                                         ; preds = %if.then65, %if.end62
  %11 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !4768
  %cmp67 = icmp ult i32 %11, %spec.select, !dbg !4770
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !4771

if.then69:                                        ; preds = %if.end66
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !4772
  br label %if.end70, !dbg !4773

if.end70:                                         ; preds = %if.then69, %if.end66
  br i1 %tobool, label %if.then75, label %lor.lhs.false, !dbg !4774

lor.lhs.false:                                    ; preds = %if.end70
  %call72 = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* %fndecl) #6, !dbg !4776
  %cmp73 = icmp sgt i32 %call72, 0, !dbg !4777
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !4778

if.then75:                                        ; preds = %if.end70, %lor.lhs.false
  %alignment_pad = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 3, !dbg !4779
  tail call fastcc void @pad_to_arg_alignment(%struct.args_size* %initial_offset_ptr, i32 %spec.select, %struct.args_size* nonnull %alignment_pad) #7, !dbg !4780
  br label %if.end76, !dbg !4780

if.end76:                                         ; preds = %if.then75, %lor.lhs.false
  %slot_offset = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 2, !dbg !4781
  %12 = bitcast %struct.args_size* %slot_offset to i8*, !dbg !4782
  %13 = bitcast %struct.args_size* %initial_offset_ptr to i8*, !dbg !4782
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !4782
  %cmp77 = icmp eq i32 %passed_mode, 1, !dbg !4783
  br i1 %cmp77, label %if.end82, label %if.then79, !dbg !4785

if.then79:                                        ; preds = %if.end76
  %int_cst80 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4786
  %low = bitcast i32* %int_cst80 to i64*, !dbg !4786
  %14 = load i64, i64* %low, align 8, !dbg !4786
  %add = add i64 %14, 3, !dbg !4786
  %and = and i64 %add, -4, !dbg !4786
  %call81 = tail call %union.tree_node* @size_int_kind(i64 %and, i32 0) #6, !dbg !4786
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !4703, metadata !DIExpression()), !dbg !4710
  br label %if.end82, !dbg !4787

if.end82:                                         ; preds = %if.end76, %if.then79
  %sizetree.0 = phi %union.tree_node* [ %call81, %if.then79 ], [ %cond40, %if.end76 ], !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %sizetree.0, metadata !4703, metadata !DIExpression()), !dbg !4710
  %offset = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 1, !dbg !4788
  %15 = bitcast %struct.args_size* %offset to i8*, !dbg !4789
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %12, i64 16, i1 false), !dbg !4789
  %call92 = tail call i32 @host_integerp(%union.tree_node* %sizetree.0, i32 1) #6, !dbg !4790
  %tobool93 = icmp eq i32 %call92, 0, !dbg !4790
  br i1 %tobool93, label %if.then97, label %lor.lhs.false94, !dbg !4792

lor.lhs.false94:                                  ; preds = %if.end82
  %call95 = tail call i64 @tree_low_cst(%union.tree_node* %sizetree.0, i32 1) #6, !dbg !4793
  %rem1 = and i64 %call95, 3, !dbg !4794
  %tobool96 = icmp eq i64 %rem1, 0, !dbg !4794
  br i1 %tobool96, label %do.body, label %if.then97, !dbg !4795

if.then97:                                        ; preds = %lor.lhs.false94, %if.end82
  %call98 = tail call %union.tree_node* @round_up_loc(i32 0, %union.tree_node* %sizetree.0, i32 4) #6, !dbg !4796
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !4703, metadata !DIExpression()), !dbg !4710
  br label %do.body, !dbg !4797

do.body:                                          ; preds = %lor.lhs.false94, %if.then97
  %sizetree.1 = phi %union.tree_node* [ %call98, %if.then97 ], [ %sizetree.0, %lor.lhs.false94 ], !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %sizetree.1, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %sizetree.1, metadata !4708, metadata !DIExpression()), !dbg !4798
  %call100 = tail call i32 @host_integerp(%union.tree_node* %sizetree.1, i32 0) #6, !dbg !4799
  %tobool101 = icmp eq i32 %call100, 0, !dbg !4799
  br i1 %tobool101, label %if.else106, label %if.then102, !dbg !4801

if.then102:                                       ; preds = %do.body
  %call103 = tail call i64 @tree_low_cst(%union.tree_node* %sizetree.1, i32 0) #6, !dbg !4799
  %constant104 = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 0, i32 0, !dbg !4799
  %16 = load i64, i64* %constant104, align 8, !dbg !4799
  %add105 = add nsw i64 %16, %call103, !dbg !4799
  store i64 %add105, i64* %constant104, align 8, !dbg !4799
  br label %do.end, !dbg !4799

if.else106:                                       ; preds = %do.body
  %var108 = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 0, i32 1, !dbg !4802
  %17 = load %union.tree_node*, %union.tree_node** %var108, align 8, !dbg !4802
  %cmp109 = icmp eq %union.tree_node* %17, null, !dbg !4802
  br i1 %cmp109, label %if.then111, label %if.else115, !dbg !4799

if.then111:                                       ; preds = %if.else106
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4802
  %call112 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %18, %union.tree_node* %sizetree.1) #6, !dbg !4802
  store %union.tree_node* %call112, %union.tree_node** %var108, align 8, !dbg !4802
  br label %do.end, !dbg !4802

if.else115:                                       ; preds = %if.else106
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4802
  %call118 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %19, %union.tree_node* %sizetree.1) #6, !dbg !4802
  %call119 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* nonnull %17, %union.tree_node* %call118) #6, !dbg !4802
  store %union.tree_node* %call119, %union.tree_node** %var108, align 8, !dbg !4802
  br label %do.end

do.end:                                           ; preds = %if.then111, %if.else115, %if.then102
  %conv124 = sext i32 %partial. to i64, !dbg !4804
  %constant126 = getelementptr inbounds %struct.locate_and_pad_arg_data, %struct.locate_and_pad_arg_data* %locate, i64 0, i32 0, i32 0, !dbg !4805
  %20 = load i64, i64* %constant126, align 8, !dbg !4806
  %sub = sub nsw i64 %20, %conv124, !dbg !4806
  store i64 %sub, i64* %constant126, align 8, !dbg !4806
  ret void, !dbg !4807
}

declare dso_local i32 @ix86_reg_parm_stack_space(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_in_bytes(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @ix86_function_arg_boundary(i32, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @pad_to_arg_alignment(%struct.args_size* %offset_ptr, i32 %boundary, %struct.args_size* %alignment_pad) unnamed_addr #4 !dbg !4808 {
entry:
  call void @llvm.dbg.value(metadata %struct.args_size* %offset_ptr, metadata !4812, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %boundary, metadata !4813, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata %struct.args_size* %alignment_pad, metadata !4814, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4815, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i64 0, metadata !4816, metadata !DIExpression()), !dbg !4826
  %div = sdiv i32 %boundary, 8, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %div, metadata !4817, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i64 0, metadata !4818, metadata !DIExpression()), !dbg !4826
  %cmp = icmp sgt i32 %boundary, 32, !dbg !4828
  br i1 %cmp, label %if.then, label %if.end, !dbg !4830

if.then:                                          ; preds = %entry
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 1, !dbg !4831
  %0 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4831
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4815, metadata !DIExpression()), !dbg !4826
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 0, !dbg !4833
  %1 = load i64, i64* %constant, align 8, !dbg !4833
  call void @llvm.dbg.value(metadata i64 %1, metadata !4816, metadata !DIExpression()), !dbg !4826
  br label %if.end, !dbg !4834

if.end:                                           ; preds = %if.then, %entry
  %save_var.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4826
  %save_constant.0 = phi i64 [ %1, %if.then ], [ 0, %entry ], !dbg !4826
  call void @llvm.dbg.value(metadata i64 %save_constant.0, metadata !4816, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata %union.tree_node* %save_var.0, metadata !4815, metadata !DIExpression()), !dbg !4826
  %var1 = getelementptr inbounds %struct.args_size, %struct.args_size* %alignment_pad, i64 0, i32 1, !dbg !4835
  store %union.tree_node* null, %union.tree_node** %var1, align 8, !dbg !4836
  %constant2 = getelementptr inbounds %struct.args_size, %struct.args_size* %alignment_pad, i64 0, i32 0, !dbg !4837
  store i64 0, i64* %constant2, align 8, !dbg !4838
  %cmp3 = icmp sgt i32 %boundary, 8, !dbg !4839
  br i1 %cmp3, label %if.then4, label %if.end43, !dbg !4840

if.then4:                                         ; preds = %if.end
  %var5 = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 1, !dbg !4841
  %2 = load %union.tree_node*, %union.tree_node** %var5, align 8, !dbg !4841
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4842
  br i1 %tobool, label %if.else, label %if.then6, !dbg !4843

if.then6:                                         ; preds = %if.then4
  %call = tail call %union.tree_node* @size_int_kind(i64 0, i32 1) #6, !dbg !4844
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4819, metadata !DIExpression()), !dbg !4845
  %3 = load %union.tree_node*, %union.tree_node** %var5, align 8, !dbg !4846
  %cmp8 = icmp eq %union.tree_node* %3, null, !dbg !4846
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !4846

cond.true:                                        ; preds = %if.then6
  %constant9 = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 0, !dbg !4846
  %4 = load i64, i64* %constant9, align 8, !dbg !4846
  %call10 = tail call %union.tree_node* @size_int_kind(i64 %4, i32 1) #6, !dbg !4846
  br label %cond.end, !dbg !4846

cond.false:                                       ; preds = %if.then6
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4846
  %call12 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %5, %union.tree_node* nonnull %3) #6, !dbg !4846
  %constant13 = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 0, !dbg !4846
  %6 = load i64, i64* %constant13, align 8, !dbg !4846
  %call14 = tail call %union.tree_node* @size_int_kind(i64 %6, i32 1) #6, !dbg !4846
  %call15 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call12, %union.tree_node* %call14) #6, !dbg !4846
  br label %cond.end, !dbg !4846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call10, %cond.true ], [ %call15, %cond.false ], !dbg !4846
  %call16 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %cond, %union.tree_node* %call) #6, !dbg !4846
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4824, metadata !DIExpression()), !dbg !4845
  %call18 = tail call %union.tree_node* @round_up_loc(i32 0, %union.tree_node* %call16, i32 %div) #6, !dbg !4847
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4825, metadata !DIExpression()), !dbg !4845
  %call19 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 64, %union.tree_node* %call18, %union.tree_node* %call) #6, !dbg !4848
  store %union.tree_node* %call19, %union.tree_node** %var5, align 8, !dbg !4849
  %constant21 = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 0, !dbg !4850
  store i64 0, i64* %constant21, align 8, !dbg !4851
  br i1 %cmp, label %if.then23, label %if.end43, !dbg !4852

if.then23:                                        ; preds = %cond.end
  %call25 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 64, %union.tree_node* %call19, %union.tree_node* %save_var.0) #6, !dbg !4853
  store %union.tree_node* %call25, %union.tree_node** %var1, align 8, !dbg !4855
  br label %if.end43, !dbg !4856

if.else:                                          ; preds = %if.then4
  %constant28 = getelementptr inbounds %struct.args_size, %struct.args_size* %offset_ptr, i64 0, i32 0, !dbg !4857
  %7 = load i64, i64* %constant28, align 8, !dbg !4857
  %conv = sext i32 %div to i64, !dbg !4857
  %add29 = add nsw i64 %7, %conv, !dbg !4857
  %sub30 = add nsw i64 %add29, -1, !dbg !4857
  %neg = sub nsw i32 0, %div, !dbg !4857
  %conv32 = sext i32 %neg to i64, !dbg !4857
  %and = and i64 %sub30, %conv32, !dbg !4857
  store i64 %and, i64* %constant28, align 8, !dbg !4859
  br i1 %cmp, label %if.then37, label %if.end43, !dbg !4860

if.then37:                                        ; preds = %if.else
  %sub39 = sub nsw i64 %and, %save_constant.0, !dbg !4861
  store i64 %sub39, i64* %constant2, align 8, !dbg !4863
  br label %if.end43, !dbg !4864

if.end43:                                         ; preds = %if.then23, %cond.end, %if.then37, %if.else, %if.end
  ret void, !dbg !4865
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @round_up_loc(i32, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @generate_setjmp_warnings() local_unnamed_addr #4 !dbg !4866 {
entry:
  %call = tail call %struct.bitmap_head_def* @regstat_get_setjmp_crosses() #6, !dbg !4870
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4868, metadata !DIExpression()), !dbg !4871
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4872
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4872
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4872
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !4872
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4872
  %cmp = icmp eq i32 %2, 2, !dbg !4874
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !4875

lor.lhs.false:                                    ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call, i64 0, i32 0, !dbg !4876
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4876
  %tobool = icmp eq %struct.bitmap_element_def* %3, null, !dbg !4876
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4877

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !4878
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %4, i64 0, i32 5, !dbg !4878
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4878
  tail call fastcc void @setjmp_vars_warning(%struct.bitmap_head_def* %call, %union.tree_node* %5) #7, !dbg !4879
  tail call fastcc void @setjmp_args_warning(%struct.bitmap_head_def* %call) #7, !dbg !4880
  br label %cleanup.cont, !dbg !4881

cleanup.cont:                                     ; preds = %lor.lhs.false, %if.end, %entry
  ret void, !dbg !4881
}

declare dso_local %struct.bitmap_head_def* @regstat_get_setjmp_crosses() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @setjmp_vars_warning(%struct.bitmap_head_def* %setjmp_crosses, %union.tree_node* %block) unnamed_addr #4 !dbg !4882 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %setjmp_crosses, metadata !4886, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4887, metadata !DIExpression()), !dbg !4890
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4891
  br label %for.cond, !dbg !4893

for.cond:                                         ; preds = %for.inc, %entry
  %decl.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4888, metadata !DIExpression()), !dbg !4890
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !4895
  br i1 %tobool, label %for.end, label %for.body, !dbg !4895

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4896
  %bf.load = load i64, i64* %1, align 8, !dbg !4896
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4900
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4900
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !4901

land.lhs.true:                                    ; preds = %for.body
  %2 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !4902
  %tobool7 = icmp eq i8 %2, 0, !dbg !4902
  br i1 %tobool7, label %for.inc, label %land.lhs.true8, !dbg !4902

land.lhs.true8:                                   ; preds = %land.lhs.true
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4902
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4902
  %cmp9 = icmp eq %struct.rtx_def* %3, null, !dbg !4902
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !4903
  br i1 %cmp9, label %for.inc, label %land.lhs.true11, !dbg !4903

land.lhs.true11:                                  ; preds = %land.lhs.true8
  br i1 false, label %cond.false, label %cond.true, !dbg !4904

cond.true:                                        ; preds = %land.lhs.true11
  %bf.load19.pre = load i32, i32* %4, align 8, !dbg !4904
  br label %cond.end, !dbg !4904

cond.false:                                       ; preds = %land.lhs.true11
  br label %cond.end, !dbg !4904

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load19 = phi i32 [ undef, %cond.false ], [ %bf.load19.pre, %cond.true ], !dbg !4904
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4904
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !4904
  br i1 %cmp21, label %land.lhs.true23, label %for.inc, !dbg !4905

land.lhs.true23:                                  ; preds = %cond.end
  br i1 false, label %cond.false30, label %cond.true27, !dbg !4906

cond.true27:                                      ; preds = %land.lhs.true23
  br label %cond.end33, !dbg !4906

cond.false30:                                     ; preds = %land.lhs.true23
  br label %cond.end33, !dbg !4906

cond.end33:                                       ; preds = %cond.false30, %cond.true27
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %3) #7, !dbg !4906
  %call35 = tail call fastcc zeroext i8 @regno_clobbered_at_setjmp(%struct.bitmap_head_def* %setjmp_crosses, i32 %call) #7, !dbg !4907
  %tobool37 = icmp eq i8 %call35, 0, !dbg !4907
  br i1 %tobool37, label %for.inc, label %if.then, !dbg !4908

if.then:                                          ; preds = %cond.end33
  %call38 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.13, i64 0, i64 0), %union.tree_node* nonnull %decl.0) #6, !dbg !4909
  br label %for.inc, !dbg !4909

for.inc:                                          ; preds = %cond.end33, %land.lhs.true8, %land.lhs.true, %for.body, %cond.end, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4910
  br label %for.cond, !dbg !4911, !llvm.loop !4912

for.end:                                          ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4914
  br label %for.cond40, !dbg !4916

for.cond40:                                       ; preds = %for.body42, %for.end
  %sub.0.in = phi %union.tree_node** [ %5, %for.end ], [ %chain45, %for.body42 ]
  %sub.0 = load %union.tree_node*, %union.tree_node** %sub.0.in, align 8, !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node* %sub.0, metadata !4889, metadata !DIExpression()), !dbg !4890
  %tobool41 = icmp eq %union.tree_node* %sub.0, null, !dbg !4918
  br i1 %tobool41, label %for.end46, label %for.body42, !dbg !4918

for.body42:                                       ; preds = %for.cond40
  tail call fastcc void @setjmp_vars_warning(%struct.bitmap_head_def* %setjmp_crosses, %union.tree_node* nonnull %sub.0) #7, !dbg !4919
  %chain45 = getelementptr inbounds %union.tree_node, %union.tree_node* %sub.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4921
  br label %for.cond40, !dbg !4922, !llvm.loop !4923

for.end46:                                        ; preds = %for.cond40
  ret void, !dbg !4925
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setjmp_args_warning(%struct.bitmap_head_def* %setjmp_crosses) unnamed_addr #4 !dbg !4926 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %setjmp_crosses, metadata !4930, metadata !DIExpression()), !dbg !4932
  %0 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4933
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %0, i64 0, i32 2, !dbg !4933
  br label %for.cond, !dbg !4935

for.cond:                                         ; preds = %for.inc, %entry
  %decl.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.inc ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !4936
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4931, metadata !DIExpression()), !dbg !4932
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !4937
  br i1 %tobool, label %for.end, label %for.body, !dbg !4937

for.body:                                         ; preds = %for.cond
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4938
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4938
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !4938
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !4938

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !4938

cond.false:                                       ; preds = %for.body
  tail call void @make_decl_rtl(%union.tree_node* nonnull %decl.0) #6, !dbg !4938
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4938
  br label %cond.end, !dbg !4938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.pre.pn = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %1, %cond.true ]
  %2 = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %1, %cond.true ], !dbg !4938
  %cond1614 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.pre.pn, i64 0, i32 0, !dbg !4938
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !4941
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !4942

land.lhs.true:                                    ; preds = %cond.end
  br i1 false, label %cond.false12, label %cond.true9, !dbg !4943

cond.true9:                                       ; preds = %land.lhs.true
  %bf.load.pre = load i32, i32* %cond1614, align 8, !dbg !4943
  br label %cond.end15, !dbg !4943

cond.false12:                                     ; preds = %land.lhs.true
  br label %cond.end15, !dbg !4943

cond.end15:                                       ; preds = %cond.false12, %cond.true9
  %bf.load = phi i32 [ undef, %cond.false12 ], [ %bf.load.pre, %cond.true9 ], !dbg !4943
  %bf.clear = and i32 %bf.load, 65535, !dbg !4943
  %cmp17 = icmp eq i32 %bf.clear, 37, !dbg !4943
  br i1 %cmp17, label %land.lhs.true18, label %for.inc, !dbg !4944

land.lhs.true18:                                  ; preds = %cond.end15
  br i1 false, label %cond.false25, label %cond.true22, !dbg !4945

cond.true22:                                      ; preds = %land.lhs.true18
  br label %cond.end28, !dbg !4945

cond.false25:                                     ; preds = %land.lhs.true18
  br label %cond.end28, !dbg !4945

cond.end28:                                       ; preds = %cond.false25, %cond.true22
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %2) #7, !dbg !4945
  %call30 = tail call fastcc zeroext i8 @regno_clobbered_at_setjmp(%struct.bitmap_head_def* %setjmp_crosses, i32 %call) #7, !dbg !4946
  %tobool31 = icmp eq i8 %call30, 0, !dbg !4946
  br i1 %tobool31, label %for.inc, label %if.then, !dbg !4947

if.then:                                          ; preds = %cond.end28
  %call32 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.14, i64 0, i64 0), %union.tree_node* nonnull %decl.0) #6, !dbg !4948
  br label %for.inc, !dbg !4948

for.inc:                                          ; preds = %cond.end28, %cond.end, %cond.end15, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4949
  br label %for.cond, !dbg !4950, !llvm.loop !4951

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4953
}

; Function Attrs: nounwind uwtable
define dso_local void @reorder_blocks() local_unnamed_addr #4 !dbg !4954 {
entry:
  %block_stack = alloca %struct.VEC_tree_heap*, align 8
  %0 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !4958
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %0, i64 0, i32 5, !dbg !4958
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4958
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4956, metadata !DIExpression()), !dbg !4959
  %2 = bitcast %struct.VEC_tree_heap** %block_stack to i8*, !dbg !4960
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4960
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !4961
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4963

if.end:                                           ; preds = %entry
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 10) #7, !dbg !4964
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !4957, metadata !DIExpression()), !dbg !4959
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %block_stack, align 8, !dbg !4965
  tail call void @clear_block_marks(%union.tree_node* nonnull %1) #7, !dbg !4966
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4967
  store %union.tree_node* null, %union.tree_node** %3, align 8, !dbg !4968
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4969
  store %union.tree_node* null, %union.tree_node** %chain, align 8, !dbg !4970
  %call2 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4971
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %block_stack, metadata !4957, metadata !DIExpression(DW_OP_deref)), !dbg !4959
  call fastcc void @reorder_blocks_1(%struct.rtx_def* %call2, %union.tree_node* nonnull %1, %struct.VEC_tree_heap** nonnull %block_stack) #7, !dbg !4972
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !4973
  %call5 = call %union.tree_node* @blocks_nreverse(%union.tree_node* %4) #7, !dbg !4974
  store %union.tree_node* %call5, %union.tree_node** %3, align 8, !dbg !4975
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %block_stack, metadata !4957, metadata !DIExpression(DW_OP_deref)), !dbg !4959
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %block_stack) #7, !dbg !4976
  br label %cleanup, !dbg !4977

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4977
  ret void, !dbg !4977
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4978 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !4982, metadata !DIExpression()), !dbg !4983
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !4984
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !4984
  ret %struct.VEC_tree_heap* %0, !dbg !4984
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_block_marks(%union.tree_node* %block) local_unnamed_addr #4 !dbg !4985 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4989, metadata !DIExpression()), !dbg !4990
  br label %while.cond, !dbg !4991

while.cond:                                       ; preds = %while.body, %entry
  %block.addr.0 = phi %union.tree_node* [ %block, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !4989, metadata !DIExpression()), !dbg !4990
  %tobool = icmp eq %union.tree_node* %block.addr.0, null, !dbg !4991
  br i1 %tobool, label %while.end, label %while.body, !dbg !4991

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4992
  %bf.load = load i64, i64* %0, align 8, !dbg !4994
  %bf.clear = and i64 %bf.load, -4194305, !dbg !4994
  store i64 %bf.clear, i64* %0, align 8, !dbg !4994
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4995
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4995
  tail call void @clear_block_marks(%union.tree_node* %2) #7, !dbg !4996
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4997
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4997
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4989, metadata !DIExpression()), !dbg !4990
  br label %while.cond, !dbg !4991, !llvm.loop !4998

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5000
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reorder_blocks_1(%struct.rtx_def* %insns, %union.tree_node* %current_block, %struct.VEC_tree_heap** %p_block_stack) unnamed_addr #4 !dbg !5001 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !5005, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata %union.tree_node* %current_block, metadata !5006, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %p_block_stack, metadata !5007, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !5008, metadata !DIExpression()), !dbg !5021
  br label %for.cond, !dbg !5022

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %insns, %entry ], [ %28, %for.inc ], !dbg !5023
  %current_block.addr.0 = phi %union.tree_node* [ %current_block, %entry ], [ %current_block.addr.4, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %current_block.addr.0, metadata !5006, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5008, metadata !DIExpression()), !dbg !5021
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5024
  br i1 %tobool, label %for.end, label %for.body, !dbg !5024

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5025
  %bf.load = load i32, i32* %0, align 8, !dbg !5025
  %bf.clear = and i32 %bf.load, 65535, !dbg !5025
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !5025
  br i1 %cmp, label %if.then, label %for.inc, !dbg !5026

if.then:                                          ; preds = %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5027
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5027
  %rt_int = bitcast %union.rtunion_def* %1 to i32*, !dbg !5027
  %2 = load i32, i32* %rt_int, align 8, !dbg !5027
  %cmp1 = icmp eq i32 %2, 2, !dbg !5028
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !5029

if.then2:                                         ; preds = %if.then
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 2, !dbg !5030
  %rt_tree = bitcast i64* %arrayidx5 to %union.tree_node**, !dbg !5030
  %3 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5009, metadata !DIExpression()), !dbg !5031
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5032
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5032
  %tobool7 = icmp eq %union.tree_node* %5, null, !dbg !5032
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !5032

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !5032

cond.end:                                         ; preds = %if.then2, %cond.true
  %cond = phi %union.tree_node* [ %5, %cond.true ], [ %3, %if.then2 ], !dbg !5032
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5017, metadata !DIExpression()), !dbg !5031
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5033
  %bf.load10 = load i64, i64* %6, align 8, !dbg !5033
  %bf.cast1 = and i64 %bf.load10, 4194304, !dbg !5033
  %tobool12 = icmp eq i64 %bf.cast1, 0, !dbg !5033
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !5034

if.then13:                                        ; preds = %cond.end
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %3) #6, !dbg !5035
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5018, metadata !DIExpression()), !dbg !5036
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5037
  store %union.tree_node* %cond, %union.tree_node** %7, align 8, !dbg !5038
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5039
  %9 = bitcast %union.tree_node** %8 to i64*, !dbg !5039
  %10 = load i64, i64* %9, align 8, !dbg !5039
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5040
  %12 = bitcast %union.tree_node** %11 to i64*, !dbg !5041
  store i64 %10, i64* %12, align 8, !dbg !5041
  store %union.tree_node* %call, %union.tree_node** %8, align 8, !dbg !5042
  store %union.tree_node* %call, %union.tree_node** %rt_tree, align 8, !dbg !5043
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5009, metadata !DIExpression()), !dbg !5031
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5031
  %bf.load27.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5044
  br label %if.end, !dbg !5045

if.end:                                           ; preds = %cond.end, %if.then13
  %bf.load27 = phi i64 [ %bf.load27.pre, %if.then13 ], [ %bf.load10, %cond.end ], !dbg !5044
  %block.0 = phi %union.tree_node* [ %call, %if.then13 ], [ %3, %cond.end ], !dbg !5031
  call void @llvm.dbg.value(metadata %union.tree_node* %block.0, metadata !5009, metadata !DIExpression()), !dbg !5031
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5046
  store %union.tree_node* null, %union.tree_node** %13, align 8, !dbg !5047
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5048
  %bf.set = or i64 %bf.load27, 4194304, !dbg !5044
  store i64 %bf.set, i64* %14, align 8, !dbg !5044
  %cmp29 = icmp eq %union.tree_node* %block.0, %current_block.addr.0, !dbg !5049
  br i1 %cmp29, label %if.end46, label %if.then30, !dbg !5051

if.then30:                                        ; preds = %if.end
  %cmp31 = icmp eq %union.tree_node* %block.0, %cond, !dbg !5052
  br i1 %cmp31, label %if.end39, label %if.then32, !dbg !5055

if.then32:                                        ; preds = %if.then30
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5056
  %15 = bitcast i40* %supercontext to %union.tree_node**, !dbg !5056
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !5056
  %cmp34 = icmp eq %union.tree_node* %16, %current_block.addr.0, !dbg !5056
  br i1 %cmp34, label %if.end39, label %cond.true35, !dbg !5056

cond.true35:                                      ; preds = %if.then32
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3896, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5056
  br label %if.end39, !dbg !5056

if.end39:                                         ; preds = %if.then30, %cond.true35, %if.then32
  %supercontext41 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5057
  %17 = bitcast i40* %supercontext41 to %union.tree_node**, !dbg !5057
  store %union.tree_node* %current_block.addr.0, %union.tree_node** %17, align 8, !dbg !5058
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %current_block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5059
  %19 = bitcast %union.tree_node** %18 to i64*, !dbg !5059
  %20 = load i64, i64* %19, align 8, !dbg !5059
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5060
  %21 = bitcast %union.tree_node** %chain to i64*, !dbg !5061
  store i64 %20, i64* %21, align 8, !dbg !5061
  store %union.tree_node* %block.0, %union.tree_node** %18, align 8, !dbg !5062
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5006, metadata !DIExpression()), !dbg !5021
  br label %if.end46, !dbg !5063

if.end46:                                         ; preds = %if.end, %if.end39
  %current_block.addr.1 = phi %union.tree_node* [ %cond, %if.end39 ], [ %current_block.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %current_block.addr.1, metadata !5006, metadata !DIExpression()), !dbg !5021
  %call47 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %p_block_stack, %union.tree_node* %block.0) #7, !dbg !5064
  br label %for.inc, !dbg !5065

if.else:                                          ; preds = %if.then
  %cmp52 = icmp eq i32 %2, 3, !dbg !5066
  br i1 %cmp52, label %if.then53, label %for.inc, !dbg !5068

if.then53:                                        ; preds = %if.else
  %22 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %p_block_stack, align 8, !dbg !5069
  %tobool54 = icmp eq %struct.VEC_tree_heap* %22, null, !dbg !5069
  br i1 %tobool54, label %cond.end58, label %cond.true55, !dbg !5069

cond.true55:                                      ; preds = %if.then53
  %base56 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %22, i64 0, i32 0, !dbg !5069
  br label %cond.end58, !dbg !5069

cond.end58:                                       ; preds = %if.then53, %cond.true55
  %cond59 = phi %struct.VEC_tree_base* [ %base56, %cond.true55 ], [ null, %if.then53 ], !dbg !5069
  %call60 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %cond59) #7, !dbg !5069
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 2, !dbg !5071
  %rt_tree64 = bitcast i64* %arrayidx63 to %union.tree_node**, !dbg !5071
  store %union.tree_node* %call60, %union.tree_node** %rt_tree64, align 8, !dbg !5072
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %current_block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5073
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !5073
  %call67 = tail call %union.tree_node* @blocks_nreverse(%union.tree_node* %24) #7, !dbg !5074
  store %union.tree_node* %call67, %union.tree_node** %23, align 8, !dbg !5075
  %supercontext71 = getelementptr inbounds %union.tree_node, %union.tree_node* %current_block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5076
  %25 = bitcast i40* %supercontext71 to %union.tree_node**, !dbg !5076
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !5076
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5006, metadata !DIExpression()), !dbg !5021
  br label %for.inc, !dbg !5077

for.inc:                                          ; preds = %for.body, %if.else, %cond.end58, %if.end46
  %current_block.addr.4 = phi %union.tree_node* [ %current_block.addr.0, %for.body ], [ %current_block.addr.1, %if.end46 ], [ %26, %cond.end58 ], [ %current_block.addr.0, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %current_block.addr.4, metadata !5006, metadata !DIExpression()), !dbg !5021
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5078
  %rt_rtx = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !5078
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !5008, metadata !DIExpression()), !dbg !5021
  br label %for.cond, !dbg !5079, !llvm.loop !5080

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5082
}

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @blocks_nreverse(%union.tree_node* %t) local_unnamed_addr #4 !dbg !5083 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5087, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5088, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5089, metadata !DIExpression()), !dbg !5091
  br label %for.cond, !dbg !5092

for.cond:                                         ; preds = %for.body, %entry
  %prev.0 = phi %union.tree_node* [ null, %entry ], [ %decl.0, %for.body ], !dbg !5091
  %decl.0 = phi %union.tree_node* [ %t, %entry ], [ %0, %for.body ], !dbg !5094
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !5089, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !5088, metadata !DIExpression()), !dbg !5091
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !5095
  br i1 %tobool, label %for.end, label %for.body, !dbg !5095

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5096
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5096
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5090, metadata !DIExpression()), !dbg !5091
  store %union.tree_node* %prev.0, %union.tree_node** %chain, align 8, !dbg !5099
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !5088, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5089, metadata !DIExpression()), !dbg !5091
  br label %for.cond, !dbg !5100, !llvm.loop !5101

for.end:                                          ; preds = %for.cond
  %prev.0.lcssa = phi %union.tree_node* [ %prev.0, %for.cond ], !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !5088, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !5088, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !5088, metadata !DIExpression()), !dbg !5091
  ret %union.tree_node* %prev.0.lcssa, !dbg !5103
}

; Function Attrs: nounwind uwtable
define dso_local void @number_blocks(%union.tree_node* %fn) local_unnamed_addr #4 !dbg !5104 {
entry:
  %n_blocks = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !5106, metadata !DIExpression()), !dbg !5110
  %0 = bitcast i32* %n_blocks to i8*, !dbg !5111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5111
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5112
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !5112
  call void @llvm.dbg.value(metadata i32* %n_blocks, metadata !5108, metadata !DIExpression(DW_OP_deref)), !dbg !5110
  %call = call fastcc %union.tree_node** @get_block_vector(%union.tree_node* %1, i32* nonnull %n_blocks) #7, !dbg !5113
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !5109, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 1, metadata !5107, metadata !DIExpression()), !dbg !5110
  %2 = load i32, i32* %n_blocks, align 4, !dbg !5114
  %3 = sext i32 %2 to i64, !dbg !5117
  br label %for.cond, !dbg !5117

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %entry ], !dbg !5118
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %2, metadata !5108, metadata !DIExpression()), !dbg !5110
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !5119
  br i1 %cmp, label %for.body, label %for.end, !dbg !5120

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* @next_block_index, align 4, !dbg !5121
  %inc = add nsw i32 %4, 1, !dbg !5121
  store i32 %inc, i32* @next_block_index, align 4, !dbg !5121
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call, i64 %indvars.iv, !dbg !5122
  %5 = bitcast %union.tree_node** %arrayidx to %struct.tree_block**, !dbg !5122
  %6 = load %struct.tree_block*, %struct.tree_block** %5, align 8, !dbg !5122
  %block_num = getelementptr inbounds %struct.tree_block, %struct.tree_block* %6, i64 0, i32 1, !dbg !5122
  %bf.load = load i32, i32* %block_num, align 8, !dbg !5123
  %bf.shl = shl i32 %4, 1, !dbg !5123
  %bf.clear = and i32 %bf.load, 1, !dbg !5123
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !5123
  store i32 %bf.set, i32* %block_num, align 8, !dbg !5123
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5124
  call void @llvm.dbg.value(metadata i32 undef, metadata !5107, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5110
  br label %for.cond, !dbg !5125, !llvm.loop !5126

for.end:                                          ; preds = %for.cond
  %7 = bitcast %union.tree_node** %call to i8*, !dbg !5128
  call void @free(i8* %7) #6, !dbg !5129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5130
  ret void, !dbg !5130
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node** @get_block_vector(%union.tree_node* %block, i32* %n_blocks_p) unnamed_addr #4 !dbg !5131 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !5135, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32* %n_blocks_p, metadata !5136, metadata !DIExpression()), !dbg !5138
  %call = tail call fastcc i32 @all_blocks(%union.tree_node* %block, %union.tree_node** null) #7, !dbg !5139
  store i32 %call, i32* %n_blocks_p, align 4, !dbg !5140
  %conv = sext i32 %call to i64, !dbg !5141
  %mul = shl nsw i64 %conv, 3, !dbg !5141
  %call1 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5141
  %0 = bitcast i8* %call1 to %union.tree_node**, !dbg !5141
  call void @llvm.dbg.value(metadata %union.tree_node** %0, metadata !5137, metadata !DIExpression()), !dbg !5138
  %call2 = tail call fastcc i32 @all_blocks(%union.tree_node* %block, %union.tree_node** %0) #7, !dbg !5142
  ret %union.tree_node** %0, !dbg !5143
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @debug_find_var_in_block_tree(%union.tree_node* %var, %union.tree_node* %block) local_unnamed_addr #4 !dbg !5144 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5148, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !5149, metadata !DIExpression()), !dbg !5155
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5156
  br label %for.cond, !dbg !5158

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5150, metadata !DIExpression()), !dbg !5155
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !5160
  br i1 %tobool, label %for.end, label %for.body, !dbg !5160

for.body:                                         ; preds = %for.cond
  %cmp = icmp eq %union.tree_node* %t.0, %var, !dbg !5161
  br i1 %cmp, label %cleanup13.loopexit1, label %for.inc, !dbg !5164

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5165
  br label %for.cond, !dbg !5166, !llvm.loop !5167

for.end:                                          ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5169
  br label %for.cond3, !dbg !5170

for.cond3:                                        ; preds = %for.inc9, %for.end
  %t.1.in = phi %union.tree_node** [ %1, %for.end ], [ %chain11, %for.inc9 ]
  %retval.0 = phi %union.tree_node* [ undef, %for.end ], [ %call.retval.0, %for.inc9 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !5171
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !5150, metadata !DIExpression()), !dbg !5155
  %tobool4 = icmp eq %union.tree_node* %t.1, null, !dbg !5172
  br i1 %tobool4, label %cleanup13.loopexit, label %for.body5, !dbg !5172

for.body5:                                        ; preds = %for.cond3
  %call = tail call %union.tree_node* @debug_find_var_in_block_tree(%union.tree_node* %var, %union.tree_node* nonnull %t.1) #7, !dbg !5173
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5151, metadata !DIExpression()), !dbg !5174
  %tobool6 = icmp ne %union.tree_node* %call, null, !dbg !5175
  %call.retval.0 = select i1 %tobool6, %union.tree_node* %call, %union.tree_node* %retval.0, !dbg !5177
  br i1 %tobool6, label %cleanup13.loopexit, label %for.inc9

for.inc9:                                         ; preds = %for.body5
  %chain11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5178
  br label %for.cond3, !dbg !5179, !llvm.loop !5180

cleanup13.loopexit:                               ; preds = %for.cond3, %for.body5
  %retval.2.ph = phi %union.tree_node* [ null, %for.cond3 ], [ %call.retval.0, %for.body5 ]
  br label %cleanup13, !dbg !5182

cleanup13.loopexit1:                              ; preds = %for.body
  br label %cleanup13, !dbg !5182

cleanup13:                                        ; preds = %cleanup13.loopexit1, %cleanup13.loopexit
  %retval.2 = phi %union.tree_node* [ %retval.2.ph, %cleanup13.loopexit ], [ %block, %cleanup13.loopexit1 ], !dbg !5155
  ret %union.tree_node* %retval.2, !dbg !5182
}

; Function Attrs: nounwind uwtable
define internal fastcc void @invoke_set_current_function_hook(%union.tree_node* %fndecl) unnamed_addr #4 !dbg !5183 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5185, metadata !DIExpression()), !dbg !5189
  %.b = load i1, i1* @in_dummy_function, align 1, !dbg !5190
  br i1 %.b, label %if.end7, label %if.then, !dbg !5191

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq %union.tree_node* %fndecl, null, !dbg !5192
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !5192

cond.true:                                        ; preds = %if.then
  %function_specific_optimization = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 4, !dbg !5193
  br label %cond.end, !dbg !5192

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5192

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %function_specific_optimization, %cond.true ], [ getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 125), %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !5192
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5186, metadata !DIExpression()), !dbg !5194
  %tobool2 = icmp eq %union.tree_node* %cond, null, !dbg !5195
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 125), align 8, !dbg !5197
  %spec.select = select i1 %tobool2, %union.tree_node* %0, %union.tree_node* %cond, !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !5186, metadata !DIExpression()), !dbg !5194
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 126), align 16, !dbg !5199
  %cmp = icmp eq %union.tree_node* %1, %spec.select, !dbg !5201
  br i1 %cmp, label %if.end6, label %if.then4, !dbg !5202

if.then4:                                         ; preds = %cond.end
  store %union.tree_node* %spec.select, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 126), align 16, !dbg !5203
  %opts5 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5205
  %2 = bitcast i32* %opts5 to %struct.cl_optimization*, !dbg !5205
  tail call void @cl_optimization_restore(%struct.cl_optimization* nonnull %2) #6, !dbg !5206
  br label %if.end6, !dbg !5207

if.end6:                                          ; preds = %cond.end, %if.then4
  %3 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 47), align 8, !dbg !5208
  tail call void %3(%union.tree_node* %fndecl) #6, !dbg !5209
  br label %if.end7, !dbg !5210

if.end7:                                          ; preds = %entry, %if.end6
  ret void, !dbg !5211
}

; Function Attrs: nounwind uwtable
define dso_local void @push_cfun(%struct.function* %new_cfun) local_unnamed_addr #4 !dbg !5212 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %new_cfun, metadata !5214, metadata !DIExpression()), !dbg !5215
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5216
  %call = tail call fastcc %struct.function** @VEC_function_p_heap_safe_push(%struct.VEC_function_p_heap** nonnull @cfun_stack, %struct.function* %0) #7, !dbg !5216
  tail call void @set_cfun(%struct.function* %new_cfun) #7, !dbg !5217
  ret void, !dbg !5218
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_cfun() local_unnamed_addr #4 !dbg !5219 {
entry:
  %0 = load %struct.VEC_function_p_heap*, %struct.VEC_function_p_heap** @cfun_stack, align 8, !dbg !5222
  %base = getelementptr inbounds %struct.VEC_function_p_heap, %struct.VEC_function_p_heap* %0, i64 0, i32 0, !dbg !5222
  %call = tail call fastcc %struct.function* @VEC_function_p_base_pop(%struct.VEC_function_p_base* %base) #7, !dbg !5222
  call void @llvm.dbg.value(metadata %struct.function* %call, metadata !5221, metadata !DIExpression()), !dbg !5223
  tail call void @set_cfun(%struct.function* %call) #7, !dbg !5224
  ret void, !dbg !5225
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_next_funcdef_no() local_unnamed_addr #4 !dbg !5226 {
entry:
  %0 = load i32, i32* @funcdef_no, align 4, !dbg !5227
  %inc = add nsw i32 %0, 1, !dbg !5227
  store i32 %inc, i32* @funcdef_no, align 4, !dbg !5227
  ret i32 %0, !dbg !5228
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #1

declare dso_local void @init_eh_for_function() local_unnamed_addr #1

declare dso_local void @ix86_call_abi_override(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @tree_last(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @push_struct_function(%union.tree_node* %fndecl) local_unnamed_addr #4 !dbg !5229 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5231, metadata !DIExpression()), !dbg !5232
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5233
  %call = tail call fastcc %struct.function** @VEC_function_p_heap_safe_push(%struct.VEC_function_p_heap** nonnull @cfun_stack, %struct.function* %0) #7, !dbg !5233
  tail call void @allocate_struct_function(%union.tree_node* %fndecl, i8 zeroext 0) #7, !dbg !5234
  ret void, !dbg !5235
}

; Function Attrs: nounwind uwtable
define dso_local void @init_dummy_function_start() local_unnamed_addr #4 !dbg !5236 {
entry:
  %.b = load i1, i1* @in_dummy_function, align 1, !dbg !5237
  br i1 %.b, label %cond.true, label %cond.end, !dbg !5237

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5237
  br label %cond.end, !dbg !5237

cond.end:                                         ; preds = %entry, %cond.true
  store i1 true, i1* @in_dummy_function, align 1, !dbg !5238
  tail call void @push_struct_function(%union.tree_node* null) #7, !dbg !5239
  tail call fastcc void @prepare_function_start() #7, !dbg !5240
  ret void, !dbg !5241
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_function_start() unnamed_addr #4 !dbg !5242 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !5243
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5243
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5243

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5243
  br label %cond.end, !dbg !5243

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @init_temp_slots() #7, !dbg !5244
  tail call void @init_emit() #6, !dbg !5245
  tail call void @init_varasm_status() #6, !dbg !5246
  tail call void @init_expr() #6, !dbg !5247
  tail call void @default_rtl_profile() #6, !dbg !5248
  %1 = load i32, i32* @optimize, align 4, !dbg !5249
  %tobool1 = icmp eq i32 %1, 0, !dbg !5250
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5250
  store i32 %lnot.ext, i32* @cse_not_expected, align 4, !dbg !5251
  store i32 0, i32* @caller_save_needed, align 4, !dbg !5252
  store i16* null, i16** @reg_renumber, align 8, !dbg !5253
  store i32 0, i32* @virtuals_instantiated, align 4, !dbg !5254
  store i32 1, i32* @generating_concat_p, align 4, !dbg !5255
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !5256
  ret void, !dbg !5257
}

; Function Attrs: nounwind uwtable
define dso_local void @init_function_start(%union.tree_node* %subr) local_unnamed_addr #4 !dbg !5258 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %subr, metadata !5260, metadata !DIExpression()), !dbg !5261
  %tobool = icmp eq %union.tree_node* %subr, null, !dbg !5262
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5264

land.lhs.true:                                    ; preds = %entry
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 1, !dbg !5265
  %0 = load %struct.function*, %struct.function** %f, align 8, !dbg !5265
  %tobool1 = icmp eq %struct.function* %0, null, !dbg !5265
  br i1 %tobool1, label %if.else, label %if.then, !dbg !5266

if.then:                                          ; preds = %land.lhs.true
  tail call void @set_cfun(%struct.function* nonnull %0) #7, !dbg !5267
  br label %if.end, !dbg !5267

if.else:                                          ; preds = %land.lhs.true, %entry
  tail call void @allocate_struct_function(%union.tree_node* %subr, i8 zeroext 0) #7, !dbg !5268
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  tail call fastcc void @prepare_function_start() #7, !dbg !5269
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 0, i32 3, !dbg !5270
  %1 = bitcast %union.tree_node** %result to %struct.tree_common**, !dbg !5270
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !5270
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !5270
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5270
  %4 = load i64*, i64** %3, align 8, !dbg !5270
  %bf.load = load i64, i64* %4, align 8, !dbg !5270
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5270
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !5270
  br i1 %cmp, label %if.then33, label %lor.lhs.false, !dbg !5270

lor.lhs.false:                                    ; preds = %if.end
  %cmp12 = icmp eq i64 %bf.cast1, 16, !dbg !5270
  br i1 %cmp12, label %if.then33, label %lor.lhs.false13, !dbg !5270

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i64 %bf.cast1, 17, !dbg !5270
  br i1 %cmp22, label %if.then33, label %lor.lhs.false23, !dbg !5270

lor.lhs.false23:                                  ; preds = %lor.lhs.false13
  %cmp32 = icmp eq i64 %bf.cast1, 18, !dbg !5270
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !5272

if.then33:                                        ; preds = %lor.lhs.false23, %lor.lhs.false13, %lor.lhs.false, %if.end
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 34, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5273
  br label %if.end34, !dbg !5273

if.end34:                                         ; preds = %if.then33, %lor.lhs.false23
  ret void, !dbg !5274
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @init_function_for_compilation() #4 !dbg !5275 {
entry:
  store i16* null, i16** @reg_renumber, align 8, !dbg !5276
  ret i32 0, !dbg !5277
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_main_function() local_unnamed_addr #4 !dbg !5278 {
entry:
  ret void, !dbg !5279
}

; Function Attrs: nounwind uwtable
define dso_local void @stack_protect_prologue() local_unnamed_addr #4 !dbg !5280 {
entry:
  %0 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 83), align 8, !dbg !5288
  %call = tail call %union.tree_node* %0() #6, !dbg !5289
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5282, metadata !DIExpression()), !dbg !5290
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !5291
  %call1 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %1) #7, !dbg !5292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5283, metadata !DIExpression()), !dbg !5290
  %call2 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call) #7, !dbg !5293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5284, metadata !DIExpression()), !dbg !5290
  %call3 = tail call %struct.rtx_def* @gen_stack_protect_set(%struct.rtx_def* %call1, %struct.rtx_def* %call2) #6, !dbg !5294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5285, metadata !DIExpression()), !dbg !5295
  %tobool = icmp eq %struct.rtx_def* %call3, null, !dbg !5296
  br i1 %tobool, label %cleanup, label %if.then, !dbg !5298

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call3) #6, !dbg !5299
  br label %cleanup, !dbg !5301

cleanup:                                          ; preds = %entry, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %entry ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %cleanup.cont10

cleanup.cont:                                     ; preds = %cleanup
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1, %struct.rtx_def* %call2) #6, !dbg !5302
  br label %cleanup.cont10, !dbg !5303

cleanup.cont10:                                   ; preds = %cleanup.cont, %cleanup
  ret void, !dbg !5303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) unnamed_addr #0 !dbg !5304 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5308, metadata !DIExpression()), !dbg !5309
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** null) #6, !dbg !5310
  ret %struct.rtx_def* %call, !dbg !5311
}

declare dso_local %struct.rtx_def* @gen_stack_protect_set(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @stack_protect_epilogue() local_unnamed_addr #4 !dbg !5312 {
entry:
  %0 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 83), align 8, !dbg !5319
  %call = tail call %union.tree_node* %0() #6, !dbg !5320
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5314, metadata !DIExpression()), !dbg !5321
  %call1 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5315, metadata !DIExpression()), !dbg !5321
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !5323
  %call2 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %1) #7, !dbg !5324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5316, metadata !DIExpression()), !dbg !5321
  %call3 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call) #7, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5317, metadata !DIExpression()), !dbg !5321
  %call4 = tail call %struct.rtx_def* @gen_stack_protect_test(%struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call1) #6, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5318, metadata !DIExpression()), !dbg !5321
  %tobool = icmp eq %struct.rtx_def* %call4, null, !dbg !5328
  br i1 %tobool, label %sw.default, label %if.then, !dbg !5330

if.then:                                          ; preds = %entry
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call4) #6, !dbg !5331
  br label %sw.epilog, !dbg !5333

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* @ptr_mode, align 4, !dbg !5334
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call2, %struct.rtx_def* %call3, i32 81, %struct.rtx_def* null, i32 %2, i32 1, %struct.rtx_def* %call1) #6, !dbg !5335
  br label %sw.epilog, !dbg !5336

sw.epilog:                                        ; preds = %sw.default, %if.then
  %call6 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5337
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5318, metadata !DIExpression()), !dbg !5321
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 0, !dbg !5338
  %bf.load = load i32, i32* %3, align 8, !dbg !5338
  %bf.clear = and i32 %bf.load, 65535, !dbg !5338
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5338
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !5340

if.then7:                                         ; preds = %sw.epilog
  tail call void @predict_insn_def(%struct.rtx_def* %call6, i32 9, i32 1) #6, !dbg !5341
  br label %if.end8, !dbg !5341

if.end8:                                          ; preds = %if.then7, %sw.epilog
  %4 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 84), align 8, !dbg !5342
  %call9 = tail call %union.tree_node* %4() #6, !dbg !5343
  tail call void @expand_expr_stmt(%union.tree_node* %call9) #6, !dbg !5344
  %call10 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1) #6, !dbg !5345
  ret void, !dbg !5346
}

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_stack_protect_test(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #1

declare dso_local void @predict_insn_def(%struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local void @expand_expr_stmt(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @expand_function_start(%union.tree_node* %subr) local_unnamed_addr #4 !dbg !5347 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %subr, metadata !5349, metadata !DIExpression()), !dbg !5375
  tail call void @init_recog_no_volatile() #6, !dbg !5376
  %0 = load i32, i32* @profile_flag, align 4, !dbg !5377
  %tobool = icmp eq i32 %0, 0, !dbg !5377
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5378

land.rhs:                                         ; preds = %entry
  %no_instrument_function_entry_exit = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 5, !dbg !5379
  %bf.load = load i32, i32* %no_instrument_function_entry_exit, align 8, !dbg !5379
  %bf.clear = and i32 %bf.load, 16777216, !dbg !5379
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !5380
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %1 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !5375
  %conv = zext i1 %1 to i8, !dbg !5381
  store i8 %conv, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 35), align 1, !dbg !5382
  %2 = load %struct.rtx_def*, %struct.rtx_def** @stack_limit_rtx, align 8, !dbg !5383
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !5384
  br i1 %cmp, label %land.end10, label %land.rhs3, !dbg !5385

land.rhs3:                                        ; preds = %land.end
  %no_limit_stack = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 5, !dbg !5386
  %bf.load5 = load i32, i32* %no_limit_stack, align 8, !dbg !5386
  %bf.clear7 = and i32 %bf.load5, 33554432, !dbg !5386
  %tobool8 = icmp eq i32 %bf.clear7, 0, !dbg !5387
  br label %land.end10

land.end10:                                       ; preds = %land.end, %land.rhs3
  %3 = phi i1 [ false, %land.end ], [ %tobool8, %land.rhs3 ], !dbg !5375
  %conv12 = zext i1 %3 to i8, !dbg !5388
  store i8 %conv12, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 34), align 2, !dbg !5389
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5390
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 11), align 8, !dbg !5391
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 0, i32 3, !dbg !5392
  %4 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5392
  %call13 = tail call i32 @aggregate_value_p(%union.tree_node* %4, %union.tree_node* %subr) #7, !dbg !5393
  %tobool14 = icmp eq i32 %call13, 0, !dbg !5393
  br i1 %tobool14, label %if.else, label %if.then, !dbg !5394

if.then:                                          ; preds = %land.end10
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5350, metadata !DIExpression()), !dbg !5395
  %5 = load %struct.rtx_def* (%union.tree_node*, i32)*, %struct.rtx_def* (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 2), align 8, !dbg !5396
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %subr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5397
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5397
  %call15 = tail call %struct.rtx_def* %5(%union.tree_node* %6, i32 2) #6, !dbg !5398
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !5353, metadata !DIExpression()), !dbg !5399
  %tobool16 = icmp eq %struct.rtx_def* %call15, null, !dbg !5400
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !5402

if.then17:                                        ; preds = %if.then
  %call18 = tail call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !5403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !5350, metadata !DIExpression()), !dbg !5395
  %call19 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call18, %struct.rtx_def* nonnull %call15) #6, !dbg !5405
  br label %if.end, !dbg !5406

if.end:                                           ; preds = %if.then, %if.then17
  %value_address.0 = phi %struct.rtx_def* [ %call18, %if.then17 ], [ null, %if.then ], !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value_address.0, metadata !5350, metadata !DIExpression()), !dbg !5395
  %tobool20 = icmp eq %struct.rtx_def* %value_address.0, null, !dbg !5407
  br i1 %tobool20, label %if.end128, label %if.then21, !dbg !5408

if.then21:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value_address.0, metadata !5355, metadata !DIExpression()), !dbg !5409
  %7 = bitcast %union.tree_node** %result to %struct.tree_decl_common**, !dbg !5410
  %8 = load %struct.tree_decl_common*, %struct.tree_decl_common** %7, align 8, !dbg !5410
  %decl_by_reference_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %8, i64 0, i32 2, !dbg !5410
  %9 = bitcast i40* %decl_by_reference_flag to i64*, !dbg !5410
  %bf.load24 = load i64, i64* %9, align 8, !dbg !5410
  %bf.cast4 = and i64 %bf.load24, 268435456, !dbg !5410
  %tobool27 = icmp eq i64 %bf.cast4, 0, !dbg !5410
  %10 = bitcast %struct.tree_decl_common* %8 to %union.tree_node*, !dbg !5412
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !5412

if.then28:                                        ; preds = %if.then21
  %11 = trunc i64 %bf.load24 to i32, !dbg !5413
  %bf.cast34 = and i32 %11, 255, !dbg !5413
  %call35 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast34, %struct.rtx_def* nonnull %value_address.0) #6, !dbg !5415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !5355, metadata !DIExpression()), !dbg !5409
  %12 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5416
  tail call void @set_mem_attributes(%struct.rtx_def* %call35, %union.tree_node* %12, i32 1) #6, !dbg !5417
  %.pre = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5418
  br label %if.end38, !dbg !5419

if.end38:                                         ; preds = %if.then21, %if.then28
  %13 = phi %union.tree_node* [ %10, %if.then21 ], [ %.pre, %if.then28 ], !dbg !5418
  %x.0 = phi %struct.rtx_def* [ %value_address.0, %if.then21 ], [ %call35, %if.then28 ], !dbg !5409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5355, metadata !DIExpression()), !dbg !5409
  tail call void @set_decl_rtl(%union.tree_node* %13, %struct.rtx_def* %x.0) #6, !dbg !5418
  br label %if.end128, !dbg !5420

if.else:                                          ; preds = %land.end10
  %14 = bitcast %union.tree_node** %result to %struct.tree_decl_common**, !dbg !5421
  %15 = load %struct.tree_decl_common*, %struct.tree_decl_common** %14, align 8, !dbg !5421
  %mode45 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 2, !dbg !5421
  %16 = bitcast i40* %mode45 to i64*, !dbg !5421
  %bf.load46 = load i64, i64* %16, align 8, !dbg !5421
  %bf.cast481 = and i64 %bf.load46, 255, !dbg !5422
  %cmp49 = icmp eq i64 %bf.cast481, 0, !dbg !5422
  br i1 %cmp49, label %if.then51, label %if.else54, !dbg !5423

if.then51:                                        ; preds = %if.else
  %17 = bitcast %struct.tree_decl_common* %15 to %union.tree_node*, !dbg !5424
  tail call void @set_decl_rtl(%union.tree_node* %17, %struct.rtx_def* null) #6, !dbg !5425
  br label %if.end128, !dbg !5425

if.else54:                                        ; preds = %if.else
  %18 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 0, i32 0, i32 2, !dbg !5426
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !5426
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5358, metadata !DIExpression()), !dbg !5427
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5428
  %bf.load59 = load i64, i64* %20, align 8, !dbg !5428
  %bf.cast612 = and i64 %bf.load59, 65535, !dbg !5428
  %cmp62 = icmp eq i64 %bf.cast612, 14, !dbg !5428
  br i1 %cmp62, label %cond.true, label %cond.false, !dbg !5428

cond.true:                                        ; preds = %if.else54
  %call64 = tail call i32 @vector_type_mode(%union.tree_node* %19) #6, !dbg !5428
  br label %cond.end, !dbg !5428

cond.false:                                       ; preds = %if.else54
  %type65 = bitcast %union.tree_node* %19 to %struct.tree_type*, !dbg !5428
  %mode66 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type65, i64 0, i32 6, !dbg !5428
  %bf.load67 = load i32, i32* %mode66, align 4, !dbg !5428
  %bf.lshr68 = lshr i32 %bf.load67, 16, !dbg !5428
  %bf.clear69 = and i32 %bf.lshr68, 255, !dbg !5428
  br label %cond.end, !dbg !5428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call64, %cond.true ], [ %bf.clear69, %cond.false ], !dbg !5428
  %cmp70 = icmp eq i32 %cond, 1, !dbg !5429
  br i1 %cmp70, label %if.else95, label %land.lhs.true, !dbg !5430

land.lhs.true:                                    ; preds = %cond.end
  %21 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 4), align 8, !dbg !5431
  %call72 = tail call zeroext i8 %21(%union.tree_node* %19) #6, !dbg !5432
  %tobool74 = icmp eq i8 %call72, 0, !dbg !5432
  br i1 %tobool74, label %if.else95, label %if.then75, !dbg !5433

if.then75:                                        ; preds = %land.lhs.true
  %22 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5434
  %bf.load79 = load i64, i64* %20, align 8, !dbg !5434
  %bf.cast813 = and i64 %bf.load79, 65535, !dbg !5434
  %cmp82 = icmp eq i64 %bf.cast813, 14, !dbg !5434
  br i1 %cmp82, label %cond.true84, label %cond.false86, !dbg !5434

cond.true84:                                      ; preds = %if.then75
  %call85 = tail call i32 @vector_type_mode(%union.tree_node* %19) #6, !dbg !5434
  br label %cond.end92, !dbg !5434

cond.false86:                                     ; preds = %if.then75
  %type87 = bitcast %union.tree_node* %19 to %struct.tree_type*, !dbg !5434
  %mode88 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i64 0, i32 6, !dbg !5434
  %bf.load89 = load i32, i32* %mode88, align 4, !dbg !5434
  %bf.lshr90 = lshr i32 %bf.load89, 16, !dbg !5434
  %bf.clear91 = and i32 %bf.lshr90, 255, !dbg !5434
  br label %cond.end92, !dbg !5434

cond.end92:                                       ; preds = %cond.false86, %cond.true84
  %cond93 = phi i32 [ %call85, %cond.true84 ], [ %bf.clear91, %cond.false86 ], !dbg !5434
  %call94 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond93) #6, !dbg !5434
  tail call void @set_decl_rtl(%union.tree_node* %22, %struct.rtx_def* %call94) #6, !dbg !5434
  br label %if.end121, !dbg !5434

if.else95:                                        ; preds = %land.lhs.true, %cond.end
  %call96 = tail call %struct.rtx_def* @hard_function_value(%union.tree_node* %19, %union.tree_node* %subr, %union.tree_node* null, i32 1) #6, !dbg !5435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !5361, metadata !DIExpression()), !dbg !5436
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call96, i64 0, i32 0, !dbg !5437
  %bf.load97 = load i32, i32* %23, align 8, !dbg !5437
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !5437
  %cmp99 = icmp eq i32 %bf.clear98, 37, !dbg !5437
  br i1 %cmp99, label %if.then101, label %if.else108, !dbg !5439

if.then101:                                       ; preds = %if.else95
  %24 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5440
  %bf.lshr105 = lshr i32 %bf.load97, 16, !dbg !5440
  %bf.clear106 = and i32 %bf.lshr105, 255, !dbg !5440
  %call107 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear106) #6, !dbg !5440
  tail call void @set_decl_rtl(%union.tree_node* %24, %struct.rtx_def* %call107) #6, !dbg !5440
  br label %if.end121, !dbg !5440

if.else108:                                       ; preds = %if.else95
  %cmp111 = icmp eq i32 %bf.clear98, 15, !dbg !5441
  br i1 %cmp111, label %cond.end115, label %cond.true113, !dbg !5441

cond.true113:                                     ; preds = %if.else108
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4454, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5441
  br label %cond.end115, !dbg !5441

cond.end115:                                      ; preds = %if.else108, %cond.true113
  %25 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5443
  %call119 = tail call %struct.rtx_def* @gen_group_rtx(%struct.rtx_def* %call96) #6, !dbg !5443
  tail call void @set_decl_rtl(%union.tree_node* %25, %struct.rtx_def* %call119) #6, !dbg !5443
  br label %if.end121

if.end121:                                        ; preds = %if.then101, %cond.end115, %cond.end92
  %26 = load %struct.tree_decl_common*, %struct.tree_decl_common** %14, align 8, !dbg !5444
  %decl_flag_0 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %26, i64 0, i32 2, !dbg !5444
  %27 = bitcast i40* %decl_flag_0 to i64*, !dbg !5444
  %bf.load125 = load i64, i64* %27, align 8, !dbg !5445
  %bf.set = or i64 %bf.load125, 16777216, !dbg !5445
  store i64 %bf.set, i64* %27, align 8, !dbg !5445
  br label %if.end128

if.end128:                                        ; preds = %if.end, %if.then51, %if.end121, %if.end38
  tail call fastcc void @assign_parms(%union.tree_node* %subr) #7, !dbg !5446
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5447
  %static_chain_decl = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 7, !dbg !5448
  %29 = load %union.tree_node*, %union.tree_node** %static_chain_decl, align 8, !dbg !5448
  %tobool129 = icmp eq %union.tree_node* %29, null, !dbg !5447
  br i1 %tobool129, label %if.end150, label %if.then130, !dbg !5449

if.then130:                                       ; preds = %if.end128
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5364, metadata !DIExpression()), !dbg !5450
  %call132 = tail call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !5451
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call132, metadata !5367, metadata !DIExpression()), !dbg !5450
  %30 = load %struct.rtx_def* (%union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 21), align 8, !dbg !5452
  %31 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5453
  %call133 = tail call %struct.rtx_def* %30(%union.tree_node* %31, i8 zeroext 1) #6, !dbg !5454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !5368, metadata !DIExpression()), !dbg !5450
  tail call void @set_decl_incoming_rtl(%union.tree_node* nonnull %29, %struct.rtx_def* %call133, i8 zeroext 0) #6, !dbg !5455
  tail call void @set_decl_rtl(%union.tree_node* nonnull %29, %struct.rtx_def* %call132) #6, !dbg !5456
  %type135 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5457
  %32 = bitcast %union.tree_node** %type135 to %struct.tree_common**, !dbg !5457
  %33 = load %struct.tree_common*, %struct.tree_common** %32, align 8, !dbg !5457
  %type137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i64 0, i32 2, !dbg !5457
  %34 = bitcast %union.tree_node** %type137 to %struct.tree_type**, !dbg !5457
  %35 = load %struct.tree_type*, %struct.tree_type** %34, align 8, !dbg !5457
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %35, i64 0, i32 7, !dbg !5457
  %36 = load i32, i32* %align, align 8, !dbg !5457
  tail call void @mark_reg_pointer(%struct.rtx_def* %call132, i32 %36) #6, !dbg !5458
  %call139 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call132, %struct.rtx_def* %call133) #6, !dbg !5459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call139, metadata !5369, metadata !DIExpression()), !dbg !5450
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call133, i64 0, i32 0, !dbg !5460
  %bf.load140 = load i32, i32* %37, align 8, !dbg !5460
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !5460
  %cmp142 = icmp eq i32 %bf.clear141, 43, !dbg !5460
  br i1 %cmp142, label %land.lhs.true144, label %if.end150, !dbg !5462

land.lhs.true144:                                 ; preds = %if.then130
  %38 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5463
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call133, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5464
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5464
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5464
  %call145 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %38, %struct.rtx_def* %39) #6, !dbg !5465
  %tobool146 = icmp eq i32 %call145, 0, !dbg !5465
  br i1 %tobool146, label %if.end150, label %if.then147, !dbg !5466

if.then147:                                       ; preds = %land.lhs.true144
  %call148 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call139, i32 3, %struct.rtx_def* %call133) #6, !dbg !5467
  br label %if.end150, !dbg !5467

if.end150:                                        ; preds = %land.lhs.true144, %if.end128, %if.then130, %if.then147
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5468
  %nonlocal_goto_save_area = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 8, !dbg !5469
  %41 = load %union.tree_node*, %union.tree_node** %nonlocal_goto_save_area, align 8, !dbg !5469
  %tobool151 = icmp eq %union.tree_node* %41, null, !dbg !5468
  br i1 %tobool151, label %if.end174, label %if.then152, !dbg !5470

if.then152:                                       ; preds = %if.end150
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5471
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8, !dbg !5471
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !5374, metadata !DIExpression()), !dbg !5472
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5473
  %bf.load156 = load i64, i64* %44, align 8, !dbg !5473
  %bf.cast158 = and i64 %bf.load156, 65535, !dbg !5473
  %arrayidx160 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast158, i64 11, !dbg !5473
  %45 = load i8, i8* %arrayidx160, align 1, !dbg !5473
  %tobool162 = icmp eq i8 %45, 0, !dbg !5473
  br i1 %tobool162, label %if.then166, label %land.lhs.true163, !dbg !5473

land.lhs.true163:                                 ; preds = %if.then152
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5473
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5473
  %cmp164 = icmp eq %struct.rtx_def* %46, null, !dbg !5473
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !5475

if.then166:                                       ; preds = %land.lhs.true163, %if.then152
  tail call void @expand_decl(%union.tree_node* %43) #6, !dbg !5476
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5477
  %nonlocal_goto_save_area168.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 8, !dbg !5472
  %.pre6 = load %union.tree_node*, %union.tree_node** %nonlocal_goto_save_area168.phi.trans.insert, align 8, !dbg !5477
  br label %if.end167, !dbg !5476

if.end167:                                        ; preds = %land.lhs.true163, %if.then166
  %47 = phi %union.tree_node* [ %41, %land.lhs.true163 ], [ %.pre6, %if.then166 ], !dbg !5477
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5477
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5477
  %call169 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %48, %union.tree_node* %47, %union.tree_node* %49, %union.tree_node* null, %union.tree_node* null) #6, !dbg !5477
  call void @llvm.dbg.value(metadata %union.tree_node* %call169, metadata !5370, metadata !DIExpression()), !dbg !5472
  %call170 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call169, %struct.rtx_def* null, i32 0, i32 5) #7, !dbg !5478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call170, metadata !5373, metadata !DIExpression()), !dbg !5472
  %call171 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call170, i8 zeroext 0) #6, !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call171, metadata !5373, metadata !DIExpression()), !dbg !5472
  %50 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 78), align 8, !dbg !5480
  %call172 = tail call %struct.rtx_def* %50() #6, !dbg !5481
  %call173 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call171, %struct.rtx_def* %call172) #6, !dbg !5482
  tail call void @update_nonlocal_goto_save_area() #6, !dbg !5483
  br label %if.end174, !dbg !5484

if.end174:                                        ; preds = %if.end150, %if.end167
  %call175 = tail call %struct.rtx_def* @emit_note(i32 4) #6, !dbg !5485
  %call176 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5486
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call176, i64 0, i32 0, !dbg !5486
  %bf.load177 = load i32, i32* %51, align 8, !dbg !5486
  %bf.clear178 = and i32 %bf.load177, 65535, !dbg !5486
  %cmp179 = icmp eq i32 %bf.clear178, 13, !dbg !5486
  br i1 %cmp179, label %cond.end183, label %cond.true181, !dbg !5486

cond.true181:                                     ; preds = %if.end174
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5486
  br label %cond.end183, !dbg !5486

cond.end183:                                      ; preds = %if.end174, %cond.true181
  %call185 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5487
  store %struct.rtx_def* %call185, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 18), align 8, !dbg !5488
  %52 = load i32, i32* @flag_stack_check, align 4, !dbg !5489
  %tobool189 = icmp eq i32 %52, 0, !dbg !5489
  br i1 %tobool189, label %if.end192, label %if.then190, !dbg !5491

if.then190:                                       ; preds = %cond.end183
  %call191 = tail call %struct.rtx_def* @emit_note(i32 0) #6, !dbg !5492
  store %struct.rtx_def* %call191, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 14), align 8, !dbg !5493
  br label %if.end192, !dbg !5494

if.end192:                                        ; preds = %cond.end183, %if.then190
  tail call void @force_next_line_note() #6, !dbg !5495
  ret void, !dbg !5496
}

declare dso_local void @init_recog_no_volatile() local_unnamed_addr #1

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_group_rtx(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parms(%union.tree_node* %fndecl) unnamed_addr #4 !dbg !5497 {
entry:
  %all = alloca %struct.assign_parm_data_all, align 8
  %parm = alloca %union.tree_node*, align 8
  %fnargs = alloca %struct.VEC_tree_heap*, align 8
  %data = alloca %struct.assign_parm_data_one, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5499, metadata !DIExpression()), !dbg !5532
  %0 = bitcast %struct.assign_parm_data_all* %all to i8*, !dbg !5533
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %0) #8, !dbg !5533
  %1 = bitcast %union.tree_node** %parm to i8*, !dbg !5534
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5534
  %2 = bitcast %struct.VEC_tree_heap** %fnargs to i8*, !dbg !5535
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5535
  %3 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 17), align 8, !dbg !5536
  %call = tail call %struct.rtx_def* %3() #6, !dbg !5537
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !5538
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call fastcc void @assign_parms_initialize_all(%struct.assign_parm_data_all* nonnull %all) #7, !dbg !5539
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  %call1 = call fastcc %struct.VEC_tree_heap* @assign_parms_augmented_arg_list(%struct.assign_parm_data_all* nonnull %all) #7, !dbg !5540
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !5502, metadata !DIExpression()), !dbg !5532
  store %struct.VEC_tree_heap* %call1, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !5541
  call void @llvm.dbg.value(metadata i32 0, metadata !5503, metadata !DIExpression()), !dbg !5532
  %4 = bitcast %struct.assign_parm_data_one* %data to i8*, !dbg !5542
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !5543
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !5545
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !5545
  %5 = bitcast %struct.assign_parm_data_one* %data to %struct.tree_type**, !dbg !5546
  %6 = bitcast %union.tree_node** %parm to %struct.tree_common**, !dbg !5548
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !5542
  %passed_pointer = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !5542
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !5542
  %7 = bitcast %union.tree_node** %parm to %struct.tree_decl_with_rtl**, !dbg !5550
  br label %for.cond, !dbg !5552

for.cond:                                         ; preds = %cleanup, %entry
  %8 = phi %struct.VEC_tree_heap* [ %call1, %entry ], [ %.pre, %cleanup ], !dbg !5553
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !5554
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5503, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !5502, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !5502, metadata !DIExpression()), !dbg !5532
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !5553
  call void @llvm.dbg.value(metadata %union.tree_node** %parm, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  %call2 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %parm) #7, !dbg !5553
  %tobool3 = icmp eq i32 %call2, 0, !dbg !5555
  br i1 %tobool3, label %for.end, label %for.body, !dbg !5555

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #8, !dbg !5556
  %9 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5557
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_find_data_types(%struct.assign_parm_data_all* nonnull %all, %union.tree_node* %9, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5558
  %10 = load i32, i32* %passed_mode, align 4, !dbg !5559
  %cmp = icmp eq i32 %10, 0, !dbg !5560
  br i1 %cmp, label %if.then, label %if.end, !dbg !5561

if.then:                                          ; preds = %for.body
  %11 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5562
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5501, metadata !DIExpression()), !dbg !5532
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5562
  call void @set_decl_rtl(%union.tree_node* %11, %struct.rtx_def* %12) #6, !dbg !5562
  %13 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %7, align 8, !dbg !5563
  %rtl = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %13, i64 0, i32 1, !dbg !5563
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5563
  %tobool4 = icmp eq %struct.rtx_def* %14, null, !dbg !5563
  call void @llvm.dbg.value(metadata %struct.tree_decl_with_rtl* %13, metadata !5501, metadata !DIExpression()), !dbg !5532
  br i1 %tobool4, label %cond.false8, label %cond.true5, !dbg !5563

cond.true5:                                       ; preds = %if.then
  br label %cond.end11, !dbg !5563

cond.false8:                                      ; preds = %if.then
  %.cast12 = bitcast %struct.tree_decl_with_rtl* %13 to %union.tree_node*, !dbg !5563
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast12, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @make_decl_rtl(%union.tree_node* %.cast12) #6, !dbg !5563
  %15 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %7, align 8, !dbg !5563
  br label %cond.end11, !dbg !5563

cond.end11:                                       ; preds = %cond.false8, %cond.true5
  %.in = phi %struct.tree_decl_with_rtl* [ %13, %cond.true5 ], [ %15, %cond.false8 ]
  %.pn = phi %struct.tree_decl_with_rtl* [ %13, %cond.true5 ], [ %15, %cond.false8 ]
  %cond12.in = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %.pn, i64 0, i32 1, !dbg !5563
  %16 = bitcast %struct.rtx_def** %cond12.in to i64*, !dbg !5563
  %cond1213 = load i64, i64* %16, align 8, !dbg !5563
  %17 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %.in, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5564
  store i64 %cond1213, i64* %17, align 8, !dbg !5564
  br label %cleanup, !dbg !5565

if.end:                                           ; preds = %for.body
  %18 = load i32, i32* %promoted_mode, align 8, !dbg !5566
  %19 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !5566
  %call13 = call i32 @ix86_function_arg_boundary(i32 %18, %union.tree_node* %19) #6, !dbg !5566
  call void @llvm.dbg.value(metadata i32 %call13, metadata !5508, metadata !DIExpression()), !dbg !5545
  %20 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !5567
  %21 = load i32, i32* %promoted_mode, align 8, !dbg !5567
  %call16 = call i32 @ix86_minimum_alignment(%union.tree_node* %20, i32 %21, i32 %call13) #6, !dbg !5567
  call void @llvm.dbg.value(metadata i32 %call16, metadata !5508, metadata !DIExpression()), !dbg !5545
  %22 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !5568
  %align17 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 7, !dbg !5568
  %23 = load i32, i32* %align17, align 8, !dbg !5568
  %cmp18 = icmp ugt i32 %23, %call16, !dbg !5569
  %24 = bitcast %struct.tree_type* %22 to %union.tree_node*, !dbg !5570
  br i1 %cmp18, label %if.then19, label %if.end38, !dbg !5570

if.then19:                                        ; preds = %if.end
  %.cast10 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 0, i32 0, i32 0, !dbg !5571
  %bf.load = load i64, i64* %.cast10, align 8, !dbg !5571
  %bf.cast11 = and i64 %bf.load, 65535, !dbg !5571
  %cmp23 = icmp eq i64 %bf.cast11, 14, !dbg !5571
  br i1 %cmp23, label %cond.true24, label %cond.false27, !dbg !5571

cond.true24:                                      ; preds = %if.then19
  %call26 = call i32 @vector_type_mode(%union.tree_node* %24) #6, !dbg !5571
  %.pre15 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !5571
  %align36.phi.trans.insert = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.pre15, i64 0, i32 7, !dbg !5546
  %.pre16 = load i32, i32* %align36.phi.trans.insert, align 8, !dbg !5571
  br label %cond.end32, !dbg !5571

cond.false27:                                     ; preds = %if.then19
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 6, !dbg !5571
  %bf.load30 = load i32, i32* %mode, align 4, !dbg !5571
  %bf.lshr = lshr i32 %bf.load30, 16, !dbg !5571
  %bf.clear31 = and i32 %bf.lshr, 255, !dbg !5571
  br label %cond.end32, !dbg !5571

cond.end32:                                       ; preds = %cond.false27, %cond.true24
  %25 = phi i32 [ %.pre16, %cond.true24 ], [ %23, %cond.false27 ], !dbg !5571
  %cond33 = phi i32 [ %call26, %cond.true24 ], [ %bf.clear31, %cond.false27 ], !dbg !5571
  %call37 = call i32 @ix86_minimum_alignment(%union.tree_node* %24, i32 %cond33, i32 %25) #6, !dbg !5571
  call void @llvm.dbg.value(metadata i32 %call37, metadata !5508, metadata !DIExpression()), !dbg !5545
  br label %if.end38, !dbg !5572

if.end38:                                         ; preds = %cond.end32, %if.end
  %align.0 = phi i32 [ %call37, %cond.end32 ], [ %call16, %if.end ], !dbg !5545
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !5508, metadata !DIExpression()), !dbg !5545
  %26 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !5573
  %cmp39 = icmp ult i32 %26, %align.0, !dbg !5575
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !5576

if.then40:                                        ; preds = %if.end38
  %27 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !5577
  %tobool41 = icmp eq i8 %27, 0, !dbg !5577
  br i1 %tobool41, label %cond.end44, label %cond.true42, !dbg !5577

cond.true42:                                      ; preds = %if.then40
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3180, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5577
  br label %cond.end44, !dbg !5577

cond.end44:                                       ; preds = %if.then40, %cond.true42
  store i32 %align.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !5579
  br label %if.end46, !dbg !5580

if.end46:                                         ; preds = %cond.end44, %if.end38
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5581
  %stdarg = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 20, !dbg !5582
  %bf.load47 = load i32, i32* %stdarg, align 8, !dbg !5582
  %bf.clear49 = and i32 %bf.load47, 4194304, !dbg !5582
  %tobool50 = icmp eq i32 %bf.clear49, 0, !dbg !5581
  br i1 %tobool50, label %if.end53, label %land.lhs.true, !dbg !5583

land.lhs.true:                                    ; preds = %if.end46
  %29 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !5584
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i64 0, i32 1, !dbg !5584
  %30 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5584
  %tobool51 = icmp eq %union.tree_node* %30, null, !dbg !5584
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !5585

if.then52:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parms_setup_varargs(%struct.assign_parm_data_all* nonnull %all, %struct.assign_parm_data_one* nonnull %data, i8 zeroext 0) #7, !dbg !5586
  br label %if.end53, !dbg !5586

if.end53:                                         ; preds = %land.lhs.true, %if.end46, %if.then52
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_find_entry_rtl(%struct.assign_parm_data_all* nonnull %all, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5587
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  %call54 = call fastcc zeroext i8 @assign_parm_is_stack_parm(%struct.assign_parm_data_all* nonnull %all, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5588
  %tobool55 = icmp eq i8 %call54, 0, !dbg !5588
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !5590

if.then56:                                        ; preds = %if.end53
  %31 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5591
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_find_stack_rtl(%union.tree_node* %31, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5593
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_adjust_entry_rtl(%struct.assign_parm_data_one* nonnull %data) #7, !dbg !5594
  br label %if.end57, !dbg !5595

if.end57:                                         ; preds = %if.end53, %if.then56
  %32 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5596
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !5501, metadata !DIExpression()), !dbg !5532
  %33 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !5597
  %bf.load58 = load i8, i8* %passed_pointer, align 4, !dbg !5598
  %bf.lshr59 = lshr i8 %bf.load58, 1, !dbg !5598
  %bf.clear60 = and i8 %bf.lshr59, 1, !dbg !5598
  call void @set_decl_incoming_rtl(%union.tree_node* %32, %struct.rtx_def* %33, i8 zeroext %bf.clear60) #6, !dbg !5599
  %34 = load i32, i32* %promoted_mode, align 8, !dbg !5600
  %35 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !5600
  %bf.load64 = load i8, i8* %passed_pointer, align 4, !dbg !5600
  %bf.clear65 = and i8 %bf.load64, 1, !dbg !5600
  %bf.cast66 = zext i8 %bf.clear65 to i32, !dbg !5600
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 %34, %union.tree_node* %35, i32 %bf.cast66) #6, !dbg !5600
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_adjust_stack_rtl(%struct.assign_parm_data_one* nonnull %data) #7, !dbg !5601
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  %call67 = call fastcc zeroext i8 @assign_parm_setup_block_p(%struct.assign_parm_data_one* nonnull %data) #7, !dbg !5602
  %tobool68 = icmp eq i8 %call67, 0, !dbg !5602
  br i1 %tobool68, label %if.else, label %if.then69, !dbg !5604

if.then69:                                        ; preds = %if.end57
  %36 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5605
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_setup_block(%struct.assign_parm_data_all* nonnull %all, %union.tree_node* %36, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5606
  br label %cleanup, !dbg !5606

if.else:                                          ; preds = %if.end57
  %bf.load71 = load i8, i8* %passed_pointer, align 4, !dbg !5607
  %bf.clear73 = and i8 %bf.load71, 2, !dbg !5607
  %tobool75 = icmp eq i8 %bf.clear73, 0, !dbg !5609
  br i1 %tobool75, label %lor.lhs.false, label %if.then79, !dbg !5610

lor.lhs.false:                                    ; preds = %if.else
  %37 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5611
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !5501, metadata !DIExpression()), !dbg !5532
  %call76 = call zeroext i8 @use_register_for_decl(%union.tree_node* %37) #7, !dbg !5612
  %tobool78 = icmp eq i8 %call76, 0, !dbg !5612
  br i1 %tobool78, label %if.else80, label %if.then79, !dbg !5613

if.then79:                                        ; preds = %lor.lhs.false, %if.else
  %38 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5614
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_setup_reg(%struct.assign_parm_data_all* nonnull %all, %union.tree_node* %38, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5615
  br label %cleanup, !dbg !5615

if.else80:                                        ; preds = %lor.lhs.false
  %39 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5616
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !5501, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5542
  call fastcc void @assign_parm_setup_stack(%struct.assign_parm_data_all* nonnull %all, %union.tree_node* %39, %struct.assign_parm_data_one* nonnull %data) #7, !dbg !5617
  br label %cleanup

cleanup:                                          ; preds = %if.then69, %if.else80, %if.then79, %cond.end11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #8, !dbg !5618
  %inc = add i32 %i.0, 1, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5503, metadata !DIExpression()), !dbg !5532
  %.pre = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !5553
  br label %for.cond, !dbg !5620, !llvm.loop !5621

for.end:                                          ; preds = %for.cond
  %40 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !5623
  %tobool83 = icmp eq i8 (%union.tree_node*)* %40, null, !dbg !5625
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !5626

if.then84:                                        ; preds = %for.end
  %41 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %fnargs, align 8, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %41, metadata !5502, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !5500, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call fastcc void @assign_parms_unsplit_complex(%struct.assign_parm_data_all* nonnull %all, %struct.VEC_tree_heap* %41) #7, !dbg !5628
  br label %if.end85, !dbg !5628

if.end85:                                         ; preds = %for.end, %if.then84
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fnargs, metadata !5502, metadata !DIExpression(DW_OP_deref)), !dbg !5532
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %fnargs) #7, !dbg !5629
  %first_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !5630
  %42 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !5630
  %call86 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %42) #6, !dbg !5631
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 3, !dbg !5632
  %43 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5632
  %tobool87 = icmp eq %union.tree_node* %43, null, !dbg !5632
  br i1 %tobool87, label %if.end157, label %if.then88, !dbg !5633

if.then88:                                        ; preds = %if.end85
  %type93 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5634
  %44 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !5634
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !5511, metadata !DIExpression()), !dbg !5635
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5636
  %bf.load96 = load i64, i64* %45, align 8, !dbg !5636
  %bf.cast985 = and i64 %bf.load96, 65535, !dbg !5636
  %cmp99 = icmp eq i64 %bf.cast985, 14, !dbg !5636
  br i1 %cmp99, label %cond.true101, label %cond.false103, !dbg !5636

cond.true101:                                     ; preds = %if.then88
  %call102 = call i32 @vector_type_mode(%union.tree_node* %44) #6, !dbg !5636
  br label %cond.end109, !dbg !5636

cond.false103:                                    ; preds = %if.then88
  %type104 = bitcast %union.tree_node* %44 to %struct.tree_type*, !dbg !5636
  %mode105 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type104, i64 0, i32 6, !dbg !5636
  %bf.load106 = load i32, i32* %mode105, align 4, !dbg !5636
  %bf.lshr107 = lshr i32 %bf.load106, 16, !dbg !5636
  %bf.clear108 = and i32 %bf.lshr107, 255, !dbg !5636
  br label %cond.end109, !dbg !5636

cond.end109:                                      ; preds = %cond.false103, %cond.true101
  %cond110 = phi i32 [ %call102, %cond.true101 ], [ %bf.clear108, %cond.false103 ], !dbg !5636
  call void @llvm.dbg.value(metadata i32 %cond110, metadata !5516, metadata !DIExpression()), !dbg !5635
  %switch1 = icmp ult i32 %cond110, 2, !dbg !5637
  br i1 %switch1, label %if.end157, label %land.lhs.true116, !dbg !5637

land.lhs.true116:                                 ; preds = %cond.end109
  %bf.load118 = load i64, i64* %45, align 8, !dbg !5638
  %bf.cast1206 = and i64 %bf.load118, 65535, !dbg !5638
  %cmp121 = icmp eq i64 %bf.cast1206, 15, !dbg !5638
  br i1 %cmp121, label %if.end157, label %lor.lhs.false123, !dbg !5638

lor.lhs.false123:                                 ; preds = %land.lhs.true116
  %cmp128 = icmp eq i64 %bf.cast1206, 16, !dbg !5638
  br i1 %cmp128, label %if.end157, label %lor.lhs.false130, !dbg !5638

lor.lhs.false130:                                 ; preds = %lor.lhs.false123
  %cmp135 = icmp eq i64 %bf.cast1206, 17, !dbg !5638
  br i1 %cmp135, label %if.end157, label %lor.lhs.false137, !dbg !5638

lor.lhs.false137:                                 ; preds = %lor.lhs.false130
  %cmp142 = icmp eq i64 %bf.cast1206, 18, !dbg !5638
  br i1 %cmp142, label %if.end157, label %if.then144, !dbg !5639

if.then144:                                       ; preds = %lor.lhs.false137
  %call146 = call i32 @get_mode_alignment(i32 %cond110) #6, !dbg !5640
  call void @llvm.dbg.value(metadata i32 %call146, metadata !5517, metadata !DIExpression()), !dbg !5641
  %46 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !5642
  %cmp147 = icmp ult i32 %46, %call146, !dbg !5644
  br i1 %cmp147, label %if.then149, label %if.end157, !dbg !5645

if.then149:                                       ; preds = %if.then144
  %47 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !5646
  %tobool150 = icmp eq i8 %47, 0, !dbg !5646
  br i1 %tobool150, label %cond.end153, label %cond.true151, !dbg !5646

cond.true151:                                     ; preds = %if.then149
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3239, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5646
  br label %cond.end153, !dbg !5646

cond.end153:                                      ; preds = %if.then149, %cond.true151
  store i32 %call146, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !5648
  br label %if.end157, !dbg !5649

if.end157:                                        ; preds = %if.end85, %cond.end109, %land.lhs.true116, %lor.lhs.false123, %lor.lhs.false130, %lor.lhs.false137, %cond.end153, %if.then144
  %function_result_decl = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 2, !dbg !5650
  %48 = load %union.tree_node*, %union.tree_node** %function_result_decl, align 8, !dbg !5650
  %tobool158 = icmp eq %union.tree_node* %48, null, !dbg !5651
  br i1 %tobool158, label %if.end193, label %if.then159, !dbg !5652

if.then159:                                       ; preds = %if.end157
  %49 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !5653
  %result162 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %49, i64 0, i32 3, !dbg !5653
  %50 = load %union.tree_node*, %union.tree_node** %result162, align 8, !dbg !5653
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !5520, metadata !DIExpression()), !dbg !5654
  %rtl165 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5655
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtl165, align 8, !dbg !5655
  %tobool166 = icmp eq %struct.rtx_def* %51, null, !dbg !5655
  br i1 %tobool166, label %cond.false171, label %cond.true167, !dbg !5655

cond.true167:                                     ; preds = %if.then159
  br label %cond.end176, !dbg !5655

cond.false171:                                    ; preds = %if.then159
  %52 = bitcast %union.tree_node** %function_result_decl to %struct.tree_decl_with_rtl**, !dbg !5655
  call void @make_decl_rtl(%union.tree_node* nonnull %48) #6, !dbg !5655
  %53 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %52, align 8, !dbg !5655
  %cond177.in.phi.trans.insert = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %53, i64 0, i32 1, !dbg !5654
  %cond177.pre = load %struct.rtx_def*, %struct.rtx_def** %cond177.in.phi.trans.insert, align 8, !dbg !5655
  br label %cond.end176, !dbg !5655

cond.end176:                                      ; preds = %cond.false171, %cond.true167
  %cond177 = phi %struct.rtx_def* [ %51, %cond.true167 ], [ %cond177.pre, %cond.false171 ], !dbg !5655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond177, metadata !5523, metadata !DIExpression()), !dbg !5654
  %decl_by_reference_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5656
  %54 = bitcast i40* %decl_by_reference_flag to i64*, !dbg !5656
  %bf.load178 = load i64, i64* %54, align 8, !dbg !5656
  %bf.cast1814 = and i64 %bf.load178, 268435456, !dbg !5656
  %tobool182 = icmp eq i64 %bf.cast1814, 0, !dbg !5656
  br i1 %tobool182, label %if.else184, label %if.end192, !dbg !5658

if.else184:                                       ; preds = %cond.end176
  %call185 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %cond177, i8 zeroext 0) #6, !dbg !5659
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call185, metadata !5523, metadata !DIExpression()), !dbg !5654
  %bf.load188 = load i64, i64* %54, align 8, !dbg !5661
  %55 = trunc i64 %bf.load188 to i32, !dbg !5661
  %bf.cast190 = and i32 %55, 255, !dbg !5661
  %call191 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast190, %struct.rtx_def* %call185) #6, !dbg !5662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call191, metadata !5524, metadata !DIExpression()), !dbg !5654
  call void @set_mem_attributes(%struct.rtx_def* %call191, %union.tree_node* %50, i32 1) #6, !dbg !5663
  br label %if.end192

if.end192:                                        ; preds = %cond.end176, %if.else184
  %x.0 = phi %struct.rtx_def* [ %call191, %if.else184 ], [ %cond177, %cond.end176 ], !dbg !5664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5524, metadata !DIExpression()), !dbg !5654
  call void @set_decl_rtl(%union.tree_node* %50, %struct.rtx_def* %x.0) #6, !dbg !5665
  br label %if.end193, !dbg !5666

if.end193:                                        ; preds = %if.end157, %if.end192
  %pretend_args_size = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 6, !dbg !5667
  %56 = load i64, i64* %pretend_args_size, align 8, !dbg !5667
  %conv194 = trunc i64 %56 to i32, !dbg !5668
  store i32 %conv194, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 2), align 8, !dbg !5669
  %extra_pretend_bytes = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 7, !dbg !5670
  %57 = load i64, i64* %extra_pretend_bytes, align 8, !dbg !5670
  %constant = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 1, i32 0, !dbg !5671
  %58 = load i64, i64* %constant, align 8, !dbg !5672
  %add = add nsw i64 %58, %57, !dbg !5672
  store i64 %add, i64* %constant, align 8, !dbg !5672
  %conv197 = trunc i64 %add to i32, !dbg !5673
  store i32 %conv197, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !5674
  %call198 = call i32 @ix86_reg_parm_stack_space(%union.tree_node* %fndecl) #6, !dbg !5675
  %cmp199 = icmp slt i32 %call198, %conv197, !dbg !5675
  br i1 %cmp199, label %cond.true201, label %cond.false202, !dbg !5675

cond.true201:                                     ; preds = %if.end193
  %59 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !5675
  br label %cond.end204, !dbg !5675

cond.false202:                                    ; preds = %if.end193
  %call203 = call i32 @ix86_reg_parm_stack_space(%union.tree_node* %fndecl) #6, !dbg !5675
  br label %cond.end204, !dbg !5675

cond.end204:                                      ; preds = %cond.false202, %cond.true201
  %cond205 = phi i32 [ %59, %cond.true201 ], [ %call203, %cond.false202 ], !dbg !5675
  %sub = add nsw i32 %cond205, 3, !dbg !5676
  %and = and i32 %sub, -4, !dbg !5676
  store i32 %and, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !5677
  %var = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 1, i32 1, !dbg !5678
  %60 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !5678
  %cmp208 = icmp eq %union.tree_node* %60, null, !dbg !5678
  br i1 %cmp208, label %cond.true210, label %cond.false214, !dbg !5678

cond.true210:                                     ; preds = %cond.end204
  %61 = load i64, i64* %constant, align 8, !dbg !5678
  %call213 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %61) #6, !dbg !5678
  br label %cond.end234, !dbg !5678

cond.false214:                                    ; preds = %cond.end204
  br i1 false, label %cond.true219, label %cond.false223, !dbg !5678

cond.true219:                                     ; preds = %cond.false214
  br label %cond.end231, !dbg !5678

cond.false223:                                    ; preds = %cond.false214
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5678
  %call226 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %62, %union.tree_node* nonnull %60) #6, !dbg !5678
  %63 = load i64, i64* %constant, align 8, !dbg !5678
  %call229 = call %union.tree_node* @size_int_kind(i64 %63, i32 1) #6, !dbg !5678
  %call230 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call226, %union.tree_node* %call229) #6, !dbg !5678
  br label %cond.end231, !dbg !5678

cond.end231:                                      ; preds = %cond.false223, %cond.true219
  %cond232 = phi %union.tree_node* [ undef, %cond.true219 ], [ %call230, %cond.false223 ], !dbg !5678
  %call233 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond232) #7, !dbg !5678
  br label %cond.end234, !dbg !5678

cond.end234:                                      ; preds = %cond.end231, %cond.true210
  %cond235 = phi %struct.rtx_def* [ %call213, %cond.true210 ], [ %call233, %cond.end231 ], !dbg !5678
  store %struct.rtx_def* %cond235, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 3), align 8, !dbg !5679
  %type237 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5680
  %64 = load %union.tree_node*, %union.tree_node** %type237, align 8, !dbg !5680
  %65 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !5680
  %call238 = call i32 @ix86_return_pops_args(%union.tree_node* %fndecl, %union.tree_node* %64, i32 %65) #6, !dbg !5680
  store i32 %call238, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 0), align 8, !dbg !5681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.ix86_args* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 4) to i8*), i8* nonnull align 8 %0, i64 64, i1 false), !dbg !5682
  %66 = bitcast %union.tree_node** %result to i64**, !dbg !5683
  %67 = load i64*, i64** %66, align 8, !dbg !5683
  %bf.load243 = load i64, i64* %67, align 8, !dbg !5683
  %bf.cast245 = and i64 %bf.load243, 65535, !dbg !5683
  %arrayidx246 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast245, i64 11, !dbg !5683
  %68 = load i8, i8* %arrayidx246, align 1, !dbg !5683
  %tobool248 = icmp eq i8 %68, 0, !dbg !5683
  br i1 %tobool248, label %cond.end277, label %land.lhs.true249, !dbg !5683

land.lhs.true249:                                 ; preds = %cond.end234
  %rtl253 = getelementptr inbounds i64, i64* %67, i64 14, !dbg !5683
  %69 = bitcast i64* %rtl253 to %struct.rtx_def**, !dbg !5683
  %70 = load %struct.rtx_def*, %struct.rtx_def** %69, align 8, !dbg !5683
  %cmp254 = icmp eq %struct.rtx_def* %70, null, !dbg !5683
  br i1 %cmp254, label %cond.end277, label %cond.true256, !dbg !5683

cond.true256:                                     ; preds = %land.lhs.true249
  br i1 false, label %cond.false267, label %cond.true262, !dbg !5684

cond.true262:                                     ; preds = %cond.true256
  br label %cond.end277, !dbg !5684

cond.false267:                                    ; preds = %cond.true256
  br label %cond.end277, !dbg !5684

cond.end277:                                      ; preds = %land.lhs.true249, %cond.end234, %cond.true262, %cond.false267
  %cond278 = phi %struct.rtx_def* [ %70, %cond.true262 ], [ undef, %cond.false267 ], [ null, %land.lhs.true249 ], [ null, %cond.end234 ], !dbg !5683
  store %struct.rtx_def* %cond278, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 7), align 8, !dbg !5685
  %71 = load i64*, i64** %66, align 8, !dbg !5686
  %bf.load282 = load i64, i64* %71, align 8, !dbg !5686
  %bf.cast284 = and i64 %bf.load282, 65535, !dbg !5686
  %arrayidx287 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast284, i64 11, !dbg !5686
  %72 = load i8, i8* %arrayidx287, align 1, !dbg !5686
  %tobool289 = icmp eq i8 %72, 0, !dbg !5686
  br i1 %tobool289, label %if.end333, label %land.lhs.true290, !dbg !5686

land.lhs.true290:                                 ; preds = %cond.end277
  %rtl294 = getelementptr inbounds i64, i64* %71, i64 14, !dbg !5686
  %73 = bitcast i64* %rtl294 to %struct.rtx_def**, !dbg !5686
  %74 = load %struct.rtx_def*, %struct.rtx_def** %73, align 8, !dbg !5686
  %cmp295 = icmp eq %struct.rtx_def* %74, null, !dbg !5686
  br i1 %cmp295, label %if.end333, label %if.then297, !dbg !5687

if.then297:                                       ; preds = %land.lhs.true290
  call void @llvm.dbg.value(metadata i64* %71, metadata !5525, metadata !DIExpression()), !dbg !5688
  br i1 false, label %cond.false306, label %cond.true303, !dbg !5689

cond.true303:                                     ; preds = %if.then297
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i64 0, i32 0, !dbg !5690
  %bf.load311.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5691
  %phitmp = and i32 %bf.load311.pre, 65535, !dbg !5689
  %phitmp20 = icmp eq i32 %phitmp, 37, !dbg !5689
  br label %cond.end309, !dbg !5689

cond.false306:                                    ; preds = %if.then297
  br label %cond.end309, !dbg !5689

cond.end309:                                      ; preds = %cond.false306, %cond.true303
  %bf.load311 = phi i1 [ false, %cond.false306 ], [ %phitmp20, %cond.true303 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !5528, metadata !DIExpression()), !dbg !5688
  br i1 %bf.load311, label %cond.true315, label %cond.false319, !dbg !5692

cond.true315:                                     ; preds = %cond.end309
  %call316 = call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %74) #7, !dbg !5693
  %cmp317 = icmp ugt i32 %call316, 52, !dbg !5694
  br i1 %cmp317, label %if.then326, label %if.end333, !dbg !5691

cond.false319:                                    ; preds = %cond.end309
  %decl_flag_0 = getelementptr inbounds i64, i64* %71, i64 7, !dbg !5695
  %bf.load321 = load i64, i64* %decl_flag_0, align 8, !dbg !5695
  %bf.cast3242 = and i64 %bf.load321, 16777216, !dbg !5695
  %tobool325 = icmp eq i64 %bf.cast3242, 0, !dbg !5695
  br i1 %tobool325, label %if.end333, label %if.then326, !dbg !5692

if.then326:                                       ; preds = %cond.false319, %cond.true315
  %75 = load %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 15), align 8, !dbg !5696
  %type328 = getelementptr inbounds i64, i64* %71, i64 2, !dbg !5697
  %76 = bitcast i64* %type328 to %union.tree_node**, !dbg !5697
  %77 = load %union.tree_node*, %union.tree_node** %76, align 8, !dbg !5697
  %call329 = call %struct.rtx_def* %75(%union.tree_node* %77, %union.tree_node* %fndecl, i8 zeroext 1) #6, !dbg !5698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call329, metadata !5529, metadata !DIExpression()), !dbg !5699
  %78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call329, i64 0, i32 0, !dbg !5700
  %bf.load330 = load i32, i32* %78, align 8, !dbg !5701
  %bf.set = or i32 %bf.load330, -2147483648, !dbg !5701
  store i32 %bf.set, i32* %78, align 8, !dbg !5701
  store %struct.rtx_def* %call329, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 7), align 8, !dbg !5702
  br label %if.end333, !dbg !5703

if.end333:                                        ; preds = %cond.false319, %land.lhs.true290, %cond.end277, %cond.true315, %if.then326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5704
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5704
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %0) #8, !dbg !5704
  ret void, !dbg !5704
}

declare dso_local void @set_decl_incoming_rtl(%union.tree_node*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @mark_reg_pointer(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @expand_decl(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !5705 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5709, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5710, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata i32 0, metadata !5711, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata i32 5, metadata !5712, metadata !DIExpression()), !dbg !5713
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 5, %struct.rtx_def** null) #6, !dbg !5714
  ret %struct.rtx_def* %call, !dbg !5715
}

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @update_nonlocal_goto_save_area() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_note(i32) local_unnamed_addr #1

declare dso_local void @force_next_line_note() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @expand_dummy_function_end() local_unnamed_addr #4 !dbg !5716 {
entry:
  %.b = load i1, i1* @in_dummy_function, align 1, !dbg !5717
  br i1 %.b, label %cond.end, label %cond.true, !dbg !5717

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5717
  br label %cond.end, !dbg !5717

cond.end:                                         ; preds = %entry, %cond.true
  br label %while.cond, !dbg !5718

while.cond:                                       ; preds = %while.body, %cond.end
  %call = tail call i32 @in_sequence_p() #6, !dbg !5719
  %tobool1 = icmp eq i32 %call, 0, !dbg !5718
  br i1 %tobool1, label %while.end, label %while.body, !dbg !5718

while.body:                                       ; preds = %while.cond
  tail call void @end_sequence() #6, !dbg !5720
  br label %while.cond, !dbg !5718, !llvm.loop !5721

while.end:                                        ; preds = %while.cond
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5723
  tail call void @free_after_parsing(%struct.function* %0) #7, !dbg !5724
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5725
  tail call void @free_after_compilation(%struct.function* %1) #7, !dbg !5726
  tail call void @pop_cfun() #7, !dbg !5727
  store i1 false, i1* @in_dummy_function, align 1, !dbg !5728
  ret void, !dbg !5729
}

declare dso_local i32 @in_sequence_p() local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @diddle_return_value(void (%struct.rtx_def*, i8*)* %doit, i8* %arg) local_unnamed_addr #4 !dbg !5730 {
entry:
  call void @llvm.dbg.value(metadata void (%struct.rtx_def*, i8*)* %doit, metadata !5737, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.value(metadata i8* %arg, metadata !5738, metadata !DIExpression()), !dbg !5748
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 7), align 8, !dbg !5749
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5739, metadata !DIExpression()), !dbg !5748
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5750
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !5752

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5753
  %bf.load = load i32, i32* %1, align 8, !dbg !5753
  %bf.clear = and i32 %bf.load, 65535, !dbg !5753
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5753
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5754

if.then1:                                         ; preds = %if.end
  tail call void %doit(%struct.rtx_def* nonnull %0, i8* %arg) #6, !dbg !5755
  br label %cleanup.cont, !dbg !5755

if.else:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %bf.clear, 15, !dbg !5756
  br i1 %cmp4, label %for.cond.preheader, label %cleanup.cont, !dbg !5757

for.cond.preheader:                               ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5758
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !5758
  br label %for.cond, !dbg !5759

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5760
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5740, metadata !DIExpression()), !dbg !5761
  %2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5762
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 0, !dbg !5762
  %3 = load i32, i32* %num_elem, align 8, !dbg !5762
  %4 = sext i32 %3 to i64, !dbg !5763
  %cmp6 = icmp slt i64 %indvars.iv, %4, !dbg !5763
  br i1 %cmp6, label %for.body, label %cleanup.cont.loopexit, !dbg !5759

for.body:                                         ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 1, i64 %indvars.iv, !dbg !5764
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx11, align 8, !dbg !5764
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5764
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !5764
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5764
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5744, metadata !DIExpression()), !dbg !5765
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !5766
  %bf.load15 = load i32, i32* %7, align 8, !dbg !5766
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !5766
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !5766
  br i1 %cmp17, label %land.lhs.true, label %for.inc, !dbg !5768

land.lhs.true:                                    ; preds = %for.body
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !5769
  %cmp18 = icmp ult i32 %call, 53, !dbg !5770
  br i1 %cmp18, label %if.then19, label %for.inc, !dbg !5771

if.then19:                                        ; preds = %land.lhs.true
  tail call void %doit(%struct.rtx_def* %6, i8* %arg) #6, !dbg !5772
  br label %for.inc, !dbg !5772

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5773
  call void @llvm.dbg.value(metadata i32 undef, metadata !5740, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5761
  br label %for.cond, !dbg !5774, !llvm.loop !5775

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5777

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry, %if.else, %if.then1
  ret void, !dbg !5777
}

; Function Attrs: nounwind uwtable
define dso_local void @clobber_return_register() local_unnamed_addr #4 !dbg !5778 {
entry:
  tail call void @diddle_return_value(void (%struct.rtx_def*, i8*)* nonnull @do_clobber_return_reg, i8* null) #7, !dbg !5784
  %0 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !5785
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %0, i64 0, i32 3, !dbg !5785
  %1 = bitcast %union.tree_node** %result to i64**, !dbg !5785
  %2 = load i64*, i64** %1, align 8, !dbg !5785
  %bf.load = load i64, i64* %2, align 8, !dbg !5785
  %bf.cast = and i64 %bf.load, 65535, !dbg !5785
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !5785
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !5785
  %tobool = icmp eq i8 %3, 0, !dbg !5785
  br i1 %tobool, label %if.end22, label %land.lhs.true, !dbg !5785

land.lhs.true:                                    ; preds = %entry
  %rtl = getelementptr inbounds i64, i64* %2, i64 14, !dbg !5785
  %4 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !5785
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !5785
  %cmp = icmp eq %struct.rtx_def* %5, null, !dbg !5785
  br i1 %cmp, label %if.end22, label %if.then, !dbg !5786

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i64* %2, metadata !5780, metadata !DIExpression()), !dbg !5787
  br i1 false, label %cond.false, label %cond.true, !dbg !5788

cond.true:                                        ; preds = %if.then
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !5789
  %bf.load14.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5791
  %phitmp = and i32 %bf.load14.pre, 65535, !dbg !5788
  %phitmp3 = icmp eq i32 %phitmp, 37, !dbg !5788
  br label %cond.end, !dbg !5788

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5788

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load14 = phi i1 [ false, %cond.false ], [ %phitmp3, %cond.true ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5783, metadata !DIExpression()), !dbg !5787
  br i1 %bf.load14, label %land.lhs.true18, label %if.end22, !dbg !5792

land.lhs.true18:                                  ; preds = %cond.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %5) #7, !dbg !5793
  %cmp19 = icmp ugt i32 %call, 52, !dbg !5794
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5795

if.then21:                                        ; preds = %land.lhs.true18
  tail call void @do_clobber_return_reg(%struct.rtx_def* nonnull %5, i8* null) #7, !dbg !5796
  br label %if.end22, !dbg !5798

if.end22:                                         ; preds = %land.lhs.true, %entry, %cond.end, %land.lhs.true18, %if.then21
  ret void, !dbg !5799
}

; Function Attrs: nounwind uwtable
define internal void @do_clobber_return_reg(%struct.rtx_def* %reg, i8* %arg) #4 !dbg !5800 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !5802, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i8* %arg, metadata !5803, metadata !DIExpression()), !dbg !5804
  %call = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %reg) #6, !dbg !5805
  ret void, !dbg !5806
}

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @do_warn_unused_parameter(%union.tree_node* %fn) local_unnamed_addr #4 !dbg !5807 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !5809, metadata !DIExpression()), !dbg !5811
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 2, !dbg !5812
  br label %for.cond, !dbg !5814

for.cond:                                         ; preds = %for.inc, %entry
  %decl.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.inc ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !5815
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !5810, metadata !DIExpression()), !dbg !5811
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !5816
  br i1 %tobool, label %for.end, label %for.body, !dbg !5816

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5817
  %bf.load = load i64, i64* %0, align 8, !dbg !5817
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !5817
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !5817
  br i1 %tobool1, label %land.lhs.true, label %for.inc, !dbg !5820

land.lhs.true:                                    ; preds = %for.body
  %bf.cast52 = and i64 %bf.load, 65535, !dbg !5821
  %cmp = icmp eq i64 %bf.cast52, 34, !dbg !5821
  br i1 %cmp, label %land.lhs.true6, label %for.inc, !dbg !5822

land.lhs.true6:                                   ; preds = %land.lhs.true
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5823
  %1 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5823
  %tobool7 = icmp eq %union.tree_node* %1, null, !dbg !5823
  br i1 %tobool7, label %for.inc, label %land.lhs.true8, !dbg !5824

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5825
  %2 = bitcast i40* %artificial_flag to i64*, !dbg !5825
  %bf.load9 = load i64, i64* %2, align 8, !dbg !5825
  %bf.cast123 = and i64 %bf.load9, 4096, !dbg !5825
  %tobool13 = icmp eq i64 %bf.cast123, 0, !dbg !5825
  br i1 %tobool13, label %land.lhs.true14, label %for.inc, !dbg !5826

land.lhs.true14:                                  ; preds = %land.lhs.true8
  %bf.cast194 = and i64 %bf.load, 8388608, !dbg !5827
  %tobool20 = icmp eq i64 %bf.cast194, 0, !dbg !5827
  br i1 %tobool20, label %if.then, label %for.inc, !dbg !5828

if.then:                                          ; preds = %land.lhs.true14
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 225, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), %union.tree_node* nonnull %decl.0) #6, !dbg !5829
  br label %for.inc, !dbg !5829

for.inc:                                          ; preds = %land.lhs.true14, %land.lhs.true8, %land.lhs.true6, %for.body, %land.lhs.true, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5830
  br label %for.cond, !dbg !5831, !llvm.loop !5832

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5834
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_function_end() local_unnamed_addr #4 !dbg !5835 {
entry:
  %unsignedp = alloca i32, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 15), align 8, !dbg !5870
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5870
  %1 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 40), align 4, !dbg !5872
  %tobool1 = icmp ne i8 %1, 0, !dbg !5873
  %or.cond = or i1 %tobool, %tobool1, !dbg !5874
  br i1 %or.cond, label %if.end, label %if.then, !dbg !5874

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @get_arg_pointer_save_area() #7, !dbg !5875
  br label %if.end, !dbg !5875

if.end:                                           ; preds = %entry, %if.then
  %2 = load i32, i32* @flag_stack_check, align 4, !dbg !5876
  %cmp = icmp eq i32 %2, 1, !dbg !5877
  br i1 %cmp, label %if.then2, label %if.end11, !dbg !5878

if.then2:                                         ; preds = %if.end
  %call3 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5879
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5838, metadata !DIExpression()), !dbg !5880
  br label %for.cond, !dbg !5881

for.cond:                                         ; preds = %for.inc, %if.then2
  %insn.0 = phi %struct.rtx_def* [ %call3, %if.then2 ], [ %6, %for.inc ], !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5838, metadata !DIExpression()), !dbg !5880
  %tobool4 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5883
  br i1 %tobool4, label %if.end11.loopexit, label %for.body, !dbg !5883

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5884
  %bf.load = load i32, i32* %3, align 8, !dbg !5884
  %bf.clear = and i32 %bf.load, 65535, !dbg !5884
  %cmp5 = icmp eq i32 %bf.clear, 10, !dbg !5884
  br i1 %cmp5, label %if.then6, label %for.inc, !dbg !5885

if.then6:                                         ; preds = %for.body
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4092) #6, !dbg !5886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !5842, metadata !DIExpression()), !dbg !5887
  tail call void @start_sequence() #6, !dbg !5888
  tail call void @anti_adjust_stack_and_probe(%struct.rtx_def* %call7, i8 zeroext 1) #6, !dbg !5889
  %call8 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !5841, metadata !DIExpression()), !dbg !5880
  tail call void @end_sequence() #6, !dbg !5892
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 14), align 8, !dbg !5893
  %call9 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call8, %struct.rtx_def* %4) #6, !dbg !5894
  br label %if.end11

for.inc:                                          ; preds = %for.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5895
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5895
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5838, metadata !DIExpression()), !dbg !5880
  br label %for.cond, !dbg !5896, !llvm.loop !5897

if.end11.loopexit:                                ; preds = %for.cond
  br label %if.end11, !dbg !5899

if.end11:                                         ; preds = %if.end11.loopexit, %if.then6, %if.end
  br label %while.cond, !dbg !5899

while.cond:                                       ; preds = %while.body, %if.end11
  %call12 = tail call i32 @in_sequence_p() #6, !dbg !5900
  %tobool13 = icmp eq i32 %call12, 0, !dbg !5899
  br i1 %tobool13, label %while.end, label %while.body, !dbg !5899

while.body:                                       ; preds = %while.cond
  tail call void @end_sequence() #6, !dbg !5901
  br label %while.cond, !dbg !5899, !llvm.loop !5902

while.end:                                        ; preds = %while.cond
  tail call void @clear_pending_stack_adjust() #6, !dbg !5904
  tail call void @do_pending_stack_adjust() #6, !dbg !5905
  tail call void @force_next_line_note() #6, !dbg !5906
  %7 = load i32, i32* @input_location, align 4, !dbg !5907
  tail call void @set_curr_insn_source_location(i32 %7) #6, !dbg !5908
  %call14 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !5837, metadata !DIExpression()), !dbg !5910
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 11), align 8, !dbg !5911
  %call15 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %8) #6, !dbg !5912
  %9 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !5913
  %tobool16 = icmp eq i32 %9, 0, !dbg !5913
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !5917

if.then17:                                        ; preds = %while.end
  %call18 = tail call %struct.rtx_def* @gen_blockage() #6, !dbg !5918
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #6, !dbg !5919
  br label %if.end20, !dbg !5919

if.end20:                                         ; preds = %while.end, %if.then17
  tail call void @expand_eh_return() #6, !dbg !5920
  %10 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !5921
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %10, i64 0, i32 3, !dbg !5921
  %11 = bitcast %union.tree_node** %result to i64**, !dbg !5921
  %12 = load i64*, i64** %11, align 8, !dbg !5921
  %bf.load21 = load i64, i64* %12, align 8, !dbg !5921
  %bf.cast = and i64 %bf.load21, 65535, !dbg !5921
  %arrayidx24 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !5921
  %13 = load i8, i8* %arrayidx24, align 1, !dbg !5921
  %tobool25 = icmp eq i8 %13, 0, !dbg !5921
  br i1 %tobool25, label %if.end195, label %land.lhs.true26, !dbg !5921

land.lhs.true26:                                  ; preds = %if.end20
  %rtl = getelementptr inbounds i64, i64* %12, i64 14, !dbg !5921
  %14 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !5921
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !5921
  %cmp29 = icmp eq %struct.rtx_def* %15, null, !dbg !5921
  br i1 %cmp29, label %if.end195, label %if.then31, !dbg !5922

if.then31:                                        ; preds = %land.lhs.true26
  call void @llvm.dbg.value(metadata i64* %12, metadata !5847, metadata !DIExpression()), !dbg !5923
  br i1 false, label %cond.false, label %cond.true, !dbg !5924

cond.true:                                        ; preds = %if.then31
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !5925
  %bf.load41.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5926
  br label %cond.end, !dbg !5924

cond.false:                                       ; preds = %if.then31
  br label %cond.end, !dbg !5924

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load41 = phi i32 [ undef, %cond.false ], [ %bf.load41.pre, %cond.true ], !dbg !5926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !5850, metadata !DIExpression()), !dbg !5923
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !5926
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !5926
  %cmp43 = icmp eq i32 %bf.clear42, 37, !dbg !5926
  br i1 %cmp43, label %cond.true45, label %cond.false49, !dbg !5927

cond.true45:                                      ; preds = %cond.end
  %call46 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %15) #7, !dbg !5928
  %cmp47 = icmp ugt i32 %call46, 52, !dbg !5929
  br i1 %cmp47, label %if.then54, label %if.end195, !dbg !5926

cond.false49:                                     ; preds = %cond.end
  %decl_flag_0 = getelementptr inbounds i64, i64* %12, i64 7, !dbg !5930
  %bf.load50 = load i64, i64* %decl_flag_0, align 8, !dbg !5930
  %bf.cast522 = and i64 %bf.load50, 16777216, !dbg !5930
  %tobool53 = icmp eq i64 %bf.cast522, 0, !dbg !5930
  br i1 %tobool53, label %if.end195, label %if.then54, !dbg !5927

if.then54:                                        ; preds = %cond.false49, %cond.true45
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 7), align 8, !dbg !5931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !5851, metadata !DIExpression()), !dbg !5932
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !5933
  %bf.load55 = load i32, i32* %18, align 8, !dbg !5933
  %tobool57 = icmp slt i32 %bf.load55, 0, !dbg !5933
  br i1 %tobool57, label %cond.end60, label %cond.true58, !dbg !5933

cond.true58:                                      ; preds = %if.then54
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4730, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5933
  %bf.load62.pre = load i32, i32* %18, align 8, !dbg !5934
  br label %cond.end60, !dbg !5933

cond.end60:                                       ; preds = %if.then54, %cond.true58
  %bf.load71 = phi i32 [ %bf.load55, %if.then54 ], [ %bf.load62.pre, %cond.true58 ], !dbg !5934
  %bf.clear64 = and i32 %bf.load71, 16711680, !dbg !5934
  %cmp65 = icmp eq i32 %bf.clear64, 65536, !dbg !5936
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !5937

if.then67:                                        ; preds = %cond.end60
  %bf.load68 = load i32, i32* %16, align 8, !dbg !5938
  %bf.clear70 = and i32 %bf.load68, 16711680, !dbg !5938
  %bf.clear72 = and i32 %bf.load71, -16711681, !dbg !5938
  %bf.set = or i32 %bf.clear72, %bf.clear70, !dbg !5938
  store i32 %bf.set, i32* %18, align 8, !dbg !5938
  br label %if.end73, !dbg !5938

if.end73:                                         ; preds = %if.then67, %cond.end60
  %type = getelementptr inbounds i64, i64* %12, i64 2, !dbg !5939
  %19 = bitcast i64* %type to %union.tree_node**, !dbg !5939
  %20 = bitcast i64* %type to i64**, !dbg !5939
  %21 = load i64*, i64** %20, align 8, !dbg !5939
  %bf.load75 = load i64, i64* %21, align 8, !dbg !5939
  %bf.cast773 = and i64 %bf.load75, 65535, !dbg !5939
  %cmp78 = icmp eq i64 %bf.cast773, 14, !dbg !5939
  br i1 %cmp78, label %cond.true80, label %cond.false84, !dbg !5939

cond.true80:                                      ; preds = %if.end73
  %.cast = bitcast i64* %21 to %union.tree_node*, !dbg !5939
  %call83 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !5939
  br label %cond.end91, !dbg !5939

cond.false84:                                     ; preds = %if.end73
  %type87 = bitcast i64* %21 to %struct.tree_type*, !dbg !5939
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i64 0, i32 6, !dbg !5939
  %bf.load88 = load i32, i32* %mode, align 4, !dbg !5939
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !5939
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !5939
  br label %cond.end91, !dbg !5939

cond.end91:                                       ; preds = %cond.false84, %cond.true80
  %cond92 = phi i32 [ %call83, %cond.true80 ], [ %bf.clear90, %cond.false84 ], !dbg !5939
  %cmp93 = icmp eq i32 %cond92, 1, !dbg !5940
  br i1 %cmp93, label %if.else, label %land.lhs.true95, !dbg !5941

land.lhs.true95:                                  ; preds = %cond.end91
  %22 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 4), align 8, !dbg !5942
  %23 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !5943
  %call98 = tail call zeroext i8 %22(%union.tree_node* %23) #6, !dbg !5944
  %tobool100 = icmp eq i8 %call98, 0, !dbg !5944
  br i1 %tobool100, label %if.else, label %if.then101, !dbg !5945

if.then101:                                       ; preds = %land.lhs.true95
  %bf.load102 = load i32, i32* %16, align 8, !dbg !5946
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !5946
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !5946
  %call105 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !5948
  %call106 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear104, i32 %call105) #6, !dbg !5949
  %call107 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call106, %struct.rtx_def* nonnull %15) #6, !dbg !5950
  %bf.load108 = load i32, i32* %16, align 8, !dbg !5951
  %bf.lshr109 = lshr i32 %bf.load108, 16, !dbg !5951
  %bf.clear110 = and i32 %bf.lshr109, 255, !dbg !5951
  %call111 = tail call zeroext i8 @shift_return_value(i32 %bf.clear110, i8 zeroext 1, %struct.rtx_def* %17) #6, !dbg !5952
  br label %if.end195, !dbg !5953

if.else:                                          ; preds = %land.lhs.true95, %cond.end91
  %bf.load112 = load i32, i32* %18, align 8, !dbg !5954
  %bf.load115 = load i32, i32* %16, align 8, !dbg !5955
  %bf.lshr1134 = xor i32 %bf.load112, %bf.load115, !dbg !5956
  %24 = and i32 %bf.lshr1134, 16711680, !dbg !5956
  %cmp118 = icmp eq i32 %24, 0, !dbg !5956
  br i1 %cmp118, label %if.else136, label %if.then120, !dbg !5957

if.then120:                                       ; preds = %if.else
  %25 = bitcast i32* %unsignedp to i8*, !dbg !5958
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8, !dbg !5958
  %26 = load i64*, i64** %20, align 8, !dbg !5959
  %bf.load124 = load i64, i64* %26, align 8, !dbg !5959
  %bf.lshr125 = lshr i64 %bf.load124, 21, !dbg !5959
  %27 = trunc i64 %bf.lshr125 to i32, !dbg !5959
  %bf.cast127 = and i32 %27, 1, !dbg !5959
  call void @llvm.dbg.value(metadata i32 %bf.cast127, metadata !5854, metadata !DIExpression()), !dbg !5960
  store i32 %bf.cast127, i32* %unsignedp, align 4, !dbg !5961
  %28 = bitcast i64* %26 to %union.tree_node*, !dbg !5962
  %bf.load130 = load i32, i32* %16, align 8, !dbg !5963
  %bf.lshr131 = lshr i32 %bf.load130, 16, !dbg !5963
  %bf.clear132 = and i32 %bf.lshr131, 255, !dbg !5963
  %29 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !5964
  %type134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i64 0, i32 2, !dbg !5964
  %30 = load %union.tree_node*, %union.tree_node** %type134, align 8, !dbg !5964
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !5854, metadata !DIExpression(DW_OP_deref)), !dbg !5960
  %call135 = call i32 @promote_function_mode(%union.tree_node* %28, i32 %bf.clear132, i32* nonnull %unsignedp, %union.tree_node* %30, i32 1) #6, !dbg !5965
  %31 = load i32, i32* %unsignedp, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata i32 %31, metadata !5854, metadata !DIExpression()), !dbg !5960
  call void @convert_move(%struct.rtx_def* %17, %struct.rtx_def* nonnull %15, i32 %31) #6, !dbg !5967
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8, !dbg !5968
  br label %if.end195, !dbg !5969

if.else136:                                       ; preds = %if.else
  %bf.clear138 = and i32 %bf.load112, 65535, !dbg !5970
  %cmp139 = icmp eq i32 %bf.clear138, 15, !dbg !5971
  %bf.clear143 = and i32 %bf.load115, 65535, !dbg !5972
  br i1 %cmp139, label %if.then141, label %if.else155, !dbg !5973

if.then141:                                       ; preds = %if.else136
  %cmp144 = icmp eq i32 %bf.clear143, 15, !dbg !5974
  br i1 %cmp144, label %if.then146, label %if.else147, !dbg !5977

if.then146:                                       ; preds = %if.then141
  tail call void @emit_group_move(%struct.rtx_def* %17, %struct.rtx_def* nonnull %15) #6, !dbg !5978
  br label %if.end195, !dbg !5978

if.else147:                                       ; preds = %if.then141
  %32 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !5979
  %call152 = tail call i64 @int_size_in_bytes(%union.tree_node* %32) #6, !dbg !5980
  %conv153 = trunc i64 %call152 to i32, !dbg !5980
  tail call void @emit_group_load(%struct.rtx_def* %17, %struct.rtx_def* nonnull %15, %union.tree_node* %32, i32 %conv153) #6, !dbg !5981
  br label %if.end195

if.else155:                                       ; preds = %if.else136
  %cmp158 = icmp eq i32 %bf.clear143, 41, !dbg !5982
  br i1 %cmp158, label %land.lhs.true160, label %if.else188, !dbg !5983

land.lhs.true160:                                 ; preds = %if.else155
  %bf.lshr162 = lshr i32 %bf.load115, 16, !dbg !5984
  %bf.clear163 = and i32 %bf.lshr162, 255, !dbg !5984
  %idxprom164 = zext i32 %bf.clear163 to i64, !dbg !5984
  %arrayidx165 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom164, !dbg !5984
  %33 = load i8, i8* %arrayidx165, align 1, !dbg !5984
  %cmp167 = icmp eq i8 %33, 10, !dbg !5985
  br i1 %cmp167, label %land.lhs.true169, label %if.else188, !dbg !5986

land.lhs.true169:                                 ; preds = %land.lhs.true160
  %arrayidx174 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom164, !dbg !5987
  %34 = load i8, i8* %arrayidx174, align 1, !dbg !5987
  %cmp179 = icmp ult i8 %34, 5, !dbg !5988
  br i1 %cmp179, label %if.then181, label %if.else188, !dbg !5989

if.then181:                                       ; preds = %land.lhs.true169
  %35 = load i32, i32* @generating_concat_p, align 4, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %35, metadata !5858, metadata !DIExpression()), !dbg !5991
  store i32 0, i32* @generating_concat_p, align 4, !dbg !5992
  %bf.load182 = load i32, i32* %16, align 8, !dbg !5993
  %bf.lshr183 = lshr i32 %bf.load182, 16, !dbg !5993
  %bf.clear184 = and i32 %bf.lshr183, 255, !dbg !5993
  %call185 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear184) #6, !dbg !5994
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call185, metadata !5862, metadata !DIExpression()), !dbg !5991
  store i32 %35, i32* @generating_concat_p, align 4, !dbg !5995
  %call186 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call185, %struct.rtx_def* nonnull %15) #6, !dbg !5996
  %call187 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* %call185) #6, !dbg !5997
  br label %if.end195, !dbg !5998

if.else188:                                       ; preds = %land.lhs.true169, %land.lhs.true160, %if.else155
  %call189 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* nonnull %15) #6, !dbg !5999
  br label %if.end195

if.end195:                                        ; preds = %cond.false49, %land.lhs.true26, %if.end20, %cond.true45, %if.then120, %if.then181, %if.else188, %if.then146, %if.else147, %if.then101
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6000
  %returns_struct = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 20, !dbg !6001
  %bf.load196 = load i32, i32* %returns_struct, align 8, !dbg !6001
  %bf.clear198 = and i32 %bf.load196, 67108864, !dbg !6001
  %tobool199 = icmp eq i32 %bf.clear198, 0, !dbg !6000
  br i1 %tobool199, label %lor.lhs.false, label %if.then204, !dbg !6002

lor.lhs.false:                                    ; preds = %if.end195
  %bf.clear202 = and i32 %bf.load196, 134217728, !dbg !6003
  %tobool203 = icmp eq i32 %bf.clear202, 0, !dbg !6004
  br i1 %tobool203, label %if.end256, label %if.then204, !dbg !6005

if.then204:                                       ; preds = %lor.lhs.false, %if.end195
  %37 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !6006
  %result206 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %37, i64 0, i32 3, !dbg !6006
  %38 = bitcast %union.tree_node** %result206 to %struct.tree_decl_with_rtl**, !dbg !6006
  %39 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %38, align 8, !dbg !6006
  %rtl208 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %39, i64 0, i32 1, !dbg !6006
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtl208, align 8, !dbg !6006
  %tobool209 = icmp eq %struct.rtx_def* %40, null, !dbg !6006
  br i1 %tobool209, label %cond.false215, label %cond.true210, !dbg !6006

cond.true210:                                     ; preds = %if.then204
  br label %cond.end222, !dbg !6006

cond.false215:                                    ; preds = %if.then204
  %41 = bitcast %struct.tree_decl_with_rtl* %39 to %union.tree_node*, !dbg !6006
  call void @make_decl_rtl(%union.tree_node* %41) #6, !dbg !6006
  %42 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !6006
  %result219 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %42, i64 0, i32 3, !dbg !6006
  %43 = bitcast %union.tree_node** %result219 to %struct.tree_decl_with_rtl**, !dbg !6006
  %44 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %43, align 8, !dbg !6006
  %rtl221 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %44, i64 0, i32 1, !dbg !6006
  %cond223.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl221, align 8, !dbg !6006
  br label %cond.end222, !dbg !6006

cond.end222:                                      ; preds = %cond.false215, %cond.true210
  %45 = phi %struct.tree_decl_non_common* [ %37, %cond.true210 ], [ %42, %cond.false215 ], !dbg !6007
  %cond223 = phi %struct.rtx_def* [ %40, %cond.true210 ], [ %cond223.pre, %cond.false215 ], !dbg !6006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond223, metadata !5863, metadata !DIExpression()), !dbg !6008
  %result226 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %45, i64 0, i32 3, !dbg !6007
  %46 = bitcast %union.tree_node** %result226 to %struct.tree_common**, !dbg !6007
  %47 = load %struct.tree_common*, %struct.tree_common** %46, align 8, !dbg !6007
  %type228 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 2, !dbg !6007
  %48 = load %union.tree_node*, %union.tree_node** %type228, align 8, !dbg !6007
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !5866, metadata !DIExpression()), !dbg !6008
  %decl_by_reference_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 2, i32 1, !dbg !6009
  %49 = bitcast %union.tree_node** %decl_by_reference_flag to i64*, !dbg !6009
  %bf.load232 = load i64, i64* %49, align 8, !dbg !6009
  %bf.cast2351 = and i64 %bf.load232, 268435456, !dbg !6009
  %tobool236 = icmp eq i64 %bf.cast2351, 0, !dbg !6009
  br i1 %tobool236, label %if.else240, label %if.then237, !dbg !6011

if.then237:                                       ; preds = %cond.end222
  %type239 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6012
  %50 = load %union.tree_node*, %union.tree_node** %type239, align 8, !dbg !6012
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !5866, metadata !DIExpression()), !dbg !6008
  br label %if.end245, !dbg !6013

if.else240:                                       ; preds = %cond.end222
  %arrayidx243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond223, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6014
  %rt_rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**, !dbg !6014
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx244, align 8, !dbg !6014
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !5863, metadata !DIExpression()), !dbg !6008
  br label %if.end245

if.end245:                                        ; preds = %if.else240, %if.then237
  %value_address.0 = phi %struct.rtx_def* [ %cond223, %if.then237 ], [ %51, %if.else240 ], !dbg !6008
  %type224.0 = phi %union.tree_node* [ %50, %if.then237 ], [ %48, %if.else240 ], !dbg !6008
  call void @llvm.dbg.value(metadata %union.tree_node* %type224.0, metadata !5866, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value_address.0, metadata !5863, metadata !DIExpression()), !dbg !6008
  %52 = load %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 15), align 8, !dbg !6015
  %call246 = call %union.tree_node* @build_pointer_type(%union.tree_node* %type224.0) #6, !dbg !6016
  %53 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !6017
  %call247 = call %struct.rtx_def* %52(%union.tree_node* %call246, %union.tree_node* %53, i8 zeroext 1) #6, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call247, metadata !5867, metadata !DIExpression()), !dbg !6008
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call247, i64 0, i32 0, !dbg !6019
  %bf.load248 = load i32, i32* %54, align 8, !dbg !6020
  %bf.set250 = or i32 %bf.load248, -2147483648, !dbg !6020
  store i32 %bf.set250, i32* %54, align 8, !dbg !6020
  %bf.lshr252 = lshr i32 %bf.load248, 16, !dbg !6021
  %bf.clear253 = and i32 %bf.lshr252, 255, !dbg !6021
  %call254 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 %bf.clear253, %struct.rtx_def* %value_address.0, i8 zeroext 0) #6, !dbg !6021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call254, metadata !5863, metadata !DIExpression()), !dbg !6008
  %call255 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call247, %struct.rtx_def* %call254) #6, !dbg !6022
  store %struct.rtx_def* %call247, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 7), align 8, !dbg !6023
  br label %if.end256, !dbg !6024

if.end256:                                        ; preds = %lor.lhs.false, %if.end245
  call void @start_sequence() #6, !dbg !6025
  call void @clobber_return_register() #7, !dbg !6026
  %call258 = call %struct.rtx_def* @get_insns() #6, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call258, metadata !5868, metadata !DIExpression()), !dbg !6028
  call void @end_sequence() #6, !dbg !6029
  %call259 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call258, %struct.rtx_def* %call14) #6, !dbg !6030
  %55 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 12), align 8, !dbg !6031
  %tobool260 = icmp eq %struct.rtx_def* %55, null, !dbg !6031
  br i1 %tobool260, label %if.end263, label %if.then261, !dbg !6033

if.then261:                                       ; preds = %if.end256
  %call262 = call %struct.rtx_def* @emit_label(%struct.rtx_def* nonnull %55) #6, !dbg !6034
  br label %if.end263, !dbg !6034

if.end263:                                        ; preds = %if.end256, %if.then261
  %56 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !6035
  %tobool264 = icmp eq i32 %56, 0, !dbg !6035
  br i1 %tobool264, label %if.end268, label %if.then265, !dbg !6037

if.then265:                                       ; preds = %if.end263
  %call266 = call %struct.rtx_def* @gen_blockage() #6, !dbg !6038
  %call267 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call266) #6, !dbg !6039
  br label %if.end268, !dbg !6039

if.end268:                                        ; preds = %if.end263, %if.then265
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !6040
  %tobool269 = icmp eq %union.tree_node* %57, null, !dbg !6042
  br i1 %tobool269, label %if.end271, label %if.then270, !dbg !6043

if.then270:                                       ; preds = %if.end268
  call void @stack_protect_epilogue() #7, !dbg !6044
  br label %if.end271, !dbg !6044

if.end271:                                        ; preds = %if.end268, %if.then270
  call fastcc void @use_return_register() #7, !dbg !6045
  ret void, !dbg !6046
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_arg_pointer_save_area() local_unnamed_addr #4 !dbg !6047 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 15), align 8, !dbg !6055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6051, metadata !DIExpression()), !dbg !6056
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !6057
  br i1 %tobool, label %if.then, label %if.end, !dbg !6059

if.then:                                          ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !6060
  %conv1 = zext i8 %1 to i64, !dbg !6060
  %call = tail call %struct.rtx_def* @assign_stack_local(i32 16, i64 %conv1, i32 0) #7, !dbg !6062
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6051, metadata !DIExpression()), !dbg !6056
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 15), align 8, !dbg !6063
  br label %if.end, !dbg !6064

if.end:                                           ; preds = %entry, %if.then
  %ret.0 = phi %struct.rtx_def* [ %0, %entry ], [ %call, %if.then ], !dbg !6056
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ret.0, metadata !6051, metadata !DIExpression()), !dbg !6056
  %2 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 40), align 4, !dbg !6065
  %tobool2 = icmp eq i8 %2, 0, !dbg !6066
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !6067

if.then3:                                         ; preds = %if.end
  tail call void @start_sequence() #6, !dbg !6068
  %call4 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %ret.0) #6, !dbg !6069
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !6070
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call4, %struct.rtx_def* %3) #6, !dbg !6071
  %call6 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !6052, metadata !DIExpression()), !dbg !6073
  tail call void @end_sequence() #6, !dbg !6074
  tail call void @push_topmost_sequence() #6, !dbg !6075
  %call7 = tail call %struct.rtx_def* @entry_of_function() #6, !dbg !6076
  %call8 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call6, %struct.rtx_def* %call7) #6, !dbg !6077
  tail call void @pop_topmost_sequence() #6, !dbg !6078
  br label %if.end9, !dbg !6079

if.end9:                                          ; preds = %if.end, %if.then3
  ret %struct.rtx_def* %ret.0, !dbg !6080
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local void @anti_adjust_stack_and_probe(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @clear_pending_stack_adjust() local_unnamed_addr #1

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #1

declare dso_local void @set_curr_insn_source_location(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_blockage() local_unnamed_addr #1

declare dso_local void @expand_eh_return() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @shift_return_value(i32, i8 zeroext, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @promote_function_mode(%union.tree_node*, i32, i32*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @emit_group_move(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @emit_group_load(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @use_return_register() unnamed_addr #4 !dbg !6081 {
entry:
  tail call void @diddle_return_value(void (%struct.rtx_def*, i8*)* nonnull @do_use_return_reg, i8* null) #7, !dbg !6082
  ret void, !dbg !6083
}

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @push_topmost_sequence() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @entry_of_function() local_unnamed_addr #1

declare dso_local void @pop_topmost_sequence() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @maybe_copy_epilogue_insn(%struct.rtx_def* %insn, %struct.rtx_def* %copy) local_unnamed_addr #4 !dbg !6084 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy, metadata !6087, metadata !DIExpression()), !dbg !6089
  %0 = load %struct.htab*, %struct.htab** @epilogue_insn_hash, align 8, !dbg !6090
  %cmp = icmp eq %struct.htab* %0, null, !dbg !6092
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !6093

lor.lhs.false:                                    ; preds = %entry
  %1 = bitcast %struct.rtx_def* %insn to i8*, !dbg !6094
  %call = tail call i8* @htab_find(%struct.htab* nonnull %0, i8* %1) #6, !dbg !6095
  %cmp1 = icmp eq i8* %call, null, !dbg !6096
  br i1 %cmp1, label %cleanup.cont, label %if.end, !dbg !6097

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.htab*, %struct.htab** @epilogue_insn_hash, align 8, !dbg !6098
  %3 = bitcast %struct.rtx_def* %copy to i8*, !dbg !6099
  %call2 = tail call i8** @htab_find_slot(%struct.htab* %2, i8* %3, i32 1) #6, !dbg !6100
  call void @llvm.dbg.value(metadata i8** %call2, metadata !6088, metadata !DIExpression()), !dbg !6089
  %4 = load i8*, i8** %call2, align 8, !dbg !6101
  %cmp3 = icmp eq i8* %4, null, !dbg !6101
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !6101

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4945, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6101
  br label %cond.end, !dbg !6101

cond.end:                                         ; preds = %if.end, %cond.true
  %5 = bitcast i8** %call2 to %struct.rtx_def**, !dbg !6102
  store %struct.rtx_def* %copy, %struct.rtx_def** %5, align 8, !dbg !6102
  br label %cleanup.cont, !dbg !6103

cleanup.cont:                                     ; preds = %cond.end, %lor.lhs.false, %entry
  ret void, !dbg !6103
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #1

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @prologue_epilogue_contains(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !6104 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6108, metadata !DIExpression()), !dbg !6109
  %0 = load %struct.htab*, %struct.htab** @prologue_insn_hash, align 8, !dbg !6110
  %call = tail call fastcc zeroext i8 @contains(%struct.rtx_def* %insn, %struct.htab* %0) #7, !dbg !6112
  %tobool = icmp eq i8 %call, 0, !dbg !6112
  br i1 %tobool, label %if.end, label %return, !dbg !6113

if.end:                                           ; preds = %entry
  %1 = load %struct.htab*, %struct.htab** @epilogue_insn_hash, align 8, !dbg !6114
  %call1 = tail call fastcc zeroext i8 @contains(%struct.rtx_def* %insn, %struct.htab* %1) #7, !dbg !6116
  %tobool2 = icmp ne i8 %call1, 0, !dbg !6116
  %. = zext i1 %tobool2 to i32, !dbg !6109
  br label %return, !dbg !6109

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %entry ], [ %., %if.end ], !dbg !6109
  ret i32 %retval.0, !dbg !6117
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @contains(%struct.rtx_def* %insn, %struct.htab* %hash) unnamed_addr #4 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6122, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata %struct.htab* %hash, metadata !6123, metadata !DIExpression()), !dbg !6127
  %cmp = icmp eq %struct.htab* %hash, null, !dbg !6128
  br i1 %cmp, label %return, label %if.end, !dbg !6130

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6131
  %bf.load = load i32, i32* %0, align 8, !dbg !6131
  %bf.clear = and i32 %bf.load, 65535, !dbg !6131
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !6131
  br i1 %cmp1, label %land.lhs.true, label %if.end25, !dbg !6132

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6133
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6133
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !6133
  %3 = load i32*, i32** %2, align 8, !dbg !6133
  %bf.load2 = load i32, i32* %3, align 8, !dbg !6133
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6133
  %cmp4 = icmp eq i32 %bf.clear3, 5, !dbg !6134
  br i1 %cmp4, label %if.then5, label %if.end25, !dbg !6135

if.then5:                                         ; preds = %land.lhs.true
  %rt_rtx9 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6136
  %arrayidx12 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !6136
  %rt_rtvec = bitcast i32* %arrayidx12 to %struct.rtvec_def**, !dbg !6136
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6136
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !6136
  %5 = load i32, i32* %num_elem, align 8, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %5, metadata !6124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6138
  %6 = sext i32 %5 to i64, !dbg !6139
  br label %for.cond, !dbg !6139

for.cond:                                         ; preds = %for.inc, %if.then5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %6, %if.then5 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6140
  call void @llvm.dbg.value(metadata i32 undef, metadata !6124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6138
  %cmp13 = icmp sgt i64 %indvars.iv, 0, !dbg !6141
  br i1 %cmp13, label %for.body, label %return.loopexit, !dbg !6143

for.body:                                         ; preds = %for.cond
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6144
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6144
  %rt_rtvec21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtvec_def**, !dbg !6144
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec21, align 8, !dbg !6144
  %arrayidx22 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6144
  %9 = bitcast %struct.rtx_def** %arrayidx22 to i8**, !dbg !6144
  %10 = load i8*, i8** %9, align 8, !dbg !6144
  %call = tail call i8* @htab_find(%struct.htab* nonnull %hash, i8* %10) #6, !dbg !6146
  %tobool = icmp eq i8* %call, null, !dbg !6146
  br i1 %tobool, label %for.inc, label %return.loopexit, !dbg !6147

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !6124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6138
  br label %for.cond, !dbg !6148, !llvm.loop !6149

if.end25:                                         ; preds = %land.lhs.true, %if.end
  %11 = bitcast %struct.rtx_def* %insn to i8*, !dbg !6151
  %call26 = tail call i8* @htab_find(%struct.htab* nonnull %hash, i8* %11) #6, !dbg !6152
  %cmp27 = icmp ne i8* %call26, null, !dbg !6153
  %conv28 = zext i1 %cmp27 to i8, !dbg !6152
  br label %return, !dbg !6154

return.loopexit:                                  ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %return, !dbg !6155

return:                                           ; preds = %return.loopexit, %entry, %if.end25
  %retval.1 = phi i8 [ %conv28, %if.end25 ], [ 0, %entry ], [ %retval.1.ph, %return.loopexit ], !dbg !6127
  ret i8 %retval.1, !dbg !6155
}

; Function Attrs: nounwind uwtable
define dso_local void @reposition_prologue_and_epilogue_notes() local_unnamed_addr #4 !dbg !6156 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = load %struct.htab*, %struct.htab** @prologue_insn_hash, align 8, !dbg !6181
  %cmp = icmp eq %struct.htab* %0, null, !dbg !6182
  br i1 %cmp, label %if.end53, label %if.then, !dbg !6183

if.then:                                          ; preds = %entry
  %call = tail call i64 @htab_elements(%struct.htab* nonnull %0) #6, !dbg !6184
  call void @llvm.dbg.value(metadata i64 %call, metadata !6158, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6162, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6163, metadata !DIExpression()), !dbg !6185
  %call1 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6161, metadata !DIExpression()), !dbg !6185
  br label %for.cond, !dbg !6188

for.cond:                                         ; preds = %for.inc, %if.then
  %note.0 = phi %struct.rtx_def* [ null, %if.then ], [ %note.2, %for.inc ], !dbg !6185
  %last.0 = phi %struct.rtx_def* [ null, %if.then ], [ %last.2, %for.inc ], !dbg !6189
  %insn.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %6, %for.inc ], !dbg !6190
  %len.0 = phi i64 [ %call, %if.then ], [ %len.2, %for.inc ], !dbg !6191
  call void @llvm.dbg.value(metadata i64 %len.0, metadata !6158, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6161, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6162, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !6163, metadata !DIExpression()), !dbg !6185
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6192
  br i1 %tobool, label %for.end, label %for.body, !dbg !6192

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6193
  %bf.load = load i32, i32* %1, align 8, !dbg !6193
  %bf.clear = and i32 %bf.load, 65535, !dbg !6193
  %cmp2 = icmp eq i32 %bf.clear, 13, !dbg !6193
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !6197

if.then3:                                         ; preds = %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6198
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6198
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !6198
  %3 = load i32, i32* %rt_int, align 8, !dbg !6198
  %cmp4 = icmp eq i32 %3, 5, !dbg !6201
  %spec.select = select i1 %cmp4, %struct.rtx_def* %insn.0, %struct.rtx_def* %note.0, !dbg !6202
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !6163, metadata !DIExpression()), !dbg !6185
  br label %for.inc, !dbg !6203

if.else:                                          ; preds = %for.body
  %4 = load %struct.htab*, %struct.htab** @prologue_insn_hash, align 8, !dbg !6204
  %call6 = tail call fastcc zeroext i8 @contains(%struct.rtx_def* nonnull %insn.0, %struct.htab* %4) #7, !dbg !6206
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6206
  br i1 %tobool7, label %for.inc, label %if.then8, !dbg !6207

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6162, metadata !DIExpression()), !dbg !6185
  %dec = add i64 %len.0, -1, !dbg !6208
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6158, metadata !DIExpression()), !dbg !6185
  %cmp9 = icmp eq i64 %dec, 0, !dbg !6211
  br i1 %cmp9, label %for.end, label %for.inc, !dbg !6212

for.inc:                                          ; preds = %if.else, %if.then3, %if.then8
  %note.2 = phi %struct.rtx_def* [ %spec.select, %if.then3 ], [ %note.0, %if.then8 ], [ %note.0, %if.else ], !dbg !6185
  %last.2 = phi %struct.rtx_def* [ %last.0, %if.then3 ], [ %insn.0, %if.then8 ], [ %last.0, %if.else ], !dbg !6185
  %len.2 = phi i64 [ %len.0, %if.then3 ], [ %dec, %if.then8 ], [ %len.0, %if.else ], !dbg !6185
  call void @llvm.dbg.value(metadata i64 %len.2, metadata !6158, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !6162, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.2, metadata !6163, metadata !DIExpression()), !dbg !6185
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6213
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6213
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6161, metadata !DIExpression()), !dbg !6185
  br label %for.cond, !dbg !6214, !llvm.loop !6215

for.end:                                          ; preds = %for.cond, %if.then8
  %note.0.lcssa = phi %struct.rtx_def* [ %note.0, %for.cond ], [ %note.0, %if.then8 ], !dbg !6185
  %last.3 = phi %struct.rtx_def* [ %last.0, %for.cond ], [ %insn.0, %if.then8 ], !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0.lcssa, metadata !6163, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.3, metadata !6162, metadata !DIExpression()), !dbg !6185
  %tobool17 = icmp eq %struct.rtx_def* %last.3, null, !dbg !6217
  br i1 %tobool17, label %if.end53, label %if.then18, !dbg !6219

if.then18:                                        ; preds = %for.end
  %cmp19 = icmp eq %struct.rtx_def* %note.0.lcssa, null, !dbg !6220
  br i1 %cmp19, label %if.then20, label %if.end42, !dbg !6223

if.then20:                                        ; preds = %if.then18
  br label %for.cond25, !dbg !6224

for.cond25:                                       ; preds = %for.inc36, %if.then20
  %last.3.pn = phi %struct.rtx_def* [ %last.3, %if.then20 ], [ %note.3, %for.inc36 ]
  %note.3.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.3.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6227
  %note.3.in = bitcast %union.rtunion_def* %note.3.in.in to %struct.rtx_def**, !dbg !6227
  %note.3 = load %struct.rtx_def*, %struct.rtx_def** %note.3.in, align 8, !dbg !6227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.3, metadata !6163, metadata !DIExpression()), !dbg !6185
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.3, i64 0, i32 0, !dbg !6228
  %bf.load26 = load i32, i32* %7, align 8, !dbg !6228
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !6228
  %cmp28 = icmp eq i32 %bf.clear27, 13, !dbg !6228
  br i1 %cmp28, label %land.lhs.true, label %for.inc36, !dbg !6232

land.lhs.true:                                    ; preds = %for.cond25
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.3, i64 0, i32 1, !dbg !6233
  %8 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 0, !dbg !6233
  %rt_int32 = bitcast %union.rtunion_def* %8 to i32*, !dbg !6233
  %9 = load i32, i32* %rt_int32, align 8, !dbg !6233
  %cmp33 = icmp eq i32 %9, 5, !dbg !6234
  br i1 %cmp33, label %if.end42.loopexit, label %for.inc36, !dbg !6235

for.inc36:                                        ; preds = %for.cond25, %land.lhs.true
  br label %for.cond25, !dbg !6236, !llvm.loop !6237

if.end42.loopexit:                                ; preds = %land.lhs.true
  %note.3.lcssa = phi %struct.rtx_def* [ %note.3, %land.lhs.true ], !dbg !6227
  br label %if.end42, !dbg !6240

if.end42:                                         ; preds = %if.end42.loopexit, %if.then18
  %note.4 = phi %struct.rtx_def* [ %note.0.lcssa, %if.then18 ], [ %note.3.lcssa, %if.end42.loopexit ], !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.4, metadata !6163, metadata !DIExpression()), !dbg !6185
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.3, i64 0, i32 0, !dbg !6240
  %bf.load43 = load i32, i32* %10, align 8, !dbg !6240
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !6240
  %cmp45 = icmp eq i32 %bf.clear44, 12, !dbg !6240
  br i1 %cmp45, label %if.then46, label %if.end51, !dbg !6242

if.then46:                                        ; preds = %if.end42
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6243
  %rt_rtx50 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !6243
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !6162, metadata !DIExpression()), !dbg !6185
  br label %if.end51, !dbg !6244

if.end51:                                         ; preds = %if.then46, %if.end42
  %last.4 = phi %struct.rtx_def* [ %12, %if.then46 ], [ %last.3, %if.end42 ], !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.4, metadata !6162, metadata !DIExpression()), !dbg !6185
  tail call void @reorder_insns(%struct.rtx_def* %note.4, %struct.rtx_def* %note.4, %struct.rtx_def* %last.4) #6, !dbg !6245
  br label %if.end53, !dbg !6246

if.end53:                                         ; preds = %for.end, %entry, %if.end51
  %13 = load %struct.htab*, %struct.htab** @epilogue_insn_hash, align 8, !dbg !6247
  %cmp54 = icmp eq %struct.htab* %13, null, !dbg !6248
  br i1 %cmp54, label %if.end129, label %if.then55, !dbg !6249

if.then55:                                        ; preds = %if.end53
  %14 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6250
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6250
  %15 = bitcast %struct.edge_def** %e to i8*, !dbg !6251
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !6251
  %16 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6252
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !6252
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6252
  %cfg = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !6252
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6252
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !6252
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6252
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 0, !dbg !6252
  %call56 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6252
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6252
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call56, 0, !dbg !6252
  store i32 %21, i32* %20, align 8, !dbg !6252
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6252
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call56, 1, !dbg !6252
  store %struct.VEC_edge_gc** %23, %struct.VEC_edge_gc*** %22, align 8, !dbg !6252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !6252
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !6252
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6253
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6253
  br label %for.cond57, !dbg !6252

for.cond57:                                       ; preds = %for.inc127, %if.then55
  %26 = load i32, i32* %24, align 8, !dbg !6254
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !6254
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6255
  %call58 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %e) #7, !dbg !6254
  %tobool59 = icmp eq i8 %call58, 0, !dbg !6252
  br i1 %tobool59, label %for.end128, label %for.body60, !dbg !6252

for.body60:                                       ; preds = %for.cond57
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6178, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6179, metadata !DIExpression()), !dbg !6256
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6257
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6173, metadata !DIExpression()), !dbg !6255
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 0, !dbg !6258
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !6180, metadata !DIExpression()), !dbg !6256
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 7, !dbg !6259
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6259
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6259
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !6259
  br label %for.cond63, !dbg !6259

for.cond63:                                       ; preds = %for.inc99, %for.body60
  %note62.0 = phi %struct.rtx_def* [ null, %for.body60 ], [ %note62.2, %for.inc99 ], !dbg !6256
  %first.0 = phi %struct.rtx_def* [ null, %for.body60 ], [ %first.2, %for.inc99 ], !dbg !6261
  %insn61.0.in = phi %struct.rtx_def** [ %head_, %for.body60 ], [ %rt_rtx103, %for.inc99 ]
  %insn61.0 = load %struct.rtx_def*, %struct.rtx_def** %insn61.0.in, align 8, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn61.0, metadata !6174, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !6178, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note62.0, metadata !6179, metadata !DIExpression()), !dbg !6256
  %tobool64 = icmp eq %struct.rtx_def* %insn61.0, null, !dbg !6263
  br i1 %tobool64, label %for.end104, label %land.rhs, !dbg !6263

land.rhs:                                         ; preds = %for.cond63
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6263
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 1, !dbg !6263
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6263
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6263
  %rt_rtx70 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !6263
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !6263
  %cmp71 = icmp eq %struct.rtx_def* %insn61.0, %34, !dbg !6263
  br i1 %cmp71, label %for.end104, label %for.body72, !dbg !6259

for.body72:                                       ; preds = %land.rhs
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn61.0, i64 0, i32 0, !dbg !6265
  %bf.load73 = load i32, i32* %35, align 8, !dbg !6265
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !6265
  %cmp75 = icmp eq i32 %bf.clear74, 13, !dbg !6265
  br i1 %cmp75, label %if.then76, label %if.else87, !dbg !6268

if.then76:                                        ; preds = %for.body72
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn61.0, i64 0, i32 1, !dbg !6269
  %36 = getelementptr inbounds %union.u, %union.u* %u77, i64 1, i32 0, i32 0, i64 0, !dbg !6269
  %rt_int80 = bitcast %union.rtunion_def* %36 to i32*, !dbg !6269
  %37 = load i32, i32* %rt_int80, align 8, !dbg !6269
  %cmp81 = icmp eq i32 %37, 6, !dbg !6272
  br i1 %cmp81, label %if.then82, label %for.inc99, !dbg !6273

if.then82:                                        ; preds = %if.then76
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn61.0, metadata !6179, metadata !DIExpression()), !dbg !6256
  %cmp83 = icmp eq %struct.rtx_def* %first.0, null, !dbg !6274
  br i1 %cmp83, label %for.inc99, label %for.end104, !dbg !6277

if.else87:                                        ; preds = %for.body72
  %cmp88 = icmp eq %struct.rtx_def* %first.0, null, !dbg !6278
  br i1 %cmp88, label %land.lhs.true89, label %for.inc99, !dbg !6280

land.lhs.true89:                                  ; preds = %if.else87
  %38 = load %struct.htab*, %struct.htab** @epilogue_insn_hash, align 8, !dbg !6281
  %call90 = call fastcc zeroext i8 @contains(%struct.rtx_def* nonnull %insn61.0, %struct.htab* %38) #7, !dbg !6282
  %tobool91 = icmp eq i8 %call90, 0, !dbg !6282
  br i1 %tobool91, label %for.inc99, label %if.then92, !dbg !6283

if.then92:                                        ; preds = %land.lhs.true89
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn61.0, metadata !6178, metadata !DIExpression()), !dbg !6256
  %cmp93 = icmp eq %struct.rtx_def* %note62.0, null, !dbg !6284
  br i1 %cmp93, label %for.inc99, label %for.end104, !dbg !6287

for.inc99:                                        ; preds = %if.then82, %if.then92, %land.lhs.true89, %if.then76, %if.else87
  %note62.2 = phi %struct.rtx_def* [ %note62.0, %if.then76 ], [ %insn61.0, %if.then82 ], [ null, %if.then92 ], [ %note62.0, %land.lhs.true89 ], [ %note62.0, %if.else87 ], !dbg !6256
  %first.2 = phi %struct.rtx_def* [ %first.0, %if.then76 ], [ null, %if.then82 ], [ %insn61.0, %if.then92 ], [ null, %land.lhs.true89 ], [ %first.0, %if.else87 ], !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.2, metadata !6178, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note62.2, metadata !6179, metadata !DIExpression()), !dbg !6256
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn61.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6263
  %rt_rtx103 = bitcast %union.rtunion_def* %39 to %struct.rtx_def**, !dbg !6263
  br label %for.cond63, !dbg !6263, !llvm.loop !6288

for.end104:                                       ; preds = %if.then82, %if.then92, %land.rhs, %for.cond63
  %note62.3 = phi %struct.rtx_def* [ %note62.0, %land.rhs ], [ %insn61.0, %if.then82 ], [ %note62.0, %if.then92 ], [ %note62.0, %for.cond63 ], !dbg !6256
  %first.3 = phi %struct.rtx_def* [ %first.0, %land.rhs ], [ %first.0, %if.then82 ], [ %insn61.0, %if.then92 ], [ %first.0, %for.cond63 ], !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.3, metadata !6178, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note62.3, metadata !6179, metadata !DIExpression()), !dbg !6256
  %tobool105 = icmp eq %struct.rtx_def* %note62.3, null, !dbg !6290
  br i1 %tobool105, label %for.inc127, label %if.then106, !dbg !6292

if.then106:                                       ; preds = %for.end104
  %cmp107 = icmp eq %struct.rtx_def* %first.3, null, !dbg !6293
  br i1 %cmp107, label %if.then109, label %if.end113, !dbg !6296

if.then109:                                       ; preds = %if.then106
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6297
  %end_112 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 1, !dbg !6297
  %41 = load %struct.rtx_def*, %struct.rtx_def** %end_112, align 8, !dbg !6297
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !6178, metadata !DIExpression()), !dbg !6256
  br label %if.end113, !dbg !6298

if.end113:                                        ; preds = %if.then109, %if.then106
  %first.4 = phi %struct.rtx_def* [ %41, %if.then109 ], [ %first.3, %if.then106 ], !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.4, metadata !6178, metadata !DIExpression()), !dbg !6256
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6299
  %rt_rtx117 = bitcast %union.rtunion_def* %42 to %struct.rtx_def**, !dbg !6299
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !6299
  %cmp118 = icmp eq %struct.rtx_def* %43, %note62.3, !dbg !6301
  br i1 %cmp118, label %for.inc127, label %if.then120, !dbg !6302

if.then120:                                       ; preds = %if.end113
  call void @reorder_insns(%struct.rtx_def* nonnull %note62.3, %struct.rtx_def* nonnull %note62.3, %struct.rtx_def* %43) #6, !dbg !6303
  br label %for.inc127, !dbg !6303

for.inc127:                                       ; preds = %if.end113, %for.end104, %if.then120
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6164, metadata !DIExpression(DW_OP_deref)), !dbg !6255
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6254
  br label %for.cond57, !dbg !6254, !llvm.loop !6304

for.end128:                                       ; preds = %for.cond57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !6306
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6306
  br label %if.end129, !dbg !6307

if.end129:                                        ; preds = %if.end53, %for.end128
  ret void, !dbg !6308
}

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #1

declare dso_local void @reorder_insns(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6309 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6313, metadata !DIExpression()), !dbg !6315
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6316
  store i32 0, i32* %index, align 8, !dbg !6317
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6318
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6319
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6320
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6320
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6321 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6327, metadata !DIExpression()), !dbg !6328
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6329
  %tobool = icmp eq i8 %call, 0, !dbg !6329
  br i1 %tobool, label %if.then, label %if.else, !dbg !6331

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6332
  br label %return, !dbg !6334

if.else:                                          ; preds = %entry
  br label %return, !dbg !6335

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6337
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6337
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6337
  ret i8 %retval.0, !dbg !6338
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6339 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6344, metadata !DIExpression()), !dbg !6345
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6346
  %0 = load i32, i32* %index, align 8, !dbg !6346
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6346
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6346
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6346
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6346
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6346

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6346
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6346
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6346
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6346
  br label %cond.end, !dbg !6346

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6346
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6346
  %cmp = icmp ult i32 %0, %call2, !dbg !6346
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6346

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6346
  br label %cond.end5, !dbg !6346

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6347
  %inc = add i32 %5, 1, !dbg !6347
  store i32 %inc, i32* %index, align 8, !dbg !6347
  ret void, !dbg !6348
}

; Function Attrs: nounwind uwtable
define dso_local i8* @current_function_name() local_unnamed_addr #4 !dbg !6349 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6352
  %cmp = icmp eq %struct.function* %0, null, !dbg !6354
  br i1 %cmp, label %return, label %if.end, !dbg !6355

if.end:                                           ; preds = %entry
  %1 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !6356
  %decl = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 6, !dbg !6357
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6357
  %call = tail call i8* %1(%union.tree_node* %2, i32 2) #6, !dbg !6358
  br label %return, !dbg !6359

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8* [ %call, %if.end ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), %entry ], !dbg !6360
  ret i8* %retval.0, !dbg !6361
}

; Function Attrs: nounwind uwtable
define dso_local void @used_types_insert(%union.tree_node* %t) local_unnamed_addr #4 !dbg !6362 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6364, metadata !DIExpression()), !dbg !6365
  br label %while.cond, !dbg !6366

while.cond:                                       ; preds = %if.else, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %3, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6367
  %bf.load = load i64, i64* %0, align 8, !dbg !6367
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6367
  %cmp = icmp eq i64 %bf.cast2, 10, !dbg !6367
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !6367

lor.lhs.false:                                    ; preds = %while.cond
  %cmp5 = icmp eq i64 %bf.cast2, 12, !dbg !6367
  br i1 %cmp5, label %while.body, label %lor.rhs, !dbg !6368

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp10 = icmp eq i64 %bf.cast2, 15, !dbg !6369
  br i1 %cmp10, label %while.body, label %lor.rhs.while.end_crit_edge, !dbg !6366

lor.rhs.while.end_crit_edge:                      ; preds = %lor.rhs
  %t.addr.0.lcssa = phi %union.tree_node* [ %t.addr.0, %lor.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !6364, metadata !DIExpression()), !dbg !6365
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !6370
  %.pre = load %union.tree_node*, %union.tree_node** %.phi.trans.insert, align 8, !dbg !6372
  br label %while.end, !dbg !6366

while.body:                                       ; preds = %while.cond, %lor.lhs.false, %lor.rhs
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !6373
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !6373
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !6373
  br i1 %tobool, label %if.else, label %while.end.loopexit, !dbg !6375

if.else:                                          ; preds = %while.body
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6376
  %3 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !6376
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6364, metadata !DIExpression()), !dbg !6365
  br label %while.cond, !dbg !6366, !llvm.loop !6377

while.end.loopexit:                               ; preds = %while.body
  %.lcssa = phi %union.tree_node* [ %2, %while.body ], !dbg !6373
  %t.addr.0.lcssa9 = phi %union.tree_node* [ %t.addr.0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa9, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa9, metadata !6364, metadata !DIExpression()), !dbg !6365
  br label %while.end, !dbg !6379

while.end:                                        ; preds = %while.end.loopexit, %lor.rhs.while.end_crit_edge
  %t.addr.010 = phi %union.tree_node* [ %t.addr.0.lcssa, %lor.rhs.while.end_crit_edge ], [ %t.addr.0.lcssa9, %while.end.loopexit ]
  %4 = phi %union.tree_node* [ %.pre, %lor.rhs.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ], !dbg !6372
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.010, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.010, metadata !6364, metadata !DIExpression()), !dbg !6365
  %cmp14 = icmp eq %union.tree_node* %4, null, !dbg !6379
  br i1 %cmp14, label %while.end.if.then22_crit_edge, label %lor.lhs.false15, !dbg !6380

while.end.if.then22_crit_edge:                    ; preds = %while.end
  %.phi.trans.insert5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.010, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6370
  %.pre6 = load %union.tree_node*, %union.tree_node** %.phi.trans.insert5, align 8, !dbg !6381
  br label %if.then22, !dbg !6380

lor.lhs.false15:                                  ; preds = %while.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.010, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6382
  %6 = bitcast %union.tree_node** %5 to %struct.tree_type**, !dbg !6382
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !6382
  %name20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 12, !dbg !6382
  %8 = load %union.tree_node*, %union.tree_node** %name20, align 8, !dbg !6382
  %cmp21 = icmp eq %union.tree_node* %4, %8, !dbg !6383
  %9 = bitcast %struct.tree_type* %7 to %union.tree_node*, !dbg !6384
  br i1 %cmp21, label %if.then22, label %if.end25, !dbg !6384

if.then22:                                        ; preds = %while.end.if.then22_crit_edge, %lor.lhs.false15
  %10 = phi %union.tree_node* [ %.pre6, %while.end.if.then22_crit_edge ], [ %9, %lor.lhs.false15 ], !dbg !6381
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6364, metadata !DIExpression()), !dbg !6365
  br label %if.end25, !dbg !6385

if.end25:                                         ; preds = %if.then22, %lor.lhs.false15
  %t.addr.1 = phi %union.tree_node* [ %10, %if.then22 ], [ %t.addr.010, %lor.lhs.false15 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1, metadata !6364, metadata !DIExpression()), !dbg !6365
  %11 = load i32, i32* @debug_info_level, align 4, !dbg !6386
  %cmp26 = icmp eq i32 %11, 0, !dbg !6388
  br i1 %cmp26, label %if.end32, label %if.then27, !dbg !6389

if.then27:                                        ; preds = %if.end25
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6390
  %tobool28 = icmp eq %struct.function* %12, null, !dbg !6390
  br i1 %tobool28, label %if.else30, label %if.then29, !dbg !6393

if.then29:                                        ; preds = %if.then27
  tail call fastcc void @used_types_insert_helper(%union.tree_node* %t.addr.1, %struct.function* nonnull %12) #7, !dbg !6394
  br label %if.end32, !dbg !6394

if.else30:                                        ; preds = %if.then27
  %13 = load %union.tree_node*, %union.tree_node** @types_used_by_cur_var_decl, align 8, !dbg !6395
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %t.addr.1, %union.tree_node* null, %union.tree_node* %13) #6, !dbg !6395
  store %union.tree_node* %call, %union.tree_node** @types_used_by_cur_var_decl, align 8, !dbg !6396
  br label %if.end32

if.end32:                                         ; preds = %if.end25, %if.then29, %if.else30
  ret void, !dbg !6397
}

; Function Attrs: nounwind uwtable
define internal fastcc void @used_types_insert_helper(%union.tree_node* %type, %struct.function* %func) unnamed_addr #4 !dbg !6398 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6402, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata %struct.function* %func, metadata !6403, metadata !DIExpression()), !dbg !6407
  %cmp = icmp ne %union.tree_node* %type, null, !dbg !6408
  %cmp1 = icmp ne %struct.function* %func, null, !dbg !6409
  %or.cond = and i1 %cmp, %cmp1, !dbg !6410
  br i1 %or.cond, label %if.then, label %if.end10, !dbg !6410

if.then:                                          ; preds = %entry
  %used_types_hash = getelementptr inbounds %struct.function, %struct.function* %func, i64 0, i32 12, !dbg !6411
  %0 = load %struct.htab*, %struct.htab** %used_types_hash, align 8, !dbg !6411
  %cmp2 = icmp eq %struct.htab* %0, null, !dbg !6413
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !6414

if.then3:                                         ; preds = %if.then
  %1 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !6415
  %2 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** @htab_eq_pointer, align 8, !dbg !6415
  %call = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* %1, i32 (i8*, i8*)* %2, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !6415
  store %struct.htab* %call, %struct.htab** %used_types_hash, align 8, !dbg !6416
  br label %if.end, !dbg !6417

if.end:                                           ; preds = %if.then3, %if.then
  %3 = phi %struct.htab* [ %call, %if.then3 ], [ %0, %if.then ], !dbg !6418
  %4 = bitcast %union.tree_node* %type to i8*, !dbg !6419
  %call6 = tail call i8** @htab_find_slot(%struct.htab* %3, i8* nonnull %4, i32 1) #6, !dbg !6420
  call void @llvm.dbg.value(metadata i8** %call6, metadata !6404, metadata !DIExpression()), !dbg !6421
  %5 = load i8*, i8** %call6, align 8, !dbg !6422
  %cmp7 = icmp eq i8* %5, null, !dbg !6424
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !6425

if.then8:                                         ; preds = %if.end
  %6 = bitcast i8** %call6 to %union.tree_node**, !dbg !6426
  store %union.tree_node* %type, %union.tree_node** %6, align 8, !dbg !6426
  br label %if.end10, !dbg !6427

if.end10:                                         ; preds = %if.end, %if.then8, %entry
  ret void, !dbg !6428
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @types_used_by_vars_do_hash(i8* %x) #4 !dbg !6429 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !6431, metadata !DIExpression()), !dbg !6433
  %0 = bitcast i8* %x to %struct.types_used_by_vars_entry*, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.types_used_by_vars_entry* %0, metadata !6432, metadata !DIExpression()), !dbg !6433
  %call = tail call fastcc i32 @hash_types_used_by_vars_entry(%struct.types_used_by_vars_entry* %0) #7, !dbg !6435
  ret i32 %call, !dbg !6436
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hash_types_used_by_vars_entry(%struct.types_used_by_vars_entry* %entry1) unnamed_addr #4 !dbg !6437 {
entry:
  call void @llvm.dbg.value(metadata %struct.types_used_by_vars_entry* %entry1, metadata !6441, metadata !DIExpression()), !dbg !6442
  %tobool = icmp eq %struct.types_used_by_vars_entry* %entry1, null, !dbg !6443
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6443

land.lhs.true:                                    ; preds = %entry
  %var_decl = getelementptr inbounds %struct.types_used_by_vars_entry, %struct.types_used_by_vars_entry* %entry1, i64 0, i32 1, !dbg !6443
  %0 = load %union.tree_node*, %union.tree_node** %var_decl, align 8, !dbg !6443
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !6443
  br i1 %tobool2, label %cond.true, label %land.lhs.true3, !dbg !6443

land.lhs.true3:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %struct.types_used_by_vars_entry, %struct.types_used_by_vars_entry* %entry1, i64 0, i32 0, !dbg !6443
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6443
  %tobool4 = icmp eq %union.tree_node* %1, null, !dbg !6443
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !6443

cond.true:                                        ; preds = %land.lhs.true3, %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5498, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6443
  br label %cond.end, !dbg !6443

cond.end:                                         ; preds = %land.lhs.true3, %cond.true
  %2 = bitcast %struct.types_used_by_vars_entry* %entry1 to i8*, !dbg !6444
  %var_decl6 = getelementptr inbounds %struct.types_used_by_vars_entry, %struct.types_used_by_vars_entry* %entry1, i64 0, i32 1, !dbg !6444
  %3 = bitcast %union.tree_node** %var_decl6 to i8*, !dbg !6444
  %call = tail call i32 @iterative_hash(i8* nonnull %3, i64 8, i32 0) #6, !dbg !6444
  %call7 = tail call i32 @iterative_hash(i8* %2, i64 8, i32 %call) #6, !dbg !6444
  ret i32 %call7, !dbg !6445
}

; Function Attrs: nounwind uwtable
define dso_local i32 @types_used_by_vars_eq(i8* %x1, i8* %x2) #4 !dbg !6446 {
entry:
  call void @llvm.dbg.value(metadata i8* %x1, metadata !6448, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i8* %x2, metadata !6449, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i8* %x1, metadata !6450, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i8* %x2, metadata !6451, metadata !DIExpression()), !dbg !6452
  %var_decl = getelementptr inbounds i8, i8* %x1, i64 8, !dbg !6453
  %0 = bitcast i8* %var_decl to %union.tree_node**, !dbg !6453
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6453
  %var_decl1 = getelementptr inbounds i8, i8* %x2, i64 8, !dbg !6454
  %2 = bitcast i8* %var_decl1 to %union.tree_node**, !dbg !6454
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6454
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !6455
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6456

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x2, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i8* %x1, metadata !6450, metadata !DIExpression()), !dbg !6452
  %type = bitcast i8* %x1 to %union.tree_node**, !dbg !6457
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6457
  %type2 = bitcast i8* %x2 to %union.tree_node**, !dbg !6458
  %5 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !6458
  %cmp3 = icmp eq %union.tree_node* %4, %5, !dbg !6459
  %phitmp = zext i1 %cmp3 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !6460
}

; Function Attrs: nounwind uwtable
define dso_local void @types_used_by_var_decl_insert(%union.tree_node* %type, %union.tree_node* %var_decl) local_unnamed_addr #4 !dbg !6461 {
entry:
  %e = alloca %struct.types_used_by_vars_entry, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6465, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata %union.tree_node* %var_decl, metadata !6466, metadata !DIExpression()), !dbg !6474
  %cmp = icmp ne %union.tree_node* %type, null, !dbg !6475
  %cmp1 = icmp ne %union.tree_node* %var_decl, null, !dbg !6476
  %or.cond = and i1 %cmp, %cmp1, !dbg !6477
  br i1 %or.cond, label %if.then, label %if.end15, !dbg !6477

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.types_used_by_vars_entry* %e to i8*, !dbg !6478
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6478
  %var_decl2 = getelementptr inbounds %struct.types_used_by_vars_entry, %struct.types_used_by_vars_entry* %e, i64 0, i32 1, !dbg !6479
  store %union.tree_node* %var_decl, %union.tree_node** %var_decl2, align 8, !dbg !6480
  %type3 = getelementptr inbounds %struct.types_used_by_vars_entry, %struct.types_used_by_vars_entry* %e, i64 0, i32 0, !dbg !6481
  store %union.tree_node* %type, %union.tree_node** %type3, align 8, !dbg !6482
  %1 = load %struct.htab*, %struct.htab** @types_used_by_vars_hash, align 8, !dbg !6483
  %cmp4 = icmp eq %struct.htab* %1, null, !dbg !6485
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6486

if.then5:                                         ; preds = %if.then
  %call = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @types_used_by_vars_do_hash, i32 (i8*, i8*)* nonnull @types_used_by_vars_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !6487
  store %struct.htab* %call, %struct.htab** @types_used_by_vars_hash, align 8, !dbg !6488
  br label %if.end, !dbg !6489

if.end:                                           ; preds = %if.then5, %if.then
  %2 = phi %struct.htab* [ %call, %if.then5 ], [ %1, %if.then ], !dbg !6490
  call void @llvm.dbg.value(metadata %struct.types_used_by_vars_entry* %e, metadata !6470, metadata !DIExpression(DW_OP_deref)), !dbg !6491
  %call6 = call fastcc i32 @hash_types_used_by_vars_entry(%struct.types_used_by_vars_entry* nonnull %e) #7, !dbg !6492
  %call7 = call i8** @htab_find_slot_with_hash(%struct.htab* %2, i8* nonnull %0, i32 %call6, i32 1) #6, !dbg !6493
  call void @llvm.dbg.value(metadata i8** %call7, metadata !6467, metadata !DIExpression()), !dbg !6491
  %3 = load i8*, i8** %call7, align 8, !dbg !6494
  %cmp8 = icmp eq i8* %3, null, !dbg !6495
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !6496

if.then9:                                         ; preds = %if.end
  %call11 = call i8* @ggc_alloc_stat(i64 16) #6, !dbg !6497
  call void @llvm.dbg.value(metadata i8* %call11, metadata !6471, metadata !DIExpression()), !dbg !6498
  %type12 = bitcast i8* %call11 to %union.tree_node**, !dbg !6499
  store %union.tree_node* %type, %union.tree_node** %type12, align 8, !dbg !6500
  %var_decl13 = getelementptr inbounds i8, i8* %call11, i64 8, !dbg !6501
  %4 = bitcast i8* %var_decl13 to %union.tree_node**, !dbg !6501
  store %union.tree_node* %var_decl, %union.tree_node** %4, align 8, !dbg !6502
  store i8* %call11, i8** %call7, align 8, !dbg !6503
  br label %if.end14, !dbg !6504

if.end14:                                         ; preds = %if.then9, %if.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6505
  br label %if.end15, !dbg !6506

if.end15:                                         ; preds = %if.end14, %entry
  ret void, !dbg !6507
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_check_leaf_regs() #4 !dbg !6508 {
entry:
  ret i32 0, !dbg !6509
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_thread_prologue_and_epilogue() #4 !dbg !6510 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6511
  %tobool = icmp eq i32 %0, 0, !dbg !6511
  br i1 %tobool, label %if.end, label %if.then, !dbg !6513

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 @cleanup_cfg(i32 1) #6, !dbg !6514
  br label %if.end, !dbg !6514

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @thread_prologue_and_epilogue_insns() #7, !dbg !6515
  ret i32 0, !dbg !6516
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_match_asm_constraints() #4 !dbg !6517 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 32), align 4, !dbg !6524
  %tobool = icmp eq i8 %0, 0, !dbg !6526
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6527

if.end:                                           ; preds = %entry
  %call = tail call i32 @df_set_flags(i32 32) #6, !dbg !6528
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6529
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !6529
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6529
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !6529
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6529
  br label %for.cond, !dbg !6529

for.cond:                                         ; preds = %for.inc65, %if.end
  %4 = phi %struct.control_flow_graph* [ %2, %if.end ], [ %.pre1, %for.inc65 ], !dbg !6531
  %.pn = phi %struct.basic_block_def* [ %3, %if.end ], [ %bb.0, %for.inc65 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6533
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6519, metadata !DIExpression()), !dbg !6534
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !6531
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6531
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %5, !dbg !6531
  br i1 %cmp, label %cleanup.loopexit, label %for.body, !dbg !6529

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !6535
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6535
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6535
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !6535
  br label %for.cond2, !dbg !6535

for.cond2:                                        ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx64, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6538
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6520, metadata !DIExpression()), !dbg !6534
  %tobool3 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6539
  br i1 %tobool3, label %for.inc65, label %land.rhs, !dbg !6539

land.rhs:                                         ; preds = %for.cond2
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6539
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !6539
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6539
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6539
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !6539
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6539
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %10, !dbg !6539
  br i1 %cmp6, label %for.inc65, label %for.body7, !dbg !6535

for.body7:                                        ; preds = %land.rhs
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6541
  %bf.load = load i32, i32* %11, align 8, !dbg !6541
  %bf.clear = and i32 %bf.load, 65535, !dbg !6541
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !6541
  br i1 %cmp8, label %if.end21, label %lor.lhs.false, !dbg !6541

lor.lhs.false:                                    ; preds = %for.body7
  %cmp11 = icmp eq i32 %bf.clear, 7, !dbg !6541
  br i1 %cmp11, label %if.end21, label %lor.lhs.false12, !dbg !6541

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !6541
  br i1 %cmp15, label %if.end21, label %lor.lhs.false16, !dbg !6541

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !6541
  br i1 %cmp19, label %if.end21, label %for.inc, !dbg !6544

if.end21:                                         ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false, %for.body7
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6545
  %12 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 0, i64 0, !dbg !6545
  %rt_rtx25 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !6545
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !6545
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !6521, metadata !DIExpression()), !dbg !6534
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !6546
  %bf.load26 = load i32, i32* %14, align 8, !dbg !6546
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !6546
  %cmp28 = icmp eq i32 %bf.clear27, 15, !dbg !6548
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !6549

if.then29:                                        ; preds = %if.end21
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6550
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtvec_def**, !dbg !6550
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6550
  %arrayidx33 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 1, i64 0, !dbg !6550
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx33, metadata !6522, metadata !DIExpression()), !dbg !6534
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 0, !dbg !6551
  %16 = load i32, i32* %num_elem, align 8, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %16, metadata !6523, metadata !DIExpression()), !dbg !6534
  br label %if.end48, !dbg !6552

if.else:                                          ; preds = %if.end21
  %cmp40 = icmp eq i32 %bf.clear27, 23, !dbg !6553
  br i1 %cmp40, label %if.then41, label %for.inc, !dbg !6555

if.then41:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx25, metadata !6522, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32 1, metadata !6523, metadata !DIExpression()), !dbg !6534
  br label %if.end48

if.end48:                                         ; preds = %if.then41, %if.then29
  %noutputs.0 = phi i32 [ %16, %if.then29 ], [ 1, %if.then41 ], !dbg !6556
  %p_sets.0 = phi %struct.rtx_def** [ %arrayidx33, %if.then29 ], [ %rt_rtx25, %if.then41 ], !dbg !6556
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p_sets.0, metadata !6522, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32 %noutputs.0, metadata !6523, metadata !DIExpression()), !dbg !6534
  %17 = bitcast %struct.rtx_def** %p_sets.0 to i32**, !dbg !6557
  %18 = load i32*, i32** %17, align 8, !dbg !6557
  %bf.load49 = load i32, i32* %18, align 8, !dbg !6557
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !6557
  %cmp51 = icmp eq i32 %bf.clear50, 23, !dbg !6559
  br i1 %cmp51, label %land.lhs.true, label %for.inc, !dbg !6560

land.lhs.true:                                    ; preds = %if.end48
  %19 = getelementptr inbounds i32, i32* %18, i64 4, !dbg !6561
  %20 = bitcast i32* %19 to i32**, !dbg !6561
  %21 = load i32*, i32** %20, align 8, !dbg !6561
  %bf.load56 = load i32, i32* %21, align 8, !dbg !6561
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !6561
  %cmp58 = icmp eq i32 %bf.clear57, 17, !dbg !6562
  br i1 %cmp58, label %if.then59, label %for.inc, !dbg !6563

if.then59:                                        ; preds = %land.lhs.true
  tail call fastcc void @match_asm_constraints_1(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def** %p_sets.0, i32 %noutputs.0) #7, !dbg !6564
  br label %for.inc, !dbg !6564

for.inc:                                          ; preds = %if.end48, %land.lhs.true, %if.then59, %if.else, %lor.lhs.false16
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6539
  %rt_rtx64 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6539
  br label %for.cond2, !dbg !6539, !llvm.loop !6565

for.inc65:                                        ; preds = %land.rhs, %for.cond2
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6531
  %cfg1.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6567
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg1.phi.trans.insert, align 8, !dbg !6531
  br label %for.cond, !dbg !6531, !llvm.loop !6568

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6570

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 131072, %cleanup.loopexit ], !dbg !6534
  ret i32 %retval.0, !dbg !6570
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_temp_slot_address_entry(i8* %x_p) local_unnamed_addr #4 !dbg !6571 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6573, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6574, metadata !DIExpression()), !dbg !6576
  %cmp = icmp ne i8* %x_p, null, !dbg !6577
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !6577
  %or.cond = and i1 %cmp, %cmp1, !dbg !6577
  br i1 %or.cond, label %land.lhs.true2, label %if.end13, !dbg !6577

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !6577
  %tobool = icmp eq i32 %call, 0, !dbg !6577
  br i1 %tobool, label %do.body, label %if.end13, !dbg !6579

do.body:                                          ; preds = %land.lhs.true2
  %address = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6580
  %0 = bitcast i8* %address to %struct.rtx_def**, !dbg !6580
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6580
  %cmp3 = icmp eq %struct.rtx_def* %1, null, !dbg !6580
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !6584

if.then4:                                         ; preds = %do.body
  %2 = bitcast %struct.rtx_def* %1 to i8*, !dbg !6584
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %2) #6, !dbg !6580
  br label %do.body6, !dbg !6580

do.body6:                                         ; preds = %do.body, %if.then4
  %temp_slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6585
  %3 = bitcast i8* %temp_slot to %struct.temp_slot**, !dbg !6585
  %4 = load %struct.temp_slot*, %struct.temp_slot** %3, align 8, !dbg !6585
  %cmp7 = icmp eq %struct.temp_slot* %4, null, !dbg !6585
  br i1 %cmp7, label %if.end13, label %if.then8, !dbg !6588

if.then8:                                         ; preds = %do.body6
  %5 = bitcast %struct.temp_slot* %4 to i8*, !dbg !6588
  tail call void @gt_ggc_mx_temp_slot(i8* nonnull %5) #7, !dbg !6585
  br label %if.end13, !dbg !6585

if.end13:                                         ; preds = %do.body6, %land.lhs.true2, %if.then8, %entry
  ret void, !dbg !6589
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #1

declare dso_local void @gt_ggc_mx_rtx_def(i8*) #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_temp_slot(i8* %x_p) local_unnamed_addr #4 !dbg !6590 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6592, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6593, metadata !DIExpression()), !dbg !6595
  %cmp = icmp ne i8* %x_p, null, !dbg !6596
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !6596
  %or.cond = and i1 %cmp, %cmp1, !dbg !6596
  br i1 %or.cond, label %land.lhs.true2, label %if.end27, !dbg !6596

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !6596
  %tobool = icmp eq i32 %call, 0, !dbg !6596
  br i1 %tobool, label %do.body, label %if.end27, !dbg !6598

do.body:                                          ; preds = %land.lhs.true2
  %next = bitcast i8* %x_p to %struct.temp_slot**, !dbg !6599
  %0 = load %struct.temp_slot*, %struct.temp_slot** %next, align 8, !dbg !6599
  %cmp3 = icmp eq %struct.temp_slot* %0, null, !dbg !6599
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !6603

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.temp_slot* %0 to i8*, !dbg !6603
  tail call void @gt_ggc_mx_temp_slot(i8* nonnull %1) #7, !dbg !6599
  br label %do.body6, !dbg !6599

do.body6:                                         ; preds = %do.body, %if.then4
  %prev = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6604
  %2 = bitcast i8* %prev to %struct.temp_slot**, !dbg !6604
  %3 = load %struct.temp_slot*, %struct.temp_slot** %2, align 8, !dbg !6604
  %cmp7 = icmp eq %struct.temp_slot* %3, null, !dbg !6604
  br i1 %cmp7, label %do.body13, label %if.then8, !dbg !6607

if.then8:                                         ; preds = %do.body6
  %4 = bitcast %struct.temp_slot* %3 to i8*, !dbg !6607
  tail call void @gt_ggc_mx_temp_slot(i8* nonnull %4) #7, !dbg !6604
  br label %do.body13, !dbg !6604

do.body13:                                        ; preds = %do.body6, %if.then8
  %slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6608
  %5 = bitcast i8* %slot to %struct.rtx_def**, !dbg !6608
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !6608
  %cmp14 = icmp eq %struct.rtx_def* %6, null, !dbg !6608
  br i1 %cmp14, label %do.body20, label %if.then15, !dbg !6611

if.then15:                                        ; preds = %do.body13
  %7 = bitcast %struct.rtx_def* %6 to i8*, !dbg !6611
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %7) #6, !dbg !6608
  br label %do.body20, !dbg !6608

do.body20:                                        ; preds = %do.body13, %if.then15
  %type = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6612
  %8 = bitcast i8* %type to %union.tree_node**, !dbg !6612
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !6612
  %cmp21 = icmp eq %union.tree_node* %9, null, !dbg !6612
  br i1 %cmp21, label %if.end27, label %if.then22, !dbg !6615

if.then22:                                        ; preds = %do.body20
  %10 = bitcast %union.tree_node* %9 to i8*, !dbg !6615
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %10) #6, !dbg !6612
  br label %if.end27, !dbg !6612

if.end27:                                         ; preds = %do.body20, %land.lhs.true2, %if.then22, %entry
  ret void, !dbg !6616
}

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_m_P23temp_slot_address_entry4htab(i8* %x_p) #4 !dbg !6617 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6619, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6620, metadata !DIExpression()), !dbg !6630
  %cmp = icmp ne i8* %x_p, null, !dbg !6631
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !6631
  %or.cond = and i1 %cmp, %cmp1, !dbg !6631
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !6631

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !6631
  %tobool = icmp eq i32 %call, 0, !dbg !6631
  br i1 %tobool, label %if.then, label %if.end22, !dbg !6632

if.then:                                          ; preds = %land.lhs.true2
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !6633
  %0 = bitcast i8* %entries to i8***, !dbg !6633
  %1 = load i8**, i8*** %0, align 8, !dbg !6633
  %cmp3 = icmp eq i8** %1, null, !dbg !6634
  br i1 %cmp3, label %if.end22, label %for.cond.preheader, !dbg !6635

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6636
  %2 = bitcast i8* %size to i64*, !dbg !6636
  br label %for.cond, !dbg !6639

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !6640
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6641
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !6622, metadata !DIExpression()), !dbg !6640
  %4 = load i64, i64* %2, align 8, !dbg !6642
  %cmp5 = icmp eq i64 %i0.0, %4, !dbg !6643
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !6639

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !6644
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !6644
  %cmp7 = icmp eq i8* %5, null, !dbg !6644
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !6648

if.then8:                                         ; preds = %do.body
  tail call void @gt_ggc_mx_temp_slot_address_entry(i8* nonnull %5) #7, !dbg !6644
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !6640
  br label %for.inc, !dbg !6644

for.inc:                                          ; preds = %do.body, %if.then8
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then8 ], !dbg !6640
  %inc = add i64 %i0.0, 1, !dbg !6649
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6622, metadata !DIExpression()), !dbg !6640
  br label %for.cond, !dbg !6650, !llvm.loop !6651

do.body11:                                        ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !6640
  call void @llvm.dbg.value(metadata i8** %.lcssa, metadata !6627, metadata !DIExpression()), !dbg !6653
  %switch = icmp ult i8** %.lcssa, inttoptr (i64 2 to i8**), !dbg !6654
  br i1 %switch, label %if.end22, label %if.then16, !dbg !6654

if.then16:                                        ; preds = %do.body11
  %6 = bitcast i8** %.lcssa to i8*, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %6, metadata !6627, metadata !DIExpression()), !dbg !6653
  %call17 = tail call i32 @ggc_set_mark(i8* %6) #6, !dbg !6654
  br label %if.end22, !dbg !6654

if.end22:                                         ; preds = %if.then, %land.lhs.true2, %do.body11, %if.then16, %entry
  ret void, !dbg !6657
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_temp_slot_address_entry(i8* %x_p) local_unnamed_addr #4 !dbg !6658 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6660, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6661, metadata !DIExpression()), !dbg !6662
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_23temp_slot_address_entry, i32 63) #6, !dbg !6663
  %tobool = icmp eq i32 %call, 0, !dbg !6663
  br i1 %tobool, label %if.end10, label %do.body, !dbg !6665

do.body:                                          ; preds = %entry
  %address = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6666
  %0 = bitcast i8* %address to %struct.rtx_def**, !dbg !6666
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6666
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !6666
  br i1 %cmp, label %do.body3, label %if.then1, !dbg !6670

if.then1:                                         ; preds = %do.body
  %2 = bitcast %struct.rtx_def* %1 to i8*, !dbg !6670
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %2) #6, !dbg !6666
  br label %do.body3, !dbg !6666

do.body3:                                         ; preds = %do.body, %if.then1
  %temp_slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6671
  %3 = bitcast i8* %temp_slot to %struct.temp_slot**, !dbg !6671
  %4 = load %struct.temp_slot*, %struct.temp_slot** %3, align 8, !dbg !6671
  %cmp4 = icmp eq %struct.temp_slot* %4, null, !dbg !6671
  br i1 %cmp4, label %if.end10, label %if.then5, !dbg !6674

if.then5:                                         ; preds = %do.body3
  %5 = bitcast %struct.temp_slot* %4 to i8*, !dbg !6674
  tail call void @gt_pch_nx_temp_slot(i8* nonnull %5) #7, !dbg !6671
  br label %if.end10, !dbg !6671

if.end10:                                         ; preds = %do.body3, %entry, %if.then5
  ret void, !dbg !6675
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_23temp_slot_address_entry(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !6676 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !6681, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6682, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !6683, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !6684, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6685, metadata !DIExpression()), !dbg !6686
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !6687
  br i1 %cmp, label %if.then, label %if.end, !dbg !6689

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6685, metadata !DIExpression()), !dbg !6686
  %address = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6690
  tail call void %op(i8* nonnull %address, i8* %cookie) #6, !dbg !6691
  br label %if.end, !dbg !6691

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6692

if.then2:                                         ; preds = %if.end
  %temp_slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6693
  tail call void %op(i8* nonnull %temp_slot, i8* %cookie) #6, !dbg !6695
  br label %if.end3, !dbg !6695

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !6696
}

declare dso_local void @gt_pch_nx_rtx_def(i8*) #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_temp_slot(i8* %x_p) local_unnamed_addr #4 !dbg !6697 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6699, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6700, metadata !DIExpression()), !dbg !6701
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_9temp_slot, i32 124) #6, !dbg !6702
  %tobool = icmp eq i32 %call, 0, !dbg !6702
  br i1 %tobool, label %if.end24, label %do.body, !dbg !6704

do.body:                                          ; preds = %entry
  %next = bitcast i8* %x_p to %struct.temp_slot**, !dbg !6705
  %0 = load %struct.temp_slot*, %struct.temp_slot** %next, align 8, !dbg !6705
  %cmp = icmp eq %struct.temp_slot* %0, null, !dbg !6705
  br i1 %cmp, label %do.body3, label %if.then1, !dbg !6709

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.temp_slot* %0 to i8*, !dbg !6709
  tail call void @gt_pch_nx_temp_slot(i8* nonnull %1) #7, !dbg !6705
  br label %do.body3, !dbg !6705

do.body3:                                         ; preds = %do.body, %if.then1
  %prev = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6710
  %2 = bitcast i8* %prev to %struct.temp_slot**, !dbg !6710
  %3 = load %struct.temp_slot*, %struct.temp_slot** %2, align 8, !dbg !6710
  %cmp4 = icmp eq %struct.temp_slot* %3, null, !dbg !6710
  br i1 %cmp4, label %do.body10, label %if.then5, !dbg !6713

if.then5:                                         ; preds = %do.body3
  %4 = bitcast %struct.temp_slot* %3 to i8*, !dbg !6713
  tail call void @gt_pch_nx_temp_slot(i8* nonnull %4) #7, !dbg !6710
  br label %do.body10, !dbg !6710

do.body10:                                        ; preds = %do.body3, %if.then5
  %slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6714
  %5 = bitcast i8* %slot to %struct.rtx_def**, !dbg !6714
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !6714
  %cmp11 = icmp eq %struct.rtx_def* %6, null, !dbg !6714
  br i1 %cmp11, label %do.body17, label %if.then12, !dbg !6717

if.then12:                                        ; preds = %do.body10
  %7 = bitcast %struct.rtx_def* %6 to i8*, !dbg !6717
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %7) #6, !dbg !6714
  br label %do.body17, !dbg !6714

do.body17:                                        ; preds = %do.body10, %if.then12
  %type = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6718
  %8 = bitcast i8* %type to %union.tree_node**, !dbg !6718
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !6718
  %cmp18 = icmp eq %union.tree_node* %9, null, !dbg !6718
  br i1 %cmp18, label %if.end24, label %if.then19, !dbg !6721

if.then19:                                        ; preds = %do.body17
  %10 = bitcast %union.tree_node* %9 to i8*, !dbg !6721
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %10) #6, !dbg !6718
  br label %if.end24, !dbg !6718

if.end24:                                         ; preds = %do.body17, %entry, %if.then19
  ret void, !dbg !6722
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_9temp_slot(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !6723 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !6725, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6726, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !6727, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !6728, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6729, metadata !DIExpression()), !dbg !6730
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !6731
  br i1 %cmp, label %if.then, label %if.end, !dbg !6733

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6729, metadata !DIExpression()), !dbg !6730
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !6734
  br label %if.end, !dbg !6734

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6735

if.then2:                                         ; preds = %if.end
  %prev = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !6736
  tail call void %op(i8* nonnull %prev, i8* %cookie) #6, !dbg !6738
  br label %if.end3, !dbg !6738

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6739

if.then5:                                         ; preds = %if.end3
  %slot = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !6740
  tail call void %op(i8* nonnull %slot, i8* %cookie) #6, !dbg !6742
  br label %if.end6, !dbg !6742

if.end6:                                          ; preds = %if.then5, %if.end3
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6743

if.then8:                                         ; preds = %if.end6
  %type = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6744
  tail call void %op(i8* nonnull %type, i8* %cookie) #6, !dbg !6746
  br label %if.end9, !dbg !6746

if.end9:                                          ; preds = %if.then8, %if.end6
  ret void, !dbg !6747
}

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_n_P23temp_slot_address_entry4htab(i8* %x_p) #4 !dbg !6748 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6750, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6751, metadata !DIExpression()), !dbg !6757
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P23temp_slot_address_entry4htab, i32 199) #6, !dbg !6758
  %tobool = icmp eq i32 %call, 0, !dbg !6758
  br i1 %tobool, label %if.end11, label %if.then, !dbg !6759

if.then:                                          ; preds = %entry
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !6760
  %0 = bitcast i8* %entries to i8***, !dbg !6760
  %1 = load i8**, i8*** %0, align 8, !dbg !6760
  %cmp = icmp eq i8** %1, null, !dbg !6761
  br i1 %cmp, label %if.end11, label %for.cond.preheader, !dbg !6762

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6763
  %2 = bitcast i8* %size to i64*, !dbg !6763
  br label %for.cond, !dbg !6766

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !6767
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6768
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !6752, metadata !DIExpression()), !dbg !6767
  %4 = load i64, i64* %2, align 8, !dbg !6769
  %cmp2 = icmp eq i64 %i0.0, %4, !dbg !6770
  br i1 %cmp2, label %for.end, label %do.body, !dbg !6766

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !6771
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !6771
  %cmp4 = icmp eq i8* %5, null, !dbg !6771
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !6775

if.then5:                                         ; preds = %do.body
  tail call void @gt_pch_nx_temp_slot_address_entry(i8* nonnull %5) #7, !dbg !6771
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !6767
  br label %for.inc, !dbg !6771

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !6767
  %inc = add i64 %i0.0, 1, !dbg !6776
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6752, metadata !DIExpression()), !dbg !6767
  br label %for.cond, !dbg !6777, !llvm.loop !6778

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !6767
  %6 = bitcast i8** %.lcssa to i8*, !dbg !6780
  %call9 = tail call i32 @gt_pch_note_object(i8* %6, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P23temp_slot_address_entry4htab, i32 217) #6, !dbg !6781
  br label %if.end11, !dbg !6782

if.end11:                                         ; preds = %if.then, %entry, %for.end
  ret void, !dbg !6783
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_P23temp_slot_address_entry4htab(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !6784 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !6786, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6787, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !6788, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !6789, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !6790, metadata !DIExpression()), !dbg !6794
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !6795
  %0 = bitcast i8* %entries to i8***, !dbg !6795
  %1 = load i8**, i8*** %0, align 8, !dbg !6795
  %cmp = icmp eq i8** %1, null, !dbg !6796
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !6797

for.cond.preheader:                               ; preds = %entry
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !6798
  %2 = bitcast i8* %size to i64*, !dbg !6798
  %3 = bitcast i8* %entries to i8**, !dbg !6801
  br label %for.cond, !dbg !6804

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6805
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !6791, metadata !DIExpression()), !dbg !6806
  %4 = load i64, i64* %2, align 8, !dbg !6807
  %cmp1 = icmp eq i64 %i0.0, %4, !dbg !6808
  br i1 %cmp1, label %for.end, label %for.body, !dbg !6804

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %3, align 8, !dbg !6809
  %cmp3 = icmp eq i8* %5, %this_obj, !dbg !6810
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !6811

if.then4:                                         ; preds = %for.body
  %6 = bitcast i8* %5 to i8**, !dbg !6811
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %i0.0, !dbg !6812
  %7 = bitcast i8** %arrayidx to i8*, !dbg !6813
  tail call void %op(i8* %7, i8* %cookie) #6, !dbg !6814
  br label %for.inc, !dbg !6814

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !6815
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6791, metadata !DIExpression()), !dbg !6806
  br label %for.cond, !dbg !6816, !llvm.loop !6817

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %x_p, %this_obj, !dbg !6819
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !6821

if.then7:                                         ; preds = %for.end
  tail call void %op(i8* nonnull %entries, i8* %cookie) #6, !dbg !6822
  br label %if.end10, !dbg !6822

if.end10:                                         ; preds = %entry, %for.end, %if.then7
  ret void, !dbg !6823
}

declare dso_local i32 @ggc_marked_p(i8*) #1

declare dso_local void @gt_ggc_m_P7rtx_def4htab(i8*) #1

declare dso_local void @gt_pch_n_P7rtx_def4htab(i8*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_function_p_heap_reserve(%struct.VEC_function_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6824 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_function_p_heap** %vec_, metadata !6828, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 1, metadata !6829, metadata !DIExpression()), !dbg !6831
  %0 = load %struct.VEC_function_p_heap*, %struct.VEC_function_p_heap** %vec_, align 8, !dbg !6832
  %tobool = icmp eq %struct.VEC_function_p_heap* %0, null, !dbg !6832
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6832

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_function_p_heap, %struct.VEC_function_p_heap* %0, i64 0, i32 0, !dbg !6832
  br label %cond.end, !dbg !6832

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_function_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6832
  %call = tail call fastcc i32 @VEC_function_p_base_space(%struct.VEC_function_p_base* %cond, i32 1) #7, !dbg !6832
  %tobool1 = icmp eq i32 %call, 0, !dbg !6832
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6832
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6830, metadata !DIExpression()), !dbg !6831
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6832

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_function_p_heap** %vec_ to i8**, !dbg !6833
  %2 = load i8*, i8** %1, align 8, !dbg !6833
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6833
  store i8* %call3, i8** %1, align 8, !dbg !6833
  br label %if.end, !dbg !6833

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6832
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.function** @VEC_function_p_base_quick_push(%struct.VEC_function_p_base* %vec_, %struct.function* %obj_) unnamed_addr #0 !dbg !6835 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_function_p_base* %vec_, metadata !6839, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.function* %obj_, metadata !6840, metadata !DIExpression()), !dbg !6842
  %num1 = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 0, !dbg !6843
  %0 = load i32, i32* %num1, align 8, !dbg !6843
  %inc = add i32 %0, 1, !dbg !6843
  store i32 %inc, i32* %num1, align 8, !dbg !6843
  %idxprom = zext i32 %0 to i64, !dbg !6843
  %arrayidx = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6843
  call void @llvm.dbg.value(metadata %struct.function** %arrayidx, metadata !6841, metadata !DIExpression()), !dbg !6842
  store %struct.function* %obj_, %struct.function** %arrayidx, align 8, !dbg !6843
  ret %struct.function** %arrayidx, !dbg !6843
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_function_p_base_space(%struct.VEC_function_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6844 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_function_p_base* %vec_, metadata !6848, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.value(metadata i32 1, metadata !6849, metadata !DIExpression()), !dbg !6850
  %tobool = icmp eq %struct.VEC_function_p_base* %vec_, null, !dbg !6851
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6851

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 1, !dbg !6851
  %0 = load i32, i32* %alloc, align 4, !dbg !6851
  %num = getelementptr inbounds %struct.VEC_function_p_base, %struct.VEC_function_p_base* %vec_, i64 0, i32 0, !dbg !6851
  %1 = load i32, i32* %num, align 8, !dbg !6851
  %cmp1 = icmp ne i32 %0, %1, !dbg !6851
  %phitmp = zext i1 %cmp1 to i32, !dbg !6851
  br label %cond.end, !dbg !6851

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6851
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #1

declare dso_local i32 @ix86_local_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_temp_slot_p_base_length(%struct.VEC_temp_slot_p_base* %vec_) unnamed_addr #0 !dbg !6852 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_base* %vec_, metadata !6858, metadata !DIExpression()), !dbg !6859
  %tobool = icmp eq %struct.VEC_temp_slot_p_base* %vec_, null, !dbg !6860
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6860

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_temp_slot_p_base, %struct.VEC_temp_slot_p_base* %vec_, i64 0, i32 0, !dbg !6860
  %0 = load i32, i32* %num, align 8, !dbg !6860
  br label %cond.end, !dbg !6860

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6860
  ret i32 %cond, !dbg !6860
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_temp_slot_p_gc_safe_grow_cleared(%struct.VEC_temp_slot_p_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !6861 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), metadata !6866, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6867, metadata !DIExpression()), !dbg !6869
  %0 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6870
  %tobool = icmp eq %struct.VEC_temp_slot_p_gc* %0, null, !dbg !6870
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6870

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %0, i64 0, i32 0, !dbg !6870
  br label %cond.end, !dbg !6870

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_temp_slot_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6870
  %call = tail call fastcc i32 @VEC_temp_slot_p_base_length(%struct.VEC_temp_slot_p_base* %cond) #7, !dbg !6870
  call void @llvm.dbg.value(metadata i32 %call, metadata !6868, metadata !DIExpression()), !dbg !6869
  tail call fastcc void @VEC_temp_slot_p_gc_safe_grow(%struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), i32 %size_) #7, !dbg !6870
  %1 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6870
  %tobool1 = icmp eq %struct.VEC_temp_slot_p_gc* %1, null, !dbg !6870
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6870

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %1, i64 0, i32 0, !dbg !6870
  br label %cond.end5, !dbg !6870

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_temp_slot_p_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !6870
  %call7 = tail call fastcc %struct.temp_slot** @VEC_temp_slot_p_base_address(%struct.VEC_temp_slot_p_base* %cond6) #7, !dbg !6870
  %idxprom = sext i32 %call to i64, !dbg !6870
  %arrayidx = getelementptr inbounds %struct.temp_slot*, %struct.temp_slot** %call7, i64 %idxprom, !dbg !6870
  %2 = bitcast %struct.temp_slot** %arrayidx to i8*, !dbg !6870
  %sub = sub nsw i32 %size_, %call, !dbg !6870
  %conv = sext i32 %sub to i64, !dbg !6870
  %mul = shl nsw i64 %conv, 3, !dbg !6870
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !6870
  ret void, !dbg !6870
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.temp_slot** @VEC_temp_slot_p_base_address(%struct.VEC_temp_slot_p_base* %vec_) unnamed_addr #0 !dbg !6871 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_base* %vec_, metadata !6877, metadata !DIExpression()), !dbg !6878
  %tobool = icmp eq %struct.VEC_temp_slot_p_base* %vec_, null, !dbg !6879
  %arraydecay = getelementptr inbounds %struct.VEC_temp_slot_p_base, %struct.VEC_temp_slot_p_base* %vec_, i64 0, i32 2, i64 0, !dbg !6879
  %cond = select i1 %tobool, %struct.temp_slot** null, %struct.temp_slot** %arraydecay, !dbg !6879
  ret %struct.temp_slot** %cond, !dbg !6879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_temp_slot_p_gc_safe_grow(%struct.VEC_temp_slot_p_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !6880 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), metadata !6882, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6883, metadata !DIExpression()), !dbg !6884
  %cmp = icmp sgt i32 %size_, -1, !dbg !6885
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6885

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6885
  %tobool = icmp eq %struct.VEC_temp_slot_p_gc* %0, null, !dbg !6885
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6885

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %0, i64 0, i32 0, !dbg !6885
  br label %cond.end, !dbg !6885

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_temp_slot_p_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !6885
  %call = tail call fastcc i32 @VEC_temp_slot_p_base_length(%struct.VEC_temp_slot_p_base* %cond) #7, !dbg !6885
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6885
  %tobool2 = icmp eq %struct.VEC_temp_slot_p_gc* %1, null, !dbg !6885
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !6885

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %1, i64 0, i32 0, i32 0, !dbg !6885
  %2 = load i32, i32* %num, align 8, !dbg !6885
  br label %cond.end11, !dbg !6885

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !6885
  %sub = sub nsw i32 %size_, %cond12, !dbg !6885
  %call13 = tail call fastcc i32 @VEC_temp_slot_p_gc_reserve_exact(%struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), i32 %sub) #7, !dbg !6885
  %3 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6885
  %num20 = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %3, i64 0, i32 0, i32 0, !dbg !6885
  store i32 %size_, i32* %num20, align 8, !dbg !6885
  ret void, !dbg !6885
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_temp_slot_p_gc_reserve_exact(%struct.VEC_temp_slot_p_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6886 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6891, metadata !DIExpression()), !dbg !6893
  %0 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6894
  %tobool = icmp eq %struct.VEC_temp_slot_p_gc* %0, null, !dbg !6894
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6894

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %0, i64 0, i32 0, !dbg !6894
  br label %cond.end, !dbg !6894

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_temp_slot_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6894
  %call = tail call fastcc i32 @VEC_temp_slot_p_base_space(%struct.VEC_temp_slot_p_base* %cond, i32 %alloc_) #7, !dbg !6894
  %tobool1 = icmp eq i32 %call, 0, !dbg !6894
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6894
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6892, metadata !DIExpression()), !dbg !6893
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6894

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19) to i8**), align 8, !dbg !6895
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !6895
  store i8* %call3, i8** bitcast (%struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19) to i8**), align 8, !dbg !6895
  br label %if.end, !dbg !6895

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6894
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_temp_slot_p_base_space(%struct.VEC_temp_slot_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6897 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_temp_slot_p_base* %vec_, metadata !6901, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6902, metadata !DIExpression()), !dbg !6903
  %tobool = icmp eq %struct.VEC_temp_slot_p_base* %vec_, null, !dbg !6904
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6904

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_temp_slot_p_base, %struct.VEC_temp_slot_p_base* %vec_, i64 0, i32 1, !dbg !6904
  %0 = load i32, i32* %alloc, align 4, !dbg !6904
  %num = getelementptr inbounds %struct.VEC_temp_slot_p_base, %struct.VEC_temp_slot_p_base* %vec_, i64 0, i32 0, !dbg !6904
  %1 = load i32, i32* %num, align 8, !dbg !6904
  %sub = sub i32 %0, %1, !dbg !6904
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6904
  br label %cond.end, !dbg !6904

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6904
  br label %cond.end, !dbg !6904

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6904
  ret i32 %cond, !dbg !6904
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @temp_slot_address_compute_hash(%struct.temp_slot_address_entry* %t) unnamed_addr #4 !dbg !6905 {
entry:
  %do_not_record = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.temp_slot_address_entry* %t, metadata !6909, metadata !DIExpression()), !dbg !6911
  %0 = bitcast i32* %do_not_record to i8*, !dbg !6912
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6912
  call void @llvm.dbg.value(metadata i32 0, metadata !6910, metadata !DIExpression()), !dbg !6911
  store i32 0, i32* %do_not_record, align 4, !dbg !6913
  %address = getelementptr inbounds %struct.temp_slot_address_entry, %struct.temp_slot_address_entry* %t, i64 0, i32 1, !dbg !6914
  %1 = load %struct.rtx_def*, %struct.rtx_def** %address, align 8, !dbg !6914
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6915
  %bf.load = load i32, i32* %.cast, align 8, !dbg !6915
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6915
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6915
  call void @llvm.dbg.value(metadata i32* %do_not_record, metadata !6910, metadata !DIExpression(DW_OP_deref)), !dbg !6911
  %call = call i32 @hash_rtx(%struct.rtx_def* %1, i32 %bf.clear, i32* nonnull %do_not_record, i32* null, i8 zeroext 0) #6, !dbg !6916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6917
  ret i32 %call, !dbg !6918
}

declare dso_local i32 @hash_rtx(%struct.rtx_def*, i32, i32*, i32*, i8 zeroext) local_unnamed_addr #1

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @max_slot_level() unnamed_addr #4 !dbg !6919 {
entry:
  %0 = load %struct.VEC_temp_slot_p_gc*, %struct.VEC_temp_slot_p_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 19), align 8, !dbg !6920
  %tobool = icmp eq %struct.VEC_temp_slot_p_gc* %0, null, !dbg !6920
  br i1 %tobool, label %return, label %if.end, !dbg !6922

if.end:                                           ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_temp_slot_p_gc, %struct.VEC_temp_slot_p_gc* %0, i64 0, i32 0, !dbg !6923
  %call = tail call fastcc i32 @VEC_temp_slot_p_base_length(%struct.VEC_temp_slot_p_base* nonnull %base) #7, !dbg !6923
  %sub = add i32 %call, -1, !dbg !6924
  br label %return, !dbg !6925

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %sub, %if.end ], [ -1, %entry ], !dbg !6926
  ret i32 %retval.0, !dbg !6927
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @remove_unused_temp_slot_addresses_1(i8** %slot, i8* %data) #4 !dbg !6928 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !6932, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i8* %data, metadata !6933, metadata !DIExpression()), !dbg !6935
  %0 = bitcast i8** %slot to %struct.temp_slot_address_entry**, !dbg !6936
  %1 = load %struct.temp_slot_address_entry*, %struct.temp_slot_address_entry** %0, align 8, !dbg !6936
  call void @llvm.dbg.value(metadata %struct.temp_slot_address_entry* %1, metadata !6934, metadata !DIExpression()), !dbg !6935
  %temp_slot = getelementptr inbounds %struct.temp_slot_address_entry, %struct.temp_slot_address_entry* %1, i64 0, i32 2, !dbg !6937
  %2 = load %struct.temp_slot*, %struct.temp_slot** %temp_slot, align 8, !dbg !6937
  %in_use = getelementptr inbounds %struct.temp_slot, %struct.temp_slot* %2, i64 0, i32 6, !dbg !6939
  %3 = load i8, i8* %in_use, align 4, !dbg !6939
  %tobool = icmp eq i8 %3, 0, !dbg !6940
  br i1 %tobool, label %if.then, label %if.end, !dbg !6941

if.then:                                          ; preds = %entry
  store i8* null, i8** %slot, align 8, !dbg !6942
  br label %if.end, !dbg !6943

if.end:                                           ; preds = %entry, %if.then
  ret i32 1, !dbg !6944
}

declare dso_local i32 @exp_equiv_p(%struct.rtx_def*, %struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %x, i64* %poffset) unnamed_addr #4 !dbg !6945 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6950, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i64* %poffset, metadata !6951, metadata !DIExpression()), !dbg !6954
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16, !dbg !6955
  %cmp = icmp eq %struct.rtx_def* %0, %x, !dbg !6957
  br i1 %cmp, label %if.then, label %if.else5, !dbg !6958

if.then:                                          ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !6959
  %tobool = icmp eq i8 %1, 0, !dbg !6959
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6959

land.lhs.true:                                    ; preds = %if.then
  %2 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 45), align 1, !dbg !6959
  %tobool2 = icmp eq i8 %2, 0, !dbg !6959
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !6962

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i64 0, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30, !dbg !6963

if.else:                                          ; preds = %land.lhs.true, %if.then
  call void @llvm.dbg.value(metadata i64 0, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30

if.else5:                                         ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !6965
  %cmp6 = icmp eq %struct.rtx_def* %3, %x, !dbg !6967
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !6968

if.then8:                                         ; preds = %if.else5
  call void @llvm.dbg.value(metadata i64 0, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30, !dbg !6969

if.else10:                                        ; preds = %if.else5
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 16, !dbg !6970
  %cmp11 = icmp eq %struct.rtx_def* %4, %x, !dbg !6972
  br i1 %cmp11, label %if.then13, label %if.else15, !dbg !6973

if.then13:                                        ; preds = %if.else10
  %5 = load i32, i32* @dynamic_offset, align 4, !dbg !6974
  %conv14 = sext i32 %5 to i64, !dbg !6974
  call void @llvm.dbg.value(metadata i64 %conv14, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30, !dbg !6975

if.else15:                                        ; preds = %if.else10
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !6976
  %cmp16 = icmp eq %struct.rtx_def* %6, %x, !dbg !6978
  br i1 %cmp16, label %if.then18, label %if.else20, !dbg !6979

if.then18:                                        ; preds = %if.else15
  call void @llvm.dbg.value(metadata i64 0, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30, !dbg !6980

if.else20:                                        ; preds = %if.else15
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 16, !dbg !6981
  %cmp21 = icmp eq %struct.rtx_def* %7, %x, !dbg !6983
  br i1 %cmp21, label %if.then23, label %cleanup, !dbg !6984

if.then23:                                        ; preds = %if.else20
  %8 = load i32, i32* @cfa_offset, align 4, !dbg !6985
  %conv24 = sext i32 %8 to i64, !dbg !6985
  call void @llvm.dbg.value(metadata i64 %conv24, metadata !6953, metadata !DIExpression()), !dbg !6954
  br label %if.end30

if.end30:                                         ; preds = %if.then8, %if.then18, %if.then23, %if.then13, %if.then3, %if.else
  %new_rtx.4.in = phi %struct.rtx_def** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), %if.then3 ], [ getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else ], [ getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), %if.then8 ], [ getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then13 ], [ getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then18 ], [ getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.then23 ]
  %offset.4 = phi i64 [ 0, %if.then3 ], [ 0, %if.else ], [ 0, %if.then8 ], [ %conv14, %if.then13 ], [ 0, %if.then18 ], [ %conv24, %if.then23 ], !dbg !6987
  %new_rtx.4 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.4.in, align 8, !dbg !6987
  call void @llvm.dbg.value(metadata i64 %offset.4, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.4, metadata !6952, metadata !DIExpression()), !dbg !6954
  store i64 %offset.4, i64* %poffset, align 8, !dbg !6988
  br label %cleanup, !dbg !6989

cleanup:                                          ; preds = %if.else20, %if.end30
  %retval.0 = phi %struct.rtx_def* [ %new_rtx.4, %if.end30 ], [ null, %if.else20 ], !dbg !6954
  ret %struct.rtx_def* %retval.0, !dbg !6990
}

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @ix86_cfun_abi() local_unnamed_addr #1

declare dso_local i32 @ix86_function_type_abi(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @init_recog() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_virtual_regs_in_insn(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !6991 {
entry:
  %offset = alloca i64, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %changed = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6993, metadata !DIExpression()), !dbg !7009
  %0 = bitcast i64* %offset to i8*, !dbg !7010
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7010
  call void @llvm.dbg.value(metadata i8 0, metadata !6997, metadata !DIExpression()), !dbg !7009
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7011
  %bf.load = load i32, i32* %1, align 8, !dbg !7011
  %bf.clear = and i32 %bf.load, 65535, !dbg !7011
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7011
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !7011

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7011
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !7011

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7011
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !7011

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7011
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !7011

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7011
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7011
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !7011
  %4 = load i32*, i32** %3, align 8, !dbg !7011
  %bf.load12 = load i32, i32* %4, align 8, !dbg !7011
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7011
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !7011
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !7011
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !7011

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %5) #6, !dbg !7011
  br label %cond.end25, !dbg !7011

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %5, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !7011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !6998, metadata !DIExpression()), !dbg !7009
  %tobool = icmp eq %struct.rtx_def* %cond26, null, !dbg !7012
  br i1 %tobool, label %if.else, label %if.then, !dbg !7014

if.then:                                          ; preds = %cond.end25
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7015
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !7015
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !7015
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7009
  %call31 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %6, i64* nonnull %offset) #7, !dbg !7017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !6999, metadata !DIExpression()), !dbg !7009
  %tobool32 = icmp eq %struct.rtx_def* %call31, null, !dbg !7018
  br i1 %tobool32, label %if.end54, label %if.then33, !dbg !7020

if.then33:                                        ; preds = %if.then
  call void @start_sequence() #6, !dbg !7021
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7023
  %rt_rtx37 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !7023
  %call38 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx37, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* null) #6, !dbg !7024
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !7025
  %bf.load39 = load i32, i32* %8, align 8, !dbg !7025
  %bf.lshr = lshr i32 %bf.load39, 16, !dbg !7025
  %bf.clear40 = and i32 %bf.lshr, 255, !dbg !7025
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !7026
  %10 = load i64, i64* %offset, align 8, !dbg !7027
  call void @llvm.dbg.value(metadata i64 %10, metadata !6994, metadata !DIExpression()), !dbg !7009
  %sub = sub nsw i64 0, %10, !dbg !7027
  %call45 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !7027
  %call46 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear40, %struct.rtx_def* %9, %struct.rtx_def* %call45) #6, !dbg !7028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call46, metadata !7000, metadata !DIExpression()), !dbg !7009
  %call47 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call46, %struct.rtx_def* nonnull %call31) #6, !dbg !7029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call47, metadata !7000, metadata !DIExpression()), !dbg !7009
  %cmp48 = icmp eq %struct.rtx_def* %call47, %call31, !dbg !7030
  br i1 %cmp48, label %if.end, label %if.then49, !dbg !7032

if.then49:                                        ; preds = %if.then33
  %call50 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %call31, %struct.rtx_def* %call47) #6, !dbg !7033
  br label %if.end, !dbg !7033

if.end:                                           ; preds = %if.then33, %if.then49
  %call51 = call %struct.rtx_def* @get_insns() #6, !dbg !7034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7035
  %call52 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call51, %struct.rtx_def* %insn) #6, !dbg !7036
  %call53 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !7037
  br label %cleanup360, !dbg !7038

if.end54:                                         ; preds = %if.then
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7039
  %rt_rtx58 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !7039
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !7039
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7009
  %call59 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %12, i64* nonnull %offset) #7, !dbg !7040
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !6999, metadata !DIExpression()), !dbg !7009
  %tobool60 = icmp ne %struct.rtx_def* %call59, null, !dbg !7041
  %13 = load i64, i64* %offset, align 8, !dbg !7043
  call void @llvm.dbg.value(metadata i64 %13, metadata !6994, metadata !DIExpression()), !dbg !7009
  %cmp61 = icmp ne i64 %13, 0, !dbg !7044
  %or.cond = and i1 %tobool60, %cmp61, !dbg !7045
  br i1 %or.cond, label %land.lhs.true62, label %if.end106, !dbg !7045

land.lhs.true62:                                  ; preds = %if.end54
  %14 = bitcast %union.rtunion_def* %arrayidx29 to i32**, !dbg !7046
  %15 = load i32*, i32** %14, align 8, !dbg !7046
  %bf.load67 = load i32, i32* %15, align 8, !dbg !7046
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !7046
  %cmp69 = icmp eq i32 %bf.clear68, 37, !dbg !7046
  br i1 %cmp69, label %land.lhs.true70, label %if.end106, !dbg !7047

land.lhs.true70:                                  ; preds = %land.lhs.true62
  %16 = bitcast i32* %15 to %struct.rtx_def*, !dbg !7047
  %call75 = call fastcc i32 @rhs_regno(%struct.rtx_def* %16) #7, !dbg !7048
  %cmp76 = icmp ugt i32 %call75, 57, !dbg !7049
  br i1 %cmp76, label %if.then77, label %if.end106, !dbg !7050

if.then77:                                        ; preds = %land.lhs.true70
  call void @start_sequence() #6, !dbg !7051
  %17 = load i32*, i32** %14, align 8, !dbg !7053
  %bf.load82 = load i32, i32* %17, align 8, !dbg !7053
  %bf.lshr83 = lshr i32 %bf.load82, 16, !dbg !7053
  %bf.clear84 = and i32 %bf.lshr83, 255, !dbg !7053
  %18 = load i64, i64* %offset, align 8, !dbg !7054
  call void @llvm.dbg.value(metadata i64 %18, metadata !6994, metadata !DIExpression()), !dbg !7009
  %call85 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %18) #6, !dbg !7054
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !7055
  %call90 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear84, i32 49, %struct.rtx_def* nonnull %call59, %struct.rtx_def* %call85, %struct.rtx_def* %19, i32 1, i32 3) #6, !dbg !7056
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call90, metadata !7000, metadata !DIExpression()), !dbg !7009
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !7057
  %cmp95 = icmp eq %struct.rtx_def* %call90, %20, !dbg !7059
  br i1 %cmp95, label %if.end102, label %if.then96, !dbg !7060

if.then96:                                        ; preds = %if.then77
  %call101 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %20, %struct.rtx_def* %call90) #6, !dbg !7061
  br label %if.end102, !dbg !7061

if.end102:                                        ; preds = %if.then77, %if.then96
  %call103 = call %struct.rtx_def* @get_insns() #6, !dbg !7062
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call103, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7063
  %call104 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call103, %struct.rtx_def* %insn) #6, !dbg !7064
  %call105 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !7065
  br label %cleanup360, !dbg !7066

if.end106:                                        ; preds = %land.lhs.true70, %land.lhs.true62, %if.end54
  call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !7067
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7068
  %21 = getelementptr inbounds %union.u, %union.u* %u107, i64 1, i32 0, i32 0, i64 1, !dbg !7068
  %rt_int = bitcast %union.rtunion_def* %21 to i32*, !dbg !7068
  %22 = load i32, i32* %rt_int, align 8, !dbg !7068
  call void @llvm.dbg.value(metadata i32 %22, metadata !6995, metadata !DIExpression()), !dbg !7009
  %23 = bitcast %union.rtunion_def* %11 to i32**, !dbg !7069
  %24 = load i32*, i32** %23, align 8, !dbg !7069
  %bf.load114 = load i32, i32* %24, align 8, !dbg !7069
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !7069
  %cmp116 = icmp eq i32 %bf.clear115, 49, !dbg !7071
  br i1 %cmp116, label %land.lhs.true117, label %if.end195, !dbg !7072

land.lhs.true117:                                 ; preds = %if.end106
  %25 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !7073
  %cmp118 = icmp sgt i8 %25, 2, !dbg !7074
  br i1 %cmp118, label %land.lhs.true120, label %if.end195, !dbg !7075

land.lhs.true120:                                 ; preds = %land.lhs.true117
  %26 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 1), align 8, !dbg !7076
  %arrayidx127 = getelementptr inbounds i32, i32* %24, i64 2, !dbg !7077
  %rt_rtx128 = bitcast i32* %arrayidx127 to %struct.rtx_def**, !dbg !7077
  %cmp129 = icmp eq %struct.rtx_def** %26, %rt_rtx128, !dbg !7078
  br i1 %cmp129, label %land.lhs.true131, label %if.end195, !dbg !7079

land.lhs.true131:                                 ; preds = %land.lhs.true120
  %27 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 2), align 8, !dbg !7080
  %28 = getelementptr inbounds i32, i32* %24, i64 4, !dbg !7081
  %rt_rtx139 = bitcast i32* %28 to %struct.rtx_def**, !dbg !7081
  %cmp140 = icmp eq %struct.rtx_def** %27, %rt_rtx139, !dbg !7082
  br i1 %cmp140, label %land.lhs.true142, label %if.end195, !dbg !7083

land.lhs.true142:                                 ; preds = %land.lhs.true131
  %29 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 2) to i32**), align 8, !dbg !7084
  %bf.load143 = load i32, i32* %29, align 8, !dbg !7084
  %bf.clear144 = and i32 %bf.load143, 65535, !dbg !7084
  %cmp145 = icmp eq i32 %bf.clear144, 30, !dbg !7084
  br i1 %cmp145, label %land.lhs.true147, label %if.end195, !dbg !7085

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %30 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 1), align 8, !dbg !7086
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7009
  %call148 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %30, i64* nonnull %offset) #7, !dbg !7087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !6999, metadata !DIExpression()), !dbg !7009
  %tobool149 = icmp eq %struct.rtx_def* %call148, null, !dbg !7088
  br i1 %tobool149, label %if.end195, label %if.then150, !dbg !7089

if.then150:                                       ; preds = %land.lhs.true147
  %31 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 2), align 8, !dbg !7090
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, !dbg !7090
  %arrayidx152 = bitcast %union.u* %u151 to i64*, !dbg !7090
  %32 = load i64, i64* %arrayidx152, align 8, !dbg !7090
  %33 = load i64, i64* %offset, align 8, !dbg !7092
  call void @llvm.dbg.value(metadata i64 %33, metadata !6994, metadata !DIExpression()), !dbg !7009
  %add = add nsw i64 %33, %32, !dbg !7092
  call void @llvm.dbg.value(metadata i64 %add, metadata !6994, metadata !DIExpression()), !dbg !7009
  store i64 %add, i64* %offset, align 8, !dbg !7092
  call void @llvm.dbg.value(metadata i64 %add, metadata !6994, metadata !DIExpression()), !dbg !7009
  %cmp153 = icmp eq i64 %add, 0, !dbg !7093
  br i1 %cmp153, label %land.lhs.true155, label %if.end181, !dbg !7095

land.lhs.true155:                                 ; preds = %if.then150
  %34 = bitcast %union.rtunion_def* %arrayidx29 to i32**, !dbg !7096
  %35 = load i32*, i32** %34, align 8, !dbg !7096
  %bf.load160 = load i32, i32* %35, align 8, !dbg !7096
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !7096
  %cmp162 = icmp eq i32 %bf.clear161, 37, !dbg !7096
  br i1 %cmp162, label %land.lhs.true164, label %if.end181, !dbg !7097

land.lhs.true164:                                 ; preds = %land.lhs.true155
  %36 = bitcast i32* %35 to %struct.rtx_def*, !dbg !7097
  %call169 = call fastcc i32 @rhs_regno(%struct.rtx_def* %36) #7, !dbg !7098
  %cmp170 = icmp ugt i32 %call169, 57, !dbg !7099
  br i1 %cmp170, label %if.then172, label %land.lhs.true164.if.end181_crit_edge, !dbg !7100

land.lhs.true164.if.end181_crit_edge:             ; preds = %land.lhs.true164
  %.pre = load i64, i64* %offset, align 8, !dbg !7101
  br label %if.end181, !dbg !7100

if.then172:                                       ; preds = %land.lhs.true164
  call void @start_sequence() #6, !dbg !7102
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !7104
  %call177 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %37, %struct.rtx_def* nonnull %call148) #6, !dbg !7105
  %call178 = call %struct.rtx_def* @get_insns() #6, !dbg !7106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call178, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7107
  %call179 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call178, %struct.rtx_def* %insn) #6, !dbg !7108
  %call180 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !7109
  br label %cleanup360, !dbg !7110

if.end181:                                        ; preds = %land.lhs.true164.if.end181_crit_edge, %land.lhs.true155, %if.then150
  %38 = phi i64 [ %.pre, %land.lhs.true164.if.end181_crit_edge ], [ 0, %land.lhs.true155 ], [ %add, %if.then150 ], !dbg !7101
  call void @llvm.dbg.value(metadata i64 %38, metadata !6994, metadata !DIExpression()), !dbg !7009
  %39 = load i32, i32* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 3, i64 2), align 8, !dbg !7111
  %call182 = call %struct.rtx_def* @gen_int_mode(i64 %38, i32 %39) #6, !dbg !7112
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call182, metadata !7000, metadata !DIExpression()), !dbg !7009
  %call183 = call fastcc i32 @safe_insn_predicate(i32 %22, i32 1, %struct.rtx_def* nonnull %call148) #7, !dbg !7113
  %tobool184 = icmp eq i32 %call183, 0, !dbg !7113
  br i1 %tobool184, label %if.end195, label %land.lhs.true185, !dbg !7115

land.lhs.true185:                                 ; preds = %if.end181
  %call186 = call fastcc i32 @safe_insn_predicate(i32 %22, i32 2, %struct.rtx_def* %call182) #7, !dbg !7116
  %tobool187 = icmp eq i32 %call186, 0, !dbg !7116
  br i1 %tobool187, label %if.end195, label %if.then188, !dbg !7117

if.then188:                                       ; preds = %land.lhs.true185
  store %struct.rtx_def* %call148, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 1), align 8, !dbg !7118
  %40 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 1), align 8, !dbg !7120
  store %struct.rtx_def* %call148, %struct.rtx_def** %40, align 8, !dbg !7121
  store %struct.rtx_def* %call182, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 2), align 8, !dbg !7122
  %41 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 2), align 8, !dbg !7123
  store %struct.rtx_def* %call182, %struct.rtx_def** %41, align 8, !dbg !7124
  call void @llvm.dbg.value(metadata i8 1, metadata !6997, metadata !DIExpression()), !dbg !7009
  br label %if.end195, !dbg !7125

if.else:                                          ; preds = %cond.end25
  tail call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !7126
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7128
  %42 = getelementptr inbounds %union.u, %union.u* %u191, i64 1, i32 0, i32 0, i64 1, !dbg !7128
  %rt_int194 = bitcast %union.rtunion_def* %42 to i32*, !dbg !7128
  %43 = load i32, i32* %rt_int194, align 8, !dbg !7128
  call void @llvm.dbg.value(metadata i32 %43, metadata !6995, metadata !DIExpression()), !dbg !7009
  br label %if.end195

if.end195:                                        ; preds = %land.lhs.true185, %if.end181, %land.lhs.true147, %if.end106, %land.lhs.true117, %land.lhs.true120, %land.lhs.true131, %land.lhs.true142, %if.then188, %if.else
  %any_change.2 = phi i8 [ 0, %if.else ], [ 0, %land.lhs.true147 ], [ 0, %land.lhs.true142 ], [ 0, %land.lhs.true131 ], [ 0, %land.lhs.true120 ], [ 0, %land.lhs.true117 ], [ 0, %if.end106 ], [ 1, %if.then188 ], [ 0, %land.lhs.true185 ], [ 0, %if.end181 ], !dbg !7009
  %insn_code.0 = phi i32 [ %43, %if.else ], [ %22, %land.lhs.true147 ], [ %22, %land.lhs.true142 ], [ %22, %land.lhs.true131 ], [ %22, %land.lhs.true120 ], [ %22, %land.lhs.true117 ], [ %22, %if.end106 ], [ %22, %if.then188 ], [ %22, %land.lhs.true185 ], [ %22, %if.end181 ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %insn_code.0, metadata !6995, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %any_change.2, metadata !6997, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i32 0, metadata !6996, metadata !DIExpression()), !dbg !7009
  %44 = bitcast %struct.rtx_def** %addr to i8*, !dbg !7130
  %45 = bitcast %struct.rtx_def** %addr to i64*, !dbg !7130
  %46 = bitcast %struct.rtx_def** %addr to i32**, !dbg !7131
  %idxprom296 = sext i32 %insn_code.0 to i64, !dbg !7134
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom296, i32 3, !dbg !7134
  br label %for.cond, !dbg !7138

for.cond:                                         ; preds = %for.inc, %if.end195
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %if.end195 ], !dbg !7139
  %any_change.3 = phi i8 [ %any_change.4, %for.inc ], [ %any_change.2, %if.end195 ], !dbg !7139
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6996, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %any_change.3, metadata !6997, metadata !DIExpression()), !dbg !7009
  %47 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !7140
  %48 = sext i8 %47 to i64, !dbg !7141
  %cmp197 = icmp slt i64 %indvars.iv1, %48, !dbg !7141
  br i1 %cmp197, label %for.body, label %for.end, !dbg !7142

for.body:                                         ; preds = %for.cond
  %arrayidx199 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1, !dbg !7143
  %49 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx199, align 8, !dbg !7143
  call void @llvm.dbg.value(metadata %struct.rtx_def* %49, metadata !7000, metadata !DIExpression()), !dbg !7009
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 0, !dbg !7144
  %bf.load200 = load i32, i32* %50, align 8, !dbg !7144
  %trunc = trunc i32 %bf.load200 to i16, !dbg !7145
  switch i16 %trunc, label %for.inc [
    i16 43, label %sw.bb
    i16 37, label %sw.bb226
    i16 39, label %sw.bb244
  ], !dbg !7145

sw.bb:                                            ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8, !dbg !7146
  %arrayidx204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7147
  %51 = bitcast %union.rtunion_def* %arrayidx204 to i64*, !dbg !7147
  %52 = load i64, i64* %51, align 8, !dbg !7147
  store i64 %52, i64* %45, align 8, !dbg !7148
  call void @llvm.dbg.value(metadata i8* %changed, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7130
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %changed) #8, !dbg !7149
  call void @llvm.dbg.value(metadata i8 0, metadata !7008, metadata !DIExpression()), !dbg !7130
  store i8 0, i8* %changed, align 1, !dbg !7150
  call void @llvm.dbg.value(metadata %struct.rtx_def** %addr, metadata !7002, metadata !DIExpression(DW_OP_deref)), !dbg !7130
  call void @llvm.dbg.value(metadata i8* %changed, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7130
  %call206 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %addr, i32 (%struct.rtx_def**, i8*)* nonnull @instantiate_virtual_regs_in_rtx, i8* nonnull %changed) #6, !dbg !7151
  %53 = load i8, i8* %changed, align 1, !dbg !7152
  call void @llvm.dbg.value(metadata i8 %53, metadata !7008, metadata !DIExpression()), !dbg !7130
  %tobool207 = icmp eq i8 %53, 0, !dbg !7152
  br i1 %tobool207, label %cleanup, label %if.end209, !dbg !7154

if.end209:                                        ; preds = %sw.bb
  call void @start_sequence() #6, !dbg !7155
  %54 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !7156
  call void @llvm.dbg.value(metadata %struct.rtx_def* %54, metadata !7002, metadata !DIExpression()), !dbg !7130
  %call210 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %49, %struct.rtx_def* %54) #6, !dbg !7157
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call210, metadata !7000, metadata !DIExpression()), !dbg !7009
  %55 = trunc i64 %indvars.iv1 to i32, !dbg !7158
  %call211 = call fastcc i32 @safe_insn_predicate(i32 %insn_code.0, i32 %55, %struct.rtx_def* %call210) #7, !dbg !7158
  %tobool212 = icmp eq i32 %call211, 0, !dbg !7158
  br i1 %tobool212, label %if.then213, label %if.end219, !dbg !7159

if.then213:                                       ; preds = %if.end209
  %56 = load i32*, i32** %46, align 8, !dbg !7160
  %bf.load214 = load i32, i32* %56, align 8, !dbg !7160
  %bf.lshr215 = lshr i32 %bf.load214, 16, !dbg !7160
  %bf.clear216 = and i32 %bf.lshr215, 255, !dbg !7160
  %.cast = bitcast i32* %56 to %struct.rtx_def*, !dbg !7161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.cast, metadata !7002, metadata !DIExpression()), !dbg !7130
  %call217 = call %struct.rtx_def* @force_reg(i32 %bf.clear216, %struct.rtx_def* %.cast) #6, !dbg !7162
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217, metadata !7002, metadata !DIExpression()), !dbg !7130
  store %struct.rtx_def* %call217, %struct.rtx_def** %addr, align 8, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217, metadata !7002, metadata !DIExpression()), !dbg !7130
  %call218 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %call210, %struct.rtx_def* %call217) #6, !dbg !7164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call218, metadata !7000, metadata !DIExpression()), !dbg !7009
  br label %if.end219, !dbg !7165

if.end219:                                        ; preds = %if.end209, %if.then213
  %x.0 = phi %struct.rtx_def* [ %call210, %if.end209 ], [ %call218, %if.then213 ], !dbg !7130
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !7000, metadata !DIExpression()), !dbg !7009
  %call220 = call %struct.rtx_def* @get_insns() #6, !dbg !7166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7167
  %tobool221 = icmp eq %struct.rtx_def* %call220, null, !dbg !7168
  br i1 %tobool221, label %cleanup, label %if.then222, !dbg !7170

if.then222:                                       ; preds = %if.end219
  %call223 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* nonnull %call220, %struct.rtx_def* %insn) #6, !dbg !7171
  br label %cleanup, !dbg !7171

cleanup:                                          ; preds = %if.end219, %sw.bb, %if.then222
  %x.1 = phi %struct.rtx_def* [ %49, %sw.bb ], [ %x.0, %if.then222 ], [ %x.0, %if.end219 ], !dbg !7172
  %cleanup.dest.slot.0 = phi i1 [ false, %sw.bb ], [ true, %if.then222 ], [ true, %if.end219 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !7000, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8* %changed, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7130
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %changed) #8, !dbg !7173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8, !dbg !7173
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %for.inc

sw.bb226:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7009
  %call227 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %49, i64* nonnull %offset) #7, !dbg !7174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call227, metadata !6999, metadata !DIExpression()), !dbg !7009
  %cmp228 = icmp eq %struct.rtx_def* %call227, null, !dbg !7175
  br i1 %cmp228, label %for.inc, label %if.end231, !dbg !7177

if.end231:                                        ; preds = %sw.bb226
  %57 = load i64, i64* %offset, align 8, !dbg !7178
  call void @llvm.dbg.value(metadata i64 %57, metadata !6994, metadata !DIExpression()), !dbg !7009
  %cmp232 = icmp eq i64 %57, 0, !dbg !7180
  br i1 %cmp232, label %sw.epilog, label %if.else235, !dbg !7181

if.else235:                                       ; preds = %if.end231
  call void @start_sequence() #6, !dbg !7182
  %bf.load236 = load i32, i32* %50, align 8, !dbg !7184
  %bf.lshr237 = lshr i32 %bf.load236, 16, !dbg !7184
  %bf.clear238 = and i32 %bf.lshr237, 255, !dbg !7184
  %58 = load i64, i64* %offset, align 8, !dbg !7185
  call void @llvm.dbg.value(metadata i64 %58, metadata !6994, metadata !DIExpression()), !dbg !7009
  %call239 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %58) #6, !dbg !7185
  %call240 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear238, i32 49, %struct.rtx_def* nonnull %call227, %struct.rtx_def* %call239, %struct.rtx_def* null, i32 1, i32 3) #6, !dbg !7186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call240, metadata !7000, metadata !DIExpression()), !dbg !7009
  %call241 = call %struct.rtx_def* @get_insns() #6, !dbg !7187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call241, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7188
  %call242 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call241, %struct.rtx_def* %insn) #6, !dbg !7189
  br label %sw.epilog

sw.bb244:                                         ; preds = %for.body
  %arrayidx247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7190
  %rt_rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**, !dbg !7190
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx248, align 8, !dbg !7190
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7009
  %call249 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %59, i64* nonnull %offset) #7, !dbg !7191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call249, metadata !6999, metadata !DIExpression()), !dbg !7009
  %cmp250 = icmp eq %struct.rtx_def* %call249, null, !dbg !7192
  br i1 %cmp250, label %for.inc, label %if.end253, !dbg !7194

if.end253:                                        ; preds = %sw.bb244
  %60 = load i64, i64* %offset, align 8, !dbg !7195
  call void @llvm.dbg.value(metadata i64 %60, metadata !6994, metadata !DIExpression()), !dbg !7009
  %cmp254 = icmp eq i64 %60, 0, !dbg !7197
  br i1 %cmp254, label %if.end264, label %if.then256, !dbg !7198

if.then256:                                       ; preds = %if.end253
  call void @start_sequence() #6, !dbg !7199
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call249, i64 0, i32 0, !dbg !7201
  %bf.load257 = load i32, i32* %61, align 8, !dbg !7201
  %bf.lshr258 = lshr i32 %bf.load257, 16, !dbg !7201
  %bf.clear259 = and i32 %bf.lshr258, 255, !dbg !7201
  %62 = load i64, i64* %offset, align 8, !dbg !7202
  call void @llvm.dbg.value(metadata i64 %62, metadata !6994, metadata !DIExpression()), !dbg !7009
  %call260 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %62) #6, !dbg !7202
  %call261 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear259, i32 49, %struct.rtx_def* nonnull %call249, %struct.rtx_def* %call260, %struct.rtx_def* null, i32 1, i32 3) #6, !dbg !7203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call261, metadata !6999, metadata !DIExpression()), !dbg !7009
  %call262 = call %struct.rtx_def* @get_insns() #6, !dbg !7204
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call262, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7205
  %call263 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call262, %struct.rtx_def* %insn) #6, !dbg !7206
  br label %if.end264, !dbg !7207

if.end264:                                        ; preds = %if.end253, %if.then256
  %new_rtx.0 = phi %struct.rtx_def* [ %call261, %if.then256 ], [ %call249, %if.end253 ], !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !6999, metadata !DIExpression()), !dbg !7009
  %arrayidx266 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 3, i64 %indvars.iv1, !dbg !7209
  %63 = load i32, i32* %arrayidx266, align 4, !dbg !7209
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 0, !dbg !7210
  %bf.load267 = load i32, i32* %64, align 8, !dbg !7210
  %bf.lshr268 = lshr i32 %bf.load267, 16, !dbg !7210
  %bf.clear269 = and i32 %bf.lshr268, 255, !dbg !7210
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7211
  %rt_uint = bitcast %union.rtunion_def* %65 to i32*, !dbg !7211
  %66 = load i32, i32* %rt_uint, align 8, !dbg !7211
  %call273 = call %struct.rtx_def* @simplify_gen_subreg(i32 %63, %struct.rtx_def* %new_rtx.0, i32 %bf.clear269, i32 %66) #6, !dbg !7212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call273, metadata !7000, metadata !DIExpression()), !dbg !7009
  %tobool274 = icmp eq %struct.rtx_def* %call273, null, !dbg !7213
  br i1 %tobool274, label %cond.true275, label %sw.epilog, !dbg !7213

cond.true275:                                     ; preds = %if.end264
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1600, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7213
  br label %sw.epilog, !dbg !7213

sw.epilog:                                        ; preds = %if.end264, %cond.true275, %if.else235, %if.end231, %cleanup
  %x.3 = phi %struct.rtx_def* [ %x.1, %cleanup ], [ %call240, %if.else235 ], [ %call227, %if.end231 ], [ %call273, %if.end264 ], [ null, %cond.true275 ], !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.3, metadata !7000, metadata !DIExpression()), !dbg !7009
  %67 = trunc i64 %indvars.iv1 to i32, !dbg !7214
  %call279 = call fastcc i32 @safe_insn_predicate(i32 %insn_code.0, i32 %67, %struct.rtx_def* %x.3) #7, !dbg !7214
  %tobool280 = icmp eq i32 %call279, 0, !dbg !7214
  br i1 %tobool280, label %if.then281, label %if.end308, !dbg !7215

if.then281:                                       ; preds = %sw.epilog
  call void @start_sequence() #6, !dbg !7216
  %68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.3, i64 0, i32 0, !dbg !7217
  %bf.load282 = load i32, i32* %68, align 8, !dbg !7217
  %bf.clear283 = and i32 %bf.load282, 65535, !dbg !7217
  %cmp284 = icmp eq i32 %bf.clear283, 37, !dbg !7217
  br i1 %cmp284, label %if.then286, label %if.else295, !dbg !7218

if.then286:                                       ; preds = %if.then281
  %call287 = call fastcc i32 @rhs_regno(%struct.rtx_def* %x.3) #7, !dbg !7219
  %cmp288 = icmp ult i32 %call287, 58, !dbg !7219
  br i1 %cmp288, label %cond.end292, label %cond.true290, !dbg !7219

cond.true290:                                     ; preds = %if.then286
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1615, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7219
  br label %cond.end292, !dbg !7219

cond.end292:                                      ; preds = %if.then286, %cond.true290
  %call294 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %x.3) #6, !dbg !7221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call294, metadata !7000, metadata !DIExpression()), !dbg !7009
  br label %if.end302, !dbg !7222

if.else295:                                       ; preds = %if.then281
  %69 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7223
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %69, i64 %indvars.iv1, i32 2, !dbg !7224
  %bf.load300 = load i16, i16* %mode, align 8, !dbg !7224
  %bf.cast = zext i16 %bf.load300 to i32, !dbg !7224
  %call301 = call %struct.rtx_def* @force_reg(i32 %bf.cast, %struct.rtx_def* %x.3) #6, !dbg !7225
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call301, metadata !7000, metadata !DIExpression()), !dbg !7009
  br label %if.end302

if.end302:                                        ; preds = %if.else295, %cond.end292
  %x.4 = phi %struct.rtx_def* [ %call294, %cond.end292 ], [ %call301, %if.else295 ], !dbg !7134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.4, metadata !7000, metadata !DIExpression()), !dbg !7009
  %call303 = call %struct.rtx_def* @get_insns() #6, !dbg !7226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call303, metadata !7001, metadata !DIExpression()), !dbg !7009
  call void @end_sequence() #6, !dbg !7227
  %tobool304 = icmp eq %struct.rtx_def* %call303, null, !dbg !7228
  br i1 %tobool304, label %if.end308, label %if.then305, !dbg !7230

if.then305:                                       ; preds = %if.end302
  %call306 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* nonnull %call303, %struct.rtx_def* %insn) #6, !dbg !7231
  br label %if.end308, !dbg !7231

if.end308:                                        ; preds = %if.end302, %sw.epilog, %if.then305
  %x.5 = phi %struct.rtx_def* [ %x.3, %sw.epilog ], [ %x.4, %if.then305 ], [ %x.4, %if.end302 ], !dbg !7172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.5, metadata !7000, metadata !DIExpression()), !dbg !7009
  store %struct.rtx_def* %x.5, %struct.rtx_def** %arrayidx199, align 8, !dbg !7232
  %arrayidx312 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv1, !dbg !7233
  %70 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx312, align 8, !dbg !7233
  store %struct.rtx_def* %x.5, %struct.rtx_def** %70, align 8, !dbg !7234
  call void @llvm.dbg.value(metadata i8 1, metadata !6997, metadata !DIExpression()), !dbg !7009
  br label %for.inc, !dbg !7235

for.inc:                                          ; preds = %for.body, %sw.bb244, %sw.bb226, %cleanup, %if.end308
  %any_change.4 = phi i8 [ 1, %if.end308 ], [ %any_change.3, %cleanup ], [ %any_change.3, %sw.bb226 ], [ %any_change.3, %sw.bb244 ], [ %any_change.3, %for.body ], !dbg !7009
  call void @llvm.dbg.value(metadata i8 %any_change.4, metadata !6997, metadata !DIExpression()), !dbg !7009
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !7236
  call void @llvm.dbg.value(metadata i32 undef, metadata !6996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7009
  br label %for.cond, !dbg !7237, !llvm.loop !7238

for.end:                                          ; preds = %for.cond
  %any_change.3.lcssa = phi i8 [ %any_change.3, %for.cond ], !dbg !7139
  call void @llvm.dbg.value(metadata i8 %any_change.3.lcssa, metadata !6997, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %any_change.3.lcssa, metadata !6997, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %any_change.3.lcssa, metadata !6997, metadata !DIExpression()), !dbg !7009
  %tobool313 = icmp eq i8 %any_change.3.lcssa, 0, !dbg !7240
  br i1 %tobool313, label %if.end335, label %for.cond315.preheader, !dbg !7242

for.cond315.preheader:                            ; preds = %for.end
  br label %for.cond315, !dbg !7243

for.cond315:                                      ; preds = %for.cond315.preheader, %for.body319
  %indvars.iv = phi i64 [ 0, %for.cond315.preheader ], [ %indvars.iv.next, %for.body319 ], !dbg !7246
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6996, metadata !DIExpression()), !dbg !7009
  %71 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 8), align 1, !dbg !7247
  %72 = sext i8 %71 to i64, !dbg !7249
  %cmp317 = icmp slt i64 %indvars.iv, %72, !dbg !7249
  br i1 %cmp317, label %for.body319, label %for.end330, !dbg !7243

for.body319:                                      ; preds = %for.cond315
  %arrayidx321 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 6, i64 %indvars.iv, !dbg !7250
  %73 = load i8, i8* %arrayidx321, align 1, !dbg !7250
  %conv322 = sext i8 %73 to i64, !dbg !7251
  %idxprom323 = and i64 %conv322, 4294967295, !dbg !7252
  %arrayidx324 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %idxprom323, !dbg !7252
  %74 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx324, align 8, !dbg !7252
  %call325 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %74) #6, !dbg !7253
  %arrayidx327 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 5, i64 %indvars.iv, !dbg !7254
  %75 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx327, align 8, !dbg !7254
  store %struct.rtx_def* %call325, %struct.rtx_def** %75, align 8, !dbg !7255
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7256
  call void @llvm.dbg.value(metadata i32 undef, metadata !6996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7009
  br label %for.cond315, !dbg !7257, !llvm.loop !7258

for.end330:                                       ; preds = %for.cond315
  %u331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7260
  %76 = getelementptr inbounds %union.u, %union.u* %u331, i64 1, i32 0, i32 0, i64 1, !dbg !7260
  %rt_int334 = bitcast %union.rtunion_def* %76 to i32*, !dbg !7260
  store i32 -1, i32* %rt_int334, align 8, !dbg !7261
  br label %if.end335, !dbg !7262

if.end335:                                        ; preds = %for.end, %for.end330
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7263
  %77 = getelementptr inbounds %union.u, %union.u* %u336, i64 1, i32 0, i32 0, i64 0, !dbg !7263
  %rt_rtx339 = bitcast %union.rtunion_def* %77 to %struct.rtx_def**, !dbg !7263
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !7263
  %call340 = call i32 @asm_noperands(%struct.rtx_def* %78) #6, !dbg !7265
  %cmp341 = icmp sgt i32 %call340, -1, !dbg !7266
  br i1 %cmp341, label %if.then343, label %if.else353, !dbg !7267

if.then343:                                       ; preds = %if.end335
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !7268
  %call348 = call i32 @check_asm_operands(%struct.rtx_def* %79) #6, !dbg !7271
  %tobool349 = icmp eq i32 %call348, 0, !dbg !7271
  br i1 %tobool349, label %if.then350, label %cleanup360, !dbg !7272

if.then350:                                       ; preds = %if.then343
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !7273
  %call351 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !7275
  br label %cleanup360, !dbg !7276

if.else353:                                       ; preds = %if.end335
  %call354 = call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !7277
  %cmp355 = icmp slt i32 %call354, 0, !dbg !7280
  br i1 %cmp355, label %if.then357, label %cleanup360, !dbg !7281

if.then357:                                       ; preds = %if.else353
  call void @_fatal_insn_not_found(%struct.rtx_def* %insn, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1652, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7282
  br label %cleanup360, !dbg !7282

cleanup360:                                       ; preds = %if.then343, %if.then350, %if.then357, %if.else353, %if.then172, %if.end102, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7283
  ret void, !dbg !7283
}

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_decls(%union.tree_node* %fndecl) unnamed_addr #4 !dbg !7284 {
entry:
  %v = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7286, metadata !DIExpression()), !dbg !7296
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !7297
  %0 = bitcast %union.tree_node** %v to i8*, !dbg !7298
  br label %for.cond, !dbg !7299

for.cond:                                         ; preds = %for.inc, %entry
  %decl.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.inc ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !7300
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !7287, metadata !DIExpression()), !dbg !7296
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !7301
  br i1 %tobool, label %for.end, label %for.body, !dbg !7301

for.body:                                         ; preds = %for.cond
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7302
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !7302
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !7302
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !7302

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !7302

cond.false:                                       ; preds = %for.body
  call void @make_decl_rtl(%union.tree_node* nonnull %decl.0) #6, !dbg !7302
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !7302
  br label %cond.end, !dbg !7302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %1, %cond.true ], !dbg !7302
  call void @instantiate_decl_rtl(%struct.rtx_def* %cond) #7, !dbg !7303
  %incoming_rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7304
  %2 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !7304
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7304
  call void @instantiate_decl_rtl(%struct.rtx_def* %3) #7, !dbg !7305
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7306
  %4 = bitcast i40* %decl_flag_2 to i64*, !dbg !7306
  %bf.load = load i64, i64* %4, align 8, !dbg !7306
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !7306
  %tobool6 = icmp eq i64 %bf.cast1, 0, !dbg !7306
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !7307

if.then:                                          ; preds = %cond.end
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7308
  %call = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* nonnull %decl.0) #6, !dbg !7309
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7290, metadata !DIExpression()), !dbg !7298
  store %union.tree_node* %call, %union.tree_node** %v, align 8, !dbg !7310
  call void @llvm.dbg.value(metadata %union.tree_node** %v, metadata !7290, metadata !DIExpression(DW_OP_deref)), !dbg !7298
  %call7 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %v, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @instantiate_expr, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !7311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7312
  br label %for.inc, !dbg !7313

for.inc:                                          ; preds = %cond.end, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7314
  br label %for.cond, !dbg !7315, !llvm.loop !7316

for.end:                                          ; preds = %for.cond
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7318
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7318
  call fastcc void @instantiate_decls_1(%union.tree_node* %5) #7, !dbg !7319
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7320
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 9, !dbg !7321
  %7 = load %union.tree_node*, %union.tree_node** %local_decls, align 8, !dbg !7321
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7288, metadata !DIExpression()), !dbg !7296
  store %union.tree_node* null, %union.tree_node** %local_decls, align 8, !dbg !7322
  br label %for.cond10, !dbg !7323

for.cond10:                                       ; preds = %if.end35, %for.end
  %.in = phi %union.tree_node* [ %7, %for.end ], [ %8, %if.end35 ]
  %t.0 = phi %union.tree_node* [ %7, %for.end ], [ %8, %if.end35 ], !dbg !7296
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7288, metadata !DIExpression()), !dbg !7296
  %tobool11 = icmp eq %union.tree_node* %t.0, null, !dbg !7324
  br i1 %tobool11, label %for.end37, label %for.body12, !dbg !7324

for.body12:                                       ; preds = %for.cond10
  %chain14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7326
  %8 = load %union.tree_node*, %union.tree_node** %chain14, align 8, !dbg !7326
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7289, metadata !DIExpression()), !dbg !7296
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7329
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !7329
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7287, metadata !DIExpression()), !dbg !7296
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7330
  %bf.load15 = load i64, i64* %11, align 8, !dbg !7330
  %bf.cast17 = and i64 %bf.load15, 65535, !dbg !7330
  %arrayidx18 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast17, i64 11, !dbg !7330
  %12 = load i8, i8* %arrayidx18, align 1, !dbg !7330
  %tobool19 = icmp eq i8 %12, 0, !dbg !7330
  br i1 %tobool19, label %if.end35, label %land.lhs.true, !dbg !7330

land.lhs.true:                                    ; preds = %for.body12
  %rtl21 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7330
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtl21, align 8, !dbg !7330
  %cmp = icmp eq %struct.rtx_def* %13, null, !dbg !7330
  br i1 %cmp, label %if.end35, label %if.then23, !dbg !7332

if.then23:                                        ; preds = %land.lhs.true
  br i1 false, label %cond.false30, label %cond.true27, !dbg !7333

cond.true27:                                      ; preds = %if.then23
  br label %cond.end33, !dbg !7333

cond.false30:                                     ; preds = %if.then23
  br label %cond.end33, !dbg !7333

cond.end33:                                       ; preds = %cond.false30, %cond.true27
  call void @instantiate_decl_rtl(%struct.rtx_def* nonnull %13) #7, !dbg !7334
  br label %if.end35, !dbg !7334

if.end35:                                         ; preds = %land.lhs.true, %for.body12, %cond.end33
  %14 = bitcast %union.tree_node* %t.0 to i8*, !dbg !7335
  call void @ggc_free(i8* nonnull %14) #6, !dbg !7336
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7288, metadata !DIExpression()), !dbg !7296
  br label %for.cond10, !dbg !7337, !llvm.loop !7338

for.end37:                                        ; preds = %for.cond10
  ret void, !dbg !7340
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local void @extract_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @safe_insn_predicate(i32 %code, i32 %operand, %struct.rtx_def* %x) unnamed_addr #4 !dbg !7341 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7345, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %operand, metadata !7346, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7347, metadata !DIExpression()), !dbg !7366
  %cmp = icmp slt i32 %code, 0, !dbg !7367
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7369

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %code to i64, !dbg !7370
  %operand1 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !7371
  %0 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand1, align 8, !dbg !7371
  %idxprom2 = sext i32 %operand to i64, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.insn_operand_data* undef, metadata !7348, metadata !DIExpression()), !dbg !7366
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 %idxprom2, i32 0, !dbg !7372
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7372
  %cmp4 = icmp eq i32 (%struct.rtx_def*, i32)* %1, null, !dbg !7374
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !7375

if.end6:                                          ; preds = %if.end
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 %idxprom2, i32 2, !dbg !7376
  %bf.load = load i16, i16* %mode, align 8, !dbg !7376
  %bf.cast = zext i16 %bf.load to i32, !dbg !7376
  %call = tail call i32 %1(%struct.rtx_def* %x, i32 %bf.cast) #6, !dbg !7377
  br label %cleanup, !dbg !7378

cleanup:                                          ; preds = %if.end, %entry, %if.end6
  %retval.0 = phi i32 [ %call, %if.end6 ], [ 1, %entry ], [ 1, %if.end ], !dbg !7366
  ret i32 %retval.0, !dbg !7379
}

declare dso_local %struct.rtx_def* @replace_equiv_address(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @check_asm_operands(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @error_for_asm(%struct.rtx_def*, i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !7380 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7384, metadata !DIExpression()), !dbg !7385
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7386
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !7386
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !7386
  %1 = load i32, i32* %rt_int, align 8, !dbg !7386
  %cmp = icmp slt i32 %1, 0, !dbg !7388
  br i1 %cmp, label %if.then, label %if.end, !dbg !7389

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7390
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7390
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7390
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !7391
  store i32 %call, i32* %rt_int, align 8, !dbg !7392
  br label %if.end, !dbg !7393

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !7394
  ret i32 %4, !dbg !7395
}

declare dso_local void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) local_unnamed_addr #1

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #1

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @instantiate_expr(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #4 !dbg !7396 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !7398, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !7399, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %data, metadata !7400, metadata !DIExpression()), !dbg !7402
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !7403
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7401, metadata !DIExpression()), !dbg !7402
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7404
  %bf.load = load i64, i64* %1, align 8, !dbg !7404
  %bf.cast = and i64 %bf.load, 65535, !dbg !7404
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7404
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7404
  %cmp = icmp ugt i32 %2, 3, !dbg !7404
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !7404

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %2, 11, !dbg !7404
  br i1 %cmp7, label %if.end34, label %if.then, !dbg !7406

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !7407
  %bf.load9 = load i64, i64* %1, align 8, !dbg !7409
  %bf.cast11 = and i64 %bf.load9, 65535, !dbg !7409
  %arrayidx13 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast11, !dbg !7409
  %3 = load i32, i32* %arrayidx13, align 4, !dbg !7409
  %cmp14 = icmp eq i32 %3, 3, !dbg !7409
  br i1 %cmp14, label %land.lhs.true15, label %if.end34, !dbg !7411

land.lhs.true15:                                  ; preds = %if.then
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast11, i64 11, !dbg !7412
  %4 = load i8, i8* %arrayidx22, align 1, !dbg !7412
  %tobool = icmp eq i8 %4, 0, !dbg !7412
  br i1 %tobool, label %if.end34, label %land.lhs.true23, !dbg !7412

land.lhs.true23:                                  ; preds = %land.lhs.true15
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7412
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !7412
  %cmp24 = icmp eq %struct.rtx_def* %5, null, !dbg !7412
  br i1 %cmp24, label %if.end34, label %if.then26, !dbg !7413

if.then26:                                        ; preds = %land.lhs.true23
  br i1 false, label %cond.false, label %cond.true, !dbg !7414

cond.true:                                        ; preds = %if.then26
  br label %cond.end, !dbg !7414

cond.false:                                       ; preds = %if.then26
  br label %cond.end, !dbg !7414

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @instantiate_decl_rtl(%struct.rtx_def* nonnull %5) #7, !dbg !7415
  br label %if.end34, !dbg !7415

if.end34:                                         ; preds = %land.lhs.true23, %land.lhs.true15, %if.then, %cond.end, %land.lhs.true
  ret %union.tree_node* null, !dbg !7416
}

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_decls_1(%union.tree_node* %let) unnamed_addr #4 !dbg !7417 {
entry:
  %v = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %let, metadata !7419, metadata !DIExpression()), !dbg !7427
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %let, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7428
  %1 = bitcast %union.tree_node** %v to i8*, !dbg !7429
  br label %for.cond, !dbg !7430

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !7431
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7420, metadata !DIExpression()), !dbg !7427
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !7432
  br i1 %tobool, label %for.end, label %for.body, !dbg !7432

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7433
  %bf.load = load i64, i64* %2, align 8, !dbg !7433
  %bf.cast = and i64 %bf.load, 65535, !dbg !7433
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !7433
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !7433
  %tobool2 = icmp eq i8 %3, 0, !dbg !7433
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !7433

land.lhs.true:                                    ; preds = %for.body
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7433
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !7433
  %cmp = icmp eq %struct.rtx_def* %4, null, !dbg !7433
  br i1 %cmp, label %if.end, label %if.then, !dbg !7435

if.then:                                          ; preds = %land.lhs.true
  br i1 false, label %cond.false, label %cond.true, !dbg !7436

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !7436

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7436

cond.end:                                         ; preds = %cond.false, %cond.true
  call void @instantiate_decl_rtl(%struct.rtx_def* nonnull %4) #7, !dbg !7437
  %bf.load12.pre = load i64, i64* %2, align 8, !dbg !7438
  br label %if.end, !dbg !7437

if.end:                                           ; preds = %land.lhs.true, %for.body, %cond.end
  %bf.load12 = phi i64 [ %bf.load, %land.lhs.true ], [ %bf.load, %for.body ], [ %bf.load12.pre, %cond.end ], !dbg !7438
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !7439
  %cmp15 = icmp eq i64 %bf.cast141, 32, !dbg !7439
  br i1 %cmp15, label %land.lhs.true17, label %for.inc, !dbg !7440

land.lhs.true17:                                  ; preds = %if.end
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7441
  %5 = bitcast i40* %decl_flag_2 to i64*, !dbg !7441
  %bf.load18 = load i64, i64* %5, align 8, !dbg !7441
  %bf.cast202 = and i64 %bf.load18, 67108864, !dbg !7441
  %tobool21 = icmp eq i64 %bf.cast202, 0, !dbg !7441
  br i1 %tobool21, label %for.inc, label %if.then22, !dbg !7442

if.then22:                                        ; preds = %land.lhs.true17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7443
  %call = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* nonnull %t.0) #6, !dbg !7444
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7421, metadata !DIExpression()), !dbg !7429
  store %union.tree_node* %call, %union.tree_node** %v, align 8, !dbg !7445
  call void @llvm.dbg.value(metadata %union.tree_node** %v, metadata !7421, metadata !DIExpression(DW_OP_deref)), !dbg !7429
  %call23 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %v, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @instantiate_expr, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !7446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7447
  br label %for.inc, !dbg !7448

for.inc:                                          ; preds = %land.lhs.true17, %if.end, %if.then22
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7449
  br label %for.cond, !dbg !7450, !llvm.loop !7451

for.end:                                          ; preds = %for.cond
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %let, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7453
  br label %for.cond26, !dbg !7455

for.cond26:                                       ; preds = %for.body28, %for.end
  %t.1.in = phi %union.tree_node** [ %6, %for.end ], [ %chain31, %for.body28 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !7456
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !7420, metadata !DIExpression()), !dbg !7427
  %tobool27 = icmp eq %union.tree_node* %t.1, null, !dbg !7457
  br i1 %tobool27, label %for.end32, label %for.body28, !dbg !7457

for.body28:                                       ; preds = %for.cond26
  call fastcc void @instantiate_decls_1(%union.tree_node* nonnull %t.1) #7, !dbg !7458
  %chain31 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7460
  br label %for.cond26, !dbg !7461, !llvm.loop !7462

for.end32:                                        ; preds = %for.cond26
  ret void, !dbg !7464
}

declare dso_local void @init_cumulative_args(%struct.ix86_args*, %union.tree_node*, %struct.rtx_def*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7465 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7470, metadata !DIExpression()), !dbg !7471
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !7472
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !7472
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !7472
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7472

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !7472
  br label %cond.end, !dbg !7472

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7472
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !7472
  ret %union.tree_node** %call1, !dbg !7472
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_insert(%struct.VEC_tree_heap** %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7473 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7479, metadata !DIExpression()), !dbg !7480
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !7481
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !7481
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !7481
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7481

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !7481
  br label %cond.end, !dbg !7481

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7481
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_insert(%struct.VEC_tree_base* %cond, i32 %ix_, %union.tree_node* %obj_) #7, !dbg !7481
  ret %union.tree_node** %call1, !dbg !7481
}

; Function Attrs: nounwind uwtable
define internal fastcc void @split_complex_args(%struct.VEC_tree_heap** %args) unnamed_addr #4 !dbg !7482 {
entry:
  %p = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %args, metadata !7484, metadata !DIExpression()), !dbg !7496
  %0 = bitcast %union.tree_node** %p to i8*, !dbg !7497
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7497
  call void @llvm.dbg.value(metadata i32 0, metadata !7485, metadata !DIExpression()), !dbg !7496
  %1 = bitcast %union.tree_node** %p to %struct.tree_common**, !dbg !7498
  %2 = bitcast %union.tree_node** %p to i64**, !dbg !7499
  %3 = bitcast %union.tree_node** %p to %struct.tree_decl_common**, !dbg !7499
  br label %for.cond, !dbg !7500

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc90, %for.inc ], !dbg !7501
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7485, metadata !DIExpression()), !dbg !7496
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %args, align 8, !dbg !7502
  %tobool = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !7502
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7502

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !7502
  br label %cond.end, !dbg !7502

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7502
  call void @llvm.dbg.value(metadata %union.tree_node** %p, metadata !7486, metadata !DIExpression(DW_OP_deref)), !dbg !7496
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %p) #7, !dbg !7502
  %tobool1 = icmp eq i32 %call, 0, !dbg !7503
  br i1 %tobool1, label %for.end, label %for.body, !dbg !7503

for.body:                                         ; preds = %cond.end
  %5 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !7504
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !7504
  %6 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !7504
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7487, metadata !DIExpression()), !dbg !7498
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7505
  %bf.load = load i64, i64* %7, align 8, !dbg !7505
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7506
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !7506
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !7507

land.lhs.true:                                    ; preds = %for.body
  %8 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !7508
  %call4 = call zeroext i8 %8(%union.tree_node* %6) #6, !dbg !7509
  %tobool5 = icmp eq i8 %call4, 0, !dbg !7509
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !7510

if.then:                                          ; preds = %land.lhs.true
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7511
  %9 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !7511
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7494, metadata !DIExpression()), !dbg !7499
  %10 = load i64*, i64** %2, align 8, !dbg !7512
  %bf.load9 = load i64, i64* %10, align 8, !dbg !7512
  %bf.lshr = lshr i64 %bf.load9, 18, !dbg !7512
  %.cast = bitcast i64* %10 to %union.tree_node*, !dbg !7513
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !7486, metadata !DIExpression()), !dbg !7496
  %call13 = call %union.tree_node* @copy_node_stat(%union.tree_node* %.cast) #6, !dbg !7513
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !7486, metadata !DIExpression()), !dbg !7496
  store %union.tree_node* %call13, %union.tree_node** %p, align 8, !dbg !7514
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7515
  store %union.tree_node* %9, %union.tree_node** %type15, align 8, !dbg !7516
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7517
  %11 = bitcast %union.tree_node** %initial to %struct.tree_common**, !dbg !7517
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !7517
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !7517
  %13 = bitcast %union.tree_node** %type17 to i64*, !dbg !7517
  %14 = load i64, i64* %13, align 8, !dbg !7517
  %initial19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7518
  %15 = bitcast %union.tree_node** %initial19 to i64*, !dbg !7519
  store i64 %14, i64* %15, align 8, !dbg !7519
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7520
  %16 = bitcast i40* %mode to i64*, !dbg !7520
  %bf.load21 = load i64, i64* %16, align 8, !dbg !7521
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7522
  store %union.tree_node* null, %union.tree_node** %size, align 8, !dbg !7523
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7524
  store %union.tree_node* null, %union.tree_node** %size_unit, align 8, !dbg !7525
  %17 = shl nuw nsw i64 %bf.lshr, 12, !dbg !7526
  %bf.shl = and i64 %17, 4096, !dbg !7526
  %bf.clear28 = and i64 %bf.load21, -5376, !dbg !7526
  %bf.set = or i64 %bf.clear28, %bf.shl, !dbg !7526
  %18 = shl nuw nsw i64 %bf.lshr, 10, !dbg !7527
  %bf.shl33 = and i64 %18, 1024, !dbg !7527
  %bf.set35 = or i64 %bf.set, %bf.shl33, !dbg !7527
  store i64 %bf.set35, i64* %16, align 8, !dbg !7527
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7528
  %bf.load38 = load i64, i64* %19, align 8, !dbg !7529
  %bf.clear39 = and i64 %bf.load38, -262145, !dbg !7529
  store i64 %bf.clear39, i64* %19, align 8, !dbg !7529
  %20 = load %union.tree_node*, %union.tree_node** %p, align 8, !dbg !7530
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !7486, metadata !DIExpression()), !dbg !7496
  call void @layout_decl(%union.tree_node* %20, i32 0) #6, !dbg !7531
  %21 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %args, align 8, !dbg !7532
  %tobool40 = icmp eq %struct.VEC_tree_heap* %21, null, !dbg !7532
  br i1 %tobool40, label %cond.end44, label %cond.true41, !dbg !7532

cond.true41:                                      ; preds = %if.then
  %base42 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %21, i64 0, i32 0, !dbg !7532
  br label %cond.end44, !dbg !7532

cond.end44:                                       ; preds = %if.then, %cond.true41
  %cond45 = phi %struct.VEC_tree_base* [ %base42, %cond.true41 ], [ null, %if.then ], !dbg !7532
  %22 = load %union.tree_node*, %union.tree_node** %p, align 8, !dbg !7532
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !7486, metadata !DIExpression()), !dbg !7496
  %call46 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond45, i32 %i.0, %union.tree_node* %22) #7, !dbg !7532
  %23 = load i64*, i64** %2, align 8, !dbg !7533
  %bf.load48 = load i64, i64* %23, align 8, !dbg !7533
  %bf.cast50 = and i64 %bf.load48, 65535, !dbg !7533
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast50, !dbg !7533
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7533
  %cmp51 = icmp ugt i32 %24, 3, !dbg !7533
  br i1 %cmp51, label %land.lhs.true53, label %cond.end64, !dbg !7533

land.lhs.true53:                                  ; preds = %cond.end44
  %cmp60 = icmp ult i32 %24, 11, !dbg !7533
  br i1 %cmp60, label %cond.true62, label %cond.end64, !dbg !7533

cond.true62:                                      ; preds = %land.lhs.true53
  %locus = getelementptr inbounds i64, i64* %23, i64 3, !dbg !7533
  %25 = bitcast i64* %locus to i32*, !dbg !7533
  %26 = load i32, i32* %25, align 8, !dbg !7533
  br label %cond.end64, !dbg !7533

cond.end64:                                       ; preds = %cond.end44, %land.lhs.true53, %cond.true62
  %cond65 = phi i32 [ %26, %cond.true62 ], [ 0, %land.lhs.true53 ], [ 0, %cond.end44 ], !dbg !7533
  %call66 = call %union.tree_node* @build_decl_stat(i32 %cond65, i32 34, %union.tree_node* null, %union.tree_node* %9) #6, !dbg !7533
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !7491, metadata !DIExpression()), !dbg !7499
  %27 = load %struct.tree_decl_common*, %struct.tree_decl_common** %3, align 8, !dbg !7534
  %initial68 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %27, i64 0, i32 5, !dbg !7534
  %28 = bitcast %union.tree_node** %initial68 to i64*, !dbg !7534
  %29 = load i64, i64* %28, align 8, !dbg !7534
  %initial70 = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7535
  %30 = bitcast %union.tree_node** %initial70 to i64*, !dbg !7536
  store i64 %29, i64* %30, align 8, !dbg !7536
  %artificial_flag73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7537
  %31 = bitcast i40* %artificial_flag73 to i64*, !dbg !7537
  %bf.load74 = load i64, i64* %31, align 8, !dbg !7538
  %bf.clear77 = and i64 %bf.load74, -5121, !dbg !7538
  %bf.set78 = or i64 %bf.clear77, %bf.shl, !dbg !7538
  %bf.set87 = or i64 %bf.set78, %bf.shl33, !dbg !7539
  store i64 %bf.set87, i64* %31, align 8, !dbg !7539
  call void @layout_decl(%union.tree_node* %call66, i32 0) #6, !dbg !7540
  %inc = add i32 %i.0, 1, !dbg !7541
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7485, metadata !DIExpression()), !dbg !7496
  %call89 = call fastcc %union.tree_node** @VEC_tree_heap_safe_insert(%struct.VEC_tree_heap** %args, i32 %inc, %union.tree_node* %call66) #7, !dbg !7541
  br label %for.inc, !dbg !7542

for.inc:                                          ; preds = %land.lhs.true, %for.body, %cond.end64
  %i.1 = phi i32 [ %inc, %cond.end64 ], [ %i.0, %land.lhs.true ], [ %i.0, %for.body ], !dbg !7501
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7485, metadata !DIExpression()), !dbg !7496
  %inc90 = add i32 %i.1, 1, !dbg !7543
  call void @llvm.dbg.value(metadata i32 %inc90, metadata !7485, metadata !DIExpression()), !dbg !7496
  br label %for.cond, !dbg !7544, !llvm.loop !7545

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7547
  ret void, !dbg !7547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7548 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 1, metadata !7553, metadata !DIExpression()), !dbg !7555
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !7556
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !7556
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7556

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !7556
  br label %cond.end, !dbg !7556

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7556
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !7556
  %tobool1 = icmp eq i32 %call, 0, !dbg !7556
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7554, metadata !DIExpression()), !dbg !7555
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7556

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !7557
  %2 = load i8*, i8** %1, align 8, !dbg !7557
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !7557
  store i8* %call3, i8** %1, align 8, !dbg !7557
  br label %if.end, !dbg !7557

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7556
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7559 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7564, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7565, metadata !DIExpression()), !dbg !7567
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7568
  %0 = load i32, i32* %num1, align 8, !dbg !7568
  %inc = add i32 %0, 1, !dbg !7568
  store i32 %inc, i32* %num1, align 8, !dbg !7568
  %idxprom = zext i32 %0 to i64, !dbg !7568
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7568
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !7566, metadata !DIExpression()), !dbg !7567
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !7568
  ret %union.tree_node** %arrayidx, !dbg !7568
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7569 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 1, metadata !7574, metadata !DIExpression()), !dbg !7575
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !7576
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7576

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !7576
  %0 = load i32, i32* %alloc, align 4, !dbg !7576
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7576
  %1 = load i32, i32* %num, align 8, !dbg !7576
  %cmp1 = icmp ne i32 %0, %1, !dbg !7576
  %phitmp = zext i1 %cmp1 to i32, !dbg !7576
  br label %cond.end, !dbg !7576

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_insert(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7577 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7581, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7582, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7583, metadata !DIExpression()), !dbg !7585
  %idxprom = zext i32 %ix_ to i64, !dbg !7586
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7586
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !7584, metadata !DIExpression()), !dbg !7585
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %arrayidx, i64 1, !dbg !7586
  %0 = bitcast %union.tree_node** %add.ptr to i8*, !dbg !7586
  %1 = bitcast %union.tree_node** %arrayidx to i8*, !dbg !7586
  %num4 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7586
  %2 = load i32, i32* %num4, align 8, !dbg !7586
  %inc = add i32 %2, 1, !dbg !7586
  store i32 %inc, i32* %num4, align 8, !dbg !7586
  %sub = sub i32 %2, %ix_, !dbg !7586
  %conv5 = zext i32 %sub to i64, !dbg !7586
  %mul = shl nuw nsw i64 %conv5, 3, !dbg !7586
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !7586
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !7586
  ret %union.tree_node** %arrayidx, !dbg !7586
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #1

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7587 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7591, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7592, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7593, metadata !DIExpression()), !dbg !7595
  %idxprom = zext i32 %ix_ to i64, !dbg !7596
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7596
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7596
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7594, metadata !DIExpression()), !dbg !7595
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !7596
  ret %union.tree_node* %0, !dbg !7596
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

declare dso_local void @gimplify_type_sizes(%union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @regno_clobbered_at_setjmp(%struct.bitmap_head_def* %setjmp_crosses, i32 %regno) unnamed_addr #4 !dbg !7597 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %setjmp_crosses, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7602, metadata !DIExpression()), !dbg !7603
  %call = tail call i32 @max_reg_num() #6, !dbg !7604
  %cmp = icmp sgt i32 %call, %regno, !dbg !7606
  br i1 %cmp, label %if.end, label %return, !dbg !7607

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @REG_N_SETS(i32 %regno) #7, !dbg !7608
  %cmp2 = icmp sgt i32 %call1, 1, !dbg !7609
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !7610

lor.lhs.false:                                    ; preds = %if.end
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7611
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7611
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7611
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !7611
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7611
  %call3 = tail call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %2) #6, !dbg !7611
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call3, i32 %regno) #6, !dbg !7611
  %tobool = icmp eq i32 %call4, 0, !dbg !7611
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7612

land.rhs:                                         ; preds = %lor.lhs.false, %if.end
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %setjmp_crosses, i32 %regno) #6, !dbg !7613
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7612
  %phitmp = zext i1 %tobool6 to i8
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false, %land.rhs
  %3 = phi i8 [ 0, %lor.lhs.false ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !7614

return:                                           ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %3, %land.end ], [ 0, %entry ], !dbg !7603
  ret i8 %retval.0, !dbg !7615
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @REG_N_SETS(i32 %regno) unnamed_addr #0 !dbg !7616 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7619, metadata !DIExpression()), !dbg !7620
  %0 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !7621
  %idxprom = sext i32 %regno to i64, !dbg !7621
  %sets = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %0, i64 %idxprom, i32 0, !dbg !7622
  %1 = load i32, i32* %sets, align 4, !dbg !7622
  ret i32 %1, !dbg !7623
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !7624 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7628, metadata !DIExpression()), !dbg !7630
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7631
  %0 = load i32, i32* %num1, align 8, !dbg !7631
  %dec = add i32 %0, -1, !dbg !7631
  store i32 %dec, i32* %num1, align 8, !dbg !7631
  %idxprom = zext i32 %dec to i64, !dbg !7631
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7631
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7631
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7629, metadata !DIExpression()), !dbg !7630
  ret %union.tree_node* %1, !dbg !7631
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @all_blocks(%union.tree_node* %block, %union.tree_node** %vector) unnamed_addr #4 !dbg !7632 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata %union.tree_node** %vector, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 0, metadata !7638, metadata !DIExpression()), !dbg !7639
  %tobool1 = icmp eq %union.tree_node** %vector, null, !dbg !7640
  br i1 %tobool1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !7643

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !7643

entry.split.us:                                   ; preds = %entry
  br i1 true, label %entry.split.us.split.us, label %entry.split.us.entry.split.us.split_crit_edge, !dbg !7643

entry.split.us.entry.split.us.split_crit_edge:    ; preds = %entry.split.us
  br label %while.end.us-lcssa.us.us-lcssa, !dbg !7643

entry.split.us.split.us:                          ; preds = %entry.split.us
  br label %while.cond.us.us, !dbg !7643

while.cond.us.us:                                 ; preds = %while.body.us.us, %entry.split.us.split.us
  %n_blocks.0.us.us = phi i32 [ 0, %entry.split.us.split.us ], [ %add.us.us, %while.body.us.us ], !dbg !7639
  %block.addr.0.us.us = phi %union.tree_node* [ %block, %entry.split.us.split.us ], [ %3, %while.body.us.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0.us.us, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.us.us, metadata !7638, metadata !DIExpression()), !dbg !7639
  %tobool.us.us = icmp eq %union.tree_node* %block.addr.0.us.us, null, !dbg !7643
  br i1 %tobool.us.us, label %while.end.us-lcssa.us.us-lcssa.us, label %while.body.us.us, !dbg !7643

while.body.us.us:                                 ; preds = %while.cond.us.us
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7644
  %bf.load.us.us = load i64, i64* %0, align 8, !dbg !7645
  %bf.clear.us.us = and i64 %bf.load.us.us, -4194305, !dbg !7645
  store i64 %bf.clear.us.us, i64* %0, align 8, !dbg !7645
  %inc.us.us = add nsw i32 %n_blocks.0.us.us, 1, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %inc.us.us, metadata !7638, metadata !DIExpression()), !dbg !7639
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7647
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !7647
  %call.us.us = tail call fastcc i32 @all_blocks(%union.tree_node* %2, %union.tree_node** null) #7, !dbg !7648
  %add.us.us = add nsw i32 %inc.us.us, %call.us.us, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %add.us.us, metadata !7638, metadata !DIExpression()), !dbg !7639
  %chain.us.us = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7650
  %3 = load %union.tree_node*, %union.tree_node** %chain.us.us, align 8, !dbg !7650
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %while.cond.us.us, !dbg !7643, !llvm.loop !7651

while.end.us-lcssa.us.us-lcssa.us:                ; preds = %while.cond.us.us
  %n_blocks.0.us.us.lcssa = phi i32 [ %n_blocks.0.us.us, %while.cond.us.us ], !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.us.us.lcssa, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.us.us.lcssa, metadata !7638, metadata !DIExpression()), !dbg !7639
  br label %while.end.us-lcssa.us, !dbg !7653

while.end.us-lcssa.us.us-lcssa:                   ; preds = %entry.split.us.entry.split.us.split_crit_edge
  br label %while.end.us-lcssa.us, !dbg !7653

while.end.us-lcssa.us:                            ; preds = %while.end.us-lcssa.us.us-lcssa.us, %while.end.us-lcssa.us.us-lcssa
  %n_blocks.0.lcssa.ph.us = phi i32 [ undef, %while.end.us-lcssa.us.us-lcssa ], [ %n_blocks.0.us.us.lcssa, %while.end.us-lcssa.us.us-lcssa.us ]
  br label %while.end, !dbg !7653

while.cond:                                       ; preds = %while.body, %entry.entry.split_crit_edge
  %n_blocks.0 = phi i32 [ 0, %entry.entry.split_crit_edge ], [ %add, %while.body ], !dbg !7639
  %block.addr.0 = phi %union.tree_node* [ %block, %entry.entry.split_crit_edge ], [ %7, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0, metadata !7638, metadata !DIExpression()), !dbg !7639
  %tobool = icmp eq %union.tree_node* %block.addr.0, null, !dbg !7643
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !7643

while.body:                                       ; preds = %while.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7644
  %bf.load = load i64, i64* %4, align 8, !dbg !7645
  %bf.clear = and i64 %bf.load, -4194305, !dbg !7645
  store i64 %bf.clear, i64* %4, align 8, !dbg !7645
  %idxprom = sext i32 %n_blocks.0 to i64, !dbg !7654
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %vector, i64 %idxprom, !dbg !7654
  store %union.tree_node* %block.addr.0, %union.tree_node** %arrayidx, align 8, !dbg !7655
  %inc = add nsw i32 %n_blocks.0, 1, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7638, metadata !DIExpression()), !dbg !7639
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7647
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !7647
  %idx.ext = sext i32 %inc to i64, !dbg !7656
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %vector, i64 %idx.ext, !dbg !7656
  %call = tail call fastcc i32 @all_blocks(%union.tree_node* %6, %union.tree_node** nonnull %add.ptr) #7, !dbg !7648
  %add = add nsw i32 %inc, %call, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %add, metadata !7638, metadata !DIExpression()), !dbg !7639
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7650
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !7650
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %while.cond, !dbg !7643, !llvm.loop !7651

while.end.us-lcssa:                               ; preds = %while.cond
  %n_blocks.0.lcssa2 = phi i32 [ %n_blocks.0, %while.cond ], !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.lcssa2, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.lcssa2, metadata !7638, metadata !DIExpression()), !dbg !7639
  br label %while.end, !dbg !7653

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %n_blocks.0.lcssa = phi i32 [ %n_blocks.0.lcssa2, %while.end.us-lcssa ], [ %n_blocks.0.lcssa.ph.us, %while.end.us-lcssa.us ], !dbg !7639
  call void @llvm.dbg.value(metadata i32 %n_blocks.0.lcssa, metadata !7638, metadata !DIExpression()), !dbg !7639
  ret i32 %n_blocks.0.lcssa, !dbg !7653
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

declare dso_local void @cl_optimization_restore(%struct.cl_optimization*) local_unnamed_addr #1

declare dso_local void @init_emit() local_unnamed_addr #1

declare dso_local void @init_varasm_status() local_unnamed_addr #1

declare dso_local void @init_expr() local_unnamed_addr #1

declare dso_local void @default_rtl_profile() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local i32 @ix86_minimum_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parms_setup_varargs(%struct.assign_parm_data_all* %all, %struct.assign_parm_data_one* %data, i8 zeroext %no_rtl) unnamed_addr #4 !dbg !7657 {
entry:
  %varargs_pretend_bytes = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !7661, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7662, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i8 0, metadata !7663, metadata !DIExpression()), !dbg !7665
  %0 = bitcast i32* %varargs_pretend_bytes to i8*, !dbg !7666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7666
  call void @llvm.dbg.value(metadata i32 0, metadata !7664, metadata !DIExpression()), !dbg !7665
  store i32 0, i32* %varargs_pretend_bytes, align 4, !dbg !7667
  %1 = load void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 7), align 8, !dbg !7668
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !7669
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !7670
  %2 = load i32, i32* %promoted_mode, align 8, !dbg !7670
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !7671
  %3 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7671
  call void @llvm.dbg.value(metadata i32* %varargs_pretend_bytes, metadata !7664, metadata !DIExpression(DW_OP_deref)), !dbg !7665
  call void %1(%struct.ix86_args* %args_so_far, i32 %2, %union.tree_node* %3, i32* nonnull %varargs_pretend_bytes, i32 0) #6, !dbg !7672
  %4 = load i32, i32* %varargs_pretend_bytes, align 4, !dbg !7673
  call void @llvm.dbg.value(metadata i32 %4, metadata !7664, metadata !DIExpression()), !dbg !7665
  %cmp = icmp sgt i32 %4, 0, !dbg !7675
  br i1 %cmp, label %if.then, label %if.end, !dbg !7676

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %4, metadata !7664, metadata !DIExpression()), !dbg !7665
  %conv2 = sext i32 %4 to i64, !dbg !7677
  %pretend_args_size = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 6, !dbg !7678
  store i64 %conv2, i64* %pretend_args_size, align 8, !dbg !7679
  br label %if.end, !dbg !7680

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7681
  ret void, !dbg !7681
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_find_entry_rtl(%struct.assign_parm_data_all* %all, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !7682 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !7686, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7687, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i64 0, metadata !7688, metadata !DIExpression()), !dbg !7699
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !7700
  %0 = load i32, i32* %promoted_mode, align 8, !dbg !7700
  %cmp = icmp eq i32 %0, 0, !dbg !7702
  br i1 %cmp, label %if.then, label %if.end, !dbg !7703

if.then:                                          ; preds = %entry
  %1 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !7704
  %stack_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !7706
  %2 = bitcast %struct.rtx_def** %stack_parm to i64*, !dbg !7707
  store i64 %1, i64* %2, align 8, !dbg !7707
  %entry_parm1 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !7708
  %3 = bitcast %struct.rtx_def** %entry_parm1 to i64*, !dbg !7709
  store i64 %1, i64* %3, align 8, !dbg !7709
  br label %cleanup.cont, !dbg !7710

if.end:                                           ; preds = %entry
  %args_so_far = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 0, !dbg !7711
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !7711
  %4 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7711
  %named_arg = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !7711
  %bf.load = load i8, i8* %named_arg, align 4, !dbg !7711
  %bf.clear = and i8 %bf.load, 1, !dbg !7711
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7711
  %call = tail call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %0, %union.tree_node* %4, i32 %bf.cast) #6, !dbg !7711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7689, metadata !DIExpression()), !dbg !7699
  %cmp3 = icmp eq %struct.rtx_def* %call, null, !dbg !7712
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7714

if.then4:                                         ; preds = %if.end
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !7715
  %5 = load i32, i32* %passed_mode, align 4, !dbg !7715
  store i32 %5, i32* %promoted_mode, align 8, !dbg !7716
  br label %if.end6, !dbg !7717

if.end6:                                          ; preds = %if.then4, %if.end
  %cmp7 = icmp ne %struct.rtx_def* %call, null, !dbg !7718
  %conv8 = zext i1 %cmp7 to i8, !dbg !7719
  call void @llvm.dbg.value(metadata i8 %conv8, metadata !7690, metadata !DIExpression()), !dbg !7699
  br i1 %cmp7, label %if.end27, label %land.lhs.true, !dbg !7720

land.lhs.true:                                    ; preds = %if.end6
  %bf.load10 = load i8, i8* %named_arg, align 4, !dbg !7721
  %bf.clear11 = and i8 %bf.load10, 1, !dbg !7721
  %tobool13 = icmp eq i8 %bf.clear11, 0, !dbg !7722
  br i1 %tobool13, label %if.then14, label %if.end27, !dbg !7723

if.then14:                                        ; preds = %land.lhs.true
  %6 = load i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 9), align 8, !dbg !7724
  %call16 = tail call zeroext i8 %6(%struct.ix86_args* %args_so_far) #6, !dbg !7725
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7725
  br i1 %tobool17, label %if.end27, label %if.then18, !dbg !7726

if.then18:                                        ; preds = %if.then14
  %7 = load i32, i32* %promoted_mode, align 8, !dbg !7727
  %8 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7727
  %call22 = tail call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %7, %union.tree_node* %8, i32 1) #6, !dbg !7727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !7691, metadata !DIExpression()), !dbg !7728
  %cmp23 = icmp ne %struct.rtx_def* %call22, null, !dbg !7729
  %conv25 = zext i1 %cmp23 to i8, !dbg !7730
  call void @llvm.dbg.value(metadata i8 %conv25, metadata !7690, metadata !DIExpression()), !dbg !7699
  br label %if.end27, !dbg !7731

if.end27:                                         ; preds = %if.then14, %land.lhs.true, %if.then18, %if.end6
  %in_regs.1 = phi i8 [ %conv8, %if.end6 ], [ %conv8, %land.lhs.true ], [ %conv25, %if.then18 ], [ %conv8, %if.then14 ], !dbg !7699
  call void @llvm.dbg.value(metadata i8 %in_regs.1, metadata !7690, metadata !DIExpression()), !dbg !7699
  %9 = load i8 (i32, %union.tree_node*)*, i8 (i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 11), align 8, !dbg !7732
  %10 = load i32, i32* %promoted_mode, align 8, !dbg !7734
  %11 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7735
  %call30 = tail call zeroext i8 %9(i32 %10, %union.tree_node* %11) #6, !dbg !7736
  %tobool31 = icmp eq i8 %call30, 0, !dbg !7736
  %spec.select = select i1 %tobool31, %struct.rtx_def* %call, %struct.rtx_def* null, !dbg !7737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7689, metadata !DIExpression()), !dbg !7699
  %tobool34 = icmp eq %struct.rtx_def* %spec.select, null, !dbg !7738
  br i1 %tobool34, label %if.end60, label %if.then35, !dbg !7739

if.then35:                                        ; preds = %if.end27
  %12 = load i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 13), align 8, !dbg !7740
  %13 = load i32, i32* %promoted_mode, align 8, !dbg !7741
  %14 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7742
  %bf.load40 = load i8, i8* %named_arg, align 4, !dbg !7743
  %bf.clear41 = and i8 %bf.load40, 1, !dbg !7743
  %call44 = tail call i32 %12(%struct.ix86_args* %args_so_far, i32 %13, %union.tree_node* %14, i8 zeroext %bf.clear41) #6, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %call44, metadata !7696, metadata !DIExpression()), !dbg !7745
  %partial45 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 8, !dbg !7746
  store i32 %call44, i32* %partial45, align 8, !dbg !7747
  %cmp46 = icmp eq i32 %call44, 0, !dbg !7748
  br i1 %cmp46, label %if.end60, label %land.lhs.true48, !dbg !7750

land.lhs.true48:                                  ; preds = %if.then35
  %reg_parm_stack_space = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 8, !dbg !7751
  %15 = load i32, i32* %reg_parm_stack_space, align 8, !dbg !7751
  %cmp49 = icmp eq i32 %15, 0, !dbg !7752
  br i1 %cmp49, label %if.then51, label %if.end60, !dbg !7753

if.then51:                                        ; preds = %land.lhs.true48
  %extra_pretend_bytes = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 7, !dbg !7754
  %16 = load i64, i64* %extra_pretend_bytes, align 8, !dbg !7754
  %tobool52 = icmp eq i64 %16, 0, !dbg !7754
  br i1 %tobool52, label %land.lhs.true53, label %cond.true, !dbg !7754

land.lhs.true53:                                  ; preds = %if.then51
  %pretend_args_size = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 6, !dbg !7754
  %17 = load i64, i64* %pretend_args_size, align 8, !dbg !7754
  %tobool54 = icmp eq i64 %17, 0, !dbg !7754
  br i1 %tobool54, label %cond.end, label %cond.true, !dbg !7754

cond.true:                                        ; preds = %land.lhs.true53, %if.then51
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7754
  br label %cond.end, !dbg !7754

cond.end:                                         ; preds = %land.lhs.true53, %cond.true
  %conv55 = sext i32 %call44 to i64, !dbg !7756
  call void @llvm.dbg.value(metadata i64 %conv55, metadata !7688, metadata !DIExpression()), !dbg !7699
  %sub = add nsw i64 %conv55, 3, !dbg !7757
  %and = and i64 %sub, -4, !dbg !7757
  %pretend_args_size56 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 6, !dbg !7758
  store i64 %and, i64* %pretend_args_size56, align 8, !dbg !7759
  store i64 %and, i64* %extra_pretend_bytes, align 8, !dbg !7760
  br label %if.end60, !dbg !7761

if.end60:                                         ; preds = %if.then35, %if.end27, %land.lhs.true48, %cond.end
  %pretend_bytes.1 = phi i64 [ 0, %if.end27 ], [ %conv55, %cond.end ], [ 0, %land.lhs.true48 ], [ 0, %if.then35 ], !dbg !7699
  call void @llvm.dbg.value(metadata i64 %pretend_bytes.1, metadata !7688, metadata !DIExpression()), !dbg !7699
  %18 = load i32, i32* %promoted_mode, align 8, !dbg !7762
  %19 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7763
  %conv63 = zext i8 %in_regs.1 to i32, !dbg !7764
  br i1 %tobool34, label %cond.end68, label %cond.true65, !dbg !7765

cond.true65:                                      ; preds = %if.end60
  %partial66 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 8, !dbg !7766
  %20 = load i32, i32* %partial66, align 8, !dbg !7766
  br label %cond.end68, !dbg !7765

cond.end68:                                       ; preds = %if.end60, %cond.true65
  %cond69 = phi i32 [ %20, %cond.true65 ], [ 0, %if.end60 ], !dbg !7765
  %21 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7767
  %stack_args_size = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 1, !dbg !7768
  %locate = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, !dbg !7769
  tail call void @locate_and_pad_parm(i32 %18, %union.tree_node* %19, i32 %conv63, i32 %cond69, %union.tree_node* %21, %struct.args_size* nonnull %stack_args_size, %struct.locate_and_pad_arg_data* nonnull %locate) #7, !dbg !7770
  %tobool70 = icmp eq i8 %in_regs.1, 0, !dbg !7771
  br i1 %tobool70, label %land.lhs.true71, label %if.end78, !dbg !7773

land.lhs.true71:                                  ; preds = %cond.end68
  %22 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 24), align 4, !dbg !7774
  %boundary = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 5, !dbg !7775
  %23 = load i32, i32* %boundary, align 4, !dbg !7775
  %cmp73 = icmp ult i32 %22, %23, !dbg !7776
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !7777

if.then75:                                        ; preds = %land.lhs.true71
  store i32 %23, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 24), align 4, !dbg !7778
  br label %if.end78, !dbg !7779

if.end78:                                         ; preds = %cond.end68, %if.then75, %land.lhs.true71
  %extra_pretend_bytes79 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 7, !dbg !7780
  %24 = load i64, i64* %extra_pretend_bytes79, align 8, !dbg !7780
  %sub80 = sub nsw i64 %24, %pretend_bytes.1, !dbg !7781
  call void @llvm.dbg.value(metadata i64 %sub80, metadata !7688, metadata !DIExpression()), !dbg !7699
  %constant = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 2, i32 0, !dbg !7782
  %25 = load i64, i64* %constant, align 8, !dbg !7783
  %add82 = add nsw i64 %25, %sub80, !dbg !7783
  store i64 %add82, i64* %constant, align 8, !dbg !7783
  %constant84 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 1, i32 0, !dbg !7784
  %26 = load i64, i64* %constant84, align 8, !dbg !7785
  %add85 = add nsw i64 %26, %sub80, !dbg !7785
  store i64 %add85, i64* %constant84, align 8, !dbg !7785
  %entry_parm86 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !7786
  store %struct.rtx_def* %spec.select, %struct.rtx_def** %entry_parm86, align 8, !dbg !7787
  br label %cleanup.cont, !dbg !7788

cleanup.cont:                                     ; preds = %if.then, %if.end78
  ret void, !dbg !7788
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @assign_parm_is_stack_parm(%struct.assign_parm_data_all* %all, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !7789 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !7793, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7794, metadata !DIExpression()), !dbg !7798
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !7799
  %0 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !7799
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !7801
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7802
  br i1 %cmp, label %if.end19, label %if.else, !dbg !7802

if.else:                                          ; preds = %entry
  %partial = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 8, !dbg !7803
  %2 = load i32, i32* %partial, align 8, !dbg !7803
  %cmp1 = icmp eq i32 %2, 0, !dbg !7805
  br i1 %cmp1, label %if.else3, label %if.end19, !dbg !7806

if.else3:                                         ; preds = %if.else
  %bf.load = load i32, i32* %1, align 8, !dbg !7807
  %bf.clear = and i32 %bf.load, 65535, !dbg !7807
  %cmp5 = icmp eq i32 %bf.clear, 15, !dbg !7809
  br i1 %cmp5, label %land.lhs.true, label %if.else13, !dbg !7810

land.lhs.true:                                    ; preds = %if.else3
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7811
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !7811
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7811
  %arrayidx7 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 0, !dbg !7811
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !7811
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7811
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !7811
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7811
  %cmp11 = icmp eq %struct.rtx_def* %5, null, !dbg !7812
  br i1 %cmp11, label %if.end19, label %if.else13, !dbg !7813

if.else13:                                        ; preds = %land.lhs.true, %if.else3
  %reg_parm_stack_space = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 8, !dbg !7814
  %6 = load i32, i32* %reg_parm_stack_space, align 8, !dbg !7814
  %cmp14 = icmp sgt i32 %6, 0, !dbg !7816
  br i1 %cmp14, label %if.end19, label %return, !dbg !7817

if.end19:                                         ; preds = %if.else, %if.else13, %land.lhs.true, %entry
  %constant = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 0, i32 0, !dbg !7818
  %7 = load i64, i64* %constant, align 8, !dbg !7818
  %constant20 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 1, i32 0, !dbg !7819
  %8 = load i64, i64* %constant20, align 8, !dbg !7820
  %add = add nsw i64 %8, %7, !dbg !7820
  store i64 %add, i64* %constant20, align 8, !dbg !7820
  %var = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 0, i32 1, !dbg !7821
  %9 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7821
  %tobool = icmp eq %union.tree_node* %9, null, !dbg !7822
  br i1 %tobool, label %return, label %do.body, !dbg !7823

do.body:                                          ; preds = %if.end19
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7795, metadata !DIExpression()), !dbg !7824
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %9, i32 0) #6, !dbg !7825
  %tobool27 = icmp eq i32 %call, 0, !dbg !7825
  br i1 %tobool27, label %if.else33, label %if.then28, !dbg !7827

if.then28:                                        ; preds = %do.body
  %call29 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %9, i32 0) #6, !dbg !7825
  %10 = load i64, i64* %constant20, align 8, !dbg !7825
  %add32 = add nsw i64 %10, %call29, !dbg !7825
  store i64 %add32, i64* %constant20, align 8, !dbg !7825
  br label %return, !dbg !7825

if.else33:                                        ; preds = %do.body
  %var35 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 1, i32 1, !dbg !7828
  %11 = load %union.tree_node*, %union.tree_node** %var35, align 8, !dbg !7828
  %cmp36 = icmp eq %union.tree_node* %11, null, !dbg !7828
  br i1 %cmp36, label %if.then37, label %if.else41, !dbg !7825

if.then37:                                        ; preds = %if.else33
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !7828
  %call38 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %12, %union.tree_node* nonnull %9) #6, !dbg !7828
  store %union.tree_node* %call38, %union.tree_node** %var35, align 8, !dbg !7828
  br label %return, !dbg !7828

if.else41:                                        ; preds = %if.else33
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !7828
  %call44 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %13, %union.tree_node* nonnull %9) #6, !dbg !7828
  %call45 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* nonnull %11, %union.tree_node* %call44) #6, !dbg !7828
  store %union.tree_node* %call45, %union.tree_node** %var35, align 8, !dbg !7828
  br label %return

return:                                           ; preds = %if.end19, %if.then28, %if.else41, %if.then37, %if.else13
  %retval.0 = phi i8 [ 0, %if.else13 ], [ 1, %if.then37 ], [ 1, %if.else41 ], [ 1, %if.then28 ], [ 1, %if.end19 ], !dbg !7798
  ret i8 %retval.0, !dbg !7830
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_find_stack_rtl(%union.tree_node* %parm, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !7831 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !7835, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7836, metadata !DIExpression()), !dbg !7848
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !7849
  %0 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !7849
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !7851
  br i1 %tobool, label %if.else, label %if.then, !dbg !7852

if.then:                                          ; preds = %entry
  %var = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 2, i32 1, !dbg !7853
  %1 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7853
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !7853
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7853

cond.true:                                        ; preds = %if.then
  %constant = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 2, i32 0, !dbg !7853
  %2 = load i64, i64* %constant, align 8, !dbg !7853
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %2) #6, !dbg !7853
  br label %if.end, !dbg !7853

cond.false:                                       ; preds = %if.then
  br i1 false, label %cond.true7, label %cond.false12, !dbg !7853

cond.true7:                                       ; preds = %cond.false
  br label %cond.end, !dbg !7853

cond.false12:                                     ; preds = %cond.false
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !7853
  %call16 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %3, %union.tree_node* nonnull %1) #6, !dbg !7853
  %constant19 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 2, i32 0, !dbg !7853
  %4 = load i64, i64* %constant19, align 8, !dbg !7853
  %call20 = tail call %union.tree_node* @size_int_kind(i64 %4, i32 1) #6, !dbg !7853
  %call21 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call16, %union.tree_node* %call20) #6, !dbg !7853
  br label %cond.end, !dbg !7853

cond.end:                                         ; preds = %cond.false12, %cond.true7
  %cond = phi %union.tree_node* [ undef, %cond.true7 ], [ %call21, %cond.false12 ], !dbg !7853
  %call22 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond) #7, !dbg !7853
  br label %if.end, !dbg !7853

if.else:                                          ; preds = %entry
  %var26 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 1, i32 1, !dbg !7854
  %5 = load %union.tree_node*, %union.tree_node** %var26, align 8, !dbg !7854
  %cmp27 = icmp eq %union.tree_node* %5, null, !dbg !7854
  br i1 %cmp27, label %cond.true28, label %cond.false33, !dbg !7854

cond.true28:                                      ; preds = %if.else
  %constant31 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 1, i32 0, !dbg !7854
  %6 = load i64, i64* %constant31, align 8, !dbg !7854
  %call32 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %6) #6, !dbg !7854
  br label %if.end, !dbg !7854

cond.false33:                                     ; preds = %if.else
  br i1 false, label %cond.true38, label %cond.false43, !dbg !7854

cond.true38:                                      ; preds = %cond.false33
  br label %cond.end53, !dbg !7854

cond.false43:                                     ; preds = %cond.false33
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !7854
  %call47 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %7, %union.tree_node* nonnull %5) #6, !dbg !7854
  %constant50 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 1, i32 0, !dbg !7854
  %8 = load i64, i64* %constant50, align 8, !dbg !7854
  %call51 = tail call %union.tree_node* @size_int_kind(i64 %8, i32 1) #6, !dbg !7854
  %call52 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call47, %union.tree_node* %call51) #6, !dbg !7854
  br label %cond.end53, !dbg !7854

cond.end53:                                       ; preds = %cond.false43, %cond.true38
  %cond54 = phi %union.tree_node* [ undef, %cond.true38 ], [ %call52, %cond.false43 ], !dbg !7854
  %call55 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond54) #7, !dbg !7854
  br label %if.end, !dbg !7854

if.end:                                           ; preds = %cond.true28, %cond.end53, %cond.true, %cond.end
  %offset_rtx.0 = phi %struct.rtx_def* [ %call, %cond.true ], [ %call22, %cond.end ], [ %call32, %cond.true28 ], [ %call55, %cond.end53 ], !dbg !7855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset_rtx.0, metadata !7837, metadata !DIExpression()), !dbg !7848
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !7856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !7838, metadata !DIExpression()), !dbg !7848
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7857
  %cmp58 = icmp eq %struct.rtx_def* %offset_rtx.0, %10, !dbg !7859
  br i1 %cmp58, label %if.end61, label %if.then59, !dbg !7860

if.then59:                                        ; preds = %if.end
  %call60 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %9, %struct.rtx_def* %offset_rtx.0) #6, !dbg !7861
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call60, metadata !7838, metadata !DIExpression()), !dbg !7848
  br label %if.end61, !dbg !7862

if.end61:                                         ; preds = %if.end, %if.then59
  %stack_parm.0 = phi %struct.rtx_def* [ %call60, %if.then59 ], [ %9, %if.end ], !dbg !7848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %stack_parm.0, metadata !7838, metadata !DIExpression()), !dbg !7848
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !7863
  %11 = load i32, i32* %promoted_mode, align 8, !dbg !7863
  %call62 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %11, %struct.rtx_def* %stack_parm.0) #6, !dbg !7864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call62, metadata !7838, metadata !DIExpression()), !dbg !7848
  %passed_pointer = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !7865
  %bf.load = load i8, i8* %passed_pointer, align 4, !dbg !7865
  %bf.clear = and i8 %bf.load, 2, !dbg !7865
  %tobool63 = icmp eq i8 %bf.clear, 0, !dbg !7866
  br i1 %tobool63, label %if.then64, label %if.end132, !dbg !7867

if.then64:                                        ; preds = %if.end61
  tail call void @set_mem_attributes(%struct.rtx_def* %call62, %union.tree_node* %parm, i32 1) #6, !dbg !7868
  %12 = load i32, i32* %promoted_mode, align 8, !dbg !7869
  %cmp66 = icmp eq i32 %12, 1, !dbg !7870
  br i1 %cmp66, label %if.end132, label %land.lhs.true, !dbg !7871

land.lhs.true:                                    ; preds = %if.then64
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7872
  %13 = bitcast i40* %mode to i64*, !dbg !7872
  %bf.load68 = load i64, i64* %13, align 8, !dbg !7872
  %14 = trunc i64 %bf.load68 to i32, !dbg !7872
  %bf.cast70 = and i32 %14, 255, !dbg !7872
  %cmp71 = icmp eq i32 %12, %bf.cast70, !dbg !7873
  br i1 %cmp71, label %if.end132, label %if.then72, !dbg !7874

if.then72:                                        ; preds = %land.lhs.true
  %idxprom = zext i32 %12 to i64, !dbg !7875
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7875
  %15 = load i8, i8* %arrayidx, align 1, !dbg !7875
  %conv74 = zext i8 %15 to i64, !dbg !7875
  %call75 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv74) #6, !dbg !7875
  tail call void @set_mem_size(%struct.rtx_def* %call62, %struct.rtx_def* %call75) #6, !dbg !7876
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call62, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7877
  %rt_mem = bitcast %union.rtunion_def* %16 to %struct.mem_attrs**, !dbg !7877
  %17 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7877
  %cmp77 = icmp eq %struct.mem_attrs* %17, null, !dbg !7877
  br i1 %cmp77, label %if.end132, label %cond.false80, !dbg !7878

cond.false80:                                     ; preds = %if.then72
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 0, !dbg !7877
  %18 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !7877
  %tobool85 = icmp eq %union.tree_node* %18, null, !dbg !7877
  br i1 %tobool85, label %if.end132, label %land.lhs.true86, !dbg !7878

land.lhs.true86:                                  ; preds = %cond.false80
  br i1 false, label %land.lhs.true86.if.end132_crit_edge, label %cond.false94, !dbg !7879

land.lhs.true86.if.end132_crit_edge:              ; preds = %land.lhs.true86
  br label %if.end132, !dbg !7879

cond.false94:                                     ; preds = %land.lhs.true86
  %offset99 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 1, !dbg !7880
  %19 = load %struct.rtx_def*, %struct.rtx_def** %offset99, align 8, !dbg !7880
  %tobool100 = icmp eq %struct.rtx_def* %19, null, !dbg !7880
  br i1 %tobool100, label %if.end132, label %if.then101, !dbg !7879

if.then101:                                       ; preds = %cond.false94
  %bf.load105 = load i64, i64* %13, align 8, !dbg !7881
  %20 = trunc i64 %bf.load105 to i32, !dbg !7881
  %bf.cast107 = and i32 %20, 255, !dbg !7881
  %21 = load i32, i32* %promoted_mode, align 8, !dbg !7882
  %call109 = tail call i32 @subreg_lowpart_offset(i32 %bf.cast107, i32 %21) #6, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %call109, metadata !7841, metadata !DIExpression()), !dbg !7884
  %tobool110 = icmp eq i32 %call109, 0, !dbg !7885
  br i1 %tobool110, label %if.end132, label %if.then111, !dbg !7887

if.then111:                                       ; preds = %if.then101
  %22 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7888
  %cmp116 = icmp eq %struct.mem_attrs* %22, null, !dbg !7888
  br i1 %cmp116, label %cond.end125, label %cond.false119, !dbg !7888

cond.false119:                                    ; preds = %if.then111
  %offset124 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %22, i64 0, i32 1, !dbg !7888
  %23 = load %struct.rtx_def*, %struct.rtx_def** %offset124, align 8, !dbg !7888
  br label %cond.end125, !dbg !7888

cond.end125:                                      ; preds = %if.then111, %cond.false119
  %cond126 = phi %struct.rtx_def* [ %23, %cond.false119 ], [ null, %if.then111 ], !dbg !7888
  %sub = sub nsw i32 0, %call109, !dbg !7889
  %conv127 = sext i32 %sub to i64, !dbg !7889
  %call128 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %cond126, i64 %conv127) #6, !dbg !7890
  tail call void @set_mem_offset(%struct.rtx_def* %call62, %struct.rtx_def* %call128) #6, !dbg !7891
  br label %if.end132, !dbg !7891

if.end132:                                        ; preds = %land.lhs.true86.if.end132_crit_edge, %if.then101, %cond.false94, %cond.false80, %land.lhs.true, %if.then64, %if.end61, %cond.end125, %if.then72
  %boundary134 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 5, !dbg !7892
  %24 = load i32, i32* %boundary134, align 4, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %24, metadata !7840, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 8, metadata !7839, metadata !DIExpression()), !dbg !7848
  %where_pad = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 4, !dbg !7893
  %25 = load i32, i32* %where_pad, align 8, !dbg !7893
  %cmp136 = icmp eq i32 %25, 2, !dbg !7895
  br i1 %cmp136, label %lor.lhs.false, label %if.end153, !dbg !7896

lor.lhs.false:                                    ; preds = %if.end132
  %26 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !7897
  %tobool139 = icmp eq %struct.rtx_def* %26, null, !dbg !7898
  br i1 %tobool139, label %if.else141, label %if.end153, !dbg !7899

if.else141:                                       ; preds = %lor.lhs.false
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %offset_rtx.0, i64 0, i32 0, !dbg !7900
  %bf.load142 = load i32, i32* %27, align 8, !dbg !7900
  %bf.clear143 = and i32 %bf.load142, 65535, !dbg !7900
  %cmp144 = icmp eq i32 %bf.clear143, 30, !dbg !7900
  br i1 %cmp144, label %if.then146, label %if.end153, !dbg !7902

if.then146:                                       ; preds = %if.else141
  %u147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %offset_rtx.0, i64 0, i32 1, !dbg !7903
  %arrayidx148 = bitcast %union.u* %u147 to i64*, !dbg !7903
  %28 = load i64, i64* %arrayidx148, align 8, !dbg !7903
  %.tr = trunc i64 %28 to i32, !dbg !7903
  %29 = shl i32 %.tr, 3, !dbg !7903
  %conv150 = or i32 %24, %29, !dbg !7903
  call void @llvm.dbg.value(metadata i32 %conv150, metadata !7839, metadata !DIExpression()), !dbg !7848
  %sub151 = sub i32 0, %conv150, !dbg !7905
  %and = and i32 %conv150, %sub151, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %and, metadata !7839, metadata !DIExpression()), !dbg !7848
  br label %if.end153, !dbg !7907

if.end153:                                        ; preds = %lor.lhs.false, %if.end132, %if.else141, %if.then146
  %align.1 = phi i32 [ %24, %lor.lhs.false ], [ %24, %if.end132 ], [ %and, %if.then146 ], [ 8, %if.else141 ], !dbg !7908
  call void @llvm.dbg.value(metadata i32 %align.1, metadata !7839, metadata !DIExpression()), !dbg !7848
  tail call void @set_mem_align(%struct.rtx_def* %call62, i32 %align.1) #6, !dbg !7909
  %30 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !7910
  %tobool155 = icmp eq %struct.rtx_def* %30, null, !dbg !7912
  br i1 %tobool155, label %if.end158, label %if.then156, !dbg !7913

if.then156:                                       ; preds = %if.end153
  tail call void @set_reg_attrs_for_parm(%struct.rtx_def* nonnull %30, %struct.rtx_def* %call62) #6, !dbg !7914
  br label %if.end158, !dbg !7914

if.end158:                                        ; preds = %if.end153, %if.then156
  %stack_parm159 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !7915
  store %struct.rtx_def* %call62, %struct.rtx_def** %stack_parm159, align 8, !dbg !7916
  ret void, !dbg !7917
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_adjust_entry_rtl(%struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !7918 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7922, metadata !DIExpression()), !dbg !7931
  %entry_parm1 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !7932
  %0 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm1, align 8, !dbg !7932
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7923, metadata !DIExpression()), !dbg !7931
  %stack_parm2 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !7933
  %1 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm2, align 8, !dbg !7933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7924, metadata !DIExpression()), !dbg !7931
  %partial = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 8, !dbg !7934
  %2 = load i32, i32* %partial, align 8, !dbg !7934
  %cmp = icmp eq i32 %2, 0, !dbg !7935
  br i1 %cmp, label %if.else13, label %if.then, !dbg !7936

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7937
  %bf.load = load i32, i32* %3, align 8, !dbg !7937
  %bf.clear = and i32 %bf.load, 65535, !dbg !7937
  %cmp3 = icmp eq i32 %bf.clear, 15, !dbg !7940
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7941

if.then4:                                         ; preds = %if.then
  %call = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %1) #6, !dbg !7942
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !7943
  %4 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !7943
  %call6 = tail call i64 @int_size_in_bytes(%union.tree_node* %4) #6, !dbg !7944
  %conv = trunc i64 %call6 to i32, !dbg !7944
  tail call void @emit_group_store(%struct.rtx_def* %call, %struct.rtx_def* %0, %union.tree_node* %4, i32 %conv) #6, !dbg !7945
  br label %if.end101, !dbg !7945

if.else:                                          ; preds = %if.then
  %rem1 = and i32 %2, 3, !dbg !7946
  %cmp8 = icmp eq i32 %rem1, 0, !dbg !7946
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !7946

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2530, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7946
  br label %cond.end, !dbg !7946

cond.end:                                         ; preds = %if.else, %cond.true
  %call10 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !7948
  %call11 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %1) #6, !dbg !7949
  %5 = load i32, i32* %partial, align 8, !dbg !7950
  %div = sdiv i32 %5, 4, !dbg !7951
  tail call void @move_block_from_reg(i32 %call10, %struct.rtx_def* %call11, i32 %div) #6, !dbg !7952
  br label %if.end101

if.else13:                                        ; preds = %entry
  %cmp14 = icmp eq %struct.rtx_def* %0, null, !dbg !7953
  br i1 %cmp14, label %if.end101, label %if.else17, !dbg !7954

if.else17:                                        ; preds = %if.else13
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7955
  %bf.load18 = load i32, i32* %6, align 8, !dbg !7955
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !7955
  %cmp20 = icmp eq i32 %bf.clear19, 15, !dbg !7956
  br i1 %cmp20, label %land.lhs.true, label %if.end101, !dbg !7957

land.lhs.true:                                    ; preds = %if.else17
  %nominal_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !7958
  %7 = load i32, i32* %nominal_mode, align 8, !dbg !7958
  %cmp22 = icmp eq i32 %7, 1, !dbg !7959
  br i1 %cmp22, label %if.end101, label %land.lhs.true24, !dbg !7960

land.lhs.true24:                                  ; preds = %land.lhs.true
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !7961
  %8 = load i32, i32* %passed_mode, align 4, !dbg !7961
  %cmp25 = icmp eq i32 %8, 1, !dbg !7962
  br i1 %cmp25, label %if.end101, label %if.then27, !dbg !7963

if.then27:                                        ; preds = %land.lhs.true24
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7964
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !7964
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7964
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 0, !dbg !7964
  %10 = load i32, i32* %num_elem, align 8, !dbg !7964
  %conv28 = sext i32 %10 to i64, !dbg !7964
  call void @llvm.dbg.value(metadata i64 %conv28, metadata !7930, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i64 0, metadata !7925, metadata !DIExpression()), !dbg !7965
  br label %for.cond, !dbg !7966

for.cond:                                         ; preds = %for.inc, %if.then27
  %i.0 = phi i64 [ 0, %if.then27 ], [ %inc, %for.inc ], !dbg !7968
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !7925, metadata !DIExpression()), !dbg !7965
  %exitcond = icmp eq i64 %i.0, %conv28, !dbg !7969
  br i1 %exitcond, label %if.end101.loopexit, label %for.body, !dbg !7971

for.body:                                         ; preds = %for.cond
  %arrayidx35 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %i.0, !dbg !7972
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8, !dbg !7972
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7972
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !7972
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7972
  %cmp39 = icmp eq %struct.rtx_def* %12, null, !dbg !7974
  br i1 %cmp39, label %for.inc, label %land.lhs.true41, !dbg !7975

land.lhs.true41:                                  ; preds = %for.body
  %arrayidx47 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %i.0, !dbg !7976
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8, !dbg !7976
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7976
  %14 = bitcast %union.rtunion_def* %arrayidx50 to i32**, !dbg !7976
  %15 = load i32*, i32** %14, align 8, !dbg !7976
  %bf.load52 = load i32, i32* %15, align 8, !dbg !7976
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !7976
  %cmp54 = icmp eq i32 %bf.clear53, 37, !dbg !7976
  br i1 %cmp54, label %land.lhs.true56, label %for.inc, !dbg !7977

land.lhs.true56:                                  ; preds = %land.lhs.true41
  %arrayidx62 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %i.0, !dbg !7978
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8, !dbg !7978
  %arrayidx65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7978
  %17 = bitcast %union.rtunion_def* %arrayidx65 to i32**, !dbg !7978
  %18 = load i32*, i32** %17, align 8, !dbg !7978
  %bf.load67 = load i32, i32* %18, align 8, !dbg !7978
  %bf.lshr = lshr i32 %bf.load67, 16, !dbg !7978
  %bf.clear68 = and i32 %bf.lshr, 255, !dbg !7978
  %cmp70 = icmp eq i32 %bf.clear68, %8, !dbg !7979
  br i1 %cmp70, label %land.lhs.true72, label %for.inc, !dbg !7980

land.lhs.true72:                                  ; preds = %land.lhs.true56
  %arrayidx78 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %i.0, !dbg !7981
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx78, align 8, !dbg !7981
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7981
  %rt_rtx82 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !7981
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !7981
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, !dbg !7981
  %arrayidx84 = bitcast %union.u* %u83 to i64*, !dbg !7981
  %22 = load i64, i64* %arrayidx84, align 8, !dbg !7981
  %cmp85 = icmp eq i64 %22, 0, !dbg !7982
  br i1 %cmp85, label %if.then87, label %for.inc, !dbg !7983

if.then87:                                        ; preds = %land.lhs.true72
  %.lcssa = phi %struct.rtx_def* [ %19, %land.lhs.true72 ], !dbg !7981
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !7925, metadata !DIExpression()), !dbg !7965
  %arrayidx96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7984
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !7984
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !7984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !7923, metadata !DIExpression()), !dbg !7931
  br label %if.end101, !dbg !7986

for.inc:                                          ; preds = %for.body, %land.lhs.true41, %land.lhs.true56, %land.lhs.true72
  %inc = add i64 %i.0, 1, !dbg !7987
  call void @llvm.dbg.value(metadata i64 %inc, metadata !7925, metadata !DIExpression()), !dbg !7965
  br label %for.cond, !dbg !7988, !llvm.loop !7989

if.end101.loopexit:                               ; preds = %for.cond
  br label %if.end101, !dbg !7991

if.end101:                                        ; preds = %if.end101.loopexit, %land.lhs.true24, %land.lhs.true, %if.else13, %if.then87, %if.else17, %if.then4, %cond.end
  %entry_parm.3 = phi %struct.rtx_def* [ %1, %cond.end ], [ %1, %if.then4 ], [ %1, %if.else13 ], [ %0, %land.lhs.true24 ], [ %0, %land.lhs.true ], [ %0, %if.else17 ], [ %23, %if.then87 ], [ %0, %if.end101.loopexit ], !dbg !7992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %entry_parm.3, metadata !7923, metadata !DIExpression()), !dbg !7931
  store %struct.rtx_def* %entry_parm.3, %struct.rtx_def** %entry_parm1, align 8, !dbg !7993
  ret void, !dbg !7994
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_adjust_stack_rtl(%struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !7995 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !7997, metadata !DIExpression()), !dbg !7999
  %stack_parm1 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8000
  %0 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm1, align 8, !dbg !8000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7998, metadata !DIExpression()), !dbg !7999
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !8001
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8003

land.lhs.true:                                    ; preds = %entry
  %nominal_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 0, !dbg !8004
  %1 = load %union.tree_node*, %union.tree_node** %nominal_type, align 8, !dbg !8004
  %tobool2 = icmp eq %union.tree_node* %1, null, !dbg !8005
  br i1 %tobool2, label %if.else, label %land.lhs.true3, !dbg !8006

land.lhs.true3:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8007
  %3 = load i32, i32* %2, align 8, !dbg !8007
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8008
  %rt_mem = bitcast %union.rtunion_def* %4 to %struct.mem_attrs**, !dbg !8008
  %5 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8008
  %cmp = icmp eq %struct.mem_attrs* %5, null, !dbg !8008
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8008

cond.true:                                        ; preds = %land.lhs.true3
  %align9 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i64 0, i32 4, !dbg !8008
  %6 = load i32, i32* %align9, align 4, !dbg !8008
  br label %cond.end, !dbg !8008

cond.end:                                         ; preds = %land.lhs.true3, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ 8, %land.lhs.true3 ], !dbg !8008
  %cmp10 = icmp ugt i32 %3, %cond, !dbg !8009
  br i1 %cmp10, label %land.lhs.true11, label %if.else, !dbg !8010

land.lhs.true11:                                  ; preds = %cond.end
  br i1 %cmp, label %cond.end24, label %cond.true17, !dbg !8011

cond.true17:                                      ; preds = %land.lhs.true11
  %align22 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i64 0, i32 4, !dbg !8011
  %7 = load i32, i32* %align22, align 4, !dbg !8011
  br label %cond.end24, !dbg !8011

cond.end24:                                       ; preds = %land.lhs.true11, %cond.true17
  %cond25 = phi i32 [ %7, %cond.true17 ], [ 8, %land.lhs.true11 ], !dbg !8011
  %8 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !8012
  %cmp26 = icmp ult i32 %cond25, %8, !dbg !8013
  br i1 %cmp26, label %if.end54, label %if.else, !dbg !8014

if.else:                                          ; preds = %land.lhs.true, %entry, %cond.end24, %cond.end
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8015
  %9 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !8015
  %cmp27 = icmp eq %struct.rtx_def* %9, %0, !dbg !8017
  br i1 %cmp27, label %land.lhs.true28, label %if.else34, !dbg !8018

land.lhs.true28:                                  ; preds = %if.else
  %nominal_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !8019
  %10 = load i32, i32* %nominal_mode, align 8, !dbg !8019
  %cmp29 = icmp eq i32 %10, 1, !dbg !8020
  br i1 %cmp29, label %if.else34, label %land.lhs.true30, !dbg !8021

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !8022
  %11 = load i32, i32* %passed_mode, align 4, !dbg !8022
  %cmp32 = icmp eq i32 %10, %11, !dbg !8023
  br i1 %cmp32, label %if.else34, label %if.end54, !dbg !8024

if.else34:                                        ; preds = %land.lhs.true30, %land.lhs.true28, %if.else
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !8025
  %tobool35 = icmp eq %union.tree_node* %12, null, !dbg !8027
  br i1 %tobool35, label %if.end54, label %land.lhs.true36, !dbg !8028

land.lhs.true36:                                  ; preds = %if.else34
  %13 = load i32, i32* @flag_stack_protect, align 4, !dbg !8029
  %cmp37 = icmp eq i32 %13, 2, !dbg !8030
  br i1 %cmp37, label %if.then52, label %lor.lhs.false, !dbg !8031

lor.lhs.false:                                    ; preds = %land.lhs.true36
  %passed_pointer = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !8032
  %bf.load = load i8, i8* %passed_pointer, align 4, !dbg !8032
  %bf.clear = and i8 %bf.load, 2, !dbg !8032
  %tobool38 = icmp eq i8 %bf.clear, 0, !dbg !8033
  br i1 %tobool38, label %lor.lhs.false39, label %if.then52, !dbg !8034

lor.lhs.false39:                                  ; preds = %lor.lhs.false
  %14 = bitcast %struct.assign_parm_data_one* %data to i64**, !dbg !8035
  %15 = load i64*, i64** %14, align 8, !dbg !8035
  %bf.load41 = load i64, i64* %15, align 8, !dbg !8035
  %bf.cast431 = and i64 %bf.load41, 65535, !dbg !8035
  %cmp44 = icmp eq i64 %bf.cast431, 10, !dbg !8035
  br i1 %cmp44, label %if.then52, label %lor.lhs.false45, !dbg !8035

lor.lhs.false45:                                  ; preds = %lor.lhs.false39
  %cmp51 = icmp eq i64 %bf.cast431, 12, !dbg !8035
  br i1 %cmp51, label %if.then52, label %if.end54, !dbg !8036

if.then52:                                        ; preds = %lor.lhs.false, %lor.lhs.false45, %lor.lhs.false39, %land.lhs.true36
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7998, metadata !DIExpression()), !dbg !7999
  br label %if.end54, !dbg !8037

if.end54:                                         ; preds = %land.lhs.true30, %if.else34, %if.then52, %lor.lhs.false45, %cond.end24
  %stack_parm.2 = phi %struct.rtx_def* [ null, %cond.end24 ], [ null, %land.lhs.true30 ], [ null, %if.then52 ], [ %0, %lor.lhs.false45 ], [ %0, %if.else34 ], !dbg !8038
  call void @llvm.dbg.value(metadata %struct.rtx_def* %stack_parm.2, metadata !7998, metadata !DIExpression()), !dbg !7999
  store %struct.rtx_def* %stack_parm.2, %struct.rtx_def** %stack_parm1, align 8, !dbg !8039
  ret void, !dbg !8040
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @assign_parm_setup_block_p(%struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !8041 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !8045, metadata !DIExpression()), !dbg !8046
  %nominal_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !8047
  %0 = load i32, i32* %nominal_mode, align 8, !dbg !8047
  %cmp = icmp eq i32 %0, 1, !dbg !8049
  br i1 %cmp, label %return, label %if.end, !dbg !8050

if.end:                                           ; preds = %entry
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8051
  %1 = bitcast %struct.rtx_def** %entry_parm to i32**, !dbg !8051
  %2 = load i32*, i32** %1, align 8, !dbg !8051
  %bf.load = load i32, i32* %2, align 8, !dbg !8051
  %bf.clear = and i32 %bf.load, 16711680, !dbg !8051
  %cmp1 = icmp eq i32 %bf.clear, 65536, !dbg !8053
  %. = zext i1 %cmp1 to i8, !dbg !8046
  br label %return, !dbg !8046

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %., %if.end ], !dbg !8046
  ret i8 %retval.0, !dbg !8054
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_setup_block(%struct.assign_parm_data_all* %all, %union.tree_node* %parm, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !8055 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !8057, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !8058, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !8059, metadata !DIExpression()), !dbg !8081
  %entry_parm1 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8082
  %0 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm1, align 8, !dbg !8082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !8060, metadata !DIExpression()), !dbg !8081
  %stack_parm2 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8083
  %1 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm2, align 8, !dbg !8083
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !8061, metadata !DIExpression()), !dbg !8081
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !8084
  %bf.load = load i32, i32* %2, align 8, !dbg !8084
  %bf.clear = and i32 %bf.load, 65535, !dbg !8084
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !8086
  br i1 %cmp, label %if.then, label %if.end, !dbg !8087

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_group_move_into_temps(%struct.rtx_def* %0) #6, !dbg !8088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8060, metadata !DIExpression()), !dbg !8081
  br label %if.end, !dbg !8089

if.end:                                           ; preds = %if.then, %entry
  %entry_parm.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %0, %entry ], !dbg !8081
  call void @llvm.dbg.value(metadata %struct.rtx_def* %entry_parm.0, metadata !8060, metadata !DIExpression()), !dbg !8081
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !8090
  %3 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !8090
  %call3 = tail call i64 @int_size_in_bytes(%union.tree_node* %3) #6, !dbg !8091
  call void @llvm.dbg.value(metadata i64 %call3, metadata !8062, metadata !DIExpression()), !dbg !8081
  %sub = add nsw i64 %call3, 3, !dbg !8092
  %and = and i64 %sub, -4, !dbg !8092
  call void @llvm.dbg.value(metadata i64 %and, metadata !8063, metadata !DIExpression()), !dbg !8081
  %cmp4 = icmp eq %struct.rtx_def* %1, null, !dbg !8093
  br i1 %cmp4, label %if.then5, label %if.end26, !dbg !8095

if.then5:                                         ; preds = %if.end
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8096
  %4 = load i32, i32* %align, align 8, !dbg !8096
  %cmp6 = icmp ugt i32 %4, 32, !dbg !8096
  br i1 %cmp6, label %cond.true, label %cond.end, !dbg !8096

cond.true:                                        ; preds = %if.then5
  br label %cond.end, !dbg !8096

cond.end:                                         ; preds = %if.then5, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 32, %if.then5 ], !dbg !8096
  store i32 %cond, i32* %align, align 8, !dbg !8098
  %call13 = tail call %struct.rtx_def* @assign_stack_local(i32 1, i64 %and, i32 %cond) #7, !dbg !8099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !8061, metadata !DIExpression()), !dbg !8081
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %entry_parm.0, i64 0, i32 0, !dbg !8100
  %bf.load14 = load i32, i32* %5, align 8, !dbg !8100
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !8100
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !8100
  %idxprom = zext i32 %bf.clear15 to i64, !dbg !8100
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8100
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8100
  %conv16 = zext i8 %6 to i64, !dbg !8100
  %cmp17 = icmp eq i64 %call3, %conv16, !dbg !8102
  br i1 %cmp17, label %if.then19, label %if.end25, !dbg !8103

if.then19:                                        ; preds = %cond.end
  %bf.clear22 = and i32 %bf.load14, 16711680, !dbg !8104
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call13, i64 0, i32 0, !dbg !8104
  %bf.load23 = load i32, i32* %7, align 8, !dbg !8104
  %bf.clear24 = and i32 %bf.load23, -16711681, !dbg !8104
  %bf.set = or i32 %bf.clear24, %bf.clear22, !dbg !8104
  store i32 %bf.set, i32* %7, align 8, !dbg !8104
  br label %if.end25, !dbg !8104

if.end25:                                         ; preds = %if.then19, %cond.end
  tail call void @set_mem_attributes(%struct.rtx_def* %call13, %union.tree_node* %parm, i32 1) #6, !dbg !8105
  br label %if.end26, !dbg !8106

if.end26:                                         ; preds = %if.end25, %if.end
  %stack_parm.0 = phi %struct.rtx_def* [ %call13, %if.end25 ], [ %1, %if.end ], !dbg !8081
  call void @llvm.dbg.value(metadata %struct.rtx_def* %stack_parm.0, metadata !8061, metadata !DIExpression()), !dbg !8081
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %entry_parm.0, i64 0, i32 0, !dbg !8107
  %bf.load27 = load i32, i32* %8, align 8, !dbg !8107
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !8107
  %cmp29 = icmp eq i32 %bf.clear28, 37, !dbg !8107
  br i1 %cmp29, label %if.then35, label %lor.lhs.false, !dbg !8108

lor.lhs.false:                                    ; preds = %if.end26
  %cmp33 = icmp eq i32 %bf.clear28, 15, !dbg !8109
  br i1 %cmp33, label %if.then35, label %if.else109, !dbg !8110

if.then35:                                        ; preds = %lor.lhs.false, %if.end26
  br label %if.end52, !dbg !8111

if.else:                                          ; No predecessors!
  br label %if.end52, !dbg !8112

if.else45:                                        ; No predecessors!
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then35, %if.else45
  %call53 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %stack_parm.0) #6, !dbg !8114
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !8064, metadata !DIExpression()), !dbg !8115
  %bf.load54 = load i32, i32* %8, align 8, !dbg !8116
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !8116
  %cmp56 = icmp eq i32 %bf.clear55, 15, !dbg !8117
  br i1 %cmp56, label %if.then58, label %if.else65, !dbg !8118

if.then58:                                        ; preds = %if.end52
  %first_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8119
  %9 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8119
  %last_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8121
  %10 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8121
  tail call void @push_to_sequence2(%struct.rtx_def* %9, %struct.rtx_def* %10) #6, !dbg !8122
  %11 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !8123
  %conv60 = trunc i64 %call3 to i32, !dbg !8124
  tail call void @emit_group_store(%struct.rtx_def* %call53, %struct.rtx_def* %entry_parm.0, %union.tree_node* %11, i32 %conv60) #6, !dbg !8125
  %call61 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8126
  store %struct.rtx_def* %call61, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8127
  %call63 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !8128
  store %struct.rtx_def* %call63, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8129
  tail call void @end_sequence() #6, !dbg !8130
  br label %if.end124, !dbg !8131

if.else65:                                        ; preds = %if.end52
  %cmp66 = icmp eq i64 %call3, 0, !dbg !8132
  br i1 %cmp66, label %if.end124, label %if.else69, !dbg !8133

if.else69:                                        ; preds = %if.else65
  %cmp70 = icmp slt i64 %call3, 5, !dbg !8134
  br i1 %cmp70, label %if.then72, label %if.else102, !dbg !8135

if.then72:                                        ; preds = %if.else69
  %call3.tr = trunc i64 %call3 to i32, !dbg !8136
  %conv73 = shl i32 %call3.tr, 3, !dbg !8136
  %call74 = tail call i32 @mode_for_size(i32 %conv73, i32 2, i32 0) #6, !dbg !8137
  call void @llvm.dbg.value(metadata i32 %call74, metadata !8067, metadata !DIExpression()), !dbg !8138
  %cmp75 = icmp eq i32 %call74, 1, !dbg !8139
  br i1 %cmp75, label %if.else82, label %if.then77, !dbg !8140

if.then77:                                        ; preds = %if.then72
  %call78 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %entry_parm.0) #7, !dbg !8141
  %call79 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %call74, i32 %call78) #6, !dbg !8143
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !8072, metadata !DIExpression()), !dbg !8144
  %call80 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %call53, i32 %call74, %struct.rtx_def* null) #6, !dbg !8145
  %call81 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call80, %struct.rtx_def* %call79) #6, !dbg !8146
  br label %if.end124, !dbg !8147

if.else82:                                        ; preds = %if.then72
  %call98 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %entry_parm.0) #7, !dbg !8148
  %div = sdiv i64 %and, 4, !dbg !8149
  %conv99 = trunc i64 %div to i32, !dbg !8150
  tail call void @move_block_from_reg(i32 %call98, %struct.rtx_def* %call53, i32 %conv99) #6, !dbg !8151
  br label %if.end124

if.else102:                                       ; preds = %if.else69
  %call103 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %entry_parm.0) #7, !dbg !8152
  %div104 = sdiv i64 %and, 4, !dbg !8153
  %conv105 = trunc i64 %div104 to i32, !dbg !8154
  tail call void @move_block_from_reg(i32 %call103, %struct.rtx_def* %call53, i32 %conv105) #6, !dbg !8155
  br label %if.end124

if.else109:                                       ; preds = %lor.lhs.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm2, align 8, !dbg !8156
  %cmp111 = icmp eq %struct.rtx_def* %12, null, !dbg !8158
  br i1 %cmp111, label %if.then113, label %if.end124, !dbg !8159

if.then113:                                       ; preds = %if.else109
  %first_conversion_insn114 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8160
  %13 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn114, align 8, !dbg !8160
  %last_conversion_insn115 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8162
  %14 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn115, align 8, !dbg !8162
  tail call void @push_to_sequence2(%struct.rtx_def* %13, %struct.rtx_def* %14) #6, !dbg !8163
  %15 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm1, align 8, !dbg !8164
  %call117 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call3) #6, !dbg !8165
  %call118 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %stack_parm.0, %struct.rtx_def* %15, %struct.rtx_def* %call117, i32 0) #6, !dbg !8166
  %call119 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8167
  store %struct.rtx_def* %call119, %struct.rtx_def** %first_conversion_insn114, align 8, !dbg !8168
  %call121 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !8169
  store %struct.rtx_def* %call121, %struct.rtx_def** %last_conversion_insn115, align 8, !dbg !8170
  tail call void @end_sequence() #6, !dbg !8171
  br label %if.end124, !dbg !8172

if.end124:                                        ; preds = %if.else109, %if.then113, %if.then58, %if.else102, %if.else82, %if.then77, %if.else65
  store %struct.rtx_def* %stack_parm.0, %struct.rtx_def** %stack_parm2, align 8, !dbg !8173
  tail call void @set_decl_rtl(%union.tree_node* %parm, %struct.rtx_def* %stack_parm.0) #6, !dbg !8174
  ret void, !dbg !8175
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_setup_reg(%struct.assign_parm_data_all* %all, %union.tree_node* %parm, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !8176 {
entry:
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !8178, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !8179, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !8180, metadata !DIExpression()), !dbg !8215
  %0 = bitcast i32* %unsignedp to i8*, !dbg !8216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8216
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8217
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !8217
  %2 = load i64*, i64** %1, align 8, !dbg !8217
  %bf.load = load i64, i64* %2, align 8, !dbg !8217
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !8217
  %3 = trunc i64 %bf.lshr to i32, !dbg !8217
  %bf.cast = and i32 %3, 1, !dbg !8217
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !8183, metadata !DIExpression()), !dbg !8215
  store i32 %bf.cast, i32* %unsignedp, align 4, !dbg !8218
  call void @llvm.dbg.value(metadata i8 0, metadata !8184, metadata !DIExpression()), !dbg !8215
  %nominal_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 0, !dbg !8219
  %4 = load %union.tree_node*, %union.tree_node** %nominal_type, align 8, !dbg !8219
  %nominal_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !8220
  %5 = load i32, i32* %nominal_mode, align 8, !dbg !8220
  %6 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !8221
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !8221
  %7 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !8221
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !8183, metadata !DIExpression(DW_OP_deref)), !dbg !8215
  %call = call i32 @promote_function_mode(%union.tree_node* %4, i32 %5, i32* nonnull %unsignedp, %union.tree_node* %7, i32 2) #6, !dbg !8222
  call void @llvm.dbg.value(metadata i32 %call, metadata !8182, metadata !DIExpression()), !dbg !8215
  %call3 = call %struct.rtx_def* @gen_reg_rtx(i32 %call) #6, !dbg !8223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !8181, metadata !DIExpression()), !dbg !8215
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8224
  %8 = bitcast i40* %artificial_flag to i64*, !dbg !8224
  %bf.load4 = load i64, i64* %8, align 8, !dbg !8224
  %bf.cast71 = and i64 %bf.load4, 4096, !dbg !8224
  %tobool = icmp eq i64 %bf.cast71, 0, !dbg !8224
  br i1 %tobool, label %if.then, label %if.end, !dbg !8226

if.then:                                          ; preds = %entry
  call void @mark_user_reg(%struct.rtx_def* %call3) #6, !dbg !8227
  br label %if.end, !dbg !8227

if.end:                                           ; preds = %entry, %if.then
  %passed_pointer = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 9, !dbg !8228
  %bf.load8 = load i8, i8* %passed_pointer, align 4, !dbg !8228
  %bf.clear10 = and i8 %bf.load8, 2, !dbg !8228
  %tobool12 = icmp eq i8 %bf.clear10, 0, !dbg !8229
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !8230

if.then13:                                        ; preds = %if.end
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !8231
  %9 = bitcast %union.tree_node** %passed_type to %struct.tree_common**, !dbg !8231
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !8231
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !8231
  %11 = bitcast %union.tree_node** %type15 to i64**, !dbg !8231
  %12 = load i64*, i64** %11, align 8, !dbg !8231
  %bf.load17 = load i64, i64* %12, align 8, !dbg !8231
  %bf.cast1912 = and i64 %bf.load17, 65535, !dbg !8231
  %cmp = icmp eq i64 %bf.cast1912, 14, !dbg !8231
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8231

cond.true:                                        ; preds = %if.then13
  %13 = bitcast i64* %12 to %union.tree_node*, !dbg !8231
  %call23 = call i32 @vector_type_mode(%union.tree_node* %13) #6, !dbg !8231
  br label %cond.end, !dbg !8231

cond.false:                                       ; preds = %if.then13
  %type27 = bitcast i64* %12 to %struct.tree_type*, !dbg !8231
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i64 0, i32 6, !dbg !8231
  %bf.load28 = load i32, i32* %mode, align 4, !dbg !8231
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !8231
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !8231
  br label %cond.end, !dbg !8231

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ %bf.clear30, %cond.false ], !dbg !8231
  %call31 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond, %struct.rtx_def* %call3) #6, !dbg !8232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !8185, metadata !DIExpression()), !dbg !8233
  call void @set_mem_attributes(%struct.rtx_def* %call31, %union.tree_node* %parm, i32 1) #6, !dbg !8234
  call void @set_decl_rtl(%union.tree_node* %parm, %struct.rtx_def* %call31) #6, !dbg !8235
  br label %if.end32, !dbg !8236

if.else:                                          ; preds = %if.end
  call void @set_decl_rtl(%union.tree_node* %parm, %struct.rtx_def* %call3) #6, !dbg !8237
  br label %if.end32

if.end32:                                         ; preds = %if.else, %cond.end
  call fastcc void @assign_parm_remove_parallels(%struct.assign_parm_data_one* %data) #7, !dbg !8238
  %14 = load i32, i32* %nominal_mode, align 8, !dbg !8239
  %passed_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 5, !dbg !8240
  %15 = load i32, i32* %passed_mode, align 4, !dbg !8240
  %cmp34 = icmp eq i32 %14, %15, !dbg !8241
  br i1 %cmp34, label %lor.lhs.false, label %if.then36, !dbg !8242

lor.lhs.false:                                    ; preds = %if.end32
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !8243
  %16 = load i32, i32* %promoted_mode, align 8, !dbg !8243
  %cmp35 = icmp eq i32 %call, %16, !dbg !8244
  br i1 %cmp35, label %if.else125, label %if.then36, !dbg !8245

if.then36:                                        ; preds = %lor.lhs.false, %if.end32
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8246
  %17 = bitcast %struct.rtx_def** %entry_parm to i32**, !dbg !8246
  %18 = load i32*, i32** %17, align 8, !dbg !8246
  %bf.load37 = load i32, i32* %18, align 8, !dbg !8246
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !8246
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !8246
  %call40 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear39) #6, !dbg !8247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !8191, metadata !DIExpression()), !dbg !8248
  %19 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !8249
  %call42 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %19) #6, !dbg !8250
  %call43 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call40, %struct.rtx_def* %call42) #6, !dbg !8251
  %first_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8252
  %20 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8252
  %last_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8253
  %21 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8253
  call void @push_to_sequence2(%struct.rtx_def* %20, %struct.rtx_def* %21) #6, !dbg !8254
  %22 = load i32, i32* %nominal_mode, align 8, !dbg !8255
  %23 = load i32, i32* %unsignedp, align 4, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %23, metadata !8183, metadata !DIExpression()), !dbg !8215
  %call45 = call %struct.rtx_def* @convert_to_mode(i32 %22, %struct.rtx_def* %call40, i32 %23) #6, !dbg !8257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !8191, metadata !DIExpression()), !dbg !8248
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call45, i64 0, i32 0, !dbg !8258
  %bf.load46 = load i32, i32* %24, align 8, !dbg !8258
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !8258
  %cmp48 = icmp eq i32 %bf.clear47, 39, !dbg !8259
  br i1 %cmp48, label %land.lhs.true, label %if.end107, !dbg !8260

land.lhs.true:                                    ; preds = %if.then36
  %bf.lshr50 = lshr i32 %bf.load46, 16, !dbg !8261
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !8261
  %25 = load i32, i32* %nominal_mode, align 8, !dbg !8262
  %cmp53 = icmp eq i32 %bf.clear51, %25, !dbg !8263
  br i1 %cmp53, label %land.lhs.true54, label %if.end107, !dbg !8264

land.lhs.true54:                                  ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call45, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8265
  %26 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !8265
  %27 = load i32*, i32** %26, align 8, !dbg !8265
  %bf.load55 = load i32, i32* %27, align 8, !dbg !8265
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !8265
  %cmp57 = icmp eq i32 %bf.clear56, 37, !dbg !8265
  br i1 %cmp57, label %land.lhs.true58, label %if.end107, !dbg !8266

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %28 = load i32, i32* %passed_mode, align 4, !dbg !8267
  %cmp61 = icmp eq i32 %bf.clear51, %28, !dbg !8268
  br i1 %cmp61, label %land.lhs.true62, label %if.end107, !dbg !8269

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %29 = load i32*, i32** %17, align 8, !dbg !8270
  %bf.load71 = load i32, i32* %29, align 8, !dbg !8270
  %bf.lshr6815 = xor i32 %bf.load55, %bf.load71, !dbg !8271
  %30 = and i32 %bf.lshr6815, 16711680, !dbg !8271
  %cmp74 = icmp eq i32 %30, 0, !dbg !8271
  br i1 %cmp74, label %land.lhs.true75, label %if.end107, !dbg !8272

land.lhs.true75:                                  ; preds = %land.lhs.true62
  %idxprom = zext i32 %bf.clear51 to i64, !dbg !8273
  %arrayidx79 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8273
  %31 = load i8, i8* %arrayidx79, align 1, !dbg !8273
  %bf.lshr83 = lshr i32 %bf.load71, 16, !dbg !8274
  %bf.clear84 = and i32 %bf.lshr83, 255, !dbg !8274
  %idxprom85 = zext i32 %bf.clear84 to i64, !dbg !8274
  %arrayidx86 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom85, !dbg !8274
  %32 = load i8, i8* %arrayidx86, align 1, !dbg !8274
  %cmp89 = icmp ult i8 %31, %32, !dbg !8275
  br i1 %cmp89, label %if.then91, label %if.end107, !dbg !8276

if.then91:                                        ; preds = %land.lhs.true75
  %bf.set = or i32 %bf.load46, 268435456, !dbg !8277
  store i32 %bf.set, i32* %24, align 8, !dbg !8277
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !8192, metadata !DIExpression()), !dbg !8278
  %33 = load i32, i32* %unsignedp, align 4, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %33, metadata !8183, metadata !DIExpression()), !dbg !8215
  %cmp94 = icmp slt i32 %33, 0, !dbg !8279
  br i1 %cmp94, label %if.then96, label %if.else100, !dbg !8281

if.then96:                                        ; preds = %if.then91
  %bf.set99 = or i32 %bf.load46, 402653184, !dbg !8279
  store i32 %bf.set99, i32* %24, align 8, !dbg !8279
  br label %if.end107, !dbg !8279

if.else100:                                       ; preds = %if.then91
  %bf.clear98 = and i32 %bf.set, -134217729, !dbg !8282
  store i32 %bf.clear98, i32* %24, align 8, !dbg !8283
  %34 = load i32, i32* %unsignedp, align 4, !dbg !8283
  call void @llvm.dbg.value(metadata i32 %34, metadata !8183, metadata !DIExpression()), !dbg !8215
  %bf.value = shl i32 %34, 26, !dbg !8283
  %bf.shl = and i32 %bf.value, 67108864, !dbg !8283
  %bf.clear104 = and i32 %bf.set, -201326593, !dbg !8283
  %bf.set105 = or i32 %bf.clear104, %bf.shl, !dbg !8283
  store i32 %bf.set105, i32* %24, align 8, !dbg !8283
  br label %if.end107

if.end107:                                        ; preds = %if.then96, %if.else100, %land.lhs.true75, %land.lhs.true62, %land.lhs.true58, %land.lhs.true54, %land.lhs.true, %if.then36
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8285
  %bf.load109 = load i64, i64* %35, align 8, !dbg !8285
  %bf.cast112 = and i64 %bf.load109, 16777216, !dbg !8285
  %36 = load %union.tree_node*, %union.tree_node** %nominal_type, align 8, !dbg !8286
  %call114 = call %union.tree_node* @make_tree(%union.tree_node* %36, %struct.rtx_def* %call45) #6, !dbg !8287
  call void @expand_assignment(%union.tree_node* %parm, %union.tree_node* %call114, i8 zeroext 0) #6, !dbg !8288
  %bf.load116 = load i64, i64* %35, align 8, !dbg !8289
  %bf.clear119 = and i64 %bf.load116, -16777217, !dbg !8289
  %bf.set120 = or i64 %bf.clear119, %bf.cast112, !dbg !8289
  store i64 %bf.set120, i64* %35, align 8, !dbg !8289
  %call121 = call %struct.rtx_def* @get_insns() #6, !dbg !8290
  store %struct.rtx_def* %call121, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8291
  %call123 = call %struct.rtx_def* @get_last_insn() #6, !dbg !8292
  store %struct.rtx_def* %call123, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8293
  call void @end_sequence() #6, !dbg !8294
  call void @llvm.dbg.value(metadata i8 1, metadata !8184, metadata !DIExpression()), !dbg !8215
  br label %if.end129, !dbg !8295

if.else125:                                       ; preds = %lor.lhs.false
  %entry_parm126 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8296
  %37 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm126, align 8, !dbg !8296
  %call127 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %37) #6, !dbg !8297
  %call128 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call3, %struct.rtx_def* %call127) #6, !dbg !8298
  br label %if.end129

if.end129:                                        ; preds = %if.else125, %if.end107
  %did_conversion.0 = phi i8 [ 1, %if.end107 ], [ 0, %if.else125 ], !dbg !8215
  call void @llvm.dbg.value(metadata i8 %did_conversion.0, metadata !8184, metadata !DIExpression()), !dbg !8215
  %bf.load131 = load i8, i8* %passed_pointer, align 4, !dbg !8299
  %bf.clear133 = and i8 %bf.load131, 2, !dbg !8299
  %tobool135 = icmp eq i8 %bf.clear133, 0, !dbg !8300
  br i1 %tobool135, label %if.end306, label %land.lhs.true136, !dbg !8301

land.lhs.true136:                                 ; preds = %if.end129
  %38 = load i64*, i64** %1, align 8, !dbg !8302
  %bf.load140 = load i64, i64* %38, align 8, !dbg !8302
  %bf.cast1424 = and i64 %bf.load140, 65535, !dbg !8302
  %cmp143 = icmp eq i64 %bf.cast1424, 14, !dbg !8302
  br i1 %cmp143, label %cond.true145, label %cond.false149, !dbg !8302

cond.true145:                                     ; preds = %land.lhs.true136
  %.cast = bitcast i64* %38 to %union.tree_node*, !dbg !8302
  %call148 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8302
  br label %cond.end157, !dbg !8302

cond.false149:                                    ; preds = %land.lhs.true136
  %type152 = bitcast i64* %38 to %struct.tree_type*, !dbg !8302
  %mode153 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type152, i64 0, i32 6, !dbg !8302
  %bf.load154 = load i32, i32* %mode153, align 4, !dbg !8302
  %bf.lshr155 = lshr i32 %bf.load154, 16, !dbg !8302
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !8302
  br label %cond.end157, !dbg !8302

cond.end157:                                      ; preds = %cond.false149, %cond.true145
  %cond158 = phi i32 [ %call148, %cond.true145 ], [ %bf.clear156, %cond.false149 ], !dbg !8302
  %cmp159 = icmp eq i32 %cond158, 1, !dbg !8303
  br i1 %cmp159, label %if.end306, label %land.lhs.true161, !dbg !8304

land.lhs.true161:                                 ; preds = %cond.end157
  %39 = load i64*, i64** %1, align 8, !dbg !8305
  %bf.load165 = load i64, i64* %39, align 8, !dbg !8305
  %bf.cast1675 = and i64 %bf.load165, 65535, !dbg !8305
  %cmp168 = icmp eq i64 %bf.cast1675, 14, !dbg !8305
  br i1 %cmp168, label %cond.true170, label %cond.false174, !dbg !8305

cond.true170:                                     ; preds = %land.lhs.true161
  %.cast6 = bitcast i64* %39 to %union.tree_node*, !dbg !8305
  %call173 = call i32 @vector_type_mode(%union.tree_node* %.cast6) #6, !dbg !8305
  br label %cond.end182, !dbg !8305

cond.false174:                                    ; preds = %land.lhs.true161
  %type177 = bitcast i64* %39 to %struct.tree_type*, !dbg !8305
  %mode178 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type177, i64 0, i32 6, !dbg !8305
  %bf.load179 = load i32, i32* %mode178, align 4, !dbg !8305
  %bf.lshr180 = lshr i32 %bf.load179, 16, !dbg !8305
  %bf.clear181 = and i32 %bf.lshr180, 255, !dbg !8305
  br label %cond.end182, !dbg !8305

cond.end182:                                      ; preds = %cond.false174, %cond.true170
  %cond183 = phi i32 [ %call173, %cond.true170 ], [ %bf.clear181, %cond.false174 ], !dbg !8305
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8306
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8306
  %tobool184 = icmp eq %struct.rtx_def* %40, null, !dbg !8306
  br i1 %tobool184, label %cond.false188, label %cond.true185, !dbg !8306

cond.true185:                                     ; preds = %cond.end182
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 0, !dbg !8306
  %.pre = bitcast %struct.rtx_def** %rtl to i32**, !dbg !8306
  br label %cond.end191, !dbg !8306

cond.false188:                                    ; preds = %cond.end182
  call void @make_decl_rtl(%union.tree_node* %parm) #6, !dbg !8306
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !8307
  %cond1927.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !8306
  br label %cond.end191, !dbg !8306

cond.end191:                                      ; preds = %cond.false188, %cond.true185
  %.pre-phi = phi i32** [ %.phi.trans.insert, %cond.false188 ], [ %.pre, %cond.true185 ], !dbg !8306
  %cond1927 = phi i32* [ %cond1927.pre, %cond.false188 ], [ %41, %cond.true185 ], !dbg !8306
  %bf.load193 = load i32, i32* %cond1927, align 8, !dbg !8306
  %bf.lshr194 = lshr i32 %bf.load193, 16, !dbg !8306
  %bf.clear195 = and i32 %bf.lshr194, 255, !dbg !8306
  %cmp196 = icmp eq i32 %cond183, %bf.clear195, !dbg !8308
  br i1 %cmp196, label %lor.lhs.false198, label %if.then202, !dbg !8309

lor.lhs.false198:                                 ; preds = %cond.end191
  %call199 = call zeroext i8 @use_register_for_decl(%union.tree_node* %parm) #7, !dbg !8310
  %tobool201 = icmp eq i8 %call199, 0, !dbg !8310
  br i1 %tobool201, label %if.end306, label %if.then202, !dbg !8311

if.then202:                                       ; preds = %lor.lhs.false198, %cond.end191
  %42 = load i64*, i64** %1, align 8, !dbg !8312
  %bf.load206 = load i64, i64* %42, align 8, !dbg !8312
  %bf.cast2088 = and i64 %bf.load206, 65535, !dbg !8312
  %cmp209 = icmp eq i64 %bf.cast2088, 14, !dbg !8312
  br i1 %cmp209, label %cond.true211, label %cond.false215, !dbg !8312

cond.true211:                                     ; preds = %if.then202
  %.cast9 = bitcast i64* %42 to %union.tree_node*, !dbg !8312
  %call214 = call i32 @vector_type_mode(%union.tree_node* %.cast9) #6, !dbg !8312
  br label %cond.end223, !dbg !8312

cond.false215:                                    ; preds = %if.then202
  %type218 = bitcast i64* %42 to %struct.tree_type*, !dbg !8312
  %mode219 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type218, i64 0, i32 6, !dbg !8312
  %bf.load220 = load i32, i32* %mode219, align 4, !dbg !8312
  %bf.lshr221 = lshr i32 %bf.load220, 16, !dbg !8312
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !8312
  br label %cond.end223, !dbg !8312

cond.end223:                                      ; preds = %cond.false215, %cond.true211
  %cond224 = phi i32 [ %call214, %cond.true211 ], [ %bf.clear222, %cond.false215 ], !dbg !8312
  %call225 = call %struct.rtx_def* @gen_reg_rtx(i32 %cond224) #6, !dbg !8313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call225, metadata !8181, metadata !DIExpression()), !dbg !8215
  call void @mark_user_reg(%struct.rtx_def* %call225) #6, !dbg !8314
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call225, i64 0, i32 0, !dbg !8315
  %bf.load226 = load i32, i32* %43, align 8, !dbg !8315
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8316
  %tobool231 = icmp eq %struct.rtx_def* %44, null, !dbg !8316
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i64 0, i32 0, !dbg !8316
  br i1 %tobool231, label %cond.false235, label %cond.true232, !dbg !8316

cond.true232:                                     ; preds = %cond.end223
  br label %cond.end238, !dbg !8316

cond.false235:                                    ; preds = %cond.end223
  call void @make_decl_rtl(%union.tree_node* %parm) #6, !dbg !8316
  %cond23910.pre = load i32*, i32** %.pre-phi, align 8, !dbg !8316
  %46 = bitcast i32* %cond23910.pre to %struct.rtx_def*, !dbg !8316
  br label %cond.end238, !dbg !8316

cond.end238:                                      ; preds = %cond.false235, %cond.true232
  %cond30322 = phi %struct.rtx_def* [ %46, %cond.false235 ], [ %44, %cond.true232 ]
  %cond2571119 = phi i32* [ %cond23910.pre, %cond.false235 ], [ %45, %cond.true232 ]
  %cond23910 = phi i32* [ %cond23910.pre, %cond.false235 ], [ %45, %cond.true232 ], !dbg !8316
  %bf.load240 = load i32, i32* %cond23910, align 8, !dbg !8316
  %bf.lshr22713 = xor i32 %bf.load226, %bf.load240, !dbg !8317
  %47 = and i32 %bf.lshr22713, 16711680, !dbg !8317
  %cmp243 = icmp eq i32 %47, 0, !dbg !8317
  %tobool249 = icmp ne i32* %cond23910, null, !dbg !8318
  br i1 %cmp243, label %if.else292, label %if.then245, !dbg !8319

if.then245:                                       ; preds = %cond.end238
  br i1 %tobool249, label %cond.true250, label %cond.false253, !dbg !8320

cond.true250:                                     ; preds = %if.then245
  br label %cond.end256, !dbg !8320

cond.false253:                                    ; preds = %if.then245
  call void @make_decl_rtl(%union.tree_node* %parm) #6, !dbg !8320
  %cond25711.pre = load i32*, i32** %.pre-phi, align 8, !dbg !8320
  br label %cond.end256, !dbg !8320

cond.end256:                                      ; preds = %cond.false253, %cond.true250
  %cond25711 = phi i32* [ %cond25711.pre, %cond.false253 ], [ %cond2571119, %cond.true250 ], !dbg !8320
  %bf.load258 = load i32, i32* %cond25711, align 8, !dbg !8320
  %bf.lshr259 = lshr i32 %bf.load258, 16, !dbg !8320
  %bf.clear260 = and i32 %bf.lshr259, 255, !dbg !8320
  %call261 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear260) #6, !dbg !8321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call261, metadata !8197, metadata !DIExpression()), !dbg !8322
  %48 = load i64*, i64** %1, align 8, !dbg !8323
  %bf.load265 = load i64, i64* %48, align 8, !dbg !8323
  %bf.lshr266 = lshr i64 %bf.load265, 21, !dbg !8323
  %49 = trunc i64 %bf.lshr266 to i32, !dbg !8323
  %bf.cast268 = and i32 %49, 1, !dbg !8323
  call void @llvm.dbg.value(metadata i32 %bf.cast268, metadata !8202, metadata !DIExpression()), !dbg !8322
  %first_conversion_insn269 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8324
  %50 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn269, align 8, !dbg !8324
  %last_conversion_insn270 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8325
  %51 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn270, align 8, !dbg !8325
  call void @push_to_sequence2(%struct.rtx_def* %50, %struct.rtx_def* %51) #6, !dbg !8326
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8327
  %tobool273 = icmp eq %struct.rtx_def* %52, null, !dbg !8327
  br i1 %tobool273, label %cond.false277, label %cond.true274, !dbg !8327

cond.true274:                                     ; preds = %cond.end256
  br label %cond.end280, !dbg !8327

cond.false277:                                    ; preds = %cond.end256
  call void @make_decl_rtl(%union.tree_node* %parm) #6, !dbg !8327
  %cond281.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8327
  br label %cond.end280, !dbg !8327

cond.end280:                                      ; preds = %cond.false277, %cond.true274
  %cond281 = phi %struct.rtx_def* [ %cond281.pre, %cond.false277 ], [ %52, %cond.true274 ], !dbg !8327
  %call282 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call261, %struct.rtx_def* %cond281) #6, !dbg !8328
  %bf.load283 = load i32, i32* %43, align 8, !dbg !8329
  %bf.lshr284 = lshr i32 %bf.load283, 16, !dbg !8329
  %bf.clear285 = and i32 %bf.lshr284, 255, !dbg !8329
  %call286 = call %struct.rtx_def* @convert_to_mode(i32 %bf.clear285, %struct.rtx_def* %call261, i32 %bf.cast268) #6, !dbg !8330
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call286, metadata !8197, metadata !DIExpression()), !dbg !8322
  %call287 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call225, %struct.rtx_def* %call286) #6, !dbg !8331
  %call288 = call %struct.rtx_def* @get_insns() #6, !dbg !8332
  store %struct.rtx_def* %call288, %struct.rtx_def** %first_conversion_insn269, align 8, !dbg !8333
  %call290 = call %struct.rtx_def* @get_last_insn() #6, !dbg !8334
  store %struct.rtx_def* %call290, %struct.rtx_def** %last_conversion_insn270, align 8, !dbg !8335
  call void @end_sequence() #6, !dbg !8336
  call void @llvm.dbg.value(metadata i8 1, metadata !8184, metadata !DIExpression()), !dbg !8215
  br label %if.end305, !dbg !8337

if.else292:                                       ; preds = %cond.end238
  br i1 %tobool249, label %cond.true296, label %cond.false299, !dbg !8338

cond.true296:                                     ; preds = %if.else292
  br label %cond.end302, !dbg !8338

cond.false299:                                    ; preds = %if.else292
  call void @make_decl_rtl(%union.tree_node* %parm) #6, !dbg !8338
  %cond303.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8338
  br label %cond.end302, !dbg !8338

cond.end302:                                      ; preds = %cond.false299, %cond.true296
  %cond303 = phi %struct.rtx_def* [ %cond303.pre, %cond.false299 ], [ %cond30322, %cond.true296 ], !dbg !8338
  %call304 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call225, %struct.rtx_def* %cond303) #6, !dbg !8339
  br label %if.end305

if.end305:                                        ; preds = %cond.end302, %cond.end280
  %did_conversion.1 = phi i8 [ 1, %cond.end280 ], [ %did_conversion.0, %cond.end302 ], !dbg !8215
  call void @llvm.dbg.value(metadata i8 %did_conversion.1, metadata !8184, metadata !DIExpression()), !dbg !8215
  call void @set_decl_rtl(%union.tree_node* %parm, %struct.rtx_def* %call225) #6, !dbg !8340
  %stack_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8341
  store %struct.rtx_def* null, %struct.rtx_def** %stack_parm, align 8, !dbg !8342
  br label %if.end306, !dbg !8343

if.end306:                                        ; preds = %lor.lhs.false198, %cond.end157, %if.end129, %if.end305
  %did_conversion.2 = phi i8 [ %did_conversion.1, %if.end305 ], [ %did_conversion.0, %lor.lhs.false198 ], [ %did_conversion.0, %cond.end157 ], [ %did_conversion.0, %if.end129 ], !dbg !8215
  %parmreg.0 = phi %struct.rtx_def* [ %call225, %if.end305 ], [ %call3, %lor.lhs.false198 ], [ %call3, %cond.end157 ], [ %call3, %if.end129 ], !dbg !8215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %parmreg.0, metadata !8181, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8 %did_conversion.2, metadata !8184, metadata !DIExpression()), !dbg !8215
  %53 = load i32, i32* %nominal_mode, align 8, !dbg !8344
  %54 = load i32, i32* %passed_mode, align 4, !dbg !8345
  %cmp309 = icmp ne i32 %53, %54, !dbg !8346
  %tobool312 = icmp ne i8 %did_conversion.2, 0, !dbg !8347
  %or.cond = or i1 %cmp309, %tobool312, !dbg !8348
  br i1 %or.cond, label %if.end498, label %land.lhs.true313, !dbg !8348

land.lhs.true313:                                 ; preds = %if.end306
  %stack_parm314 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8349
  %55 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm314, align 8, !dbg !8349
  %cmp315 = icmp eq %struct.rtx_def* %55, null, !dbg !8350
  br i1 %cmp315, label %if.end498, label %land.lhs.true317, !dbg !8351

land.lhs.true317:                                 ; preds = %land.lhs.true313
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i64 0, i32 0, !dbg !8351
  %bf.load319 = load i32, i32* %56, align 8, !dbg !8352
  %bf.clear320 = and i32 %bf.load319, 65535, !dbg !8352
  %cmp321 = icmp eq i32 %bf.clear320, 43, !dbg !8352
  br i1 %cmp321, label %land.lhs.true323, label %if.end498, !dbg !8353

land.lhs.true323:                                 ; preds = %land.lhs.true317
  %var = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 7, i32 1, i32 1, !dbg !8354
  %57 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !8354
  %cmp324 = icmp eq %union.tree_node* %57, null, !dbg !8355
  br i1 %cmp324, label %land.lhs.true326, label %if.end498, !dbg !8356

land.lhs.true326:                                 ; preds = %land.lhs.true323
  %58 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16, !dbg !8357
  %arrayidx330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8358
  %rt_rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**, !dbg !8358
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx331, align 8, !dbg !8358
  %call332 = call i32 @reg_mentioned_p(%struct.rtx_def* %58, %struct.rtx_def* %59) #6, !dbg !8359
  %tobool333 = icmp eq i32 %call332, 0, !dbg !8359
  br i1 %tobool333, label %if.end498, label %if.then334, !dbg !8360

if.then334:                                       ; preds = %land.lhs.true326
  %call335 = call %struct.rtx_def* @get_last_insn() #6, !dbg !8361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call335, metadata !8203, metadata !DIExpression()), !dbg !8362
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parmreg.0, i64 0, i32 0, !dbg !8363
  %bf.load336 = load i32, i32* %60, align 8, !dbg !8363
  %bf.clear337 = and i32 %bf.load336, 65535, !dbg !8363
  %cmp338 = icmp eq i32 %bf.clear337, 41, !dbg !8364
  br i1 %cmp338, label %if.then340, label %if.else439, !dbg !8365

if.then340:                                       ; preds = %if.then334
  %bf.lshr342 = lshr i32 %bf.load336, 16, !dbg !8366
  %bf.clear343 = and i32 %bf.lshr342, 255, !dbg !8366
  %idxprom344 = zext i32 %bf.clear343 to i64, !dbg !8366
  %arrayidx345 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom344, !dbg !8366
  %61 = load i8, i8* %arrayidx345, align 1, !dbg !8366
  %conv346 = zext i8 %61 to i32, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %conv346, metadata !8208, metadata !DIExpression()), !dbg !8367
  %arrayidx349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parmreg.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8368
  %rt_rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**, !dbg !8368
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx350, align 8, !dbg !8368
  %call351 = call fastcc i32 @rhs_regno(%struct.rtx_def* %62) #7, !dbg !8368
  call void @llvm.dbg.value(metadata i32 %call351, metadata !8211, metadata !DIExpression()), !dbg !8367
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parmreg.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8369
  %rt_rtx355 = bitcast %union.rtunion_def* %63 to %struct.rtx_def**, !dbg !8369
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx355, align 8, !dbg !8369
  %call356 = call fastcc i32 @rhs_regno(%struct.rtx_def* %64) #7, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %call356, metadata !8212, metadata !DIExpression()), !dbg !8367
  %65 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm314, align 8, !dbg !8370
  %call358 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %65, i32 %conv346, i64 0, i32 0, i32 1) #6, !dbg !8370
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call358, metadata !8213, metadata !DIExpression()), !dbg !8367
  %66 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm314, align 8, !dbg !8371
  %idxprom360 = zext i8 %61 to i64, !dbg !8371
  %arrayidx361 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom360, !dbg !8371
  %67 = load i8, i8* %arrayidx361, align 1, !dbg !8371
  %conv363 = zext i8 %67 to i64, !dbg !8371
  %call364 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %66, i32 %conv346, i64 %conv363, i32 0, i32 1) #6, !dbg !8371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call364, metadata !8214, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call335, metadata !8206, metadata !DIExpression()), !dbg !8362
  %idxprom419 = sext i32 %call356 to i64, !dbg !8372
  %idxprom430 = sext i32 %call351 to i64, !dbg !8377
  br label %for.cond, !dbg !8379

for.cond:                                         ; preds = %for.inc, %if.then340
  %sinsn.0 = phi %struct.rtx_def* [ %call335, %if.then340 ], [ %call438, %for.inc ], !dbg !8380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sinsn.0, metadata !8206, metadata !DIExpression()), !dbg !8362
  %cmp365 = icmp eq %struct.rtx_def* %sinsn.0, null, !dbg !8381
  br i1 %cmp365, label %if.end498.loopexit, label %for.body, !dbg !8382

for.body:                                         ; preds = %for.cond
  %68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sinsn.0, i64 0, i32 0, !dbg !8383
  %bf.load367 = load i32, i32* %68, align 8, !dbg !8383
  %bf.clear368 = and i32 %bf.load367, 65535, !dbg !8383
  %cmp369 = icmp eq i32 %bf.clear368, 8, !dbg !8383
  br i1 %cmp369, label %cond.true386, label %lor.lhs.false371, !dbg !8383

lor.lhs.false371:                                 ; preds = %for.body
  %cmp374 = icmp eq i32 %bf.clear368, 7, !dbg !8383
  br i1 %cmp374, label %cond.true386, label %lor.lhs.false376, !dbg !8383

lor.lhs.false376:                                 ; preds = %lor.lhs.false371
  %cmp379 = icmp eq i32 %bf.clear368, 9, !dbg !8383
  br i1 %cmp379, label %cond.true386, label %lor.lhs.false381, !dbg !8383

lor.lhs.false381:                                 ; preds = %lor.lhs.false376
  %cmp384 = icmp eq i32 %bf.clear368, 10, !dbg !8383
  br i1 %cmp384, label %cond.true386, label %cond.end409, !dbg !8383

cond.true386:                                     ; preds = %lor.lhs.false381, %lor.lhs.false376, %lor.lhs.false371, %for.body
  %u387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sinsn.0, i64 0, i32 1, !dbg !8383
  %69 = getelementptr inbounds %union.u, %union.u* %u387, i64 1, i32 0, i32 0, i64 0, !dbg !8383
  %70 = bitcast %union.rtunion_def* %69 to i32**, !dbg !8383
  %71 = load i32*, i32** %70, align 8, !dbg !8383
  %bf.load391 = load i32, i32* %71, align 8, !dbg !8383
  %bf.clear392 = and i32 %bf.load391, 65535, !dbg !8383
  %cmp393 = icmp eq i32 %bf.clear392, 23, !dbg !8383
  %72 = bitcast i32* %71 to %struct.rtx_def*, !dbg !8383
  br i1 %cmp393, label %cond.end409, label %cond.false400, !dbg !8383

cond.false400:                                    ; preds = %cond.true386
  %call405 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %sinsn.0, %struct.rtx_def* %72) #6, !dbg !8383
  br label %cond.end409, !dbg !8383

cond.end409:                                      ; preds = %lor.lhs.false381, %cond.false400, %cond.true386
  %cond410 = phi %struct.rtx_def* [ %call405, %cond.false400 ], [ %72, %cond.true386 ], [ null, %lor.lhs.false381 ], !dbg !8383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond410, metadata !8207, metadata !DIExpression()), !dbg !8362
  %cmp411 = icmp eq %struct.rtx_def* %cond410, null, !dbg !8384
  br i1 %cmp411, label %for.inc, label %if.end414, !dbg !8386

if.end414:                                        ; preds = %cond.end409
  %arrayidx417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond410, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8387
  %rt_rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**, !dbg !8387
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx418, align 8, !dbg !8387
  %74 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !8388
  %arrayidx420 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %74, i64 %idxprom419, !dbg !8388
  %75 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx420, align 8, !dbg !8388
  %cmp421 = icmp eq %struct.rtx_def* %73, %75, !dbg !8389
  br i1 %cmp421, label %if.then423, label %if.else425, !dbg !8390

if.then423:                                       ; preds = %if.end414
  %call424 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* nonnull %sinsn.0, i32 3, %struct.rtx_def* %call364) #6, !dbg !8391
  br label %for.inc, !dbg !8391

if.else425:                                       ; preds = %if.end414
  %arrayidx431 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %74, i64 %idxprom430, !dbg !8392
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx431, align 8, !dbg !8392
  %cmp432 = icmp eq %struct.rtx_def* %73, %76, !dbg !8393
  br i1 %cmp432, label %if.then434, label %for.inc, !dbg !8394

if.then434:                                       ; preds = %if.else425
  %call435 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* nonnull %sinsn.0, i32 3, %struct.rtx_def* %call358) #6, !dbg !8395
  br label %for.inc, !dbg !8395

for.inc:                                          ; preds = %if.then423, %if.then434, %if.else425, %cond.end409
  %call438 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* nonnull %sinsn.0) #6, !dbg !8396
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call438, metadata !8206, metadata !DIExpression()), !dbg !8362
  br label %for.cond, !dbg !8397, !llvm.loop !8398

if.else439:                                       ; preds = %if.then334
  %77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call335, i64 0, i32 0, !dbg !8400
  %bf.load440 = load i32, i32* %77, align 8, !dbg !8400
  %bf.clear441 = and i32 %bf.load440, 65535, !dbg !8400
  %cmp442 = icmp eq i32 %bf.clear441, 8, !dbg !8400
  br i1 %cmp442, label %cond.true459, label %lor.lhs.false444, !dbg !8400

lor.lhs.false444:                                 ; preds = %if.else439
  %cmp447 = icmp eq i32 %bf.clear441, 7, !dbg !8400
  br i1 %cmp447, label %cond.true459, label %lor.lhs.false449, !dbg !8400

lor.lhs.false449:                                 ; preds = %lor.lhs.false444
  %cmp452 = icmp eq i32 %bf.clear441, 9, !dbg !8400
  br i1 %cmp452, label %cond.true459, label %lor.lhs.false454, !dbg !8400

lor.lhs.false454:                                 ; preds = %lor.lhs.false449
  %cmp457 = icmp eq i32 %bf.clear441, 10, !dbg !8400
  br i1 %cmp457, label %cond.true459, label %cond.end482, !dbg !8400

cond.true459:                                     ; preds = %lor.lhs.false454, %lor.lhs.false449, %lor.lhs.false444, %if.else439
  %u460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call335, i64 0, i32 1, !dbg !8400
  %78 = getelementptr inbounds %union.u, %union.u* %u460, i64 1, i32 0, i32 0, i64 0, !dbg !8400
  %79 = bitcast %union.rtunion_def* %78 to i32**, !dbg !8400
  %80 = load i32*, i32** %79, align 8, !dbg !8400
  %bf.load464 = load i32, i32* %80, align 8, !dbg !8400
  %bf.clear465 = and i32 %bf.load464, 65535, !dbg !8400
  %cmp466 = icmp eq i32 %bf.clear465, 23, !dbg !8400
  %81 = bitcast i32* %80 to %struct.rtx_def*, !dbg !8400
  br i1 %cmp466, label %cond.end482, label %cond.false473, !dbg !8400

cond.false473:                                    ; preds = %cond.true459
  %call478 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call335, %struct.rtx_def* %81) #6, !dbg !8400
  br label %cond.end482, !dbg !8400

cond.end482:                                      ; preds = %lor.lhs.false454, %cond.false473, %cond.true459
  %cond483 = phi %struct.rtx_def* [ %call478, %cond.false473 ], [ %81, %cond.true459 ], [ null, %lor.lhs.false454 ], !dbg !8400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond483, metadata !8207, metadata !DIExpression()), !dbg !8362
  %cmp484 = icmp eq %struct.rtx_def* %cond483, null, !dbg !8402
  br i1 %cmp484, label %if.end498, label %land.lhs.true486, !dbg !8403

land.lhs.true486:                                 ; preds = %cond.end482
  %arrayidx489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond483, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8404
  %rt_rtx490 = bitcast %union.rtunion_def* %arrayidx489 to %struct.rtx_def**, !dbg !8404
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx490, align 8, !dbg !8404
  %cmp491 = icmp eq %struct.rtx_def* %82, %parmreg.0, !dbg !8405
  br i1 %cmp491, label %if.then493, label %if.end498, !dbg !8406

if.then493:                                       ; preds = %land.lhs.true486
  %83 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm314, align 8, !dbg !8407
  %call495 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call335, i32 3, %struct.rtx_def* %83) #6, !dbg !8408
  br label %if.end498, !dbg !8408

if.end498.loopexit:                               ; preds = %for.cond
  br label %if.end498, !dbg !8409

if.end498:                                        ; preds = %if.end498.loopexit, %cond.end482, %land.lhs.true326, %land.lhs.true313, %if.then493, %land.lhs.true486, %if.end306, %land.lhs.true323, %land.lhs.true317
  %84 = load i64*, i64** %1, align 8, !dbg !8409
  %bf.load502 = load i64, i64* %84, align 8, !dbg !8409
  %bf.cast5042 = and i64 %bf.load502, 65535, !dbg !8409
  %cmp505 = icmp eq i64 %bf.cast5042, 10, !dbg !8409
  br i1 %cmp505, label %if.then516, label %lor.lhs.false507, !dbg !8409

lor.lhs.false507:                                 ; preds = %if.end498
  %cmp514 = icmp eq i64 %bf.cast5042, 12, !dbg !8409
  br i1 %cmp514, label %if.then516, label %if.end522, !dbg !8411

if.then516:                                       ; preds = %lor.lhs.false507, %if.end498
  %type520 = getelementptr inbounds i64, i64* %84, i64 2, !dbg !8412
  %85 = bitcast i64* %type520 to %struct.tree_type**, !dbg !8412
  %86 = load %struct.tree_type*, %struct.tree_type** %85, align 8, !dbg !8412
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %86, i64 0, i32 7, !dbg !8412
  %87 = load i32, i32* %align, align 8, !dbg !8412
  call void @mark_reg_pointer(%struct.rtx_def* %parmreg.0, i32 %87) #6, !dbg !8413
  br label %if.end522, !dbg !8413

if.end522:                                        ; preds = %if.then516, %lor.lhs.false507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8414
  ret void, !dbg !8414
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_setup_stack(%struct.assign_parm_data_all* %all, %union.tree_node* %parm, %struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !8415 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !8417, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !8418, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !8419, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8 0, metadata !8420, metadata !DIExpression()), !dbg !8434
  tail call fastcc void @assign_parm_remove_parallels(%struct.assign_parm_data_one* %data) #7, !dbg !8435
  %promoted_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 6, !dbg !8436
  %0 = load i32, i32* %promoted_mode, align 8, !dbg !8436
  %nominal_mode = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 4, !dbg !8437
  %1 = load i32, i32* %nominal_mode, align 8, !dbg !8437
  %cmp = icmp eq i32 %0, %1, !dbg !8438
  br i1 %cmp, label %if.end49, label %if.then, !dbg !8439

if.then:                                          ; preds = %entry
  %entry_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8440
  %2 = bitcast %struct.rtx_def** %entry_parm to i32**, !dbg !8440
  %3 = load i32*, i32** %2, align 8, !dbg !8440
  %bf.load = load i32, i32* %3, align 8, !dbg !8440
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8440
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8440
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !8441
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8421, metadata !DIExpression()), !dbg !8442
  %4 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm, align 8, !dbg !8443
  %call2 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %4) #6, !dbg !8444
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call2) #6, !dbg !8445
  %first_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8446
  %5 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8446
  %last_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8447
  %6 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8447
  tail call void @push_to_sequence2(%struct.rtx_def* %5, %struct.rtx_def* %6) #6, !dbg !8448
  call void @llvm.dbg.value(metadata i8 1, metadata !8420, metadata !DIExpression()), !dbg !8434
  %7 = load i32, i32* %nominal_mode, align 8, !dbg !8449
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8450
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !8450
  %9 = load i64*, i64** %8, align 8, !dbg !8450
  %bf.load5 = load i64, i64* %9, align 8, !dbg !8450
  %bf.lshr6 = lshr i64 %bf.load5, 21, !dbg !8450
  %10 = trunc i64 %bf.lshr6 to i32, !dbg !8450
  %bf.cast = and i32 %10, 1, !dbg !8450
  %call8 = tail call %struct.rtx_def* @convert_to_mode(i32 %7, %struct.rtx_def* %call, i32 %bf.cast) #6, !dbg !8451
  store %struct.rtx_def* %call8, %struct.rtx_def** %entry_parm, align 8, !dbg !8452
  %stack_parm = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8453
  %11 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm, align 8, !dbg !8453
  %tobool = icmp eq %struct.rtx_def* %11, null, !dbg !8454
  br i1 %tobool, label %if.end49, label %if.then10, !dbg !8455

if.then10:                                        ; preds = %if.then
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !8455
  %13 = load i32, i32* %nominal_mode, align 8, !dbg !8456
  %bf.load13 = load i32, i32* %12, align 8, !dbg !8457
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !8457
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !8457
  %call16 = tail call i32 @subreg_lowpart_offset(i32 %13, i32 %bf.clear15) #6, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %call16, metadata !8424, metadata !DIExpression()), !dbg !8459
  %14 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm, align 8, !dbg !8460
  %15 = load i32, i32* %nominal_mode, align 8, !dbg !8460
  %call19 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %14, i32 %15, i64 0, i32 1, i32 1) #6, !dbg !8460
  store %struct.rtx_def* %call19, %struct.rtx_def** %stack_parm, align 8, !dbg !8461
  %tobool21 = icmp eq i32 %call16, 0, !dbg !8462
  br i1 %tobool21, label %if.end49, label %land.lhs.true, !dbg !8464

land.lhs.true:                                    ; preds = %if.then10
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call19, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8465
  %rt_mem = bitcast %union.rtunion_def* %16 to %struct.mem_attrs**, !dbg !8465
  %17 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8465
  %cmp23 = icmp eq %struct.mem_attrs* %17, null, !dbg !8465
  br i1 %cmp23, label %if.end49, label %cond.false, !dbg !8466

cond.false:                                       ; preds = %land.lhs.true
  %offset29 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 1, !dbg !8465
  %18 = load %struct.rtx_def*, %struct.rtx_def** %offset29, align 8, !dbg !8465
  %tobool30 = icmp eq %struct.rtx_def* %18, null, !dbg !8465
  br i1 %tobool30, label %if.end49, label %if.then31, !dbg !8466

if.then31:                                        ; preds = %cond.false
  br label %cond.false40, !dbg !8467

if.then31.cond.end_crit_edge:                     ; No predecessors!
  br label %cond.end, !dbg !8467

cond.false40:                                     ; preds = %if.then31
  br label %cond.end, !dbg !8467

cond.end:                                         ; preds = %if.then31.cond.end_crit_edge, %cond.false40
  %conv = sext i32 %call16 to i64, !dbg !8468
  %call47 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %18, i64 %conv) #6, !dbg !8469
  tail call void @set_mem_offset(%struct.rtx_def* %call19, %struct.rtx_def* %call47) #6, !dbg !8470
  br label %if.end49, !dbg !8470

if.end49:                                         ; preds = %cond.false, %if.then10, %if.then, %entry, %land.lhs.true, %cond.end
  %to_conversion.0 = phi i8 [ 0, %entry ], [ 1, %if.then10 ], [ 1, %cond.false ], [ 1, %cond.end ], [ 1, %land.lhs.true ], [ 1, %if.then ], !dbg !8434
  call void @llvm.dbg.value(metadata i8 %to_conversion.0, metadata !8420, metadata !DIExpression()), !dbg !8434
  %entry_parm50 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8471
  %19 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm50, align 8, !dbg !8471
  %stack_parm51 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 3, !dbg !8472
  %20 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm51, align 8, !dbg !8472
  %cmp52 = icmp eq %struct.rtx_def* %19, %20, !dbg !8473
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !8474
  br i1 %cmp52, label %if.end102, label %if.then54, !dbg !8474

if.then54:                                        ; preds = %if.end49
  %cmp56 = icmp eq %struct.rtx_def* %20, null, !dbg !8475
  br i1 %cmp56, label %if.then58, label %if.end81, !dbg !8476

if.then58:                                        ; preds = %if.then54
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !8477
  %22 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !8477
  %23 = bitcast %struct.rtx_def** %entry_parm50 to i32**, !dbg !8477
  %bf.load60 = load i32, i32* %21, align 8, !dbg !8477
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !8477
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !8477
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8477
  %25 = load i32, i32* %24, align 8, !dbg !8477
  %call66 = tail call i32 @ix86_local_alignment(%union.tree_node* %22, i32 %bf.clear62, i32 %25) #6, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %call66, metadata !8431, metadata !DIExpression()), !dbg !8478
  %26 = load i32*, i32** %23, align 8, !dbg !8479
  %bf.load68 = load i32, i32* %26, align 8, !dbg !8479
  %bf.lshr69 = lshr i32 %bf.load68, 16, !dbg !8479
  %bf.clear70 = and i32 %bf.lshr69, 255, !dbg !8479
  %idxprom = zext i32 %bf.clear70 to i64, !dbg !8480
  %arrayidx75 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8480
  %27 = load i8, i8* %arrayidx75, align 1, !dbg !8480
  %conv77 = zext i8 %27 to i64, !dbg !8480
  %call78 = tail call %struct.rtx_def* @assign_stack_local(i32 %bf.clear70, i64 %conv77, i32 %call66) #7, !dbg !8481
  store %struct.rtx_def* %call78, %struct.rtx_def** %stack_parm51, align 8, !dbg !8482
  tail call void @set_mem_attributes(%struct.rtx_def* %call78, %union.tree_node* %parm, i32 1) #6, !dbg !8483
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %stack_parm51, align 8, !dbg !8484
  br label %if.end81, !dbg !8485

if.end81:                                         ; preds = %if.then58, %if.then54
  %28 = phi %struct.rtx_def* [ %.pre, %if.then58 ], [ %20, %if.then54 ], !dbg !8484
  %call83 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %28) #6, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call83, metadata !8430, metadata !DIExpression()), !dbg !8487
  %29 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm50, align 8, !dbg !8488
  %call85 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %29) #6, !dbg !8489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !8427, metadata !DIExpression()), !dbg !8487
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call85, i64 0, i32 0, !dbg !8490
  %bf.load86 = load i32, i32* %30, align 8, !dbg !8490
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !8490
  %cmp88 = icmp eq i32 %bf.clear87, 43, !dbg !8490
  br i1 %cmp88, label %if.then90, label %if.else, !dbg !8492

if.then90:                                        ; preds = %if.end81
  %tobool91 = icmp eq i8 %to_conversion.0, 0, !dbg !8493
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !8496

if.then92:                                        ; preds = %if.then90
  %first_conversion_insn93 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8497
  %31 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn93, align 8, !dbg !8497
  %last_conversion_insn94 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8498
  %32 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn94, align 8, !dbg !8498
  tail call void @push_to_sequence2(%struct.rtx_def* %31, %struct.rtx_def* %32) #6, !dbg !8499
  br label %if.end95, !dbg !8499

if.end95:                                         ; preds = %if.then90, %if.then92
  call void @llvm.dbg.value(metadata i8 1, metadata !8420, metadata !DIExpression()), !dbg !8434
  %passed_type96 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !8500
  %33 = load %union.tree_node*, %union.tree_node** %passed_type96, align 8, !dbg !8500
  %call97 = tail call i64 @int_size_in_bytes(%union.tree_node* %33) #6, !dbg !8500
  %call98 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call97) #6, !dbg !8500
  %call99 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call83, %struct.rtx_def* %call85, %struct.rtx_def* %call98, i32 0) #6, !dbg !8501
  br label %if.end102, !dbg !8502

if.else:                                          ; preds = %if.end81
  %call100 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call83, %struct.rtx_def* %call85) #6, !dbg !8503
  br label %if.end102

if.end102:                                        ; preds = %if.end49, %if.end95, %if.else
  %to_conversion.2 = phi i8 [ %to_conversion.0, %if.end49 ], [ 1, %if.end95 ], [ %to_conversion.0, %if.else ], !dbg !8434
  call void @llvm.dbg.value(metadata i8 %to_conversion.2, metadata !8420, metadata !DIExpression()), !dbg !8434
  %tobool103 = icmp eq i8 %to_conversion.2, 0, !dbg !8504
  br i1 %tobool103, label %if.end109, label %if.then104, !dbg !8506

if.then104:                                       ; preds = %if.end102
  %call105 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8507
  %first_conversion_insn106 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8509
  store %struct.rtx_def* %call105, %struct.rtx_def** %first_conversion_insn106, align 8, !dbg !8510
  %call107 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !8511
  %last_conversion_insn108 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8512
  store %struct.rtx_def* %call107, %struct.rtx_def** %last_conversion_insn108, align 8, !dbg !8513
  tail call void @end_sequence() #6, !dbg !8514
  br label %if.end109, !dbg !8515

if.end109:                                        ; preds = %if.end102, %if.then104
  %34 = load %struct.rtx_def*, %struct.rtx_def** %stack_parm51, align 8, !dbg !8516
  tail call void @set_decl_rtl(%union.tree_node* %parm, %struct.rtx_def* %34) #6, !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parms_unsplit_complex(%struct.assign_parm_data_all* %all, %struct.VEC_tree_heap* %fnargs) unnamed_addr #4 !dbg !8518 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_all* %all, metadata !8522, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fnargs, metadata !8523, metadata !DIExpression()), !dbg !8542
  %orig_fnargs1 = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 3, !dbg !8543
  call void @llvm.dbg.value(metadata i32 0, metadata !8526, metadata !DIExpression()), !dbg !8542
  %base10 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fnargs, i64 0, i32 0, !dbg !8544
  %first_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 4, !dbg !8545
  %last_conversion_insn = getelementptr inbounds %struct.assign_parm_data_all, %struct.assign_parm_data_all* %all, i64 0, i32 5, !dbg !8545
  br label %for.cond, !dbg !8546

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc172, %for.inc ], !dbg !8542
  %parm.0.in = phi %union.tree_node** [ %orig_fnargs1, %entry ], [ %chain, %for.inc ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !8547
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !8524, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8526, metadata !DIExpression()), !dbg !8542
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !8548
  br i1 %tobool, label %for.end, label %for.body, !dbg !8548

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8549
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !8549
  %1 = load i64*, i64** %0, align 8, !dbg !8549
  %bf.load = load i64, i64* %1, align 8, !dbg !8549
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8550
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !8550
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !8551

land.lhs.true:                                    ; preds = %for.body
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !8551
  %3 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !8552
  %call = tail call zeroext i8 %3(%union.tree_node* %2) #6, !dbg !8553
  %tobool4 = icmp eq i8 %call, 0, !dbg !8553
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !8554

if.then:                                          ; preds = %land.lhs.true
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8555
  %4 = bitcast i40* %mode to i64*, !dbg !8555
  %bf.load5 = load i64, i64* %4, align 8, !dbg !8555
  %bf.cast7 = and i64 %bf.load5, 255, !dbg !8555
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %bf.cast7, !dbg !8555
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8555
  %conv8 = zext i8 %5 to i32, !dbg !8555
  call void @llvm.dbg.value(metadata i32 %conv8, metadata !8535, metadata !DIExpression()), !dbg !8544
  %call11 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %i.0) #7, !dbg !8556
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8556
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8556
  %tobool12 = icmp eq %struct.rtx_def* %6, null, !dbg !8556
  %call20 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %i.0) #7, !dbg !8556
  br i1 %tobool12, label %cond.false23, label %cond.true13, !dbg !8556

cond.true13:                                      ; preds = %if.then
  br label %cond.end40, !dbg !8556

cond.false23:                                     ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %call20) #6, !dbg !8556
  %call37 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %i.0) #7, !dbg !8556
  br label %cond.end40, !dbg !8556

cond.end40:                                       ; preds = %cond.false23, %cond.true13
  %call20.pn = phi %union.tree_node* [ %call20, %cond.true13 ], [ %call37, %cond.false23 ]
  %cond41.in = getelementptr inbounds %union.tree_node, %union.tree_node* %call20.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8556
  %cond41 = load %struct.rtx_def*, %struct.rtx_def** %cond41.in, align 8, !dbg !8556
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond41, metadata !8533, metadata !DIExpression()), !dbg !8544
  %add = add i32 %i.0, 1, !dbg !8557
  %call48 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %add) #7, !dbg !8557
  %rtl50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8557
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtl50, align 8, !dbg !8557
  %tobool51 = icmp eq %struct.rtx_def* %7, null, !dbg !8557
  %call60 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %add) #7, !dbg !8557
  br i1 %tobool51, label %cond.false63, label %cond.true52, !dbg !8557

cond.true52:                                      ; preds = %cond.end40
  br label %cond.end82, !dbg !8557

cond.false63:                                     ; preds = %cond.end40
  tail call void @make_decl_rtl(%union.tree_node* %call60) #6, !dbg !8557
  %call79 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %add) #7, !dbg !8557
  br label %cond.end82, !dbg !8557

cond.end82:                                       ; preds = %cond.false63, %cond.true52
  %call60.pn = phi %union.tree_node* [ %call60, %cond.true52 ], [ %call79, %cond.false63 ]
  %cond83.in = getelementptr inbounds %union.tree_node, %union.tree_node* %call60.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8557
  %cond83 = load %struct.rtx_def*, %struct.rtx_def** %cond83.in, align 8, !dbg !8557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond83, metadata !8534, metadata !DIExpression()), !dbg !8544
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond41, i64 0, i32 0, !dbg !8558
  %bf.load84 = load i32, i32* %8, align 8, !dbg !8558
  %bf.lshr = lshr i32 %bf.load84, 16, !dbg !8558
  %bf.clear85 = and i32 %bf.lshr, 255, !dbg !8558
  %cmp86 = icmp eq i32 %bf.clear85, %conv8, !dbg !8560
  br i1 %cmp86, label %if.end, label %if.then88, !dbg !8561

if.then88:                                        ; preds = %cond.end82
  %call89 = tail call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %conv8, %struct.rtx_def* %cond41) #6, !dbg !8562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call89, metadata !8533, metadata !DIExpression()), !dbg !8544
  %call90 = tail call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %conv8, %struct.rtx_def* %cond83) #6, !dbg !8564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call90, metadata !8534, metadata !DIExpression()), !dbg !8544
  br label %if.end, !dbg !8565

if.end:                                           ; preds = %cond.end82, %if.then88
  %real.0 = phi %struct.rtx_def* [ %call89, %if.then88 ], [ %cond41, %cond.end82 ], !dbg !8544
  %imag.0 = phi %struct.rtx_def* [ %call90, %if.then88 ], [ %cond83, %cond.end82 ], !dbg !8544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %imag.0, metadata !8534, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %real.0, metadata !8533, metadata !DIExpression()), !dbg !8544
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8566
  %bf.load92 = load i64, i64* %9, align 8, !dbg !8566
  %bf.cast952 = and i64 %bf.load92, 262144, !dbg !8566
  %tobool96 = icmp eq i64 %bf.cast952, 0, !dbg !8566
  br i1 %tobool96, label %if.else, label %if.then97, !dbg !8567

if.then97:                                        ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8568
  %call100 = tail call i64 @int_size_in_bytes(%union.tree_node* %10) #6, !dbg !8569
  call void @llvm.dbg.value(metadata i64 %call100, metadata !8540, metadata !DIExpression()), !dbg !8545
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8570
  %bf.load105 = load i64, i64* %4, align 8, !dbg !8570
  %12 = trunc i64 %bf.load105 to i32, !dbg !8570
  %bf.cast107 = and i32 %12, 255, !dbg !8570
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8570
  %14 = load i32, i32* %13, align 8, !dbg !8570
  %call112 = tail call i32 @ix86_local_alignment(%union.tree_node* %11, i32 %bf.cast107, i32 %14) #6, !dbg !8570
  call void @llvm.dbg.value(metadata i32 %call112, metadata !8541, metadata !DIExpression()), !dbg !8545
  %bf.load115 = load i64, i64* %4, align 8, !dbg !8571
  %15 = trunc i64 %bf.load115 to i32, !dbg !8571
  %bf.cast117 = and i32 %15, 255, !dbg !8571
  %call118 = tail call %struct.rtx_def* @assign_stack_local(i32 %bf.cast117, i64 %call100, i32 %call112) #7, !dbg !8572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !8527, metadata !DIExpression()), !dbg !8544
  tail call void @set_mem_attributes(%struct.rtx_def* %call118, %union.tree_node* nonnull %parm.0, i32 1) #6, !dbg !8573
  %call119 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call118, i32 %conv8, i64 0, i32 0, i32 1) #6, !dbg !8574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call119, metadata !8536, metadata !DIExpression()), !dbg !8545
  %idxprom120 = zext i8 %5 to i64, !dbg !8575
  %arrayidx121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom120, !dbg !8575
  %16 = load i8, i8* %arrayidx121, align 1, !dbg !8575
  %conv123 = zext i8 %16 to i64, !dbg !8575
  %call124 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call118, i32 %conv8, i64 %conv123, i32 0, i32 1) #6, !dbg !8575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call124, metadata !8539, metadata !DIExpression()), !dbg !8545
  %17 = load %struct.rtx_def*, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8576
  %18 = load %struct.rtx_def*, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8577
  tail call void @push_to_sequence2(%struct.rtx_def* %17, %struct.rtx_def* %18) #6, !dbg !8578
  %call125 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call119, %struct.rtx_def* %real.0) #6, !dbg !8579
  %call126 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call124, %struct.rtx_def* %imag.0) #6, !dbg !8580
  %call127 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8581
  store %struct.rtx_def* %call127, %struct.rtx_def** %first_conversion_insn, align 8, !dbg !8582
  %call129 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !8583
  store %struct.rtx_def* %call129, %struct.rtx_def** %last_conversion_insn, align 8, !dbg !8584
  tail call void @end_sequence() #6, !dbg !8585
  br label %if.end137, !dbg !8586

if.else:                                          ; preds = %if.end
  %bf.load133 = load i64, i64* %4, align 8, !dbg !8587
  %19 = trunc i64 %bf.load133 to i32, !dbg !8587
  %bf.cast135 = and i32 %19, 255, !dbg !8587
  %call136 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %bf.cast135, %struct.rtx_def* %real.0, %struct.rtx_def* %imag.0) #6, !dbg !8587
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !8527, metadata !DIExpression()), !dbg !8544
  br label %if.end137

if.end137:                                        ; preds = %if.else, %if.then97
  %tmp.0 = phi %struct.rtx_def* [ %call118, %if.then97 ], [ %call136, %if.else ], !dbg !8588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !8527, metadata !DIExpression()), !dbg !8544
  tail call void @set_decl_rtl(%union.tree_node* nonnull %parm.0, %struct.rtx_def* %tmp.0) #6, !dbg !8589
  %call144 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %i.0) #7, !dbg !8590
  %incoming_rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call144, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8590
  %20 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !8590
  %21 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8, !dbg !8590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !8533, metadata !DIExpression()), !dbg !8544
  %call152 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base10, i32 %add) #7, !dbg !8591
  %incoming_rtl154 = getelementptr inbounds %union.tree_node, %union.tree_node* %call152, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8591
  %22 = bitcast %union.tree_node** %incoming_rtl154 to %struct.rtx_def**, !dbg !8591
  %23 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8, !dbg !8591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !8534, metadata !DIExpression()), !dbg !8544
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !8592
  %bf.load155 = load i32, i32* %24, align 8, !dbg !8592
  %bf.lshr156 = lshr i32 %bf.load155, 16, !dbg !8592
  %bf.clear157 = and i32 %bf.lshr156, 255, !dbg !8592
  %cmp158 = icmp eq i32 %bf.clear157, %conv8, !dbg !8594
  br i1 %cmp158, label %if.end163, label %if.then160, !dbg !8595

if.then160:                                       ; preds = %if.end137
  %call161 = tail call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %conv8, %struct.rtx_def* %21) #6, !dbg !8596
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call161, metadata !8533, metadata !DIExpression()), !dbg !8544
  %call162 = tail call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %conv8, %struct.rtx_def* %23) #6, !dbg !8598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call162, metadata !8534, metadata !DIExpression()), !dbg !8544
  br label %if.end163, !dbg !8599

if.end163:                                        ; preds = %if.end137, %if.then160
  %real.1 = phi %struct.rtx_def* [ %call161, %if.then160 ], [ %21, %if.end137 ], !dbg !8544
  %imag.1 = phi %struct.rtx_def* [ %call162, %if.then160 ], [ %23, %if.end137 ], !dbg !8544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %imag.1, metadata !8534, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %real.1, metadata !8533, metadata !DIExpression()), !dbg !8544
  %bf.load166 = load i64, i64* %4, align 8, !dbg !8600
  %25 = trunc i64 %bf.load166 to i32, !dbg !8600
  %bf.cast168 = and i32 %25, 255, !dbg !8600
  %call169 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %bf.cast168, %struct.rtx_def* %real.1, %struct.rtx_def* %imag.1) #6, !dbg !8600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call169, metadata !8527, metadata !DIExpression()), !dbg !8544
  tail call void @set_decl_incoming_rtl(%union.tree_node* nonnull %parm.0, %struct.rtx_def* %call169, i8 zeroext 0) #6, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %add, metadata !8526, metadata !DIExpression()), !dbg !8542
  br label %for.inc, !dbg !8602

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.end163
  %i.1 = phi i32 [ %add, %if.end163 ], [ %i.0, %land.lhs.true ], [ %i.0, %for.body ], !dbg !8542
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !8526, metadata !DIExpression()), !dbg !8542
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8603
  %inc172 = add i32 %i.1, 1, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %inc172, metadata !8526, metadata !DIExpression()), !dbg !8542
  br label %for.cond, !dbg !8605, !llvm.loop !8606

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8608
}

declare dso_local i32 @ix86_return_pops_args(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @function_arg(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #1

declare dso_local void @set_mem_offset(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_reg_attrs_for_parm(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @emit_group_store(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @move_block_from_reg(i32, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_group_move_into_temps(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @push_to_sequence2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_block_move(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @mark_user_reg(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_parm_remove_parallels(%struct.assign_parm_data_one* %data) unnamed_addr #4 !dbg !8609 {
entry:
  call void @llvm.dbg.value(metadata %struct.assign_parm_data_one* %data, metadata !8611, metadata !DIExpression()), !dbg !8616
  %entry_parm1 = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 2, !dbg !8617
  %0 = load %struct.rtx_def*, %struct.rtx_def** %entry_parm1, align 8, !dbg !8617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !8612, metadata !DIExpression()), !dbg !8616
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !8618
  %bf.load = load i32, i32* %1, align 8, !dbg !8618
  %bf.clear = and i32 %bf.load, 65535, !dbg !8618
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !8619
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8620

land.lhs.true:                                    ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 16711680, !dbg !8621
  %cmp4 = icmp eq i32 %bf.clear3, 65536, !dbg !8622
  br i1 %cmp4, label %if.end, label %if.then, !dbg !8623

if.then:                                          ; preds = %land.lhs.true
  %bf.lshr6 = lshr i32 %bf.load, 16, !dbg !8624
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !8624
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear7) #6, !dbg !8625
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8613, metadata !DIExpression()), !dbg !8626
  %passed_type = getelementptr inbounds %struct.assign_parm_data_one, %struct.assign_parm_data_one* %data, i64 0, i32 1, !dbg !8627
  %2 = load %union.tree_node*, %union.tree_node** %passed_type, align 8, !dbg !8627
  %bf.load8 = load i32, i32* %1, align 8, !dbg !8628
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !8628
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !8628
  %idxprom = zext i32 %bf.clear10 to i64, !dbg !8628
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8628
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8628
  %conv11 = zext i8 %3 to i32, !dbg !8628
  tail call void @emit_group_store(%struct.rtx_def* %call, %struct.rtx_def* %0, %union.tree_node* %2, i32 %conv11) #6, !dbg !8629
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8612, metadata !DIExpression()), !dbg !8616
  br label %if.end, !dbg !8630

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %entry_parm.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %0, %land.lhs.true ], [ %0, %entry ], !dbg !8616
  call void @llvm.dbg.value(metadata %struct.rtx_def* %entry_parm.0, metadata !8612, metadata !DIExpression()), !dbg !8616
  store %struct.rtx_def* %entry_parm.0, %struct.rtx_def** %entry_parm1, align 8, !dbg !8631
  ret void, !dbg !8632
}

declare dso_local %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @expand_assignment(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #1

declare dso_local %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8633 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !8637, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8638, metadata !DIExpression()), !dbg !8639
  br label %land.end, !dbg !8640

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8640
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8640
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8640
  ret %union.tree_node* %0, !dbg !8640
}

declare dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @do_use_return_reg(%struct.rtx_def* %reg, i8* %arg) #4 !dbg !8641 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !8643, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata i8* %arg, metadata !8644, metadata !DIExpression()), !dbg !8645
  %call = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %reg) #6, !dbg !8646
  ret void, !dbg !8647
}

declare dso_local %struct.rtx_def* @emit_use(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8648 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8653
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8653
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8653

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8653
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8653
  br label %cond.end, !dbg !8653

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8653
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8653
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !8654
  %conv3 = zext i1 %cmp to i8, !dbg !8655
  ret i8 %conv3, !dbg !8656
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8657 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8662
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8662
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8662

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8662
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8662
  br label %cond.end, !dbg !8662

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8662
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !8662
  ret %struct.edge_def* %call2, !dbg !8663
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !8664 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !8670, metadata !DIExpression()), !dbg !8671
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !8672
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8672

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !8672
  %0 = load i32, i32* %num, align 8, !dbg !8672
  br label %cond.end, !dbg !8672

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8672
  ret i32 %cond, !dbg !8672
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8673 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !8678
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8678

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8678
  br label %cond.end, !dbg !8678

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !8679
  ret %struct.VEC_edge_gc* %0, !dbg !8680
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8681 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !8685, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8686, metadata !DIExpression()), !dbg !8687
  br label %land.end, !dbg !8688

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8688
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8688
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !8688
  ret %struct.edge_def* %0, !dbg !8688
}

declare dso_local i32 @iterative_hash(i8*, i64, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @cleanup_cfg(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @thread_prologue_and_epilogue_insns() unnamed_addr #4 !dbg !8689 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp37 = alloca %struct.edge_iterator, align 8
  %ei2 = alloca %struct.edge_iterator, align 8
  %tmp74 = alloca %struct.edge_iterator, align 8
  %tmp142 = alloca %struct.edge_iterator, align 8
  %tmp194 = alloca %struct.edge_iterator, align 8
  %tmp220 = alloca %struct.edge_iterator, align 8
  %tmp247 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !8691, metadata !DIExpression()), !dbg !8724
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !8725
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8694, metadata !DIExpression()), !dbg !8724
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8726
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8726
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8727
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !8727
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8727
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !8727
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8727
  tail call void @rtl_profile_for_bb(%struct.basic_block_def* %4) #6, !dbg !8728
  tail call void @start_sequence() #6, !dbg !8729
  %call = tail call %struct.rtx_def* @gen_prologue() #6, !dbg !8732
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8693, metadata !DIExpression()), !dbg !8724
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #6, !dbg !8733
  %5 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 35), align 1, !dbg !8734
  %tobool = icmp eq i8 %5, 0, !dbg !8736
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8737

land.lhs.true:                                    ; preds = %entry
  %6 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !8738
  %tobool3 = icmp eq i8 %6, 0, !dbg !8738
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8739

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !8740
  %call4 = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %7) #6, !dbg !8741
  br label %if.end, !dbg !8741

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  tail call fastcc void @record_insns(%struct.rtx_def* %call, %struct.rtx_def* null, %struct.htab** nonnull @prologue_insn_hash) #7, !dbg !8742
  %call5 = tail call %struct.rtx_def* @emit_note(i32 5) #6, !dbg !8743
  %8 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 35), align 1, !dbg !8744
  %tobool6 = icmp eq i8 %8, 0, !dbg !8746
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !8747

if.then7:                                         ; preds = %if.end
  %call8 = tail call %struct.rtx_def* @gen_blockage() #6, !dbg !8748
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #6, !dbg !8749
  br label %if.end10, !dbg !8749

if.end10:                                         ; preds = %if.end, %if.then7
  %call11 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8750
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !8693, metadata !DIExpression()), !dbg !8724
  tail call void @end_sequence() #6, !dbg !8751
  %9 = load i32, i32* @prologue_locator, align 4, !dbg !8752
  tail call fastcc void @set_insn_locators(%struct.rtx_def* %call11, i32 %9) #7, !dbg !8753
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8754
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !8754
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !8754
  %x_entry_block_ptr13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !8754
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr13, align 8, !dbg !8754
  %call14 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %12) #7, !dbg !8754
  %tobool15 = icmp eq i8 %call14, 0, !dbg !8754
  br i1 %tobool15, label %cond.true, label %cond.end, !dbg !8754

cond.true:                                        ; preds = %if.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8754
  br label %cond.end, !dbg !8754

cond.end:                                         ; preds = %if.end10, %cond.true
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8755
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !8755
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !8755
  %x_entry_block_ptr17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !8755
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr17, align 8, !dbg !8755
  %call18 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %15) #7, !dbg !8756
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call11, %struct.edge_def* %call18) #6, !dbg !8757
  call void @llvm.dbg.value(metadata i32 1, metadata !8691, metadata !DIExpression()), !dbg !8724
  %16 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8758
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !8758
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8758
  %cfg19 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !8758
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg19, align 8, !dbg !8758
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !8758
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8758
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 0, !dbg !8758
  %call20 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8758
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8758
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call20, 0, !dbg !8758
  store i32 %21, i32* %20, align 8, !dbg !8758
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8758
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call20, 1, !dbg !8758
  store %struct.VEC_edge_gc** %23, %struct.VEC_edge_gc*** %22, align 8, !dbg !8758
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !8758
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !8758
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8760
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8760
  br label %for.cond, !dbg !8758

for.cond:                                         ; preds = %for.inc, %cond.end
  %26 = load i32, i32* %24, align 8, !dbg !8762
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8762
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8692, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %call21 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %e) #7, !dbg !8762
  %tobool22 = icmp eq i8 %call21, 0, !dbg !8758
  br i1 %tobool22, label %for.cond.for.end_crit_edge, label %for.body, !dbg !8758

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8763
  br label %for.end, !dbg !8758

for.body:                                         ; preds = %for.cond
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8765
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !8767
  %29 = load i32, i32* %flags, align 8, !dbg !8767
  %and = and i32 %29, 16, !dbg !8768
  %cmp = icmp eq i32 %and, 0, !dbg !8769
  br i1 %cmp, label %for.end.loopexit, label %for.inc, !dbg !8770

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8762
  br label %for.cond, !dbg !8762, !llvm.loop !8771

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa9 = phi %struct.edge_def* [ %28, %for.body ], !dbg !8765
  br label %for.end, !dbg !8773

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %30 = phi %struct.edge_def* [ %.pre, %for.cond.for.end_crit_edge ], [ %.lcssa9, %for.end.loopexit ], !dbg !8763
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !8692, metadata !DIExpression()), !dbg !8724
  %cmp26 = icmp eq %struct.edge_def* %30, null, !dbg !8773
  br i1 %cmp26, label %epilogue_done, label %if.end29, !dbg !8774

if.end29:                                         ; preds = %for.end
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8775
  %cfg30 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !8775
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg30, align 8, !dbg !8775
  %x_exit_block_ptr31 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 1, !dbg !8775
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr31, align 8, !dbg !8775
  call void @rtl_profile_for_bb(%struct.basic_block_def* %33) #6, !dbg !8776
  %34 = load i32, i32* @optimize, align 4, !dbg !8777
  %tobool32 = icmp eq i32 %34, 0, !dbg !8777
  br i1 %tobool32, label %if.end141, label %land.lhs.true33, !dbg !8778

land.lhs.true33:                                  ; preds = %if.end29
  %call34 = call i32 @ix86_can_use_return_insn_p() #6, !dbg !8779
  %tobool35 = icmp eq i32 %call34, 0, !dbg !8779
  br i1 %tobool35, label %if.end141, label %if.then36, !dbg !8780

if.then36:                                        ; preds = %land.lhs.true33
  %35 = bitcast %struct.edge_iterator* %tmp37 to i8*, !dbg !8781
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8, !dbg !8781
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8781
  %cfg38 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !8781
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg38, align 8, !dbg !8781
  %x_exit_block_ptr39 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 1, !dbg !8781
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr39, align 8, !dbg !8781
  %preds40 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i64 0, i32 0, !dbg !8781
  %call41 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds40) #7, !dbg !8781
  %39 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp37, i64 0, i32 0, !dbg !8781
  %40 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 0, !dbg !8781
  store i32 %40, i32* %39, align 8, !dbg !8781
  %41 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp37, i64 0, i32 1, !dbg !8781
  %42 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 1, !dbg !8781
  store %struct.VEC_edge_gc** %42, %struct.VEC_edge_gc*** %41, align 8, !dbg !8781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %35, i64 16, i1 false), !dbg !8781
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8, !dbg !8781
  br label %for.cond42, !dbg !8781

for.cond42:                                       ; preds = %for.inc51, %if.then36
  %43 = load i32, i32* %24, align 8, !dbg !8783
  %44 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8783
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8692, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %call43 = call fastcc zeroext i8 @ei_cond(i32 %43, %struct.VEC_edge_gc** %44, %struct.edge_def** nonnull %e) #7, !dbg !8783
  %tobool44 = icmp eq i8 %call43, 0, !dbg !8781
  br i1 %tobool44, label %for.cond42.for.end52_crit_edge, label %for.body45, !dbg !8781

for.cond42.for.end52_crit_edge:                   ; preds = %for.cond42
  %.pre4 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8785
  br label %for.end52, !dbg !8781

for.body45:                                       ; preds = %for.cond42
  %45 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.edge_def* %45, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %45, i64 0, i32 7, !dbg !8789
  %46 = load i32, i32* %flags46, align 8, !dbg !8789
  %and47 = and i32 %46, 1, !dbg !8790
  %tobool48 = icmp eq i32 %and47, 0, !dbg !8790
  br i1 %tobool48, label %for.inc51, label %for.end52.loopexit, !dbg !8791

for.inc51:                                        ; preds = %for.body45
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8783
  br label %for.cond42, !dbg !8783, !llvm.loop !8792

for.end52.loopexit:                               ; preds = %for.body45
  %.lcssa8 = phi %struct.edge_def* [ %45, %for.body45 ], !dbg !8787
  br label %for.end52, !dbg !8794

for.end52:                                        ; preds = %for.end52.loopexit, %for.cond42.for.end52_crit_edge
  %47 = phi %struct.edge_def* [ %.pre4, %for.cond42.for.end52_crit_edge ], [ %.lcssa8, %for.end52.loopexit ], !dbg !8785
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !8692, metadata !DIExpression()), !dbg !8724
  %cmp53 = icmp eq %struct.edge_def* %47, null, !dbg !8794
  br i1 %cmp53, label %cleanup137, label %if.end56, !dbg !8795

if.end56:                                         ; preds = %for.end52
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !8692, metadata !DIExpression()), !dbg !8724
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 0, !dbg !8796
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8796
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %48, metadata !8696, metadata !DIExpression()), !dbg !8797
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 7, !dbg !8798
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8798
  %49 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8798
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %49, i64 0, i32 1, !dbg !8798
  br label %while.cond, !dbg !8799

while.cond:                                       ; preds = %if.end63, %if.end56
  %label.0.in = phi %struct.rtx_def** [ %end_, %if.end56 ], [ %rt_rtx, %if.end63 ]
  %label.0 = load %struct.rtx_def*, %struct.rtx_def** %label.0.in, align 8, !dbg !8797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.0, metadata !8699, metadata !DIExpression()), !dbg !8797
  %tobool57 = icmp eq %struct.rtx_def* %label.0, null, !dbg !8800
  br i1 %tobool57, label %while.end, label %land.rhs, !dbg !8801

land.rhs:                                         ; preds = %while.cond
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label.0, i64 0, i32 0, !dbg !8802
  %bf.load = load i32, i32* %50, align 8, !dbg !8802
  %bf.clear = and i32 %bf.load, 65535, !dbg !8802
  %cmp58 = icmp eq i32 %bf.clear, 12, !dbg !8802
  br i1 %cmp58, label %while.end, label %while.body, !dbg !8799

while.body:                                       ; preds = %land.rhs
  %call60 = call i32 @active_insn_p(%struct.rtx_def* nonnull %label.0) #6, !dbg !8803
  %tobool61 = icmp eq i32 %call60, 0, !dbg !8803
  br i1 %tobool61, label %if.end63, label %while.end, !dbg !8806

if.end63:                                         ; preds = %while.body
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8807
  %rt_rtx = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !8807
  br label %while.cond, !dbg !8799, !llvm.loop !8808

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond
  %label.0.lcssa = phi %struct.rtx_def* [ %label.0, %while.body ], [ %label.0, %land.rhs ], [ %label.0, %while.cond ], !dbg !8797
  %52 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8810
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %52, i64 0, i32 0, !dbg !8810
  %53 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8810
  %cmp66 = icmp eq %struct.rtx_def* %53, %label.0.lcssa, !dbg !8811
  br i1 %cmp66, label %land.lhs.true68, label %cleanup137, !dbg !8812

land.lhs.true68:                                  ; preds = %while.end
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label.0.lcssa, i64 0, i32 0, !dbg !8813
  %bf.load69 = load i32, i32* %54, align 8, !dbg !8813
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !8813
  %cmp71 = icmp eq i32 %bf.clear70, 12, !dbg !8813
  br i1 %cmp71, label %if.then73, label %cleanup137, !dbg !8814

if.then73:                                        ; preds = %land.lhs.true68
  %55 = bitcast %struct.edge_iterator* %ei2 to i8*, !dbg !8815
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #8, !dbg !8815
  %56 = bitcast %struct.edge_iterator* %tmp74 to i8*, !dbg !8816
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #8, !dbg !8816
  %preds75 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 0, !dbg !8816
  %call76 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds75) #7, !dbg !8816
  %57 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp74, i64 0, i32 0, !dbg !8816
  %58 = extractvalue { i32, %struct.VEC_edge_gc** } %call76, 0, !dbg !8816
  store i32 %58, i32* %57, align 8, !dbg !8816
  %59 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp74, i64 0, i32 1, !dbg !8816
  %60 = extractvalue { i32, %struct.VEC_edge_gc** } %call76, 1, !dbg !8816
  store %struct.VEC_edge_gc** %60, %struct.VEC_edge_gc*** %59, align 8, !dbg !8816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %56, i64 16, i1 false), !dbg !8816
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #8, !dbg !8816
  %61 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei2, i64 0, i32 0, !dbg !8817
  %62 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei2, i64 0, i32 1, !dbg !8817
  br label %for.cond77, !dbg !8818

for.cond77:                                       ; preds = %cleanup, %if.then73
  %63 = load i32, i32* %61, align 8, !dbg !8819
  %64 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %62, align 8, !dbg !8819
  %call78 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %63, %struct.VEC_edge_gc** %64) #7, !dbg !8819
  call void @llvm.dbg.value(metadata %struct.edge_def* %call78, metadata !8692, metadata !DIExpression()), !dbg !8724
  store %struct.edge_def* %call78, %struct.edge_def** %e, align 8, !dbg !8820
  %tobool79 = icmp eq %struct.edge_def* %call78, null, !dbg !8821
  br i1 %tobool79, label %for.end124, label %for.body80, !dbg !8821

for.body80:                                       ; preds = %for.cond77
  call void @llvm.dbg.value(metadata %struct.edge_def* %call78, metadata !8692, metadata !DIExpression()), !dbg !8724
  %src81 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call78, i64 0, i32 0, !dbg !8822
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %src81, align 8, !dbg !8822
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %65, metadata !8703, metadata !DIExpression()), !dbg !8823
  %66 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8824
  %cfg82 = getelementptr inbounds %struct.function, %struct.function* %66, i64 0, i32 1, !dbg !8824
  %67 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg82, align 8, !dbg !8824
  %x_entry_block_ptr83 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %67, i64 0, i32 0, !dbg !8824
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr83, align 8, !dbg !8824
  %cmp84 = icmp eq %struct.basic_block_def* %65, %68, !dbg !8826
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !8827

if.then86:                                        ; preds = %for.body80
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !8700, metadata !DIExpression(DW_OP_deref)), !dbg !8828
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !8829
  br label %cleanup, !dbg !8831, !llvm.loop !8832

if.end87:                                         ; preds = %for.body80
  %il88 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i64 0, i32 7, !dbg !8834
  %rtl89 = bitcast %union.basic_block_il_dependent* %il88 to %struct.rtl_bb_info**, !dbg !8834
  %69 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl89, align 8, !dbg !8834
  %end_90 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %69, i64 0, i32 1, !dbg !8834
  %70 = load %struct.rtx_def*, %struct.rtx_def** %end_90, align 8, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %70, metadata !8707, metadata !DIExpression()), !dbg !8823
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i64 0, i32 0, !dbg !8835
  %bf.load91 = load i32, i32* %71, align 8, !dbg !8835
  %bf.clear92 = and i32 %bf.load91, 65535, !dbg !8835
  %cmp93 = icmp eq i32 %bf.clear92, 9, !dbg !8835
  br i1 %cmp93, label %lor.lhs.false, label %if.then101, !dbg !8837

lor.lhs.false:                                    ; preds = %if.end87
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i64 0, i32 1, !dbg !8838
  %arrayidx97 = getelementptr inbounds %union.u, %union.u* %u95, i64 1, i32 0, i32 1, !dbg !8838
  %rt_rtx98 = bitcast %struct.object_block** %arrayidx97 to %struct.rtx_def**, !dbg !8838
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !8838
  %cmp99 = icmp eq %struct.rtx_def* %72, %label.0.lcssa, !dbg !8839
  br i1 %cmp99, label %if.end102, label %if.then101, !dbg !8840

if.then101:                                       ; preds = %lor.lhs.false, %if.end87
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !8700, metadata !DIExpression(DW_OP_deref)), !dbg !8828
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !8841
  br label %cleanup, !dbg !8843, !llvm.loop !8832

if.end102:                                        ; preds = %lor.lhs.false
  %call103 = call i32 @simplejump_p(%struct.rtx_def* %70) #6, !dbg !8844
  %tobool104 = icmp eq i32 %call103, 0, !dbg !8844
  br i1 %tobool104, label %if.else, label %if.then105, !dbg !8846

if.then105:                                       ; preds = %if.end102
  call fastcc void @emit_return_into_block(%struct.basic_block_def* %65) #7, !dbg !8847
  %call106 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %70) #6, !dbg !8849
  br label %if.end120, !dbg !8850

if.else:                                          ; preds = %if.end102
  %call107 = call i32 @condjump_p(%struct.rtx_def* %70) #6, !dbg !8851
  %tobool108 = icmp eq i32 %call107, 0, !dbg !8851
  br i1 %tobool108, label %if.else118, label %if.then109, !dbg !8853

if.then109:                                       ; preds = %if.else
  %call110 = call i32 @redirect_jump(%struct.rtx_def* %70, %struct.rtx_def* null, i32 0) #6, !dbg !8854
  %tobool111 = icmp eq i32 %call110, 0, !dbg !8854
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !8857

if.then112:                                       ; preds = %if.then109
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !8700, metadata !DIExpression(DW_OP_deref)), !dbg !8828
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !8858
  br label %cleanup, !dbg !8860, !llvm.loop !8832

if.end113:                                        ; preds = %if.then109
  %call114 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %65) #7, !dbg !8861
  %tobool115 = icmp eq i8 %call114, 0, !dbg !8861
  br i1 %tobool115, label %if.end120, label %if.then116, !dbg !8863

if.then116:                                       ; preds = %if.end113
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !8700, metadata !DIExpression(DW_OP_deref)), !dbg !8828
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !8864
  br label %cleanup, !dbg !8866, !llvm.loop !8832

if.else118:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !8700, metadata !DIExpression(DW_OP_deref)), !dbg !8828
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !8867
  br label %cleanup, !dbg !8869, !llvm.loop !8832

if.end120:                                        ; preds = %if.end113, %if.then105
  %73 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8870
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !8692, metadata !DIExpression()), !dbg !8724
  %74 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8871
  %cfg121 = getelementptr inbounds %struct.function, %struct.function* %74, i64 0, i32 1, !dbg !8871
  %75 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg121, align 8, !dbg !8871
  %x_exit_block_ptr122 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %75, i64 0, i32 1, !dbg !8871
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr122, align 8, !dbg !8871
  call void @redirect_edge_succ(%struct.edge_def* %73, %struct.basic_block_def* %76) #6, !dbg !8872
  br label %cleanup, !dbg !8873

cleanup:                                          ; preds = %if.end120, %if.else118, %if.then116, %if.then112, %if.then101, %if.then86
  br label %for.cond77

for.end124:                                       ; preds = %for.cond77
  %77 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8874
  %end_127 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %77, i64 0, i32 1, !dbg !8874
  %78 = load %struct.rtx_def*, %struct.rtx_def** %end_127, align 8, !dbg !8874
  %call128 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %78) #6, !dbg !8875
  call fastcc void @emit_return_into_block(%struct.basic_block_def* %48) #7, !dbg !8876
  %79 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8877
  %end_131 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %79, i64 0, i32 1, !dbg !8877
  %80 = load %struct.rtx_def*, %struct.rtx_def** %end_131, align 8, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.rtx_def* %80, metadata !8694, metadata !DIExpression()), !dbg !8724
  %call132 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %48) #7, !dbg !8878
  %flags133 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call132, i64 0, i32 7, !dbg !8879
  %81 = load i32, i32* %flags133, align 8, !dbg !8880
  %and134 = and i32 %81, -2, !dbg !8880
  store i32 %and134, i32* %flags133, align 8, !dbg !8880
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #8, !dbg !8881
  br label %cleanup137

cleanup137:                                       ; preds = %while.end, %land.lhs.true68, %for.end52, %for.end124
  %cleanup.dest.slot.1 = phi i1 [ false, %for.end124 ], [ false, %for.end52 ], [ true, %land.lhs.true68 ], [ true, %while.end ]
  %epilogue_end.0 = phi %struct.rtx_def* [ %80, %for.end124 ], [ null, %for.end52 ], [ null, %land.lhs.true68 ], [ null, %while.end ], !dbg !8724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %epilogue_end.0, metadata !8694, metadata !DIExpression()), !dbg !8724
  br i1 %cleanup.dest.slot.1, label %if.end141, label %epilogue_done

if.end141:                                        ; preds = %land.lhs.true33, %if.end29, %cleanup137
  %epilogue_end.1 = phi %struct.rtx_def* [ null, %land.lhs.true33 ], [ null, %if.end29 ], [ %epilogue_end.0, %cleanup137 ], !dbg !8882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %epilogue_end.1, metadata !8694, metadata !DIExpression()), !dbg !8724
  store i32 1, i32* @epilogue_completed, align 4, !dbg !8883
  %82 = bitcast %struct.edge_iterator* %tmp142 to i8*, !dbg !8884
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #8, !dbg !8884
  %83 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8884
  %cfg143 = getelementptr inbounds %struct.function, %struct.function* %83, i64 0, i32 1, !dbg !8884
  %84 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg143, align 8, !dbg !8884
  %x_exit_block_ptr144 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %84, i64 0, i32 1, !dbg !8884
  %85 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr144, align 8, !dbg !8884
  %preds145 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %85, i64 0, i32 0, !dbg !8884
  %call146 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds145) #7, !dbg !8884
  %86 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp142, i64 0, i32 0, !dbg !8884
  %87 = extractvalue { i32, %struct.VEC_edge_gc** } %call146, 0, !dbg !8884
  store i32 %87, i32* %86, align 8, !dbg !8884
  %88 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp142, i64 0, i32 1, !dbg !8884
  %89 = extractvalue { i32, %struct.VEC_edge_gc** } %call146, 1, !dbg !8884
  store %struct.VEC_edge_gc** %89, %struct.VEC_edge_gc*** %88, align 8, !dbg !8884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %82, i64 16, i1 false), !dbg !8884
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #8, !dbg !8884
  br label %for.cond147, !dbg !8884

for.cond147:                                      ; preds = %cleanup187, %if.end141
  %90 = load i32, i32* %24, align 8, !dbg !8885
  %91 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8885
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8692, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %call148 = call fastcc zeroext i8 @ei_cond(i32 %90, %struct.VEC_edge_gc** %91, %struct.edge_def** nonnull %e) #7, !dbg !8885
  %tobool149 = icmp eq i8 %call148, 0, !dbg !8884
  br i1 %tobool149, label %for.end193, label %for.body150, !dbg !8884

for.body150:                                      ; preds = %for.cond147
  %92 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8886
  call void @llvm.dbg.value(metadata %struct.edge_def* %92, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags152 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %92, i64 0, i32 7, !dbg !8888
  %93 = load i32, i32* %flags152, align 8, !dbg !8888
  %and153 = and i32 %93, 1, !dbg !8889
  %tobool154 = icmp eq i32 %and153, 0, !dbg !8889
  br i1 %tobool154, label %if.end156, label %cleanup187, !dbg !8890

if.end156:                                        ; preds = %for.body150
  call void @llvm.dbg.value(metadata %struct.edge_def* %92, metadata !8692, metadata !DIExpression()), !dbg !8724
  %src157 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %92, i64 0, i32 0, !dbg !8891
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %src157, align 8, !dbg !8891
  %il158 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %94, i64 0, i32 7, !dbg !8891
  %rtl159 = bitcast %union.basic_block_il_dependent* %il158 to %struct.rtl_bb_info**, !dbg !8891
  %95 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl159, align 8, !dbg !8891
  %end_160 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %95, i64 0, i32 1, !dbg !8891
  %96 = load %struct.rtx_def*, %struct.rtx_def** %end_160, align 8, !dbg !8891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %96, metadata !8712, metadata !DIExpression()), !dbg !8892
  %call161 = call i32 @eh_returnjump_p(%struct.rtx_def* %96) #6, !dbg !8893
  %tobool162 = icmp eq i32 %call161, 0, !dbg !8893
  br i1 %tobool162, label %cleanup187, label %if.end164, !dbg !8895

if.end164:                                        ; preds = %if.end156
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8896
  %rt_rtx168 = bitcast %union.rtunion_def* %97 to %struct.rtx_def**, !dbg !8896
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx168, align 8, !dbg !8896
  call void @llvm.dbg.value(metadata %struct.rtx_def* %98, metadata !8708, metadata !DIExpression()), !dbg !8892
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i64 0, i32 1, !dbg !8897
  %99 = getelementptr inbounds %union.u, %union.u* %u169, i64 1, i32 0, i32 0, i64 0, !dbg !8897
  %rt_rtx172 = bitcast %union.rtunion_def* %99 to %struct.rtx_def**, !dbg !8897
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !8897
  %call173 = call %struct.rtx_def* @try_split(%struct.rtx_def* %100, %struct.rtx_def* %96, i32 1) #6, !dbg !8898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call173, metadata !8713, metadata !DIExpression()), !dbg !8892
  %cmp174 = icmp eq %struct.rtx_def* %call173, %96, !dbg !8899
  br i1 %cmp174, label %cleanup187, label %if.end177, !dbg !8901

if.end177:                                        ; preds = %if.end164
  %101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8902
  %rt_rtx181 = bitcast %union.rtunion_def* %101 to %struct.rtx_def**, !dbg !8902
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !8902
  %103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call173, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8903
  %rt_rtx185 = bitcast %union.rtunion_def* %103 to %struct.rtx_def**, !dbg !8903
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx185, align 8, !dbg !8903
  call fastcc void @record_insns(%struct.rtx_def* %102, %struct.rtx_def* %104, %struct.htab** nonnull @epilogue_insn_hash) #7, !dbg !8904
  %call186 = call %struct.rtx_def* @emit_note_after(i32 6, %struct.rtx_def* %98) #6, !dbg !8905
  br label %cleanup187, !dbg !8906

cleanup187:                                       ; preds = %if.end156, %for.body150, %if.end164, %if.end177
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8885
  br label %for.cond147, !dbg !8885, !llvm.loop !8907

for.end193:                                       ; preds = %for.cond147
  %105 = bitcast %struct.edge_iterator* %tmp194 to i8*, !dbg !8909
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #8, !dbg !8909
  %106 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8909
  %cfg195 = getelementptr inbounds %struct.function, %struct.function* %106, i64 0, i32 1, !dbg !8909
  %107 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg195, align 8, !dbg !8909
  %x_exit_block_ptr196 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %107, i64 0, i32 1, !dbg !8909
  %108 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr196, align 8, !dbg !8909
  %preds197 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %108, i64 0, i32 0, !dbg !8909
  %call198 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds197) #7, !dbg !8909
  %109 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp194, i64 0, i32 0, !dbg !8909
  %110 = extractvalue { i32, %struct.VEC_edge_gc** } %call198, 0, !dbg !8909
  store i32 %110, i32* %109, align 8, !dbg !8909
  %111 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp194, i64 0, i32 1, !dbg !8909
  %112 = extractvalue { i32, %struct.VEC_edge_gc** } %call198, 1, !dbg !8909
  store %struct.VEC_edge_gc** %112, %struct.VEC_edge_gc*** %111, align 8, !dbg !8909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %105, i64 16, i1 false), !dbg !8909
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #8, !dbg !8909
  br label %for.cond199, !dbg !8909

for.cond199:                                      ; preds = %for.inc208, %for.end193
  %113 = load i32, i32* %24, align 8, !dbg !8911
  %114 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8911
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8692, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %call200 = call fastcc zeroext i8 @ei_cond(i32 %113, %struct.VEC_edge_gc** %114, %struct.edge_def** nonnull %e) #7, !dbg !8911
  %tobool201 = icmp eq i8 %call200, 0, !dbg !8909
  br i1 %tobool201, label %for.cond199.for.end209_crit_edge, label %for.body202, !dbg !8909

for.cond199.for.end209_crit_edge:                 ; preds = %for.cond199
  %.pre5 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8913
  br label %for.end209, !dbg !8909

for.body202:                                      ; preds = %for.cond199
  %115 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.edge_def* %115, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags203 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %115, i64 0, i32 7, !dbg !8917
  %116 = load i32, i32* %flags203, align 8, !dbg !8917
  %and204 = and i32 %116, 1, !dbg !8918
  %tobool205 = icmp eq i32 %and204, 0, !dbg !8918
  br i1 %tobool205, label %for.inc208, label %for.end209.loopexit, !dbg !8919

for.inc208:                                       ; preds = %for.body202
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8911
  br label %for.cond199, !dbg !8911, !llvm.loop !8920

for.end209.loopexit:                              ; preds = %for.body202
  %.lcssa = phi %struct.edge_def* [ %115, %for.body202 ], !dbg !8915
  br label %for.end209, !dbg !8922

for.end209:                                       ; preds = %for.end209.loopexit, %for.cond199.for.end209_crit_edge
  %117 = phi %struct.edge_def* [ %.pre5, %for.cond199.for.end209_crit_edge ], [ %.lcssa, %for.end209.loopexit ], !dbg !8913
  call void @llvm.dbg.value(metadata %struct.edge_def* %117, metadata !8692, metadata !DIExpression()), !dbg !8724
  %cmp210 = icmp eq %struct.edge_def* %117, null, !dbg !8922
  br i1 %cmp210, label %epilogue_done, label %if.end213, !dbg !8923

if.end213:                                        ; preds = %for.end209
  call void @start_sequence() #6, !dbg !8924
  %call214 = call %struct.rtx_def* @emit_note(i32 6) #6, !dbg !8927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call214, metadata !8694, metadata !DIExpression()), !dbg !8724
  %call215 = call %struct.rtx_def* @gen_epilogue() #6, !dbg !8928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call215, metadata !8693, metadata !DIExpression()), !dbg !8724
  %call216 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call215) #6, !dbg !8929
  call fastcc void @record_insns(%struct.rtx_def* %call215, %struct.rtx_def* null, %struct.htab** nonnull @epilogue_insn_hash) #7, !dbg !8930
  %118 = load i32, i32* @epilogue_locator, align 4, !dbg !8931
  call fastcc void @set_insn_locators(%struct.rtx_def* %call215, i32 %118) #7, !dbg !8932
  %call217 = call %struct.rtx_def* @get_insns() #6, !dbg !8933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217, metadata !8693, metadata !DIExpression()), !dbg !8724
  call void @end_sequence() #6, !dbg !8934
  %119 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8935
  call void @llvm.dbg.value(metadata %struct.edge_def* %119, metadata !8692, metadata !DIExpression()), !dbg !8724
  call void @insert_insn_on_edge(%struct.rtx_def* %call217, %struct.edge_def* %119) #6, !dbg !8936
  call void @llvm.dbg.value(metadata i32 1, metadata !8691, metadata !DIExpression()), !dbg !8724
  br label %epilogue_done, !dbg !8937

epilogue_done:                                    ; preds = %for.end209, %cleanup137, %for.end, %if.end213
  %epilogue_end.2 = phi %struct.rtx_def* [ %epilogue_end.0, %cleanup137 ], [ %call214, %if.end213 ], [ null, %for.end ], [ %epilogue_end.1, %for.end209 ], !dbg !8724
  call void @llvm.dbg.value(metadata i32 1, metadata !8691, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %epilogue_end.2, metadata !8694, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.label(metadata !8723), !dbg !8938
  call void @default_rtl_profile() #6, !dbg !8939
  call void @commit_edge_insertions() #6, !dbg !8940
  %120 = bitcast %struct.edge_iterator* %tmp220 to i8*, !dbg !8943
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #8, !dbg !8943
  %121 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8943
  %cfg221 = getelementptr inbounds %struct.function, %struct.function* %121, i64 0, i32 1, !dbg !8943
  %122 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg221, align 8, !dbg !8943
  %x_exit_block_ptr222 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %122, i64 0, i32 1, !dbg !8943
  %123 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr222, align 8, !dbg !8943
  %preds223 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %123, i64 0, i32 0, !dbg !8943
  %call224 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds223) #7, !dbg !8943
  %124 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp220, i64 0, i32 0, !dbg !8943
  %125 = extractvalue { i32, %struct.VEC_edge_gc** } %call224, 0, !dbg !8943
  store i32 %125, i32* %124, align 8, !dbg !8943
  %126 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp220, i64 0, i32 1, !dbg !8943
  %127 = extractvalue { i32, %struct.VEC_edge_gc** } %call224, 1, !dbg !8943
  store %struct.VEC_edge_gc** %127, %struct.VEC_edge_gc*** %126, align 8, !dbg !8943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %120, i64 16, i1 false), !dbg !8943
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #8, !dbg !8943
  br label %for.cond225, !dbg !8943

for.cond225:                                      ; preds = %for.inc244, %epilogue_done
  %128 = load i32, i32* %24, align 8, !dbg !8945
  %129 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8945
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8692, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %call226 = call fastcc zeroext i8 @ei_cond(i32 %128, %struct.VEC_edge_gc** %129, %struct.edge_def** nonnull %e) #7, !dbg !8945
  %tobool227 = icmp eq i8 %call226, 0, !dbg !8943
  br i1 %tobool227, label %if.end246.loopexit, label %for.body228, !dbg !8943

for.body228:                                      ; preds = %for.cond225
  %130 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8947
  call void @llvm.dbg.value(metadata %struct.edge_def* %130, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags229 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %130, i64 0, i32 7, !dbg !8950
  %131 = load i32, i32* %flags229, align 8, !dbg !8950
  %and230 = and i32 %131, 1, !dbg !8951
  %cmp231 = icmp eq i32 %and230, 0, !dbg !8952
  br i1 %cmp231, label %for.inc244, label %land.lhs.true233, !dbg !8953

land.lhs.true233:                                 ; preds = %for.body228
  call void @llvm.dbg.value(metadata %struct.edge_def* %130, metadata !8692, metadata !DIExpression()), !dbg !8724
  %src234 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %130, i64 0, i32 0, !dbg !8954
  %132 = load %struct.basic_block_def*, %struct.basic_block_def** %src234, align 8, !dbg !8954
  %il235 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %132, i64 0, i32 7, !dbg !8954
  %rtl236 = bitcast %union.basic_block_il_dependent* %il235 to %struct.rtl_bb_info**, !dbg !8954
  %133 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl236, align 8, !dbg !8954
  %end_237 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %133, i64 0, i32 1, !dbg !8954
  %134 = load %struct.rtx_def*, %struct.rtx_def** %end_237, align 8, !dbg !8954
  %call238 = call i32 @returnjump_p(%struct.rtx_def* %134) #6, !dbg !8955
  %tobool239 = icmp eq i32 %call238, 0, !dbg !8955
  br i1 %tobool239, label %for.inc244, label %if.then240, !dbg !8956

if.then240:                                       ; preds = %land.lhs.true233
  %135 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8957
  call void @llvm.dbg.value(metadata %struct.edge_def* %135, metadata !8692, metadata !DIExpression()), !dbg !8724
  %flags241 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %135, i64 0, i32 7, !dbg !8958
  %136 = load i32, i32* %flags241, align 8, !dbg !8959
  %and242 = and i32 %136, -2, !dbg !8959
  store i32 %and242, i32* %flags241, align 8, !dbg !8959
  br label %for.inc244, !dbg !8957

for.inc244:                                       ; preds = %land.lhs.true233, %for.body228, %if.then240
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8945
  br label %for.cond225, !dbg !8945, !llvm.loop !8960

if.end246.loopexit:                               ; preds = %for.cond225
  %137 = bitcast %struct.edge_iterator* %tmp247 to i8*, !dbg !8962
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #8, !dbg !8962
  %138 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8962
  %cfg248 = getelementptr inbounds %struct.function, %struct.function* %138, i64 0, i32 1, !dbg !8962
  %139 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg248, align 8, !dbg !8962
  %x_exit_block_ptr249 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %139, i64 0, i32 1, !dbg !8962
  %140 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr249, align 8, !dbg !8962
  %preds250 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %140, i64 0, i32 0, !dbg !8962
  %call251 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds250) #7, !dbg !8962
  %141 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp247, i64 0, i32 0, !dbg !8962
  %142 = extractvalue { i32, %struct.VEC_edge_gc** } %call251, 0, !dbg !8962
  store i32 %142, i32* %141, align 8, !dbg !8962
  %143 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp247, i64 0, i32 1, !dbg !8962
  %144 = extractvalue { i32, %struct.VEC_edge_gc** } %call251, 1, !dbg !8962
  store %struct.VEC_edge_gc** %144, %struct.VEC_edge_gc*** %143, align 8, !dbg !8962
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %137, i64 16, i1 false), !dbg !8962
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #8, !dbg !8962
  br label %for.cond252, !dbg !8963

for.cond252:                                      ; preds = %cleanup276, %if.end246.loopexit
  %145 = load i32, i32* %24, align 8, !dbg !8964
  %146 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !8964
  %call253 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %145, %struct.VEC_edge_gc** %146) #7, !dbg !8964
  call void @llvm.dbg.value(metadata %struct.edge_def* %call253, metadata !8692, metadata !DIExpression()), !dbg !8724
  store %struct.edge_def* %call253, %struct.edge_def** %e, align 8, !dbg !8965
  %tobool254 = icmp eq %struct.edge_def* %call253, null, !dbg !8966
  br i1 %tobool254, label %for.end280, label %for.body255, !dbg !8966

for.body255:                                      ; preds = %for.cond252
  call void @llvm.dbg.value(metadata %struct.edge_def* %call253, metadata !8692, metadata !DIExpression()), !dbg !8724
  %src257 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call253, i64 0, i32 0, !dbg !8967
  %147 = load %struct.basic_block_def*, %struct.basic_block_def** %src257, align 8, !dbg !8967
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %147, metadata !8714, metadata !DIExpression()), !dbg !8968
  %il258 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %147, i64 0, i32 7, !dbg !8969
  %rtl259 = bitcast %union.basic_block_il_dependent* %il258 to %struct.rtl_bb_info**, !dbg !8969
  %148 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl259, align 8, !dbg !8969
  %end_260 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %148, i64 0, i32 1, !dbg !8969
  %149 = load %struct.rtx_def*, %struct.rtx_def** %end_260, align 8, !dbg !8969
  call void @llvm.dbg.value(metadata %struct.rtx_def* %149, metadata !8718, metadata !DIExpression()), !dbg !8968
  %150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i64 0, i32 0, !dbg !8970
  %bf.load261 = load i32, i32* %150, align 8, !dbg !8970
  %bf.clear262 = and i32 %bf.load261, 65535, !dbg !8970
  %cmp263 = icmp eq i32 %bf.clear262, 10, !dbg !8970
  br i1 %cmp263, label %lor.lhs.false265, label %if.then269, !dbg !8972

lor.lhs.false265:                                 ; preds = %for.body255
  %bf.clear267 = and i32 %bf.load261, 16777216, !dbg !8973
  %tobool268 = icmp eq i32 %bf.clear267, 0, !dbg !8973
  br i1 %tobool268, label %if.then269, label %if.end270, !dbg !8974

if.then269:                                       ; preds = %lor.lhs.false265, %for.body255
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8975
  br label %cleanup276, !dbg !8977, !llvm.loop !8978

if.end270:                                        ; preds = %lor.lhs.false265
  call void @start_sequence() #6, !dbg !8980
  %call271 = call %struct.rtx_def* @emit_note(i32 6) #6, !dbg !8981
  %call272 = call %struct.rtx_def* @gen_sibcall_epilogue() #6, !dbg !8982
  %call273 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call272) #6, !dbg !8983
  %call274 = call %struct.rtx_def* @get_insns() #6, !dbg !8984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !8693, metadata !DIExpression()), !dbg !8724
  call void @end_sequence() #6, !dbg !8985
  call fastcc void @record_insns(%struct.rtx_def* %call274, %struct.rtx_def* null, %struct.htab** nonnull @epilogue_insn_hash) #7, !dbg !8986
  %151 = load i32, i32* @epilogue_locator, align 4, !dbg !8987
  call fastcc void @set_insn_locators(%struct.rtx_def* %call274, i32 %151) #7, !dbg !8988
  %call275 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call274, %struct.rtx_def* %149) #6, !dbg !8989
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8695, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8990
  br label %cleanup276, !dbg !8991

cleanup276:                                       ; preds = %if.end270, %if.then269
  br label %for.cond252

for.end280:                                       ; preds = %for.cond252
  %tobool281 = icmp eq %struct.rtx_def* %epilogue_end.2, null, !dbg !8992
  br i1 %tobool281, label %if.end309, label %for.cond284.preheader, !dbg !8993

for.cond284.preheader:                            ; preds = %for.end280
  %152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %epilogue_end.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8994
  %rt_rtx305 = bitcast %union.rtunion_def* %152 to %struct.rtx_def**, !dbg !8994
  br label %for.cond284, !dbg !8999

for.cond284:                                      ; preds = %for.cond284.preheader, %for.inc307
  %insn283.0 = phi %struct.rtx_def* [ %154, %for.inc307 ], [ %epilogue_end.2, %for.cond284.preheader ], !dbg !9000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn283.0, metadata !8719, metadata !DIExpression()), !dbg !9001
  %tobool285 = icmp eq %struct.rtx_def* %insn283.0, null, !dbg !8999
  br i1 %tobool285, label %if.end309.loopexit, label %for.body286, !dbg !8999

for.body286:                                      ; preds = %for.cond284
  %153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn283.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9002
  %rt_rtx290 = bitcast %union.rtunion_def* %153 to %struct.rtx_def**, !dbg !9002
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx290, align 8, !dbg !9002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %154, metadata !8722, metadata !DIExpression()), !dbg !9001
  %155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn283.0, i64 0, i32 0, !dbg !9003
  %bf.load291 = load i32, i32* %155, align 8, !dbg !9003
  %bf.clear292 = and i32 %bf.load291, 65535, !dbg !9003
  %cmp293 = icmp eq i32 %bf.clear292, 13, !dbg !9003
  br i1 %cmp293, label %land.lhs.true295, label %for.inc307, !dbg !9004

land.lhs.true295:                                 ; preds = %for.body286
  %u296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn283.0, i64 0, i32 1, !dbg !9005
  %156 = getelementptr inbounds %union.u, %union.u* %u296, i64 1, i32 0, i32 0, i64 0, !dbg !9005
  %rt_int = bitcast %union.rtunion_def* %156 to i32*, !dbg !9005
  %157 = load i32, i32* %rt_int, align 8, !dbg !9005
  %cmp299 = icmp eq i32 %157, 4, !dbg !9006
  br i1 %cmp299, label %if.then301, label %for.inc307, !dbg !9007

if.then301:                                       ; preds = %land.lhs.true295
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx305, align 8, !dbg !9008
  call void @reorder_insns(%struct.rtx_def* nonnull %insn283.0, %struct.rtx_def* nonnull %insn283.0, %struct.rtx_def* %158) #6, !dbg !9009
  br label %for.inc307, !dbg !9009

for.inc307:                                       ; preds = %for.body286, %land.lhs.true295, %if.then301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %154, metadata !8719, metadata !DIExpression()), !dbg !9001
  br label %for.cond284, !dbg !9010, !llvm.loop !9011

if.end309.loopexit:                               ; preds = %for.cond284
  br label %if.end309, !dbg !9013

if.end309:                                        ; preds = %if.end309.loopexit, %for.end280
  store i32 1, i32* @epilogue_completed, align 4, !dbg !9013
  call void @df_update_entry_exit_and_calls() #6, !dbg !9014
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9015
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9015
  ret void, !dbg !9015
}

declare dso_local void @rtl_profile_for_bb(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_prologue() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @record_insns(%struct.rtx_def* %insns, %struct.rtx_def* %end, %struct.htab** %hashp) unnamed_addr #4 !dbg !9016 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !9021, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !9022, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata %struct.htab** %hashp, metadata !9023, metadata !DIExpression()), !dbg !9030
  %0 = load %struct.htab*, %struct.htab** %hashp, align 8, !dbg !9031
  call void @llvm.dbg.value(metadata %struct.htab* %0, metadata !9025, metadata !DIExpression()), !dbg !9030
  %cmp = icmp eq %struct.htab* %0, null, !dbg !9032
  br i1 %cmp, label %if.then, label %if.end, !dbg !9034

if.then:                                          ; preds = %entry
  %1 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !9035
  %2 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** @htab_eq_pointer, align 8, !dbg !9035
  %call = tail call %struct.htab* @htab_create_alloc(i64 17, i32 (i8*)* %1, i32 (i8*, i8*)* %2, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !9035
  call void @llvm.dbg.value(metadata %struct.htab* %call, metadata !9025, metadata !DIExpression()), !dbg !9030
  store %struct.htab* %call, %struct.htab** %hashp, align 8, !dbg !9036
  br label %if.end, !dbg !9037

if.end:                                           ; preds = %if.then, %entry
  %hash.0 = phi %struct.htab* [ %call, %if.then ], [ %0, %entry ], !dbg !9030
  call void @llvm.dbg.value(metadata %struct.htab* %hash.0, metadata !9025, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !9024, metadata !DIExpression()), !dbg !9030
  br label %for.cond, !dbg !9038

for.cond:                                         ; preds = %cond.end, %if.end
  %tmp.0 = phi %struct.rtx_def* [ %insns, %if.end ], [ %7, %cond.end ], !dbg !9039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !9024, metadata !DIExpression()), !dbg !9030
  %cmp1 = icmp eq %struct.rtx_def* %tmp.0, %end, !dbg !9040
  br i1 %cmp1, label %for.end, label %for.body, !dbg !9041

for.body:                                         ; preds = %for.cond
  %3 = bitcast %struct.rtx_def* %tmp.0 to i8*, !dbg !9042
  %call2 = tail call i8** @htab_find_slot(%struct.htab* %hash.0, i8* %3, i32 1) #6, !dbg !9043
  call void @llvm.dbg.value(metadata i8** %call2, metadata !9026, metadata !DIExpression()), !dbg !9044
  %4 = load i8*, i8** %call2, align 8, !dbg !9045
  %cmp3 = icmp eq i8* %4, null, !dbg !9045
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !9045

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9045
  br label %cond.end, !dbg !9045

cond.end:                                         ; preds = %for.body, %cond.true
  %5 = bitcast i8** %call2 to %struct.rtx_def**, !dbg !9046
  store %struct.rtx_def* %tmp.0, %struct.rtx_def** %5, align 8, !dbg !9046
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9047
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !9047
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !9024, metadata !DIExpression()), !dbg !9030
  br label %for.cond, !dbg !9048, !llvm.loop !9049

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9051
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_insn_locators(%struct.rtx_def* %insn, i32 %loc) unnamed_addr #4 !dbg !9052 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9057, metadata !DIExpression()), !dbg !9058
  br label %while.cond, !dbg !9059

while.cond:                                       ; preds = %if.end, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %2, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !9056, metadata !DIExpression()), !dbg !9058
  %cmp = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !9060
  br i1 %cmp, label %while.end, label %while.body, !dbg !9059

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 0, !dbg !9061
  %bf.load = load i32, i32* %0, align 8, !dbg !9061
  %bf.clear = and i32 %bf.load, 65535, !dbg !9061
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !9061
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !9061

lor.lhs.false:                                    ; preds = %while.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !9061
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !9061

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !9061
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !9061

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !9061
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9064

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %while.body
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !9065
  %rt_int = bitcast i64* %arrayidx to i32*, !dbg !9065
  store i32 %loc, i32* %rt_int, align 8, !dbg !9066
  br label %if.end, !dbg !9065

if.end:                                           ; preds = %if.then, %lor.lhs.false9
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9067
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !9067
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !9056, metadata !DIExpression()), !dbg !9058
  br label %while.cond, !dbg !9059, !llvm.loop !9068

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9071 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9078, metadata !DIExpression()), !dbg !9079
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !9080
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9080
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !9080
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9080

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !9080
  br label %cond.end, !dbg !9080

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9080
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9080
  %cmp = icmp eq i32 %call, 1, !dbg !9081
  %conv2 = zext i1 %cmp to i8, !dbg !9080
  ret i8 %conv2, !dbg !9082
}

declare dso_local void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9083 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9087, metadata !DIExpression()), !dbg !9088
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !9089
  %tobool = icmp eq i8 %call, 0, !dbg !9089
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9089

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9089
  br label %cond.end, !dbg !9089

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !9090
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9090
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !9090
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !9090

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !9090
  br label %cond.end5, !dbg !9090

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !9090
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !9090
  ret %struct.edge_def* %call7, !dbg !9091
}

declare dso_local i32 @ix86_can_use_return_insn_p() local_unnamed_addr #1

declare dso_local i32 @active_insn_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !9092 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9095
  %tobool = icmp eq i8 %call, 0, !dbg !9095
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9096

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9097
  br label %cond.end, !dbg !9096

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !9096
  ret %struct.edge_def* %cond, !dbg !9098
}

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_return_into_block(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !9099 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9103, metadata !DIExpression()), !dbg !9104
  %call = tail call %struct.rtx_def* @gen_return() #6, !dbg !9105
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !9106
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !9106
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !9106
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !9106
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !9106
  %call1 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call, %struct.rtx_def* %1) #6, !dbg !9107
  ret void, !dbg !9108
}

declare dso_local i32 @condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @redirect_jump(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @eh_returnjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @try_split(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_epilogue() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @commit_edge_insertions() local_unnamed_addr #1

declare dso_local i32 @returnjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_sibcall_epilogue() local_unnamed_addr #1

declare dso_local void @df_update_entry_exit_and_calls() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_return() local_unnamed_addr #1

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @match_asm_constraints_1(%struct.rtx_def* %insn, %struct.rtx_def** %p_sets, i32 %noutputs) unnamed_addr #4 !dbg !9109 {
entry:
  %end = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9113, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p_sets, metadata !9114, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %noutputs, metadata !9115, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8 0, metadata !9117, metadata !DIExpression()), !dbg !9132
  %0 = load %struct.rtx_def*, %struct.rtx_def** %p_sets, align 8, !dbg !9133
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9133
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !9133
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !9118, metadata !DIExpression()), !dbg !9132
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 1, !dbg !9134
  %rt_rtvec = bitcast %struct.object_block** %arrayidx4 to %struct.rtvec_def**, !dbg !9134
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9134
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !9134
  %4 = load i32, i32* %num_elem, align 8, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %4, metadata !9119, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %3, metadata !9120, metadata !DIExpression()), !dbg !9132
  %conv = sext i32 %noutputs to i64, !dbg !9135
  %5 = alloca i8, i64 %conv, align 16, !dbg !9135
  call void @llvm.dbg.value(metadata i8* %5, metadata !9121, metadata !DIExpression()), !dbg !9132
  %call = call i8* @memset(i8* nonnull %5, i32 0, i64 %conv) #6, !dbg !9136
  call void @llvm.dbg.value(metadata i32 0, metadata !9116, metadata !DIExpression()), !dbg !9132
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 2, !dbg !9137
  %rt_rtvec15 = bitcast i64* %arrayidx14 to %struct.rtvec_def**, !dbg !9137
  %6 = bitcast i8** %end to i8*, !dbg !9137
  %7 = sext i32 %4 to i64, !dbg !9138
  %8 = sext i32 %noutputs to i64, !dbg !9138
  %9 = sext i32 %noutputs to i64, !dbg !9138
  %10 = sext i32 %4 to i64, !dbg !9138
  %11 = sext i32 %4 to i64, !dbg !9138
  br label %for.cond, !dbg !9138

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %cleanup ], [ 0, %entry ], !dbg !9139
  %changed.0 = phi i8 [ %changed.1, %cleanup ], [ 0, %entry ], !dbg !9139
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !9116, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !9117, metadata !DIExpression()), !dbg !9132
  %cmp = icmp slt i64 %indvars.iv9, %11, !dbg !9140
  br i1 %cmp, label %for.body, label %for.end176, !dbg !9141

for.body:                                         ; preds = %for.cond
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec15, align 8, !dbg !9142
  %arrayidx16 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i64 0, i32 1, i64 %indvars.iv9, !dbg !9142
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx16, align 8, !dbg !9142
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !9142
  %14 = load i8*, i8** %rt_str, align 8, !dbg !9142
  call void @llvm.dbg.value(metadata i8* %14, metadata !9128, metadata !DIExpression()), !dbg !9137
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9143
  %15 = load i8, i8* %14, align 1, !dbg !9144
  %cmp21 = icmp eq i8 %15, 37, !dbg !9146
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i64 1, !dbg !9147
  %spec.select = select i1 %cmp21, i8* %incdec.ptr, i8* %14, !dbg !9148
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !9128, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i8** %end, metadata !9129, metadata !DIExpression(DW_OP_deref)), !dbg !9137
  %call23 = call i64 @strtoul(i8* %spec.select, i8** nonnull %end, i32 10) #6, !dbg !9149
  call void @llvm.dbg.value(metadata i32 undef, metadata !9130, metadata !DIExpression()), !dbg !9137
  %16 = load i8*, i8** %end, align 8, !dbg !9150
  call void @llvm.dbg.value(metadata i8* %16, metadata !9129, metadata !DIExpression()), !dbg !9137
  %cmp25 = icmp eq i8* %16, %spec.select, !dbg !9152
  br i1 %cmp25, label %cleanup, label %if.end28, !dbg !9153

if.end28:                                         ; preds = %for.body
  %conv24 = trunc i64 %call23 to i32, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %conv24, metadata !9130, metadata !DIExpression()), !dbg !9137
  %cmp29 = icmp slt i32 %conv24, %noutputs, !dbg !9154
  br i1 %cmp29, label %cond.end, label %cond.true, !dbg !9154

cond.true:                                        ; preds = %if.end28
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5680, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9154
  br label %cond.end, !dbg !9154

cond.end:                                         ; preds = %if.end28, %cond.true
  %sext = shl i64 %call23, 32, !dbg !9155
  %idxprom31 = ashr exact i64 %sext, 32, !dbg !9155
  %arrayidx32 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %p_sets, i64 %idxprom31, !dbg !9155
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !9155
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9155
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !9155
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !9155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !9126, metadata !DIExpression()), !dbg !9137
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv9, !dbg !9156
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !9122, metadata !DIExpression()), !dbg !9137
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !9157
  %bf.load = load i32, i32* %20, align 8, !dbg !9157
  %bf.clear = and i32 %bf.load, 65535, !dbg !9157
  %cmp40 = icmp eq i32 %bf.clear, 37, !dbg !9157
  br i1 %cmp40, label %lor.lhs.false, label %cleanup, !dbg !9159

lor.lhs.false:                                    ; preds = %cond.end
  %call42 = call i32 @rtx_equal_p(%struct.rtx_def* %18, %struct.rtx_def* %19) #6, !dbg !9160
  %tobool = icmp eq i32 %call42, 0, !dbg !9160
  br i1 %tobool, label %lor.lhs.false43, label %cleanup, !dbg !9161

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !9162
  %bf.load44 = load i32, i32* %21, align 8, !dbg !9162
  %bf.clear45 = and i32 %bf.load44, 16711680, !dbg !9162
  %cmp46 = icmp eq i32 %bf.clear45, 0, !dbg !9163
  br i1 %cmp46, label %if.end57, label %land.lhs.true, !dbg !9164

land.lhs.true:                                    ; preds = %lor.lhs.false43
  %bf.load51 = load i32, i32* %20, align 8, !dbg !9165
  %bf.lshr492 = xor i32 %bf.load44, %bf.load51, !dbg !9166
  %22 = and i32 %bf.lshr492, 16711680, !dbg !9166
  %cmp54 = icmp eq i32 %22, 0, !dbg !9166
  br i1 %cmp54, label %if.end57, label %cleanup, !dbg !9167

if.end57:                                         ; preds = %land.lhs.true, %lor.lhs.false43
  call void @llvm.dbg.value(metadata i32 0, metadata !9131, metadata !DIExpression()), !dbg !9137
  br label %for.cond58, !dbg !9168

for.cond58:                                       ; preds = %for.inc, %if.end57
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end57 ], !dbg !9170
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp59 = icmp slt i64 %indvars.iv, %7, !dbg !9171
  %23 = trunc i64 %indvars.iv to i32, !dbg !9173
  br i1 %cmp59, label %for.body61, label %for.end, !dbg !9173

for.body61:                                       ; preds = %for.cond58
  %arrayidx64 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv, !dbg !9174
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx64, align 8, !dbg !9174
  %call65 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %18, %struct.rtx_def* %24) #6, !dbg !9176
  %tobool66 = icmp eq i32 %call65, 0, !dbg !9176
  br i1 %tobool66, label %for.inc, label %for.end, !dbg !9177

for.inc:                                          ; preds = %for.body61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9178
  call void @llvm.dbg.value(metadata i32 undef, metadata !9131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9137
  br label %for.cond58, !dbg !9179, !llvm.loop !9180

for.end:                                          ; preds = %for.body61, %for.cond58
  %.lcssa = phi i32 [ %23, %for.body61 ], [ %23, %for.cond58 ], !dbg !9173
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp69 = icmp eq i32 %4, %.lcssa, !dbg !9182
  br i1 %cmp69, label %if.end72, label %cleanup, !dbg !9184

if.end72:                                         ; preds = %for.end
  %cmp73 = icmp eq i64 %indvars.iv9, 0, !dbg !9185
  br i1 %cmp73, label %if.end102, label %for.cond76.preheader, !dbg !9187

for.cond76.preheader:                             ; preds = %if.end72
  br label %for.cond76, !dbg !9188

for.cond76:                                       ; preds = %for.cond76.preheader, %for.inc95
  %indvars.iv3 = phi i64 [ 0, %for.cond76.preheader ], [ %indvars.iv.next4, %for.inc95 ], !dbg !9191
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp77 = icmp slt i64 %indvars.iv3, %8, !dbg !9192
  %25 = trunc i64 %indvars.iv3 to i32, !dbg !9188
  br i1 %cmp77, label %for.body79, label %for.end97, !dbg !9188

for.body79:                                       ; preds = %for.cond76
  %arrayidx81 = getelementptr inbounds i8, i8* %5, i64 %indvars.iv3, !dbg !9194
  %26 = load i8, i8* %arrayidx81, align 1, !dbg !9194
  %tobool83 = icmp eq i8 %26, 0, !dbg !9194
  br i1 %tobool83, label %for.inc95, label %land.lhs.true84, !dbg !9196

land.lhs.true84:                                  ; preds = %for.body79
  %arrayidx86 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %p_sets, i64 %indvars.iv3, !dbg !9197
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx86, align 8, !dbg !9197
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9197
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !9197
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !9197
  %cmp91 = icmp eq %struct.rtx_def* %19, %28, !dbg !9198
  br i1 %cmp91, label %for.end97, label %for.inc95, !dbg !9199

for.inc95:                                        ; preds = %for.body79, %land.lhs.true84
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !9200
  call void @llvm.dbg.value(metadata i32 undef, metadata !9131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9137
  br label %for.cond76, !dbg !9201, !llvm.loop !9202

for.end97:                                        ; preds = %land.lhs.true84, %for.cond76
  %.lcssa11 = phi i32 [ %25, %land.lhs.true84 ], [ %25, %for.cond76 ], !dbg !9188
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp98 = icmp eq i32 %.lcssa11, %noutputs, !dbg !9204
  br i1 %cmp98, label %if.end102, label %cleanup, !dbg !9206

if.end102:                                        ; preds = %for.end97, %if.end72
  %arrayidx104 = getelementptr inbounds i8, i8* %5, i64 %idxprom31, !dbg !9207
  store i8 1, i8* %arrayidx104, align 1, !dbg !9208
  call void @start_sequence() #6, !dbg !9209
  %call105 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %18, %struct.rtx_def* %19) #6, !dbg !9210
  %call106 = call %struct.rtx_def* @get_insns() #6, !dbg !9211
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call106, metadata !9127, metadata !DIExpression()), !dbg !9137
  call void @end_sequence() #6, !dbg !9212
  %call107 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call106, %struct.rtx_def* %insn) #6, !dbg !9213
  call void @llvm.dbg.value(metadata i32 0, metadata !9131, metadata !DIExpression()), !dbg !9137
  br label %for.cond108, !dbg !9214

for.cond108:                                      ; preds = %for.inc144, %if.end102
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc144 ], [ 0, %if.end102 ], !dbg !9216
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp109 = icmp slt i64 %indvars.iv5, %9, !dbg !9217
  br i1 %cmp109, label %for.body111, label %for.cond147.preheader, !dbg !9219

for.cond147.preheader:                            ; preds = %for.cond108
  br label %for.cond147, !dbg !9220

for.body111:                                      ; preds = %for.cond108
  %arrayidx113 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %p_sets, i64 %indvars.iv5, !dbg !9222
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113, align 8, !dbg !9222
  %arrayidx116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9222
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !9222
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !9222
  %call118 = call i32 @rtx_equal_p(%struct.rtx_def* %30, %struct.rtx_def* %19) #6, !dbg !9224
  %tobool119 = icmp eq i32 %call118, 0, !dbg !9224
  br i1 %tobool119, label %land.lhs.true120, label %for.inc144, !dbg !9225

land.lhs.true120:                                 ; preds = %for.body111
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113, align 8, !dbg !9226
  %arrayidx125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9226
  %rt_rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**, !dbg !9226
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx126, align 8, !dbg !9226
  %call127 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %19, %struct.rtx_def* %32) #6, !dbg !9227
  %tobool128 = icmp eq i32 %call127, 0, !dbg !9227
  br i1 %tobool128, label %for.inc144, label %if.then129, !dbg !9228

if.then129:                                       ; preds = %land.lhs.true120
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113, align 8, !dbg !9229
  %arrayidx134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9229
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !9229
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !9229
  %call136 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %34, %struct.rtx_def* %19, %struct.rtx_def* %18) #6, !dbg !9230
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113, align 8, !dbg !9231
  %arrayidx141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9231
  %rt_rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**, !dbg !9231
  store %struct.rtx_def* %call136, %struct.rtx_def** %rt_rtx142, align 8, !dbg !9232
  br label %for.inc144, !dbg !9231

for.inc144:                                       ; preds = %land.lhs.true120, %for.body111, %if.then129
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !9233
  call void @llvm.dbg.value(metadata i32 undef, metadata !9131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9137
  br label %for.cond108, !dbg !9234, !llvm.loop !9235

for.cond147:                                      ; preds = %for.cond147.preheader, %for.inc165
  %indvars.iv7 = phi i64 [ 0, %for.cond147.preheader ], [ %indvars.iv.next8, %for.inc165 ], !dbg !9237
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !9131, metadata !DIExpression()), !dbg !9137
  %cmp148 = icmp slt i64 %indvars.iv7, %10, !dbg !9238
  br i1 %cmp148, label %for.body150, label %cleanup.loopexit, !dbg !9220

for.body150:                                      ; preds = %for.cond147
  %arrayidx153 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv7, !dbg !9240
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx153, align 8, !dbg !9240
  %call154 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %19, %struct.rtx_def* %36) #6, !dbg !9242
  %tobool155 = icmp eq i32 %call154, 0, !dbg !9242
  br i1 %tobool155, label %for.inc165, label %if.then156, !dbg !9243

if.then156:                                       ; preds = %for.body150
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx153, align 8, !dbg !9244
  %call160 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %37, %struct.rtx_def* %19, %struct.rtx_def* %18) #6, !dbg !9245
  store %struct.rtx_def* %call160, %struct.rtx_def** %arrayidx153, align 8, !dbg !9246
  br label %for.inc165, !dbg !9247

for.inc165:                                       ; preds = %for.body150, %if.then156
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !9248
  call void @llvm.dbg.value(metadata i32 undef, metadata !9131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9137
  br label %for.cond147, !dbg !9249, !llvm.loop !9250

cleanup.loopexit:                                 ; preds = %for.cond147
  br label %cleanup, !dbg !9252

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %for.end97, %for.end, %lor.lhs.false, %cond.end, %for.body
  %changed.1 = phi i8 [ %changed.0, %for.body ], [ %changed.0, %land.lhs.true ], [ %changed.0, %lor.lhs.false ], [ %changed.0, %cond.end ], [ %changed.0, %for.end ], [ %changed.0, %for.end97 ], [ 1, %cleanup.loopexit ], !dbg !9132
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !9117, metadata !DIExpression()), !dbg !9132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9252
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !9253
  call void @llvm.dbg.value(metadata i32 undef, metadata !9116, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9132
  br label %for.cond, !dbg !9254, !llvm.loop !9255

for.end176:                                       ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !9139
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !9117, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !9117, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !9117, metadata !DIExpression()), !dbg !9132
  %tobool177 = icmp eq i8 %changed.0.lcssa, 0, !dbg !9257
  br i1 %tobool177, label %if.end180, label %if.then178, !dbg !9259

if.then178:                                       ; preds = %for.end176
  %call179 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %insn) #6, !dbg !9260
  br label %if.end180, !dbg !9260

if.end180:                                        ; preds = %for.end176, %if.then178
  ret void, !dbg !9261
}

declare dso_local i64 @strtoul(i8*, i8**, i32) local_unnamed_addr #1

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2299, !2300, !2301}
!llvm.ident = !{!2302}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "cfun", scope: !2, file: !3, line: 125, type: !1125, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !747, globals: !2182, nameTableKind: None)
!3 = !DIFile(filename: "function.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !141, !336, !354, !361, !368, !374, !379, !384, !527, !534, !710, !716, !738}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !6, line: 30, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !14, line: 7, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!16 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!139 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!140 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !142, line: 39, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!144 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!329 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!330 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!331 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!332 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!333 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!334 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!335 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !142, line: 280, baseType: !7, size: 32, elements: !337)
!337 = !{!338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353}
!338 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !142, line: 1817, baseType: !7, size: 32, elements: !355)
!355 = !{!356, !357, !358, !359, !360}
!356 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !142, line: 1805, baseType: !7, size: 32, elements: !362)
!362 = !{!363, !364, !365, !366, !367}
!363 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !369, line: 363, baseType: !7, size: 32, elements: !370)
!369 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!370 = !{!371, !372, !373}
!371 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !369, line: 355, baseType: !7, size: 32, elements: !375)
!375 = !{!376, !377, !378}
!376 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !380, line: 474, baseType: !7, size: 32, elements: !381)
!380 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!381 = !{!382, !383}
!382 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!383 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !528, line: 104, baseType: !7, size: 32, elements: !529)
!528 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!529 = !{!530, !531, !532, !533}
!530 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!532 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!533 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!534 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !535, line: 74, baseType: !7, size: 32, elements: !536)
!535 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!536 = !{!537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709}
!537 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!709 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!710 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "direction", file: !711, line: 95, baseType: !7, size: 32, elements: !712)
!711 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!712 = !{!713, !714, !715}
!713 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!714 = !DIEnumerator(name: "upward", value: 1, isUnsigned: true)
!715 = !DIEnumerator(name: "downward", value: 2, isUnsigned: true)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !717, line: 36, baseType: !7, size: 32, elements: !718)
!717 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!719 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!720 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!721 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!722 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!723 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!724 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!725 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!726 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!727 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!728 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!729 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!730 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!731 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!732 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!733 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!734 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!735 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!736 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!737 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!738 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !711, line: 52, baseType: !7, size: 32, elements: !739)
!739 = !{!740, !741, !742, !743, !744, !745, !746}
!740 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!741 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!742 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!743 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!744 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!745 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!746 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!747 = !{!748, !749, !750, !751, !754, !755, !757, !758, !7, !13, !759, !141, !880, !384, !1002, !1125, !765, !716, !2135, !2141, !2142, !1212, !1236, !2148, !2161, !2174, !2176, !2181, !1371}
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!750 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!757 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!758 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "temp_slot", file: !3, line: 456, size: 576, elements: !761)
!761 = !{!762, !763, !764, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !760, file: !3, line: 458, baseType: !759, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !760, file: !3, line: 460, baseType: !759, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !760, file: !3, line: 462, baseType: !765, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !766, line: 50, baseType: !767)
!766 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !768, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !768, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !768, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !768, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !768, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !768, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !768, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !768, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !768, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !768, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !768, file: !385, line: 321, baseType: !781, size: 320, offset: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !782)
!782 = !{!783, !2061, !2063, !2124, !2125}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !781, file: !385, line: 316, baseType: !784, size: 64)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 64, elements: !800)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !802, !803, !815, !818, !879, !2039, !2040, !2051, !2058}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !786, file: !385, line: 168, baseType: !750, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !786, file: !385, line: 169, baseType: !7, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !786, file: !385, line: 170, baseType: !755, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !786, file: !385, line: 171, baseType: !765, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !786, file: !385, line: 172, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !766, line: 53, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !796)
!796 = !{!797, !798}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !795, file: !385, line: 360, baseType: !750, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !795, file: !385, line: 361, baseType: !799, size: 64, offset: 64)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 64, elements: !800)
!800 = !{!801}
!801 = !DISubrange(count: 1)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !786, file: !385, line: 173, baseType: !13, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !786, file: !385, line: 174, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !805, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !805, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !805, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !805, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !805, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !805, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !805, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !805, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !786, file: !385, line: 175, baseType: !816, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !786, file: !385, line: 176, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !821, line: 75, size: 256, elements: !822)
!821 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!822 = !{!823, !837, !838, !839}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !820, file: !821, line: 76, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !821, line: 68, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !821, line: 63, size: 320, elements: !827)
!827 = !{!828, !830, !831, !832}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !826, file: !821, line: 64, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !826, file: !821, line: 65, baseType: !829, size: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !826, file: !821, line: 66, baseType: !7, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !826, file: !821, line: 67, baseType: !833, size: 128, offset: 192)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 128, elements: !835)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !821, line: 29, baseType: !757)
!835 = !{!836}
!836 = !DISubrange(count: 2)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !820, file: !821, line: 77, baseType: !824, size: 64, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !820, file: !821, line: 78, baseType: !7, size: 32, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !820, file: !821, line: 79, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !821, line: 49, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !821, line: 45, size: 832, elements: !843)
!843 = !{!844, !845, !846}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !842, file: !821, line: 46, baseType: !829, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !842, file: !821, line: 47, baseType: !819, size: 64, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !842, file: !821, line: 48, baseType: !847, size: 704, offset: 128)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !848, line: 164, size: 704, elements: !849)
!848 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!849 = !{!850, !852, !862, !863, !864, !865, !866, !867, !871, !875, !876, !877, !878}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !847, file: !848, line: 166, baseType: !851, size: 64)
!851 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !847, file: !848, line: 167, baseType: !853, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !848, line: 157, size: 192, elements: !855)
!855 = !{!856, !857, !858}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !854, file: !848, line: 159, baseType: !752, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !854, file: !848, line: 160, baseType: !853, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !854, file: !848, line: 161, baseType: !859, size: 32, offset: 128)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 32, elements: !860)
!860 = !{!861}
!861 = !DISubrange(count: 4)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !847, file: !848, line: 168, baseType: !752, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !847, file: !848, line: 169, baseType: !752, size: 64, offset: 192)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !847, file: !848, line: 170, baseType: !752, size: 64, offset: 256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !847, file: !848, line: 171, baseType: !851, size: 64, offset: 320)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !847, file: !848, line: 172, baseType: !750, size: 32, offset: 384)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !847, file: !848, line: 176, baseType: !868, size: 64, offset: 448)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!853, !754, !851}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !847, file: !848, line: 177, baseType: !872, size: 64, offset: 512)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{null, !754, !853}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !847, file: !848, line: 178, baseType: !754, size: 64, offset: 576)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !847, file: !848, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !847, file: !848, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !847, file: !848, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !786, file: !385, line: 177, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !766, line: 56, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !142, line: 3371, size: 1792, elements: !883)
!883 = !{!884, !917, !923, !934, !953, !964, !969, !976, !982, !995, !1007, !1045, !1050, !1078, !1086, !1087, !1092, !1101, !1107, !1112, !1116, !1120, !1690, !1739, !1745, !1751, !1758, !1769, !1783, !1800, !1812, !1834, !1849, !2021}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !882, file: !142, line: 3372, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !142, line: 360, size: 64, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !885, file: !142, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !885, file: !142, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !885, file: !142, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !885, file: !142, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !885, file: !142, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !885, file: !142, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !885, file: !142, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !885, file: !142, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !885, file: !142, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !885, file: !142, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !885, file: !142, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !885, file: !142, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !885, file: !142, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !885, file: !142, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !885, file: !142, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !885, file: !142, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !885, file: !142, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !885, file: !142, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !885, file: !142, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !885, file: !142, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !885, file: !142, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !885, file: !142, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !885, file: !142, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !885, file: !142, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !885, file: !142, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !885, file: !142, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !885, file: !142, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !885, file: !142, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !885, file: !142, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !885, file: !142, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !882, file: !142, line: 3373, baseType: !918, size: 192)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !142, line: 402, size: 192, elements: !919)
!919 = !{!920, !921, !922}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !918, file: !142, line: 403, baseType: !885, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !918, file: !142, line: 404, baseType: !880, size: 64, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !918, file: !142, line: 405, baseType: !880, size: 64, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !882, file: !142, line: 3374, baseType: !924, size: 320)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !142, line: 1384, size: 320, elements: !925)
!925 = !{!926, !927}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !924, file: !142, line: 1385, baseType: !918, size: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !924, file: !142, line: 1386, baseType: !928, size: 128, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !929, line: 58, baseType: !930)
!929 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !929, line: 54, size: 128, elements: !931)
!931 = !{!932, !933}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !930, file: !929, line: 56, baseType: !757, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !930, file: !929, line: 57, baseType: !851, size: 64, offset: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !882, file: !142, line: 3375, baseType: !935, size: 256)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !142, line: 1397, size: 256, elements: !936)
!936 = !{!937, !938}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !935, file: !142, line: 1398, baseType: !918, size: 192)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !935, file: !142, line: 1399, baseType: !939, size: 64, offset: 192)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !941, line: 52, size: 256, elements: !942)
!941 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!942 = !{!943, !944, !945, !946, !947, !948, !949}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !940, file: !941, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !940, file: !941, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !940, file: !941, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !940, file: !941, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !940, file: !941, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !940, file: !941, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !940, file: !941, line: 62, baseType: !950, size: 192, offset: 64)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 192, elements: !951)
!951 = !{!952}
!952 = !DISubrange(count: 3)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !882, file: !142, line: 3376, baseType: !954, size: 256)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !142, line: 1408, size: 256, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !954, file: !142, line: 1409, baseType: !918, size: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !954, file: !142, line: 1410, baseType: !958, size: 64, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !960, line: 27, size: 192, elements: !961)
!960 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !959, file: !960, line: 29, baseType: !928, size: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !959, file: !960, line: 30, baseType: !13, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !882, file: !142, line: 3377, baseType: !965, size: 256)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !142, line: 1437, size: 256, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !965, file: !142, line: 1438, baseType: !918, size: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !965, file: !142, line: 1439, baseType: !880, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !882, file: !142, line: 3378, baseType: !970, size: 256)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !142, line: 1418, size: 256, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !970, file: !142, line: 1419, baseType: !918, size: 192)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !970, file: !142, line: 1420, baseType: !750, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !970, file: !142, line: 1421, baseType: !975, size: 8, offset: 224)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 8, elements: !800)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !882, file: !142, line: 3379, baseType: !977, size: 320)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !142, line: 1428, size: 320, elements: !978)
!978 = !{!979, !980, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !977, file: !142, line: 1429, baseType: !918, size: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !977, file: !142, line: 1430, baseType: !880, size: 64, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !977, file: !142, line: 1431, baseType: !880, size: 64, offset: 256)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !882, file: !142, line: 3380, baseType: !983, size: 320)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !142, line: 1460, size: 320, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !983, file: !142, line: 1461, baseType: !918, size: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !983, file: !142, line: 1462, baseType: !987, size: 128, offset: 192)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !988, line: 31, size: 128, elements: !989)
!988 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!989 = !{!990, !993, !994}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !987, file: !988, line: 32, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !987, file: !988, line: 33, baseType: !7, size: 32, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !987, file: !988, line: 34, baseType: !7, size: 32, offset: 96)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !882, file: !142, line: 3381, baseType: !996, size: 384)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !142, line: 2507, size: 384, elements: !997)
!997 = !{!998, !999, !1004, !1005, !1006}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !996, file: !142, line: 2508, baseType: !918, size: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !996, file: !142, line: 2509, baseType: !1000, size: 32, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1001, line: 58, baseType: !1002)
!1001 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1003, line: 44, baseType: !7)
!1003 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !996, file: !142, line: 2510, baseType: !7, size: 32, offset: 224)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !996, file: !142, line: 2511, baseType: !880, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !996, file: !142, line: 2512, baseType: !880, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !882, file: !142, line: 3382, baseType: !1008, size: 896)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !142, line: 2652, size: 896, elements: !1009)
!1009 = !{!1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1008, file: !142, line: 2653, baseType: !996, size: 384)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1008, file: !142, line: 2654, baseType: !880, size: 64, offset: 384)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1008, file: !142, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1008, file: !142, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1008, file: !142, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1008, file: !142, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1008, file: !142, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1008, file: !142, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1008, file: !142, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1008, file: !142, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1008, file: !142, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1008, file: !142, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1008, file: !142, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1008, file: !142, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1008, file: !142, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1008, file: !142, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1008, file: !142, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1008, file: !142, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1008, file: !142, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1008, file: !142, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1008, file: !142, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1008, file: !142, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1008, file: !142, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1008, file: !142, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1008, file: !142, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1008, file: !142, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1008, file: !142, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1008, file: !142, line: 2703, baseType: !7, size: 32, offset: 512)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1008, file: !142, line: 2705, baseType: !880, size: 64, offset: 576)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1008, file: !142, line: 2706, baseType: !880, size: 64, offset: 640)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1008, file: !142, line: 2707, baseType: !880, size: 64, offset: 704)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1008, file: !142, line: 2708, baseType: !880, size: 64, offset: 768)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1008, file: !142, line: 2711, baseType: !1043, size: 64, offset: 832)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !142, line: 2711, flags: DIFlagFwdDecl)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !882, file: !142, line: 3383, baseType: !1046, size: 960)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !142, line: 2756, size: 960, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1046, file: !142, line: 2757, baseType: !1008, size: 896)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1046, file: !142, line: 2758, baseType: !765, size: 64, offset: 896)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !882, file: !142, line: 3384, baseType: !1051, size: 1472)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !142, line: 3114, size: 1472, elements: !1052)
!1052 = !{!1053, !1074, !1075, !1076, !1077}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1051, file: !142, line: 3115, baseType: !1054, size: 1216)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !142, line: 2984, size: 1216, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1054, file: !142, line: 2985, baseType: !1046, size: 960)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1054, file: !142, line: 2986, baseType: !880, size: 64, offset: 960)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1054, file: !142, line: 2987, baseType: !880, size: 64, offset: 1024)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1054, file: !142, line: 2988, baseType: !880, size: 64, offset: 1088)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1054, file: !142, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1054, file: !142, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1054, file: !142, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1054, file: !142, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1054, file: !142, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1054, file: !142, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1054, file: !142, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1054, file: !142, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1054, file: !142, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1054, file: !142, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1054, file: !142, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1054, file: !142, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1054, file: !142, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1054, file: !142, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1051, file: !142, line: 3117, baseType: !880, size: 64, offset: 1216)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1051, file: !142, line: 3119, baseType: !880, size: 64, offset: 1280)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1051, file: !142, line: 3121, baseType: !880, size: 64, offset: 1344)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1051, file: !142, line: 3123, baseType: !880, size: 64, offset: 1408)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !882, file: !142, line: 3385, baseType: !1079, size: 1088)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !142, line: 2874, size: 1088, elements: !1080)
!1080 = !{!1081, !1082, !1083}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1079, file: !142, line: 2875, baseType: !1046, size: 960)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1079, file: !142, line: 2876, baseType: !765, size: 64, offset: 960)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1079, file: !142, line: 2877, baseType: !1084, size: 64, offset: 1024)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !142, line: 2856, flags: DIFlagFwdDecl)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !882, file: !142, line: 3386, baseType: !1054, size: 1216)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !882, file: !142, line: 3387, baseType: !1088, size: 1280)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !142, line: 3093, size: 1280, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1088, file: !142, line: 3094, baseType: !1054, size: 1216)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1088, file: !142, line: 3095, baseType: !1084, size: 64, offset: 1216)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !882, file: !142, line: 3388, baseType: !1093, size: 1216)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !142, line: 2824, size: 1216, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1093, file: !142, line: 2825, baseType: !1008, size: 896)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1093, file: !142, line: 2827, baseType: !880, size: 64, offset: 896)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1093, file: !142, line: 2828, baseType: !880, size: 64, offset: 960)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1093, file: !142, line: 2829, baseType: !880, size: 64, offset: 1024)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1093, file: !142, line: 2830, baseType: !880, size: 64, offset: 1088)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1093, file: !142, line: 2831, baseType: !880, size: 64, offset: 1152)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !882, file: !142, line: 3389, baseType: !1102, size: 1024)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !142, line: 2850, size: 1024, elements: !1103)
!1103 = !{!1104, !1105, !1106}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !142, line: 2851, baseType: !1046, size: 960)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1102, file: !142, line: 2852, baseType: !750, size: 32, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1102, file: !142, line: 2853, baseType: !750, size: 32, offset: 992)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !882, file: !142, line: 3390, baseType: !1108, size: 1024)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !142, line: 2857, size: 1024, elements: !1109)
!1109 = !{!1110, !1111}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1108, file: !142, line: 2858, baseType: !1046, size: 960)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1108, file: !142, line: 2859, baseType: !1084, size: 64, offset: 960)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !882, file: !142, line: 3391, baseType: !1113, size: 960)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !142, line: 2862, size: 960, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1113, file: !142, line: 2863, baseType: !1046, size: 960)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !882, file: !142, line: 3392, baseType: !1117, size: 1472)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !142, line: 3304, size: 1472, elements: !1118)
!1118 = !{!1119}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1117, file: !142, line: 3305, baseType: !1051, size: 1472)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !882, file: !142, line: 3393, baseType: !1121, size: 1792)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !142, line: 3248, size: 1792, elements: !1122)
!1122 = !{!1123, !1124, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1121, file: !142, line: 3249, baseType: !1051, size: 1472)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1121, file: !142, line: 3251, baseType: !1125, size: 64, offset: 1472)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1127, line: 463, size: 1152, elements: !1128)
!1127 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1128 = !{!1129, !1293, !1606, !1607, !1610, !1613, !1614, !1615, !1616, !1617, !1618, !1642, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1126, file: !1127, line: 464, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !6, line: 194, size: 384, elements: !1132)
!1132 = !{!1133, !1182, !1195, !1209, !1261, !1274}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1131, file: !6, line: 197, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !6, line: 182, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !6, line: 116, size: 704, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142, !1143, !1170, !1179, !1180, !1181}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1136, file: !6, line: 119, baseType: !1135, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1136, file: !6, line: 122, baseType: !1135, size: 64, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1136, file: !6, line: 123, baseType: !1135, size: 64, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1136, file: !6, line: 126, baseType: !750, size: 32, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1136, file: !6, line: 129, baseType: !5, size: 32, offset: 224)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1136, file: !6, line: 165, baseType: !1144, size: 192, offset: 256)
!1144 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !6, line: 132, size: 192, elements: !1145)
!1145 = !{!1146, !1159, !1165}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1144, file: !6, line: 137, baseType: !1147, size: 128)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !6, line: 133, size: 128, elements: !1148)
!1148 = !{!1149, !1158}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1147, file: !6, line: 135, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !6, line: 93, size: 320, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1151, file: !6, line: 96, baseType: !1150, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1151, file: !6, line: 97, baseType: !1150, size: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1151, file: !6, line: 101, baseType: !880, size: 64, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1151, file: !6, line: 106, baseType: !880, size: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1151, file: !6, line: 111, baseType: !880, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1147, file: !6, line: 136, baseType: !1150, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1144, file: !6, line: 151, baseType: !1160, size: 192)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !6, line: 139, size: 192, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1160, file: !6, line: 141, baseType: !880, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1160, file: !6, line: 145, baseType: !880, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1160, file: !6, line: 150, baseType: !750, size: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1144, file: !6, line: 164, baseType: !1166, size: 128)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !6, line: 153, size: 128, elements: !1167)
!1167 = !{!1168, !1169}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1166, file: !6, line: 161, baseType: !880, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1166, file: !6, line: 163, baseType: !1000, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1136, file: !6, line: 168, baseType: !1171, size: 64, offset: 448)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !6, line: 67, size: 320, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1172, file: !6, line: 70, baseType: !1171, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1172, file: !6, line: 73, baseType: !1135, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1172, file: !6, line: 78, baseType: !880, size: 64, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1172, file: !6, line: 85, baseType: !765, size: 64, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1172, file: !6, line: 88, baseType: !750, size: 32, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1136, file: !6, line: 173, baseType: !765, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1136, file: !6, line: 173, baseType: !765, size: 64, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1136, file: !6, line: 177, baseType: !749, size: 8, offset: 640)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1131, file: !6, line: 200, baseType: !1183, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !6, line: 185, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !6, line: 185, size: 128, elements: !1186)
!1186 = !{!1187}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1185, file: !6, line: 185, baseType: !1188, size: 128)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !6, line: 184, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !6, line: 184, size: 128, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1189, file: !6, line: 184, baseType: !7, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1189, file: !6, line: 184, baseType: !7, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1189, file: !6, line: 184, baseType: !1194, size: 64, offset: 64)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 64, elements: !800)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1131, file: !6, line: 203, baseType: !1196, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, size: 128, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1198, file: !6, line: 189, baseType: !1201, size: 128)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !6, line: 188, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !6, line: 188, size: 128, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1202, file: !6, line: 188, baseType: !7, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1202, file: !6, line: 188, baseType: !7, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1202, file: !6, line: 188, baseType: !1207, size: 64, offset: 64)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 64, elements: !800)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !6, line: 180, baseType: !1171)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1131, file: !6, line: 207, baseType: !1210, size: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1211, line: 144, baseType: !1212)
!1211 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1211, line: 100, size: 896, elements: !1214)
!1214 = !{!1215, !1223, !1228, !1233, !1235, !1238, !1239, !1240, !1241, !1242, !1247, !1249, !1250, !1255, !1260}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1213, file: !1211, line: 102, baseType: !1216, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1211, line: 52, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!1220, !1221}
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1211, line: 47, baseType: !7)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1213, file: !1211, line: 105, baseType: !1224, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1211, line: 59, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!750, !1221, !1221}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1213, file: !1211, line: 108, baseType: !1229, size: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1211, line: 63, baseType: !1230)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !754}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1213, file: !1211, line: 111, baseType: !1234, size: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1213, file: !1211, line: 114, baseType: !1236, size: 64, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1237, line: 46, baseType: !757)
!1237 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1213, file: !1211, line: 117, baseType: !1236, size: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1213, file: !1211, line: 120, baseType: !1236, size: 64, offset: 384)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1213, file: !1211, line: 124, baseType: !7, size: 32, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1213, file: !1211, line: 128, baseType: !7, size: 32, offset: 480)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1213, file: !1211, line: 131, baseType: !1243, size: 64, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1211, line: 75, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!754, !1236, !1236}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1213, file: !1211, line: 132, baseType: !1248, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1211, line: 78, baseType: !1230)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1213, file: !1211, line: 135, baseType: !754, size: 64, offset: 640)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1213, file: !1211, line: 136, baseType: !1251, size: 64, offset: 704)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1211, line: 82, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!754, !754, !1236, !1236}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1213, file: !1211, line: 137, baseType: !1256, size: 64, offset: 768)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1211, line: 83, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !754, !754}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1213, file: !1211, line: 141, baseType: !7, size: 32, offset: 832)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1131, file: !6, line: 211, baseType: !1262, size: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !142, line: 183, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !142, line: 183, size: 128, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1264, file: !142, line: 183, baseType: !1267, size: 128)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !142, line: 182, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !142, line: 182, size: 128, elements: !1269)
!1269 = !{!1270, !1271, !1272}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1268, file: !142, line: 182, baseType: !7, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1268, file: !142, line: 182, baseType: !7, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !142, line: 182, baseType: !1273, size: 64, offset: 64)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 64, elements: !800)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1131, file: !6, line: 220, baseType: !1275, size: 64, offset: 320)
!1275 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !6, line: 217, size: 64, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1275, file: !6, line: 218, baseType: !1262, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1275, file: !6, line: 219, baseType: !1279, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1281, line: 29, baseType: !1282)
!1281 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1281, line: 29, size: 96, elements: !1283)
!1283 = !{!1284}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1282, file: !1281, line: 29, baseType: !1285, size: 96)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1281, line: 27, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1281, line: 27, size: 96, elements: !1287)
!1287 = !{!1288, !1289, !1290}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1286, file: !1281, line: 27, baseType: !7, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1286, file: !1281, line: 27, baseType: !7, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1286, file: !1281, line: 27, baseType: !1291, size: 8, offset: 64)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 8, elements: !800)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1281, line: 26, baseType: !749)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1126, file: !1127, line: 467, baseType: !1294, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !369, line: 374, size: 640, elements: !1296)
!1296 = !{!1297, !1581, !1582, !1595, !1596, !1597, !1598, !1599, !1600, !1602, !1604, !1605}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1295, file: !369, line: 377, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !766, line: 111, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !369, line: 217, size: 832, elements: !1301)
!1301 = !{!1302, !1546, !1547, !1548, !1551, !1555, !1556, !1557, !1575, !1576, !1577, !1578, !1579, !1580}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1300, file: !369, line: 219, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !369, line: 151, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !369, line: 151, size: 128, elements: !1306)
!1306 = !{!1307}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1305, file: !369, line: 151, baseType: !1308, size: 128)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !369, line: 150, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !369, line: 150, size: 128, elements: !1310)
!1310 = !{!1311, !1312, !1313}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1309, file: !369, line: 150, baseType: !7, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1309, file: !369, line: 150, baseType: !7, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1309, file: !369, line: 150, baseType: !1314, size: 64, offset: 64)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 64, elements: !800)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !766, line: 108, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !369, line: 122, size: 512, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1317, file: !369, line: 124, baseType: !1299, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1317, file: !369, line: 125, baseType: !1299, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1317, file: !369, line: 131, baseType: !1322, size: 64, offset: 128)
!1322 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !369, line: 128, size: 64, elements: !1323)
!1323 = !{!1324, !1537}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1322, file: !369, line: 129, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !766, line: 66, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1328, line: 143, size: 192, elements: !1329)
!1328 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1329 = !{!1330, !1535, !1536}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1327, file: !1328, line: 145, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !766, line: 69, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1328, line: 136, size: 192, elements: !1334)
!1334 = !{!1335, !1533, !1534}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1333, file: !1328, line: 137, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !766, line: 58, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1328, line: 737, size: 768, elements: !1339)
!1339 = !{!1340, !1357, !1390, !1396, !1401, !1406, !1413, !1419, !1425, !1430, !1444, !1449, !1455, !1460, !1470, !1475, !1491, !1498, !1505, !1511, !1516, !1522, !1528}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1338, file: !1328, line: 738, baseType: !1341, size: 256)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1328, line: 271, size: 256, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1341, file: !1328, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1341, file: !1328, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1341, file: !1328, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1341, file: !1328, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1341, file: !1328, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1341, file: !1328, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1341, file: !1328, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1341, file: !1328, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1341, file: !1328, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1341, file: !1328, line: 312, baseType: !7, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1341, file: !1328, line: 316, baseType: !1000, size: 32, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1341, file: !1328, line: 319, baseType: !7, size: 32, offset: 96)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1341, file: !1328, line: 323, baseType: !1299, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1341, file: !1328, line: 327, baseType: !880, size: 64, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1338, file: !1328, line: 739, baseType: !1358, size: 448)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1328, line: 350, size: 448, elements: !1359)
!1359 = !{!1360, !1389}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1358, file: !1328, line: 353, baseType: !1361, size: 384)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1328, line: 333, size: 384, elements: !1362)
!1362 = !{!1363, !1364, !1372}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1361, file: !1328, line: 336, baseType: !1341, size: 256)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1361, file: !1328, line: 343, baseType: !1365, size: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1367, line: 37, size: 128, elements: !1368)
!1367 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1366, file: !1367, line: 39, baseType: !1365, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1366, file: !1367, line: 40, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1361, file: !1328, line: 344, baseType: !1373, size: 64, offset: 320)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1367, line: 45, size: 320, elements: !1375)
!1375 = !{!1376, !1377}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1374, file: !1367, line: 47, baseType: !1373, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1374, file: !1367, line: 48, baseType: !1378, size: 256, offset: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !142, line: 1883, size: 256, elements: !1379)
!1379 = !{!1380, !1382, !1383, !1388}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1378, file: !142, line: 1884, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1378, file: !142, line: 1885, baseType: !1381, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1378, file: !142, line: 1891, baseType: !1384, size: 64, offset: 128)
!1384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1378, file: !142, line: 1891, size: 64, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1384, file: !142, line: 1891, baseType: !1336, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1384, file: !142, line: 1891, baseType: !880, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1378, file: !142, line: 1892, baseType: !1371, size: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1358, file: !1328, line: 359, baseType: !1273, size: 64, offset: 384)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1338, file: !1328, line: 740, baseType: !1391, size: 512)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1328, line: 365, size: 512, elements: !1392)
!1392 = !{!1393, !1394, !1395}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1391, file: !1328, line: 368, baseType: !1361, size: 384)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1391, file: !1328, line: 373, baseType: !880, size: 64, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1391, file: !1328, line: 374, baseType: !880, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1338, file: !1328, line: 741, baseType: !1397, size: 576)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1328, line: 380, size: 576, elements: !1398)
!1398 = !{!1399, !1400}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1397, file: !1328, line: 383, baseType: !1391, size: 512)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1397, file: !1328, line: 389, baseType: !1273, size: 64, offset: 512)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1338, file: !1328, line: 742, baseType: !1402, size: 320)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1328, line: 395, size: 320, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1402, file: !1328, line: 397, baseType: !1341, size: 256)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1402, file: !1328, line: 400, baseType: !1325, size: 64, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1338, file: !1328, line: 743, baseType: !1407, size: 448)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1328, line: 406, size: 448, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1407, file: !1328, line: 408, baseType: !1341, size: 256)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1407, file: !1328, line: 412, baseType: !880, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1407, file: !1328, line: 420, baseType: !880, size: 64, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1407, file: !1328, line: 423, baseType: !1325, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1338, file: !1328, line: 744, baseType: !1414, size: 384)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1328, line: 429, size: 384, elements: !1415)
!1415 = !{!1416, !1417, !1418}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1414, file: !1328, line: 431, baseType: !1341, size: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1414, file: !1328, line: 434, baseType: !880, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1414, file: !1328, line: 437, baseType: !1325, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1338, file: !1328, line: 745, baseType: !1420, size: 384)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1328, line: 443, size: 384, elements: !1421)
!1421 = !{!1422, !1423, !1424}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1420, file: !1328, line: 445, baseType: !1341, size: 256)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1420, file: !1328, line: 449, baseType: !880, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1420, file: !1328, line: 453, baseType: !1325, size: 64, offset: 320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1338, file: !1328, line: 746, baseType: !1426, size: 320)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1328, line: 459, size: 320, elements: !1427)
!1427 = !{!1428, !1429}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1426, file: !1328, line: 461, baseType: !1341, size: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1426, file: !1328, line: 464, baseType: !880, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1338, file: !1328, line: 747, baseType: !1431, size: 768)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1328, line: 469, size: 768, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1437}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1431, file: !1328, line: 471, baseType: !1341, size: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1431, file: !1328, line: 474, baseType: !7, size: 32, offset: 256)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1431, file: !1328, line: 475, baseType: !7, size: 32, offset: 288)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1431, file: !1328, line: 478, baseType: !880, size: 64, offset: 320)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1431, file: !1328, line: 481, baseType: !1438, size: 384, offset: 384)
!1438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 384, elements: !800)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !142, line: 1917, size: 384, elements: !1440)
!1440 = !{!1441, !1442, !1443}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1439, file: !142, line: 1920, baseType: !1378, size: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1439, file: !142, line: 1921, baseType: !880, size: 64, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1439, file: !142, line: 1922, baseType: !1000, size: 32, offset: 320)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1338, file: !1328, line: 748, baseType: !1445, size: 320)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1328, line: 487, size: 320, elements: !1446)
!1446 = !{!1447, !1448}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1445, file: !1328, line: 490, baseType: !1341, size: 256)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1445, file: !1328, line: 494, baseType: !750, size: 32, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1338, file: !1328, line: 749, baseType: !1450, size: 384)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1328, line: 500, size: 384, elements: !1451)
!1451 = !{!1452, !1453, !1454}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1450, file: !1328, line: 502, baseType: !1341, size: 256)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1450, file: !1328, line: 506, baseType: !1325, size: 64, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1450, file: !1328, line: 510, baseType: !1325, size: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1338, file: !1328, line: 750, baseType: !1456, size: 320)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1328, line: 529, size: 320, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1456, file: !1328, line: 531, baseType: !1341, size: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1456, file: !1328, line: 540, baseType: !1325, size: 64, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1338, file: !1328, line: 751, baseType: !1461, size: 704)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1328, line: 546, size: 704, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1461, file: !1328, line: 549, baseType: !1391, size: 512)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1461, file: !1328, line: 553, baseType: !755, size: 64, offset: 512)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1461, file: !1328, line: 557, baseType: !749, size: 8, offset: 576)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1461, file: !1328, line: 558, baseType: !749, size: 8, offset: 584)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1461, file: !1328, line: 559, baseType: !749, size: 8, offset: 592)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1461, file: !1328, line: 560, baseType: !749, size: 8, offset: 600)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1461, file: !1328, line: 566, baseType: !1273, size: 64, offset: 640)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1338, file: !1328, line: 752, baseType: !1471, size: 384)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1328, line: 571, size: 384, elements: !1472)
!1472 = !{!1473, !1474}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1471, file: !1328, line: 573, baseType: !1402, size: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1471, file: !1328, line: 577, baseType: !880, size: 64, offset: 320)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1338, file: !1328, line: 753, baseType: !1476, size: 576)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1328, line: 600, size: 576, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1490}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1476, file: !1328, line: 602, baseType: !1402, size: 320)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1476, file: !1328, line: 605, baseType: !880, size: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1476, file: !1328, line: 609, baseType: !1236, size: 64, offset: 384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1476, file: !1328, line: 612, baseType: !1482, size: 64, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1328, line: 581, size: 320, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1483, file: !1328, line: 583, baseType: !141, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1483, file: !1328, line: 586, baseType: !880, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1483, file: !1328, line: 589, baseType: !880, size: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1483, file: !1328, line: 592, baseType: !880, size: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1483, file: !1328, line: 595, baseType: !880, size: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1476, file: !1328, line: 616, baseType: !1325, size: 64, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1338, file: !1328, line: 754, baseType: !1492, size: 512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1328, line: 622, size: 512, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1492, file: !1328, line: 624, baseType: !1402, size: 320)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1492, file: !1328, line: 628, baseType: !880, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1492, file: !1328, line: 632, baseType: !880, size: 64, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1492, file: !1328, line: 636, baseType: !880, size: 64, offset: 448)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1338, file: !1328, line: 755, baseType: !1499, size: 704)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1328, line: 642, size: 704, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1499, file: !1328, line: 644, baseType: !1492, size: 512)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1499, file: !1328, line: 648, baseType: !880, size: 64, offset: 512)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1499, file: !1328, line: 652, baseType: !880, size: 64, offset: 576)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1499, file: !1328, line: 653, baseType: !880, size: 64, offset: 640)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1338, file: !1328, line: 756, baseType: !1506, size: 448)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1328, line: 663, size: 448, elements: !1507)
!1507 = !{!1508, !1509, !1510}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1506, file: !1328, line: 665, baseType: !1402, size: 320)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1506, file: !1328, line: 668, baseType: !880, size: 64, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1506, file: !1328, line: 673, baseType: !880, size: 64, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1338, file: !1328, line: 757, baseType: !1512, size: 384)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1328, line: 694, size: 384, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1512, file: !1328, line: 696, baseType: !1402, size: 320)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1512, file: !1328, line: 699, baseType: !880, size: 64, offset: 320)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1338, file: !1328, line: 758, baseType: !1517, size: 384)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1328, line: 681, size: 384, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1517, file: !1328, line: 683, baseType: !1341, size: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1517, file: !1328, line: 686, baseType: !880, size: 64, offset: 256)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1517, file: !1328, line: 689, baseType: !880, size: 64, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1338, file: !1328, line: 759, baseType: !1523, size: 384)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1328, line: 707, size: 384, elements: !1524)
!1524 = !{!1525, !1526, !1527}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1523, file: !1328, line: 709, baseType: !1341, size: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1523, file: !1328, line: 712, baseType: !880, size: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1523, file: !1328, line: 712, baseType: !880, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1338, file: !1328, line: 760, baseType: !1529, size: 320)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1328, line: 718, size: 320, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1529, file: !1328, line: 720, baseType: !1341, size: 256)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1529, file: !1328, line: 723, baseType: !880, size: 64, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1333, file: !1328, line: 138, baseType: !1332, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1333, file: !1328, line: 139, baseType: !1332, size: 64, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1327, file: !1328, line: 146, baseType: !1331, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1327, file: !1328, line: 152, baseType: !1325, size: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1322, file: !369, line: 130, baseType: !765, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1317, file: !369, line: 134, baseType: !754, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1317, file: !369, line: 137, baseType: !880, size: 64, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1317, file: !369, line: 138, baseType: !1000, size: 32, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1317, file: !369, line: 142, baseType: !7, size: 32, offset: 352)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !369, line: 144, baseType: !750, size: 32, offset: 384)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1317, file: !369, line: 145, baseType: !750, size: 32, offset: 416)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1317, file: !369, line: 146, baseType: !1545, size: 64, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !369, line: 119, baseType: !851)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1300, file: !369, line: 220, baseType: !1303, size: 64, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1300, file: !369, line: 223, baseType: !754, size: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1300, file: !369, line: 226, baseType: !1549, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !369, line: 185, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1300, file: !369, line: 229, baseType: !1552, size: 128, offset: 256)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 128, elements: !835)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !369, line: 229, flags: DIFlagFwdDecl)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1300, file: !369, line: 232, baseType: !1299, size: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1300, file: !369, line: 233, baseType: !1299, size: 64, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1300, file: !369, line: 238, baseType: !1558, size: 64, offset: 512)
!1558 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !369, line: 235, size: 64, elements: !1559)
!1559 = !{!1560, !1566}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1558, file: !369, line: 236, baseType: !1561, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !369, line: 273, size: 128, elements: !1563)
!1563 = !{!1564, !1565}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1562, file: !369, line: 275, baseType: !1325, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1562, file: !369, line: 278, baseType: !1325, size: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1558, file: !369, line: 237, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !369, line: 259, size: 320, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1568, file: !369, line: 261, baseType: !765, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1568, file: !369, line: 262, baseType: !765, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1568, file: !369, line: 266, baseType: !765, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1568, file: !369, line: 267, baseType: !765, size: 64, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1568, file: !369, line: 270, baseType: !750, size: 32, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1300, file: !369, line: 241, baseType: !1545, size: 64, offset: 576)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1300, file: !369, line: 244, baseType: !750, size: 32, offset: 640)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1300, file: !369, line: 247, baseType: !750, size: 32, offset: 672)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1300, file: !369, line: 250, baseType: !750, size: 32, offset: 704)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1300, file: !369, line: 253, baseType: !750, size: 32, offset: 736)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1300, file: !369, line: 256, baseType: !750, size: 32, offset: 768)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1295, file: !369, line: 378, baseType: !1298, size: 64, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1295, file: !369, line: 381, baseType: !1583, size: 64, offset: 128)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !369, line: 282, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !369, line: 282, size: 128, elements: !1586)
!1586 = !{!1587}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1585, file: !369, line: 282, baseType: !1588, size: 128)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !369, line: 281, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !369, line: 281, size: 128, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1589, file: !369, line: 281, baseType: !7, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1589, file: !369, line: 281, baseType: !7, size: 32, offset: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1589, file: !369, line: 281, baseType: !1594, size: 64, offset: 64)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1298, size: 64, elements: !800)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1295, file: !369, line: 384, baseType: !750, size: 32, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1295, file: !369, line: 387, baseType: !750, size: 32, offset: 224)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1295, file: !369, line: 390, baseType: !750, size: 32, offset: 256)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1295, file: !369, line: 394, baseType: !1583, size: 64, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1295, file: !369, line: 396, baseType: !368, size: 32, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1295, file: !369, line: 399, baseType: !1601, size: 64, offset: 416)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 64, elements: !835)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1295, file: !369, line: 402, baseType: !1603, size: 64, offset: 480)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !835)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1295, file: !369, line: 406, baseType: !750, size: 32, offset: 544)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1295, file: !369, line: 409, baseType: !750, size: 32, offset: 576)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1126, file: !1127, line: 470, baseType: !1326, size: 64, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1126, file: !1127, line: 473, baseType: !1608, size: 64, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1127, line: 166, flags: DIFlagFwdDecl)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1126, file: !1127, line: 476, baseType: !1611, size: 64, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1127, line: 476, flags: DIFlagFwdDecl)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1126, file: !1127, line: 479, baseType: !1210, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1126, file: !1127, line: 484, baseType: !880, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1126, file: !1127, line: 488, baseType: !880, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1126, file: !1127, line: 493, baseType: !880, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1126, file: !1127, line: 496, baseType: !880, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1126, file: !1127, line: 501, baseType: !1619, size: 64, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !380, line: 2355, size: 576, elements: !1621)
!1621 = !{!1622, !1625, !1626, !1627, !1628, !1630, !1631, !1636, !1637, !1638, !1639, !1640, !1641}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1620, file: !380, line: 2356, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !380, line: 2356, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1620, file: !380, line: 2357, baseType: !755, size: 64, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1620, file: !380, line: 2358, baseType: !750, size: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1620, file: !380, line: 2359, baseType: !750, size: 32, offset: 160)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1620, file: !380, line: 2360, baseType: !1629, size: 128, offset: 192)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 128, elements: !860)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1620, file: !380, line: 2364, baseType: !750, size: 32, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1620, file: !380, line: 2367, baseType: !1632, size: 128, offset: 384)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !380, line: 2349, size: 128, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1632, file: !380, line: 2351, baseType: !765, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1632, file: !380, line: 2352, baseType: !851, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1620, file: !380, line: 2371, baseType: !379, size: 32, offset: 512)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1620, file: !380, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1620, file: !380, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1620, file: !380, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1620, file: !380, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1620, file: !380, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1126, file: !1127, line: 504, baseType: !1643, size: 64, offset: 704)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1127, line: 504, flags: DIFlagFwdDecl)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1126, file: !1127, line: 507, baseType: !1210, size: 64, offset: 768)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1126, file: !1127, line: 510, baseType: !750, size: 32, offset: 832)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1126, file: !1127, line: 513, baseType: !750, size: 32, offset: 864)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1126, file: !1127, line: 516, baseType: !1000, size: 32, offset: 896)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1126, file: !1127, line: 519, baseType: !1000, size: 32, offset: 928)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1126, file: !1127, line: 522, baseType: !7, size: 32, offset: 960)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1126, file: !1127, line: 523, baseType: !7, size: 32, offset: 992)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1126, file: !1127, line: 528, baseType: !755, size: 64, offset: 1024)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1126, file: !1127, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1126, file: !1127, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1126, file: !1127, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1126, file: !1127, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1126, file: !1127, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1126, file: !1127, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1126, file: !1127, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1126, file: !1127, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1126, file: !1127, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1126, file: !1127, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1126, file: !1127, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1126, file: !1127, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1126, file: !1127, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1126, file: !1127, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1126, file: !1127, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1126, file: !1127, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1121, file: !142, line: 3254, baseType: !880, size: 64, offset: 1536)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1121, file: !142, line: 3257, baseType: !880, size: 64, offset: 1600)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1121, file: !142, line: 3258, baseType: !880, size: 64, offset: 1664)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1121, file: !142, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1121, file: !142, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1121, file: !142, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1121, file: !142, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1121, file: !142, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1121, file: !142, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1121, file: !142, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1121, file: !142, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1121, file: !142, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1121, file: !142, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1121, file: !142, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1121, file: !142, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1121, file: !142, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1121, file: !142, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1121, file: !142, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1121, file: !142, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1121, file: !142, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1121, file: !142, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !882, file: !142, line: 3394, baseType: !1691, size: 1344)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !142, line: 2279, size: 1344, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1718, !1719, !1720, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1691, file: !142, line: 2280, baseType: !918, size: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1691, file: !142, line: 2281, baseType: !880, size: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1691, file: !142, line: 2282, baseType: !880, size: 64, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1691, file: !142, line: 2283, baseType: !880, size: 64, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1691, file: !142, line: 2284, baseType: !880, size: 64, offset: 384)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1691, file: !142, line: 2285, baseType: !7, size: 32, offset: 448)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1691, file: !142, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1691, file: !142, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1691, file: !142, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1691, file: !142, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1691, file: !142, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1691, file: !142, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1691, file: !142, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1691, file: !142, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1691, file: !142, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1691, file: !142, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1691, file: !142, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1691, file: !142, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1691, file: !142, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1691, file: !142, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1691, file: !142, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1691, file: !142, line: 2305, baseType: !7, size: 32, offset: 512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1691, file: !142, line: 2306, baseType: !1716, size: 32, offset: 544)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1717, line: 31, baseType: !750)
!1717 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1691, file: !142, line: 2307, baseType: !880, size: 64, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1691, file: !142, line: 2308, baseType: !880, size: 64, offset: 640)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1691, file: !142, line: 2314, baseType: !1721, size: 64, offset: 704)
!1721 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !142, line: 2309, size: 64, elements: !1722)
!1722 = !{!1723, !1724, !1725}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1721, file: !142, line: 2310, baseType: !750, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1721, file: !142, line: 2311, baseType: !755, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1721, file: !142, line: 2312, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !142, line: 2277, flags: DIFlagFwdDecl)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1691, file: !142, line: 2315, baseType: !880, size: 64, offset: 768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1691, file: !142, line: 2316, baseType: !880, size: 64, offset: 832)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1691, file: !142, line: 2317, baseType: !880, size: 64, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1691, file: !142, line: 2318, baseType: !880, size: 64, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1691, file: !142, line: 2319, baseType: !880, size: 64, offset: 1024)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1691, file: !142, line: 2320, baseType: !880, size: 64, offset: 1088)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1691, file: !142, line: 2321, baseType: !880, size: 64, offset: 1152)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1691, file: !142, line: 2322, baseType: !880, size: 64, offset: 1216)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1691, file: !142, line: 2324, baseType: !1737, size: 64, offset: 1280)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !142, line: 2324, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !882, file: !142, line: 3395, baseType: !1740, size: 320)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !142, line: 1469, size: 320, elements: !1741)
!1741 = !{!1742, !1743, !1744}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1740, file: !142, line: 1470, baseType: !918, size: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1740, file: !142, line: 1471, baseType: !880, size: 64, offset: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1740, file: !142, line: 1472, baseType: !880, size: 64, offset: 256)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !882, file: !142, line: 3396, baseType: !1746, size: 320)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !142, line: 1482, size: 320, elements: !1747)
!1747 = !{!1748, !1749, !1750}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1746, file: !142, line: 1483, baseType: !918, size: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1746, file: !142, line: 1484, baseType: !750, size: 32, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1746, file: !142, line: 1485, baseType: !1273, size: 64, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !882, file: !142, line: 3397, baseType: !1752, size: 384)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !142, line: 1829, size: 384, elements: !1753)
!1753 = !{!1754, !1755, !1756, !1757}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1752, file: !142, line: 1830, baseType: !918, size: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1752, file: !142, line: 1831, baseType: !1000, size: 32, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1752, file: !142, line: 1832, baseType: !880, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1752, file: !142, line: 1835, baseType: !1273, size: 64, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !882, file: !142, line: 3398, baseType: !1759, size: 704)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !142, line: 1898, size: 704, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1768}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1759, file: !142, line: 1899, baseType: !918, size: 192)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1759, file: !142, line: 1902, baseType: !880, size: 64, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1759, file: !142, line: 1905, baseType: !1336, size: 64, offset: 256)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1759, file: !142, line: 1908, baseType: !7, size: 32, offset: 320)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1759, file: !142, line: 1911, baseType: !1766, size: 64, offset: 384)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !142, line: 1876, flags: DIFlagFwdDecl)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1759, file: !142, line: 1914, baseType: !1378, size: 256, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !882, file: !142, line: 3399, baseType: !1770, size: 704)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !142, line: 2008, size: 704, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1770, file: !142, line: 2009, baseType: !918, size: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1770, file: !142, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1770, file: !142, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1770, file: !142, line: 2014, baseType: !1000, size: 32, offset: 224)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1770, file: !142, line: 2016, baseType: !880, size: 64, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1770, file: !142, line: 2017, baseType: !1262, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1770, file: !142, line: 2019, baseType: !880, size: 64, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1770, file: !142, line: 2020, baseType: !880, size: 64, offset: 448)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1770, file: !142, line: 2021, baseType: !880, size: 64, offset: 512)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1770, file: !142, line: 2022, baseType: !880, size: 64, offset: 576)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1770, file: !142, line: 2023, baseType: !880, size: 64, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !882, file: !142, line: 3400, baseType: !1784, size: 832)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !142, line: 2430, size: 832, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1784, file: !142, line: 2431, baseType: !918, size: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1784, file: !142, line: 2433, baseType: !880, size: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1784, file: !142, line: 2434, baseType: !880, size: 64, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1784, file: !142, line: 2435, baseType: !880, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1784, file: !142, line: 2436, baseType: !880, size: 64, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1784, file: !142, line: 2437, baseType: !1262, size: 64, offset: 448)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1784, file: !142, line: 2438, baseType: !880, size: 64, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1784, file: !142, line: 2440, baseType: !880, size: 64, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1784, file: !142, line: 2441, baseType: !880, size: 64, offset: 640)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1784, file: !142, line: 2443, baseType: !1796, size: 128, offset: 704)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !142, line: 182, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !142, line: 182, size: 128, elements: !1798)
!1798 = !{!1799}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1797, file: !142, line: 182, baseType: !1267, size: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !882, file: !142, line: 3401, baseType: !1801, size: 320)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !142, line: 3327, size: 320, elements: !1802)
!1802 = !{!1803, !1804, !1811}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1801, file: !142, line: 3329, baseType: !918, size: 192)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1801, file: !142, line: 3330, baseType: !1805, size: 64, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !142, line: 3320, size: 192, elements: !1807)
!1807 = !{!1808, !1809, !1810}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1806, file: !142, line: 3322, baseType: !1805, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1806, file: !142, line: 3323, baseType: !1805, size: 64, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1806, file: !142, line: 3324, baseType: !880, size: 64, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1801, file: !142, line: 3331, baseType: !1805, size: 64, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !882, file: !142, line: 3402, baseType: !1813, size: 256)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !142, line: 1540, size: 256, elements: !1814)
!1814 = !{!1815, !1816}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1813, file: !142, line: 1541, baseType: !918, size: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1813, file: !142, line: 1542, baseType: !1817, size: 64, offset: 192)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !142, line: 1538, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !142, line: 1538, size: 192, elements: !1820)
!1820 = !{!1821}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1819, file: !142, line: 1538, baseType: !1822, size: 192)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !142, line: 1537, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !142, line: 1537, size: 192, elements: !1824)
!1824 = !{!1825, !1826, !1827}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1823, file: !142, line: 1537, baseType: !7, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1823, file: !142, line: 1537, baseType: !7, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1823, file: !142, line: 1537, baseType: !1828, size: 128, offset: 64)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 128, elements: !800)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !142, line: 1535, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !142, line: 1532, size: 128, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1830, file: !142, line: 1533, baseType: !880, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1830, file: !142, line: 1534, baseType: !880, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !882, file: !142, line: 3403, baseType: !1835, size: 512)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !142, line: 1938, size: 512, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1846, !1847, !1848}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1835, file: !142, line: 1939, baseType: !918, size: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1835, file: !142, line: 1940, baseType: !1000, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1835, file: !142, line: 1941, baseType: !336, size: 32, offset: 224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1835, file: !142, line: 1946, baseType: !1841, size: 32, offset: 256)
!1841 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !142, line: 1942, size: 32, elements: !1842)
!1842 = !{!1843, !1844, !1845}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1841, file: !142, line: 1943, baseType: !354, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1841, file: !142, line: 1944, baseType: !361, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1841, file: !142, line: 1945, baseType: !141, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1835, file: !142, line: 1950, baseType: !1325, size: 64, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1835, file: !142, line: 1951, baseType: !1325, size: 64, offset: 384)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1835, file: !142, line: 1953, baseType: !1273, size: 64, offset: 448)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !882, file: !142, line: 3404, baseType: !1850, size: 1664)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !142, line: 3337, size: 1664, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1850, file: !142, line: 3338, baseType: !918, size: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1850, file: !142, line: 3341, baseType: !1854, size: 1472, offset: 192)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1855, line: 410, size: 1472, elements: !1856)
!1855 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1856 = !{!1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1854, file: !1855, line: 412, baseType: !750, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1854, file: !1855, line: 413, baseType: !750, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1854, file: !1855, line: 414, baseType: !750, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1854, file: !1855, line: 415, baseType: !750, size: 32, offset: 96)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1854, file: !1855, line: 416, baseType: !750, size: 32, offset: 128)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1854, file: !1855, line: 417, baseType: !750, size: 32, offset: 160)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1854, file: !1855, line: 418, baseType: !749, size: 8, offset: 192)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1854, file: !1855, line: 419, baseType: !749, size: 8, offset: 200)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1854, file: !1855, line: 420, baseType: !1866, size: 8, offset: 208)
!1866 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1854, file: !1855, line: 421, baseType: !1866, size: 8, offset: 216)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1854, file: !1855, line: 422, baseType: !1866, size: 8, offset: 224)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1854, file: !1855, line: 423, baseType: !1866, size: 8, offset: 232)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1854, file: !1855, line: 424, baseType: !1866, size: 8, offset: 240)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1854, file: !1855, line: 425, baseType: !1866, size: 8, offset: 248)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1854, file: !1855, line: 426, baseType: !1866, size: 8, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1854, file: !1855, line: 427, baseType: !1866, size: 8, offset: 264)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1854, file: !1855, line: 428, baseType: !1866, size: 8, offset: 272)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1854, file: !1855, line: 429, baseType: !1866, size: 8, offset: 280)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1854, file: !1855, line: 430, baseType: !1866, size: 8, offset: 288)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1854, file: !1855, line: 431, baseType: !1866, size: 8, offset: 296)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1854, file: !1855, line: 432, baseType: !1866, size: 8, offset: 304)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1854, file: !1855, line: 433, baseType: !1866, size: 8, offset: 312)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1854, file: !1855, line: 434, baseType: !1866, size: 8, offset: 320)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1854, file: !1855, line: 435, baseType: !1866, size: 8, offset: 328)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1854, file: !1855, line: 436, baseType: !1866, size: 8, offset: 336)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1854, file: !1855, line: 437, baseType: !1866, size: 8, offset: 344)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1854, file: !1855, line: 438, baseType: !1866, size: 8, offset: 352)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1854, file: !1855, line: 439, baseType: !1866, size: 8, offset: 360)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1854, file: !1855, line: 440, baseType: !1866, size: 8, offset: 368)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1854, file: !1855, line: 441, baseType: !1866, size: 8, offset: 376)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1854, file: !1855, line: 442, baseType: !1866, size: 8, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1854, file: !1855, line: 443, baseType: !1866, size: 8, offset: 392)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1854, file: !1855, line: 444, baseType: !1866, size: 8, offset: 400)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1854, file: !1855, line: 445, baseType: !1866, size: 8, offset: 408)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1854, file: !1855, line: 446, baseType: !1866, size: 8, offset: 416)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1854, file: !1855, line: 447, baseType: !1866, size: 8, offset: 424)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1854, file: !1855, line: 448, baseType: !1866, size: 8, offset: 432)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1854, file: !1855, line: 449, baseType: !1866, size: 8, offset: 440)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1854, file: !1855, line: 450, baseType: !1866, size: 8, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1854, file: !1855, line: 451, baseType: !1866, size: 8, offset: 456)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1854, file: !1855, line: 452, baseType: !1866, size: 8, offset: 464)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1854, file: !1855, line: 453, baseType: !1866, size: 8, offset: 472)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1854, file: !1855, line: 454, baseType: !1866, size: 8, offset: 480)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1854, file: !1855, line: 455, baseType: !1866, size: 8, offset: 488)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1854, file: !1855, line: 456, baseType: !1866, size: 8, offset: 496)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1854, file: !1855, line: 457, baseType: !1866, size: 8, offset: 504)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1854, file: !1855, line: 458, baseType: !1866, size: 8, offset: 512)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1854, file: !1855, line: 459, baseType: !1866, size: 8, offset: 520)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1854, file: !1855, line: 460, baseType: !1866, size: 8, offset: 528)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1854, file: !1855, line: 461, baseType: !1866, size: 8, offset: 536)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1854, file: !1855, line: 462, baseType: !1866, size: 8, offset: 544)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1854, file: !1855, line: 463, baseType: !1866, size: 8, offset: 552)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1854, file: !1855, line: 464, baseType: !1866, size: 8, offset: 560)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1854, file: !1855, line: 465, baseType: !1866, size: 8, offset: 568)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1854, file: !1855, line: 466, baseType: !1866, size: 8, offset: 576)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1854, file: !1855, line: 467, baseType: !1866, size: 8, offset: 584)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1854, file: !1855, line: 468, baseType: !1866, size: 8, offset: 592)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1854, file: !1855, line: 469, baseType: !1866, size: 8, offset: 600)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1854, file: !1855, line: 470, baseType: !1866, size: 8, offset: 608)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1854, file: !1855, line: 471, baseType: !1866, size: 8, offset: 616)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1854, file: !1855, line: 472, baseType: !1866, size: 8, offset: 624)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1854, file: !1855, line: 473, baseType: !1866, size: 8, offset: 632)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1854, file: !1855, line: 474, baseType: !1866, size: 8, offset: 640)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1854, file: !1855, line: 475, baseType: !1866, size: 8, offset: 648)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1854, file: !1855, line: 476, baseType: !1866, size: 8, offset: 656)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1854, file: !1855, line: 477, baseType: !1866, size: 8, offset: 664)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1854, file: !1855, line: 478, baseType: !1866, size: 8, offset: 672)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1854, file: !1855, line: 479, baseType: !1866, size: 8, offset: 680)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1854, file: !1855, line: 480, baseType: !1866, size: 8, offset: 688)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1854, file: !1855, line: 481, baseType: !1866, size: 8, offset: 696)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1854, file: !1855, line: 482, baseType: !1866, size: 8, offset: 704)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1854, file: !1855, line: 483, baseType: !1866, size: 8, offset: 712)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1854, file: !1855, line: 484, baseType: !1866, size: 8, offset: 720)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1854, file: !1855, line: 485, baseType: !1866, size: 8, offset: 728)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1854, file: !1855, line: 486, baseType: !1866, size: 8, offset: 736)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1854, file: !1855, line: 487, baseType: !1866, size: 8, offset: 744)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1854, file: !1855, line: 488, baseType: !1866, size: 8, offset: 752)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1854, file: !1855, line: 489, baseType: !1866, size: 8, offset: 760)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1854, file: !1855, line: 490, baseType: !1866, size: 8, offset: 768)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1854, file: !1855, line: 491, baseType: !1866, size: 8, offset: 776)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1854, file: !1855, line: 492, baseType: !1866, size: 8, offset: 784)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1854, file: !1855, line: 493, baseType: !1866, size: 8, offset: 792)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1854, file: !1855, line: 494, baseType: !1866, size: 8, offset: 800)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1854, file: !1855, line: 495, baseType: !1866, size: 8, offset: 808)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1854, file: !1855, line: 496, baseType: !1866, size: 8, offset: 816)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1854, file: !1855, line: 497, baseType: !1866, size: 8, offset: 824)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1854, file: !1855, line: 498, baseType: !1866, size: 8, offset: 832)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1854, file: !1855, line: 499, baseType: !1866, size: 8, offset: 840)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1854, file: !1855, line: 500, baseType: !1866, size: 8, offset: 848)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1854, file: !1855, line: 501, baseType: !1866, size: 8, offset: 856)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1854, file: !1855, line: 502, baseType: !1866, size: 8, offset: 864)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1854, file: !1855, line: 503, baseType: !1866, size: 8, offset: 872)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1854, file: !1855, line: 504, baseType: !1866, size: 8, offset: 880)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1854, file: !1855, line: 505, baseType: !1866, size: 8, offset: 888)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1854, file: !1855, line: 506, baseType: !1866, size: 8, offset: 896)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1854, file: !1855, line: 507, baseType: !1866, size: 8, offset: 904)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1854, file: !1855, line: 508, baseType: !1866, size: 8, offset: 912)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1854, file: !1855, line: 509, baseType: !1866, size: 8, offset: 920)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1854, file: !1855, line: 510, baseType: !1866, size: 8, offset: 928)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1854, file: !1855, line: 511, baseType: !1866, size: 8, offset: 936)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1854, file: !1855, line: 512, baseType: !1866, size: 8, offset: 944)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1854, file: !1855, line: 513, baseType: !1866, size: 8, offset: 952)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1854, file: !1855, line: 514, baseType: !1866, size: 8, offset: 960)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1854, file: !1855, line: 515, baseType: !1866, size: 8, offset: 968)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1854, file: !1855, line: 516, baseType: !1866, size: 8, offset: 976)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1854, file: !1855, line: 517, baseType: !1866, size: 8, offset: 984)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1854, file: !1855, line: 518, baseType: !1866, size: 8, offset: 992)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1854, file: !1855, line: 519, baseType: !1866, size: 8, offset: 1000)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1854, file: !1855, line: 520, baseType: !1866, size: 8, offset: 1008)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1854, file: !1855, line: 521, baseType: !1866, size: 8, offset: 1016)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1854, file: !1855, line: 522, baseType: !1866, size: 8, offset: 1024)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1854, file: !1855, line: 523, baseType: !1866, size: 8, offset: 1032)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1854, file: !1855, line: 524, baseType: !1866, size: 8, offset: 1040)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1854, file: !1855, line: 525, baseType: !1866, size: 8, offset: 1048)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1854, file: !1855, line: 526, baseType: !1866, size: 8, offset: 1056)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1854, file: !1855, line: 527, baseType: !1866, size: 8, offset: 1064)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1854, file: !1855, line: 528, baseType: !1866, size: 8, offset: 1072)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1854, file: !1855, line: 529, baseType: !1866, size: 8, offset: 1080)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1854, file: !1855, line: 530, baseType: !1866, size: 8, offset: 1088)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1854, file: !1855, line: 531, baseType: !1866, size: 8, offset: 1096)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1854, file: !1855, line: 532, baseType: !1866, size: 8, offset: 1104)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1854, file: !1855, line: 533, baseType: !1866, size: 8, offset: 1112)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1854, file: !1855, line: 534, baseType: !1866, size: 8, offset: 1120)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1854, file: !1855, line: 535, baseType: !1866, size: 8, offset: 1128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1854, file: !1855, line: 536, baseType: !1866, size: 8, offset: 1136)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1854, file: !1855, line: 537, baseType: !1866, size: 8, offset: 1144)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1854, file: !1855, line: 538, baseType: !1866, size: 8, offset: 1152)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1854, file: !1855, line: 539, baseType: !1866, size: 8, offset: 1160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1854, file: !1855, line: 540, baseType: !1866, size: 8, offset: 1168)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1854, file: !1855, line: 541, baseType: !1866, size: 8, offset: 1176)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1854, file: !1855, line: 542, baseType: !1866, size: 8, offset: 1184)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1854, file: !1855, line: 543, baseType: !1866, size: 8, offset: 1192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1854, file: !1855, line: 544, baseType: !1866, size: 8, offset: 1200)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1854, file: !1855, line: 545, baseType: !1866, size: 8, offset: 1208)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1854, file: !1855, line: 546, baseType: !1866, size: 8, offset: 1216)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1854, file: !1855, line: 547, baseType: !1866, size: 8, offset: 1224)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1854, file: !1855, line: 548, baseType: !1866, size: 8, offset: 1232)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1854, file: !1855, line: 549, baseType: !1866, size: 8, offset: 1240)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1854, file: !1855, line: 550, baseType: !1866, size: 8, offset: 1248)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1854, file: !1855, line: 551, baseType: !1866, size: 8, offset: 1256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1854, file: !1855, line: 552, baseType: !1866, size: 8, offset: 1264)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1854, file: !1855, line: 553, baseType: !1866, size: 8, offset: 1272)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1854, file: !1855, line: 554, baseType: !1866, size: 8, offset: 1280)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1854, file: !1855, line: 555, baseType: !1866, size: 8, offset: 1288)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1854, file: !1855, line: 556, baseType: !1866, size: 8, offset: 1296)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1854, file: !1855, line: 557, baseType: !1866, size: 8, offset: 1304)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1854, file: !1855, line: 558, baseType: !1866, size: 8, offset: 1312)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1854, file: !1855, line: 559, baseType: !1866, size: 8, offset: 1320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1854, file: !1855, line: 560, baseType: !1866, size: 8, offset: 1328)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1854, file: !1855, line: 561, baseType: !1866, size: 8, offset: 1336)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1854, file: !1855, line: 562, baseType: !1866, size: 8, offset: 1344)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1854, file: !1855, line: 563, baseType: !1866, size: 8, offset: 1352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1854, file: !1855, line: 564, baseType: !1866, size: 8, offset: 1360)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1854, file: !1855, line: 565, baseType: !1866, size: 8, offset: 1368)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1854, file: !1855, line: 566, baseType: !1866, size: 8, offset: 1376)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1854, file: !1855, line: 567, baseType: !1866, size: 8, offset: 1384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1854, file: !1855, line: 568, baseType: !1866, size: 8, offset: 1392)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1854, file: !1855, line: 569, baseType: !1866, size: 8, offset: 1400)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1854, file: !1855, line: 570, baseType: !1866, size: 8, offset: 1408)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1854, file: !1855, line: 571, baseType: !1866, size: 8, offset: 1416)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1854, file: !1855, line: 572, baseType: !1866, size: 8, offset: 1424)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1854, file: !1855, line: 573, baseType: !1866, size: 8, offset: 1432)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1854, file: !1855, line: 574, baseType: !1866, size: 8, offset: 1440)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !882, file: !142, line: 3405, baseType: !2022, size: 384)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !142, line: 3352, size: 384, elements: !2023)
!2023 = !{!2024, !2025}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2022, file: !142, line: 3353, baseType: !918, size: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2022, file: !142, line: 3356, baseType: !2026, size: 192, offset: 192)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1855, line: 578, size: 192, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2026, file: !1855, line: 580, baseType: !750, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2026, file: !1855, line: 581, baseType: !750, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2026, file: !1855, line: 582, baseType: !750, size: 32, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2026, file: !1855, line: 583, baseType: !750, size: 32, offset: 96)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !1855, line: 584, baseType: !749, size: 8, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2026, file: !1855, line: 585, baseType: !749, size: 8, offset: 136)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2026, file: !1855, line: 586, baseType: !749, size: 8, offset: 144)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2026, file: !1855, line: 587, baseType: !749, size: 8, offset: 152)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2026, file: !1855, line: 588, baseType: !749, size: 8, offset: 160)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2026, file: !1855, line: 589, baseType: !749, size: 8, offset: 168)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2026, file: !1855, line: 590, baseType: !749, size: 8, offset: 176)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !786, file: !385, line: 178, baseType: !1299, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !786, file: !385, line: 179, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048, !2049, !2050}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2043, file: !385, line: 144, baseType: !880, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2043, file: !385, line: 145, baseType: !765, size: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2043, file: !385, line: 146, baseType: !765, size: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2043, file: !385, line: 147, baseType: !1716, size: 32, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2043, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2043, file: !385, line: 149, baseType: !749, size: 8, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !786, file: !385, line: 180, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !2055)
!2055 = !{!2056, !2057}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2054, file: !385, line: 160, baseType: !880, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2054, file: !385, line: 161, baseType: !851, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !786, file: !385, line: 181, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !781, file: !385, line: 317, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 64, elements: !800)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !781, file: !385, line: 318, baseType: !2064, size: 320)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !2065)
!2065 = !{!2066, !2068, !2123}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2064, file: !385, line: 190, baseType: !2067, size: 192)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 192, elements: !951)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2064, file: !385, line: 193, baseType: !2069, size: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !2071)
!2071 = !{!2072, !2108, !2109, !2110, !2122}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2070, file: !385, line: 208, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !766, line: 62, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2076, line: 538, size: 256, elements: !2077)
!2076 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2077 = !{!2078, !2082, !2088, !2099}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2075, file: !2076, line: 539, baseType: !2079, size: 32)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2076, line: 482, size: 32, elements: !2080)
!2080 = !{!2081}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2079, file: !2076, line: 484, baseType: !7, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2075, file: !2076, line: 540, baseType: !2083, size: 192)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2076, line: 488, size: 192, elements: !2084)
!2084 = !{!2085, !2086, !2087}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2083, file: !2076, line: 489, baseType: !2079, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2083, file: !2076, line: 492, baseType: !755, size: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2083, file: !2076, line: 496, baseType: !880, size: 64, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2075, file: !2076, line: 541, baseType: !2089, size: 256)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2076, line: 504, size: 256, elements: !2090)
!2090 = !{!2091, !2092, !2097, !2098}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2089, file: !2076, line: 505, baseType: !2079, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2089, file: !2076, line: 509, baseType: !2093, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2076, line: 501, baseType: !2094)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !1221}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2089, file: !2076, line: 510, baseType: !1221, size: 64, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2089, file: !2076, line: 513, baseType: !2073, size: 64, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2075, file: !2076, line: 542, baseType: !2100, size: 128)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2076, line: 530, size: 128, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2100, file: !2076, line: 531, baseType: !2079, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2100, file: !2076, line: 534, baseType: !2104, size: 64, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2076, line: 525, baseType: !2105)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!749, !880, !755, !757, !757}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2070, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2070, file: !385, line: 214, baseType: !851, size: 64, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2070, file: !385, line: 224, baseType: !2111, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2113, file: !385, line: 202, baseType: !2116, size: 128)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !2118)
!2118 = !{!2119, !2120, !2121}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2117, file: !385, line: 200, baseType: !7, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2117, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2117, file: !385, line: 200, baseType: !799, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2070, file: !385, line: 234, baseType: !2111, size: 64, offset: 256)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2064, file: !385, line: 197, baseType: !851, size: 64, offset: 256)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !781, file: !385, line: 319, baseType: !940, size: 256)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !781, file: !385, line: 320, baseType: !959, size: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !760, file: !3, line: 464, baseType: !851, size: 64, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !760, file: !3, line: 469, baseType: !880, size: 64, offset: 256)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !760, file: !3, line: 471, baseType: !7, size: 32, offset: 320)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !760, file: !3, line: 473, baseType: !753, size: 8, offset: 352)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "addr_taken", scope: !760, file: !3, line: 475, baseType: !753, size: 8, offset: 360)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !760, file: !3, line: 477, baseType: !750, size: 32, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "keep", scope: !760, file: !3, line: 479, baseType: !750, size: 32, offset: 416)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "base_offset", scope: !760, file: !3, line: 482, baseType: !851, size: 64, offset: 448)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "full_size", scope: !760, file: !3, line: 485, baseType: !851, size: 64, offset: 512)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "types_used_by_vars_entry", file: !1127, line: 620, size: 128, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2137, file: !1127, line: 621, baseType: !880, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2137, file: !1127, line: 622, baseType: !880, size: 64, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "temp_slot_address_entry", file: !3, line: 493, size: 192, elements: !2144)
!2144 = !{!2145, !2146, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2143, file: !3, line: 494, baseType: !1220, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2143, file: !3, line: 495, baseType: !765, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "temp_slot", scope: !2143, file: !3, line: 496, baseType: !759, size: 64, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_function_p_heap", file: !3, line: 164, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_function_p_heap", file: !3, line: 164, size: 128, elements: !2151)
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2150, file: !3, line: 164, baseType: !2153, size: 128)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_function_p_base", file: !3, line: 163, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_function_p_base", file: !3, line: 163, size: 128, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2154, file: !3, line: 163, baseType: !7, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2154, file: !3, line: 163, baseType: !7, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2154, file: !3, line: 163, baseType: !2159, size: 64, offset: 64)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2160, size: 64, elements: !800)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "function_p", file: !3, line: 161, baseType: !1125)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_temp_slot_p_gc", file: !1127, line: 172, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_temp_slot_p_gc", file: !1127, line: 172, size: 128, elements: !2164)
!2164 = !{!2165}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2163, file: !1127, line: 172, baseType: !2166, size: 128)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_temp_slot_p_base", file: !1127, line: 171, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_temp_slot_p_base", file: !1127, line: 171, size: 128, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2167, file: !1127, line: 171, baseType: !7, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2167, file: !1127, line: 171, baseType: !7, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2167, file: !1127, line: 171, baseType: !2172, size: 64, offset: 64)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2173, size: 64, elements: !800)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "temp_slot_p", file: !1127, line: 168, baseType: !759)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !142, line: 184, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !142, line: 184, size: 128, elements: !2179)
!2179 = !{!2180}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2178, file: !142, line: 184, baseType: !1267, size: 128)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!2182 = !{!0, !2183, !2185, !2187, !2215, !2217, !2219, !2221, !2223, !2237, !2253, !2255, !2257, !2259, !2261, !2263, !2265, !2267, !2272, !2274, !2276, !2278, !2280, !2282, !2284, !2286, !2288, !2290, !2292, !2294, !2296}
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "types_used_by_vars_hash", scope: !2, file: !3, line: 134, type: !1210, isLocal: false, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "types_used_by_cur_var_decl", scope: !2, file: !3, line: 135, type: !880, isLocal: false, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "pass_instantiate_virtual_regs", scope: !2, file: !3, line: 1828, type: !2189, isLocal: false, isDefinition: true)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !528, line: 162, size: 640, elements: !2190)
!2190 = !{!2191}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2189, file: !528, line: 164, baseType: !2192, size: 640)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !528, line: 114, size: 640, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2200, !2204, !2206, !2207, !2208, !2210, !2211, !2212, !2213, !2214}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2192, file: !528, line: 117, baseType: !527, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2192, file: !528, line: 121, baseType: !755, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2192, file: !528, line: 125, baseType: !2197, size: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!749}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2192, file: !528, line: 130, baseType: !2201, size: 64, offset: 192)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!7}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2192, file: !528, line: 133, baseType: !2205, size: 64, offset: 256)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2192, file: !528, line: 136, baseType: !2205, size: 64, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2192, file: !528, line: 139, baseType: !750, size: 32, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2192, file: !528, line: 143, baseType: !2209, size: 32, offset: 416)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !535, line: 80, baseType: !534)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2192, file: !528, line: 146, baseType: !7, size: 32, offset: 448)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2192, file: !528, line: 147, baseType: !7, size: 32, offset: 480)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2192, file: !528, line: 148, baseType: !7, size: 32, offset: 512)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2192, file: !528, line: 151, baseType: !7, size: 32, offset: 544)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2192, file: !528, line: 152, baseType: !7, size: 32, offset: 576)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "pass_init_function", scope: !2, file: !3, line: 4247, type: !2189, isLocal: false, isDefinition: true)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(name: "pass_leaf_regs", scope: !2, file: !3, line: 5557, type: !2189, isLocal: false, isDefinition: true)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "pass_thread_prologue_and_epilogue", scope: !2, file: !3, line: 5590, type: !2189, isLocal: false, isDefinition: true)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(name: "pass_match_asm_constraints", scope: !2, file: !3, line: 5792, type: !2189, isLocal: false, isDefinition: true)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_function_h", scope: !2, file: !2225, line: 152, type: !2226, isLocal: false, isDefinition: true)
!2225 = !DIFile(filename: "./gt-function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2227, size: 960, elements: !951)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2229, line: 69, size: 320, elements: !2230)
!2229 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2230 = !{!2231, !2232, !2233, !2234, !2236}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2228, file: !2229, line: 70, baseType: !754, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2228, file: !2229, line: 71, baseType: !1236, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2228, file: !2229, line: 72, baseType: !1236, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2228, file: !2229, line: 73, baseType: !2235, size: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2229, line: 65, baseType: !1230)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2228, file: !2229, line: 74, baseType: !2235, size: 64, offset: 256)
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "gt_ggc_rc_gt_function_h", scope: !2, file: !2225, line: 170, type: !2239, isLocal: false, isDefinition: true)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 1152, elements: !951)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_cache_tab", file: !2229, line: 85, size: 384, elements: !2242)
!2242 = !{!2243, !2245, !2246, !2247, !2248, !2249}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2241, file: !2229, line: 86, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2241, file: !2229, line: 87, baseType: !1236, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2241, file: !2229, line: 88, baseType: !1236, size: 64, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2241, file: !2229, line: 89, baseType: !2235, size: 64, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2241, file: !2229, line: 90, baseType: !2235, size: 64, offset: 256)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "marked_p", scope: !2241, file: !2229, line: 91, baseType: !2250, size: 64, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!750, !1221}
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "gt_pch_rc_gt_function_h", scope: !2, file: !2225, line: 190, type: !2226, isLocal: false, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_function_h", scope: !2, file: !2225, line: 208, type: !2226, isLocal: false, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "current_function_is_leaf", scope: !2, file: !3, line: 99, type: !750, isLocal: false, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "current_function_sp_is_unchanging", scope: !2, file: !3, line: 104, type: !750, isLocal: false, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "current_function_uses_only_leaf_regs", scope: !2, file: !3, line: 109, type: !750, isLocal: false, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "virtuals_instantiated", scope: !2, file: !3, line: 115, type: !750, isLocal: false, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "funcdef_no", scope: !2, file: !3, line: 118, type: !750, isLocal: true, isDefinition: true)
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "init_machine_status", scope: !2, file: !3, line: 122, type: !2269, isLocal: false, isDefinition: true)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!1619}
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "prologue_insn_hash", scope: !2, file: !3, line: 129, type: !1210, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "epilogue_insn_hash", scope: !2, file: !3, line: 131, type: !1210, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "function_context_stack", scope: !2, file: !3, line: 165, type: !2148, isLocal: true, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "temp_slot_address_table", scope: !2, file: !3, line: 490, type: !1210, isLocal: true, isDefinition: true)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "in_dummy_function", scope: !2, file: !3, line: 4035, type: !749, isLocal: true, isDefinition: true)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(name: "cfun_stack", scope: !2, file: !3, line: 4077, type: !2148, isLocal: true, isDefinition: true)
!2284 = !DIGlobalVariableExpression(var: !2285, expr: !DIExpression())
!2285 = distinct !DIGlobalVariable(name: "initial_trampoline", scope: !2, file: !3, line: 4633, type: !765, isLocal: true, isDefinition: true)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "in_arg_offset", scope: !2, file: !3, line: 1247, type: !750, isLocal: true, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "var_offset", scope: !2, file: !3, line: 1248, type: !750, isLocal: true, isDefinition: true)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(name: "dynamic_offset", scope: !2, file: !3, line: 1249, type: !750, isLocal: true, isDefinition: true)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "out_arg_offset", scope: !2, file: !3, line: 1250, type: !750, isLocal: true, isDefinition: true)
!2294 = !DIGlobalVariableExpression(var: !2295, expr: !DIExpression())
!2295 = distinct !DIGlobalVariable(name: "cfa_offset", scope: !2, file: !3, line: 1251, type: !750, isLocal: true, isDefinition: true)
!2296 = !DIGlobalVariableExpression(var: !2297, expr: !DIExpression())
!2297 = distinct !DIGlobalVariable(name: "next_block_index", scope: !2, file: !3, line: 3978, type: !750, isLocal: true, isDefinition: true)
!2298 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2299 = !{i32 2, !"Dwarf Version", i32 4}
!2300 = !{i32 2, !"Debug Info Version", i32 3}
!2301 = !{i32 1, !"wchar_size", i32 4}
!2302 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2303 = distinct !DISubprogram(name: "vprintf", scope: !2304, file: !2304, line: 39, type: !2305, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2304 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!750, !2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !755)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2309, file: !3, baseType: !7, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2309, file: !3, baseType: !7, size: 32, offset: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2309, file: !3, baseType: !754, size: 64, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2309, file: !3, baseType: !754, size: 64, offset: 128)
!2315 = !{!2316, !2317}
!2316 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2303, file: !2304, line: 39, type: !2307)
!2317 = !DILocalVariable(name: "__arg", arg: 2, scope: !2303, file: !2304, line: 39, type: !2308)
!2318 = !DILocation(line: 0, scope: !2303)
!2319 = !DILocation(line: 41, column: 20, scope: !2303)
!2320 = !DILocation(line: 41, column: 10, scope: !2303)
!2321 = !DILocation(line: 41, column: 3, scope: !2303)
!2322 = distinct !DISubprogram(name: "getchar", scope: !2304, file: !2304, line: 47, type: !2323, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!750}
!2325 = !{}
!2326 = !DILocation(line: 49, column: 16, scope: !2322)
!2327 = !DILocation(line: 49, column: 10, scope: !2322)
!2328 = !DILocation(line: 49, column: 3, scope: !2322)
!2329 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2304, file: !2304, line: 56, type: !2330, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!750, !2332}
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2334, line: 7, baseType: !2335)
!2334 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2336, line: 49, size: 1728, elements: !2337)
!2336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2337 = !{!2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2353, !2355, !2356, !2357, !2360, !2361, !2362, !2363, !2366, !2368, !2371, !2374, !2375, !2376, !2377, !2378}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2335, file: !2336, line: 51, baseType: !750, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2335, file: !2336, line: 54, baseType: !752, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2335, file: !2336, line: 55, baseType: !752, size: 64, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2335, file: !2336, line: 56, baseType: !752, size: 64, offset: 192)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2335, file: !2336, line: 57, baseType: !752, size: 64, offset: 256)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2335, file: !2336, line: 58, baseType: !752, size: 64, offset: 320)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2335, file: !2336, line: 59, baseType: !752, size: 64, offset: 384)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2335, file: !2336, line: 60, baseType: !752, size: 64, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2335, file: !2336, line: 61, baseType: !752, size: 64, offset: 512)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2335, file: !2336, line: 64, baseType: !752, size: 64, offset: 576)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2335, file: !2336, line: 65, baseType: !752, size: 64, offset: 640)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2335, file: !2336, line: 66, baseType: !752, size: 64, offset: 704)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2335, file: !2336, line: 68, baseType: !2351, size: 64, offset: 768)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2336, line: 36, flags: DIFlagFwdDecl)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2335, file: !2336, line: 70, baseType: !2354, size: 64, offset: 832)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2335, file: !2336, line: 72, baseType: !750, size: 32, offset: 896)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2335, file: !2336, line: 73, baseType: !750, size: 32, offset: 928)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2335, file: !2336, line: 74, baseType: !2358, size: 64, offset: 960)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2359, line: 152, baseType: !851)
!2359 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2335, file: !2336, line: 77, baseType: !758, size: 16, offset: 1024)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2335, file: !2336, line: 78, baseType: !1866, size: 8, offset: 1040)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2335, file: !2336, line: 79, baseType: !975, size: 8, offset: 1048)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2335, file: !2336, line: 81, baseType: !2364, size: 64, offset: 1088)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2336, line: 43, baseType: null)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2335, file: !2336, line: 89, baseType: !2367, size: 64, offset: 1152)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2359, line: 153, baseType: !851)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2335, file: !2336, line: 91, baseType: !2369, size: 64, offset: 1216)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2336, line: 37, flags: DIFlagFwdDecl)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2335, file: !2336, line: 92, baseType: !2372, size: 64, offset: 1280)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2336, line: 38, flags: DIFlagFwdDecl)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2335, file: !2336, line: 93, baseType: !2354, size: 64, offset: 1344)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2335, file: !2336, line: 94, baseType: !754, size: 64, offset: 1408)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2335, file: !2336, line: 95, baseType: !1236, size: 64, offset: 1472)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2335, file: !2336, line: 96, baseType: !750, size: 32, offset: 1536)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2335, file: !2336, line: 98, baseType: !2379, size: 160, offset: 1568)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 160, elements: !2380)
!2380 = !{!2381}
!2381 = !DISubrange(count: 20)
!2382 = !{!2383}
!2383 = !DILocalVariable(name: "__fp", arg: 1, scope: !2329, file: !2304, line: 56, type: !2332)
!2384 = !DILocation(line: 0, scope: !2329)
!2385 = !DILocation(line: 58, column: 10, scope: !2329)
!2386 = !DILocation(line: 58, column: 3, scope: !2329)
!2387 = distinct !DISubprogram(name: "getc_unlocked", scope: !2304, file: !2304, line: 66, type: !2330, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2388 = !{!2389}
!2389 = !DILocalVariable(name: "__fp", arg: 1, scope: !2387, file: !2304, line: 66, type: !2332)
!2390 = !DILocation(line: 0, scope: !2387)
!2391 = !DILocation(line: 68, column: 10, scope: !2387)
!2392 = !DILocation(line: 68, column: 3, scope: !2387)
!2393 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2304, file: !2304, line: 73, type: !2323, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2394 = !DILocation(line: 75, column: 10, scope: !2393)
!2395 = !DILocation(line: 75, column: 3, scope: !2393)
!2396 = distinct !DISubprogram(name: "putchar", scope: !2304, file: !2304, line: 82, type: !2397, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2399)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!750, !750}
!2399 = !{!2400}
!2400 = !DILocalVariable(name: "__c", arg: 1, scope: !2396, file: !2304, line: 82, type: !750)
!2401 = !DILocation(line: 0, scope: !2396)
!2402 = !DILocation(line: 84, column: 21, scope: !2396)
!2403 = !DILocation(line: 84, column: 10, scope: !2396)
!2404 = !DILocation(line: 84, column: 3, scope: !2396)
!2405 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2304, file: !2304, line: 91, type: !2406, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2408)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!750, !750, !2332}
!2408 = !{!2409, !2410}
!2409 = !DILocalVariable(name: "__c", arg: 1, scope: !2405, file: !2304, line: 91, type: !750)
!2410 = !DILocalVariable(name: "__stream", arg: 2, scope: !2405, file: !2304, line: 91, type: !2332)
!2411 = !DILocation(line: 0, scope: !2405)
!2412 = !DILocation(line: 93, column: 10, scope: !2405)
!2413 = !DILocation(line: 93, column: 3, scope: !2405)
!2414 = distinct !DISubprogram(name: "putc_unlocked", scope: !2304, file: !2304, line: 101, type: !2406, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2415)
!2415 = !{!2416, !2417}
!2416 = !DILocalVariable(name: "__c", arg: 1, scope: !2414, file: !2304, line: 101, type: !750)
!2417 = !DILocalVariable(name: "__stream", arg: 2, scope: !2414, file: !2304, line: 101, type: !2332)
!2418 = !DILocation(line: 0, scope: !2414)
!2419 = !DILocation(line: 103, column: 10, scope: !2414)
!2420 = !DILocation(line: 103, column: 3, scope: !2414)
!2421 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2304, file: !2304, line: 108, type: !2397, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2422 = !{!2423}
!2423 = !DILocalVariable(name: "__c", arg: 1, scope: !2421, file: !2304, line: 108, type: !750)
!2424 = !DILocation(line: 0, scope: !2421)
!2425 = !DILocation(line: 110, column: 10, scope: !2421)
!2426 = !DILocation(line: 110, column: 3, scope: !2421)
!2427 = distinct !DISubprogram(name: "getline", scope: !2304, file: !2304, line: 118, type: !2428, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2432)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!2430, !751, !2431, !2332}
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2359, line: 193, baseType: !851)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!2432 = !{!2433, !2434, !2435}
!2433 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2427, file: !2304, line: 118, type: !751)
!2434 = !DILocalVariable(name: "__n", arg: 2, scope: !2427, file: !2304, line: 118, type: !2431)
!2435 = !DILocalVariable(name: "__stream", arg: 3, scope: !2427, file: !2304, line: 118, type: !2332)
!2436 = !DILocation(line: 0, scope: !2427)
!2437 = !DILocation(line: 120, column: 10, scope: !2427)
!2438 = !DILocation(line: 120, column: 3, scope: !2427)
!2439 = distinct !DISubprogram(name: "feof_unlocked", scope: !2304, file: !2304, line: 128, type: !2330, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2440)
!2440 = !{!2441}
!2441 = !DILocalVariable(name: "__stream", arg: 1, scope: !2439, file: !2304, line: 128, type: !2332)
!2442 = !DILocation(line: 0, scope: !2439)
!2443 = !DILocation(line: 130, column: 10, scope: !2439)
!2444 = !DILocation(line: 130, column: 3, scope: !2439)
!2445 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2304, file: !2304, line: 135, type: !2330, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2446)
!2446 = !{!2447}
!2447 = !DILocalVariable(name: "__stream", arg: 1, scope: !2445, file: !2304, line: 135, type: !2332)
!2448 = !DILocation(line: 0, scope: !2445)
!2449 = !DILocation(line: 137, column: 10, scope: !2445)
!2450 = !DILocation(line: 137, column: 3, scope: !2445)
!2451 = distinct !DISubprogram(name: "tolower", scope: !2452, file: !2452, line: 207, type: !2397, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2453)
!2452 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2453 = !{!2454}
!2454 = !DILocalVariable(name: "__c", arg: 1, scope: !2451, file: !2452, line: 207, type: !750)
!2455 = !DILocation(line: 0, scope: !2451)
!2456 = !DILocation(line: 209, column: 22, scope: !2451)
!2457 = !DILocation(line: 209, column: 39, scope: !2451)
!2458 = !DILocation(line: 209, column: 38, scope: !2451)
!2459 = !DILocation(line: 209, column: 37, scope: !2451)
!2460 = !DILocation(line: 209, column: 10, scope: !2451)
!2461 = !DILocation(line: 209, column: 3, scope: !2451)
!2462 = distinct !DISubprogram(name: "toupper", scope: !2452, file: !2452, line: 213, type: !2397, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2463)
!2463 = !{!2464}
!2464 = !DILocalVariable(name: "__c", arg: 1, scope: !2462, file: !2452, line: 213, type: !750)
!2465 = !DILocation(line: 0, scope: !2462)
!2466 = !DILocation(line: 215, column: 22, scope: !2462)
!2467 = !DILocation(line: 215, column: 39, scope: !2462)
!2468 = !DILocation(line: 215, column: 38, scope: !2462)
!2469 = !DILocation(line: 215, column: 37, scope: !2462)
!2470 = !DILocation(line: 215, column: 10, scope: !2462)
!2471 = !DILocation(line: 215, column: 3, scope: !2462)
!2472 = distinct !DISubprogram(name: "atoi", scope: !2473, file: !2473, line: 361, type: !2474, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2476)
!2473 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!750, !755}
!2476 = !{!2477}
!2477 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2472, file: !2473, line: 361, type: !755)
!2478 = !DILocation(line: 0, scope: !2472)
!2479 = !DILocation(line: 363, column: 16, scope: !2472)
!2480 = !DILocation(line: 363, column: 10, scope: !2472)
!2481 = !DILocation(line: 363, column: 3, scope: !2472)
!2482 = distinct !DISubprogram(name: "atol", scope: !2473, file: !2473, line: 366, type: !2483, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!851, !755}
!2485 = !{!2486}
!2486 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2482, file: !2473, line: 366, type: !755)
!2487 = !DILocation(line: 0, scope: !2482)
!2488 = !DILocation(line: 368, column: 10, scope: !2482)
!2489 = !DILocation(line: 368, column: 3, scope: !2482)
!2490 = distinct !DISubprogram(name: "atoll", scope: !2473, file: !2473, line: 373, type: !2491, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2494)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!2493, !755}
!2493 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2494 = !{!2495}
!2495 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2490, file: !2473, line: 373, type: !755)
!2496 = !DILocation(line: 0, scope: !2490)
!2497 = !DILocation(line: 375, column: 10, scope: !2490)
!2498 = !DILocation(line: 375, column: 3, scope: !2490)
!2499 = distinct !DISubprogram(name: "bsearch", scope: !2500, file: !2500, line: 20, type: !2501, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2504)
!2500 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!754, !1221, !1221, !1236, !1236, !2503}
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2473, line: 808, baseType: !1225)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514}
!2505 = !DILocalVariable(name: "__key", arg: 1, scope: !2499, file: !2500, line: 20, type: !1221)
!2506 = !DILocalVariable(name: "__base", arg: 2, scope: !2499, file: !2500, line: 20, type: !1221)
!2507 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2499, file: !2500, line: 20, type: !1236)
!2508 = !DILocalVariable(name: "__size", arg: 4, scope: !2499, file: !2500, line: 20, type: !1236)
!2509 = !DILocalVariable(name: "__compar", arg: 5, scope: !2499, file: !2500, line: 21, type: !2503)
!2510 = !DILocalVariable(name: "__l", scope: !2499, file: !2500, line: 23, type: !1236)
!2511 = !DILocalVariable(name: "__u", scope: !2499, file: !2500, line: 23, type: !1236)
!2512 = !DILocalVariable(name: "__idx", scope: !2499, file: !2500, line: 23, type: !1236)
!2513 = !DILocalVariable(name: "__p", scope: !2499, file: !2500, line: 24, type: !1221)
!2514 = !DILocalVariable(name: "__comparison", scope: !2499, file: !2500, line: 25, type: !750)
!2515 = !DILocation(line: 0, scope: !2499)
!2516 = !DILocation(line: 29, column: 3, scope: !2499)
!2517 = !DILocation(line: 27, column: 7, scope: !2499)
!2518 = !DILocation(line: 29, column: 14, scope: !2499)
!2519 = !DILocation(line: 31, column: 20, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2499, file: !2500, line: 30, column: 5)
!2521 = !DILocation(line: 31, column: 27, scope: !2520)
!2522 = !DILocation(line: 32, column: 56, scope: !2520)
!2523 = !DILocation(line: 32, column: 47, scope: !2520)
!2524 = !DILocation(line: 33, column: 22, scope: !2520)
!2525 = !DILocation(line: 34, column: 24, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2520, file: !2500, line: 34, column: 11)
!2527 = !DILocation(line: 34, column: 11, scope: !2520)
!2528 = !DILocation(line: 36, column: 29, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2526, file: !2500, line: 36, column: 16)
!2530 = !DILocation(line: 36, column: 16, scope: !2526)
!2531 = !DILocation(line: 37, column: 14, scope: !2529)
!2532 = distinct !{!2532, !2516, !2533}
!2533 = !DILocation(line: 40, column: 5, scope: !2499)
!2534 = !DILocation(line: 43, column: 1, scope: !2499)
!2535 = distinct !DISubprogram(name: "atof", scope: !2536, file: !2536, line: 25, type: !2537, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2540)
!2536 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!2539, !755}
!2539 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2540 = !{!2541}
!2541 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2535, file: !2536, line: 25, type: !755)
!2542 = !DILocation(line: 0, scope: !2535)
!2543 = !DILocation(line: 27, column: 10, scope: !2535)
!2544 = !DILocation(line: 27, column: 3, scope: !2535)
!2545 = distinct !DISubprogram(name: "strtoimax", scope: !2546, file: !2546, line: 324, type: !2547, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2553)
!2546 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!2549, !2307, !2552, !750}
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2550, line: 101, baseType: !2551)
!2550 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2359, line: 72, baseType: !851)
!2552 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !751)
!2553 = !{!2554, !2555, !2556}
!2554 = !DILocalVariable(name: "nptr", arg: 1, scope: !2545, file: !2546, line: 324, type: !2307)
!2555 = !DILocalVariable(name: "endptr", arg: 2, scope: !2545, file: !2546, line: 324, type: !2552)
!2556 = !DILocalVariable(name: "base", arg: 3, scope: !2545, file: !2546, line: 324, type: !750)
!2557 = !DILocation(line: 0, scope: !2545)
!2558 = !DILocation(line: 327, column: 10, scope: !2545)
!2559 = !DILocation(line: 327, column: 3, scope: !2545)
!2560 = distinct !DISubprogram(name: "strtoumax", scope: !2546, file: !2546, line: 336, type: !2561, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2565)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!2563, !2307, !2552, !750}
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2550, line: 102, baseType: !2564)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2359, line: 73, baseType: !757)
!2565 = !{!2566, !2567, !2568}
!2566 = !DILocalVariable(name: "nptr", arg: 1, scope: !2560, file: !2546, line: 336, type: !2307)
!2567 = !DILocalVariable(name: "endptr", arg: 2, scope: !2560, file: !2546, line: 336, type: !2552)
!2568 = !DILocalVariable(name: "base", arg: 3, scope: !2560, file: !2546, line: 336, type: !750)
!2569 = !DILocation(line: 0, scope: !2560)
!2570 = !DILocation(line: 339, column: 10, scope: !2560)
!2571 = !DILocation(line: 339, column: 3, scope: !2560)
!2572 = distinct !DISubprogram(name: "wcstoimax", scope: !2546, file: !2546, line: 348, type: !2573, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2582)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!2549, !2575, !2579, !750}
!2575 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2576)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2578)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2546, line: 34, baseType: !750)
!2579 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2582 = !{!2583, !2584, !2585}
!2583 = !DILocalVariable(name: "nptr", arg: 1, scope: !2572, file: !2546, line: 348, type: !2575)
!2584 = !DILocalVariable(name: "endptr", arg: 2, scope: !2572, file: !2546, line: 348, type: !2579)
!2585 = !DILocalVariable(name: "base", arg: 3, scope: !2572, file: !2546, line: 348, type: !750)
!2586 = !DILocation(line: 0, scope: !2572)
!2587 = !DILocation(line: 351, column: 10, scope: !2572)
!2588 = !DILocation(line: 351, column: 3, scope: !2572)
!2589 = distinct !DISubprogram(name: "wcstoumax", scope: !2546, file: !2546, line: 362, type: !2590, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2592)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!2563, !2575, !2579, !750}
!2592 = !{!2593, !2594, !2595}
!2593 = !DILocalVariable(name: "nptr", arg: 1, scope: !2589, file: !2546, line: 362, type: !2575)
!2594 = !DILocalVariable(name: "endptr", arg: 2, scope: !2589, file: !2546, line: 362, type: !2579)
!2595 = !DILocalVariable(name: "base", arg: 3, scope: !2589, file: !2546, line: 362, type: !750)
!2596 = !DILocation(line: 0, scope: !2589)
!2597 = !DILocation(line: 365, column: 10, scope: !2589)
!2598 = !DILocation(line: 365, column: 3, scope: !2589)
!2599 = distinct !DISubprogram(name: "stat", scope: !2600, file: !2600, line: 453, type: !2601, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2638)
!2600 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!750, !755, !2603}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2605, line: 46, size: 1152, elements: !2606)
!2605 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2606 = !{!2607, !2609, !2611, !2613, !2615, !2617, !2619, !2620, !2621, !2622, !2624, !2626, !2634, !2635, !2636}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2604, file: !2605, line: 48, baseType: !2608, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2359, line: 145, baseType: !757)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2604, file: !2605, line: 53, baseType: !2610, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2359, line: 148, baseType: !757)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2604, file: !2605, line: 61, baseType: !2612, size: 64, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2359, line: 151, baseType: !757)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2604, file: !2605, line: 62, baseType: !2614, size: 32, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2359, line: 150, baseType: !7)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2604, file: !2605, line: 64, baseType: !2616, size: 32, offset: 224)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2359, line: 146, baseType: !7)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2604, file: !2605, line: 65, baseType: !2618, size: 32, offset: 256)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2359, line: 147, baseType: !7)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2604, file: !2605, line: 67, baseType: !750, size: 32, offset: 288)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2604, file: !2605, line: 69, baseType: !2608, size: 64, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2604, file: !2605, line: 74, baseType: !2358, size: 64, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2604, file: !2605, line: 78, baseType: !2623, size: 64, offset: 448)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2359, line: 174, baseType: !851)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2604, file: !2605, line: 80, baseType: !2625, size: 64, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2359, line: 179, baseType: !851)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2604, file: !2605, line: 91, baseType: !2627, size: 128, offset: 576)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2628, line: 10, size: 128, elements: !2629)
!2628 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2629 = !{!2630, !2632}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2627, file: !2628, line: 12, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2359, line: 160, baseType: !851)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2627, file: !2628, line: 16, baseType: !2633, size: 64, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2359, line: 196, baseType: !851)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2604, file: !2605, line: 92, baseType: !2627, size: 128, offset: 704)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2604, file: !2605, line: 93, baseType: !2627, size: 128, offset: 832)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2604, file: !2605, line: 106, baseType: !2637, size: 192, offset: 960)
!2637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2633, size: 192, elements: !951)
!2638 = !{!2639, !2640}
!2639 = !DILocalVariable(name: "__path", arg: 1, scope: !2599, file: !2600, line: 453, type: !755)
!2640 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2599, file: !2600, line: 453, type: !2603)
!2641 = !DILocation(line: 0, scope: !2599)
!2642 = !DILocation(line: 455, column: 10, scope: !2599)
!2643 = !DILocation(line: 455, column: 3, scope: !2599)
!2644 = distinct !DISubprogram(name: "lstat", scope: !2600, file: !2600, line: 460, type: !2601, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2645 = !{!2646, !2647}
!2646 = !DILocalVariable(name: "__path", arg: 1, scope: !2644, file: !2600, line: 460, type: !755)
!2647 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2644, file: !2600, line: 460, type: !2603)
!2648 = !DILocation(line: 0, scope: !2644)
!2649 = !DILocation(line: 462, column: 10, scope: !2644)
!2650 = !DILocation(line: 462, column: 3, scope: !2644)
!2651 = distinct !DISubprogram(name: "fstat", scope: !2600, file: !2600, line: 467, type: !2652, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2654)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!750, !750, !2603}
!2654 = !{!2655, !2656}
!2655 = !DILocalVariable(name: "__fd", arg: 1, scope: !2651, file: !2600, line: 467, type: !750)
!2656 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2651, file: !2600, line: 467, type: !2603)
!2657 = !DILocation(line: 0, scope: !2651)
!2658 = !DILocation(line: 469, column: 10, scope: !2651)
!2659 = !DILocation(line: 469, column: 3, scope: !2651)
!2660 = distinct !DISubprogram(name: "fstatat", scope: !2600, file: !2600, line: 474, type: !2661, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2663)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!750, !750, !755, !2603, !750}
!2663 = !{!2664, !2665, !2666, !2667}
!2664 = !DILocalVariable(name: "__fd", arg: 1, scope: !2660, file: !2600, line: 474, type: !750)
!2665 = !DILocalVariable(name: "__filename", arg: 2, scope: !2660, file: !2600, line: 474, type: !755)
!2666 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2660, file: !2600, line: 474, type: !2603)
!2667 = !DILocalVariable(name: "__flag", arg: 4, scope: !2660, file: !2600, line: 474, type: !750)
!2668 = !DILocation(line: 0, scope: !2660)
!2669 = !DILocation(line: 477, column: 10, scope: !2660)
!2670 = !DILocation(line: 477, column: 3, scope: !2660)
!2671 = distinct !DISubprogram(name: "mknod", scope: !2600, file: !2600, line: 483, type: !2672, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!750, !755, !2614, !2608}
!2674 = !{!2675, !2676, !2677}
!2675 = !DILocalVariable(name: "__path", arg: 1, scope: !2671, file: !2600, line: 483, type: !755)
!2676 = !DILocalVariable(name: "__mode", arg: 2, scope: !2671, file: !2600, line: 483, type: !2614)
!2677 = !DILocalVariable(name: "__dev", arg: 3, scope: !2671, file: !2600, line: 483, type: !2608)
!2678 = !DILocation(line: 0, scope: !2671)
!2679 = !DILocation(line: 485, column: 10, scope: !2671)
!2680 = !DILocation(line: 485, column: 3, scope: !2671)
!2681 = distinct !DISubprogram(name: "mknodat", scope: !2600, file: !2600, line: 491, type: !2682, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2684)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!750, !750, !755, !2614, !2608}
!2684 = !{!2685, !2686, !2687, !2688}
!2685 = !DILocalVariable(name: "__fd", arg: 1, scope: !2681, file: !2600, line: 491, type: !750)
!2686 = !DILocalVariable(name: "__path", arg: 2, scope: !2681, file: !2600, line: 491, type: !755)
!2687 = !DILocalVariable(name: "__mode", arg: 3, scope: !2681, file: !2600, line: 491, type: !2614)
!2688 = !DILocalVariable(name: "__dev", arg: 4, scope: !2681, file: !2600, line: 491, type: !2608)
!2689 = !DILocation(line: 0, scope: !2681)
!2690 = !DILocation(line: 494, column: 10, scope: !2681)
!2691 = !DILocation(line: 494, column: 3, scope: !2681)
!2692 = distinct !DISubprogram(name: "stat64", scope: !2600, file: !2600, line: 502, type: !2693, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2715)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!750, !755, !2695}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2605, line: 119, size: 1152, elements: !2697)
!2697 = !{!2698, !2699, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2711, !2712, !2713, !2714}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2696, file: !2605, line: 121, baseType: !2608, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2696, file: !2605, line: 123, baseType: !2700, size: 64, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2359, line: 149, baseType: !757)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2696, file: !2605, line: 124, baseType: !2612, size: 64, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2696, file: !2605, line: 125, baseType: !2614, size: 32, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2696, file: !2605, line: 132, baseType: !2616, size: 32, offset: 224)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2696, file: !2605, line: 133, baseType: !2618, size: 32, offset: 256)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2696, file: !2605, line: 135, baseType: !750, size: 32, offset: 288)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2696, file: !2605, line: 136, baseType: !2608, size: 64, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2696, file: !2605, line: 137, baseType: !2358, size: 64, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2696, file: !2605, line: 143, baseType: !2623, size: 64, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2696, file: !2605, line: 144, baseType: !2710, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2359, line: 180, baseType: !851)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2696, file: !2605, line: 152, baseType: !2627, size: 128, offset: 576)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2696, file: !2605, line: 153, baseType: !2627, size: 128, offset: 704)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2696, file: !2605, line: 154, baseType: !2627, size: 128, offset: 832)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2696, file: !2605, line: 164, baseType: !2637, size: 192, offset: 960)
!2715 = !{!2716, !2717}
!2716 = !DILocalVariable(name: "__path", arg: 1, scope: !2692, file: !2600, line: 502, type: !755)
!2717 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2692, file: !2600, line: 502, type: !2695)
!2718 = !DILocation(line: 0, scope: !2692)
!2719 = !DILocation(line: 504, column: 10, scope: !2692)
!2720 = !DILocation(line: 504, column: 3, scope: !2692)
!2721 = distinct !DISubprogram(name: "lstat64", scope: !2600, file: !2600, line: 509, type: !2693, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2722)
!2722 = !{!2723, !2724}
!2723 = !DILocalVariable(name: "__path", arg: 1, scope: !2721, file: !2600, line: 509, type: !755)
!2724 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2721, file: !2600, line: 509, type: !2695)
!2725 = !DILocation(line: 0, scope: !2721)
!2726 = !DILocation(line: 511, column: 10, scope: !2721)
!2727 = !DILocation(line: 511, column: 3, scope: !2721)
!2728 = distinct !DISubprogram(name: "fstat64", scope: !2600, file: !2600, line: 516, type: !2729, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2731)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!750, !750, !2695}
!2731 = !{!2732, !2733}
!2732 = !DILocalVariable(name: "__fd", arg: 1, scope: !2728, file: !2600, line: 516, type: !750)
!2733 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2728, file: !2600, line: 516, type: !2695)
!2734 = !DILocation(line: 0, scope: !2728)
!2735 = !DILocation(line: 518, column: 10, scope: !2728)
!2736 = !DILocation(line: 518, column: 3, scope: !2728)
!2737 = distinct !DISubprogram(name: "fstatat64", scope: !2600, file: !2600, line: 523, type: !2738, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2740)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!750, !750, !755, !2695, !750}
!2740 = !{!2741, !2742, !2743, !2744}
!2741 = !DILocalVariable(name: "__fd", arg: 1, scope: !2737, file: !2600, line: 523, type: !750)
!2742 = !DILocalVariable(name: "__filename", arg: 2, scope: !2737, file: !2600, line: 523, type: !755)
!2743 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2737, file: !2600, line: 523, type: !2695)
!2744 = !DILocalVariable(name: "__flag", arg: 4, scope: !2737, file: !2600, line: 523, type: !750)
!2745 = !DILocation(line: 0, scope: !2737)
!2746 = !DILocation(line: 526, column: 10, scope: !2737)
!2747 = !DILocation(line: 526, column: 3, scope: !2737)
!2748 = distinct !DISubprogram(name: "push_function_context", scope: !3, file: !3, line: 171, type: !2749, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{null}
!2751 = !DILocation(line: 173, column: 7, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 173, column: 7)
!2753 = !DILocation(line: 173, column: 12, scope: !2752)
!2754 = !DILocation(line: 173, column: 7, scope: !2748)
!2755 = !DILocation(line: 174, column: 5, scope: !2752)
!2756 = !DILocation(line: 176, column: 3, scope: !2748)
!2757 = !DILocation(line: 177, column: 3, scope: !2748)
!2758 = !DILocation(line: 178, column: 1, scope: !2748)
!2759 = distinct !DISubprogram(name: "allocate_struct_function", scope: !3, file: !3, line: 4118, type: !2760, scopeLine: 4119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2762)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{null, !880, !749}
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DILocalVariable(name: "fndecl", arg: 1, scope: !2759, file: !3, line: 4118, type: !880)
!2764 = !DILocalVariable(name: "abstract_p", arg: 2, scope: !2759, file: !3, line: 4118, type: !749)
!2765 = !DILocalVariable(name: "result", scope: !2759, file: !3, line: 4120, type: !880)
!2766 = !DILocalVariable(name: "fntype", scope: !2759, file: !3, line: 4121, type: !880)
!2767 = !DILocation(line: 0, scope: !2759)
!2768 = !DILocation(line: 4121, column: 17, scope: !2759)
!2769 = !DILocation(line: 4121, column: 26, scope: !2759)
!2770 = !DILocation(line: 4123, column: 10, scope: !2759)
!2771 = !DILocation(line: 4123, column: 8, scope: !2759)
!2772 = !DILocation(line: 4125, column: 9, scope: !2759)
!2773 = !DILocation(line: 4125, column: 28, scope: !2759)
!2774 = !DILocation(line: 4127, column: 3, scope: !2759)
!2775 = !DILocation(line: 4129, column: 7, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 4129, column: 7)
!2777 = !DILocation(line: 4129, column: 7, scope: !2759)
!2778 = !DILocation(line: 4130, column: 21, scope: !2776)
!2779 = !DILocation(line: 4130, column: 5, scope: !2776)
!2780 = !DILocation(line: 4130, column: 11, scope: !2776)
!2781 = !DILocation(line: 4130, column: 19, scope: !2776)
!2782 = !DILocation(line: 4133, column: 3, scope: !2759)
!2783 = !DILocation(line: 4136, column: 3, scope: !2759)
!2784 = !DILocation(line: 4138, column: 7, scope: !2759)
!2785 = !DILocation(line: 4140, column: 39, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 4139, column: 5)
!2787 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 4138, column: 7)
!2788 = !DILocation(line: 4140, column: 7, scope: !2786)
!2789 = !DILocation(line: 4140, column: 37, scope: !2786)
!2790 = !DILocation(line: 4141, column: 7, scope: !2786)
!2791 = !DILocation(line: 4141, column: 13, scope: !2786)
!2792 = !DILocation(line: 4141, column: 18, scope: !2786)
!2793 = !DILocation(line: 4142, column: 37, scope: !2786)
!2794 = !DILocation(line: 4142, column: 7, scope: !2786)
!2795 = !DILocation(line: 4142, column: 35, scope: !2786)
!2796 = !DILocation(line: 4145, column: 12, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 4145, column: 11)
!2798 = !DILocation(line: 4145, column: 23, scope: !2797)
!2799 = !DILocation(line: 4144, column: 16, scope: !2786)
!2800 = !DILocation(line: 4145, column: 26, scope: !2797)
!2801 = !DILocation(line: 4145, column: 11, scope: !2786)
!2802 = !DILocation(line: 4150, column: 4, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4146, column: 2)
!2804 = !DILocation(line: 4150, column: 10, scope: !2803)
!2805 = !DILocation(line: 4150, column: 25, scope: !2803)
!2806 = !DILocation(line: 4151, column: 2, scope: !2803)
!2807 = !DILocation(line: 4154, column: 5, scope: !2786)
!2808 = !DILocation(line: 4155, column: 5, scope: !2786)
!2809 = !DILocation(line: 4155, column: 8, scope: !2786)
!2810 = !DILocation(line: 4155, column: 32, scope: !2786)
!2811 = !DILocation(line: 4156, column: 5, scope: !2786)
!2812 = !DILocation(line: 4156, column: 9, scope: !2786)
!2813 = !DILocation(line: 4157, column: 12, scope: !2786)
!2814 = !DILocation(line: 4157, column: 9, scope: !2786)
!2815 = !DILocation(line: 4153, column: 7, scope: !2786)
!2816 = !DILocation(line: 4153, column: 13, scope: !2786)
!2817 = !DILocation(line: 4154, column: 2, scope: !2786)
!2818 = !DILocation(line: 4161, column: 30, scope: !2786)
!2819 = !DILocation(line: 4162, column: 5, scope: !2786)
!2820 = !DILocation(line: 4163, column: 1, scope: !2759)
!2821 = distinct !DISubprogram(name: "VEC_function_p_heap_safe_push", scope: !3, file: !3, line: 164, type: !2822, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{!2824, !2825, !2160}
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2826 = !{!2827, !2828}
!2827 = !DILocalVariable(name: "vec_", arg: 1, scope: !2821, file: !3, line: 164, type: !2825)
!2828 = !DILocalVariable(name: "obj_", arg: 2, scope: !2821, file: !3, line: 164, type: !2160)
!2829 = !DILocation(line: 0, scope: !2821)
!2830 = !DILocation(line: 164, column: 1, scope: !2821)
!2831 = distinct !DISubprogram(name: "set_cfun", scope: !3, file: !3, line: 4066, type: !2832, scopeLine: 4067, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2834)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{null, !1125}
!2834 = !{!2835}
!2835 = !DILocalVariable(name: "new_cfun", arg: 1, scope: !2831, file: !3, line: 4066, type: !1125)
!2836 = !DILocation(line: 0, scope: !2831)
!2837 = !DILocation(line: 4068, column: 7, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 4068, column: 7)
!2839 = !DILocation(line: 4068, column: 12, scope: !2838)
!2840 = !DILocation(line: 4068, column: 7, scope: !2831)
!2841 = !DILocation(line: 4070, column: 12, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 4069, column: 5)
!2843 = !DILocation(line: 4071, column: 41, scope: !2842)
!2844 = !DILocation(line: 4071, column: 62, scope: !2842)
!2845 = !DILocation(line: 4071, column: 7, scope: !2842)
!2846 = !DILocation(line: 4072, column: 5, scope: !2842)
!2847 = !DILocation(line: 4073, column: 1, scope: !2831)
!2848 = distinct !DISubprogram(name: "pop_function_context", scope: !3, file: !3, line: 184, type: !2749, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2849)
!2849 = !{!2850}
!2850 = !DILocalVariable(name: "p", scope: !2848, file: !3, line: 186, type: !1125)
!2851 = !DILocation(line: 186, column: 24, scope: !2848)
!2852 = !DILocation(line: 0, scope: !2848)
!2853 = !DILocation(line: 187, column: 3, scope: !2848)
!2854 = !DILocation(line: 188, column: 30, scope: !2848)
!2855 = !DILocation(line: 188, column: 25, scope: !2848)
!2856 = !DILocation(line: 191, column: 25, scope: !2848)
!2857 = !DILocation(line: 192, column: 23, scope: !2848)
!2858 = !DILocation(line: 193, column: 1, scope: !2848)
!2859 = distinct !DISubprogram(name: "VEC_function_p_base_pop", scope: !3, file: !3, line: 163, type: !2860, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2863)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!2160, !2862}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2863 = !{!2864, !2865}
!2864 = !DILocalVariable(name: "vec_", arg: 1, scope: !2859, file: !3, line: 163, type: !2862)
!2865 = !DILocalVariable(name: "obj_", scope: !2859, file: !3, line: 163, type: !2160)
!2866 = !DILocation(line: 0, scope: !2859)
!2867 = !DILocation(line: 163, column: 1, scope: !2859)
!2868 = distinct !DISubprogram(name: "free_after_parsing", scope: !3, file: !3, line: 200, type: !2832, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2869)
!2869 = !{!2870}
!2870 = !DILocalVariable(name: "f", arg: 1, scope: !2868, file: !3, line: 200, type: !1125)
!2871 = !DILocation(line: 0, scope: !2868)
!2872 = !DILocation(line: 202, column: 6, scope: !2868)
!2873 = !DILocation(line: 202, column: 15, scope: !2868)
!2874 = !DILocation(line: 203, column: 1, scope: !2868)
!2875 = distinct !DISubprogram(name: "free_after_compilation", scope: !3, file: !3, line: 210, type: !2832, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2876)
!2876 = !{!2877}
!2877 = !DILocalVariable(name: "f", arg: 1, scope: !2875, file: !3, line: 210, type: !1125)
!2878 = !DILocation(line: 0, scope: !2875)
!2879 = !DILocation(line: 212, column: 22, scope: !2875)
!2880 = !DILocation(line: 213, column: 22, scope: !2875)
!2881 = !DILocation(line: 215, column: 18, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 215, column: 7)
!2883 = !DILocation(line: 215, column: 7, scope: !2882)
!2884 = !DILocation(line: 215, column: 7, scope: !2875)
!2885 = !DILocation(line: 216, column: 5, scope: !2882)
!2886 = !DILocation(line: 218, column: 3, scope: !2875)
!2887 = !DILocation(line: 219, column: 6, scope: !2875)
!2888 = !DILocation(line: 219, column: 9, scope: !2875)
!2889 = !DILocation(line: 220, column: 6, scope: !2875)
!2890 = !DILocation(line: 220, column: 14, scope: !2875)
!2891 = !DILocation(line: 221, column: 6, scope: !2875)
!2892 = !DILocation(line: 221, column: 10, scope: !2875)
!2893 = !DILocation(line: 223, column: 17, scope: !2875)
!2894 = !DILocation(line: 224, column: 3, scope: !2875)
!2895 = !DILocation(line: 225, column: 1, scope: !2875)
!2896 = distinct !DISubprogram(name: "get_frame_size", scope: !3, file: !3, line: 232, type: !2897, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!851}
!2899 = !DILocation(line: 235, column: 13, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 234, column: 7)
!2901 = !DILocation(line: 235, column: 12, scope: !2900)
!2902 = !DILocation(line: 235, column: 5, scope: !2900)
!2903 = distinct !DISubprogram(name: "frame_offset_overflow", scope: !3, file: !3, line: 245, type: !2904, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2906)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!749, !851, !880}
!2906 = !{!2907, !2908, !2909}
!2907 = !DILocalVariable(name: "offset", arg: 1, scope: !2903, file: !3, line: 245, type: !851)
!2908 = !DILocalVariable(name: "func", arg: 2, scope: !2903, file: !3, line: 245, type: !880)
!2909 = !DILocalVariable(name: "size", scope: !2903, file: !3, line: 247, type: !757)
!2910 = !DILocation(line: 0, scope: !2903)
!2911 = !DILocation(line: 247, column: 56, scope: !2903)
!2912 = !DILocation(line: 249, column: 46, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 249, column: 7)
!2914 = !DILocation(line: 249, column: 71, scope: !2913)
!2915 = !DILocation(line: 249, column: 42, scope: !2913)
!2916 = !DILocation(line: 251, column: 9, scope: !2913)
!2917 = !DILocation(line: 249, column: 12, scope: !2913)
!2918 = !DILocation(line: 249, column: 7, scope: !2903)
!2919 = !DILocation(line: 253, column: 17, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 252, column: 5)
!2921 = !DILocation(line: 253, column: 7, scope: !2920)
!2922 = !DILocation(line: 255, column: 7, scope: !2920)
!2923 = !DILocation(line: 259, column: 1, scope: !2903)
!2924 = distinct !DISubprogram(name: "assign_stack_local_1", scope: !3, file: !3, line: 295, type: !2925, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2927)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!765, !13, !851, !750, !749}
!2927 = !{!2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939}
!2928 = !DILocalVariable(name: "mode", arg: 1, scope: !2924, file: !3, line: 295, type: !13)
!2929 = !DILocalVariable(name: "size", arg: 2, scope: !2924, file: !3, line: 295, type: !851)
!2930 = !DILocalVariable(name: "align", arg: 3, scope: !2924, file: !3, line: 296, type: !750)
!2931 = !DILocalVariable(name: "reduce_alignment_ok", arg: 4, scope: !2924, file: !3, line: 297, type: !749)
!2932 = !DILocalVariable(name: "x", scope: !2924, file: !3, line: 299, type: !765)
!2933 = !DILocalVariable(name: "addr", scope: !2924, file: !3, line: 299, type: !765)
!2934 = !DILocalVariable(name: "bigend_correction", scope: !2924, file: !3, line: 300, type: !750)
!2935 = !DILocalVariable(name: "alignment", scope: !2924, file: !3, line: 301, type: !7)
!2936 = !DILocalVariable(name: "alignment_in_bits", scope: !2924, file: !3, line: 301, type: !7)
!2937 = !DILocalVariable(name: "frame_off", scope: !2924, file: !3, line: 302, type: !750)
!2938 = !DILocalVariable(name: "frame_alignment", scope: !2924, file: !3, line: 302, type: !750)
!2939 = !DILocalVariable(name: "frame_phase", scope: !2924, file: !3, line: 302, type: !750)
!2940 = !DILocation(line: 0, scope: !2924)
!2941 = !DILocation(line: 304, column: 7, scope: !2924)
!2942 = !DILocation(line: 306, column: 19, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 305, column: 5)
!2944 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 304, column: 7)
!2945 = !DILocation(line: 307, column: 17, scope: !2943)
!2946 = !DILocation(line: 308, column: 5, scope: !2943)
!2947 = !DILocation(line: 311, column: 19, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 310, column: 5)
!2949 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 309, column: 12)
!2950 = !DILocation(line: 311, column: 37, scope: !2948)
!2951 = !DILocation(line: 312, column: 14, scope: !2948)
!2952 = !DILocation(line: 313, column: 5, scope: !2948)
!2953 = !DILocation(line: 317, column: 23, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 314, column: 12)
!2955 = !DILocation(line: 0, scope: !2944)
!2956 = !DILocation(line: 319, column: 33, scope: !2924)
!2957 = !DILocation(line: 322, column: 18, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 321, column: 7)
!2959 = !DILocation(line: 325, column: 25, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 325, column: 7)
!2961 = !DILocation(line: 325, column: 7, scope: !2924)
!2962 = !DILocation(line: 333, column: 17, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 333, column: 11)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 332, column: 5)
!2965 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 331, column: 7)
!2966 = !DILocation(line: 333, column: 43, scope: !2963)
!2967 = !DILocation(line: 333, column: 11, scope: !2964)
!2968 = !DILocation(line: 335, column: 22, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 335, column: 15)
!2970 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 334, column: 2)
!2971 = !DILocation(line: 335, column: 16, scope: !2969)
!2972 = !DILocation(line: 335, column: 15, scope: !2970)
!2973 = !DILocation(line: 336, column: 38, scope: !2969)
!2974 = !DILocation(line: 336, column: 6, scope: !2969)
!2975 = !DILocation(line: 344, column: 8, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 338, column: 6)
!2977 = !DILocation(line: 345, column: 19, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 345, column: 12)
!2979 = !DILocation(line: 345, column: 13, scope: !2978)
!2980 = !DILocation(line: 345, column: 12, scope: !2976)
!2981 = !DILocation(line: 350, column: 5, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 346, column: 3)
!2983 = !DILocation(line: 354, column: 31, scope: !2982)
!2984 = !DILocation(line: 355, column: 35, scope: !2982)
!2985 = !DILocation(line: 356, column: 3, scope: !2982)
!2986 = !DILocation(line: 328, column: 17, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 326, column: 5)
!2988 = !DILocation(line: 327, column: 25, scope: !2987)
!2989 = !DILocation(line: 361, column: 13, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 361, column: 7)
!2991 = !DILocation(line: 361, column: 36, scope: !2990)
!2992 = !DILocation(line: 361, column: 7, scope: !2924)
!2993 = !DILocation(line: 362, column: 34, scope: !2990)
!2994 = !DILocation(line: 362, column: 5, scope: !2990)
!2995 = !DILocation(line: 363, column: 13, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 363, column: 7)
!2997 = !DILocation(line: 363, column: 43, scope: !2996)
!2998 = !DILocation(line: 363, column: 7, scope: !2924)
!2999 = !DILocation(line: 364, column: 41, scope: !2996)
!3000 = !DILocation(line: 364, column: 5, scope: !2996)
!3001 = !DILocation(line: 385, column: 7, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 383, column: 11)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 378, column: 5)
!3004 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 375, column: 7)
!3005 = !DILocation(line: 385, column: 4, scope: !3002)
!3006 = !DILocation(line: 402, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 402, column: 7)
!3008 = !DILocation(line: 402, column: 7, scope: !2924)
!3009 = !DILocation(line: 403, column: 27, scope: !3007)
!3010 = !DILocation(line: 404, column: 6, scope: !3007)
!3011 = !DILocation(line: 403, column: 12, scope: !3007)
!3012 = !DILocation(line: 403, column: 5, scope: !3007)
!3013 = !DILocation(line: 408, column: 27, scope: !3007)
!3014 = !DILocation(line: 409, column: 6, scope: !3007)
!3015 = !DILocation(line: 408, column: 12, scope: !3007)
!3016 = !DILocation(line: 0, scope: !3007)
!3017 = !DILocation(line: 416, column: 7, scope: !2924)
!3018 = !DILocation(line: 417, column: 3, scope: !2924)
!3019 = !DILocation(line: 418, column: 3, scope: !2924)
!3020 = !DILocation(line: 418, column: 20, scope: !2924)
!3021 = !DILocation(line: 421, column: 7, scope: !2924)
!3022 = !DILocation(line: 421, column: 5, scope: !2924)
!3023 = !DILocation(line: 423, column: 30, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 423, column: 7)
!3025 = !DILocation(line: 423, column: 44, scope: !3024)
!3026 = !DILocation(line: 423, column: 7, scope: !3024)
!3027 = !DILocation(line: 423, column: 7, scope: !2924)
!3028 = !DILocation(line: 424, column: 18, scope: !3024)
!3029 = !DILocation(line: 424, column: 5, scope: !3024)
!3030 = !DILocation(line: 426, column: 3, scope: !2924)
!3031 = distinct !DISubprogram(name: "get_stack_local_alignment", scope: !3, file: !3, line: 264, type: !3032, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3034)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!7, !880, !13}
!3034 = !{!3035, !3036, !3037}
!3035 = !DILocalVariable(name: "type", arg: 1, scope: !3031, file: !3, line: 264, type: !880)
!3036 = !DILocalVariable(name: "mode", arg: 2, scope: !3031, file: !3, line: 264, type: !13)
!3037 = !DILocalVariable(name: "alignment", scope: !3031, file: !3, line: 266, type: !7)
!3038 = !DILocation(line: 0, scope: !3031)
!3039 = !DILocation(line: 268, column: 12, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 268, column: 7)
!3041 = !DILocation(line: 268, column: 7, scope: !3031)
!3042 = !DILocation(line: 269, column: 17, scope: !3040)
!3043 = !DILocation(line: 269, column: 5, scope: !3040)
!3044 = !DILocation(line: 271, column: 17, scope: !3040)
!3045 = !DILocation(line: 0, scope: !3040)
!3046 = !DILocation(line: 275, column: 9, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 275, column: 7)
!3048 = !DILocation(line: 275, column: 7, scope: !3031)
!3049 = !DILocation(line: 276, column: 29, scope: !3047)
!3050 = !DILocation(line: 276, column: 12, scope: !3047)
!3051 = !DILocation(line: 276, column: 5, scope: !3047)
!3052 = !DILocation(line: 278, column: 10, scope: !3031)
!3053 = !DILocation(line: 278, column: 3, scope: !3031)
!3054 = distinct !DISubprogram(name: "assign_stack_local", scope: !3, file: !3, line: 432, type: !3055, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3057)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!765, !13, !851, !750}
!3057 = !{!3058, !3059, !3060}
!3058 = !DILocalVariable(name: "mode", arg: 1, scope: !3054, file: !3, line: 432, type: !13)
!3059 = !DILocalVariable(name: "size", arg: 2, scope: !3054, file: !3, line: 432, type: !851)
!3060 = !DILocalVariable(name: "align", arg: 3, scope: !3054, file: !3, line: 432, type: !750)
!3061 = !DILocation(line: 0, scope: !3054)
!3062 = !DILocation(line: 434, column: 10, scope: !3054)
!3063 = !DILocation(line: 434, column: 3, scope: !3054)
!3064 = distinct !DISubprogram(name: "assign_stack_temp_for_type", scope: !3, file: !3, line: 694, type: !3065, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3067)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!765, !13, !851, !750, !880}
!3067 = !{!3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3078, !3079, !3084, !3085}
!3068 = !DILocalVariable(name: "mode", arg: 1, scope: !3064, file: !3, line: 694, type: !13)
!3069 = !DILocalVariable(name: "size", arg: 2, scope: !3064, file: !3, line: 694, type: !851)
!3070 = !DILocalVariable(name: "keep", arg: 3, scope: !3064, file: !3, line: 695, type: !750)
!3071 = !DILocalVariable(name: "type", arg: 4, scope: !3064, file: !3, line: 695, type: !880)
!3072 = !DILocalVariable(name: "align", scope: !3064, file: !3, line: 697, type: !7)
!3073 = !DILocalVariable(name: "p", scope: !3064, file: !3, line: 698, type: !759)
!3074 = !DILocalVariable(name: "best_p", scope: !3064, file: !3, line: 698, type: !759)
!3075 = !DILocalVariable(name: "selected", scope: !3064, file: !3, line: 698, type: !759)
!3076 = !DILocalVariable(name: "pp", scope: !3064, file: !3, line: 698, type: !3077)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!3078 = !DILocalVariable(name: "slot", scope: !3064, file: !3, line: 699, type: !765)
!3079 = !DILocalVariable(name: "alignment", scope: !3080, file: !3, line: 750, type: !750)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 749, column: 2)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 748, column: 11)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 741, column: 5)
!3083 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 740, column: 7)
!3084 = !DILocalVariable(name: "rounded_size", scope: !3080, file: !3, line: 751, type: !851)
!3085 = !DILocalVariable(name: "frame_offset_old", scope: !3086, file: !3, line: 777, type: !851)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 776, column: 5)
!3087 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 775, column: 7)
!3088 = !DILocation(line: 0, scope: !3064)
!3089 = !DILocation(line: 703, column: 3, scope: !3064)
!3090 = !DILocation(line: 706, column: 3, scope: !3064)
!3091 = !DILocation(line: 708, column: 11, scope: !3064)
!3092 = !DILocation(line: 717, column: 8, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 717, column: 7)
!3094 = !DILocation(line: 717, column: 7, scope: !3064)
!3095 = !DILocation(line: 719, column: 12, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 719, column: 7)
!3097 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 718, column: 5)
!3098 = !DILocation(line: 0, scope: !3096)
!3099 = !DILocation(line: 719, column: 7, scope: !3096)
!3100 = !DILocation(line: 721, column: 11, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 721, column: 8)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !3, line: 720, column: 2)
!3103 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 719, column: 7)
!3104 = !DILocation(line: 721, column: 17, scope: !3101)
!3105 = !DILocation(line: 721, column: 26, scope: !3101)
!3106 = !DILocation(line: 721, column: 32, scope: !3101)
!3107 = !DILocation(line: 721, column: 37, scope: !3101)
!3108 = !DILocation(line: 722, column: 8, scope: !3101)
!3109 = !DILocation(line: 722, column: 11, scope: !3101)
!3110 = !DILocation(line: 722, column: 30, scope: !3101)
!3111 = !DILocation(line: 723, column: 8, scope: !3101)
!3112 = !DILocation(line: 723, column: 39, scope: !3101)
!3113 = !DILocation(line: 723, column: 11, scope: !3101)
!3114 = !DILocation(line: 724, column: 8, scope: !3101)
!3115 = !DILocation(line: 724, column: 19, scope: !3101)
!3116 = !DILocation(line: 724, column: 24, scope: !3101)
!3117 = !DILocation(line: 724, column: 35, scope: !3101)
!3118 = !DILocation(line: 724, column: 45, scope: !3101)
!3119 = !DILocation(line: 724, column: 40, scope: !3101)
!3120 = !DILocation(line: 725, column: 5, scope: !3101)
!3121 = !DILocation(line: 725, column: 22, scope: !3101)
!3122 = !DILocation(line: 725, column: 33, scope: !3101)
!3123 = !DILocation(line: 725, column: 44, scope: !3101)
!3124 = !DILocation(line: 725, column: 55, scope: !3101)
!3125 = !DILocation(line: 725, column: 50, scope: !3101)
!3126 = !DILocation(line: 721, column: 8, scope: !3102)
!3127 = !DILocation(line: 727, column: 15, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 727, column: 12)
!3129 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 726, column: 6)
!3130 = !DILocation(line: 727, column: 21, scope: !3128)
!3131 = !DILocation(line: 727, column: 30, scope: !3128)
!3132 = !DILocation(line: 727, column: 36, scope: !3128)
!3133 = !DILocation(line: 727, column: 41, scope: !3128)
!3134 = !DILocation(line: 727, column: 12, scope: !3129)
!3135 = !DILocation(line: 730, column: 5, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 728, column: 3)
!3137 = !DILocation(line: 732, column: 5, scope: !3136)
!3138 = !DILocation(line: 719, column: 44, scope: !3103)
!3139 = !DILocation(line: 719, column: 7, scope: !3103)
!3140 = distinct !{!3140, !3099, !3141}
!3141 = !DILocation(line: 736, column: 2, scope: !3096)
!3142 = !DILocation(line: 740, column: 7, scope: !3083)
!3143 = !DILocation(line: 740, column: 7, scope: !3064)
!3144 = !DILocation(line: 743, column: 7, scope: !3082)
!3145 = !DILocation(line: 748, column: 11, scope: !3081)
!3146 = !DILocation(line: 748, column: 35, scope: !3081)
!3147 = !DILocation(line: 748, column: 11, scope: !3082)
!3148 = !DILocation(line: 750, column: 28, scope: !3080)
!3149 = !DILocation(line: 750, column: 34, scope: !3080)
!3150 = !DILocation(line: 0, scope: !3080)
!3151 = !DILocation(line: 751, column: 33, scope: !3080)
!3152 = !DILocation(line: 753, column: 16, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 753, column: 8)
!3154 = !DILocation(line: 753, column: 21, scope: !3153)
!3155 = !DILocation(line: 753, column: 36, scope: !3153)
!3156 = !DILocation(line: 753, column: 8, scope: !3080)
!3157 = !DILocation(line: 755, column: 12, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 754, column: 6)
!3159 = !DILocation(line: 756, column: 23, scope: !3158)
!3160 = !DILocation(line: 756, column: 34, scope: !3158)
!3161 = !DILocation(line: 756, column: 11, scope: !3158)
!3162 = !DILocation(line: 756, column: 18, scope: !3158)
!3163 = !DILocation(line: 757, column: 26, scope: !3158)
!3164 = !DILocation(line: 757, column: 31, scope: !3158)
!3165 = !DILocation(line: 757, column: 11, scope: !3158)
!3166 = !DILocation(line: 757, column: 16, scope: !3158)
!3167 = !DILocation(line: 758, column: 33, scope: !3158)
!3168 = !DILocation(line: 758, column: 45, scope: !3158)
!3169 = !DILocation(line: 758, column: 11, scope: !3158)
!3170 = !DILocation(line: 758, column: 23, scope: !3158)
!3171 = !DILocation(line: 759, column: 31, scope: !3158)
!3172 = !DILocation(line: 759, column: 41, scope: !3158)
!3173 = !DILocation(line: 759, column: 11, scope: !3158)
!3174 = !DILocation(line: 759, column: 21, scope: !3158)
!3175 = !DILocation(line: 760, column: 18, scope: !3158)
!3176 = !DILocation(line: 760, column: 11, scope: !3158)
!3177 = !DILocation(line: 760, column: 16, scope: !3158)
!3178 = !DILocation(line: 761, column: 27, scope: !3158)
!3179 = !DILocation(line: 761, column: 11, scope: !3158)
!3180 = !DILocation(line: 761, column: 17, scope: !3158)
!3181 = !DILocation(line: 762, column: 26, scope: !3158)
!3182 = !DILocation(line: 762, column: 11, scope: !3158)
!3183 = !DILocation(line: 762, column: 16, scope: !3158)
!3184 = !DILocation(line: 763, column: 8, scope: !3158)
!3185 = !DILocation(line: 765, column: 26, scope: !3158)
!3186 = !DILocation(line: 765, column: 24, scope: !3158)
!3187 = !DILocation(line: 768, column: 21, scope: !3158)
!3188 = !DILocation(line: 769, column: 26, scope: !3158)
!3189 = !DILocation(line: 770, column: 6, scope: !3158)
!3190 = !DILocation(line: 775, column: 16, scope: !3087)
!3191 = !DILocation(line: 775, column: 7, scope: !3064)
!3192 = !DILocation(line: 777, column: 40, scope: !3086)
!3193 = !DILocation(line: 0, scope: !3086)
!3194 = !DILocation(line: 779, column: 11, scope: !3086)
!3195 = !DILocation(line: 788, column: 7, scope: !3086)
!3196 = !DILocation(line: 790, column: 10, scope: !3086)
!3197 = !DILocation(line: 791, column: 12, scope: !3086)
!3198 = !DILocation(line: 789, column: 17, scope: !3086)
!3199 = !DILocation(line: 789, column: 10, scope: !3086)
!3200 = !DILocation(line: 789, column: 15, scope: !3086)
!3201 = !DILocation(line: 795, column: 10, scope: !3086)
!3202 = !DILocation(line: 795, column: 16, scope: !3086)
!3203 = !DILocation(line: 805, column: 31, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 804, column: 11)
!3205 = !DILocation(line: 805, column: 29, scope: !3204)
!3206 = !DILocation(line: 805, column: 5, scope: !3204)
!3207 = !DILocation(line: 805, column: 10, scope: !3204)
!3208 = !DILocation(line: 812, column: 21, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 811, column: 2)
!3210 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 810, column: 11)
!3211 = !DILocation(line: 812, column: 7, scope: !3209)
!3212 = !DILocation(line: 812, column: 19, scope: !3209)
!3213 = !DILocation(line: 813, column: 38, scope: !3209)
!3214 = !DILocation(line: 813, column: 36, scope: !3209)
!3215 = !DILocation(line: 813, column: 7, scope: !3209)
!3216 = !DILocation(line: 813, column: 17, scope: !3209)
!3217 = !DILocation(line: 822, column: 5, scope: !3086)
!3218 = !DILocation(line: 825, column: 6, scope: !3064)
!3219 = !DILocation(line: 825, column: 13, scope: !3064)
!3220 = !DILocation(line: 826, column: 6, scope: !3064)
!3221 = !DILocation(line: 826, column: 17, scope: !3064)
!3222 = !DILocation(line: 827, column: 6, scope: !3064)
!3223 = !DILocation(line: 827, column: 11, scope: !3064)
!3224 = !DILocation(line: 828, column: 14, scope: !3064)
!3225 = !DILocation(line: 828, column: 6, scope: !3064)
!3226 = !DILocation(line: 828, column: 12, scope: !3064)
!3227 = !DILocation(line: 829, column: 6, scope: !3064)
!3228 = !DILocation(line: 829, column: 11, scope: !3064)
!3229 = !DILocation(line: 831, column: 8, scope: !3064)
!3230 = !DILocation(line: 832, column: 3, scope: !3064)
!3231 = !DILocation(line: 833, column: 29, scope: !3064)
!3232 = !DILocation(line: 833, column: 3, scope: !3064)
!3233 = !DILocation(line: 836, column: 29, scope: !3064)
!3234 = !DILocation(line: 836, column: 10, scope: !3064)
!3235 = !DILocation(line: 837, column: 21, scope: !3064)
!3236 = !DILocation(line: 837, column: 19, scope: !3064)
!3237 = !DILocation(line: 842, column: 28, scope: !3064)
!3238 = !DILocation(line: 842, column: 35, scope: !3064)
!3239 = !DILocation(line: 842, column: 3, scope: !3064)
!3240 = !DILocation(line: 843, column: 3, scope: !3064)
!3241 = !DILocation(line: 846, column: 7, scope: !3064)
!3242 = !DILocation(line: 852, column: 23, scope: !3064)
!3243 = !DILocation(line: 848, column: 31, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 847, column: 5)
!3245 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 846, column: 7)
!3246 = !DILocation(line: 848, column: 7, scope: !3244)
!3247 = !DILocation(line: 848, column: 29, scope: !3244)
!3248 = !DILocation(line: 849, column: 7, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 849, column: 7)
!3250 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 849, column: 7)
!3251 = !DILocation(line: 849, column: 7, scope: !3250)
!3252 = !DILocation(line: 849, column: 7, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 849, column: 7)
!3254 = !DILocation(line: 849, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 849, column: 7)
!3256 = !DILocation(line: 852, column: 3, scope: !3064)
!3257 = !DILocation(line: 854, column: 3, scope: !3064)
!3258 = distinct !DISubprogram(name: "cut_slot_from_list", scope: !3, file: !3, line: 502, type: !3259, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3261)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{null, !759, !3077}
!3261 = !{!3262, !3263}
!3262 = !DILocalVariable(name: "temp", arg: 1, scope: !3258, file: !3, line: 502, type: !759)
!3263 = !DILocalVariable(name: "list", arg: 2, scope: !3258, file: !3, line: 502, type: !3077)
!3264 = !DILocation(line: 0, scope: !3258)
!3265 = !DILocation(line: 504, column: 13, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 504, column: 7)
!3267 = !DILocation(line: 504, column: 7, scope: !3266)
!3268 = !DILocation(line: 504, column: 7, scope: !3258)
!3269 = !DILocation(line: 505, column: 30, scope: !3266)
!3270 = !DILocation(line: 505, column: 17, scope: !3266)
!3271 = !DILocation(line: 505, column: 22, scope: !3266)
!3272 = !DILocation(line: 0, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 506, column: 7)
!3274 = !DILocation(line: 505, column: 5, scope: !3266)
!3275 = !DILocation(line: 506, column: 13, scope: !3273)
!3276 = !DILocation(line: 506, column: 7, scope: !3273)
!3277 = !DILocation(line: 506, column: 7, scope: !3258)
!3278 = !DILocation(line: 507, column: 22, scope: !3273)
!3279 = !DILocation(line: 507, column: 5, scope: !3273)
!3280 = !DILocation(line: 509, column: 11, scope: !3273)
!3281 = !DILocation(line: 511, column: 27, scope: !3258)
!3282 = !DILocation(line: 511, column: 14, scope: !3258)
!3283 = !DILocation(line: 512, column: 1, scope: !3258)
!3284 = distinct !DISubprogram(name: "insert_slot_to_list", scope: !3, file: !3, line: 517, type: !3259, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3285)
!3285 = !{!3286, !3287}
!3286 = !DILocalVariable(name: "temp", arg: 1, scope: !3284, file: !3, line: 517, type: !759)
!3287 = !DILocalVariable(name: "list", arg: 2, scope: !3284, file: !3, line: 517, type: !3077)
!3288 = !DILocation(line: 0, scope: !3284)
!3289 = !DILocation(line: 519, column: 16, scope: !3284)
!3290 = !DILocation(line: 519, column: 14, scope: !3284)
!3291 = !DILocation(line: 520, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 520, column: 7)
!3293 = !DILocation(line: 520, column: 7, scope: !3284)
!3294 = !DILocation(line: 521, column: 14, scope: !3292)
!3295 = !DILocation(line: 521, column: 19, scope: !3292)
!3296 = !DILocation(line: 521, column: 5, scope: !3292)
!3297 = !DILocation(line: 522, column: 9, scope: !3284)
!3298 = !DILocation(line: 522, column: 14, scope: !3284)
!3299 = !DILocation(line: 523, column: 9, scope: !3284)
!3300 = !DILocation(line: 524, column: 1, scope: !3284)
!3301 = distinct !DISubprogram(name: "temp_slots_at_level", scope: !3, file: !3, line: 529, type: !3302, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3304)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!3077, !750}
!3304 = !{!3305}
!3305 = !DILocalVariable(name: "level", arg: 1, scope: !3301, file: !3, line: 529, type: !750)
!3306 = !DILocation(line: 0, scope: !3301)
!3307 = !DILocation(line: 531, column: 22, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 531, column: 7)
!3309 = !DILocation(line: 531, column: 13, scope: !3308)
!3310 = !DILocation(line: 531, column: 7, scope: !3301)
!3311 = !DILocation(line: 532, column: 5, scope: !3308)
!3312 = !DILocation(line: 534, column: 12, scope: !3301)
!3313 = !DILocation(line: 534, column: 3, scope: !3301)
!3314 = distinct !DISubprogram(name: "insert_temp_slot_address", scope: !3, file: !3, line: 600, type: !3315, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3317)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{null, !765, !759}
!3317 = !{!3318, !3319, !3320, !3321}
!3318 = !DILocalVariable(name: "address", arg: 1, scope: !3314, file: !3, line: 600, type: !765)
!3319 = !DILocalVariable(name: "temp_slot", arg: 2, scope: !3314, file: !3, line: 600, type: !759)
!3320 = !DILocalVariable(name: "slot", scope: !3314, file: !3, line: 602, type: !1234)
!3321 = !DILocalVariable(name: "t", scope: !3314, file: !3, line: 603, type: !2142)
!3322 = !DILocation(line: 0, scope: !3314)
!3323 = !DILocation(line: 603, column: 39, scope: !3314)
!3324 = !DILocation(line: 604, column: 6, scope: !3314)
!3325 = !DILocation(line: 604, column: 14, scope: !3314)
!3326 = !DILocation(line: 605, column: 6, scope: !3314)
!3327 = !DILocation(line: 605, column: 16, scope: !3314)
!3328 = !DILocation(line: 606, column: 13, scope: !3314)
!3329 = !DILocation(line: 606, column: 6, scope: !3314)
!3330 = !DILocation(line: 606, column: 11, scope: !3314)
!3331 = !DILocation(line: 607, column: 36, scope: !3314)
!3332 = !DILocation(line: 607, column: 10, scope: !3314)
!3333 = !DILocation(line: 608, column: 9, scope: !3314)
!3334 = !DILocation(line: 609, column: 1, scope: !3314)
!3335 = distinct !DISubprogram(name: "assign_stack_temp", scope: !3, file: !3, line: 861, type: !3055, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3336)
!3336 = !{!3337, !3338, !3339}
!3337 = !DILocalVariable(name: "mode", arg: 1, scope: !3335, file: !3, line: 861, type: !13)
!3338 = !DILocalVariable(name: "size", arg: 2, scope: !3335, file: !3, line: 861, type: !851)
!3339 = !DILocalVariable(name: "keep", arg: 3, scope: !3335, file: !3, line: 861, type: !750)
!3340 = !DILocation(line: 0, scope: !3335)
!3341 = !DILocation(line: 863, column: 10, scope: !3335)
!3342 = !DILocation(line: 863, column: 3, scope: !3335)
!3343 = distinct !DISubprogram(name: "assign_temp", scope: !3, file: !3, line: 877, type: !3344, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!765, !880, !750, !750, !750}
!3346 = !{!3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3358}
!3347 = !DILocalVariable(name: "type_or_decl", arg: 1, scope: !3343, file: !3, line: 877, type: !880)
!3348 = !DILocalVariable(name: "keep", arg: 2, scope: !3343, file: !3, line: 877, type: !750)
!3349 = !DILocalVariable(name: "memory_required", arg: 3, scope: !3343, file: !3, line: 877, type: !750)
!3350 = !DILocalVariable(name: "dont_promote", arg: 4, scope: !3343, file: !3, line: 878, type: !750)
!3351 = !DILocalVariable(name: "type", scope: !3343, file: !3, line: 880, type: !880)
!3352 = !DILocalVariable(name: "decl", scope: !3343, file: !3, line: 880, type: !880)
!3353 = !DILocalVariable(name: "mode", scope: !3343, file: !3, line: 881, type: !13)
!3354 = !DILocalVariable(name: "unsignedp", scope: !3343, file: !3, line: 883, type: !750)
!3355 = !DILocalVariable(name: "size", scope: !3356, file: !3, line: 898, type: !851)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 897, column: 5)
!3357 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 896, column: 7)
!3358 = !DILocalVariable(name: "tmp", scope: !3356, file: !3, line: 899, type: !765)
!3359 = !DILocation(line: 0, scope: !3343)
!3360 = !DILocation(line: 883, column: 3, scope: !3343)
!3361 = !DILocation(line: 886, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 886, column: 7)
!3363 = !DILocation(line: 886, column: 7, scope: !3343)
!3364 = !DILocation(line: 887, column: 33, scope: !3362)
!3365 = !DILocation(line: 891, column: 10, scope: !3343)
!3366 = !DILocation(line: 887, column: 5, scope: !3362)
!3367 = !DILocation(line: 0, scope: !3362)
!3368 = !DILocation(line: 893, column: 15, scope: !3343)
!3369 = !DILocation(line: 893, column: 13, scope: !3343)
!3370 = !DILocation(line: 896, column: 12, scope: !3357)
!3371 = !DILocation(line: 896, column: 26, scope: !3357)
!3372 = !DILocation(line: 896, column: 23, scope: !3357)
!3373 = !DILocation(line: 898, column: 28, scope: !3356)
!3374 = !DILocation(line: 0, scope: !3356)
!3375 = !DILocation(line: 903, column: 11, scope: !3356)
!3376 = !DILocation(line: 910, column: 9, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 909, column: 16)
!3378 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 903, column: 11)
!3379 = !DILocation(line: 910, column: 2, scope: !3377)
!3380 = !DILocation(line: 0, scope: !3378)
!3381 = !DILocation(line: 916, column: 11, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 916, column: 11)
!3383 = !DILocation(line: 916, column: 24, scope: !3382)
!3384 = !DILocation(line: 916, column: 16, scope: !3382)
!3385 = !DILocation(line: 917, column: 7, scope: !3382)
!3386 = !DILocation(line: 917, column: 41, scope: !3382)
!3387 = !DILocation(line: 916, column: 11, scope: !3356)
!3388 = !DILocation(line: 919, column: 4, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 918, column: 2)
!3390 = !DILocation(line: 921, column: 2, scope: !3389)
!3391 = !DILocation(line: 923, column: 13, scope: !3356)
!3392 = !DILocation(line: 928, column: 9, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 928, column: 7)
!3394 = !DILocation(line: 928, column: 7, scope: !3343)
!3395 = !DILocation(line: 929, column: 12, scope: !3393)
!3396 = !DILocation(line: 929, column: 5, scope: !3393)
!3397 = !DILocation(line: 932, column: 10, scope: !3343)
!3398 = !DILocation(line: 932, column: 3, scope: !3343)
!3399 = !DILocation(line: 933, column: 1, scope: !3343)
!3400 = distinct !DISubprogram(name: "update_temp_slot_address", scope: !3, file: !3, line: 1006, type: !3401, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !765, !765}
!3403 = !{!3404, !3405, !3406}
!3404 = !DILocalVariable(name: "old_rtx", arg: 1, scope: !3400, file: !3, line: 1006, type: !765)
!3405 = !DILocalVariable(name: "new_rtx", arg: 2, scope: !3400, file: !3, line: 1006, type: !765)
!3406 = !DILocalVariable(name: "p", scope: !3400, file: !3, line: 1008, type: !759)
!3407 = !DILocation(line: 1036, column: 2, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1035, column: 11)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 1022, column: 5)
!3410 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1021, column: 7)
!3411 = !DILocation(line: 0, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1026, column: 11)
!3413 = !DILocation(line: 1010, column: 7, scope: !3400)
!3414 = !DILocation(line: 0, scope: !3400)
!3415 = !DILocation(line: 1010, column: 7, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1010, column: 7)
!3417 = !DILocation(line: 1013, column: 7, scope: !3400)
!3418 = !DILocation(line: 1021, column: 9, scope: !3410)
!3419 = !DILocation(line: 1021, column: 7, scope: !3400)
!3420 = !DILocation(line: 1023, column: 11, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1023, column: 11)
!3422 = !DILocation(line: 1023, column: 30, scope: !3421)
!3423 = !DILocation(line: 1023, column: 11, scope: !3409)
!3424 = !DILocation(line: 1026, column: 11, scope: !3412)
!3425 = !DILocation(line: 1026, column: 11, scope: !3409)
!3426 = !DILocation(line: 1028, column: 30, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1027, column: 2)
!3428 = !DILocation(line: 1028, column: 4, scope: !3427)
!3429 = !DILocation(line: 1029, column: 30, scope: !3427)
!3430 = !DILocation(line: 1029, column: 4, scope: !3427)
!3431 = !DILocation(line: 1032, column: 35, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1032, column: 16)
!3433 = !DILocation(line: 1032, column: 16, scope: !3412)
!3434 = !DILocation(line: 1035, column: 24, scope: !3408)
!3435 = !DILocation(line: 1035, column: 43, scope: !3408)
!3436 = !DILocation(line: 1035, column: 11, scope: !3408)
!3437 = !DILocation(line: 0, scope: !3408)
!3438 = !DILocation(line: 1035, column: 11, scope: !3409)
!3439 = !DILocation(line: 1036, column: 47, scope: !3408)
!3440 = !DILocation(line: 1037, column: 48, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 1037, column: 16)
!3442 = !DILocation(line: 1037, column: 16, scope: !3441)
!3443 = !DILocation(line: 0, scope: !3441)
!3444 = !DILocation(line: 1037, column: 16, scope: !3408)
!3445 = !DILocation(line: 1038, column: 2, scope: !3441)
!3446 = !DILocation(line: 1039, column: 16, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 1039, column: 16)
!3448 = !DILocation(line: 0, scope: !3447)
!3449 = !DILocation(line: 1039, column: 16, scope: !3441)
!3450 = !DILocation(line: 1040, column: 47, scope: !3447)
!3451 = !DILocation(line: 1040, column: 2, scope: !3447)
!3452 = !DILocation(line: 1041, column: 48, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 1041, column: 16)
!3454 = !DILocation(line: 1041, column: 16, scope: !3453)
!3455 = !DILocation(line: 1041, column: 16, scope: !3447)
!3456 = !DILocation(line: 1042, column: 28, scope: !3453)
!3457 = !DILocation(line: 1042, column: 47, scope: !3453)
!3458 = !DILocation(line: 1042, column: 2, scope: !3453)
!3459 = !DILocation(line: 1048, column: 3, scope: !3400)
!3460 = !DILocation(line: 1049, column: 1, scope: !3400)
!3461 = distinct !DISubprogram(name: "find_temp_slot_from_address", scope: !3, file: !3, line: 635, type: !3462, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3464)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!759, !765}
!3464 = !{!3465, !3466, !3467, !3468, !3469}
!3465 = !DILocalVariable(name: "x", arg: 1, scope: !3461, file: !3, line: 635, type: !765)
!3466 = !DILocalVariable(name: "p", scope: !3461, file: !3, line: 637, type: !759)
!3467 = !DILocalVariable(name: "tmp", scope: !3461, file: !3, line: 638, type: !2143)
!3468 = !DILocalVariable(name: "t", scope: !3461, file: !3, line: 638, type: !2142)
!3469 = !DILocalVariable(name: "i", scope: !3470, file: !3, line: 664, type: !750)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 663, column: 5)
!3471 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 660, column: 7)
!3472 = !DILocation(line: 0, scope: !3461)
!3473 = !DILocation(line: 638, column: 3, scope: !3461)
!3474 = !DILocation(line: 642, column: 7, scope: !3461)
!3475 = !DILocation(line: 642, column: 15, scope: !3461)
!3476 = !DILocation(line: 643, column: 7, scope: !3461)
!3477 = !DILocation(line: 643, column: 17, scope: !3461)
!3478 = !DILocation(line: 644, column: 14, scope: !3461)
!3479 = !DILocation(line: 644, column: 7, scope: !3461)
!3480 = !DILocation(line: 644, column: 12, scope: !3461)
!3481 = !DILocation(line: 646, column: 26, scope: !3461)
!3482 = !DILocation(line: 646, column: 5, scope: !3461)
!3483 = !DILocation(line: 647, column: 7, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 647, column: 7)
!3485 = !DILocation(line: 647, column: 7, scope: !3461)
!3486 = !DILocation(line: 648, column: 15, scope: !3484)
!3487 = !DILocation(line: 648, column: 5, scope: !3484)
!3488 = !DILocation(line: 652, column: 7, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 652, column: 7)
!3490 = !DILocation(line: 652, column: 20, scope: !3489)
!3491 = !DILocation(line: 652, column: 28, scope: !3489)
!3492 = !DILocation(line: 652, column: 31, scope: !3489)
!3493 = !DILocation(line: 653, column: 7, scope: !3489)
!3494 = !DILocation(line: 653, column: 15, scope: !3489)
!3495 = !DILocation(line: 653, column: 58, scope: !3489)
!3496 = !DILocation(line: 652, column: 7, scope: !3461)
!3497 = !DILocation(line: 655, column: 12, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 655, column: 12)
!3499 = !DILocation(line: 655, column: 25, scope: !3498)
!3500 = !DILocation(line: 655, column: 33, scope: !3498)
!3501 = !DILocation(line: 655, column: 36, scope: !3498)
!3502 = !DILocation(line: 656, column: 5, scope: !3498)
!3503 = !DILocation(line: 656, column: 13, scope: !3498)
!3504 = !DILocation(line: 656, column: 56, scope: !3498)
!3505 = !DILocation(line: 655, column: 12, scope: !3489)
!3506 = !DILocation(line: 660, column: 7, scope: !3471)
!3507 = !DILocation(line: 660, column: 20, scope: !3471)
!3508 = !DILocation(line: 661, column: 7, scope: !3471)
!3509 = !DILocation(line: 661, column: 10, scope: !3471)
!3510 = !DILocation(line: 661, column: 25, scope: !3471)
!3511 = !DILocation(line: 661, column: 22, scope: !3471)
!3512 = !DILocation(line: 662, column: 7, scope: !3471)
!3513 = !DILocation(line: 662, column: 10, scope: !3471)
!3514 = !DILocation(line: 660, column: 7, scope: !3461)
!3515 = !DILocation(line: 665, column: 16, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 665, column: 7)
!3517 = !DILocation(line: 0, scope: !3470)
!3518 = !DILocation(line: 0, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 668, column: 10)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 667, column: 4)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 666, column: 2)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 666, column: 2)
!3523 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 665, column: 7)
!3524 = !DILocation(line: 665, column: 12, scope: !3516)
!3525 = !DILocation(line: 0, scope: !3516)
!3526 = !DILocation(line: 665, column: 37, scope: !3523)
!3527 = !DILocation(line: 665, column: 7, scope: !3516)
!3528 = !DILocation(line: 666, column: 12, scope: !3522)
!3529 = !DILocation(line: 666, column: 7, scope: !3522)
!3530 = !DILocation(line: 0, scope: !3522)
!3531 = !DILocation(line: 666, column: 2, scope: !3522)
!3532 = !DILocation(line: 668, column: 10, scope: !3519)
!3533 = !DILocation(line: 668, column: 37, scope: !3519)
!3534 = !DILocation(line: 668, column: 31, scope: !3519)
!3535 = !DILocation(line: 669, column: 3, scope: !3519)
!3536 = !DILocation(line: 669, column: 49, scope: !3519)
!3537 = !DILocation(line: 669, column: 44, scope: !3519)
!3538 = !DILocation(line: 669, column: 27, scope: !3519)
!3539 = !DILocation(line: 668, column: 10, scope: !3520)
!3540 = !DILocation(line: 666, column: 47, scope: !3521)
!3541 = !DILocation(line: 666, column: 2, scope: !3521)
!3542 = distinct !{!3542, !3531, !3543}
!3543 = !DILocation(line: 671, column: 4, scope: !3522)
!3544 = !DILocation(line: 665, column: 44, scope: !3523)
!3545 = !DILocation(line: 665, column: 7, scope: !3523)
!3546 = distinct !{!3546, !3527, !3547}
!3547 = !DILocation(line: 671, column: 4, scope: !3516)
!3548 = !DILocation(line: 674, column: 3, scope: !3461)
!3549 = !DILocation(line: 675, column: 1, scope: !3461)
!3550 = distinct !DISubprogram(name: "mark_temp_addr_taken", scope: !3, file: !3, line: 1055, type: !3551, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !765}
!3553 = !{!3554, !3555}
!3554 = !DILocalVariable(name: "x", arg: 1, scope: !3550, file: !3, line: 1055, type: !765)
!3555 = !DILocalVariable(name: "p", scope: !3550, file: !3, line: 1057, type: !759)
!3556 = !DILocation(line: 0, scope: !3550)
!3557 = !DILocation(line: 1059, column: 9, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 1059, column: 7)
!3559 = !DILocation(line: 1059, column: 7, scope: !3550)
!3560 = !DILocation(line: 1064, column: 8, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 1064, column: 7)
!3562 = !DILocation(line: 1064, column: 18, scope: !3561)
!3563 = !DILocation(line: 1064, column: 21, scope: !3561)
!3564 = !DILocation(line: 1064, column: 7, scope: !3550)
!3565 = !DILocation(line: 1067, column: 7, scope: !3550)
!3566 = !DILocation(line: 1068, column: 9, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 1068, column: 7)
!3568 = !DILocation(line: 1068, column: 7, scope: !3550)
!3569 = !DILocation(line: 1069, column: 8, scope: !3567)
!3570 = !DILocation(line: 1069, column: 19, scope: !3567)
!3571 = !DILocation(line: 1069, column: 5, scope: !3567)
!3572 = !DILocation(line: 1070, column: 1, scope: !3550)
!3573 = distinct !DISubprogram(name: "preserve_temp_slots", scope: !3, file: !3, line: 1082, type: !3551, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3574)
!3574 = !{!3575, !3576, !3577, !3578}
!3575 = !DILocalVariable(name: "x", arg: 1, scope: !3573, file: !3, line: 1082, type: !765)
!3576 = !DILocalVariable(name: "p", scope: !3573, file: !3, line: 1084, type: !759)
!3577 = !DILocalVariable(name: "next", scope: !3573, file: !3, line: 1084, type: !759)
!3578 = !DILocalVariable(name: "q", scope: !3579, file: !3, line: 1132, type: !759)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1129, column: 5)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1128, column: 7)
!3581 = !DILocation(line: 0, scope: !3573)
!3582 = !DILocation(line: 1088, column: 9, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1088, column: 7)
!3584 = !DILocation(line: 1088, column: 7, scope: !3573)
!3585 = !DILocation(line: 1090, column: 38, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 1090, column: 7)
!3587 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 1089, column: 5)
!3588 = !DILocation(line: 1090, column: 17, scope: !3586)
!3589 = !DILocation(line: 1090, column: 16, scope: !3586)
!3590 = !DILocation(line: 1090, column: 12, scope: !3586)
!3591 = !DILocation(line: 0, scope: !3586)
!3592 = !DILocation(line: 1090, column: 7, scope: !3586)
!3593 = !DILocation(line: 1092, column: 14, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1091, column: 2)
!3595 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 1090, column: 7)
!3596 = !DILocation(line: 1094, column: 11, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 1094, column: 8)
!3598 = !DILocation(line: 1094, column: 8, scope: !3597)
!3599 = !DILocation(line: 1094, column: 8, scope: !3594)
!3600 = !DILocation(line: 1095, column: 29, scope: !3597)
!3601 = !DILocation(line: 1095, column: 45, scope: !3597)
!3602 = !DILocation(line: 1095, column: 6, scope: !3597)
!3603 = !DILocation(line: 1090, column: 7, scope: !3595)
!3604 = distinct !{!3604, !3592, !3605}
!3605 = !DILocation(line: 1096, column: 2, scope: !3586)
!3606 = !DILocation(line: 1105, column: 7, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1105, column: 7)
!3608 = !DILocation(line: 1105, column: 17, scope: !3607)
!3609 = !DILocation(line: 1105, column: 20, scope: !3607)
!3610 = !DILocation(line: 1105, column: 7, scope: !3573)
!3611 = !DILocation(line: 1106, column: 9, scope: !3607)
!3612 = !DILocation(line: 1106, column: 5, scope: !3607)
!3613 = !DILocation(line: 1111, column: 14, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1111, column: 7)
!3615 = !DILocation(line: 1111, column: 19, scope: !3614)
!3616 = !DILocation(line: 1111, column: 29, scope: !3614)
!3617 = !DILocation(line: 1111, column: 32, scope: !3614)
!3618 = !DILocation(line: 1111, column: 7, scope: !3573)
!3619 = !DILocation(line: 1113, column: 38, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1113, column: 7)
!3621 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1112, column: 5)
!3622 = !DILocation(line: 1113, column: 17, scope: !3620)
!3623 = !DILocation(line: 1113, column: 16, scope: !3620)
!3624 = !DILocation(line: 1113, column: 12, scope: !3620)
!3625 = !DILocation(line: 0, scope: !3620)
!3626 = !DILocation(line: 1113, column: 7, scope: !3620)
!3627 = !DILocation(line: 1115, column: 14, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 1114, column: 2)
!3629 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1113, column: 7)
!3630 = !DILocation(line: 1117, column: 11, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 1117, column: 8)
!3632 = !DILocation(line: 1117, column: 8, scope: !3631)
!3633 = !DILocation(line: 1117, column: 8, scope: !3628)
!3634 = !DILocation(line: 1118, column: 29, scope: !3631)
!3635 = !DILocation(line: 1118, column: 45, scope: !3631)
!3636 = !DILocation(line: 1118, column: 6, scope: !3631)
!3637 = !DILocation(line: 1113, column: 7, scope: !3629)
!3638 = distinct !{!3638, !3626, !3639}
!3639 = !DILocation(line: 1119, column: 2, scope: !3620)
!3640 = !DILocation(line: 1125, column: 7, scope: !3573)
!3641 = !DILocation(line: 1126, column: 9, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1125, column: 7)
!3643 = !DILocation(line: 1126, column: 5, scope: !3642)
!3644 = !DILocation(line: 1128, column: 9, scope: !3580)
!3645 = !DILocation(line: 1128, column: 7, scope: !3573)
!3646 = !DILocation(line: 1134, column: 14, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 1134, column: 11)
!3648 = !DILocation(line: 1134, column: 23, scope: !3647)
!3649 = !DILocation(line: 1134, column: 20, scope: !3647)
!3650 = !DILocation(line: 1134, column: 11, scope: !3579)
!3651 = !DILocation(line: 1136, column: 14, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1136, column: 4)
!3653 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 1135, column: 2)
!3654 = !DILocation(line: 1136, column: 13, scope: !3652)
!3655 = !DILocation(line: 0, scope: !3579)
!3656 = !DILocation(line: 1136, column: 9, scope: !3652)
!3657 = !DILocation(line: 0, scope: !3652)
!3658 = !DILocation(line: 1136, column: 4, scope: !3652)
!3659 = !DILocation(line: 1138, column: 18, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 1137, column: 6)
!3661 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 1136, column: 4)
!3662 = !DILocation(line: 1140, column: 14, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1140, column: 12)
!3664 = !DILocation(line: 1140, column: 19, scope: !3663)
!3665 = !DILocation(line: 1140, column: 25, scope: !3663)
!3666 = !DILocation(line: 1140, column: 22, scope: !3663)
!3667 = !DILocation(line: 1140, column: 12, scope: !3660)
!3668 = !DILocation(line: 1141, column: 26, scope: !3663)
!3669 = !DILocation(line: 1141, column: 42, scope: !3663)
!3670 = !DILocation(line: 1141, column: 3, scope: !3663)
!3671 = !DILocation(line: 1136, column: 4, scope: !3661)
!3672 = distinct !{!3672, !3658, !3673}
!3673 = !DILocation(line: 1142, column: 6, scope: !3652)
!3674 = !DILocation(line: 1144, column: 27, scope: !3653)
!3675 = !DILocation(line: 1144, column: 43, scope: !3653)
!3676 = !DILocation(line: 1144, column: 4, scope: !3653)
!3677 = !DILocation(line: 1145, column: 7, scope: !3653)
!3678 = !DILocation(line: 1145, column: 18, scope: !3653)
!3679 = !DILocation(line: 1146, column: 2, scope: !3653)
!3680 = !DILocation(line: 1151, column: 34, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1151, column: 3)
!3682 = !DILocation(line: 1151, column: 13, scope: !3681)
!3683 = !DILocation(line: 1151, column: 12, scope: !3681)
!3684 = !DILocation(line: 1151, column: 8, scope: !3681)
!3685 = !DILocation(line: 0, scope: !3681)
!3686 = !DILocation(line: 1151, column: 3, scope: !3681)
!3687 = !DILocation(line: 1153, column: 17, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 1152, column: 5)
!3689 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1151, column: 3)
!3690 = !DILocation(line: 1155, column: 15, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1155, column: 11)
!3692 = !DILocation(line: 1155, column: 12, scope: !3691)
!3693 = !DILocation(line: 1155, column: 11, scope: !3688)
!3694 = !DILocation(line: 1156, column: 25, scope: !3691)
!3695 = !DILocation(line: 1156, column: 41, scope: !3691)
!3696 = !DILocation(line: 1156, column: 2, scope: !3691)
!3697 = !DILocation(line: 1151, column: 3, scope: !3689)
!3698 = distinct !{!3698, !3686, !3699}
!3699 = !DILocation(line: 1157, column: 5, scope: !3681)
!3700 = !DILocation(line: 1158, column: 1, scope: !3573)
!3701 = distinct !DISubprogram(name: "move_slot_to_level", scope: !3, file: !3, line: 551, type: !3702, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3704)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !759, !750}
!3704 = !{!3705, !3706}
!3705 = !DILocalVariable(name: "temp", arg: 1, scope: !3701, file: !3, line: 551, type: !759)
!3706 = !DILocalVariable(name: "level", arg: 2, scope: !3701, file: !3, line: 551, type: !750)
!3707 = !DILocation(line: 0, scope: !3701)
!3708 = !DILocation(line: 553, column: 56, scope: !3701)
!3709 = !DILocation(line: 553, column: 29, scope: !3701)
!3710 = !DILocation(line: 553, column: 3, scope: !3701)
!3711 = !DILocation(line: 554, column: 30, scope: !3701)
!3712 = !DILocation(line: 554, column: 3, scope: !3701)
!3713 = !DILocation(line: 555, column: 15, scope: !3701)
!3714 = !DILocation(line: 556, column: 1, scope: !3701)
!3715 = distinct !DISubprogram(name: "free_temp_slots", scope: !3, file: !3, line: 1164, type: !2749, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3716)
!3716 = !{!3717, !3718, !3719}
!3717 = !DILocalVariable(name: "p", scope: !3715, file: !3, line: 1166, type: !759)
!3718 = !DILocalVariable(name: "next", scope: !3715, file: !3, line: 1166, type: !759)
!3719 = !DILocalVariable(name: "some_available", scope: !3715, file: !3, line: 1167, type: !749)
!3720 = !DILocation(line: 0, scope: !3715)
!3721 = !DILocation(line: 1169, column: 34, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 1169, column: 3)
!3723 = !DILocation(line: 1169, column: 13, scope: !3722)
!3724 = !DILocation(line: 1169, column: 12, scope: !3722)
!3725 = !DILocation(line: 1169, column: 8, scope: !3722)
!3726 = !DILocation(line: 1167, column: 8, scope: !3715)
!3727 = !DILocation(line: 0, scope: !3722)
!3728 = !DILocation(line: 1169, column: 3, scope: !3722)
!3729 = !DILocation(line: 1171, column: 17, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1170, column: 5)
!3731 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1169, column: 3)
!3732 = !DILocation(line: 1173, column: 15, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 1173, column: 11)
!3734 = !DILocation(line: 1173, column: 12, scope: !3733)
!3735 = !DILocation(line: 1173, column: 11, scope: !3730)
!3736 = !DILocation(line: 1175, column: 4, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 1174, column: 2)
!3738 = !DILocation(line: 1177, column: 2, scope: !3737)
!3739 = !DILocation(line: 1169, column: 3, scope: !3731)
!3740 = distinct !{!3740, !3728, !3741}
!3741 = !DILocation(line: 1178, column: 5, scope: !3722)
!3742 = !DILocation(line: 1180, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 1180, column: 7)
!3744 = !DILocation(line: 1180, column: 7, scope: !3715)
!3745 = !DILocation(line: 1182, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1181, column: 5)
!3747 = !DILocation(line: 1183, column: 7, scope: !3746)
!3748 = !DILocation(line: 1184, column: 5, scope: !3746)
!3749 = !DILocation(line: 1185, column: 1, scope: !3715)
!3750 = distinct !DISubprogram(name: "make_slot_available", scope: !3, file: !3, line: 561, type: !3751, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3753)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !759}
!3753 = !{!3754}
!3754 = !DILocalVariable(name: "temp", arg: 1, scope: !3750, file: !3, line: 561, type: !759)
!3755 = !DILocation(line: 0, scope: !3750)
!3756 = !DILocation(line: 563, column: 56, scope: !3750)
!3757 = !DILocation(line: 563, column: 29, scope: !3750)
!3758 = !DILocation(line: 563, column: 3, scope: !3750)
!3759 = !DILocation(line: 564, column: 3, scope: !3750)
!3760 = !DILocation(line: 565, column: 9, scope: !3750)
!3761 = !DILocation(line: 565, column: 16, scope: !3750)
!3762 = !DILocation(line: 566, column: 15, scope: !3750)
!3763 = !DILocation(line: 567, column: 1, scope: !3750)
!3764 = distinct !DISubprogram(name: "remove_unused_temp_slot_addresses", scope: !3, file: !3, line: 625, type: !2749, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!3765 = !DILocation(line: 627, column: 18, scope: !3764)
!3766 = !DILocation(line: 627, column: 3, scope: !3764)
!3767 = !DILocation(line: 630, column: 1, scope: !3764)
!3768 = distinct !DISubprogram(name: "combine_temp_slots", scope: !3, file: !3, line: 942, type: !2749, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3769 = !{!3770, !3771, !3772, !3773, !3774, !3775, !3779}
!3770 = !DILocalVariable(name: "p", scope: !3768, file: !3, line: 944, type: !759)
!3771 = !DILocalVariable(name: "q", scope: !3768, file: !3, line: 944, type: !759)
!3772 = !DILocalVariable(name: "next", scope: !3768, file: !3, line: 944, type: !759)
!3773 = !DILocalVariable(name: "next_q", scope: !3768, file: !3, line: 944, type: !759)
!3774 = !DILocalVariable(name: "num_slots", scope: !3768, file: !3, line: 945, type: !750)
!3775 = !DILocalVariable(name: "delete_p", scope: !3776, file: !3, line: 961, type: !750)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 960, column: 5)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 959, column: 3)
!3778 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 959, column: 3)
!3779 = !DILocalVariable(name: "delete_q", scope: !3780, file: !3, line: 970, type: !750)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 969, column: 2)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 968, column: 7)
!3782 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 968, column: 7)
!3783 = !DILocation(line: 949, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 949, column: 7)
!3785 = !DILocation(line: 949, column: 7, scope: !3768)
!3786 = !DILocation(line: 954, column: 9, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 954, column: 7)
!3788 = !DILocation(line: 954, column: 7, scope: !3768)
!3789 = !DILocation(line: 0, scope: !3768)
!3790 = !DILocation(line: 0, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 956, column: 11)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 955, column: 5)
!3793 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 955, column: 5)
!3794 = !DILocation(line: 955, column: 10, scope: !3793)
!3795 = !DILocation(line: 0, scope: !3793)
!3796 = !DILocation(line: 955, column: 5, scope: !3793)
!3797 = !DILocation(line: 956, column: 27, scope: !3791)
!3798 = !DILocation(line: 956, column: 41, scope: !3791)
!3799 = !DILocation(line: 956, column: 46, scope: !3791)
!3800 = !DILocation(line: 955, column: 57, scope: !3792)
!3801 = !DILocation(line: 955, column: 72, scope: !3792)
!3802 = !DILocation(line: 955, column: 5, scope: !3792)
!3803 = distinct !{!3803, !3796, !3804}
!3804 = !DILocation(line: 957, column: 2, scope: !3793)
!3805 = !DILocation(line: 959, column: 12, scope: !3778)
!3806 = !DILocation(line: 1000, column: 1, scope: !3768)
!3807 = !DILocation(line: 956, column: 21, scope: !3791)
!3808 = !DILocation(line: 959, column: 8, scope: !3778)
!3809 = !DILocation(line: 0, scope: !3778)
!3810 = !DILocation(line: 959, column: 3, scope: !3778)
!3811 = !DILocation(line: 0, scope: !3776)
!3812 = !DILocation(line: 963, column: 17, scope: !3776)
!3813 = !DILocation(line: 965, column: 11, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 965, column: 11)
!3815 = !DILocation(line: 965, column: 30, scope: !3814)
!3816 = !DILocation(line: 965, column: 11, scope: !3776)
!3817 = !DILocation(line: 0, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 977, column: 8)
!3819 = !DILocation(line: 0, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 985, column: 6)
!3821 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 984, column: 13)
!3822 = !DILocation(line: 968, column: 12, scope: !3782)
!3823 = !DILocation(line: 961, column: 11, scope: !3776)
!3824 = !DILocation(line: 0, scope: !3782)
!3825 = !DILocation(line: 968, column: 7, scope: !3782)
!3826 = !DILocation(line: 0, scope: !3780)
!3827 = !DILocation(line: 972, column: 16, scope: !3780)
!3828 = !DILocation(line: 974, column: 8, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 974, column: 8)
!3830 = !DILocation(line: 974, column: 27, scope: !3829)
!3831 = !DILocation(line: 974, column: 8, scope: !3780)
!3832 = !DILocation(line: 977, column: 11, scope: !3818)
!3833 = !DILocation(line: 977, column: 28, scope: !3818)
!3834 = !DILocation(line: 977, column: 23, scope: !3818)
!3835 = !DILocation(line: 977, column: 44, scope: !3818)
!3836 = !DILocation(line: 977, column: 38, scope: !3818)
!3837 = !DILocation(line: 977, column: 8, scope: !3780)
!3838 = !DILocation(line: 980, column: 22, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 978, column: 6)
!3840 = !DILocation(line: 980, column: 16, scope: !3839)
!3841 = !DILocation(line: 981, column: 27, scope: !3839)
!3842 = !DILocation(line: 981, column: 21, scope: !3839)
!3843 = !DILocation(line: 983, column: 6, scope: !3839)
!3844 = !DILocation(line: 984, column: 33, scope: !3821)
!3845 = !DILocation(line: 984, column: 28, scope: !3821)
!3846 = !DILocation(line: 984, column: 43, scope: !3821)
!3847 = !DILocation(line: 984, column: 13, scope: !3818)
!3848 = !DILocation(line: 987, column: 22, scope: !3820)
!3849 = !DILocation(line: 987, column: 11, scope: !3820)
!3850 = !DILocation(line: 987, column: 16, scope: !3820)
!3851 = !DILocation(line: 988, column: 27, scope: !3820)
!3852 = !DILocation(line: 988, column: 21, scope: !3820)
!3853 = !DILocation(line: 990, column: 8, scope: !3820)
!3854 = !DILocation(line: 992, column: 8, scope: !3780)
!3855 = !DILocation(line: 993, column: 6, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 992, column: 8)
!3857 = distinct !{!3857, !3825, !3858}
!3858 = !DILocation(line: 994, column: 2, scope: !3782)
!3859 = !DILocation(line: 997, column: 11, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 997, column: 11)
!3861 = !DILocation(line: 997, column: 11, scope: !3776)
!3862 = !DILocation(line: 998, column: 2, scope: !3860)
!3863 = !DILocation(line: 959, column: 3, scope: !3777)
!3864 = distinct !{!3864, !3810, !3865}
!3865 = !DILocation(line: 999, column: 5, scope: !3778)
!3866 = distinct !DISubprogram(name: "push_temp_slots", scope: !3, file: !3, line: 1190, type: !2749, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!3867 = !DILocation(line: 1192, column: 18, scope: !3866)
!3868 = !DILocation(line: 1193, column: 1, scope: !3866)
!3869 = distinct !DISubprogram(name: "pop_temp_slots", scope: !3, file: !3, line: 1199, type: !2749, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3870)
!3870 = !{!3871, !3872, !3873}
!3871 = !DILocalVariable(name: "p", scope: !3869, file: !3, line: 1201, type: !759)
!3872 = !DILocalVariable(name: "next", scope: !3869, file: !3, line: 1201, type: !759)
!3873 = !DILocalVariable(name: "some_available", scope: !3869, file: !3, line: 1202, type: !749)
!3874 = !DILocation(line: 0, scope: !3869)
!3875 = !DILocation(line: 1204, column: 34, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1204, column: 3)
!3877 = !DILocation(line: 1204, column: 13, scope: !3876)
!3878 = !DILocation(line: 1204, column: 12, scope: !3876)
!3879 = !DILocation(line: 1204, column: 8, scope: !3876)
!3880 = !DILocation(line: 0, scope: !3876)
!3881 = !DILocation(line: 1204, column: 3, scope: !3876)
!3882 = !DILocation(line: 1206, column: 17, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 1205, column: 5)
!3884 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1204, column: 3)
!3885 = !DILocation(line: 1207, column: 7, scope: !3883)
!3886 = !DILocation(line: 1204, column: 3, scope: !3884)
!3887 = distinct !{!3887, !3881, !3888}
!3888 = !DILocation(line: 1209, column: 5, scope: !3876)
!3889 = !DILocation(line: 1211, column: 7, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1211, column: 7)
!3891 = !DILocation(line: 1211, column: 7, scope: !3869)
!3892 = !DILocation(line: 1213, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1212, column: 5)
!3894 = !DILocation(line: 1214, column: 7, scope: !3893)
!3895 = !DILocation(line: 1215, column: 5, scope: !3893)
!3896 = !DILocation(line: 1217, column: 18, scope: !3869)
!3897 = !DILocation(line: 1218, column: 1, scope: !3869)
!3898 = distinct !DISubprogram(name: "init_temp_slots", scope: !3, file: !3, line: 1223, type: !2749, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!3899 = !DILocation(line: 1226, column: 20, scope: !3898)
!3900 = !DILocation(line: 1227, column: 19, scope: !3898)
!3901 = !DILocation(line: 1228, column: 19, scope: !3898)
!3902 = !DILocation(line: 1231, column: 9, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 1231, column: 7)
!3904 = !DILocation(line: 1231, column: 7, scope: !3898)
!3905 = !DILocation(line: 1232, column: 31, scope: !3903)
!3906 = !DILocation(line: 1232, column: 29, scope: !3903)
!3907 = !DILocation(line: 1232, column: 5, scope: !3903)
!3908 = !DILocation(line: 1237, column: 5, scope: !3903)
!3909 = !DILocation(line: 1238, column: 1, scope: !3898)
!3910 = distinct !DISubprogram(name: "temp_slot_address_hash", scope: !3, file: !3, line: 581, type: !1218, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3911)
!3911 = !{!3912, !3913}
!3912 = !DILocalVariable(name: "p", arg: 1, scope: !3910, file: !3, line: 581, type: !1221)
!3913 = !DILocalVariable(name: "t", scope: !3910, file: !3, line: 583, type: !2174)
!3914 = !DILocation(line: 0, scope: !3910)
!3915 = !DILocation(line: 585, column: 13, scope: !3910)
!3916 = !DILocation(line: 585, column: 3, scope: !3910)
!3917 = distinct !DISubprogram(name: "temp_slot_address_eq", scope: !3, file: !3, line: 590, type: !1226, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3918)
!3918 = !{!3919, !3920, !3921, !3922}
!3919 = !DILocalVariable(name: "p1", arg: 1, scope: !3917, file: !3, line: 590, type: !1221)
!3920 = !DILocalVariable(name: "p2", arg: 2, scope: !3917, file: !3, line: 590, type: !1221)
!3921 = !DILocalVariable(name: "t1", scope: !3917, file: !3, line: 592, type: !2174)
!3922 = !DILocalVariable(name: "t2", scope: !3917, file: !3, line: 592, type: !2174)
!3923 = !DILocation(line: 0, scope: !3917)
!3924 = !DILocation(line: 595, column: 27, scope: !3917)
!3925 = !DILocation(line: 595, column: 40, scope: !3917)
!3926 = !DILocation(line: 595, column: 10, scope: !3917)
!3927 = !DILocation(line: 595, column: 3, scope: !3917)
!3928 = distinct !DISubprogram(name: "instantiate_decl_rtl", scope: !3, file: !3, line: 1660, type: !3551, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3929)
!3929 = !{!3930, !3931}
!3930 = !DILocalVariable(name: "x", arg: 1, scope: !3928, file: !3, line: 1660, type: !765)
!3931 = !DILocalVariable(name: "addr", scope: !3928, file: !3, line: 1662, type: !765)
!3932 = !DILocation(line: 1671, column: 7, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1669, column: 5)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1668, column: 7)
!3935 = !DILocation(line: 0, scope: !3928)
!3936 = !DILocation(line: 1664, column: 9, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1664, column: 7)
!3938 = !DILocation(line: 1664, column: 7, scope: !3928)
!3939 = !DILocation(line: 1668, column: 7, scope: !3934)
!3940 = !DILocation(line: 1668, column: 20, scope: !3934)
!3941 = !DILocation(line: 1668, column: 7, scope: !3928)
!3942 = !DILocation(line: 1670, column: 29, scope: !3933)
!3943 = !DILocation(line: 1670, column: 7, scope: !3933)
!3944 = !DILocation(line: 1671, column: 29, scope: !3933)
!3945 = !DILocation(line: 1677, column: 8, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1677, column: 7)
!3947 = !DILocation(line: 1677, column: 7, scope: !3928)
!3948 = !DILocation(line: 1680, column: 10, scope: !3928)
!3949 = !DILocation(line: 1681, column: 7, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1681, column: 7)
!3951 = !DILocation(line: 1682, column: 7, scope: !3950)
!3952 = !DILocation(line: 1682, column: 11, scope: !3950)
!3953 = !DILocation(line: 1683, column: 4, scope: !3950)
!3954 = !DILocation(line: 1683, column: 8, scope: !3950)
!3955 = !DILocation(line: 1683, column: 21, scope: !3950)
!3956 = !DILocation(line: 1684, column: 8, scope: !3950)
!3957 = !DILocation(line: 1684, column: 11, scope: !3950)
!3958 = !DILocation(line: 1684, column: 24, scope: !3950)
!3959 = !DILocation(line: 1681, column: 7, scope: !3928)
!3960 = !DILocation(line: 1687, column: 3, scope: !3928)
!3961 = !DILocation(line: 1688, column: 1, scope: !3928)
!3962 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !3963, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3968)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!7, !3965}
!3965 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !766, line: 51, baseType: !3966)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!3968 = !{!3969}
!3969 = !DILocalVariable(name: "x", arg: 1, scope: !3962, file: !385, line: 1051, type: !3965)
!3970 = !DILocation(line: 0, scope: !3962)
!3971 = !DILocation(line: 1053, column: 10, scope: !3962)
!3972 = !DILocation(line: 1053, column: 3, scope: !3962)
!3973 = distinct !DISubprogram(name: "instantiate_virtual_regs_in_rtx", scope: !3, file: !3, line: 1340, type: !3974, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3977)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!750, !3976, !754}
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3983}
!3978 = !DILocalVariable(name: "loc", arg: 1, scope: !3973, file: !3, line: 1340, type: !3976)
!3979 = !DILocalVariable(name: "data", arg: 2, scope: !3973, file: !3, line: 1340, type: !754)
!3980 = !DILocalVariable(name: "offset", scope: !3973, file: !3, line: 1342, type: !851)
!3981 = !DILocalVariable(name: "changed", scope: !3973, file: !3, line: 1343, type: !748)
!3982 = !DILocalVariable(name: "x", scope: !3973, file: !3, line: 1344, type: !765)
!3983 = !DILocalVariable(name: "new_rtx", scope: !3973, file: !3, line: 1344, type: !765)
!3984 = !DILocation(line: 0, scope: !3973)
!3985 = !DILocation(line: 1342, column: 3, scope: !3973)
!3986 = !DILocation(line: 1346, column: 7, scope: !3973)
!3987 = !DILocation(line: 1347, column: 9, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1347, column: 7)
!3989 = !DILocation(line: 1347, column: 7, scope: !3973)
!3990 = !DILocation(line: 1350, column: 11, scope: !3973)
!3991 = !DILocation(line: 1350, column: 3, scope: !3973)
!3992 = !DILocation(line: 1353, column: 17, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1351, column: 5)
!3994 = !DILocation(line: 1354, column: 11, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 1354, column: 11)
!3996 = !DILocation(line: 1354, column: 11, scope: !3993)
!3997 = !DILocation(line: 1356, column: 35, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1355, column: 2)
!3999 = !DILocation(line: 1356, column: 11, scope: !3998)
!4000 = !DILocation(line: 1356, column: 9, scope: !3998)
!4001 = !DILocation(line: 1357, column: 8, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1357, column: 8)
!4003 = !DILocation(line: 1357, column: 8, scope: !3998)
!4004 = !DILocation(line: 1358, column: 15, scope: !4002)
!4005 = !DILocation(line: 1358, column: 6, scope: !4002)
!4006 = !DILocation(line: 1363, column: 38, scope: !3993)
!4007 = !DILocation(line: 1363, column: 17, scope: !3993)
!4008 = !DILocation(line: 1364, column: 11, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 1364, column: 11)
!4010 = !DILocation(line: 1364, column: 11, scope: !3993)
!4011 = !DILocation(line: 1366, column: 38, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1365, column: 2)
!4013 = !DILocation(line: 1366, column: 14, scope: !4012)
!4014 = !DILocation(line: 1367, column: 38, scope: !4012)
!4015 = !DILocation(line: 1367, column: 61, scope: !4012)
!4016 = !DILocation(line: 1367, column: 11, scope: !4012)
!4017 = !DILocation(line: 1367, column: 9, scope: !4012)
!4018 = !DILocation(line: 1368, column: 8, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1368, column: 8)
!4020 = !DILocation(line: 1368, column: 8, scope: !4012)
!4021 = !DILocation(line: 1369, column: 15, scope: !4019)
!4022 = !DILocation(line: 1369, column: 6, scope: !4019)
!4023 = !DILocation(line: 1384, column: 1, scope: !3973)
!4024 = distinct !DISubprogram(name: "instantiate_virtual_regs", scope: !3, file: !3, line: 1769, type: !2202, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4025)
!4025 = !{!4026}
!4026 = !DILocalVariable(name: "insn", scope: !4024, file: !3, line: 1771, type: !765)
!4027 = !DILocation(line: 1776, column: 20, scope: !4024)
!4028 = !DILocation(line: 1776, column: 18, scope: !4024)
!4029 = !DILocation(line: 1781, column: 16, scope: !4024)
!4030 = !DILocation(line: 1781, column: 14, scope: !4024)
!4031 = !DILocation(line: 1785, column: 3, scope: !4024)
!4032 = !DILocation(line: 1789, column: 15, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 1789, column: 3)
!4034 = !DILocation(line: 0, scope: !4024)
!4035 = !DILocation(line: 1789, column: 8, scope: !4033)
!4036 = !DILocation(line: 0, scope: !4033)
!4037 = !DILocation(line: 1789, column: 3, scope: !4033)
!4038 = !DILocation(line: 1790, column: 9, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 1790, column: 9)
!4040 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 1789, column: 3)
!4041 = !DILocation(line: 1790, column: 9, scope: !4040)
!4042 = !DILocation(line: 1794, column: 6, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1794, column: 6)
!4044 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1791, column: 7)
!4045 = !DILocation(line: 1794, column: 32, scope: !4043)
!4046 = !DILocation(line: 1795, column: 6, scope: !4043)
!4047 = !DILocation(line: 1795, column: 35, scope: !4043)
!4048 = !DILocation(line: 1796, column: 6, scope: !4043)
!4049 = !DILocation(line: 1796, column: 35, scope: !4043)
!4050 = !DILocation(line: 1797, column: 6, scope: !4043)
!4051 = !DILocation(line: 1797, column: 35, scope: !4043)
!4052 = !DILocation(line: 1798, column: 6, scope: !4043)
!4053 = !DILocation(line: 1798, column: 35, scope: !4043)
!4054 = !DILocation(line: 1794, column: 6, scope: !4044)
!4055 = !DILocation(line: 1800, column: 11, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1800, column: 11)
!4057 = !DILocation(line: 1800, column: 11, scope: !4043)
!4058 = !DILocation(line: 1801, column: 19, scope: !4056)
!4059 = !DILocation(line: 1801, column: 4, scope: !4056)
!4060 = !DILocation(line: 1804, column: 4, scope: !4056)
!4061 = !DILocation(line: 1806, column: 6, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1806, column: 6)
!4063 = !DILocation(line: 1806, column: 6, scope: !4044)
!4064 = !DILocation(line: 1809, column: 17, scope: !4044)
!4065 = !DILocation(line: 1809, column: 2, scope: !4044)
!4066 = !DILocation(line: 1812, column: 6, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1812, column: 6)
!4068 = !DILocation(line: 1812, column: 6, scope: !4044)
!4069 = !DILocation(line: 1813, column: 19, scope: !4067)
!4070 = !DILocation(line: 1813, column: 4, scope: !4067)
!4071 = !DILocation(line: 1789, column: 42, scope: !4040)
!4072 = !DILocation(line: 1789, column: 3, scope: !4040)
!4073 = distinct !{!4073, !4037, !4074}
!4074 = !DILocation(line: 1815, column: 7, scope: !4033)
!4075 = !DILocation(line: 1818, column: 22, scope: !4024)
!4076 = !DILocation(line: 1818, column: 3, scope: !4024)
!4077 = !DILocation(line: 1820, column: 11, scope: !4024)
!4078 = !DILocation(line: 1820, column: 3, scope: !4024)
!4079 = !DILocation(line: 1824, column: 25, scope: !4024)
!4080 = !DILocation(line: 1825, column: 3, scope: !4024)
!4081 = distinct !DISubprogram(name: "aggregate_value_p", scope: !3, file: !3, line: 1854, type: !4082, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4087)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!750, !4084, !4084}
!4084 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !766, line: 59, baseType: !4085)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!4087 = !{!4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095}
!4088 = !DILocalVariable(name: "exp", arg: 1, scope: !4081, file: !3, line: 1854, type: !4084)
!4089 = !DILocalVariable(name: "fntype", arg: 2, scope: !4081, file: !3, line: 1854, type: !4084)
!4090 = !DILocalVariable(name: "i", scope: !4081, file: !3, line: 1856, type: !750)
!4091 = !DILocalVariable(name: "regno", scope: !4081, file: !3, line: 1856, type: !750)
!4092 = !DILocalVariable(name: "nregs", scope: !4081, file: !3, line: 1856, type: !750)
!4093 = !DILocalVariable(name: "reg", scope: !4081, file: !3, line: 1857, type: !765)
!4094 = !DILocalVariable(name: "type", scope: !4081, file: !3, line: 1859, type: !4084)
!4095 = !DILocalVariable(name: "fndecl", scope: !4081, file: !3, line: 1864, type: !4084)
!4096 = !DILocation(line: 1896, column: 12, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1895, column: 7)
!4098 = !DILocation(line: 0, scope: !4081)
!4099 = !DILocation(line: 1859, column: 22, scope: !4081)
!4100 = !DILocation(line: 1859, column: 21, scope: !4081)
!4101 = !DILocation(line: 1859, column: 44, scope: !4081)
!4102 = !DILocation(line: 1866, column: 7, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1866, column: 7)
!4104 = !DILocation(line: 1866, column: 7, scope: !4081)
!4105 = !DILocation(line: 1867, column: 13, scope: !4103)
!4106 = !DILocation(line: 1867, column: 5, scope: !4103)
!4107 = !DILocation(line: 1870, column: 11, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1868, column: 7)
!4109 = !DILocation(line: 1871, column: 12, scope: !4108)
!4110 = !DILocation(line: 1872, column: 7, scope: !4108)
!4111 = !DILocation(line: 1873, column: 7, scope: !4108)
!4112 = !DILocation(line: 1877, column: 11, scope: !4108)
!4113 = !DILocation(line: 1878, column: 2, scope: !4108)
!4114 = !DILocation(line: 1884, column: 2, scope: !4108)
!4115 = !DILocation(line: 1887, column: 2, scope: !4108)
!4116 = !DILocation(line: 1888, column: 7, scope: !4108)
!4117 = !DILocation(line: 1864, column: 14, scope: !4081)
!4118 = !DILocation(line: 1890, column: 7, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1890, column: 7)
!4120 = !DILocation(line: 1890, column: 24, scope: !4119)
!4121 = !DILocation(line: 1890, column: 7, scope: !4081)
!4122 = !DILocation(line: 1895, column: 24, scope: !4097)
!4123 = !DILocation(line: 1895, column: 39, scope: !4097)
!4124 = !DILocation(line: 1895, column: 42, scope: !4097)
!4125 = !DILocation(line: 1895, column: 7, scope: !4081)
!4126 = !DILocation(line: 1896, column: 31, scope: !4097)
!4127 = !DILocation(line: 1900, column: 8, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1900, column: 7)
!4129 = !DILocation(line: 1900, column: 24, scope: !4128)
!4130 = !DILocation(line: 1900, column: 37, scope: !4128)
!4131 = !DILocation(line: 1900, column: 56, scope: !4128)
!4132 = !DILocation(line: 1901, column: 7, scope: !4128)
!4133 = !DILocation(line: 1901, column: 10, scope: !4128)
!4134 = !DILocation(line: 1900, column: 7, scope: !4081)
!4135 = !DILocation(line: 1910, column: 23, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1910, column: 7)
!4137 = !DILocation(line: 1910, column: 39, scope: !4136)
!4138 = !DILocation(line: 1910, column: 36, scope: !4136)
!4139 = !DILocation(line: 1910, column: 49, scope: !4136)
!4140 = !DILocation(line: 1911, column: 7, scope: !4136)
!4141 = !DILocation(line: 1911, column: 10, scope: !4136)
!4142 = !DILocation(line: 1910, column: 7, scope: !4081)
!4143 = !DILocation(line: 1914, column: 21, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1914, column: 7)
!4145 = !DILocation(line: 1914, column: 7, scope: !4144)
!4146 = !DILocation(line: 1914, column: 7, scope: !4081)
!4147 = !DILocation(line: 1918, column: 7, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1918, column: 7)
!4149 = !DILocation(line: 1918, column: 7, scope: !4081)
!4150 = !DILocation(line: 1920, column: 7, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1920, column: 7)
!4152 = !DILocation(line: 1920, column: 30, scope: !4151)
!4153 = !DILocation(line: 1920, column: 33, scope: !4151)
!4154 = !DILocation(line: 1920, column: 7, scope: !4081)
!4155 = !DILocation(line: 1924, column: 9, scope: !4081)
!4156 = !DILocation(line: 1928, column: 8, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1928, column: 7)
!4158 = !DILocation(line: 1928, column: 7, scope: !4081)
!4159 = !DILocation(line: 1931, column: 11, scope: !4081)
!4160 = !DILocation(line: 1932, column: 11, scope: !4081)
!4161 = !DILocation(line: 1932, column: 35, scope: !4081)
!4162 = !DILocation(line: 1933, column: 8, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1933, column: 3)
!4164 = !DILocation(line: 1933, column: 17, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1933, column: 3)
!4166 = !DILocation(line: 0, scope: !4163)
!4167 = !DILocation(line: 1933, column: 3, scope: !4163)
!4168 = !DILocation(line: 1934, column: 32, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 1934, column: 9)
!4170 = !DILocation(line: 1934, column: 11, scope: !4169)
!4171 = !DILocation(line: 1934, column: 9, scope: !4165)
!4172 = !DILocation(line: 1933, column: 27, scope: !4165)
!4173 = !DILocation(line: 1933, column: 3, scope: !4165)
!4174 = distinct !{!4174, !4167, !4175}
!4175 = !DILocation(line: 1935, column: 14, scope: !4163)
!4176 = !DILocation(line: 1937, column: 1, scope: !4081)
!4177 = distinct !DISubprogram(name: "use_register_for_decl", scope: !3, file: !3, line: 1943, type: !4178, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!749, !4084}
!4180 = !{!4181}
!4181 = !DILocalVariable(name: "decl", arg: 1, scope: !4177, file: !3, line: 1943, type: !4084)
!4182 = !DILocation(line: 0, scope: !4177)
!4183 = !DILocation(line: 1945, column: 22, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1945, column: 7)
!4185 = !DILocation(line: 1945, column: 8, scope: !4184)
!4186 = !DILocation(line: 1945, column: 7, scope: !4177)
!4187 = !DILocation(line: 1949, column: 7, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1949, column: 7)
!4189 = !DILocation(line: 1949, column: 7, scope: !4177)
!4190 = !DILocation(line: 1953, column: 7, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1953, column: 7)
!4192 = !DILocation(line: 1953, column: 7, scope: !4177)
!4193 = !DILocation(line: 1957, column: 7, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1957, column: 7)
!4195 = !DILocation(line: 1957, column: 24, scope: !4194)
!4196 = !DILocation(line: 1957, column: 7, scope: !4177)
!4197 = !DILocation(line: 1964, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1964, column: 7)
!4199 = !DILocation(line: 1964, column: 24, scope: !4198)
!4200 = !DILocation(line: 1964, column: 27, scope: !4198)
!4201 = !DILocation(line: 1964, column: 7, scope: !4177)
!4202 = !DILocation(line: 1969, column: 7, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1969, column: 7)
!4204 = !DILocation(line: 1972, column: 7, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1972, column: 7)
!4206 = !DILocation(line: 1969, column: 7, scope: !4177)
!4207 = !DILocation(line: 1975, column: 8, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1975, column: 7)
!4209 = !DILocation(line: 1975, column: 7, scope: !4177)
!4210 = !DILocation(line: 1978, column: 11, scope: !4177)
!4211 = !DILocation(line: 1978, column: 3, scope: !4177)
!4212 = !DILocation(line: 1986, column: 11, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 1986, column: 11)
!4214 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1979, column: 5)
!4215 = !DILocation(line: 1986, column: 11, scope: !4214)
!4216 = !DILocation(line: 1993, column: 3, scope: !4177)
!4217 = !DILocation(line: 1994, column: 1, scope: !4177)
!4218 = distinct !DISubprogram(name: "pass_by_reference", scope: !3, file: !3, line: 1999, type: !4219, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4241)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!749, !4221, !13, !880, !749}
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUMULATIVE_ARGS", file: !380, line: 1598, baseType: !4223)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ix86_args", file: !380, line: 1579, size: 512, elements: !4224)
!4224 = !{!4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !4223, file: !380, line: 1580, baseType: !750, size: 32)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !4223, file: !380, line: 1581, baseType: !750, size: 32, offset: 32)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !4223, file: !380, line: 1582, baseType: !750, size: 32, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "fastcall", scope: !4223, file: !380, line: 1583, baseType: !750, size: 32, offset: 96)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "sse_words", scope: !4223, file: !380, line: 1584, baseType: !750, size: 32, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "sse_nregs", scope: !4223, file: !380, line: 1585, baseType: !750, size: 32, offset: 160)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "warn_avx", scope: !4223, file: !380, line: 1586, baseType: !750, size: 32, offset: 192)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "warn_sse", scope: !4223, file: !380, line: 1587, baseType: !750, size: 32, offset: 224)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "warn_mmx", scope: !4223, file: !380, line: 1588, baseType: !750, size: 32, offset: 256)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "sse_regno", scope: !4223, file: !380, line: 1589, baseType: !750, size: 32, offset: 288)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_words", scope: !4223, file: !380, line: 1590, baseType: !750, size: 32, offset: 320)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_nregs", scope: !4223, file: !380, line: 1591, baseType: !750, size: 32, offset: 352)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_regno", scope: !4223, file: !380, line: 1592, baseType: !750, size: 32, offset: 384)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_vaarg", scope: !4223, file: !380, line: 1593, baseType: !750, size: 32, offset: 416)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "float_in_sse", scope: !4223, file: !380, line: 1594, baseType: !750, size: 32, offset: 448)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !4223, file: !380, line: 1596, baseType: !379, size: 32, offset: 480)
!4241 = !{!4242, !4243, !4244, !4245}
!4242 = !DILocalVariable(name: "ca", arg: 1, scope: !4218, file: !3, line: 1999, type: !4221)
!4243 = !DILocalVariable(name: "mode", arg: 2, scope: !4218, file: !3, line: 1999, type: !13)
!4244 = !DILocalVariable(name: "type", arg: 3, scope: !4218, file: !3, line: 2000, type: !880)
!4245 = !DILocalVariable(name: "named_arg", arg: 4, scope: !4218, file: !3, line: 2000, type: !749)
!4246 = !DILocation(line: 0, scope: !4218)
!4247 = !DILocation(line: 2002, column: 7, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2002, column: 7)
!4249 = !DILocation(line: 2002, column: 7, scope: !4218)
!4250 = !DILocation(line: 2006, column: 11, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 2006, column: 11)
!4252 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 2003, column: 5)
!4253 = !DILocation(line: 2006, column: 11, scope: !4252)
!4254 = !DILocation(line: 2010, column: 12, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 2010, column: 11)
!4256 = !DILocation(line: 2010, column: 29, scope: !4255)
!4257 = !DILocation(line: 2010, column: 32, scope: !4255)
!4258 = !DILocation(line: 2010, column: 61, scope: !4255)
!4259 = !DILocation(line: 2010, column: 11, scope: !4252)
!4260 = !DILocation(line: 2015, column: 28, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 2015, column: 11)
!4262 = !DILocation(line: 2015, column: 43, scope: !4261)
!4263 = !DILocation(line: 2015, column: 46, scope: !4261)
!4264 = !DILocation(line: 2015, column: 11, scope: !4252)
!4265 = !DILocation(line: 2017, column: 11, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2016, column: 2)
!4267 = !DILocation(line: 2018, column: 11, scope: !4266)
!4268 = !DILocation(line: 2022, column: 24, scope: !4218)
!4269 = !DILocation(line: 2022, column: 10, scope: !4218)
!4270 = !DILocation(line: 2022, column: 3, scope: !4218)
!4271 = !DILocation(line: 2023, column: 1, scope: !4218)
!4272 = distinct !DISubprogram(name: "reference_callee_copied", scope: !3, file: !3, line: 2029, type: !4219, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4273)
!4273 = !{!4274, !4275, !4276, !4277}
!4274 = !DILocalVariable(name: "ca", arg: 1, scope: !4272, file: !3, line: 2029, type: !4221)
!4275 = !DILocalVariable(name: "mode", arg: 2, scope: !4272, file: !3, line: 2029, type: !13)
!4276 = !DILocalVariable(name: "type", arg: 3, scope: !4272, file: !3, line: 2030, type: !880)
!4277 = !DILocalVariable(name: "named_arg", arg: 4, scope: !4272, file: !3, line: 2030, type: !749)
!4278 = !DILocation(line: 0, scope: !4272)
!4279 = !DILocation(line: 2032, column: 7, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 2032, column: 7)
!4281 = !DILocation(line: 2032, column: 12, scope: !4280)
!4282 = !DILocation(line: 2032, column: 15, scope: !4280)
!4283 = !DILocation(line: 2032, column: 7, scope: !4272)
!4284 = !DILocation(line: 2034, column: 24, scope: !4272)
!4285 = !DILocation(line: 2034, column: 10, scope: !4272)
!4286 = !DILocation(line: 2034, column: 3, scope: !4272)
!4287 = !DILocation(line: 2035, column: 1, scope: !4272)
!4288 = distinct !DISubprogram(name: "gimplify_parameters", scope: !3, file: !3, line: 3368, type: !4289, scopeLine: 3369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4291)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!1325}
!4291 = !{!4292, !4308, !4309, !4310, !4311, !4312, !4339, !4342, !4345, !4346, !4349}
!4292 = !DILocalVariable(name: "all", scope: !4288, file: !3, line: 3370, type: !4293)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assign_parm_data_all", file: !3, line: 2041, size: 1088, elements: !4294)
!4294 = !{!4295, !4296, !4301, !4302, !4303, !4304, !4305, !4306, !4307}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "args_so_far", scope: !4293, file: !3, line: 2043, baseType: !4222, size: 512)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "stack_args_size", scope: !4293, file: !3, line: 2044, baseType: !4297, size: 128, offset: 512)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "args_size", file: !711, line: 102, size: 128, elements: !4298)
!4298 = !{!4299, !4300}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !4297, file: !711, line: 104, baseType: !851, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !4297, file: !711, line: 105, baseType: !880, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "function_result_decl", scope: !4293, file: !3, line: 2045, baseType: !880, size: 64, offset: 640)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "orig_fnargs", scope: !4293, file: !3, line: 2046, baseType: !880, size: 64, offset: 704)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "first_conversion_insn", scope: !4293, file: !3, line: 2047, baseType: !765, size: 64, offset: 768)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "last_conversion_insn", scope: !4293, file: !3, line: 2048, baseType: !765, size: 64, offset: 832)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "pretend_args_size", scope: !4293, file: !3, line: 2049, baseType: !851, size: 64, offset: 896)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "extra_pretend_bytes", scope: !4293, file: !3, line: 2050, baseType: !851, size: 64, offset: 960)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "reg_parm_stack_space", scope: !4293, file: !3, line: 2051, baseType: !750, size: 32, offset: 1024)
!4308 = !DILocalVariable(name: "parm", scope: !4288, file: !3, line: 3371, type: !880)
!4309 = !DILocalVariable(name: "stmts", scope: !4288, file: !3, line: 3372, type: !1325)
!4310 = !DILocalVariable(name: "fnargs", scope: !4288, file: !3, line: 3373, type: !2176)
!4311 = !DILocalVariable(name: "i", scope: !4288, file: !3, line: 3374, type: !7)
!4312 = !DILocalVariable(name: "data", scope: !4313, file: !3, line: 3381, type: !4316)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 3380, column: 5)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 3379, column: 3)
!4315 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3379, column: 3)
!4316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assign_parm_data_one", file: !3, line: 2054, size: 1024, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4334, !4335, !4336, !4337, !4338}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "nominal_type", scope: !4316, file: !3, line: 2056, baseType: !880, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "passed_type", scope: !4316, file: !3, line: 2057, baseType: !880, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "entry_parm", scope: !4316, file: !3, line: 2058, baseType: !765, size: 64, offset: 128)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "stack_parm", scope: !4316, file: !3, line: 2059, baseType: !765, size: 64, offset: 192)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "nominal_mode", scope: !4316, file: !3, line: 2060, baseType: !13, size: 32, offset: 256)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "passed_mode", scope: !4316, file: !3, line: 2061, baseType: !13, size: 32, offset: 288)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "promoted_mode", scope: !4316, file: !3, line: 2062, baseType: !13, size: 32, offset: 320)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "locate", scope: !4316, file: !3, line: 2063, baseType: !4326, size: 576, offset: 384)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "locate_and_pad_arg_data", file: !711, line: 110, size: 576, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331, !4332, !4333}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4326, file: !711, line: 115, baseType: !4297, size: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4326, file: !711, line: 117, baseType: !4297, size: 128, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "slot_offset", scope: !4326, file: !711, line: 120, baseType: !4297, size: 128, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_pad", scope: !4326, file: !711, line: 123, baseType: !4297, size: 128, offset: 384)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "where_pad", scope: !4326, file: !711, line: 125, baseType: !710, size: 32, offset: 512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "boundary", scope: !4326, file: !711, line: 127, baseType: !7, size: 32, offset: 544)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "partial", scope: !4316, file: !3, line: 2064, baseType: !750, size: 32, offset: 960)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "named_arg", scope: !4316, file: !3, line: 2065, baseType: !7, size: 1, offset: 992, flags: DIFlagBitField, extraData: i64 992)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "passed_pointer", scope: !4316, file: !3, line: 2066, baseType: !7, size: 1, offset: 993, flags: DIFlagBitField, extraData: i64 992)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "on_stack", scope: !4316, file: !3, line: 2067, baseType: !7, size: 1, offset: 994, flags: DIFlagBitField, extraData: i64 992)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "loaded_in_reg", scope: !4316, file: !3, line: 2068, baseType: !7, size: 1, offset: 995, flags: DIFlagBitField, extraData: i64 992)
!4339 = !DILocalVariable(name: "type", scope: !4340, file: !3, line: 3409, type: !880)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 3408, column: 2)
!4341 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3407, column: 11)
!4342 = !DILocalVariable(name: "local", scope: !4343, file: !3, line: 3413, type: !880)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 3412, column: 6)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3410, column: 8)
!4345 = !DILocalVariable(name: "t", scope: !4343, file: !3, line: 3413, type: !880)
!4346 = !DILocalVariable(name: "ptr_type", scope: !4347, file: !3, line: 3435, type: !880)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 3434, column: 3)
!4348 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3417, column: 12)
!4349 = !DILocalVariable(name: "addr", scope: !4347, file: !3, line: 3435, type: !880)
!4350 = !DILocation(line: 3370, column: 3, scope: !4288)
!4351 = !DILocation(line: 3371, column: 3, scope: !4288)
!4352 = !DILocation(line: 3372, column: 3, scope: !4288)
!4353 = !DILocation(line: 0, scope: !4288)
!4354 = !DILocation(line: 3372, column: 14, scope: !4288)
!4355 = !DILocation(line: 3373, column: 3, scope: !4288)
!4356 = !DILocation(line: 3376, column: 3, scope: !4288)
!4357 = !DILocation(line: 3377, column: 12, scope: !4288)
!4358 = !DILocation(line: 3377, column: 10, scope: !4288)
!4359 = !DILocation(line: 0, scope: !4313)
!4360 = !DILocation(line: 0, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3387, column: 11)
!4362 = !DILocation(line: 0, scope: !4340)
!4363 = !DILocation(line: 0, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3427, column: 9)
!4365 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 3421, column: 3)
!4366 = !DILocation(line: 3379, column: 8, scope: !4315)
!4367 = !DILocation(line: 3379, column: 15, scope: !4314)
!4368 = !DILocation(line: 0, scope: !4315)
!4369 = !DILocation(line: 3379, column: 3, scope: !4315)
!4370 = !DILocation(line: 3381, column: 7, scope: !4313)
!4371 = !DILocation(line: 3384, column: 42, scope: !4313)
!4372 = !DILocation(line: 3384, column: 7, scope: !4313)
!4373 = !DILocation(line: 3387, column: 16, scope: !4361)
!4374 = !DILocation(line: 3387, column: 28, scope: !4361)
!4375 = !DILocation(line: 3387, column: 40, scope: !4361)
!4376 = !DILocation(line: 3387, column: 43, scope: !4361)
!4377 = !DILocation(line: 3387, column: 60, scope: !4361)
!4378 = !DILocation(line: 3387, column: 11, scope: !4313)
!4379 = !DILocation(line: 3391, column: 7, scope: !4313)
!4380 = !DILocation(line: 3398, column: 7, scope: !4313)
!4381 = !DILocation(line: 3401, column: 11, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3401, column: 11)
!4383 = !DILocation(line: 3401, column: 45, scope: !4382)
!4384 = !DILocation(line: 3401, column: 11, scope: !4313)
!4385 = !DILocation(line: 3403, column: 27, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 3402, column: 2)
!4387 = !DILocation(line: 3403, column: 4, scope: !4386)
!4388 = !DILocation(line: 3404, column: 27, scope: !4386)
!4389 = !DILocation(line: 3404, column: 4, scope: !4386)
!4390 = !DILocation(line: 3405, column: 2, scope: !4386)
!4391 = !DILocation(line: 3407, column: 16, scope: !4341)
!4392 = !DILocation(line: 3407, column: 11, scope: !4341)
!4393 = !DILocation(line: 3407, column: 11, scope: !4313)
!4394 = !DILocation(line: 3409, column: 23, scope: !4340)
!4395 = !DILocation(line: 3410, column: 51, scope: !4344)
!4396 = !DILocation(line: 3411, column: 23, scope: !4344)
!4397 = !DILocation(line: 3410, column: 8, scope: !4344)
!4398 = !DILocation(line: 3410, column: 8, scope: !4340)
!4399 = !DILocation(line: 3417, column: 12, scope: !4348)
!4400 = !DILocation(line: 3417, column: 46, scope: !4348)
!4401 = !DILocation(line: 3418, column: 5, scope: !4348)
!4402 = !DILocation(line: 3418, column: 10, scope: !4348)
!4403 = !DILocation(line: 3418, column: 27, scope: !4348)
!4404 = !DILocation(line: 3419, column: 10, scope: !4348)
!4405 = !DILocation(line: 3419, column: 13, scope: !4348)
!4406 = !DILocation(line: 3420, column: 36, scope: !4348)
!4407 = !DILocation(line: 3417, column: 12, scope: !4343)
!4408 = !DILocation(line: 3422, column: 45, scope: !4365)
!4409 = !DILocation(line: 3422, column: 35, scope: !4365)
!4410 = !DILocation(line: 3422, column: 13, scope: !4365)
!4411 = !DILocation(line: 0, scope: !4343)
!4412 = !DILocation(line: 3423, column: 5, scope: !4365)
!4413 = !DILocation(line: 3423, column: 28, scope: !4365)
!4414 = !DILocation(line: 3427, column: 9, scope: !4364)
!4415 = !DILocation(line: 3427, column: 9, scope: !4365)
!4416 = !DILocation(line: 3429, column: 33, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 3428, column: 7)
!4418 = !DILocation(line: 3430, column: 9, scope: !4417)
!4419 = !DILocation(line: 3430, column: 34, scope: !4417)
!4420 = !DILocation(line: 3431, column: 7, scope: !4417)
!4421 = !DILocation(line: 3437, column: 16, scope: !4347)
!4422 = !DILocation(line: 0, scope: !4347)
!4423 = !DILocation(line: 3438, column: 48, scope: !4347)
!4424 = !DILocation(line: 3438, column: 38, scope: !4347)
!4425 = !DILocation(line: 3438, column: 12, scope: !4347)
!4426 = !DILocation(line: 3439, column: 5, scope: !4347)
!4427 = !DILocation(line: 3439, column: 27, scope: !4347)
!4428 = !DILocation(line: 3440, column: 13, scope: !4347)
!4429 = !DILocation(line: 3442, column: 9, scope: !4347)
!4430 = !DILocation(line: 3443, column: 9, scope: !4347)
!4431 = !DILocation(line: 3444, column: 9, scope: !4347)
!4432 = !DILocation(line: 3445, column: 9, scope: !4347)
!4433 = !DILocation(line: 3446, column: 5, scope: !4347)
!4434 = !DILocation(line: 0, scope: !4348)
!4435 = !DILocation(line: 3449, column: 32, scope: !4343)
!4436 = !DILocation(line: 3449, column: 8, scope: !4343)
!4437 = !DILocation(line: 3451, column: 8, scope: !4343)
!4438 = !DILocation(line: 3452, column: 8, scope: !4343)
!4439 = !DILocation(line: 3452, column: 37, scope: !4343)
!4440 = !DILocation(line: 3453, column: 6, scope: !4343)
!4441 = !DILocation(line: 3455, column: 5, scope: !4314)
!4442 = !DILocation(line: 3379, column: 52, scope: !4314)
!4443 = !DILocation(line: 3379, column: 3, scope: !4314)
!4444 = distinct !{!4444, !4369, !4445}
!4445 = !DILocation(line: 3455, column: 5, scope: !4315)
!4446 = !DILocation(line: 3457, column: 3, scope: !4288)
!4447 = !DILocation(line: 3459, column: 10, scope: !4288)
!4448 = !DILocation(line: 3460, column: 1, scope: !4288)
!4449 = !DILocation(line: 3459, column: 3, scope: !4288)
!4450 = distinct !DISubprogram(name: "assign_parms_initialize_all", scope: !3, file: !3, line: 2074, type: !4451, scopeLine: 2075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4454)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{null, !4453}
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4454 = !{!4455, !4456}
!4455 = !DILocalVariable(name: "all", arg: 1, scope: !4450, file: !3, line: 2074, type: !4453)
!4456 = !DILocalVariable(name: "fntype", scope: !4450, file: !3, line: 2076, type: !880)
!4457 = !DILocation(line: 0, scope: !4450)
!4458 = !DILocation(line: 2078, column: 11, scope: !4450)
!4459 = !DILocation(line: 2078, column: 3, scope: !4450)
!4460 = !DILocation(line: 2080, column: 12, scope: !4450)
!4461 = !DILocation(line: 2085, column: 3, scope: !4450)
!4462 = !DILocation(line: 2090, column: 31, scope: !4450)
!4463 = !DILocation(line: 2090, column: 8, scope: !4450)
!4464 = !DILocation(line: 2090, column: 29, scope: !4450)
!4465 = !DILocation(line: 2092, column: 1, scope: !4450)
!4466 = distinct !DISubprogram(name: "assign_parms_augmented_arg_list", scope: !3, file: !3, line: 2148, type: !4467, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4469)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!2176, !4453}
!4469 = !{!4470, !4471, !4472, !4473, !4474, !4475, !4478}
!4470 = !DILocalVariable(name: "all", arg: 1, scope: !4466, file: !3, line: 2148, type: !4453)
!4471 = !DILocalVariable(name: "fndecl", scope: !4466, file: !3, line: 2150, type: !880)
!4472 = !DILocalVariable(name: "fntype", scope: !4466, file: !3, line: 2151, type: !880)
!4473 = !DILocalVariable(name: "fnargs", scope: !4466, file: !3, line: 2152, type: !2176)
!4474 = !DILocalVariable(name: "arg", scope: !4466, file: !3, line: 2153, type: !880)
!4475 = !DILocalVariable(name: "type", scope: !4476, file: !3, line: 2165, type: !880)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2164, column: 5)
!4477 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2161, column: 7)
!4478 = !DILocalVariable(name: "decl", scope: !4476, file: !3, line: 2166, type: !880)
!4479 = !DILocation(line: 0, scope: !4466)
!4480 = !DILocation(line: 2150, column: 17, scope: !4466)
!4481 = !DILocation(line: 2151, column: 17, scope: !4466)
!4482 = !DILocation(line: 2152, column: 3, scope: !4466)
!4483 = !DILocation(line: 2152, column: 20, scope: !4466)
!4484 = !DILocation(line: 2155, column: 14, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2155, column: 3)
!4486 = !DILocation(line: 2155, column: 8, scope: !4485)
!4487 = !DILocation(line: 0, scope: !4485)
!4488 = !DILocation(line: 2155, column: 3, scope: !4485)
!4489 = !DILocation(line: 2156, column: 5, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 2155, column: 3)
!4491 = !DILocation(line: 2155, column: 50, scope: !4490)
!4492 = !DILocation(line: 2155, column: 3, scope: !4490)
!4493 = distinct !{!4493, !4488, !4494}
!4494 = !DILocation(line: 2156, column: 5, scope: !4485)
!4495 = !DILocation(line: 2158, column: 22, scope: !4466)
!4496 = !DILocation(line: 2158, column: 8, scope: !4466)
!4497 = !DILocation(line: 2158, column: 20, scope: !4466)
!4498 = !DILocation(line: 2161, column: 26, scope: !4477)
!4499 = !DILocation(line: 2161, column: 7, scope: !4477)
!4500 = !DILocation(line: 2162, column: 7, scope: !4477)
!4501 = !DILocation(line: 2162, column: 12, scope: !4477)
!4502 = !DILocation(line: 2162, column: 18, scope: !4477)
!4503 = !DILocation(line: 2163, column: 7, scope: !4477)
!4504 = !DILocation(line: 2163, column: 24, scope: !4477)
!4505 = !DILocation(line: 2163, column: 42, scope: !4477)
!4506 = !DILocation(line: 2163, column: 10, scope: !4477)
!4507 = !DILocation(line: 2163, column: 65, scope: !4477)
!4508 = !DILocation(line: 2161, column: 7, scope: !4466)
!4509 = !DILocation(line: 2165, column: 39, scope: !4476)
!4510 = !DILocation(line: 2165, column: 19, scope: !4476)
!4511 = !DILocation(line: 0, scope: !4476)
!4512 = !DILocation(line: 2168, column: 14, scope: !4476)
!4513 = !DILocation(line: 2170, column: 7, scope: !4476)
!4514 = !DILocation(line: 2170, column: 28, scope: !4476)
!4515 = !DILocation(line: 2171, column: 7, scope: !4476)
!4516 = !DILocation(line: 2171, column: 30, scope: !4476)
!4517 = !DILocation(line: 2172, column: 29, scope: !4476)
!4518 = !DILocation(line: 2174, column: 32, scope: !4476)
!4519 = !DILocation(line: 2174, column: 7, scope: !4476)
!4520 = !DILocation(line: 2174, column: 25, scope: !4476)
!4521 = !DILocation(line: 2175, column: 24, scope: !4476)
!4522 = !DILocation(line: 2176, column: 7, scope: !4476)
!4523 = !DILocation(line: 2178, column: 12, scope: !4476)
!4524 = !DILocation(line: 2178, column: 33, scope: !4476)
!4525 = !DILocation(line: 2179, column: 5, scope: !4476)
!4526 = !DILocation(line: 2182, column: 21, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2182, column: 7)
!4528 = !DILocation(line: 2182, column: 7, scope: !4527)
!4529 = !DILocation(line: 2182, column: 7, scope: !4466)
!4530 = !DILocation(line: 2183, column: 5, scope: !4527)
!4531 = !DILocation(line: 2185, column: 10, scope: !4466)
!4532 = !DILocation(line: 2186, column: 1, scope: !4466)
!4533 = !DILocation(line: 2185, column: 3, scope: !4466)
!4534 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !142, file: !142, line: 182, type: !4535, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4539)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!750, !4537, !7, !1371}
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!4539 = !{!4540, !4541, !4542}
!4540 = !DILocalVariable(name: "vec_", arg: 1, scope: !4534, file: !142, line: 182, type: !4537)
!4541 = !DILocalVariable(name: "ix_", arg: 2, scope: !4534, file: !142, line: 182, type: !7)
!4542 = !DILocalVariable(name: "ptr", arg: 3, scope: !4534, file: !142, line: 182, type: !1371)
!4543 = !DILocation(line: 0, scope: !4534)
!4544 = !DILocation(line: 182, column: 1, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4534, file: !142, line: 182, column: 1)
!4546 = !DILocation(line: 182, column: 1, scope: !4534)
!4547 = !DILocation(line: 182, column: 1, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4545, file: !142, line: 182, column: 1)
!4549 = !DILocation(line: 182, column: 1, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4545, file: !142, line: 182, column: 1)
!4551 = !DILocation(line: 0, scope: !4545)
!4552 = distinct !DISubprogram(name: "assign_parm_find_data_types", scope: !3, file: !3, line: 2193, type: !4553, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4556)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{null, !4453, !880, !4555}
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4556 = !{!4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566}
!4557 = !DILocalVariable(name: "all", arg: 1, scope: !4552, file: !3, line: 2193, type: !4453)
!4558 = !DILocalVariable(name: "parm", arg: 2, scope: !4552, file: !3, line: 2193, type: !880)
!4559 = !DILocalVariable(name: "data", arg: 3, scope: !4552, file: !3, line: 2194, type: !4555)
!4560 = !DILocalVariable(name: "nominal_type", scope: !4552, file: !3, line: 2196, type: !880)
!4561 = !DILocalVariable(name: "passed_type", scope: !4552, file: !3, line: 2196, type: !880)
!4562 = !DILocalVariable(name: "nominal_mode", scope: !4552, file: !3, line: 2197, type: !13)
!4563 = !DILocalVariable(name: "passed_mode", scope: !4552, file: !3, line: 2197, type: !13)
!4564 = !DILocalVariable(name: "promoted_mode", scope: !4552, file: !3, line: 2197, type: !13)
!4565 = !DILocalVariable(name: "unsignedp", scope: !4552, file: !3, line: 2198, type: !750)
!4566 = !DILabel(scope: !4552, name: "egress", file: !3, line: 2256)
!4567 = !DILocation(line: 0, scope: !4552)
!4568 = !DILocation(line: 2198, column: 3, scope: !4552)
!4569 = !DILocation(line: 2200, column: 11, scope: !4552)
!4570 = !DILocation(line: 2200, column: 3, scope: !4552)
!4571 = !DILocation(line: 2203, column: 8, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2203, column: 7)
!4573 = !DILocation(line: 2203, column: 14, scope: !4572)
!4574 = !DILocation(line: 2203, column: 7, scope: !4552)
!4575 = !DILocation(line: 2204, column: 11, scope: !4572)
!4576 = !DILocation(line: 2204, column: 21, scope: !4572)
!4577 = !DILocation(line: 2204, column: 5, scope: !4572)
!4578 = !DILocation(line: 2205, column: 12, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2205, column: 12)
!4580 = !DILocation(line: 2205, column: 12, scope: !4572)
!4581 = !DILocation(line: 2206, column: 11, scope: !4579)
!4582 = !DILocation(line: 2206, column: 21, scope: !4579)
!4583 = !DILocation(line: 2206, column: 5, scope: !4579)
!4584 = !DILocation(line: 2207, column: 26, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2207, column: 12)
!4586 = !DILocation(line: 2207, column: 56, scope: !4585)
!4587 = !DILocation(line: 2207, column: 12, scope: !4585)
!4588 = !DILocation(line: 0, scope: !4585)
!4589 = !DILocation(line: 2207, column: 12, scope: !4579)
!4590 = !DILocation(line: 2208, column: 21, scope: !4585)
!4591 = !DILocation(line: 2208, column: 5, scope: !4585)
!4592 = !DILocation(line: 2210, column: 21, scope: !4585)
!4593 = !DILocation(line: 2212, column: 18, scope: !4552)
!4594 = !DILocation(line: 2213, column: 17, scope: !4552)
!4595 = !DILocation(line: 2217, column: 27, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2217, column: 7)
!4597 = !DILocation(line: 2217, column: 24, scope: !4596)
!4598 = !DILocation(line: 2220, column: 7, scope: !4596)
!4599 = !DILocation(line: 2220, column: 10, scope: !4596)
!4600 = !DILocation(line: 2220, column: 27, scope: !4596)
!4601 = !DILocation(line: 2221, column: 22, scope: !4596)
!4602 = !DILocation(line: 2221, column: 7, scope: !4596)
!4603 = !DILocation(line: 2222, column: 10, scope: !4596)
!4604 = !DILocation(line: 2217, column: 7, scope: !4552)
!4605 = !DILocation(line: 2224, column: 36, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2223, column: 5)
!4607 = !DILocation(line: 2226, column: 7, scope: !4606)
!4608 = !DILocation(line: 2231, column: 17, scope: !4552)
!4609 = !DILocation(line: 2232, column: 18, scope: !4552)
!4610 = !DILocation(line: 2237, column: 8, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2237, column: 7)
!4612 = !DILocation(line: 2237, column: 32, scope: !4611)
!4613 = !DILocation(line: 2238, column: 8, scope: !4611)
!4614 = !DILocation(line: 2238, column: 35, scope: !4611)
!4615 = !DILocation(line: 2239, column: 7, scope: !4611)
!4616 = !DILocation(line: 2239, column: 10, scope: !4611)
!4617 = !DILocation(line: 2237, column: 7, scope: !4552)
!4618 = !DILocation(line: 2240, column: 19, scope: !4611)
!4619 = !DILocation(line: 2240, column: 5, scope: !4611)
!4620 = !DILocation(line: 2243, column: 32, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2243, column: 7)
!4622 = !DILocation(line: 2244, column: 24, scope: !4621)
!4623 = !DILocation(line: 2243, column: 7, scope: !4621)
!4624 = !DILocation(line: 2243, column: 7, scope: !4552)
!4625 = !DILocation(line: 2246, column: 36, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 2245, column: 5)
!4627 = !DILocation(line: 2247, column: 28, scope: !4626)
!4628 = !DILocation(line: 2249, column: 5, scope: !4626)
!4629 = !DILocation(line: 2252, column: 15, scope: !4552)
!4630 = !DILocation(line: 2252, column: 13, scope: !4552)
!4631 = !DILocation(line: 2254, column: 14, scope: !4552)
!4632 = !DILocation(line: 2253, column: 19, scope: !4552)
!4633 = !DILocation(line: 2253, column: 3, scope: !4552)
!4634 = !DILocation(line: 2256, column: 2, scope: !4552)
!4635 = !DILocation(line: 2257, column: 9, scope: !4552)
!4636 = !DILocation(line: 2257, column: 22, scope: !4552)
!4637 = !DILocation(line: 2258, column: 9, scope: !4552)
!4638 = !DILocation(line: 2258, column: 21, scope: !4552)
!4639 = !DILocation(line: 2259, column: 9, scope: !4552)
!4640 = !DILocation(line: 2259, column: 22, scope: !4552)
!4641 = !DILocation(line: 2260, column: 9, scope: !4552)
!4642 = !DILocation(line: 2260, column: 21, scope: !4552)
!4643 = !DILocation(line: 2261, column: 9, scope: !4552)
!4644 = !DILocation(line: 2261, column: 23, scope: !4552)
!4645 = !DILocation(line: 2262, column: 1, scope: !4552)
!4646 = distinct !DISubprogram(name: "gimplify_parm_type", scope: !3, file: !3, line: 3342, type: !4647, scopeLine: 3343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4650)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!880, !1371, !4649, !754}
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!4650 = !{!4651, !4652, !4653, !4654}
!4651 = !DILocalVariable(name: "tp", arg: 1, scope: !4646, file: !3, line: 3342, type: !1371)
!4652 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !4646, file: !3, line: 3342, type: !4649)
!4653 = !DILocalVariable(name: "data", arg: 3, scope: !4646, file: !3, line: 3342, type: !754)
!4654 = !DILocalVariable(name: "t", scope: !4646, file: !3, line: 3344, type: !880)
!4655 = !DILocation(line: 0, scope: !4646)
!4656 = !DILocation(line: 3344, column: 12, scope: !4646)
!4657 = !DILocation(line: 3346, column: 18, scope: !4646)
!4658 = !DILocation(line: 3347, column: 7, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 3347, column: 7)
!4660 = !DILocation(line: 3347, column: 7, scope: !4646)
!4661 = !DILocation(line: 3349, column: 11, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 3349, column: 11)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 3348, column: 5)
!4664 = !DILocation(line: 3349, column: 11, scope: !4663)
!4665 = !DILocation(line: 3350, column: 17, scope: !4662)
!4666 = !DILocation(line: 3350, column: 2, scope: !4662)
!4667 = !DILocation(line: 3351, column: 16, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3351, column: 16)
!4669 = !DILocation(line: 3351, column: 30, scope: !4668)
!4670 = !DILocation(line: 3351, column: 34, scope: !4668)
!4671 = !DILocation(line: 3352, column: 9, scope: !4668)
!4672 = !DILocation(line: 3352, column: 13, scope: !4668)
!4673 = !DILocation(line: 3351, column: 16, scope: !4662)
!4674 = !DILocation(line: 3354, column: 28, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 3353, column: 2)
!4676 = !DILocation(line: 3354, column: 4, scope: !4675)
!4677 = !DILocation(line: 3355, column: 19, scope: !4675)
!4678 = !DILocation(line: 3356, column: 2, scope: !4675)
!4679 = !DILocation(line: 3359, column: 3, scope: !4646)
!4680 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !142, file: !142, line: 184, type: !4681, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4684)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{null, !4683}
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!4684 = !{!4685}
!4685 = !DILocalVariable(name: "vec_", arg: 1, scope: !4680, file: !142, line: 184, type: !4683)
!4686 = !DILocation(line: 0, scope: !4680)
!4687 = !DILocation(line: 184, column: 1, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4680, file: !142, line: 184, column: 1)
!4689 = !DILocation(line: 184, column: 1, scope: !4680)
!4690 = distinct !DISubprogram(name: "locate_and_pad_parm", scope: !3, file: !3, line: 3495, type: !4691, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4695)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{null, !13, !880, !750, !750, !880, !4693, !4694}
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4695 = !{!4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708}
!4696 = !DILocalVariable(name: "passed_mode", arg: 1, scope: !4690, file: !3, line: 3495, type: !13)
!4697 = !DILocalVariable(name: "type", arg: 2, scope: !4690, file: !3, line: 3495, type: !880)
!4698 = !DILocalVariable(name: "in_regs", arg: 3, scope: !4690, file: !3, line: 3495, type: !750)
!4699 = !DILocalVariable(name: "partial", arg: 4, scope: !4690, file: !3, line: 3496, type: !750)
!4700 = !DILocalVariable(name: "fndecl", arg: 5, scope: !4690, file: !3, line: 3496, type: !880)
!4701 = !DILocalVariable(name: "initial_offset_ptr", arg: 6, scope: !4690, file: !3, line: 3497, type: !4693)
!4702 = !DILocalVariable(name: "locate", arg: 7, scope: !4690, file: !3, line: 3498, type: !4694)
!4703 = !DILocalVariable(name: "sizetree", scope: !4690, file: !3, line: 3500, type: !880)
!4704 = !DILocalVariable(name: "where_pad", scope: !4690, file: !3, line: 3501, type: !710)
!4705 = !DILocalVariable(name: "boundary", scope: !4690, file: !3, line: 3502, type: !7)
!4706 = !DILocalVariable(name: "reg_parm_stack_space", scope: !4690, file: !3, line: 3503, type: !750)
!4707 = !DILocalVariable(name: "part_size_in_regs", scope: !4690, file: !3, line: 3504, type: !750)
!4708 = !DILocalVariable(name: "inc", scope: !4709, file: !3, line: 3636, type: !880)
!4709 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3636, column: 3)
!4710 = !DILocation(line: 0, scope: !4690)
!4711 = !DILocation(line: 3507, column: 26, scope: !4690)
!4712 = !DILocation(line: 3511, column: 9, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3511, column: 7)
!4714 = !DILocation(line: 3513, column: 32, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 3513, column: 11)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 3512, column: 5)
!4717 = !DILocation(line: 3511, column: 7, scope: !4690)
!4718 = !DILocation(line: 3515, column: 28, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 3515, column: 8)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 3514, column: 2)
!4721 = !DILocation(line: 3515, column: 8, scope: !4719)
!4722 = !DILocation(line: 3515, column: 8, scope: !4720)
!4723 = !DILocation(line: 3518, column: 5, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3516, column: 6)
!4725 = !DILocation(line: 3518, column: 3, scope: !4724)
!4726 = !DILocation(line: 3520, column: 28, scope: !4724)
!4727 = !DILocation(line: 3520, column: 37, scope: !4724)
!4728 = !DILocation(line: 3521, column: 6, scope: !4724)
!4729 = !DILocation(line: 3522, column: 33, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3522, column: 13)
!4731 = !DILocation(line: 3522, column: 44, scope: !4730)
!4732 = !DILocation(line: 3522, column: 42, scope: !4730)
!4733 = !DILocation(line: 3522, column: 13, scope: !4719)
!4734 = !DILocation(line: 3523, column: 35, scope: !4730)
!4735 = !DILocation(line: 3523, column: 6, scope: !4730)
!4736 = !DILocation(line: 3528, column: 45, scope: !4690)
!4737 = !DILocation(line: 3528, column: 24, scope: !4690)
!4738 = !DILocation(line: 3531, column: 7, scope: !4690)
!4739 = !DILocation(line: 3531, column: 14, scope: !4690)
!4740 = !DILocation(line: 3531, column: 37, scope: !4690)
!4741 = !DILocation(line: 3533, column: 14, scope: !4690)
!4742 = !DILocation(line: 3534, column: 11, scope: !4690)
!4743 = !DILocation(line: 3534, column: 21, scope: !4690)
!4744 = !DILocation(line: 3537, column: 7, scope: !4690)
!4745 = !DILocation(line: 3540, column: 11, scope: !4690)
!4746 = !DILocation(line: 3540, column: 20, scope: !4690)
!4747 = !DILocation(line: 3546, column: 17, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 3546, column: 11)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 3543, column: 5)
!4750 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3542, column: 7)
!4751 = !DILocation(line: 3546, column: 43, scope: !4748)
!4752 = !DILocation(line: 3546, column: 11, scope: !4749)
!4753 = !DILocation(line: 3548, column: 22, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 3548, column: 15)
!4755 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 3547, column: 9)
!4756 = !DILocation(line: 3548, column: 16, scope: !4754)
!4757 = !DILocation(line: 3548, column: 15, scope: !4755)
!4758 = !DILocation(line: 3549, column: 38, scope: !4754)
!4759 = !DILocation(line: 3549, column: 6, scope: !4754)
!4760 = !DILocation(line: 3557, column: 8, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3551, column: 6)
!4762 = !DILocation(line: 3565, column: 13, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3565, column: 7)
!4764 = !DILocation(line: 3565, column: 36, scope: !4763)
!4765 = !DILocation(line: 3565, column: 7, scope: !4690)
!4766 = !DILocation(line: 3566, column: 34, scope: !4763)
!4767 = !DILocation(line: 3566, column: 5, scope: !4763)
!4768 = !DILocation(line: 3567, column: 13, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3567, column: 7)
!4770 = !DILocation(line: 3567, column: 38, scope: !4769)
!4771 = !DILocation(line: 3567, column: 7, scope: !4690)
!4772 = !DILocation(line: 3568, column: 36, scope: !4769)
!4773 = !DILocation(line: 3568, column: 5, scope: !4769)
!4774 = !DILocation(line: 3613, column: 7, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3611, column: 7)
!4776 = !DILocation(line: 3613, column: 10, scope: !4775)
!4777 = !DILocation(line: 3613, column: 40, scope: !4775)
!4778 = !DILocation(line: 3611, column: 7, scope: !4690)
!4779 = !DILocation(line: 3617, column: 15, scope: !4775)
!4780 = !DILocation(line: 3616, column: 5, scope: !4775)
!4781 = !DILocation(line: 3618, column: 11, scope: !4690)
!4782 = !DILocation(line: 3618, column: 25, scope: !4690)
!4783 = !DILocation(line: 3621, column: 19, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3621, column: 7)
!4785 = !DILocation(line: 3621, column: 7, scope: !4690)
!4786 = !DILocation(line: 3622, column: 16, scope: !4784)
!4787 = !DILocation(line: 3622, column: 5, scope: !4784)
!4788 = !DILocation(line: 3627, column: 11, scope: !4690)
!4789 = !DILocation(line: 3627, column: 28, scope: !4690)
!4790 = !DILocation(line: 3632, column: 12, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3631, column: 7)
!4792 = !DILocation(line: 3633, column: 4, scope: !4791)
!4793 = !DILocation(line: 3633, column: 8, scope: !4791)
!4794 = !DILocation(line: 3633, column: 52, scope: !4791)
!4795 = !DILocation(line: 3631, column: 7, scope: !4690)
!4796 = !DILocation(line: 3634, column: 16, scope: !4791)
!4797 = !DILocation(line: 3634, column: 5, scope: !4791)
!4798 = !DILocation(line: 0, scope: !4709)
!4799 = !DILocation(line: 3636, column: 3, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 3636, column: 3)
!4801 = !DILocation(line: 3636, column: 3, scope: !4709)
!4802 = !DILocation(line: 3636, column: 3, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 3636, column: 3)
!4804 = !DILocation(line: 3638, column: 28, scope: !4690)
!4805 = !DILocation(line: 3638, column: 16, scope: !4690)
!4806 = !DILocation(line: 3638, column: 25, scope: !4690)
!4807 = !DILocation(line: 3644, column: 1, scope: !4690)
!4808 = distinct !DISubprogram(name: "pad_to_arg_alignment", scope: !3, file: !3, line: 3650, type: !4809, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4811)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{null, !4693, !750, !4693}
!4811 = !{!4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4824, !4825}
!4812 = !DILocalVariable(name: "offset_ptr", arg: 1, scope: !4808, file: !3, line: 3650, type: !4693)
!4813 = !DILocalVariable(name: "boundary", arg: 2, scope: !4808, file: !3, line: 3650, type: !750)
!4814 = !DILocalVariable(name: "alignment_pad", arg: 3, scope: !4808, file: !3, line: 3651, type: !4693)
!4815 = !DILocalVariable(name: "save_var", scope: !4808, file: !3, line: 3653, type: !880)
!4816 = !DILocalVariable(name: "save_constant", scope: !4808, file: !3, line: 3654, type: !851)
!4817 = !DILocalVariable(name: "boundary_in_bytes", scope: !4808, file: !3, line: 3655, type: !750)
!4818 = !DILocalVariable(name: "sp_offset", scope: !4808, file: !3, line: 3656, type: !851)
!4819 = !DILocalVariable(name: "sp_offset_tree", scope: !4820, file: !3, line: 3679, type: !880)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 3678, column: 2)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 3677, column: 11)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 3676, column: 5)
!4823 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 3675, column: 7)
!4824 = !DILocalVariable(name: "offset", scope: !4820, file: !3, line: 3680, type: !880)
!4825 = !DILocalVariable(name: "rounded", scope: !4820, file: !3, line: 3686, type: !880)
!4826 = !DILocation(line: 0, scope: !4808)
!4827 = !DILocation(line: 3655, column: 36, scope: !4808)
!4828 = !DILocation(line: 3666, column: 16, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 3666, column: 7)
!4830 = !DILocation(line: 3666, column: 7, scope: !4808)
!4831 = !DILocation(line: 3668, column: 30, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 3667, column: 5)
!4833 = !DILocation(line: 3669, column: 35, scope: !4832)
!4834 = !DILocation(line: 3670, column: 5, scope: !4832)
!4835 = !DILocation(line: 3672, column: 18, scope: !4808)
!4836 = !DILocation(line: 3672, column: 22, scope: !4808)
!4837 = !DILocation(line: 3673, column: 18, scope: !4808)
!4838 = !DILocation(line: 3673, column: 27, scope: !4808)
!4839 = !DILocation(line: 3675, column: 16, scope: !4823)
!4840 = !DILocation(line: 3675, column: 7, scope: !4808)
!4841 = !DILocation(line: 3677, column: 23, scope: !4821)
!4842 = !DILocation(line: 3677, column: 11, scope: !4821)
!4843 = !DILocation(line: 3677, column: 11, scope: !4822)
!4844 = !DILocation(line: 3679, column: 26, scope: !4820)
!4845 = !DILocation(line: 0, scope: !4820)
!4846 = !DILocation(line: 3680, column: 18, scope: !4820)
!4847 = !DILocation(line: 3686, column: 19, scope: !4820)
!4848 = !DILocation(line: 3689, column: 22, scope: !4820)
!4849 = !DILocation(line: 3689, column: 20, scope: !4820)
!4850 = !DILocation(line: 3691, column: 16, scope: !4820)
!4851 = !DILocation(line: 3691, column: 25, scope: !4820)
!4852 = !DILocation(line: 3692, column: 8, scope: !4820)
!4853 = !DILocation(line: 3693, column: 27, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 3692, column: 8)
!4855 = !DILocation(line: 3693, column: 25, scope: !4854)
!4856 = !DILocation(line: 3693, column: 6, scope: !4854)
!4857 = !DILocation(line: 3702, column: 6, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 3697, column: 2)
!4859 = !DILocation(line: 3698, column: 25, scope: !4858)
!4860 = !DILocation(line: 3704, column: 10, scope: !4858)
!4861 = !DILocation(line: 3705, column: 55, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 3704, column: 10)
!4863 = !DILocation(line: 3705, column: 32, scope: !4862)
!4864 = !DILocation(line: 3705, column: 8, scope: !4862)
!4865 = !DILocation(line: 3708, column: 1, scope: !4808)
!4866 = distinct !DISubprogram(name: "generate_setjmp_warnings", scope: !3, file: !3, line: 3798, type: !2749, scopeLine: 3799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4867)
!4867 = !{!4868}
!4868 = !DILocalVariable(name: "setjmp_crosses", scope: !4866, file: !3, line: 3800, type: !4869)
!4869 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !766, line: 47, baseType: !819)
!4870 = !DILocation(line: 3800, column: 27, scope: !4866)
!4871 = !DILocation(line: 0, scope: !4866)
!4872 = !DILocation(line: 3802, column: 7, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 3802, column: 7)
!4874 = !DILocation(line: 3802, column: 22, scope: !4873)
!4875 = !DILocation(line: 3803, column: 7, scope: !4873)
!4876 = !DILocation(line: 3803, column: 10, scope: !4873)
!4877 = !DILocation(line: 3802, column: 7, scope: !4866)
!4878 = !DILocation(line: 3806, column: 40, scope: !4866)
!4879 = !DILocation(line: 3806, column: 3, scope: !4866)
!4880 = !DILocation(line: 3807, column: 3, scope: !4866)
!4881 = !DILocation(line: 3808, column: 1, scope: !4866)
!4882 = distinct !DISubprogram(name: "setjmp_vars_warning", scope: !3, file: !3, line: 3760, type: !4883, scopeLine: 3761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4885)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{null, !4869, !880}
!4885 = !{!4886, !4887, !4888, !4889}
!4886 = !DILocalVariable(name: "setjmp_crosses", arg: 1, scope: !4882, file: !3, line: 3760, type: !4869)
!4887 = !DILocalVariable(name: "block", arg: 2, scope: !4882, file: !3, line: 3760, type: !880)
!4888 = !DILocalVariable(name: "decl", scope: !4882, file: !3, line: 3762, type: !880)
!4889 = !DILocalVariable(name: "sub", scope: !4882, file: !3, line: 3762, type: !880)
!4890 = !DILocation(line: 0, scope: !4882)
!4891 = !DILocation(line: 3764, column: 15, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 3764, column: 3)
!4893 = !DILocation(line: 3764, column: 8, scope: !4892)
!4894 = !DILocation(line: 0, scope: !4892)
!4895 = !DILocation(line: 3764, column: 3, scope: !4892)
!4896 = !DILocation(line: 3766, column: 11, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 3766, column: 11)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 3765, column: 5)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 3764, column: 3)
!4900 = !DILocation(line: 3766, column: 28, scope: !4897)
!4901 = !DILocation(line: 3767, column: 4, scope: !4897)
!4902 = !DILocation(line: 3767, column: 7, scope: !4897)
!4903 = !DILocation(line: 3768, column: 4, scope: !4897)
!4904 = !DILocation(line: 3768, column: 7, scope: !4897)
!4905 = !DILocation(line: 3769, column: 4, scope: !4897)
!4906 = !DILocation(line: 3769, column: 50, scope: !4897)
!4907 = !DILocation(line: 3769, column: 7, scope: !4897)
!4908 = !DILocation(line: 3766, column: 11, scope: !4898)
!4909 = !DILocation(line: 3770, column: 2, scope: !4897)
!4910 = !DILocation(line: 3764, column: 48, scope: !4899)
!4911 = !DILocation(line: 3764, column: 3, scope: !4899)
!4912 = distinct !{!4912, !4895, !4913}
!4913 = !DILocation(line: 3772, column: 5, scope: !4892)
!4914 = !DILocation(line: 3774, column: 14, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 3774, column: 3)
!4916 = !DILocation(line: 3774, column: 8, scope: !4915)
!4917 = !DILocation(line: 0, scope: !4915)
!4918 = !DILocation(line: 3774, column: 3, scope: !4915)
!4919 = !DILocation(line: 3775, column: 5, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 3774, column: 3)
!4921 = !DILocation(line: 3774, column: 50, scope: !4920)
!4922 = !DILocation(line: 3774, column: 3, scope: !4920)
!4923 = distinct !{!4923, !4918, !4924}
!4924 = !DILocation(line: 3775, column: 45, scope: !4915)
!4925 = !DILocation(line: 3776, column: 1, scope: !4882)
!4926 = distinct !DISubprogram(name: "setjmp_args_warning", scope: !3, file: !3, line: 3782, type: !4927, scopeLine: 3783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !4869}
!4929 = !{!4930, !4931}
!4930 = !DILocalVariable(name: "setjmp_crosses", arg: 1, scope: !4926, file: !3, line: 3782, type: !4869)
!4931 = !DILocalVariable(name: "decl", scope: !4926, file: !3, line: 3784, type: !880)
!4932 = !DILocation(line: 0, scope: !4926)
!4933 = !DILocation(line: 3785, column: 15, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 3785, column: 3)
!4935 = !DILocation(line: 3785, column: 8, scope: !4934)
!4936 = !DILocation(line: 0, scope: !4934)
!4937 = !DILocation(line: 3785, column: 3, scope: !4934)
!4938 = !DILocation(line: 3787, column: 9, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 3787, column: 9)
!4940 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 3785, column: 3)
!4941 = !DILocation(line: 3787, column: 25, scope: !4939)
!4942 = !DILocation(line: 3788, column: 2, scope: !4939)
!4943 = !DILocation(line: 3788, column: 5, scope: !4939)
!4944 = !DILocation(line: 3789, column: 2, scope: !4939)
!4945 = !DILocation(line: 3789, column: 48, scope: !4939)
!4946 = !DILocation(line: 3789, column: 5, scope: !4939)
!4947 = !DILocation(line: 3787, column: 9, scope: !4940)
!4948 = !DILocation(line: 3790, column: 7, scope: !4939)
!4949 = !DILocation(line: 3786, column: 21, scope: !4940)
!4950 = !DILocation(line: 3785, column: 3, scope: !4940)
!4951 = distinct !{!4951, !4937, !4952}
!4952 = !DILocation(line: 3792, column: 13, scope: !4934)
!4953 = !DILocation(line: 3793, column: 1, scope: !4926)
!4954 = distinct !DISubprogram(name: "reorder_blocks", scope: !3, file: !3, line: 3818, type: !2749, scopeLine: 3819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4955)
!4955 = !{!4956, !4957}
!4956 = !DILocalVariable(name: "block", scope: !4954, file: !3, line: 3820, type: !880)
!4957 = !DILocalVariable(name: "block_stack", scope: !4954, file: !3, line: 3821, type: !2176)
!4958 = !DILocation(line: 3820, column: 16, scope: !4954)
!4959 = !DILocation(line: 0, scope: !4954)
!4960 = !DILocation(line: 3821, column: 3, scope: !4954)
!4961 = !DILocation(line: 3823, column: 13, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 3823, column: 7)
!4963 = !DILocation(line: 3823, column: 7, scope: !4954)
!4964 = !DILocation(line: 3826, column: 17, scope: !4954)
!4965 = !DILocation(line: 3826, column: 15, scope: !4954)
!4966 = !DILocation(line: 3829, column: 3, scope: !4954)
!4967 = !DILocation(line: 3832, column: 3, scope: !4954)
!4968 = !DILocation(line: 3832, column: 27, scope: !4954)
!4969 = !DILocation(line: 3833, column: 3, scope: !4954)
!4970 = !DILocation(line: 3833, column: 23, scope: !4954)
!4971 = !DILocation(line: 3836, column: 21, scope: !4954)
!4972 = !DILocation(line: 3836, column: 3, scope: !4954)
!4973 = !DILocation(line: 3837, column: 46, scope: !4954)
!4974 = !DILocation(line: 3837, column: 29, scope: !4954)
!4975 = !DILocation(line: 3837, column: 27, scope: !4954)
!4976 = !DILocation(line: 3839, column: 3, scope: !4954)
!4977 = !DILocation(line: 3840, column: 1, scope: !4954)
!4978 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !142, file: !142, line: 184, type: !4979, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4981)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!2176, !750}
!4981 = !{!4982}
!4982 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4978, file: !142, line: 184, type: !750)
!4983 = !DILocation(line: 0, scope: !4978)
!4984 = !DILocation(line: 184, column: 1, scope: !4978)
!4985 = distinct !DISubprogram(name: "clear_block_marks", scope: !3, file: !3, line: 3845, type: !4986, scopeLine: 3846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{null, !880}
!4988 = !{!4989}
!4989 = !DILocalVariable(name: "block", arg: 1, scope: !4985, file: !3, line: 3845, type: !880)
!4990 = !DILocation(line: 0, scope: !4985)
!4991 = !DILocation(line: 3847, column: 3, scope: !4985)
!4992 = !DILocation(line: 3849, column: 7, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 3848, column: 5)
!4994 = !DILocation(line: 3849, column: 32, scope: !4993)
!4995 = !DILocation(line: 3850, column: 26, scope: !4993)
!4996 = !DILocation(line: 3850, column: 7, scope: !4993)
!4997 = !DILocation(line: 3851, column: 15, scope: !4993)
!4998 = distinct !{!4998, !4991, !4999}
!4999 = !DILocation(line: 3852, column: 5, scope: !4985)
!5000 = !DILocation(line: 3853, column: 1, scope: !4985)
!5001 = distinct !DISubprogram(name: "reorder_blocks_1", scope: !3, file: !3, line: 3856, type: !5002, scopeLine: 3857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5004)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{null, !765, !880, !4683}
!5004 = !{!5005, !5006, !5007, !5008, !5009, !5017, !5018}
!5005 = !DILocalVariable(name: "insns", arg: 1, scope: !5001, file: !3, line: 3856, type: !765)
!5006 = !DILocalVariable(name: "current_block", arg: 2, scope: !5001, file: !3, line: 3856, type: !880)
!5007 = !DILocalVariable(name: "p_block_stack", arg: 3, scope: !5001, file: !3, line: 3856, type: !4683)
!5008 = !DILocalVariable(name: "insn", scope: !5001, file: !3, line: 3858, type: !765)
!5009 = !DILocalVariable(name: "block", scope: !5010, file: !3, line: 3866, type: !880)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 3865, column: 6)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 3864, column: 8)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 3863, column: 2)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 3862, column: 11)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 3861, column: 5)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 3860, column: 3)
!5016 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 3860, column: 3)
!5017 = !DILocalVariable(name: "origin", scope: !5010, file: !3, line: 3867, type: !880)
!5018 = !DILocalVariable(name: "new_block", scope: !5019, file: !3, line: 3877, type: !880)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3876, column: 3)
!5020 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 3875, column: 12)
!5021 = !DILocation(line: 0, scope: !5001)
!5022 = !DILocation(line: 3860, column: 8, scope: !5016)
!5023 = !DILocation(line: 0, scope: !5016)
!5024 = !DILocation(line: 3860, column: 3, scope: !5016)
!5025 = !DILocation(line: 3862, column: 11, scope: !5013)
!5026 = !DILocation(line: 3862, column: 11, scope: !5014)
!5027 = !DILocation(line: 3864, column: 8, scope: !5011)
!5028 = !DILocation(line: 3864, column: 25, scope: !5011)
!5029 = !DILocation(line: 3864, column: 8, scope: !5012)
!5030 = !DILocation(line: 3866, column: 21, scope: !5010)
!5031 = !DILocation(line: 0, scope: !5010)
!5032 = !DILocation(line: 3869, column: 18, scope: !5010)
!5033 = !DILocation(line: 3875, column: 12, scope: !5020)
!5034 = !DILocation(line: 3875, column: 12, scope: !5010)
!5035 = !DILocation(line: 3877, column: 22, scope: !5019)
!5036 = !DILocation(line: 0, scope: !5019)
!5037 = !DILocation(line: 3879, column: 5, scope: !5019)
!5038 = !DILocation(line: 3879, column: 39, scope: !5019)
!5039 = !DILocation(line: 3881, column: 9, scope: !5019)
!5040 = !DILocation(line: 3880, column: 5, scope: !5019)
!5041 = !DILocation(line: 3881, column: 7, scope: !5019)
!5042 = !DILocation(line: 3882, column: 35, scope: !5019)
!5043 = !DILocation(line: 3884, column: 23, scope: !5019)
!5044 = !DILocation(line: 3889, column: 33, scope: !5010)
!5045 = !DILocation(line: 3886, column: 3, scope: !5019)
!5046 = !DILocation(line: 3888, column: 8, scope: !5010)
!5047 = !DILocation(line: 3888, column: 32, scope: !5010)
!5048 = !DILocation(line: 3889, column: 8, scope: !5010)
!5049 = !DILocation(line: 3893, column: 18, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 3893, column: 12)
!5051 = !DILocation(line: 3893, column: 12, scope: !5010)
!5052 = !DILocation(line: 3895, column: 15, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 3895, column: 9)
!5054 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 3894, column: 3)
!5055 = !DILocation(line: 3895, column: 9, scope: !5054)
!5056 = !DILocation(line: 3896, column: 7, scope: !5053)
!5057 = !DILocation(line: 3898, column: 5, scope: !5054)
!5058 = !DILocation(line: 3898, column: 32, scope: !5054)
!5059 = !DILocation(line: 3899, column: 27, scope: !5054)
!5060 = !DILocation(line: 3899, column: 5, scope: !5054)
!5061 = !DILocation(line: 3899, column: 25, scope: !5054)
!5062 = !DILocation(line: 3900, column: 37, scope: !5054)
!5063 = !DILocation(line: 3902, column: 3, scope: !5054)
!5064 = !DILocation(line: 3903, column: 8, scope: !5010)
!5065 = !DILocation(line: 3904, column: 6, scope: !5010)
!5066 = !DILocation(line: 3905, column: 30, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 3905, column: 13)
!5068 = !DILocation(line: 3905, column: 13, scope: !5011)
!5069 = !DILocation(line: 3907, column: 28, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 3906, column: 6)
!5071 = !DILocation(line: 3907, column: 8, scope: !5070)
!5072 = !DILocation(line: 3907, column: 26, scope: !5070)
!5073 = !DILocation(line: 3909, column: 22, scope: !5070)
!5074 = !DILocation(line: 3909, column: 5, scope: !5070)
!5075 = !DILocation(line: 3909, column: 3, scope: !5070)
!5076 = !DILocation(line: 3910, column: 24, scope: !5070)
!5077 = !DILocation(line: 3911, column: 6, scope: !5070)
!5078 = !DILocation(line: 3860, column: 35, scope: !5015)
!5079 = !DILocation(line: 3860, column: 3, scope: !5015)
!5080 = distinct !{!5080, !5024, !5081}
!5081 = !DILocation(line: 3913, column: 5, scope: !5016)
!5082 = !DILocation(line: 3914, column: 1, scope: !5001)
!5083 = distinct !DISubprogram(name: "blocks_nreverse", scope: !3, file: !3, line: 3920, type: !5084, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5086)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{!880, !880}
!5086 = !{!5087, !5088, !5089, !5090}
!5087 = !DILocalVariable(name: "t", arg: 1, scope: !5083, file: !3, line: 3920, type: !880)
!5088 = !DILocalVariable(name: "prev", scope: !5083, file: !3, line: 3922, type: !880)
!5089 = !DILocalVariable(name: "decl", scope: !5083, file: !3, line: 3922, type: !880)
!5090 = !DILocalVariable(name: "next", scope: !5083, file: !3, line: 3922, type: !880)
!5091 = !DILocation(line: 0, scope: !5083)
!5092 = !DILocation(line: 3923, column: 8, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 3923, column: 3)
!5094 = !DILocation(line: 0, scope: !5093)
!5095 = !DILocation(line: 3923, column: 3, scope: !5093)
!5096 = !DILocation(line: 3925, column: 14, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 3924, column: 5)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 3923, column: 3)
!5099 = !DILocation(line: 3926, column: 26, scope: !5097)
!5100 = !DILocation(line: 3923, column: 3, scope: !5098)
!5101 = distinct !{!5101, !5095, !5102}
!5102 = !DILocation(line: 3928, column: 5, scope: !5093)
!5103 = !DILocation(line: 3929, column: 3, scope: !5083)
!5104 = distinct !DISubprogram(name: "number_blocks", scope: !3, file: !3, line: 3983, type: !4986, scopeLine: 3984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5105)
!5105 = !{!5106, !5107, !5108, !5109}
!5106 = !DILocalVariable(name: "fn", arg: 1, scope: !5104, file: !3, line: 3983, type: !880)
!5107 = !DILocalVariable(name: "i", scope: !5104, file: !3, line: 3985, type: !750)
!5108 = !DILocalVariable(name: "n_blocks", scope: !5104, file: !3, line: 3986, type: !750)
!5109 = !DILocalVariable(name: "block_vector", scope: !5104, file: !3, line: 3987, type: !1371)
!5110 = !DILocation(line: 0, scope: !5104)
!5111 = !DILocation(line: 3986, column: 3, scope: !5104)
!5112 = !DILocation(line: 3997, column: 36, scope: !5104)
!5113 = !DILocation(line: 3997, column: 18, scope: !5104)
!5114 = !DILocation(line: 0, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 4000, column: 3)
!5116 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 4000, column: 3)
!5117 = !DILocation(line: 4000, column: 8, scope: !5116)
!5118 = !DILocation(line: 0, scope: !5116)
!5119 = !DILocation(line: 4000, column: 17, scope: !5115)
!5120 = !DILocation(line: 4000, column: 3, scope: !5116)
!5121 = !DILocation(line: 4002, column: 54, scope: !5115)
!5122 = !DILocation(line: 4002, column: 5, scope: !5115)
!5123 = !DILocation(line: 4002, column: 36, scope: !5115)
!5124 = !DILocation(line: 4000, column: 29, scope: !5115)
!5125 = !DILocation(line: 4000, column: 3, scope: !5115)
!5126 = distinct !{!5126, !5120, !5127}
!5127 = !DILocation(line: 4002, column: 54, scope: !5116)
!5128 = !DILocation(line: 4004, column: 9, scope: !5104)
!5129 = !DILocation(line: 4004, column: 3, scope: !5104)
!5130 = !DILocation(line: 4007, column: 1, scope: !5104)
!5131 = distinct !DISubprogram(name: "get_block_vector", scope: !3, file: !3, line: 3967, type: !5132, scopeLine: 3968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5134)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!1371, !880, !4649}
!5134 = !{!5135, !5136, !5137}
!5135 = !DILocalVariable(name: "block", arg: 1, scope: !5131, file: !3, line: 3967, type: !880)
!5136 = !DILocalVariable(name: "n_blocks_p", arg: 2, scope: !5131, file: !3, line: 3967, type: !4649)
!5137 = !DILocalVariable(name: "block_vector", scope: !5131, file: !3, line: 3969, type: !1371)
!5138 = !DILocation(line: 0, scope: !5131)
!5139 = !DILocation(line: 3971, column: 17, scope: !5131)
!5140 = !DILocation(line: 3971, column: 15, scope: !5131)
!5141 = !DILocation(line: 3972, column: 18, scope: !5131)
!5142 = !DILocation(line: 3973, column: 3, scope: !5131)
!5143 = !DILocation(line: 3975, column: 3, scope: !5131)
!5144 = distinct !DISubprogram(name: "debug_find_var_in_block_tree", scope: !3, file: !3, line: 4012, type: !5145, scopeLine: 4013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5147)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{!880, !880, !880}
!5147 = !{!5148, !5149, !5150, !5151}
!5148 = !DILocalVariable(name: "var", arg: 1, scope: !5144, file: !3, line: 4012, type: !880)
!5149 = !DILocalVariable(name: "block", arg: 2, scope: !5144, file: !3, line: 4012, type: !880)
!5150 = !DILocalVariable(name: "t", scope: !5144, file: !3, line: 4014, type: !880)
!5151 = !DILocalVariable(name: "ret", scope: !5152, file: !3, line: 4022, type: !880)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4021, column: 5)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 4020, column: 3)
!5154 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 4020, column: 3)
!5155 = !DILocation(line: 0, scope: !5144)
!5156 = !DILocation(line: 4016, column: 12, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 4016, column: 3)
!5158 = !DILocation(line: 4016, column: 8, scope: !5157)
!5159 = !DILocation(line: 0, scope: !5157)
!5160 = !DILocation(line: 4016, column: 3, scope: !5157)
!5161 = !DILocation(line: 4017, column: 11, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 4017, column: 9)
!5163 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 4016, column: 3)
!5164 = !DILocation(line: 4017, column: 9, scope: !5163)
!5165 = !DILocation(line: 4016, column: 39, scope: !5163)
!5166 = !DILocation(line: 4016, column: 3, scope: !5163)
!5167 = distinct !{!5167, !5160, !5168}
!5168 = !DILocation(line: 4018, column: 14, scope: !5157)
!5169 = !DILocation(line: 4020, column: 12, scope: !5154)
!5170 = !DILocation(line: 4020, column: 8, scope: !5154)
!5171 = !DILocation(line: 0, scope: !5154)
!5172 = !DILocation(line: 4020, column: 3, scope: !5154)
!5173 = !DILocation(line: 4022, column: 18, scope: !5152)
!5174 = !DILocation(line: 0, scope: !5152)
!5175 = !DILocation(line: 4023, column: 11, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 4023, column: 11)
!5177 = !DILocation(line: 0, scope: !5153)
!5178 = !DILocation(line: 4020, column: 44, scope: !5153)
!5179 = !DILocation(line: 4020, column: 3, scope: !5153)
!5180 = distinct !{!5180, !5172, !5181}
!5181 = !DILocation(line: 4025, column: 5, scope: !5154)
!5182 = !DILocation(line: 4028, column: 1, scope: !5144)
!5183 = distinct !DISubprogram(name: "invoke_set_current_function_hook", scope: !3, file: !3, line: 4041, type: !4986, scopeLine: 4042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5184)
!5184 = !{!5185, !5186}
!5185 = !DILocalVariable(name: "fndecl", arg: 1, scope: !5183, file: !3, line: 4041, type: !880)
!5186 = !DILocalVariable(name: "opts", scope: !5187, file: !3, line: 4045, type: !880)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 4044, column: 5)
!5188 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 4043, column: 7)
!5189 = !DILocation(line: 0, scope: !5183)
!5190 = !DILocation(line: 4043, column: 8, scope: !5188)
!5191 = !DILocation(line: 4043, column: 7, scope: !5183)
!5192 = !DILocation(line: 4045, column: 20, scope: !5187)
!5193 = !DILocation(line: 4046, column: 8, scope: !5187)
!5194 = !DILocation(line: 0, scope: !5187)
!5195 = !DILocation(line: 4049, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 4049, column: 11)
!5197 = !DILocation(line: 4050, column: 9, scope: !5196)
!5198 = !DILocation(line: 4049, column: 11, scope: !5187)
!5199 = !DILocation(line: 4053, column: 11, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 4053, column: 11)
!5201 = !DILocation(line: 4053, column: 37, scope: !5200)
!5202 = !DILocation(line: 4053, column: 11, scope: !5187)
!5203 = !DILocation(line: 4055, column: 30, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 4054, column: 2)
!5205 = !DILocation(line: 4056, column: 29, scope: !5204)
!5206 = !DILocation(line: 4056, column: 4, scope: !5204)
!5207 = !DILocation(line: 4057, column: 2, scope: !5204)
!5208 = !DILocation(line: 4059, column: 15, scope: !5187)
!5209 = !DILocation(line: 4059, column: 7, scope: !5187)
!5210 = !DILocation(line: 4060, column: 5, scope: !5187)
!5211 = !DILocation(line: 4061, column: 1, scope: !5183)
!5212 = distinct !DISubprogram(name: "push_cfun", scope: !3, file: !3, line: 4082, type: !2832, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5213)
!5213 = !{!5214}
!5214 = !DILocalVariable(name: "new_cfun", arg: 1, scope: !5212, file: !3, line: 4082, type: !1125)
!5215 = !DILocation(line: 0, scope: !5212)
!5216 = !DILocation(line: 4084, column: 3, scope: !5212)
!5217 = !DILocation(line: 4085, column: 3, scope: !5212)
!5218 = !DILocation(line: 4086, column: 1, scope: !5212)
!5219 = distinct !DISubprogram(name: "pop_cfun", scope: !3, file: !3, line: 4091, type: !2749, scopeLine: 4092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5220)
!5220 = !{!5221}
!5221 = !DILocalVariable(name: "new_cfun", scope: !5219, file: !3, line: 4093, type: !1125)
!5222 = !DILocation(line: 4093, column: 31, scope: !5219)
!5223 = !DILocation(line: 0, scope: !5219)
!5224 = !DILocation(line: 4094, column: 3, scope: !5219)
!5225 = !DILocation(line: 4095, column: 1, scope: !5219)
!5226 = distinct !DISubprogram(name: "get_next_funcdef_no", scope: !3, file: !3, line: 4099, type: !2323, scopeLine: 4100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5227 = !DILocation(line: 4101, column: 20, scope: !5226)
!5228 = !DILocation(line: 4101, column: 3, scope: !5226)
!5229 = distinct !DISubprogram(name: "push_struct_function", scope: !3, file: !3, line: 4169, type: !4986, scopeLine: 4170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5230)
!5230 = !{!5231}
!5231 = !DILocalVariable(name: "fndecl", arg: 1, scope: !5229, file: !3, line: 4169, type: !880)
!5232 = !DILocation(line: 0, scope: !5229)
!5233 = !DILocation(line: 4171, column: 3, scope: !5229)
!5234 = !DILocation(line: 4172, column: 3, scope: !5229)
!5235 = !DILocation(line: 4173, column: 1, scope: !5229)
!5236 = distinct !DISubprogram(name: "init_dummy_function_start", scope: !3, file: !3, line: 4212, type: !2749, scopeLine: 4213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5237 = !DILocation(line: 4214, column: 3, scope: !5236)
!5238 = !DILocation(line: 4215, column: 21, scope: !5236)
!5239 = !DILocation(line: 4216, column: 3, scope: !5236)
!5240 = !DILocation(line: 4217, column: 3, scope: !5236)
!5241 = !DILocation(line: 4218, column: 1, scope: !5236)
!5242 = distinct !DISubprogram(name: "prepare_function_start", scope: !3, file: !3, line: 4179, type: !2749, scopeLine: 4180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5243 = !DILocation(line: 4181, column: 3, scope: !5242)
!5244 = !DILocation(line: 4182, column: 3, scope: !5242)
!5245 = !DILocation(line: 4183, column: 3, scope: !5242)
!5246 = !DILocation(line: 4184, column: 3, scope: !5242)
!5247 = !DILocation(line: 4185, column: 3, scope: !5242)
!5248 = !DILocation(line: 4186, column: 3, scope: !5242)
!5249 = !DILocation(line: 4188, column: 24, scope: !5242)
!5250 = !DILocation(line: 4188, column: 22, scope: !5242)
!5251 = !DILocation(line: 4188, column: 20, scope: !5242)
!5252 = !DILocation(line: 4191, column: 22, scope: !5242)
!5253 = !DILocation(line: 4194, column: 16, scope: !5242)
!5254 = !DILocation(line: 4197, column: 25, scope: !5242)
!5255 = !DILocation(line: 4200, column: 23, scope: !5242)
!5256 = !DILocation(line: 4203, column: 24, scope: !5242)
!5257 = !DILocation(line: 4204, column: 1, scope: !5242)
!5258 = distinct !DISubprogram(name: "init_function_start", scope: !3, file: !3, line: 4225, type: !4986, scopeLine: 4226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5259)
!5259 = !{!5260}
!5260 = !DILocalVariable(name: "subr", arg: 1, scope: !5258, file: !3, line: 4225, type: !880)
!5261 = !DILocation(line: 0, scope: !5258)
!5262 = !DILocation(line: 4227, column: 7, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 4227, column: 7)
!5264 = !DILocation(line: 4227, column: 12, scope: !5263)
!5265 = !DILocation(line: 4227, column: 15, scope: !5263)
!5266 = !DILocation(line: 4227, column: 7, scope: !5258)
!5267 = !DILocation(line: 4228, column: 5, scope: !5263)
!5268 = !DILocation(line: 4230, column: 5, scope: !5263)
!5269 = !DILocation(line: 4231, column: 3, scope: !5258)
!5270 = !DILocation(line: 4235, column: 7, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 4235, column: 7)
!5272 = !DILocation(line: 4235, column: 7, scope: !5258)
!5273 = !DILocation(line: 4236, column: 5, scope: !5271)
!5274 = !DILocation(line: 4237, column: 1, scope: !5258)
!5275 = distinct !DISubprogram(name: "init_function_for_compilation", scope: !3, file: !3, line: 4241, type: !2202, scopeLine: 4242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5276 = !DILocation(line: 4243, column: 16, scope: !5275)
!5277 = !DILocation(line: 4244, column: 3, scope: !5275)
!5278 = distinct !DISubprogram(name: "expand_main_function", scope: !3, file: !3, line: 4268, type: !2749, scopeLine: 4269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5279 = !DILocation(line: 4276, column: 1, scope: !5278)
!5280 = distinct !DISubprogram(name: "stack_protect_prologue", scope: !3, file: !3, line: 4287, type: !2749, scopeLine: 4288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5281)
!5281 = !{!5282, !5283, !5284, !5285}
!5282 = !DILocalVariable(name: "guard_decl", scope: !5280, file: !3, line: 4289, type: !880)
!5283 = !DILocalVariable(name: "x", scope: !5280, file: !3, line: 4290, type: !765)
!5284 = !DILocalVariable(name: "y", scope: !5280, file: !3, line: 4290, type: !765)
!5285 = !DILocalVariable(name: "insn", scope: !5286, file: !3, line: 4299, type: !765)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 4298, column: 5)
!5287 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 4297, column: 7)
!5288 = !DILocation(line: 4289, column: 29, scope: !5280)
!5289 = !DILocation(line: 4289, column: 21, scope: !5280)
!5290 = !DILocation(line: 0, scope: !5280)
!5291 = !DILocation(line: 4292, column: 28, scope: !5280)
!5292 = !DILocation(line: 4292, column: 7, scope: !5280)
!5293 = !DILocation(line: 4293, column: 7, scope: !5280)
!5294 = !DILocation(line: 4299, column: 18, scope: !5286)
!5295 = !DILocation(line: 0, scope: !5286)
!5296 = !DILocation(line: 4300, column: 11, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 4300, column: 11)
!5298 = !DILocation(line: 4300, column: 11, scope: !5286)
!5299 = !DILocation(line: 4302, column: 4, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 4301, column: 2)
!5301 = !DILocation(line: 4303, column: 4, scope: !5300)
!5302 = !DILocation(line: 4308, column: 3, scope: !5280)
!5303 = !DILocation(line: 4309, column: 1, scope: !5280)
!5304 = distinct !DISubprogram(name: "expand_normal", scope: !711, file: !711, line: 562, type: !5305, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5307)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!765, !880}
!5307 = !{!5308}
!5308 = !DILocalVariable(name: "exp", arg: 1, scope: !5304, file: !711, line: 562, type: !880)
!5309 = !DILocation(line: 0, scope: !5304)
!5310 = !DILocation(line: 564, column: 10, scope: !5304)
!5311 = !DILocation(line: 564, column: 3, scope: !5304)
!5312 = distinct !DISubprogram(name: "stack_protect_epilogue", scope: !3, file: !3, line: 4320, type: !2749, scopeLine: 4321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5313)
!5313 = !{!5314, !5315, !5316, !5317, !5318}
!5314 = !DILocalVariable(name: "guard_decl", scope: !5312, file: !3, line: 4322, type: !880)
!5315 = !DILocalVariable(name: "label", scope: !5312, file: !3, line: 4323, type: !765)
!5316 = !DILocalVariable(name: "x", scope: !5312, file: !3, line: 4324, type: !765)
!5317 = !DILocalVariable(name: "y", scope: !5312, file: !3, line: 4324, type: !765)
!5318 = !DILocalVariable(name: "tmp", scope: !5312, file: !3, line: 4324, type: !765)
!5319 = !DILocation(line: 4322, column: 29, scope: !5312)
!5320 = !DILocation(line: 4322, column: 21, scope: !5312)
!5321 = !DILocation(line: 0, scope: !5312)
!5322 = !DILocation(line: 4323, column: 15, scope: !5312)
!5323 = !DILocation(line: 4326, column: 28, scope: !5312)
!5324 = !DILocation(line: 4326, column: 7, scope: !5312)
!5325 = !DILocation(line: 4327, column: 7, scope: !5312)
!5326 = !DILocation(line: 4334, column: 13, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 4332, column: 5)
!5328 = !DILocation(line: 4335, column: 11, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 4335, column: 11)
!5330 = !DILocation(line: 4335, column: 11, scope: !5327)
!5331 = !DILocation(line: 4337, column: 4, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 4336, column: 2)
!5333 = !DILocation(line: 4338, column: 4, scope: !5332)
!5334 = !DILocation(line: 4343, column: 52, scope: !5327)
!5335 = !DILocation(line: 4343, column: 7, scope: !5327)
!5336 = !DILocation(line: 4344, column: 7, scope: !5327)
!5337 = !DILocation(line: 4352, column: 9, scope: !5312)
!5338 = !DILocation(line: 4353, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 4353, column: 7)
!5340 = !DILocation(line: 4353, column: 7, scope: !5312)
!5341 = !DILocation(line: 4354, column: 5, scope: !5339)
!5342 = !DILocation(line: 4356, column: 29, scope: !5312)
!5343 = !DILocation(line: 4356, column: 21, scope: !5312)
!5344 = !DILocation(line: 4356, column: 3, scope: !5312)
!5345 = !DILocation(line: 4357, column: 3, scope: !5312)
!5346 = !DILocation(line: 4358, column: 1, scope: !5312)
!5347 = distinct !DISubprogram(name: "expand_function_start", scope: !3, file: !3, line: 4367, type: !4986, scopeLine: 4368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5348)
!5348 = !{!5349, !5350, !5353, !5355, !5358, !5361, !5364, !5367, !5368, !5369, !5370, !5373, !5374}
!5349 = !DILocalVariable(name: "subr", arg: 1, scope: !5347, file: !3, line: 4367, type: !880)
!5350 = !DILocalVariable(name: "value_address", scope: !5351, file: !3, line: 4393, type: !765)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 4391, column: 5)
!5352 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 4390, column: 7)
!5353 = !DILocalVariable(name: "sv", scope: !5354, file: !3, line: 4404, type: !765)
!5354 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 4403, column: 2)
!5355 = !DILocalVariable(name: "x", scope: !5356, file: !3, line: 4416, type: !765)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4415, column: 2)
!5357 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 4414, column: 11)
!5358 = !DILocalVariable(name: "return_type", scope: !5359, file: !3, line: 4432, type: !880)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 4429, column: 5)
!5360 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 4425, column: 12)
!5361 = !DILocalVariable(name: "hard_reg", scope: !5362, file: !3, line: 4445, type: !765)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 4441, column: 2)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 4433, column: 11)
!5364 = !DILocalVariable(name: "parm", scope: !5365, file: !3, line: 4471, type: !880)
!5365 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 4470, column: 5)
!5366 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 4469, column: 7)
!5367 = !DILocalVariable(name: "local", scope: !5365, file: !3, line: 4472, type: !765)
!5368 = !DILocalVariable(name: "chain", scope: !5365, file: !3, line: 4472, type: !765)
!5369 = !DILocalVariable(name: "insn", scope: !5365, file: !3, line: 4472, type: !765)
!5370 = !DILocalVariable(name: "t_save", scope: !5371, file: !3, line: 4493, type: !880)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 4492, column: 5)
!5372 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 4491, column: 7)
!5373 = !DILocalVariable(name: "r_save", scope: !5371, file: !3, line: 4494, type: !765)
!5374 = !DILocalVariable(name: "var", scope: !5371, file: !3, line: 4498, type: !880)
!5375 = !DILocation(line: 0, scope: !5347)
!5376 = !DILocation(line: 4371, column: 3, scope: !5347)
!5377 = !DILocation(line: 4374, column: 8, scope: !5347)
!5378 = !DILocation(line: 4375, column: 8, scope: !5347)
!5379 = !DILocation(line: 4375, column: 13, scope: !5347)
!5380 = !DILocation(line: 4375, column: 11, scope: !5347)
!5381 = !DILocation(line: 4374, column: 7, scope: !5347)
!5382 = !DILocation(line: 4374, column: 5, scope: !5347)
!5383 = !DILocation(line: 4378, column: 8, scope: !5347)
!5384 = !DILocation(line: 4378, column: 24, scope: !5347)
!5385 = !DILocation(line: 4378, column: 36, scope: !5347)
!5386 = !DILocation(line: 4378, column: 41, scope: !5347)
!5387 = !DILocation(line: 4378, column: 39, scope: !5347)
!5388 = !DILocation(line: 4378, column: 7, scope: !5347)
!5389 = !DILocation(line: 4378, column: 5, scope: !5347)
!5390 = !DILocation(line: 4383, column: 18, scope: !5347)
!5391 = !DILocation(line: 4383, column: 16, scope: !5347)
!5392 = !DILocation(line: 4390, column: 26, scope: !5352)
!5393 = !DILocation(line: 4390, column: 7, scope: !5352)
!5394 = !DILocation(line: 4390, column: 7, scope: !5347)
!5395 = !DILocation(line: 0, scope: !5351)
!5396 = !DILocation(line: 4404, column: 27, scope: !5354)
!5397 = !DILocation(line: 4404, column: 45, scope: !5354)
!5398 = !DILocation(line: 4404, column: 13, scope: !5354)
!5399 = !DILocation(line: 0, scope: !5354)
!5400 = !DILocation(line: 4408, column: 8, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 4408, column: 8)
!5402 = !DILocation(line: 4408, column: 8, scope: !5354)
!5403 = !DILocation(line: 4410, column: 24, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 4409, column: 6)
!5405 = !DILocation(line: 4411, column: 8, scope: !5404)
!5406 = !DILocation(line: 4412, column: 6, scope: !5404)
!5407 = !DILocation(line: 4414, column: 11, scope: !5357)
!5408 = !DILocation(line: 4414, column: 11, scope: !5351)
!5409 = !DILocation(line: 0, scope: !5356)
!5410 = !DILocation(line: 4417, column: 9, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 4417, column: 8)
!5412 = !DILocation(line: 4417, column: 8, scope: !5356)
!5413 = !DILocation(line: 4419, column: 25, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 4418, column: 6)
!5415 = !DILocation(line: 4419, column: 12, scope: !5414)
!5416 = !DILocation(line: 4420, column: 31, scope: !5414)
!5417 = !DILocation(line: 4420, column: 8, scope: !5414)
!5418 = !DILocation(line: 4422, column: 4, scope: !5356)
!5419 = !DILocation(line: 4421, column: 6, scope: !5414)
!5420 = !DILocation(line: 4423, column: 2, scope: !5356)
!5421 = !DILocation(line: 4425, column: 12, scope: !5360)
!5422 = !DILocation(line: 4425, column: 43, scope: !5360)
!5423 = !DILocation(line: 4425, column: 12, scope: !5352)
!5424 = !DILocation(line: 0, scope: !5360)
!5425 = !DILocation(line: 4427, column: 5, scope: !5360)
!5426 = !DILocation(line: 4432, column: 26, scope: !5359)
!5427 = !DILocation(line: 0, scope: !5359)
!5428 = !DILocation(line: 4433, column: 11, scope: !5363)
!5429 = !DILocation(line: 4433, column: 35, scope: !5363)
!5430 = !DILocation(line: 4434, column: 4, scope: !5363)
!5431 = !DILocation(line: 4434, column: 21, scope: !5363)
!5432 = !DILocation(line: 4434, column: 7, scope: !5363)
!5433 = !DILocation(line: 4433, column: 11, scope: !5359)
!5434 = !DILocation(line: 4438, column: 2, scope: !5363)
!5435 = !DILocation(line: 4445, column: 19, scope: !5362)
!5436 = !DILocation(line: 0, scope: !5362)
!5437 = !DILocation(line: 4449, column: 8, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 4449, column: 8)
!5439 = !DILocation(line: 4449, column: 8, scope: !5362)
!5440 = !DILocation(line: 4450, column: 6, scope: !5438)
!5441 = !DILocation(line: 4454, column: 8, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 4453, column: 6)
!5443 = !DILocation(line: 4455, column: 8, scope: !5442)
!5444 = !DILocation(line: 4461, column: 7, scope: !5359)
!5445 = !DILocation(line: 4461, column: 42, scope: !5359)
!5446 = !DILocation(line: 4466, column: 3, scope: !5347)
!5447 = !DILocation(line: 4469, column: 7, scope: !5366)
!5448 = !DILocation(line: 4469, column: 13, scope: !5366)
!5449 = !DILocation(line: 4469, column: 7, scope: !5347)
!5450 = !DILocation(line: 0, scope: !5365)
!5451 = !DILocation(line: 4474, column: 15, scope: !5365)
!5452 = !DILocation(line: 4475, column: 29, scope: !5365)
!5453 = !DILocation(line: 4475, column: 43, scope: !5365)
!5454 = !DILocation(line: 4475, column: 15, scope: !5365)
!5455 = !DILocation(line: 4477, column: 7, scope: !5365)
!5456 = !DILocation(line: 4478, column: 7, scope: !5365)
!5457 = !DILocation(line: 4479, column: 32, scope: !5365)
!5458 = !DILocation(line: 4479, column: 7, scope: !5365)
!5459 = !DILocation(line: 4481, column: 14, scope: !5365)
!5460 = !DILocation(line: 4484, column: 11, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 4484, column: 11)
!5462 = !DILocation(line: 4485, column: 4, scope: !5461)
!5463 = !DILocation(line: 4485, column: 24, scope: !5461)
!5464 = !DILocation(line: 4485, column: 41, scope: !5461)
!5465 = !DILocation(line: 4485, column: 7, scope: !5461)
!5466 = !DILocation(line: 4484, column: 11, scope: !5365)
!5467 = !DILocation(line: 4486, column: 2, scope: !5461)
!5468 = !DILocation(line: 4491, column: 7, scope: !5372)
!5469 = !DILocation(line: 4491, column: 13, scope: !5372)
!5470 = !DILocation(line: 4491, column: 7, scope: !5347)
!5471 = !DILocation(line: 4498, column: 18, scope: !5371)
!5472 = !DILocation(line: 0, scope: !5371)
!5473 = !DILocation(line: 4499, column: 12, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 4499, column: 11)
!5475 = !DILocation(line: 4499, column: 11, scope: !5371)
!5476 = !DILocation(line: 4500, column: 2, scope: !5474)
!5477 = !DILocation(line: 4502, column: 16, scope: !5371)
!5478 = !DILocation(line: 4505, column: 16, scope: !5371)
!5479 = !DILocation(line: 4506, column: 16, scope: !5371)
!5480 = !DILocation(line: 4508, column: 39, scope: !5371)
!5481 = !DILocation(line: 4508, column: 31, scope: !5371)
!5482 = !DILocation(line: 4508, column: 7, scope: !5371)
!5483 = !DILocation(line: 4509, column: 7, scope: !5371)
!5484 = !DILocation(line: 4510, column: 5, scope: !5371)
!5485 = !DILocation(line: 4516, column: 3, scope: !5347)
!5486 = !DILocation(line: 4518, column: 3, scope: !5347)
!5487 = !DILocation(line: 4520, column: 21, scope: !5347)
!5488 = !DILocation(line: 4520, column: 19, scope: !5347)
!5489 = !DILocation(line: 4531, column: 6, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 4531, column: 6)
!5491 = !DILocation(line: 4531, column: 6, scope: !5347)
!5492 = !DILocation(line: 4532, column: 30, scope: !5490)
!5493 = !DILocation(line: 4532, column: 28, scope: !5490)
!5494 = !DILocation(line: 4532, column: 5, scope: !5490)
!5495 = !DILocation(line: 4535, column: 3, scope: !5347)
!5496 = !DILocation(line: 4536, column: 1, scope: !5347)
!5497 = distinct !DISubprogram(name: "assign_parms", scope: !3, file: !3, line: 3139, type: !4986, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5498)
!5498 = !{!5499, !5500, !5501, !5502, !5503, !5504, !5508, !5511, !5516, !5517, !5520, !5523, !5524, !5525, !5528, !5529}
!5499 = !DILocalVariable(name: "fndecl", arg: 1, scope: !5497, file: !3, line: 3139, type: !880)
!5500 = !DILocalVariable(name: "all", scope: !5497, file: !3, line: 3141, type: !4293)
!5501 = !DILocalVariable(name: "parm", scope: !5497, file: !3, line: 3142, type: !880)
!5502 = !DILocalVariable(name: "fnargs", scope: !5497, file: !3, line: 3143, type: !2176)
!5503 = !DILocalVariable(name: "i", scope: !5497, file: !3, line: 3144, type: !7)
!5504 = !DILocalVariable(name: "data", scope: !5505, file: !3, line: 3154, type: !4316)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 3153, column: 5)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3152, column: 3)
!5507 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 3152, column: 3)
!5508 = !DILocalVariable(name: "align", scope: !5509, file: !3, line: 3170, type: !7)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 3169, column: 9)
!5510 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3168, column: 11)
!5511 = !DILocalVariable(name: "type", scope: !5512, file: !3, line: 3229, type: !880)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 3228, column: 2)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 3227, column: 11)
!5514 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 3226, column: 5)
!5515 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 3225, column: 7)
!5516 = !DILocalVariable(name: "mode", scope: !5512, file: !3, line: 3230, type: !13)
!5517 = !DILocalVariable(name: "align", scope: !5518, file: !3, line: 3236, type: !7)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 3235, column: 6)
!5519 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 3232, column: 8)
!5520 = !DILocalVariable(name: "result", scope: !5521, file: !3, line: 3252, type: !880)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 3251, column: 5)
!5522 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 3250, column: 7)
!5523 = !DILocalVariable(name: "addr", scope: !5521, file: !3, line: 3253, type: !765)
!5524 = !DILocalVariable(name: "x", scope: !5521, file: !3, line: 3254, type: !765)
!5525 = !DILocalVariable(name: "decl_result", scope: !5526, file: !3, line: 3318, type: !880)
!5526 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 3317, column: 5)
!5527 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 3316, column: 7)
!5528 = !DILocalVariable(name: "decl_rtl", scope: !5526, file: !3, line: 3319, type: !765)
!5529 = !DILocalVariable(name: "real_decl_rtl", scope: !5530, file: !3, line: 3325, type: !765)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3324, column: 2)
!5531 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 3321, column: 11)
!5532 = !DILocation(line: 0, scope: !5497)
!5533 = !DILocation(line: 3141, column: 3, scope: !5497)
!5534 = !DILocation(line: 3142, column: 3, scope: !5497)
!5535 = !DILocation(line: 3143, column: 3, scope: !5497)
!5536 = !DILocation(line: 3147, column: 21, scope: !5497)
!5537 = !DILocation(line: 3147, column: 7, scope: !5497)
!5538 = !DILocation(line: 3147, column: 5, scope: !5497)
!5539 = !DILocation(line: 3149, column: 3, scope: !5497)
!5540 = !DILocation(line: 3150, column: 12, scope: !5497)
!5541 = !DILocation(line: 3150, column: 10, scope: !5497)
!5542 = !DILocation(line: 0, scope: !5505)
!5543 = !DILocation(line: 0, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3160, column: 11)
!5545 = !DILocation(line: 0, scope: !5509)
!5546 = !DILocation(line: 0, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 3174, column: 8)
!5548 = !DILocation(line: 0, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3185, column: 11)
!5550 = !DILocation(line: 0, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 3161, column: 2)
!5552 = !DILocation(line: 3152, column: 8, scope: !5507)
!5553 = !DILocation(line: 3152, column: 15, scope: !5506)
!5554 = !DILocation(line: 0, scope: !5507)
!5555 = !DILocation(line: 3152, column: 3, scope: !5507)
!5556 = !DILocation(line: 3154, column: 7, scope: !5505)
!5557 = !DILocation(line: 3157, column: 42, scope: !5505)
!5558 = !DILocation(line: 3157, column: 7, scope: !5505)
!5559 = !DILocation(line: 3160, column: 16, scope: !5544)
!5560 = !DILocation(line: 3160, column: 28, scope: !5544)
!5561 = !DILocation(line: 3160, column: 11, scope: !5505)
!5562 = !DILocation(line: 3162, column: 4, scope: !5551)
!5563 = !DILocation(line: 3163, column: 31, scope: !5551)
!5564 = !DILocation(line: 3163, column: 29, scope: !5551)
!5565 = !DILocation(line: 3164, column: 4, scope: !5551)
!5566 = !DILocation(line: 3170, column: 32, scope: !5509)
!5567 = !DILocation(line: 3172, column: 12, scope: !5509)
!5568 = !DILocation(line: 3174, column: 8, scope: !5547)
!5569 = !DILocation(line: 3174, column: 39, scope: !5547)
!5570 = !DILocation(line: 3174, column: 8, scope: !5509)
!5571 = !DILocation(line: 3175, column: 14, scope: !5547)
!5572 = !DILocation(line: 3175, column: 6, scope: !5547)
!5573 = !DILocation(line: 3178, column: 14, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 3178, column: 8)
!5575 = !DILocation(line: 3178, column: 40, scope: !5574)
!5576 = !DILocation(line: 3178, column: 8, scope: !5509)
!5577 = !DILocation(line: 3180, column: 8, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 3179, column: 6)
!5579 = !DILocation(line: 3181, column: 40, scope: !5578)
!5580 = !DILocation(line: 3182, column: 6, scope: !5578)
!5581 = !DILocation(line: 3185, column: 11, scope: !5549)
!5582 = !DILocation(line: 3185, column: 17, scope: !5549)
!5583 = !DILocation(line: 3185, column: 24, scope: !5549)
!5584 = !DILocation(line: 3185, column: 28, scope: !5549)
!5585 = !DILocation(line: 3185, column: 11, scope: !5505)
!5586 = !DILocation(line: 3186, column: 2, scope: !5549)
!5587 = !DILocation(line: 3189, column: 7, scope: !5505)
!5588 = !DILocation(line: 3192, column: 11, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3192, column: 11)
!5590 = !DILocation(line: 3192, column: 11, scope: !5505)
!5591 = !DILocation(line: 3194, column: 32, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 3193, column: 2)
!5593 = !DILocation(line: 3194, column: 4, scope: !5592)
!5594 = !DILocation(line: 3195, column: 4, scope: !5592)
!5595 = !DILocation(line: 3196, column: 2, scope: !5592)
!5596 = !DILocation(line: 3199, column: 30, scope: !5505)
!5597 = !DILocation(line: 3199, column: 41, scope: !5505)
!5598 = !DILocation(line: 3199, column: 58, scope: !5505)
!5599 = !DILocation(line: 3199, column: 7, scope: !5505)
!5600 = !DILocation(line: 3202, column: 7, scope: !5505)
!5601 = !DILocation(line: 3205, column: 7, scope: !5505)
!5602 = !DILocation(line: 3207, column: 11, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3207, column: 11)
!5604 = !DILocation(line: 3207, column: 11, scope: !5505)
!5605 = !DILocation(line: 3208, column: 33, scope: !5603)
!5606 = !DILocation(line: 3208, column: 2, scope: !5603)
!5607 = !DILocation(line: 3209, column: 21, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 3209, column: 16)
!5609 = !DILocation(line: 3209, column: 16, scope: !5608)
!5610 = !DILocation(line: 3209, column: 36, scope: !5608)
!5611 = !DILocation(line: 3209, column: 62, scope: !5608)
!5612 = !DILocation(line: 3209, column: 39, scope: !5608)
!5613 = !DILocation(line: 3209, column: 16, scope: !5603)
!5614 = !DILocation(line: 3210, column: 31, scope: !5608)
!5615 = !DILocation(line: 3210, column: 2, scope: !5608)
!5616 = !DILocation(line: 3212, column: 33, scope: !5608)
!5617 = !DILocation(line: 3212, column: 2, scope: !5608)
!5618 = !DILocation(line: 3213, column: 5, scope: !5506)
!5619 = !DILocation(line: 3152, column: 52, scope: !5506)
!5620 = !DILocation(line: 3152, column: 3, scope: !5506)
!5621 = distinct !{!5621, !5555, !5622}
!5622 = !DILocation(line: 3213, column: 5, scope: !5507)
!5623 = !DILocation(line: 3215, column: 21, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 3215, column: 7)
!5625 = !DILocation(line: 3215, column: 7, scope: !5624)
!5626 = !DILocation(line: 3215, column: 7, scope: !5497)
!5627 = !DILocation(line: 3216, column: 41, scope: !5624)
!5628 = !DILocation(line: 3216, column: 5, scope: !5624)
!5629 = !DILocation(line: 3218, column: 3, scope: !5497)
!5630 = !DILocation(line: 3222, column: 18, scope: !5497)
!5631 = !DILocation(line: 3222, column: 3, scope: !5497)
!5632 = !DILocation(line: 3227, column: 11, scope: !5513)
!5633 = !DILocation(line: 3227, column: 11, scope: !5514)
!5634 = !DILocation(line: 3229, column: 16, scope: !5512)
!5635 = !DILocation(line: 0, scope: !5512)
!5636 = !DILocation(line: 3230, column: 29, scope: !5512)
!5637 = !DILocation(line: 3233, column: 8, scope: !5519)
!5638 = !DILocation(line: 3234, column: 12, scope: !5519)
!5639 = !DILocation(line: 3232, column: 8, scope: !5512)
!5640 = !DILocation(line: 3236, column: 29, scope: !5518)
!5641 = !DILocation(line: 0, scope: !5518)
!5642 = !DILocation(line: 3237, column: 18, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 3237, column: 12)
!5644 = !DILocation(line: 3237, column: 44, scope: !5643)
!5645 = !DILocation(line: 3237, column: 12, scope: !5518)
!5646 = !DILocation(line: 3239, column: 5, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 3238, column: 3)
!5648 = !DILocation(line: 3240, column: 37, scope: !5647)
!5649 = !DILocation(line: 3241, column: 3, scope: !5647)
!5650 = !DILocation(line: 3250, column: 11, scope: !5522)
!5651 = !DILocation(line: 3250, column: 7, scope: !5522)
!5652 = !DILocation(line: 3250, column: 7, scope: !5497)
!5653 = !DILocation(line: 3252, column: 21, scope: !5521)
!5654 = !DILocation(line: 0, scope: !5521)
!5655 = !DILocation(line: 3253, column: 18, scope: !5521)
!5656 = !DILocation(line: 3256, column: 11, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 3256, column: 11)
!5658 = !DILocation(line: 3256, column: 11, scope: !5521)
!5659 = !DILocation(line: 3260, column: 11, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3259, column: 2)
!5661 = !DILocation(line: 3261, column: 21, scope: !5660)
!5662 = !DILocation(line: 3261, column: 8, scope: !5660)
!5663 = !DILocation(line: 3262, column: 4, scope: !5660)
!5664 = !DILocation(line: 0, scope: !5657)
!5665 = !DILocation(line: 3264, column: 7, scope: !5521)
!5666 = !DILocation(line: 3265, column: 5, scope: !5521)
!5667 = !DILocation(line: 3268, column: 38, scope: !5497)
!5668 = !DILocation(line: 3268, column: 34, scope: !5497)
!5669 = !DILocation(line: 3268, column: 32, scope: !5497)
!5670 = !DILocation(line: 3269, column: 39, scope: !5497)
!5671 = !DILocation(line: 3269, column: 23, scope: !5497)
!5672 = !DILocation(line: 3269, column: 32, scope: !5497)
!5673 = !DILocation(line: 3270, column: 21, scope: !5497)
!5674 = !DILocation(line: 3270, column: 19, scope: !5497)
!5675 = !DILocation(line: 3276, column: 21, scope: !5497)
!5676 = !DILocation(line: 3280, column: 21, scope: !5497)
!5677 = !DILocation(line: 3280, column: 19, scope: !5497)
!5678 = !DILocation(line: 3290, column: 31, scope: !5497)
!5679 = !DILocation(line: 3290, column: 29, scope: !5497)
!5680 = !DILocation(line: 3296, column: 26, scope: !5497)
!5681 = !DILocation(line: 3296, column: 24, scope: !5497)
!5682 = !DILocation(line: 3302, column: 25, scope: !5497)
!5683 = !DILocation(line: 3310, column: 8, scope: !5497)
!5684 = !DILocation(line: 3311, column: 10, scope: !5497)
!5685 = !DILocation(line: 3310, column: 5, scope: !5497)
!5686 = !DILocation(line: 3316, column: 7, scope: !5527)
!5687 = !DILocation(line: 3316, column: 7, scope: !5497)
!5688 = !DILocation(line: 0, scope: !5526)
!5689 = !DILocation(line: 3319, column: 22, scope: !5526)
!5690 = !DILocation(line: 0, scope: !5531)
!5691 = !DILocation(line: 3321, column: 11, scope: !5531)
!5692 = !DILocation(line: 3321, column: 11, scope: !5526)
!5693 = !DILocation(line: 3322, column: 6, scope: !5531)
!5694 = !DILocation(line: 3322, column: 23, scope: !5531)
!5695 = !DILocation(line: 3323, column: 6, scope: !5531)
!5696 = !DILocation(line: 3327, column: 34, scope: !5530)
!5697 = !DILocation(line: 3327, column: 50, scope: !5530)
!5698 = !DILocation(line: 3327, column: 20, scope: !5530)
!5699 = !DILocation(line: 0, scope: !5530)
!5700 = !DILocation(line: 3329, column: 4, scope: !5530)
!5701 = !DILocation(line: 3329, column: 41, scope: !5530)
!5702 = !DILocation(line: 3333, column: 21, scope: !5530)
!5703 = !DILocation(line: 3334, column: 2, scope: !5530)
!5704 = !DILocation(line: 3336, column: 1, scope: !5497)
!5705 = distinct !DISubprogram(name: "expand_expr", scope: !711, file: !711, line: 555, type: !5706, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5708)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!765, !880, !765, !13, !738}
!5708 = !{!5709, !5710, !5711, !5712}
!5709 = !DILocalVariable(name: "exp", arg: 1, scope: !5705, file: !711, line: 555, type: !880)
!5710 = !DILocalVariable(name: "target", arg: 2, scope: !5705, file: !711, line: 555, type: !765)
!5711 = !DILocalVariable(name: "mode", arg: 3, scope: !5705, file: !711, line: 555, type: !13)
!5712 = !DILocalVariable(name: "modifier", arg: 4, scope: !5705, file: !711, line: 556, type: !738)
!5713 = !DILocation(line: 0, scope: !5705)
!5714 = !DILocation(line: 558, column: 10, scope: !5705)
!5715 = !DILocation(line: 558, column: 3, scope: !5705)
!5716 = distinct !DISubprogram(name: "expand_dummy_function_end", scope: !3, file: !3, line: 4540, type: !2749, scopeLine: 4541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!5717 = !DILocation(line: 4542, column: 3, scope: !5716)
!5718 = !DILocation(line: 4545, column: 3, scope: !5716)
!5719 = !DILocation(line: 4545, column: 10, scope: !5716)
!5720 = !DILocation(line: 4546, column: 5, scope: !5716)
!5721 = distinct !{!5721, !5718, !5722}
!5722 = !DILocation(line: 4546, column: 19, scope: !5716)
!5723 = !DILocation(line: 4551, column: 23, scope: !5716)
!5724 = !DILocation(line: 4551, column: 3, scope: !5716)
!5725 = !DILocation(line: 4552, column: 27, scope: !5716)
!5726 = !DILocation(line: 4552, column: 3, scope: !5716)
!5727 = !DILocation(line: 4553, column: 3, scope: !5716)
!5728 = !DILocation(line: 4554, column: 21, scope: !5716)
!5729 = !DILocation(line: 4555, column: 1, scope: !5716)
!5730 = distinct !DISubprogram(name: "diddle_return_value", scope: !3, file: !3, line: 4561, type: !5731, scopeLine: 4562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5736)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{null, !5733, !754}
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{null, !765, !754}
!5736 = !{!5737, !5738, !5739, !5740, !5744}
!5737 = !DILocalVariable(name: "doit", arg: 1, scope: !5730, file: !3, line: 4561, type: !5733)
!5738 = !DILocalVariable(name: "arg", arg: 2, scope: !5730, file: !3, line: 4561, type: !754)
!5739 = !DILocalVariable(name: "outgoing", scope: !5730, file: !3, line: 4563, type: !765)
!5740 = !DILocalVariable(name: "i", scope: !5741, file: !3, line: 4572, type: !750)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 4571, column: 5)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 4570, column: 12)
!5743 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 4568, column: 7)
!5744 = !DILocalVariable(name: "x", scope: !5745, file: !3, line: 4576, type: !765)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 4575, column: 2)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4574, column: 7)
!5747 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 4574, column: 7)
!5748 = !DILocation(line: 0, scope: !5730)
!5749 = !DILocation(line: 4563, column: 24, scope: !5730)
!5750 = !DILocation(line: 4565, column: 9, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 4565, column: 7)
!5752 = !DILocation(line: 4565, column: 7, scope: !5730)
!5753 = !DILocation(line: 4568, column: 7, scope: !5743)
!5754 = !DILocation(line: 4568, column: 7, scope: !5730)
!5755 = !DILocation(line: 4569, column: 5, scope: !5743)
!5756 = !DILocation(line: 4570, column: 32, scope: !5742)
!5757 = !DILocation(line: 4570, column: 12, scope: !5743)
!5758 = !DILocation(line: 0, scope: !5746)
!5759 = !DILocation(line: 4574, column: 7, scope: !5747)
!5760 = !DILocation(line: 0, scope: !5747)
!5761 = !DILocation(line: 0, scope: !5741)
!5762 = !DILocation(line: 4574, column: 23, scope: !5746)
!5763 = !DILocation(line: 4574, column: 21, scope: !5746)
!5764 = !DILocation(line: 4576, column: 12, scope: !5745)
!5765 = !DILocation(line: 0, scope: !5745)
!5766 = !DILocation(line: 4578, column: 8, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 4578, column: 8)
!5768 = !DILocation(line: 4578, column: 18, scope: !5767)
!5769 = !DILocation(line: 4578, column: 21, scope: !5767)
!5770 = !DILocation(line: 4578, column: 31, scope: !5767)
!5771 = !DILocation(line: 4578, column: 8, scope: !5745)
!5772 = !DILocation(line: 4579, column: 6, scope: !5767)
!5773 = !DILocation(line: 4574, column: 47, scope: !5746)
!5774 = !DILocation(line: 4574, column: 7, scope: !5746)
!5775 = distinct !{!5775, !5759, !5776}
!5776 = !DILocation(line: 4580, column: 2, scope: !5747)
!5777 = !DILocation(line: 4582, column: 1, scope: !5730)
!5778 = distinct !DISubprogram(name: "clobber_return_register", scope: !3, file: !3, line: 4591, type: !2749, scopeLine: 4592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5779)
!5779 = !{!5780, !5783}
!5780 = !DILocalVariable(name: "decl_result", scope: !5781, file: !3, line: 4598, type: !880)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 4597, column: 5)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4596, column: 7)
!5783 = !DILocalVariable(name: "decl_rtl", scope: !5781, file: !3, line: 4599, type: !765)
!5784 = !DILocation(line: 4593, column: 3, scope: !5778)
!5785 = !DILocation(line: 4596, column: 7, scope: !5782)
!5786 = !DILocation(line: 4596, column: 7, scope: !5778)
!5787 = !DILocation(line: 0, scope: !5781)
!5788 = !DILocation(line: 4599, column: 22, scope: !5781)
!5789 = !DILocation(line: 0, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 4600, column: 11)
!5791 = !DILocation(line: 4600, column: 11, scope: !5790)
!5792 = !DILocation(line: 4600, column: 28, scope: !5790)
!5793 = !DILocation(line: 4600, column: 31, scope: !5790)
!5794 = !DILocation(line: 4600, column: 48, scope: !5790)
!5795 = !DILocation(line: 4600, column: 11, scope: !5781)
!5796 = !DILocation(line: 4602, column: 4, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 4601, column: 2)
!5798 = !DILocation(line: 4603, column: 2, scope: !5797)
!5799 = !DILocation(line: 4605, column: 1, scope: !5778)
!5800 = distinct !DISubprogram(name: "do_clobber_return_reg", scope: !3, file: !3, line: 4585, type: !5734, scopeLine: 4586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5801)
!5801 = !{!5802, !5803}
!5802 = !DILocalVariable(name: "reg", arg: 1, scope: !5800, file: !3, line: 4585, type: !765)
!5803 = !DILocalVariable(name: "arg", arg: 2, scope: !5800, file: !3, line: 4585, type: !754)
!5804 = !DILocation(line: 0, scope: !5800)
!5805 = !DILocation(line: 4587, column: 3, scope: !5800)
!5806 = !DILocation(line: 4588, column: 1, scope: !5800)
!5807 = distinct !DISubprogram(name: "do_warn_unused_parameter", scope: !3, file: !3, line: 4621, type: !4986, scopeLine: 4622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5808)
!5808 = !{!5809, !5810}
!5809 = !DILocalVariable(name: "fn", arg: 1, scope: !5807, file: !3, line: 4621, type: !880)
!5810 = !DILocalVariable(name: "decl", scope: !5807, file: !3, line: 4623, type: !880)
!5811 = !DILocation(line: 0, scope: !5807)
!5812 = !DILocation(line: 4625, column: 15, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 4625, column: 3)
!5814 = !DILocation(line: 4625, column: 8, scope: !5813)
!5815 = !DILocation(line: 0, scope: !5813)
!5816 = !DILocation(line: 4625, column: 3, scope: !5813)
!5817 = !DILocation(line: 4627, column: 10, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 4627, column: 9)
!5819 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 4625, column: 3)
!5820 = !DILocation(line: 4627, column: 27, scope: !5818)
!5821 = !DILocation(line: 4627, column: 47, scope: !5818)
!5822 = !DILocation(line: 4628, column: 2, scope: !5818)
!5823 = !DILocation(line: 4628, column: 5, scope: !5818)
!5824 = !DILocation(line: 4628, column: 22, scope: !5818)
!5825 = !DILocation(line: 4628, column: 26, scope: !5818)
!5826 = !DILocation(line: 4629, column: 2, scope: !5818)
!5827 = !DILocation(line: 4629, column: 6, scope: !5818)
!5828 = !DILocation(line: 4627, column: 9, scope: !5819)
!5829 = !DILocation(line: 4630, column: 7, scope: !5818)
!5830 = !DILocation(line: 4626, column: 21, scope: !5819)
!5831 = !DILocation(line: 4625, column: 3, scope: !5819)
!5832 = distinct !{!5832, !5816, !5833}
!5833 = !DILocation(line: 4630, column: 68, scope: !5813)
!5834 = !DILocation(line: 4631, column: 1, scope: !5807)
!5835 = distinct !DISubprogram(name: "expand_function_end", scope: !3, file: !3, line: 4638, type: !2749, scopeLine: 4639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5836)
!5836 = !{!5837, !5838, !5841, !5842, !5847, !5850, !5851, !5854, !5858, !5862, !5863, !5866, !5867, !5868}
!5837 = !DILocalVariable(name: "clobber_after", scope: !5835, file: !3, line: 4640, type: !765)
!5838 = !DILocalVariable(name: "insn", scope: !5839, file: !3, line: 4652, type: !765)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 4651, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4650, column: 7)
!5841 = !DILocalVariable(name: "seq", scope: !5839, file: !3, line: 4652, type: !765)
!5842 = !DILocalVariable(name: "max_frame_size", scope: !5843, file: !3, line: 4657, type: !765)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 4656, column: 4)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 4655, column: 6)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4654, column: 7)
!5846 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 4654, column: 7)
!5847 = !DILocalVariable(name: "decl_result", scope: !5848, file: !3, line: 4720, type: !880)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4719, column: 5)
!5849 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4718, column: 7)
!5850 = !DILocalVariable(name: "decl_rtl", scope: !5848, file: !3, line: 4721, type: !765)
!5851 = !DILocalVariable(name: "real_decl_rtl", scope: !5852, file: !3, line: 4727, type: !765)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 4726, column: 2)
!5853 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 4723, column: 11)
!5854 = !DILocalVariable(name: "unsignedp", scope: !5855, file: !3, line: 4756, type: !750)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 4755, column: 6)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 4754, column: 13)
!5857 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 4743, column: 8)
!5858 = !DILocalVariable(name: "old_generating_concat_p", scope: !5859, file: !3, line: 4782, type: !750)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 4781, column: 6)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 4778, column: 13)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 4763, column: 13)
!5862 = !DILocalVariable(name: "tmp", scope: !5859, file: !3, line: 4783, type: !765)
!5863 = !DILocalVariable(name: "value_address", scope: !5864, file: !3, line: 4807, type: !765)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 4806, column: 5)
!5865 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4804, column: 7)
!5866 = !DILocalVariable(name: "type", scope: !5864, file: !3, line: 4808, type: !880)
!5867 = !DILocalVariable(name: "outgoing", scope: !5864, file: !3, line: 4809, type: !765)
!5868 = !DILocalVariable(name: "seq", scope: !5869, file: !3, line: 4836, type: !765)
!5869 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4835, column: 3)
!5870 = !DILocation(line: 4644, column: 7, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4644, column: 7)
!5872 = !DILocation(line: 4644, column: 40, scope: !5871)
!5873 = !DILocation(line: 4644, column: 34, scope: !5871)
!5874 = !DILocation(line: 4644, column: 29, scope: !5871)
!5875 = !DILocation(line: 4645, column: 5, scope: !5871)
!5876 = !DILocation(line: 4650, column: 7, scope: !5840)
!5877 = !DILocation(line: 4650, column: 24, scope: !5840)
!5878 = !DILocation(line: 4650, column: 7, scope: !5835)
!5879 = !DILocation(line: 4654, column: 19, scope: !5846)
!5880 = !DILocation(line: 0, scope: !5839)
!5881 = !DILocation(line: 4654, column: 12, scope: !5846)
!5882 = !DILocation(line: 0, scope: !5846)
!5883 = !DILocation(line: 4654, column: 7, scope: !5846)
!5884 = !DILocation(line: 4655, column: 6, scope: !5844)
!5885 = !DILocation(line: 4655, column: 6, scope: !5845)
!5886 = !DILocation(line: 4657, column: 27, scope: !5843)
!5887 = !DILocation(line: 0, scope: !5843)
!5888 = !DILocation(line: 4658, column: 6, scope: !5843)
!5889 = !DILocation(line: 4660, column: 8, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 4659, column: 10)
!5891 = !DILocation(line: 4663, column: 12, scope: !5843)
!5892 = !DILocation(line: 4664, column: 6, scope: !5843)
!5893 = !DILocation(line: 4665, column: 29, scope: !5843)
!5894 = !DILocation(line: 4665, column: 6, scope: !5843)
!5895 = !DILocation(line: 4654, column: 46, scope: !5845)
!5896 = !DILocation(line: 4654, column: 7, scope: !5845)
!5897 = distinct !{!5897, !5883, !5898}
!5898 = !DILocation(line: 4667, column: 4, scope: !5846)
!5899 = !DILocation(line: 4671, column: 3, scope: !5835)
!5900 = !DILocation(line: 4671, column: 10, scope: !5835)
!5901 = !DILocation(line: 4672, column: 5, scope: !5835)
!5902 = distinct !{!5902, !5899, !5903}
!5903 = !DILocation(line: 4672, column: 19, scope: !5835)
!5904 = !DILocation(line: 4674, column: 3, scope: !5835)
!5905 = !DILocation(line: 4675, column: 3, scope: !5835)
!5906 = !DILocation(line: 4679, column: 3, scope: !5835)
!5907 = !DILocation(line: 4680, column: 34, scope: !5835)
!5908 = !DILocation(line: 4680, column: 3, scope: !5835)
!5909 = !DILocation(line: 4690, column: 19, scope: !5835)
!5910 = !DILocation(line: 0, scope: !5835)
!5911 = !DILocation(line: 4693, column: 15, scope: !5835)
!5912 = !DILocation(line: 4693, column: 3, scope: !5835)
!5913 = !DILocation(line: 4707, column: 11, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 4707, column: 11)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 4703, column: 5)
!5916 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4695, column: 7)
!5917 = !DILocation(line: 4707, column: 11, scope: !5915)
!5918 = !DILocation(line: 4708, column: 13, scope: !5914)
!5919 = !DILocation(line: 4708, column: 2, scope: !5914)
!5920 = !DILocation(line: 4713, column: 3, scope: !5835)
!5921 = !DILocation(line: 4718, column: 7, scope: !5849)
!5922 = !DILocation(line: 4718, column: 7, scope: !5835)
!5923 = !DILocation(line: 0, scope: !5848)
!5924 = !DILocation(line: 4721, column: 22, scope: !5848)
!5925 = !DILocation(line: 0, scope: !5853)
!5926 = !DILocation(line: 4723, column: 11, scope: !5853)
!5927 = !DILocation(line: 4723, column: 11, scope: !5848)
!5928 = !DILocation(line: 4724, column: 6, scope: !5853)
!5929 = !DILocation(line: 4724, column: 23, scope: !5853)
!5930 = !DILocation(line: 4725, column: 6, scope: !5853)
!5931 = !DILocation(line: 4727, column: 30, scope: !5852)
!5932 = !DILocation(line: 0, scope: !5852)
!5933 = !DILocation(line: 4730, column: 4, scope: !5852)
!5934 = !DILocation(line: 4736, column: 8, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 4736, column: 8)
!5936 = !DILocation(line: 4736, column: 33, scope: !5935)
!5937 = !DILocation(line: 4736, column: 8, scope: !5852)
!5938 = !DILocation(line: 4737, column: 6, scope: !5935)
!5939 = !DILocation(line: 4743, column: 8, scope: !5857)
!5940 = !DILocation(line: 4743, column: 44, scope: !5857)
!5941 = !DILocation(line: 4744, column: 8, scope: !5857)
!5942 = !DILocation(line: 4744, column: 25, scope: !5857)
!5943 = !DILocation(line: 4744, column: 40, scope: !5857)
!5944 = !DILocation(line: 4744, column: 11, scope: !5857)
!5945 = !DILocation(line: 4743, column: 8, scope: !5852)
!5946 = !DILocation(line: 4746, column: 37, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 4745, column: 6)
!5948 = !DILocation(line: 4747, column: 9, scope: !5947)
!5949 = !DILocation(line: 4746, column: 24, scope: !5947)
!5950 = !DILocation(line: 4746, column: 8, scope: !5947)
!5951 = !DILocation(line: 4749, column: 28, scope: !5947)
!5952 = !DILocation(line: 4749, column: 8, scope: !5947)
!5953 = !DILocation(line: 4750, column: 6, scope: !5947)
!5954 = !DILocation(line: 4754, column: 13, scope: !5856)
!5955 = !DILocation(line: 4754, column: 41, scope: !5856)
!5956 = !DILocation(line: 4754, column: 38, scope: !5856)
!5957 = !DILocation(line: 4754, column: 13, scope: !5857)
!5958 = !DILocation(line: 4756, column: 8, scope: !5855)
!5959 = !DILocation(line: 4756, column: 24, scope: !5855)
!5960 = !DILocation(line: 0, scope: !5855)
!5961 = !DILocation(line: 4756, column: 12, scope: !5855)
!5962 = !DILocation(line: 4757, column: 31, scope: !5855)
!5963 = !DILocation(line: 4758, column: 10, scope: !5855)
!5964 = !DILocation(line: 4759, column: 10, scope: !5855)
!5965 = !DILocation(line: 4757, column: 8, scope: !5855)
!5966 = !DILocation(line: 4761, column: 47, scope: !5855)
!5967 = !DILocation(line: 4761, column: 8, scope: !5855)
!5968 = !DILocation(line: 4762, column: 6, scope: !5856)
!5969 = !DILocation(line: 4762, column: 6, scope: !5855)
!5970 = !DILocation(line: 4763, column: 13, scope: !5861)
!5971 = !DILocation(line: 4763, column: 38, scope: !5861)
!5972 = !DILocation(line: 0, scope: !5861)
!5973 = !DILocation(line: 4763, column: 13, scope: !5856)
!5974 = !DILocation(line: 4768, column: 32, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4768, column: 12)
!5976 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 4764, column: 6)
!5977 = !DILocation(line: 4768, column: 12, scope: !5976)
!5978 = !DILocation(line: 4769, column: 3, scope: !5975)
!5979 = !DILocation(line: 4772, column: 6, scope: !5975)
!5980 = !DILocation(line: 4773, column: 6, scope: !5975)
!5981 = !DILocation(line: 4771, column: 3, scope: !5975)
!5982 = !DILocation(line: 4778, column: 33, scope: !5860)
!5983 = !DILocation(line: 4779, column: 6, scope: !5860)
!5984 = !DILocation(line: 4779, column: 9, scope: !5860)
!5985 = !DILocation(line: 4779, column: 46, scope: !5860)
!5986 = !DILocation(line: 4780, column: 6, scope: !5860)
!5987 = !DILocation(line: 4780, column: 9, scope: !5860)
!5988 = !DILocation(line: 4780, column: 48, scope: !5860)
!5989 = !DILocation(line: 4778, column: 13, scope: !5861)
!5990 = !DILocation(line: 4785, column: 34, scope: !5859)
!5991 = !DILocation(line: 0, scope: !5859)
!5992 = !DILocation(line: 4786, column: 28, scope: !5859)
!5993 = !DILocation(line: 4787, column: 27, scope: !5859)
!5994 = !DILocation(line: 4787, column: 14, scope: !5859)
!5995 = !DILocation(line: 4788, column: 28, scope: !5859)
!5996 = !DILocation(line: 4790, column: 8, scope: !5859)
!5997 = !DILocation(line: 4791, column: 8, scope: !5859)
!5998 = !DILocation(line: 4792, column: 6, scope: !5859)
!5999 = !DILocation(line: 4794, column: 6, scope: !5860)
!6000 = !DILocation(line: 4804, column: 7, scope: !5865)
!6001 = !DILocation(line: 4804, column: 13, scope: !5865)
!6002 = !DILocation(line: 4805, column: 7, scope: !5865)
!6003 = !DILocation(line: 4805, column: 16, scope: !5865)
!6004 = !DILocation(line: 4805, column: 10, scope: !5865)
!6005 = !DILocation(line: 4804, column: 7, scope: !5835)
!6006 = !DILocation(line: 4807, column: 27, scope: !5864)
!6007 = !DILocation(line: 4808, column: 19, scope: !5864)
!6008 = !DILocation(line: 0, scope: !5864)
!6009 = !DILocation(line: 4811, column: 11, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 4811, column: 11)
!6011 = !DILocation(line: 4811, column: 11, scope: !5864)
!6012 = !DILocation(line: 4812, column: 9, scope: !6010)
!6013 = !DILocation(line: 4812, column: 2, scope: !6010)
!6014 = !DILocation(line: 4814, column: 18, scope: !6010)
!6015 = !DILocation(line: 4816, column: 32, scope: !5864)
!6016 = !DILocation(line: 4816, column: 48, scope: !5864)
!6017 = !DILocation(line: 4817, column: 13, scope: !5864)
!6018 = !DILocation(line: 4816, column: 18, scope: !5864)
!6019 = !DILocation(line: 4821, column: 7, scope: !5864)
!6020 = !DILocation(line: 4821, column: 39, scope: !5864)
!6021 = !DILocation(line: 4824, column: 23, scope: !5864)
!6022 = !DILocation(line: 4827, column: 7, scope: !5864)
!6023 = !DILocation(line: 4831, column: 24, scope: !5864)
!6024 = !DILocation(line: 4832, column: 5, scope: !5864)
!6025 = !DILocation(line: 4838, column: 5, scope: !5869)
!6026 = !DILocation(line: 4839, column: 5, scope: !5869)
!6027 = !DILocation(line: 4840, column: 11, scope: !5869)
!6028 = !DILocation(line: 0, scope: !5869)
!6029 = !DILocation(line: 4841, column: 5, scope: !5869)
!6030 = !DILocation(line: 4843, column: 5, scope: !5869)
!6031 = !DILocation(line: 4847, column: 7, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4847, column: 7)
!6033 = !DILocation(line: 4847, column: 7, scope: !5835)
!6034 = !DILocation(line: 4848, column: 5, scope: !6032)
!6035 = !DILocation(line: 4853, column: 34, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4853, column: 7)
!6037 = !DILocation(line: 4853, column: 7, scope: !5835)
!6038 = !DILocation(line: 4854, column: 16, scope: !6036)
!6039 = !DILocation(line: 4854, column: 5, scope: !6036)
!6040 = !DILocation(line: 4857, column: 13, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4857, column: 7)
!6042 = !DILocation(line: 4857, column: 7, scope: !6041)
!6043 = !DILocation(line: 4857, column: 7, scope: !5835)
!6044 = !DILocation(line: 4858, column: 5, scope: !6041)
!6045 = !DILocation(line: 4876, column: 3, scope: !5835)
!6046 = !DILocation(line: 4877, column: 1, scope: !5835)
!6047 = distinct !DISubprogram(name: "get_arg_pointer_save_area", scope: !3, file: !3, line: 4880, type: !6048, scopeLine: 4881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!765}
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "ret", scope: !6047, file: !3, line: 4882, type: !765)
!6052 = !DILocalVariable(name: "seq", scope: !6053, file: !3, line: 4892, type: !765)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 4891, column: 5)
!6054 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4890, column: 7)
!6055 = !DILocation(line: 4882, column: 13, scope: !6047)
!6056 = !DILocation(line: 0, scope: !6047)
!6057 = !DILocation(line: 4884, column: 9, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4884, column: 7)
!6059 = !DILocation(line: 4884, column: 7, scope: !6047)
!6060 = !DILocation(line: 4886, column: 40, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 4885, column: 5)
!6062 = !DILocation(line: 4886, column: 13, scope: !6061)
!6063 = !DILocation(line: 4887, column: 29, scope: !6061)
!6064 = !DILocation(line: 4888, column: 5, scope: !6061)
!6065 = !DILocation(line: 4890, column: 15, scope: !6054)
!6066 = !DILocation(line: 4890, column: 9, scope: !6054)
!6067 = !DILocation(line: 4890, column: 7, scope: !6047)
!6068 = !DILocation(line: 4897, column: 7, scope: !6053)
!6069 = !DILocation(line: 4898, column: 23, scope: !6053)
!6070 = !DILocation(line: 4899, column: 34, scope: !6053)
!6071 = !DILocation(line: 4898, column: 7, scope: !6053)
!6072 = !DILocation(line: 4900, column: 13, scope: !6053)
!6073 = !DILocation(line: 0, scope: !6053)
!6074 = !DILocation(line: 4901, column: 7, scope: !6053)
!6075 = !DILocation(line: 4903, column: 7, scope: !6053)
!6076 = !DILocation(line: 4904, column: 29, scope: !6053)
!6077 = !DILocation(line: 4904, column: 7, scope: !6053)
!6078 = !DILocation(line: 4905, column: 7, scope: !6053)
!6079 = !DILocation(line: 4906, column: 5, scope: !6053)
!6080 = !DILocation(line: 4908, column: 3, scope: !6047)
!6081 = distinct !DISubprogram(name: "use_return_register", scope: !3, file: !3, line: 4614, type: !2749, scopeLine: 4615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!6082 = !DILocation(line: 4616, column: 3, scope: !6081)
!6083 = !DILocation(line: 4617, column: 1, scope: !6081)
!6084 = distinct !DISubprogram(name: "maybe_copy_epilogue_insn", scope: !3, file: !3, line: 4936, type: !3401, scopeLine: 4937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6085)
!6085 = !{!6086, !6087, !6088}
!6086 = !DILocalVariable(name: "insn", arg: 1, scope: !6084, file: !3, line: 4936, type: !765)
!6087 = !DILocalVariable(name: "copy", arg: 2, scope: !6084, file: !3, line: 4936, type: !765)
!6088 = !DILocalVariable(name: "slot", scope: !6084, file: !3, line: 4938, type: !1234)
!6089 = !DILocation(line: 0, scope: !6084)
!6090 = !DILocation(line: 4940, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 4940, column: 7)
!6092 = !DILocation(line: 4940, column: 26, scope: !6091)
!6093 = !DILocation(line: 4941, column: 7, scope: !6091)
!6094 = !DILocation(line: 4941, column: 41, scope: !6091)
!6095 = !DILocation(line: 4941, column: 10, scope: !6091)
!6096 = !DILocation(line: 4941, column: 47, scope: !6091)
!6097 = !DILocation(line: 4940, column: 7, scope: !6084)
!6098 = !DILocation(line: 4944, column: 26, scope: !6084)
!6099 = !DILocation(line: 4944, column: 46, scope: !6084)
!6100 = !DILocation(line: 4944, column: 10, scope: !6084)
!6101 = !DILocation(line: 4945, column: 3, scope: !6084)
!6102 = !DILocation(line: 4946, column: 9, scope: !6084)
!6103 = !DILocation(line: 4947, column: 1, scope: !6084)
!6104 = distinct !DISubprogram(name: "prologue_epilogue_contains", scope: !3, file: !3, line: 4983, type: !6105, scopeLine: 4984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!750, !3965}
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "insn", arg: 1, scope: !6104, file: !3, line: 4983, type: !3965)
!6109 = !DILocation(line: 0, scope: !6104)
!6110 = !DILocation(line: 4985, column: 23, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 4985, column: 7)
!6112 = !DILocation(line: 4985, column: 7, scope: !6111)
!6113 = !DILocation(line: 4985, column: 7, scope: !6104)
!6114 = !DILocation(line: 4987, column: 23, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 4987, column: 7)
!6116 = !DILocation(line: 4987, column: 7, scope: !6115)
!6117 = !DILocation(line: 4990, column: 1, scope: !6104)
!6118 = distinct !DISubprogram(name: "contains", scope: !3, file: !3, line: 4965, type: !6119, scopeLine: 4966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!749, !3965, !1210}
!6121 = !{!6122, !6123, !6124}
!6122 = !DILocalVariable(name: "insn", arg: 1, scope: !6118, file: !3, line: 4965, type: !3965)
!6123 = !DILocalVariable(name: "hash", arg: 2, scope: !6118, file: !3, line: 4965, type: !1210)
!6124 = !DILocalVariable(name: "i", scope: !6125, file: !3, line: 4972, type: !750)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 4971, column: 5)
!6126 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 4970, column: 7)
!6127 = !DILocation(line: 0, scope: !6118)
!6128 = !DILocation(line: 4967, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 4967, column: 7)
!6130 = !DILocation(line: 4967, column: 7, scope: !6118)
!6131 = !DILocation(line: 4970, column: 7, scope: !6126)
!6132 = !DILocation(line: 4970, column: 29, scope: !6126)
!6133 = !DILocation(line: 4970, column: 32, scope: !6126)
!6134 = !DILocation(line: 4970, column: 58, scope: !6126)
!6135 = !DILocation(line: 4970, column: 7, scope: !6118)
!6136 = !DILocation(line: 4973, column: 16, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 4973, column: 7)
!6138 = !DILocation(line: 0, scope: !6125)
!6139 = !DILocation(line: 4973, column: 12, scope: !6137)
!6140 = !DILocation(line: 0, scope: !6137)
!6141 = !DILocation(line: 4973, column: 51, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 4973, column: 7)
!6143 = !DILocation(line: 4973, column: 7, scope: !6137)
!6144 = !DILocation(line: 4974, column: 23, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 4974, column: 6)
!6146 = !DILocation(line: 4974, column: 6, scope: !6145)
!6147 = !DILocation(line: 4974, column: 6, scope: !6142)
!6148 = !DILocation(line: 4973, column: 7, scope: !6142)
!6149 = distinct !{!6149, !6143, !6150}
!6150 = !DILocation(line: 4975, column: 11, scope: !6137)
!6151 = !DILocation(line: 4979, column: 27, scope: !6118)
!6152 = !DILocation(line: 4979, column: 10, scope: !6118)
!6153 = !DILocation(line: 4979, column: 33, scope: !6118)
!6154 = !DILocation(line: 4979, column: 3, scope: !6118)
!6155 = !DILocation(line: 4980, column: 1, scope: !6118)
!6156 = distinct !DISubprogram(name: "reposition_prologue_and_epilogue_notes", scope: !3, file: !3, line: 5326, type: !2749, scopeLine: 5327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6157)
!6157 = !{!6158, !6161, !6162, !6163, !6164, !6173, !6174, !6178, !6179, !6180}
!6158 = !DILocalVariable(name: "len", scope: !6159, file: !3, line: 5334, type: !1236)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 5333, column: 5)
!6160 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 5332, column: 7)
!6161 = !DILocalVariable(name: "insn", scope: !6159, file: !3, line: 5335, type: !765)
!6162 = !DILocalVariable(name: "last", scope: !6159, file: !3, line: 5335, type: !765)
!6163 = !DILocalVariable(name: "note", scope: !6159, file: !3, line: 5335, type: !765)
!6164 = !DILocalVariable(name: "ei", scope: !6165, file: !3, line: 5381, type: !6167)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 5380, column: 5)
!6166 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 5379, column: 7)
!6167 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !369, line: 682, baseType: !6168)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 679, size: 128, elements: !6169)
!6169 = !{!6170, !6171}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6168, file: !369, line: 680, baseType: !7, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !6168, file: !369, line: 681, baseType: !6172, size: 64, offset: 64)
!6172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!6173 = !DILocalVariable(name: "e", scope: !6165, file: !3, line: 5382, type: !1315)
!6174 = !DILocalVariable(name: "insn", scope: !6175, file: !3, line: 5386, type: !765)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 5385, column: 2)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 5384, column: 7)
!6177 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 5384, column: 7)
!6178 = !DILocalVariable(name: "first", scope: !6175, file: !3, line: 5386, type: !765)
!6179 = !DILocalVariable(name: "note", scope: !6175, file: !3, line: 5386, type: !765)
!6180 = !DILocalVariable(name: "bb", scope: !6175, file: !3, line: 5387, type: !1298)
!6181 = !DILocation(line: 5332, column: 7, scope: !6160)
!6182 = !DILocation(line: 5332, column: 26, scope: !6160)
!6183 = !DILocation(line: 5332, column: 7, scope: !6156)
!6184 = !DILocation(line: 5334, column: 20, scope: !6159)
!6185 = !DILocation(line: 0, scope: !6159)
!6186 = !DILocation(line: 5342, column: 19, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 5342, column: 7)
!6188 = !DILocation(line: 5342, column: 12, scope: !6187)
!6189 = !DILocation(line: 5335, column: 17, scope: !6159)
!6190 = !DILocation(line: 0, scope: !6187)
!6191 = !DILocation(line: 5334, column: 14, scope: !6159)
!6192 = !DILocation(line: 5342, column: 7, scope: !6187)
!6193 = !DILocation(line: 5344, column: 8, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 5344, column: 8)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 5343, column: 2)
!6196 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 5342, column: 7)
!6197 = !DILocation(line: 5344, column: 8, scope: !6195)
!6198 = !DILocation(line: 5346, column: 12, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 5346, column: 12)
!6200 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 5345, column: 6)
!6201 = !DILocation(line: 5346, column: 29, scope: !6199)
!6202 = !DILocation(line: 5346, column: 12, scope: !6200)
!6203 = !DILocation(line: 5348, column: 6, scope: !6200)
!6204 = !DILocation(line: 5349, column: 29, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 5349, column: 13)
!6206 = !DILocation(line: 5349, column: 13, scope: !6205)
!6207 = !DILocation(line: 5349, column: 13, scope: !6194)
!6208 = !DILocation(line: 5352, column: 12, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 5352, column: 12)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 5350, column: 6)
!6211 = !DILocation(line: 5352, column: 18, scope: !6209)
!6212 = !DILocation(line: 5352, column: 12, scope: !6210)
!6213 = !DILocation(line: 5342, column: 46, scope: !6196)
!6214 = !DILocation(line: 5342, column: 7, scope: !6196)
!6215 = distinct !{!6215, !6192, !6216}
!6216 = !DILocation(line: 5355, column: 2, scope: !6187)
!6217 = !DILocation(line: 5357, column: 11, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 5357, column: 11)
!6219 = !DILocation(line: 5357, column: 11, scope: !6159)
!6220 = !DILocation(line: 5359, column: 13, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 5359, column: 8)
!6222 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 5358, column: 2)
!6223 = !DILocation(line: 5359, column: 8, scope: !6222)
!6224 = !DILocation(line: 5364, column: 13, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 5364, column: 8)
!6226 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 5360, column: 6)
!6227 = !DILocation(line: 0, scope: !6225)
!6228 = !DILocation(line: 5366, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 5366, column: 9)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 5365, column: 3)
!6231 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 5364, column: 8)
!6232 = !DILocation(line: 5367, column: 9, scope: !6229)
!6233 = !DILocation(line: 5367, column: 12, scope: !6229)
!6234 = !DILocation(line: 5367, column: 29, scope: !6229)
!6235 = !DILocation(line: 5366, column: 9, scope: !6230)
!6236 = !DILocation(line: 5364, column: 8, scope: !6231)
!6237 = distinct !{!6237, !6238, !6239}
!6238 = !DILocation(line: 5364, column: 8, scope: !6225)
!6239 = !DILocation(line: 5369, column: 3, scope: !6225)
!6240 = !DILocation(line: 5373, column: 8, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 5373, column: 8)
!6242 = !DILocation(line: 5373, column: 8, scope: !6222)
!6243 = !DILocation(line: 5374, column: 13, scope: !6241)
!6244 = !DILocation(line: 5374, column: 6, scope: !6241)
!6245 = !DILocation(line: 5375, column: 4, scope: !6222)
!6246 = !DILocation(line: 5376, column: 2, scope: !6222)
!6247 = !DILocation(line: 5379, column: 7, scope: !6166)
!6248 = !DILocation(line: 5379, column: 26, scope: !6166)
!6249 = !DILocation(line: 5379, column: 7, scope: !6156)
!6250 = !DILocation(line: 5381, column: 7, scope: !6165)
!6251 = !DILocation(line: 5382, column: 7, scope: !6165)
!6252 = !DILocation(line: 5384, column: 7, scope: !6177)
!6253 = !DILocation(line: 0, scope: !6176)
!6254 = !DILocation(line: 5384, column: 7, scope: !6176)
!6255 = !DILocation(line: 0, scope: !6165)
!6256 = !DILocation(line: 0, scope: !6175)
!6257 = !DILocation(line: 5387, column: 21, scope: !6175)
!6258 = !DILocation(line: 5387, column: 24, scope: !6175)
!6259 = !DILocation(line: 5390, column: 4, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 5390, column: 4)
!6261 = !DILocation(line: 5386, column: 14, scope: !6175)
!6262 = !DILocation(line: 0, scope: !6260)
!6263 = !DILocation(line: 5390, column: 4, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 5390, column: 4)
!6265 = !DILocation(line: 5392, column: 12, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 5392, column: 12)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 5391, column: 6)
!6268 = !DILocation(line: 5392, column: 12, scope: !6267)
!6269 = !DILocation(line: 5394, column: 9, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 5394, column: 9)
!6271 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 5393, column: 3)
!6272 = !DILocation(line: 5394, column: 26, scope: !6270)
!6273 = !DILocation(line: 5394, column: 9, scope: !6271)
!6274 = !DILocation(line: 5397, column: 19, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 5397, column: 13)
!6276 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 5395, column: 7)
!6277 = !DILocation(line: 5397, column: 13, scope: !6276)
!6278 = !DILocation(line: 5401, column: 23, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 5401, column: 17)
!6280 = !DILocation(line: 5401, column: 31, scope: !6279)
!6281 = !DILocation(line: 5401, column: 50, scope: !6279)
!6282 = !DILocation(line: 5401, column: 34, scope: !6279)
!6283 = !DILocation(line: 5401, column: 17, scope: !6266)
!6284 = !DILocation(line: 5404, column: 14, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 5404, column: 9)
!6286 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 5402, column: 3)
!6287 = !DILocation(line: 5404, column: 9, scope: !6286)
!6288 = distinct !{!6288, !6259, !6289}
!6289 = !DILocation(line: 5407, column: 6, scope: !6260)
!6290 = !DILocation(line: 5409, column: 8, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 5409, column: 8)
!6292 = !DILocation(line: 5409, column: 8, scope: !6175)
!6293 = !DILocation(line: 5418, column: 18, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 5418, column: 12)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 5410, column: 6)
!6296 = !DILocation(line: 5418, column: 12, scope: !6295)
!6297 = !DILocation(line: 5419, column: 11, scope: !6294)
!6298 = !DILocation(line: 5419, column: 3, scope: !6294)
!6299 = !DILocation(line: 5421, column: 12, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 5421, column: 12)
!6301 = !DILocation(line: 5421, column: 30, scope: !6300)
!6302 = !DILocation(line: 5421, column: 12, scope: !6295)
!6303 = !DILocation(line: 5422, column: 3, scope: !6300)
!6304 = distinct !{!6304, !6252, !6305}
!6305 = !DILocation(line: 5424, column: 2, scope: !6177)
!6306 = !DILocation(line: 5425, column: 5, scope: !6166)
!6307 = !DILocation(line: 5425, column: 5, scope: !6165)
!6308 = !DILocation(line: 5427, column: 1, scope: !6156)
!6309 = distinct !DISubprogram(name: "ei_start_1", scope: !369, file: !369, line: 696, type: !6310, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6312)
!6310 = !DISubroutineType(types: !6311)
!6311 = !{!6167, !6172}
!6312 = !{!6313, !6314}
!6313 = !DILocalVariable(name: "ev", arg: 1, scope: !6309, file: !369, line: 696, type: !6172)
!6314 = !DILocalVariable(name: "i", scope: !6309, file: !369, line: 698, type: !6167)
!6315 = !DILocation(line: 0, scope: !6309)
!6316 = !DILocation(line: 700, column: 5, scope: !6309)
!6317 = !DILocation(line: 700, column: 11, scope: !6309)
!6318 = !DILocation(line: 701, column: 5, scope: !6309)
!6319 = !DILocation(line: 701, column: 15, scope: !6309)
!6320 = !DILocation(line: 703, column: 3, scope: !6309)
!6321 = distinct !DISubprogram(name: "ei_cond", scope: !369, file: !369, line: 771, type: !6322, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6325)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!749, !6167, !6324}
!6324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!6325 = !{!6326, !6327}
!6326 = !DILocalVariable(name: "ei", arg: 1, scope: !6321, file: !369, line: 771, type: !6167)
!6327 = !DILocalVariable(name: "p", arg: 2, scope: !6321, file: !369, line: 771, type: !6324)
!6328 = !DILocation(line: 0, scope: !6321)
!6329 = !DILocation(line: 773, column: 8, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6321, file: !369, line: 773, column: 7)
!6331 = !DILocation(line: 773, column: 7, scope: !6321)
!6332 = !DILocation(line: 775, column: 12, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6330, file: !369, line: 774, column: 5)
!6334 = !DILocation(line: 776, column: 7, scope: !6333)
!6335 = !DILocation(line: 781, column: 7, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6330, file: !369, line: 779, column: 5)
!6337 = !DILocation(line: 0, scope: !6330)
!6338 = !DILocation(line: 783, column: 1, scope: !6321)
!6339 = distinct !DISubprogram(name: "ei_next", scope: !369, file: !369, line: 736, type: !6340, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6340 = !DISubroutineType(types: !6341)
!6341 = !{null, !6342}
!6342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "i", arg: 1, scope: !6339, file: !369, line: 736, type: !6342)
!6345 = !DILocation(line: 0, scope: !6339)
!6346 = !DILocation(line: 738, column: 3, scope: !6339)
!6347 = !DILocation(line: 739, column: 11, scope: !6339)
!6348 = !DILocation(line: 740, column: 1, scope: !6339)
!6349 = distinct !DISubprogram(name: "current_function_name", scope: !3, file: !3, line: 5431, type: !6350, scopeLine: 5432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!755}
!6352 = !DILocation(line: 5433, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 5433, column: 7)
!6354 = !DILocation(line: 5433, column: 12, scope: !6353)
!6355 = !DILocation(line: 5433, column: 7, scope: !6349)
!6356 = !DILocation(line: 5435, column: 21, scope: !6349)
!6357 = !DILocation(line: 5435, column: 48, scope: !6349)
!6358 = !DILocation(line: 5435, column: 10, scope: !6349)
!6359 = !DILocation(line: 5435, column: 3, scope: !6349)
!6360 = !DILocation(line: 0, scope: !6349)
!6361 = !DILocation(line: 5436, column: 1, scope: !6349)
!6362 = distinct !DISubprogram(name: "used_types_insert", scope: !3, file: !3, line: 5469, type: !4986, scopeLine: 5470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6363)
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "t", arg: 1, scope: !6362, file: !3, line: 5469, type: !880)
!6365 = !DILocation(line: 0, scope: !6362)
!6366 = !DILocation(line: 5471, column: 3, scope: !6362)
!6367 = !DILocation(line: 5471, column: 10, scope: !6362)
!6368 = !DILocation(line: 5471, column: 29, scope: !6362)
!6369 = !DILocation(line: 5471, column: 46, scope: !6362)
!6370 = !DILocation(line: 0, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 5476, column: 7)
!6372 = !DILocation(line: 5476, column: 7, scope: !6371)
!6373 = !DILocation(line: 5472, column: 9, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 5472, column: 9)
!6375 = !DILocation(line: 5472, column: 9, scope: !6362)
!6376 = !DILocation(line: 5475, column: 11, scope: !6374)
!6377 = distinct !{!6377, !6366, !6378}
!6378 = !DILocation(line: 5475, column: 11, scope: !6362)
!6379 = !DILocation(line: 5476, column: 21, scope: !6371)
!6380 = !DILocation(line: 5477, column: 7, scope: !6371)
!6381 = !DILocation(line: 5478, column: 9, scope: !6371)
!6382 = !DILocation(line: 5477, column: 27, scope: !6371)
!6383 = !DILocation(line: 5477, column: 24, scope: !6371)
!6384 = !DILocation(line: 5476, column: 7, scope: !6362)
!6385 = !DILocation(line: 5478, column: 5, scope: !6371)
!6386 = !DILocation(line: 5479, column: 7, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 5479, column: 7)
!6388 = !DILocation(line: 5479, column: 24, scope: !6387)
!6389 = !DILocation(line: 5479, column: 7, scope: !6362)
!6390 = !DILocation(line: 5481, column: 11, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 5481, column: 11)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 5480, column: 5)
!6393 = !DILocation(line: 5481, column: 11, scope: !6392)
!6394 = !DILocation(line: 5482, column: 2, scope: !6391)
!6395 = !DILocation(line: 5488, column: 4, scope: !6391)
!6396 = !DILocation(line: 5487, column: 29, scope: !6391)
!6397 = !DILocation(line: 5491, column: 1, scope: !6362)
!6398 = distinct !DISubprogram(name: "used_types_insert_helper", scope: !3, file: !3, line: 5452, type: !6399, scopeLine: 5453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !880, !1125}
!6401 = !{!6402, !6403, !6404}
!6402 = !DILocalVariable(name: "type", arg: 1, scope: !6398, file: !3, line: 5452, type: !880)
!6403 = !DILocalVariable(name: "func", arg: 2, scope: !6398, file: !3, line: 5452, type: !1125)
!6404 = !DILocalVariable(name: "slot", scope: !6405, file: !3, line: 5456, type: !1234)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 5455, column: 5)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 5454, column: 7)
!6407 = !DILocation(line: 0, scope: !6398)
!6408 = !DILocation(line: 5454, column: 12, scope: !6406)
!6409 = !DILocation(line: 5454, column: 28, scope: !6406)
!6410 = !DILocation(line: 5454, column: 20, scope: !6406)
!6411 = !DILocation(line: 5458, column: 17, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 5458, column: 11)
!6413 = !DILocation(line: 5458, column: 33, scope: !6412)
!6414 = !DILocation(line: 5458, column: 11, scope: !6405)
!6415 = !DILocation(line: 5459, column: 26, scope: !6412)
!6416 = !DILocation(line: 5459, column: 24, scope: !6412)
!6417 = !DILocation(line: 5459, column: 2, scope: !6412)
!6418 = !DILocation(line: 5461, column: 36, scope: !6405)
!6419 = !DILocation(line: 5461, column: 53, scope: !6405)
!6420 = !DILocation(line: 5461, column: 14, scope: !6405)
!6421 = !DILocation(line: 0, scope: !6405)
!6422 = !DILocation(line: 5462, column: 11, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 5462, column: 11)
!6424 = !DILocation(line: 5462, column: 17, scope: !6423)
!6425 = !DILocation(line: 5462, column: 11, scope: !6405)
!6426 = !DILocation(line: 5463, column: 8, scope: !6423)
!6427 = !DILocation(line: 5463, column: 2, scope: !6423)
!6428 = !DILocation(line: 5465, column: 1, scope: !6398)
!6429 = distinct !DISubprogram(name: "types_used_by_vars_do_hash", scope: !3, file: !3, line: 5507, type: !1218, scopeLine: 5508, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6430)
!6430 = !{!6431, !6432}
!6431 = !DILocalVariable(name: "x", arg: 1, scope: !6429, file: !3, line: 5507, type: !1221)
!6432 = !DILocalVariable(name: "entry", scope: !6429, file: !3, line: 5509, type: !2135)
!6433 = !DILocation(line: 0, scope: !6429)
!6434 = !DILocation(line: 5510, column: 5, scope: !6429)
!6435 = !DILocation(line: 5512, column: 10, scope: !6429)
!6436 = !DILocation(line: 5512, column: 3, scope: !6429)
!6437 = distinct !DISubprogram(name: "hash_types_used_by_vars_entry", scope: !3, file: !3, line: 5496, type: !6438, scopeLine: 5497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6440)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{!1220, !2135}
!6440 = !{!6441}
!6441 = !DILocalVariable(name: "entry", arg: 1, scope: !6437, file: !3, line: 5496, type: !2135)
!6442 = !DILocation(line: 0, scope: !6437)
!6443 = !DILocation(line: 5498, column: 3, scope: !6437)
!6444 = !DILocation(line: 5500, column: 10, scope: !6437)
!6445 = !DILocation(line: 5500, column: 3, scope: !6437)
!6446 = distinct !DISubprogram(name: "types_used_by_vars_eq", scope: !3, file: !3, line: 5518, type: !1226, scopeLine: 5519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6447)
!6447 = !{!6448, !6449, !6450, !6451}
!6448 = !DILocalVariable(name: "x1", arg: 1, scope: !6446, file: !3, line: 5518, type: !1221)
!6449 = !DILocalVariable(name: "x2", arg: 2, scope: !6446, file: !3, line: 5518, type: !1221)
!6450 = !DILocalVariable(name: "e1", scope: !6446, file: !3, line: 5520, type: !2135)
!6451 = !DILocalVariable(name: "e2", scope: !6446, file: !3, line: 5522, type: !2135)
!6452 = !DILocation(line: 0, scope: !6446)
!6453 = !DILocation(line: 5525, column: 15, scope: !6446)
!6454 = !DILocation(line: 5525, column: 31, scope: !6446)
!6455 = !DILocation(line: 5525, column: 24, scope: !6446)
!6456 = !DILocation(line: 5525, column: 40, scope: !6446)
!6457 = !DILocation(line: 5525, column: 47, scope: !6446)
!6458 = !DILocation(line: 5525, column: 59, scope: !6446)
!6459 = !DILocation(line: 5525, column: 52, scope: !6446)
!6460 = !DILocation(line: 5525, column: 3, scope: !6446)
!6461 = distinct !DISubprogram(name: "types_used_by_var_decl_insert", scope: !3, file: !3, line: 5531, type: !6462, scopeLine: 5532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{null, !880, !880}
!6464 = !{!6465, !6466, !6467, !6470, !6471}
!6465 = !DILocalVariable(name: "type", arg: 1, scope: !6461, file: !3, line: 5531, type: !880)
!6466 = !DILocalVariable(name: "var_decl", arg: 2, scope: !6461, file: !3, line: 5531, type: !880)
!6467 = !DILocalVariable(name: "slot", scope: !6468, file: !3, line: 5535, type: !1234)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 5534, column: 5)
!6469 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 5533, column: 7)
!6470 = !DILocalVariable(name: "e", scope: !6468, file: !3, line: 5536, type: !2137)
!6471 = !DILocalVariable(name: "entry", scope: !6472, file: !3, line: 5547, type: !2141)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 5546, column: 2)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 5545, column: 11)
!6474 = !DILocation(line: 0, scope: !6461)
!6475 = !DILocation(line: 5533, column: 12, scope: !6469)
!6476 = !DILocation(line: 5533, column: 32, scope: !6469)
!6477 = !DILocation(line: 5533, column: 20, scope: !6469)
!6478 = !DILocation(line: 5536, column: 7, scope: !6468)
!6479 = !DILocation(line: 5537, column: 9, scope: !6468)
!6480 = !DILocation(line: 5537, column: 18, scope: !6468)
!6481 = !DILocation(line: 5538, column: 9, scope: !6468)
!6482 = !DILocation(line: 5538, column: 14, scope: !6468)
!6483 = !DILocation(line: 5539, column: 11, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 5539, column: 11)
!6485 = !DILocation(line: 5539, column: 35, scope: !6484)
!6486 = !DILocation(line: 5539, column: 11, scope: !6468)
!6487 = !DILocation(line: 5541, column: 4, scope: !6484)
!6488 = !DILocation(line: 5540, column: 26, scope: !6484)
!6489 = !DILocation(line: 5540, column: 2, scope: !6484)
!6490 = !DILocation(line: 5543, column: 40, scope: !6468)
!6491 = !DILocation(line: 0, scope: !6468)
!6492 = !DILocation(line: 5544, column: 12, scope: !6468)
!6493 = !DILocation(line: 5543, column: 14, scope: !6468)
!6494 = !DILocation(line: 5545, column: 11, scope: !6473)
!6495 = !DILocation(line: 5545, column: 17, scope: !6473)
!6496 = !DILocation(line: 5545, column: 11, scope: !6468)
!6497 = !DILocation(line: 5548, column: 47, scope: !6472)
!6498 = !DILocation(line: 0, scope: !6472)
!6499 = !DILocation(line: 5550, column: 11, scope: !6472)
!6500 = !DILocation(line: 5550, column: 16, scope: !6472)
!6501 = !DILocation(line: 5551, column: 11, scope: !6472)
!6502 = !DILocation(line: 5551, column: 20, scope: !6472)
!6503 = !DILocation(line: 5552, column: 10, scope: !6472)
!6504 = !DILocation(line: 5553, column: 2, scope: !6472)
!6505 = !DILocation(line: 5554, column: 5, scope: !6469)
!6506 = !DILocation(line: 5554, column: 5, scope: !6468)
!6507 = !DILocation(line: 5555, column: 1, scope: !6461)
!6508 = distinct !DISubprogram(name: "rest_of_handle_check_leaf_regs", scope: !3, file: !3, line: 5440, type: !2202, scopeLine: 5441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!6509 = !DILocation(line: 5446, column: 3, scope: !6508)
!6510 = distinct !DISubprogram(name: "rest_of_handle_thread_prologue_and_epilogue", scope: !3, file: !3, line: 5577, type: !2202, scopeLine: 5578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!6511 = !DILocation(line: 5579, column: 7, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 5579, column: 7)
!6513 = !DILocation(line: 5579, column: 7, scope: !6510)
!6514 = !DILocation(line: 5580, column: 5, scope: !6512)
!6515 = !DILocation(line: 5586, column: 3, scope: !6510)
!6516 = !DILocation(line: 5587, column: 3, scope: !6510)
!6517 = distinct !DISubprogram(name: "rest_of_match_asm_constraints", scope: !3, file: !3, line: 5758, type: !2202, scopeLine: 5759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6518)
!6518 = !{!6519, !6520, !6521, !6522, !6523}
!6519 = !DILocalVariable(name: "bb", scope: !6517, file: !3, line: 5760, type: !1298)
!6520 = !DILocalVariable(name: "insn", scope: !6517, file: !3, line: 5761, type: !765)
!6521 = !DILocalVariable(name: "pat", scope: !6517, file: !3, line: 5761, type: !765)
!6522 = !DILocalVariable(name: "p_sets", scope: !6517, file: !3, line: 5761, type: !3976)
!6523 = !DILocalVariable(name: "noutputs", scope: !6517, file: !3, line: 5762, type: !750)
!6524 = !DILocation(line: 5764, column: 14, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 5764, column: 7)
!6526 = !DILocation(line: 5764, column: 8, scope: !6525)
!6527 = !DILocation(line: 5764, column: 7, scope: !6517)
!6528 = !DILocation(line: 5767, column: 3, scope: !6517)
!6529 = !DILocation(line: 5768, column: 3, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 5768, column: 3)
!6531 = !DILocation(line: 5768, column: 3, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 5768, column: 3)
!6533 = !DILocation(line: 0, scope: !6530)
!6534 = !DILocation(line: 0, scope: !6517)
!6535 = !DILocation(line: 5770, column: 7, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 5770, column: 7)
!6537 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 5769, column: 5)
!6538 = !DILocation(line: 0, scope: !6536)
!6539 = !DILocation(line: 5770, column: 7, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 5770, column: 7)
!6541 = !DILocation(line: 5772, column: 9, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 5772, column: 8)
!6543 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 5771, column: 2)
!6544 = !DILocation(line: 5772, column: 8, scope: !6543)
!6545 = !DILocation(line: 5775, column: 10, scope: !6543)
!6546 = !DILocation(line: 5776, column: 8, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 5776, column: 8)
!6548 = !DILocation(line: 5776, column: 23, scope: !6547)
!6549 = !DILocation(line: 5776, column: 8, scope: !6543)
!6550 = !DILocation(line: 5777, column: 16, scope: !6547)
!6551 = !DILocation(line: 5777, column: 48, scope: !6547)
!6552 = !DILocation(line: 5777, column: 6, scope: !6547)
!6553 = !DILocation(line: 5778, column: 28, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 5778, column: 13)
!6555 = !DILocation(line: 5778, column: 13, scope: !6547)
!6556 = !DILocation(line: 0, scope: !6547)
!6557 = !DILocation(line: 5783, column: 8, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 5783, column: 8)
!6559 = !DILocation(line: 5783, column: 27, scope: !6558)
!6560 = !DILocation(line: 5784, column: 8, scope: !6558)
!6561 = !DILocation(line: 5784, column: 11, scope: !6558)
!6562 = !DILocation(line: 5784, column: 40, scope: !6558)
!6563 = !DILocation(line: 5783, column: 8, scope: !6543)
!6564 = !DILocation(line: 5785, column: 6, scope: !6558)
!6565 = distinct !{!6565, !6535, !6566}
!6566 = !DILocation(line: 5786, column: 3, scope: !6536)
!6567 = !DILocation(line: 0, scope: !6532)
!6568 = distinct !{!6568, !6529, !6569}
!6569 = !DILocation(line: 5787, column: 5, scope: !6530)
!6570 = !DILocation(line: 5790, column: 1, scope: !6517)
!6571 = distinct !DISubprogram(name: "gt_ggc_mx_temp_slot_address_entry", scope: !2225, file: !2225, line: 23, type: !1231, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6572)
!6572 = !{!6573, !6574}
!6573 = !DILocalVariable(name: "x_p", arg: 1, scope: !6571, file: !2225, line: 23, type: !754)
!6574 = !DILocalVariable(name: "x", scope: !6571, file: !2225, line: 25, type: !6575)
!6575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2142)
!6576 = !DILocation(line: 0, scope: !6571)
!6577 = !DILocation(line: 26, column: 7, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6571, file: !2225, line: 26, column: 7)
!6579 = !DILocation(line: 26, column: 7, scope: !6571)
!6580 = !DILocation(line: 28, column: 7, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6582, file: !2225, line: 28, column: 7)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !2225, line: 28, column: 7)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !2225, line: 27, column: 5)
!6584 = !DILocation(line: 28, column: 7, scope: !6582)
!6585 = !DILocation(line: 29, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !2225, line: 29, column: 7)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !2225, line: 29, column: 7)
!6588 = !DILocation(line: 29, column: 7, scope: !6587)
!6589 = !DILocation(line: 31, column: 1, scope: !6571)
!6590 = distinct !DISubprogram(name: "gt_ggc_mx_temp_slot", scope: !2225, file: !2225, line: 34, type: !1231, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6591)
!6591 = !{!6592, !6593}
!6592 = !DILocalVariable(name: "x_p", arg: 1, scope: !6590, file: !2225, line: 34, type: !754)
!6593 = !DILocalVariable(name: "x", scope: !6590, file: !2225, line: 36, type: !6594)
!6594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!6595 = !DILocation(line: 0, scope: !6590)
!6596 = !DILocation(line: 37, column: 7, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6590, file: !2225, line: 37, column: 7)
!6598 = !DILocation(line: 37, column: 7, scope: !6590)
!6599 = !DILocation(line: 39, column: 7, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !2225, line: 39, column: 7)
!6601 = distinct !DILexicalBlock(scope: !6602, file: !2225, line: 39, column: 7)
!6602 = distinct !DILexicalBlock(scope: !6597, file: !2225, line: 38, column: 5)
!6603 = !DILocation(line: 39, column: 7, scope: !6601)
!6604 = !DILocation(line: 40, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !2225, line: 40, column: 7)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !2225, line: 40, column: 7)
!6607 = !DILocation(line: 40, column: 7, scope: !6606)
!6608 = !DILocation(line: 41, column: 7, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !2225, line: 41, column: 7)
!6610 = distinct !DILexicalBlock(scope: !6602, file: !2225, line: 41, column: 7)
!6611 = !DILocation(line: 41, column: 7, scope: !6610)
!6612 = !DILocation(line: 42, column: 7, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !2225, line: 42, column: 7)
!6614 = distinct !DILexicalBlock(scope: !6602, file: !2225, line: 42, column: 7)
!6615 = !DILocation(line: 42, column: 7, scope: !6614)
!6616 = !DILocation(line: 44, column: 1, scope: !6590)
!6617 = distinct !DISubprogram(name: "gt_ggc_m_P23temp_slot_address_entry4htab", scope: !2225, file: !2225, line: 47, type: !1231, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6618)
!6618 = !{!6619, !6620, !6622, !6627}
!6619 = !DILocalVariable(name: "x_p", arg: 1, scope: !6617, file: !2225, line: 47, type: !754)
!6620 = !DILocalVariable(name: "x", scope: !6617, file: !2225, line: 49, type: !6621)
!6621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1212)
!6622 = !DILocalVariable(name: "i0", scope: !6623, file: !2225, line: 53, type: !1236)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !2225, line: 52, column: 33)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !2225, line: 52, column: 11)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !2225, line: 51, column: 5)
!6626 = distinct !DILexicalBlock(scope: !6617, file: !2225, line: 50, column: 7)
!6627 = !DILocalVariable(name: "a__", scope: !6628, file: !2225, line: 57, type: !6629)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !2225, line: 57, column: 9)
!6629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!6630 = !DILocation(line: 0, scope: !6617)
!6631 = !DILocation(line: 50, column: 7, scope: !6626)
!6632 = !DILocation(line: 50, column: 7, scope: !6617)
!6633 = !DILocation(line: 52, column: 16, scope: !6624)
!6634 = !DILocation(line: 52, column: 24, scope: !6624)
!6635 = !DILocation(line: 52, column: 11, scope: !6625)
!6636 = !DILocation(line: 0, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !2225, line: 54, column: 9)
!6638 = distinct !DILexicalBlock(scope: !6623, file: !2225, line: 54, column: 9)
!6639 = !DILocation(line: 54, column: 9, scope: !6638)
!6640 = !DILocation(line: 0, scope: !6623)
!6641 = !DILocation(line: 0, scope: !6638)
!6642 = !DILocation(line: 54, column: 44, scope: !6637)
!6643 = !DILocation(line: 54, column: 25, scope: !6637)
!6644 = !DILocation(line: 55, column: 11, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !2225, line: 55, column: 11)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !2225, line: 55, column: 11)
!6647 = distinct !DILexicalBlock(scope: !6637, file: !2225, line: 54, column: 57)
!6648 = !DILocation(line: 55, column: 11, scope: !6646)
!6649 = !DILocation(line: 54, column: 53, scope: !6637)
!6650 = !DILocation(line: 54, column: 9, scope: !6637)
!6651 = distinct !{!6651, !6639, !6652}
!6652 = !DILocation(line: 56, column: 9, scope: !6638)
!6653 = !DILocation(line: 0, scope: !6628)
!6654 = !DILocation(line: 57, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6628, file: !2225, line: 57, column: 9)
!6656 = !DILocation(line: 57, column: 9, scope: !6628)
!6657 = !DILocation(line: 60, column: 1, scope: !6617)
!6658 = distinct !DISubprogram(name: "gt_pch_nx_temp_slot_address_entry", scope: !2225, file: !2225, line: 63, type: !1231, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6659)
!6659 = !{!6660, !6661}
!6660 = !DILocalVariable(name: "x_p", arg: 1, scope: !6658, file: !2225, line: 63, type: !754)
!6661 = !DILocalVariable(name: "x", scope: !6658, file: !2225, line: 65, type: !6575)
!6662 = !DILocation(line: 0, scope: !6658)
!6663 = !DILocation(line: 66, column: 7, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6658, file: !2225, line: 66, column: 7)
!6665 = !DILocation(line: 66, column: 7, scope: !6658)
!6666 = !DILocation(line: 68, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !2225, line: 68, column: 7)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !2225, line: 68, column: 7)
!6669 = distinct !DILexicalBlock(scope: !6664, file: !2225, line: 67, column: 5)
!6670 = !DILocation(line: 68, column: 7, scope: !6668)
!6671 = !DILocation(line: 69, column: 7, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !2225, line: 69, column: 7)
!6673 = distinct !DILexicalBlock(scope: !6669, file: !2225, line: 69, column: 7)
!6674 = !DILocation(line: 69, column: 7, scope: !6673)
!6675 = !DILocation(line: 71, column: 1, scope: !6658)
!6676 = distinct !DISubprogram(name: "gt_pch_p_23temp_slot_address_entry", scope: !2225, file: !2225, line: 103, type: !6677, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6680)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{null, !754, !754, !6679, !754}
!6679 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2229, line: 38, baseType: !1257)
!6680 = !{!6681, !6682, !6683, !6684, !6685}
!6681 = !DILocalVariable(name: "this_obj", arg: 1, scope: !6676, file: !2225, line: 103, type: !754)
!6682 = !DILocalVariable(name: "x_p", arg: 2, scope: !6676, file: !2225, line: 104, type: !754)
!6683 = !DILocalVariable(name: "op", arg: 3, scope: !6676, file: !2225, line: 105, type: !6679)
!6684 = !DILocalVariable(name: "cookie", arg: 4, scope: !6676, file: !2225, line: 106, type: !754)
!6685 = !DILocalVariable(name: "x", scope: !6676, file: !2225, line: 108, type: !6575)
!6686 = !DILocation(line: 0, scope: !6676)
!6687 = !DILocation(line: 109, column: 19, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6676, file: !2225, line: 109, column: 7)
!6689 = !DILocation(line: 109, column: 7, scope: !6676)
!6690 = !DILocation(line: 110, column: 16, scope: !6688)
!6691 = !DILocation(line: 110, column: 5, scope: !6688)
!6692 = !DILocation(line: 111, column: 7, scope: !6676)
!6693 = !DILocation(line: 112, column: 16, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6676, file: !2225, line: 111, column: 7)
!6695 = !DILocation(line: 112, column: 5, scope: !6694)
!6696 = !DILocation(line: 113, column: 1, scope: !6676)
!6697 = distinct !DISubprogram(name: "gt_pch_nx_temp_slot", scope: !2225, file: !2225, line: 74, type: !1231, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6698)
!6698 = !{!6699, !6700}
!6699 = !DILocalVariable(name: "x_p", arg: 1, scope: !6697, file: !2225, line: 74, type: !754)
!6700 = !DILocalVariable(name: "x", scope: !6697, file: !2225, line: 76, type: !6594)
!6701 = !DILocation(line: 0, scope: !6697)
!6702 = !DILocation(line: 77, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !2225, line: 77, column: 7)
!6704 = !DILocation(line: 77, column: 7, scope: !6697)
!6705 = !DILocation(line: 79, column: 7, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !2225, line: 79, column: 7)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !2225, line: 79, column: 7)
!6708 = distinct !DILexicalBlock(scope: !6703, file: !2225, line: 78, column: 5)
!6709 = !DILocation(line: 79, column: 7, scope: !6707)
!6710 = !DILocation(line: 80, column: 7, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !2225, line: 80, column: 7)
!6712 = distinct !DILexicalBlock(scope: !6708, file: !2225, line: 80, column: 7)
!6713 = !DILocation(line: 80, column: 7, scope: !6712)
!6714 = !DILocation(line: 81, column: 7, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !2225, line: 81, column: 7)
!6716 = distinct !DILexicalBlock(scope: !6708, file: !2225, line: 81, column: 7)
!6717 = !DILocation(line: 81, column: 7, scope: !6716)
!6718 = !DILocation(line: 82, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !2225, line: 82, column: 7)
!6720 = distinct !DILexicalBlock(scope: !6708, file: !2225, line: 82, column: 7)
!6721 = !DILocation(line: 82, column: 7, scope: !6720)
!6722 = !DILocation(line: 84, column: 1, scope: !6697)
!6723 = distinct !DISubprogram(name: "gt_pch_p_9temp_slot", scope: !2225, file: !2225, line: 116, type: !6677, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6724)
!6724 = !{!6725, !6726, !6727, !6728, !6729}
!6725 = !DILocalVariable(name: "this_obj", arg: 1, scope: !6723, file: !2225, line: 116, type: !754)
!6726 = !DILocalVariable(name: "x_p", arg: 2, scope: !6723, file: !2225, line: 117, type: !754)
!6727 = !DILocalVariable(name: "op", arg: 3, scope: !6723, file: !2225, line: 118, type: !6679)
!6728 = !DILocalVariable(name: "cookie", arg: 4, scope: !6723, file: !2225, line: 119, type: !754)
!6729 = !DILocalVariable(name: "x", scope: !6723, file: !2225, line: 121, type: !6594)
!6730 = !DILocation(line: 0, scope: !6723)
!6731 = !DILocation(line: 122, column: 19, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6723, file: !2225, line: 122, column: 7)
!6733 = !DILocation(line: 122, column: 7, scope: !6723)
!6734 = !DILocation(line: 123, column: 5, scope: !6732)
!6735 = !DILocation(line: 124, column: 7, scope: !6723)
!6736 = !DILocation(line: 125, column: 16, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6723, file: !2225, line: 124, column: 7)
!6738 = !DILocation(line: 125, column: 5, scope: !6737)
!6739 = !DILocation(line: 126, column: 7, scope: !6723)
!6740 = !DILocation(line: 127, column: 16, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6723, file: !2225, line: 126, column: 7)
!6742 = !DILocation(line: 127, column: 5, scope: !6741)
!6743 = !DILocation(line: 128, column: 7, scope: !6723)
!6744 = !DILocation(line: 129, column: 16, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6723, file: !2225, line: 128, column: 7)
!6746 = !DILocation(line: 129, column: 5, scope: !6745)
!6747 = !DILocation(line: 130, column: 1, scope: !6723)
!6748 = distinct !DISubprogram(name: "gt_pch_n_P23temp_slot_address_entry4htab", scope: !2225, file: !2225, line: 87, type: !1231, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6749)
!6749 = !{!6750, !6751, !6752}
!6750 = !DILocalVariable(name: "x_p", arg: 1, scope: !6748, file: !2225, line: 87, type: !754)
!6751 = !DILocalVariable(name: "x", scope: !6748, file: !2225, line: 89, type: !6621)
!6752 = !DILocalVariable(name: "i0", scope: !6753, file: !2225, line: 93, type: !1236)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !2225, line: 92, column: 33)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !2225, line: 92, column: 11)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !2225, line: 91, column: 5)
!6756 = distinct !DILexicalBlock(scope: !6748, file: !2225, line: 90, column: 7)
!6757 = !DILocation(line: 0, scope: !6748)
!6758 = !DILocation(line: 90, column: 7, scope: !6756)
!6759 = !DILocation(line: 90, column: 7, scope: !6748)
!6760 = !DILocation(line: 92, column: 16, scope: !6754)
!6761 = !DILocation(line: 92, column: 24, scope: !6754)
!6762 = !DILocation(line: 92, column: 11, scope: !6755)
!6763 = !DILocation(line: 0, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !2225, line: 94, column: 9)
!6765 = distinct !DILexicalBlock(scope: !6753, file: !2225, line: 94, column: 9)
!6766 = !DILocation(line: 94, column: 9, scope: !6765)
!6767 = !DILocation(line: 0, scope: !6753)
!6768 = !DILocation(line: 0, scope: !6765)
!6769 = !DILocation(line: 94, column: 44, scope: !6764)
!6770 = !DILocation(line: 94, column: 25, scope: !6764)
!6771 = !DILocation(line: 95, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !2225, line: 95, column: 11)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !2225, line: 95, column: 11)
!6774 = distinct !DILexicalBlock(scope: !6764, file: !2225, line: 94, column: 57)
!6775 = !DILocation(line: 95, column: 11, scope: !6773)
!6776 = !DILocation(line: 94, column: 53, scope: !6764)
!6777 = !DILocation(line: 94, column: 9, scope: !6764)
!6778 = distinct !{!6778, !6766, !6779}
!6779 = !DILocation(line: 96, column: 9, scope: !6765)
!6780 = !DILocation(line: 97, column: 29, scope: !6753)
!6781 = !DILocation(line: 97, column: 9, scope: !6753)
!6782 = !DILocation(line: 98, column: 7, scope: !6753)
!6783 = !DILocation(line: 100, column: 1, scope: !6748)
!6784 = distinct !DISubprogram(name: "gt_pch_p_P23temp_slot_address_entry4htab", scope: !2225, file: !2225, line: 133, type: !6677, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6785)
!6785 = !{!6786, !6787, !6788, !6789, !6790, !6791}
!6786 = !DILocalVariable(name: "this_obj", arg: 1, scope: !6784, file: !2225, line: 133, type: !754)
!6787 = !DILocalVariable(name: "x_p", arg: 2, scope: !6784, file: !2225, line: 134, type: !754)
!6788 = !DILocalVariable(name: "op", arg: 3, scope: !6784, file: !2225, line: 135, type: !6679)
!6789 = !DILocalVariable(name: "cookie", arg: 4, scope: !6784, file: !2225, line: 136, type: !754)
!6790 = !DILocalVariable(name: "x", scope: !6784, file: !2225, line: 138, type: !6621)
!6791 = !DILocalVariable(name: "i0", scope: !6792, file: !2225, line: 140, type: !1236)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !2225, line: 139, column: 29)
!6793 = distinct !DILexicalBlock(scope: !6784, file: !2225, line: 139, column: 7)
!6794 = !DILocation(line: 0, scope: !6784)
!6795 = !DILocation(line: 139, column: 12, scope: !6793)
!6796 = !DILocation(line: 139, column: 20, scope: !6793)
!6797 = !DILocation(line: 139, column: 7, scope: !6784)
!6798 = !DILocation(line: 0, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !2225, line: 141, column: 5)
!6800 = distinct !DILexicalBlock(scope: !6792, file: !2225, line: 141, column: 5)
!6801 = !DILocation(line: 0, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !2225, line: 142, column: 11)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !2225, line: 141, column: 53)
!6804 = !DILocation(line: 141, column: 5, scope: !6800)
!6805 = !DILocation(line: 0, scope: !6800)
!6806 = !DILocation(line: 0, scope: !6792)
!6807 = !DILocation(line: 141, column: 40, scope: !6799)
!6808 = !DILocation(line: 141, column: 21, scope: !6799)
!6809 = !DILocation(line: 142, column: 25, scope: !6802)
!6810 = !DILocation(line: 142, column: 34, scope: !6802)
!6811 = !DILocation(line: 142, column: 11, scope: !6803)
!6812 = !DILocation(line: 143, column: 15, scope: !6802)
!6813 = !DILocation(line: 143, column: 13, scope: !6802)
!6814 = !DILocation(line: 143, column: 9, scope: !6802)
!6815 = !DILocation(line: 141, column: 49, scope: !6799)
!6816 = !DILocation(line: 141, column: 5, scope: !6799)
!6817 = distinct !{!6817, !6804, !6818}
!6818 = !DILocation(line: 144, column: 5, scope: !6800)
!6819 = !DILocation(line: 145, column: 21, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6792, file: !2225, line: 145, column: 9)
!6821 = !DILocation(line: 145, column: 9, scope: !6792)
!6822 = !DILocation(line: 146, column: 7, scope: !6820)
!6823 = !DILocation(line: 148, column: 1, scope: !6784)
!6824 = distinct !DISubprogram(name: "VEC_function_p_heap_reserve", scope: !3, file: !3, line: 164, type: !6825, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6827)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!750, !2825, !750}
!6827 = !{!6828, !6829, !6830}
!6828 = !DILocalVariable(name: "vec_", arg: 1, scope: !6824, file: !3, line: 164, type: !2825)
!6829 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6824, file: !3, line: 164, type: !750)
!6830 = !DILocalVariable(name: "extend", scope: !6824, file: !3, line: 164, type: !750)
!6831 = !DILocation(line: 0, scope: !6824)
!6832 = !DILocation(line: 164, column: 1, scope: !6824)
!6833 = !DILocation(line: 164, column: 1, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 164, column: 1)
!6835 = distinct !DISubprogram(name: "VEC_function_p_base_quick_push", scope: !3, file: !3, line: 163, type: !6836, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!2824, !2862, !2160}
!6838 = !{!6839, !6840, !6841}
!6839 = !DILocalVariable(name: "vec_", arg: 1, scope: !6835, file: !3, line: 163, type: !2862)
!6840 = !DILocalVariable(name: "obj_", arg: 2, scope: !6835, file: !3, line: 163, type: !2160)
!6841 = !DILocalVariable(name: "slot_", scope: !6835, file: !3, line: 163, type: !2824)
!6842 = !DILocation(line: 0, scope: !6835)
!6843 = !DILocation(line: 163, column: 1, scope: !6835)
!6844 = distinct !DISubprogram(name: "VEC_function_p_base_space", scope: !3, file: !3, line: 163, type: !6845, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6847)
!6845 = !DISubroutineType(types: !6846)
!6846 = !{!750, !2862, !750}
!6847 = !{!6848, !6849}
!6848 = !DILocalVariable(name: "vec_", arg: 1, scope: !6844, file: !3, line: 163, type: !2862)
!6849 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6844, file: !3, line: 163, type: !750)
!6850 = !DILocation(line: 0, scope: !6844)
!6851 = !DILocation(line: 163, column: 1, scope: !6844)
!6852 = distinct !DISubprogram(name: "VEC_temp_slot_p_base_length", scope: !1127, file: !1127, line: 171, type: !6853, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6857)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!7, !6855}
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 64)
!6856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!6857 = !{!6858}
!6858 = !DILocalVariable(name: "vec_", arg: 1, scope: !6852, file: !1127, line: 171, type: !6855)
!6859 = !DILocation(line: 0, scope: !6852)
!6860 = !DILocation(line: 171, column: 1, scope: !6852)
!6861 = distinct !DISubprogram(name: "VEC_temp_slot_p_gc_safe_grow_cleared", scope: !1127, file: !1127, line: 172, type: !6862, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6865)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{null, !6864, !750}
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!6865 = !{!6866, !6867, !6868}
!6866 = !DILocalVariable(name: "vec_", arg: 1, scope: !6861, file: !1127, line: 172, type: !6864)
!6867 = !DILocalVariable(name: "size_", arg: 2, scope: !6861, file: !1127, line: 172, type: !750)
!6868 = !DILocalVariable(name: "oldsize", scope: !6861, file: !1127, line: 172, type: !750)
!6869 = !DILocation(line: 0, scope: !6861)
!6870 = !DILocation(line: 172, column: 1, scope: !6861)
!6871 = distinct !DISubprogram(name: "VEC_temp_slot_p_base_address", scope: !1127, file: !1127, line: 171, type: !6872, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6876)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!6874, !6875}
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!6876 = !{!6877}
!6877 = !DILocalVariable(name: "vec_", arg: 1, scope: !6871, file: !1127, line: 171, type: !6875)
!6878 = !DILocation(line: 0, scope: !6871)
!6879 = !DILocation(line: 171, column: 1, scope: !6871)
!6880 = distinct !DISubprogram(name: "VEC_temp_slot_p_gc_safe_grow", scope: !1127, file: !1127, line: 172, type: !6862, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6881)
!6881 = !{!6882, !6883}
!6882 = !DILocalVariable(name: "vec_", arg: 1, scope: !6880, file: !1127, line: 172, type: !6864)
!6883 = !DILocalVariable(name: "size_", arg: 2, scope: !6880, file: !1127, line: 172, type: !750)
!6884 = !DILocation(line: 0, scope: !6880)
!6885 = !DILocation(line: 172, column: 1, scope: !6880)
!6886 = distinct !DISubprogram(name: "VEC_temp_slot_p_gc_reserve_exact", scope: !1127, file: !1127, line: 172, type: !6887, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6889)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!750, !6864, !750}
!6889 = !{!6890, !6891, !6892}
!6890 = !DILocalVariable(name: "vec_", arg: 1, scope: !6886, file: !1127, line: 172, type: !6864)
!6891 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6886, file: !1127, line: 172, type: !750)
!6892 = !DILocalVariable(name: "extend", scope: !6886, file: !1127, line: 172, type: !750)
!6893 = !DILocation(line: 0, scope: !6886)
!6894 = !DILocation(line: 172, column: 1, scope: !6886)
!6895 = !DILocation(line: 172, column: 1, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6886, file: !1127, line: 172, column: 1)
!6897 = distinct !DISubprogram(name: "VEC_temp_slot_p_base_space", scope: !1127, file: !1127, line: 171, type: !6898, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6900)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!750, !6875, !750}
!6900 = !{!6901, !6902}
!6901 = !DILocalVariable(name: "vec_", arg: 1, scope: !6897, file: !1127, line: 171, type: !6875)
!6902 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6897, file: !1127, line: 171, type: !750)
!6903 = !DILocation(line: 0, scope: !6897)
!6904 = !DILocation(line: 171, column: 1, scope: !6897)
!6905 = distinct !DISubprogram(name: "temp_slot_address_compute_hash", scope: !3, file: !3, line: 572, type: !6906, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6908)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!1220, !2142}
!6908 = !{!6909, !6910}
!6909 = !DILocalVariable(name: "t", arg: 1, scope: !6905, file: !3, line: 572, type: !2142)
!6910 = !DILocalVariable(name: "do_not_record", scope: !6905, file: !3, line: 574, type: !750)
!6911 = !DILocation(line: 0, scope: !6905)
!6912 = !DILocation(line: 574, column: 3, scope: !6905)
!6913 = !DILocation(line: 574, column: 7, scope: !6905)
!6914 = !DILocation(line: 575, column: 23, scope: !6905)
!6915 = !DILocation(line: 575, column: 32, scope: !6905)
!6916 = !DILocation(line: 575, column: 10, scope: !6905)
!6917 = !DILocation(line: 577, column: 1, scope: !6905)
!6918 = !DILocation(line: 575, column: 3, scope: !6905)
!6919 = distinct !DISubprogram(name: "max_slot_level", scope: !3, file: !3, line: 540, type: !2323, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!6920 = !DILocation(line: 542, column: 8, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 542, column: 7)
!6922 = !DILocation(line: 542, column: 7, scope: !6919)
!6923 = !DILocation(line: 545, column: 10, scope: !6919)
!6924 = !DILocation(line: 545, column: 52, scope: !6919)
!6925 = !DILocation(line: 545, column: 3, scope: !6919)
!6926 = !DILocation(line: 0, scope: !6919)
!6927 = !DILocation(line: 546, column: 1, scope: !6919)
!6928 = distinct !DISubprogram(name: "remove_unused_temp_slot_addresses_1", scope: !3, file: !3, line: 614, type: !6929, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6931)
!6929 = !DISubroutineType(types: !6930)
!6930 = !{!750, !1234, !754}
!6931 = !{!6932, !6933, !6934}
!6932 = !DILocalVariable(name: "slot", arg: 1, scope: !6928, file: !3, line: 614, type: !1234)
!6933 = !DILocalVariable(name: "data", arg: 2, scope: !6928, file: !3, line: 614, type: !754)
!6934 = !DILocalVariable(name: "t", scope: !6928, file: !3, line: 616, type: !2174)
!6935 = !DILocation(line: 0, scope: !6928)
!6936 = !DILocation(line: 617, column: 48, scope: !6928)
!6937 = !DILocation(line: 618, column: 12, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 618, column: 7)
!6939 = !DILocation(line: 618, column: 23, scope: !6938)
!6940 = !DILocation(line: 618, column: 9, scope: !6938)
!6941 = !DILocation(line: 618, column: 7, scope: !6928)
!6942 = !DILocation(line: 619, column: 11, scope: !6938)
!6943 = !DILocation(line: 619, column: 5, scope: !6938)
!6944 = !DILocation(line: 620, column: 3, scope: !6928)
!6945 = distinct !DISubprogram(name: "instantiate_new_reg", scope: !3, file: !3, line: 1294, type: !6946, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6949)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{!765, !765, !6948}
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!6949 = !{!6950, !6951, !6952, !6953}
!6950 = !DILocalVariable(name: "x", arg: 1, scope: !6945, file: !3, line: 1294, type: !765)
!6951 = !DILocalVariable(name: "poffset", arg: 2, scope: !6945, file: !3, line: 1294, type: !6948)
!6952 = !DILocalVariable(name: "new_rtx", scope: !6945, file: !3, line: 1296, type: !765)
!6953 = !DILocalVariable(name: "offset", scope: !6945, file: !3, line: 1297, type: !851)
!6954 = !DILocation(line: 0, scope: !6945)
!6955 = !DILocation(line: 1299, column: 12, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1299, column: 7)
!6957 = !DILocation(line: 1299, column: 9, scope: !6956)
!6958 = !DILocation(line: 1299, column: 7, scope: !6945)
!6959 = !DILocation(line: 1301, column: 11, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 1301, column: 11)
!6961 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1300, column: 5)
!6962 = !DILocation(line: 1301, column: 11, scope: !6961)
!6963 = !DILocation(line: 1307, column: 9, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 1302, column: 9)
!6965 = !DILocation(line: 1311, column: 17, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1311, column: 12)
!6967 = !DILocation(line: 1311, column: 14, scope: !6966)
!6968 = !DILocation(line: 1311, column: 12, scope: !6956)
!6969 = !DILocation(line: 1312, column: 5, scope: !6966)
!6970 = !DILocation(line: 1313, column: 17, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1313, column: 12)
!6972 = !DILocation(line: 1313, column: 14, scope: !6971)
!6973 = !DILocation(line: 1313, column: 12, scope: !6966)
!6974 = !DILocation(line: 1314, column: 43, scope: !6971)
!6975 = !DILocation(line: 1314, column: 5, scope: !6971)
!6976 = !DILocation(line: 1315, column: 17, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1315, column: 12)
!6978 = !DILocation(line: 1315, column: 14, scope: !6977)
!6979 = !DILocation(line: 1315, column: 12, scope: !6971)
!6980 = !DILocation(line: 1316, column: 5, scope: !6977)
!6981 = !DILocation(line: 1317, column: 17, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 1317, column: 12)
!6983 = !DILocation(line: 1317, column: 14, scope: !6982)
!6984 = !DILocation(line: 1317, column: 12, scope: !6977)
!6985 = !DILocation(line: 1324, column: 16, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1318, column: 5)
!6987 = !DILocation(line: 0, scope: !6956)
!6988 = !DILocation(line: 1329, column: 12, scope: !6945)
!6989 = !DILocation(line: 1330, column: 3, scope: !6945)
!6990 = !DILocation(line: 1331, column: 1, scope: !6945)
!6991 = distinct !DISubprogram(name: "instantiate_virtual_regs_in_insn", scope: !3, file: !3, line: 1408, type: !3551, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6992)
!6992 = !{!6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7002, !7008}
!6993 = !DILocalVariable(name: "insn", arg: 1, scope: !6991, file: !3, line: 1408, type: !765)
!6994 = !DILocalVariable(name: "offset", scope: !6991, file: !3, line: 1410, type: !851)
!6995 = !DILocalVariable(name: "insn_code", scope: !6991, file: !3, line: 1411, type: !750)
!6996 = !DILocalVariable(name: "i", scope: !6991, file: !3, line: 1411, type: !750)
!6997 = !DILocalVariable(name: "any_change", scope: !6991, file: !3, line: 1412, type: !749)
!6998 = !DILocalVariable(name: "set", scope: !6991, file: !3, line: 1413, type: !765)
!6999 = !DILocalVariable(name: "new_rtx", scope: !6991, file: !3, line: 1413, type: !765)
!7000 = !DILocalVariable(name: "x", scope: !6991, file: !3, line: 1413, type: !765)
!7001 = !DILocalVariable(name: "seq", scope: !6991, file: !3, line: 1413, type: !765)
!7002 = !DILocalVariable(name: "addr", scope: !7003, file: !3, line: 1529, type: !765)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1528, column: 4)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1526, column: 2)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 1523, column: 5)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 1522, column: 3)
!7007 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1522, column: 3)
!7008 = !DILocalVariable(name: "changed", scope: !7003, file: !3, line: 1530, type: !749)
!7009 = !DILocation(line: 0, scope: !6991)
!7010 = !DILocation(line: 1410, column: 3, scope: !6991)
!7011 = !DILocation(line: 1416, column: 9, scope: !6991)
!7012 = !DILocation(line: 1417, column: 7, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1417, column: 7)
!7014 = !DILocation(line: 1417, column: 7, scope: !6991)
!7015 = !DILocation(line: 1423, column: 38, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1418, column: 5)
!7017 = !DILocation(line: 1423, column: 17, scope: !7016)
!7018 = !DILocation(line: 1424, column: 11, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1424, column: 11)
!7020 = !DILocation(line: 1424, column: 11, scope: !7016)
!7021 = !DILocation(line: 1426, column: 4, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 1425, column: 2)
!7023 = !DILocation(line: 1428, column: 19, scope: !7022)
!7024 = !DILocation(line: 1428, column: 4, scope: !7022)
!7025 = !DILocation(line: 1429, column: 35, scope: !7022)
!7026 = !DILocation(line: 1429, column: 55, scope: !7022)
!7027 = !DILocation(line: 1430, column: 8, scope: !7022)
!7028 = !DILocation(line: 1429, column: 8, scope: !7022)
!7029 = !DILocation(line: 1431, column: 8, scope: !7022)
!7030 = !DILocation(line: 1432, column: 10, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 1432, column: 8)
!7032 = !DILocation(line: 1432, column: 8, scope: !7022)
!7033 = !DILocation(line: 1433, column: 6, scope: !7031)
!7034 = !DILocation(line: 1435, column: 10, scope: !7022)
!7035 = !DILocation(line: 1436, column: 4, scope: !7022)
!7036 = !DILocation(line: 1438, column: 4, scope: !7022)
!7037 = !DILocation(line: 1439, column: 4, scope: !7022)
!7038 = !DILocation(line: 1440, column: 4, scope: !7022)
!7039 = !DILocation(line: 1447, column: 38, scope: !7016)
!7040 = !DILocation(line: 1447, column: 17, scope: !7016)
!7041 = !DILocation(line: 1448, column: 11, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1448, column: 11)
!7043 = !DILocation(line: 1448, column: 22, scope: !7042)
!7044 = !DILocation(line: 1448, column: 29, scope: !7042)
!7045 = !DILocation(line: 1448, column: 19, scope: !7042)
!7046 = !DILocation(line: 1449, column: 7, scope: !7042)
!7047 = !DILocation(line: 1450, column: 4, scope: !7042)
!7048 = !DILocation(line: 1450, column: 7, scope: !7042)
!7049 = !DILocation(line: 1450, column: 30, scope: !7042)
!7050 = !DILocation(line: 1448, column: 11, scope: !7016)
!7051 = !DILocation(line: 1452, column: 4, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 1451, column: 2)
!7053 = !DILocation(line: 1454, column: 29, scope: !7052)
!7054 = !DILocation(line: 1455, column: 17, scope: !7052)
!7055 = !DILocation(line: 1455, column: 35, scope: !7052)
!7056 = !DILocation(line: 1454, column: 8, scope: !7052)
!7057 = !DILocation(line: 1457, column: 13, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 1457, column: 8)
!7059 = !DILocation(line: 1457, column: 10, scope: !7058)
!7060 = !DILocation(line: 1457, column: 8, scope: !7052)
!7061 = !DILocation(line: 1458, column: 6, scope: !7058)
!7062 = !DILocation(line: 1460, column: 10, scope: !7052)
!7063 = !DILocation(line: 1461, column: 4, scope: !7052)
!7064 = !DILocation(line: 1463, column: 4, scope: !7052)
!7065 = !DILocation(line: 1464, column: 4, scope: !7052)
!7066 = !DILocation(line: 1465, column: 4, scope: !7052)
!7067 = !DILocation(line: 1468, column: 7, scope: !7016)
!7068 = !DILocation(line: 1469, column: 19, scope: !7016)
!7069 = !DILocation(line: 1473, column: 11, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1473, column: 11)
!7071 = !DILocation(line: 1473, column: 36, scope: !7070)
!7072 = !DILocation(line: 1474, column: 4, scope: !7070)
!7073 = !DILocation(line: 1474, column: 18, scope: !7070)
!7074 = !DILocation(line: 1474, column: 29, scope: !7070)
!7075 = !DILocation(line: 1475, column: 4, scope: !7070)
!7076 = !DILocation(line: 1475, column: 7, scope: !7070)
!7077 = !DILocation(line: 1475, column: 37, scope: !7070)
!7078 = !DILocation(line: 1475, column: 33, scope: !7070)
!7079 = !DILocation(line: 1476, column: 4, scope: !7070)
!7080 = !DILocation(line: 1476, column: 7, scope: !7070)
!7081 = !DILocation(line: 1476, column: 37, scope: !7070)
!7082 = !DILocation(line: 1476, column: 33, scope: !7070)
!7083 = !DILocation(line: 1477, column: 4, scope: !7070)
!7084 = !DILocation(line: 1477, column: 7, scope: !7070)
!7085 = !DILocation(line: 1478, column: 4, scope: !7070)
!7086 = !DILocation(line: 1478, column: 39, scope: !7070)
!7087 = !DILocation(line: 1478, column: 18, scope: !7070)
!7088 = !DILocation(line: 1478, column: 16, scope: !7070)
!7089 = !DILocation(line: 1473, column: 11, scope: !7016)
!7090 = !DILocation(line: 1480, column: 14, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 1479, column: 2)
!7092 = !DILocation(line: 1480, column: 11, scope: !7091)
!7093 = !DILocation(line: 1483, column: 15, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 1483, column: 8)
!7095 = !DILocation(line: 1484, column: 8, scope: !7094)
!7096 = !DILocation(line: 1484, column: 11, scope: !7094)
!7097 = !DILocation(line: 1485, column: 8, scope: !7094)
!7098 = !DILocation(line: 1485, column: 11, scope: !7094)
!7099 = !DILocation(line: 1485, column: 34, scope: !7094)
!7100 = !DILocation(line: 1483, column: 8, scope: !7091)
!7101 = !DILocation(line: 1497, column: 22, scope: !7091)
!7102 = !DILocation(line: 1487, column: 8, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1486, column: 6)
!7104 = !DILocation(line: 1488, column: 24, scope: !7103)
!7105 = !DILocation(line: 1488, column: 8, scope: !7103)
!7106 = !DILocation(line: 1489, column: 14, scope: !7103)
!7107 = !DILocation(line: 1490, column: 8, scope: !7103)
!7108 = !DILocation(line: 1492, column: 8, scope: !7103)
!7109 = !DILocation(line: 1493, column: 8, scope: !7103)
!7110 = !DILocation(line: 1494, column: 8, scope: !7103)
!7111 = !DILocation(line: 1497, column: 30, scope: !7091)
!7112 = !DILocation(line: 1497, column: 8, scope: !7091)
!7113 = !DILocation(line: 1502, column: 8, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 1502, column: 8)
!7115 = !DILocation(line: 1503, column: 8, scope: !7114)
!7116 = !DILocation(line: 1503, column: 11, scope: !7114)
!7117 = !DILocation(line: 1502, column: 8, scope: !7091)
!7118 = !DILocation(line: 1505, column: 59, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1504, column: 6)
!7120 = !DILocation(line: 1505, column: 9, scope: !7119)
!7121 = !DILocation(line: 1505, column: 35, scope: !7119)
!7122 = !DILocation(line: 1506, column: 59, scope: !7119)
!7123 = !DILocation(line: 1506, column: 9, scope: !7119)
!7124 = !DILocation(line: 1506, column: 35, scope: !7119)
!7125 = !DILocation(line: 1511, column: 6, scope: !7119)
!7126 = !DILocation(line: 1516, column: 7, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1515, column: 5)
!7128 = !DILocation(line: 1517, column: 19, scope: !7127)
!7129 = !DILocation(line: 0, scope: !7013)
!7130 = !DILocation(line: 0, scope: !7003)
!7131 = !DILocation(line: 0, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 1548, column: 8)
!7133 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1547, column: 10)
!7134 = !DILocation(line: 0, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1613, column: 8)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1611, column: 2)
!7137 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1610, column: 11)
!7138 = !DILocation(line: 1522, column: 8, scope: !7007)
!7139 = !DILocation(line: 1507, column: 19, scope: !7119)
!7140 = !DILocation(line: 1522, column: 30, scope: !7006)
!7141 = !DILocation(line: 1522, column: 17, scope: !7006)
!7142 = !DILocation(line: 1522, column: 3, scope: !7007)
!7143 = !DILocation(line: 1524, column: 11, scope: !7005)
!7144 = !DILocation(line: 1525, column: 15, scope: !7005)
!7145 = !DILocation(line: 1525, column: 7, scope: !7005)
!7146 = !DILocation(line: 1529, column: 6, scope: !7003)
!7147 = !DILocation(line: 1529, column: 17, scope: !7003)
!7148 = !DILocation(line: 1529, column: 10, scope: !7003)
!7149 = !DILocation(line: 1530, column: 6, scope: !7003)
!7150 = !DILocation(line: 1530, column: 11, scope: !7003)
!7151 = !DILocation(line: 1532, column: 6, scope: !7003)
!7152 = !DILocation(line: 1533, column: 11, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1533, column: 10)
!7154 = !DILocation(line: 1533, column: 10, scope: !7003)
!7155 = !DILocation(line: 1536, column: 6, scope: !7003)
!7156 = !DILocation(line: 1537, column: 36, scope: !7003)
!7157 = !DILocation(line: 1537, column: 10, scope: !7003)
!7158 = !DILocation(line: 1547, column: 11, scope: !7133)
!7159 = !DILocation(line: 1547, column: 10, scope: !7003)
!7160 = !DILocation(line: 1549, column: 21, scope: !7132)
!7161 = !DILocation(line: 1549, column: 38, scope: !7132)
!7162 = !DILocation(line: 1549, column: 10, scope: !7132)
!7163 = !DILocation(line: 1549, column: 8, scope: !7132)
!7164 = !DILocation(line: 1550, column: 7, scope: !7132)
!7165 = !DILocation(line: 1551, column: 8, scope: !7132)
!7166 = !DILocation(line: 1552, column: 12, scope: !7003)
!7167 = !DILocation(line: 1553, column: 6, scope: !7003)
!7168 = !DILocation(line: 1554, column: 10, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1554, column: 10)
!7170 = !DILocation(line: 1554, column: 10, scope: !7003)
!7171 = !DILocation(line: 1555, column: 8, scope: !7169)
!7172 = !DILocation(line: 0, scope: !7005)
!7173 = !DILocation(line: 1556, column: 4, scope: !7004)
!7174 = !DILocation(line: 1560, column: 14, scope: !7004)
!7175 = !DILocation(line: 1561, column: 16, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1561, column: 8)
!7177 = !DILocation(line: 1561, column: 8, scope: !7004)
!7178 = !DILocation(line: 1563, column: 8, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1563, column: 8)
!7180 = !DILocation(line: 1563, column: 15, scope: !7179)
!7181 = !DILocation(line: 1563, column: 8, scope: !7004)
!7182 = !DILocation(line: 1567, column: 8, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1566, column: 6)
!7184 = !DILocation(line: 1575, column: 33, scope: !7183)
!7185 = !DILocation(line: 1576, column: 12, scope: !7183)
!7186 = !DILocation(line: 1575, column: 12, scope: !7183)
!7187 = !DILocation(line: 1578, column: 14, scope: !7183)
!7188 = !DILocation(line: 1579, column: 8, scope: !7183)
!7189 = !DILocation(line: 1580, column: 8, scope: !7183)
!7190 = !DILocation(line: 1585, column: 35, scope: !7004)
!7191 = !DILocation(line: 1585, column: 14, scope: !7004)
!7192 = !DILocation(line: 1586, column: 16, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1586, column: 8)
!7194 = !DILocation(line: 1586, column: 8, scope: !7004)
!7195 = !DILocation(line: 1588, column: 8, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1588, column: 8)
!7197 = !DILocation(line: 1588, column: 15, scope: !7196)
!7198 = !DILocation(line: 1588, column: 8, scope: !7004)
!7199 = !DILocation(line: 1590, column: 8, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 1589, column: 6)
!7201 = !DILocation(line: 1591, column: 39, scope: !7200)
!7202 = !DILocation(line: 1592, column: 7, scope: !7200)
!7203 = !DILocation(line: 1591, column: 18, scope: !7200)
!7204 = !DILocation(line: 1594, column: 14, scope: !7200)
!7205 = !DILocation(line: 1595, column: 8, scope: !7200)
!7206 = !DILocation(line: 1596, column: 8, scope: !7200)
!7207 = !DILocation(line: 1597, column: 6, scope: !7200)
!7208 = !DILocation(line: 0, scope: !7004)
!7209 = !DILocation(line: 1598, column: 29, scope: !7004)
!7210 = !DILocation(line: 1599, column: 8, scope: !7004)
!7211 = !DILocation(line: 1599, column: 28, scope: !7004)
!7212 = !DILocation(line: 1598, column: 8, scope: !7004)
!7213 = !DILocation(line: 1600, column: 4, scope: !7004)
!7214 = !DILocation(line: 1610, column: 12, scope: !7137)
!7215 = !DILocation(line: 1610, column: 11, scope: !7005)
!7216 = !DILocation(line: 1612, column: 4, scope: !7136)
!7217 = !DILocation(line: 1613, column: 8, scope: !7135)
!7218 = !DILocation(line: 1613, column: 8, scope: !7136)
!7219 = !DILocation(line: 1615, column: 8, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 1614, column: 6)
!7221 = !DILocation(line: 1616, column: 12, scope: !7220)
!7222 = !DILocation(line: 1617, column: 6, scope: !7220)
!7223 = !DILocation(line: 1619, column: 42, scope: !7135)
!7224 = !DILocation(line: 1619, column: 53, scope: !7135)
!7225 = !DILocation(line: 1619, column: 10, scope: !7135)
!7226 = !DILocation(line: 1620, column: 10, scope: !7136)
!7227 = !DILocation(line: 1621, column: 4, scope: !7136)
!7228 = !DILocation(line: 1622, column: 8, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1622, column: 8)
!7230 = !DILocation(line: 1622, column: 8, scope: !7136)
!7231 = !DILocation(line: 1623, column: 6, scope: !7229)
!7232 = !DILocation(line: 1626, column: 58, scope: !7005)
!7233 = !DILocation(line: 1626, column: 8, scope: !7005)
!7234 = !DILocation(line: 1626, column: 34, scope: !7005)
!7235 = !DILocation(line: 1628, column: 5, scope: !7005)
!7236 = !DILocation(line: 1522, column: 42, scope: !7006)
!7237 = !DILocation(line: 1522, column: 3, scope: !7006)
!7238 = distinct !{!7238, !7142, !7239}
!7239 = !DILocation(line: 1628, column: 5, scope: !7007)
!7240 = !DILocation(line: 1630, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1630, column: 7)
!7242 = !DILocation(line: 1630, column: 7, scope: !6991)
!7243 = !DILocation(line: 1633, column: 7, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 1633, column: 7)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1631, column: 5)
!7246 = !DILocation(line: 0, scope: !7244)
!7247 = !DILocation(line: 1633, column: 34, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 1633, column: 7)
!7249 = !DILocation(line: 1633, column: 21, scope: !7248)
!7250 = !DILocation(line: 1635, column: 45, scope: !7248)
!7251 = !DILocation(line: 1635, column: 35, scope: !7248)
!7252 = !DILocation(line: 1635, column: 16, scope: !7248)
!7253 = !DILocation(line: 1635, column: 6, scope: !7248)
!7254 = !DILocation(line: 1634, column: 3, scope: !7248)
!7255 = !DILocation(line: 1635, column: 4, scope: !7248)
!7256 = !DILocation(line: 1633, column: 42, scope: !7248)
!7257 = !DILocation(line: 1633, column: 7, scope: !7248)
!7258 = distinct !{!7258, !7243, !7259}
!7259 = !DILocation(line: 1635, column: 67, scope: !7244)
!7260 = !DILocation(line: 1638, column: 7, scope: !7245)
!7261 = !DILocation(line: 1638, column: 24, scope: !7245)
!7262 = !DILocation(line: 1639, column: 5, scope: !7245)
!7263 = !DILocation(line: 1641, column: 22, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1641, column: 7)
!7265 = !DILocation(line: 1641, column: 7, scope: !7264)
!7266 = !DILocation(line: 1641, column: 38, scope: !7264)
!7267 = !DILocation(line: 1641, column: 7, scope: !6991)
!7268 = !DILocation(line: 1643, column: 32, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 1643, column: 11)
!7270 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 1642, column: 5)
!7271 = !DILocation(line: 1643, column: 12, scope: !7269)
!7272 = !DILocation(line: 1643, column: 11, scope: !7270)
!7273 = !DILocation(line: 1645, column: 4, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1644, column: 2)
!7275 = !DILocation(line: 1646, column: 4, scope: !7274)
!7276 = !DILocation(line: 1647, column: 2, scope: !7274)
!7277 = !DILocation(line: 1651, column: 11, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1651, column: 11)
!7279 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 1650, column: 5)
!7280 = !DILocation(line: 1651, column: 33, scope: !7278)
!7281 = !DILocation(line: 1651, column: 11, scope: !7279)
!7282 = !DILocation(line: 1652, column: 2, scope: !7278)
!7283 = !DILocation(line: 1654, column: 1, scope: !6991)
!7284 = distinct !DISubprogram(name: "instantiate_decls", scope: !3, file: !3, line: 1734, type: !4986, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7285)
!7285 = !{!7286, !7287, !7288, !7289, !7290}
!7286 = !DILocalVariable(name: "fndecl", arg: 1, scope: !7284, file: !3, line: 1734, type: !880)
!7287 = !DILocalVariable(name: "decl", scope: !7284, file: !3, line: 1736, type: !880)
!7288 = !DILocalVariable(name: "t", scope: !7284, file: !3, line: 1736, type: !880)
!7289 = !DILocalVariable(name: "next", scope: !7284, file: !3, line: 1736, type: !880)
!7290 = !DILocalVariable(name: "v", scope: !7291, file: !3, line: 1745, type: !880)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 1744, column: 2)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 1743, column: 11)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1740, column: 5)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 1739, column: 3)
!7295 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 1739, column: 3)
!7296 = !DILocation(line: 0, scope: !7284)
!7297 = !DILocation(line: 1739, column: 15, scope: !7295)
!7298 = !DILocation(line: 0, scope: !7291)
!7299 = !DILocation(line: 1739, column: 8, scope: !7295)
!7300 = !DILocation(line: 0, scope: !7295)
!7301 = !DILocation(line: 1739, column: 3, scope: !7295)
!7302 = !DILocation(line: 1741, column: 29, scope: !7293)
!7303 = !DILocation(line: 1741, column: 7, scope: !7293)
!7304 = !DILocation(line: 1742, column: 29, scope: !7293)
!7305 = !DILocation(line: 1742, column: 7, scope: !7293)
!7306 = !DILocation(line: 1743, column: 11, scope: !7292)
!7307 = !DILocation(line: 1743, column: 11, scope: !7293)
!7308 = !DILocation(line: 1745, column: 4, scope: !7291)
!7309 = !DILocation(line: 1745, column: 13, scope: !7291)
!7310 = !DILocation(line: 1745, column: 9, scope: !7291)
!7311 = !DILocation(line: 1746, column: 4, scope: !7291)
!7312 = !DILocation(line: 1747, column: 2, scope: !7292)
!7313 = !DILocation(line: 1747, column: 2, scope: !7291)
!7314 = !DILocation(line: 1739, column: 53, scope: !7294)
!7315 = !DILocation(line: 1739, column: 3, scope: !7294)
!7316 = distinct !{!7316, !7301, !7317}
!7317 = !DILocation(line: 1748, column: 5, scope: !7295)
!7318 = !DILocation(line: 1751, column: 24, scope: !7284)
!7319 = !DILocation(line: 1751, column: 3, scope: !7284)
!7320 = !DILocation(line: 1753, column: 7, scope: !7284)
!7321 = !DILocation(line: 1753, column: 13, scope: !7284)
!7322 = !DILocation(line: 1754, column: 21, scope: !7284)
!7323 = !DILocation(line: 1755, column: 3, scope: !7284)
!7324 = !DILocation(line: 1755, column: 3, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 1755, column: 3)
!7326 = !DILocation(line: 1757, column: 14, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 1756, column: 5)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 1755, column: 3)
!7329 = !DILocation(line: 1758, column: 14, scope: !7327)
!7330 = !DILocation(line: 1759, column: 11, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1759, column: 11)
!7332 = !DILocation(line: 1759, column: 11, scope: !7327)
!7333 = !DILocation(line: 1760, column: 24, scope: !7331)
!7334 = !DILocation(line: 1760, column: 2, scope: !7331)
!7335 = !DILocation(line: 1761, column: 17, scope: !7327)
!7336 = !DILocation(line: 1761, column: 7, scope: !7327)
!7337 = !DILocation(line: 1755, column: 3, scope: !7328)
!7338 = distinct !{!7338, !7324, !7339}
!7339 = !DILocation(line: 1762, column: 5, scope: !7325)
!7340 = !DILocation(line: 1763, column: 1, scope: !7284)
!7341 = distinct !DISubprogram(name: "safe_insn_predicate", scope: !3, file: !3, line: 1390, type: !7342, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7344)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!750, !750, !750, !765}
!7344 = !{!7345, !7346, !7347, !7348}
!7345 = !DILocalVariable(name: "code", arg: 1, scope: !7341, file: !3, line: 1390, type: !750)
!7346 = !DILocalVariable(name: "operand", arg: 2, scope: !7341, file: !3, line: 1390, type: !750)
!7347 = !DILocalVariable(name: "x", arg: 3, scope: !7341, file: !3, line: 1390, type: !765)
!7348 = !DILocalVariable(name: "op_data", scope: !7341, file: !3, line: 1392, type: !7349)
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 64)
!7350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7351)
!7351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "insn_operand_data", file: !7352, line: 253, size: 192, elements: !7353)
!7352 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7353 = !{!7354, !7360, !7362, !7364, !7365}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !7351, file: !7352, line: 255, baseType: !7355, size: 64)
!7355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7356)
!7356 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_operand_predicate_fn", file: !7352, line: 249, baseType: !7357)
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7358, size: 64)
!7358 = !DISubroutineType(types: !7359)
!7359 = !{!750, !765, !13}
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "constraint", scope: !7351, file: !7352, line: 257, baseType: !7361, size: 64, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7351, file: !7352, line: 259, baseType: !7363, size: 16, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!7363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "strict_low", scope: !7351, file: !7352, line: 261, baseType: !756, size: 8, offset: 144)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "eliminable", scope: !7351, file: !7352, line: 263, baseType: !756, size: 8, offset: 152)
!7366 = !DILocation(line: 0, scope: !7341)
!7367 = !DILocation(line: 1394, column: 12, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1394, column: 7)
!7369 = !DILocation(line: 1394, column: 7, scope: !7341)
!7370 = !DILocation(line: 1397, column: 14, scope: !7341)
!7371 = !DILocation(line: 1397, column: 30, scope: !7341)
!7372 = !DILocation(line: 1398, column: 16, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1398, column: 7)
!7374 = !DILocation(line: 1398, column: 26, scope: !7373)
!7375 = !DILocation(line: 1398, column: 7, scope: !7341)
!7376 = !DILocation(line: 1401, column: 42, scope: !7341)
!7377 = !DILocation(line: 1401, column: 10, scope: !7341)
!7378 = !DILocation(line: 1401, column: 3, scope: !7341)
!7379 = !DILocation(line: 1402, column: 1, scope: !7341)
!7380 = distinct !DISubprogram(name: "recog_memoized", scope: !7352, file: !7352, line: 150, type: !7381, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!750, !765}
!7383 = !{!7384}
!7384 = !DILocalVariable(name: "insn", arg: 1, scope: !7380, file: !7352, line: 150, type: !765)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 152, column: 7, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7380, file: !7352, line: 152, column: 7)
!7388 = !DILocation(line: 152, column: 24, scope: !7387)
!7389 = !DILocation(line: 152, column: 7, scope: !7380)
!7390 = !DILocation(line: 153, column: 31, scope: !7387)
!7391 = !DILocation(line: 153, column: 24, scope: !7387)
!7392 = !DILocation(line: 153, column: 22, scope: !7387)
!7393 = !DILocation(line: 153, column: 5, scope: !7387)
!7394 = !DILocation(line: 154, column: 10, scope: !7380)
!7395 = !DILocation(line: 154, column: 3, scope: !7380)
!7396 = distinct !DISubprogram(name: "instantiate_expr", scope: !3, file: !3, line: 1694, type: !4647, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7397)
!7397 = !{!7398, !7399, !7400, !7401}
!7398 = !DILocalVariable(name: "tp", arg: 1, scope: !7396, file: !3, line: 1694, type: !1371)
!7399 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !7396, file: !3, line: 1694, type: !4649)
!7400 = !DILocalVariable(name: "data", arg: 3, scope: !7396, file: !3, line: 1694, type: !754)
!7401 = !DILocalVariable(name: "t", scope: !7396, file: !3, line: 1696, type: !880)
!7402 = !DILocation(line: 0, scope: !7396)
!7403 = !DILocation(line: 1696, column: 12, scope: !7396)
!7404 = !DILocation(line: 1697, column: 9, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 1697, column: 7)
!7406 = !DILocation(line: 1697, column: 7, scope: !7396)
!7407 = !DILocation(line: 1699, column: 22, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 1698, column: 5)
!7409 = !DILocation(line: 1700, column: 11, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 1700, column: 11)
!7411 = !DILocation(line: 1700, column: 22, scope: !7410)
!7412 = !DILocation(line: 1700, column: 25, scope: !7410)
!7413 = !DILocation(line: 1700, column: 11, scope: !7408)
!7414 = !DILocation(line: 1701, column: 24, scope: !7410)
!7415 = !DILocation(line: 1701, column: 2, scope: !7410)
!7416 = !DILocation(line: 1703, column: 3, scope: !7396)
!7417 = distinct !DISubprogram(name: "instantiate_decls_1", scope: !3, file: !3, line: 1710, type: !4986, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7418)
!7418 = !{!7419, !7420, !7421}
!7419 = !DILocalVariable(name: "let", arg: 1, scope: !7417, file: !3, line: 1710, type: !880)
!7420 = !DILocalVariable(name: "t", scope: !7417, file: !3, line: 1712, type: !880)
!7421 = !DILocalVariable(name: "v", scope: !7422, file: !3, line: 1720, type: !880)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 1719, column: 2)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 1718, column: 11)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1715, column: 5)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1714, column: 3)
!7426 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1714, column: 3)
!7427 = !DILocation(line: 0, scope: !7417)
!7428 = !DILocation(line: 1714, column: 12, scope: !7426)
!7429 = !DILocation(line: 0, scope: !7422)
!7430 = !DILocation(line: 1714, column: 8, scope: !7426)
!7431 = !DILocation(line: 0, scope: !7426)
!7432 = !DILocation(line: 1714, column: 3, scope: !7426)
!7433 = !DILocation(line: 1716, column: 11, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 1716, column: 11)
!7435 = !DILocation(line: 1716, column: 11, scope: !7424)
!7436 = !DILocation(line: 1717, column: 24, scope: !7434)
!7437 = !DILocation(line: 1717, column: 2, scope: !7434)
!7438 = !DILocation(line: 1718, column: 11, scope: !7423)
!7439 = !DILocation(line: 1718, column: 25, scope: !7423)
!7440 = !DILocation(line: 1718, column: 37, scope: !7423)
!7441 = !DILocation(line: 1718, column: 40, scope: !7423)
!7442 = !DILocation(line: 1718, column: 11, scope: !7424)
!7443 = !DILocation(line: 1720, column: 4, scope: !7422)
!7444 = !DILocation(line: 1720, column: 13, scope: !7422)
!7445 = !DILocation(line: 1720, column: 9, scope: !7422)
!7446 = !DILocation(line: 1721, column: 4, scope: !7422)
!7447 = !DILocation(line: 1722, column: 2, scope: !7423)
!7448 = !DILocation(line: 1722, column: 2, scope: !7422)
!7449 = !DILocation(line: 1714, column: 37, scope: !7425)
!7450 = !DILocation(line: 1714, column: 3, scope: !7425)
!7451 = distinct !{!7451, !7432, !7452}
!7452 = !DILocation(line: 1723, column: 5, scope: !7426)
!7453 = !DILocation(line: 1726, column: 12, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1726, column: 3)
!7455 = !DILocation(line: 1726, column: 8, scope: !7454)
!7456 = !DILocation(line: 0, scope: !7454)
!7457 = !DILocation(line: 1726, column: 3, scope: !7454)
!7458 = !DILocation(line: 1727, column: 5, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 1726, column: 3)
!7460 = !DILocation(line: 1726, column: 42, scope: !7459)
!7461 = !DILocation(line: 1726, column: 3, scope: !7459)
!7462 = distinct !{!7462, !7457, !7463}
!7463 = !DILocation(line: 1727, column: 27, scope: !7454)
!7464 = !DILocation(line: 1728, column: 1, scope: !7417)
!7465 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !142, file: !142, line: 184, type: !7466, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!1371, !4683, !880}
!7468 = !{!7469, !7470}
!7469 = !DILocalVariable(name: "vec_", arg: 1, scope: !7465, file: !142, line: 184, type: !4683)
!7470 = !DILocalVariable(name: "obj_", arg: 2, scope: !7465, file: !142, line: 184, type: !880)
!7471 = !DILocation(line: 0, scope: !7465)
!7472 = !DILocation(line: 184, column: 1, scope: !7465)
!7473 = distinct !DISubprogram(name: "VEC_tree_heap_safe_insert", scope: !142, file: !142, line: 184, type: !7474, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7476)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{!1371, !4683, !7, !880}
!7476 = !{!7477, !7478, !7479}
!7477 = !DILocalVariable(name: "vec_", arg: 1, scope: !7473, file: !142, line: 184, type: !4683)
!7478 = !DILocalVariable(name: "ix_", arg: 2, scope: !7473, file: !142, line: 184, type: !7)
!7479 = !DILocalVariable(name: "obj_", arg: 3, scope: !7473, file: !142, line: 184, type: !880)
!7480 = !DILocation(line: 0, scope: !7473)
!7481 = !DILocation(line: 184, column: 1, scope: !7473)
!7482 = distinct !DISubprogram(name: "split_complex_args", scope: !3, file: !3, line: 2099, type: !4681, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7483)
!7483 = !{!7484, !7485, !7486, !7487, !7491, !7494, !7495}
!7484 = !DILocalVariable(name: "args", arg: 1, scope: !7482, file: !3, line: 2099, type: !4683)
!7485 = !DILocalVariable(name: "i", scope: !7482, file: !3, line: 2101, type: !7)
!7486 = !DILocalVariable(name: "p", scope: !7482, file: !3, line: 2102, type: !880)
!7487 = !DILocalVariable(name: "type", scope: !7488, file: !3, line: 2106, type: !880)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 2105, column: 5)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 2104, column: 3)
!7490 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2104, column: 3)
!7491 = !DILocalVariable(name: "decl", scope: !7492, file: !3, line: 2110, type: !880)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 2109, column: 2)
!7493 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 2107, column: 11)
!7494 = !DILocalVariable(name: "subtype", scope: !7492, file: !3, line: 2111, type: !880)
!7495 = !DILocalVariable(name: "addressable", scope: !7492, file: !3, line: 2112, type: !749)
!7496 = !DILocation(line: 0, scope: !7482)
!7497 = !DILocation(line: 2102, column: 3, scope: !7482)
!7498 = !DILocation(line: 0, scope: !7488)
!7499 = !DILocation(line: 0, scope: !7492)
!7500 = !DILocation(line: 2104, column: 8, scope: !7490)
!7501 = !DILocation(line: 0, scope: !7490)
!7502 = !DILocation(line: 2104, column: 15, scope: !7489)
!7503 = !DILocation(line: 2104, column: 3, scope: !7490)
!7504 = !DILocation(line: 2106, column: 19, scope: !7488)
!7505 = !DILocation(line: 2107, column: 11, scope: !7493)
!7506 = !DILocation(line: 2107, column: 28, scope: !7493)
!7507 = !DILocation(line: 2108, column: 4, scope: !7493)
!7508 = !DILocation(line: 2108, column: 21, scope: !7493)
!7509 = !DILocation(line: 2108, column: 7, scope: !7493)
!7510 = !DILocation(line: 2107, column: 11, scope: !7488)
!7511 = !DILocation(line: 2111, column: 19, scope: !7492)
!7512 = !DILocation(line: 2112, column: 23, scope: !7492)
!7513 = !DILocation(line: 2115, column: 8, scope: !7492)
!7514 = !DILocation(line: 2115, column: 6, scope: !7492)
!7515 = !DILocation(line: 2116, column: 4, scope: !7492)
!7516 = !DILocation(line: 2116, column: 18, scope: !7492)
!7517 = !DILocation(line: 2117, column: 24, scope: !7492)
!7518 = !DILocation(line: 2117, column: 4, scope: !7492)
!7519 = !DILocation(line: 2117, column: 22, scope: !7492)
!7520 = !DILocation(line: 2118, column: 4, scope: !7492)
!7521 = !DILocation(line: 2118, column: 18, scope: !7492)
!7522 = !DILocation(line: 2119, column: 4, scope: !7492)
!7523 = !DILocation(line: 2119, column: 18, scope: !7492)
!7524 = !DILocation(line: 2120, column: 4, scope: !7492)
!7525 = !DILocation(line: 2120, column: 23, scope: !7492)
!7526 = !DILocation(line: 2125, column: 24, scope: !7492)
!7527 = !DILocation(line: 2126, column: 23, scope: !7492)
!7528 = !DILocation(line: 2127, column: 4, scope: !7492)
!7529 = !DILocation(line: 2127, column: 25, scope: !7492)
!7530 = !DILocation(line: 2128, column: 17, scope: !7492)
!7531 = !DILocation(line: 2128, column: 4, scope: !7492)
!7532 = !DILocation(line: 2129, column: 4, scope: !7492)
!7533 = !DILocation(line: 2132, column: 11, scope: !7492)
!7534 = !DILocation(line: 2134, column: 27, scope: !7492)
!7535 = !DILocation(line: 2134, column: 4, scope: !7492)
!7536 = !DILocation(line: 2134, column: 25, scope: !7492)
!7537 = !DILocation(line: 2135, column: 4, scope: !7492)
!7538 = !DILocation(line: 2135, column: 27, scope: !7492)
!7539 = !DILocation(line: 2136, column: 26, scope: !7492)
!7540 = !DILocation(line: 2137, column: 4, scope: !7492)
!7541 = !DILocation(line: 2138, column: 4, scope: !7492)
!7542 = !DILocation(line: 2139, column: 2, scope: !7492)
!7543 = !DILocation(line: 2104, column: 48, scope: !7489)
!7544 = !DILocation(line: 2104, column: 3, scope: !7489)
!7545 = distinct !{!7545, !7503, !7546}
!7546 = !DILocation(line: 2140, column: 5, scope: !7490)
!7547 = !DILocation(line: 2141, column: 1, scope: !7482)
!7548 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !142, file: !142, line: 184, type: !7549, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!750, !4683, !750}
!7551 = !{!7552, !7553, !7554}
!7552 = !DILocalVariable(name: "vec_", arg: 1, scope: !7548, file: !142, line: 184, type: !4683)
!7553 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7548, file: !142, line: 184, type: !750)
!7554 = !DILocalVariable(name: "extend", scope: !7548, file: !142, line: 184, type: !750)
!7555 = !DILocation(line: 0, scope: !7548)
!7556 = !DILocation(line: 184, column: 1, scope: !7548)
!7557 = !DILocation(line: 184, column: 1, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7548, file: !142, line: 184, column: 1)
!7559 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !142, file: !142, line: 182, type: !7560, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7563)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{!1371, !7562, !880}
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!7563 = !{!7564, !7565, !7566}
!7564 = !DILocalVariable(name: "vec_", arg: 1, scope: !7559, file: !142, line: 182, type: !7562)
!7565 = !DILocalVariable(name: "obj_", arg: 2, scope: !7559, file: !142, line: 182, type: !880)
!7566 = !DILocalVariable(name: "slot_", scope: !7559, file: !142, line: 182, type: !1371)
!7567 = !DILocation(line: 0, scope: !7559)
!7568 = !DILocation(line: 182, column: 1, scope: !7559)
!7569 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !142, file: !142, line: 182, type: !7570, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7572)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!750, !7562, !750}
!7572 = !{!7573, !7574}
!7573 = !DILocalVariable(name: "vec_", arg: 1, scope: !7569, file: !142, line: 182, type: !7562)
!7574 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7569, file: !142, line: 182, type: !750)
!7575 = !DILocation(line: 0, scope: !7569)
!7576 = !DILocation(line: 182, column: 1, scope: !7569)
!7577 = distinct !DISubprogram(name: "VEC_tree_base_quick_insert", scope: !142, file: !142, line: 182, type: !7578, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!1371, !7562, !7, !880}
!7580 = !{!7581, !7582, !7583, !7584}
!7581 = !DILocalVariable(name: "vec_", arg: 1, scope: !7577, file: !142, line: 182, type: !7562)
!7582 = !DILocalVariable(name: "ix_", arg: 2, scope: !7577, file: !142, line: 182, type: !7)
!7583 = !DILocalVariable(name: "obj_", arg: 3, scope: !7577, file: !142, line: 182, type: !880)
!7584 = !DILocalVariable(name: "slot_", scope: !7577, file: !142, line: 182, type: !1371)
!7585 = !DILocation(line: 0, scope: !7577)
!7586 = !DILocation(line: 182, column: 1, scope: !7577)
!7587 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !142, file: !142, line: 182, type: !7588, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!880, !7562, !7, !880}
!7590 = !{!7591, !7592, !7593, !7594}
!7591 = !DILocalVariable(name: "vec_", arg: 1, scope: !7587, file: !142, line: 182, type: !7562)
!7592 = !DILocalVariable(name: "ix_", arg: 2, scope: !7587, file: !142, line: 182, type: !7)
!7593 = !DILocalVariable(name: "obj_", arg: 3, scope: !7587, file: !142, line: 182, type: !880)
!7594 = !DILocalVariable(name: "old_obj_", scope: !7587, file: !142, line: 182, type: !880)
!7595 = !DILocation(line: 0, scope: !7587)
!7596 = !DILocation(line: 182, column: 1, scope: !7587)
!7597 = distinct !DISubprogram(name: "regno_clobbered_at_setjmp", scope: !3, file: !3, line: 3741, type: !7598, scopeLine: 3742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7600)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!749, !4869, !750}
!7600 = !{!7601, !7602}
!7601 = !DILocalVariable(name: "setjmp_crosses", arg: 1, scope: !7597, file: !3, line: 3741, type: !4869)
!7602 = !DILocalVariable(name: "regno", arg: 2, scope: !7597, file: !3, line: 3741, type: !750)
!7603 = !DILocation(line: 0, scope: !7597)
!7604 = !DILocation(line: 3745, column: 16, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3745, column: 7)
!7606 = !DILocation(line: 3745, column: 13, scope: !7605)
!7607 = !DILocation(line: 3745, column: 7, scope: !7597)
!7608 = !DILocation(line: 3748, column: 12, scope: !7597)
!7609 = !DILocation(line: 3748, column: 31, scope: !7597)
!7610 = !DILocation(line: 3749, column: 5, scope: !7597)
!7611 = !DILocation(line: 3749, column: 8, scope: !7597)
!7612 = !DILocation(line: 3750, column: 4, scope: !7597)
!7613 = !DILocation(line: 3750, column: 7, scope: !7597)
!7614 = !DILocation(line: 3748, column: 3, scope: !7597)
!7615 = !DILocation(line: 3751, column: 1, scope: !7597)
!7616 = distinct !DISubprogram(name: "REG_N_SETS", scope: !7617, file: !7617, line: 90, type: !2397, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7618)
!7617 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "regno", arg: 1, scope: !7616, file: !7617, line: 90, type: !750)
!7620 = !DILocation(line: 0, scope: !7616)
!7621 = !DILocation(line: 92, column: 10, scope: !7616)
!7622 = !DILocation(line: 92, column: 41, scope: !7616)
!7623 = !DILocation(line: 92, column: 3, scope: !7616)
!7624 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !142, file: !142, line: 182, type: !7625, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7627)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!880, !7562}
!7627 = !{!7628, !7629}
!7628 = !DILocalVariable(name: "vec_", arg: 1, scope: !7624, file: !142, line: 182, type: !7562)
!7629 = !DILocalVariable(name: "obj_", scope: !7624, file: !142, line: 182, type: !880)
!7630 = !DILocation(line: 0, scope: !7624)
!7631 = !DILocation(line: 182, column: 1, scope: !7624)
!7632 = distinct !DISubprogram(name: "all_blocks", scope: !3, file: !3, line: 3938, type: !7633, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!750, !880, !1371}
!7635 = !{!7636, !7637, !7638}
!7636 = !DILocalVariable(name: "block", arg: 1, scope: !7632, file: !3, line: 3938, type: !880)
!7637 = !DILocalVariable(name: "vector", arg: 2, scope: !7632, file: !3, line: 3938, type: !1371)
!7638 = !DILocalVariable(name: "n_blocks", scope: !7632, file: !3, line: 3940, type: !750)
!7639 = !DILocation(line: 0, scope: !7632)
!7640 = !DILocation(line: 0, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 3947, column: 11)
!7642 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 3943, column: 5)
!7643 = !DILocation(line: 3942, column: 3, scope: !7632)
!7644 = !DILocation(line: 3944, column: 7, scope: !7642)
!7645 = !DILocation(line: 3944, column: 32, scope: !7642)
!7646 = !DILocation(line: 3950, column: 7, scope: !7642)
!7647 = !DILocation(line: 3953, column: 31, scope: !7642)
!7648 = !DILocation(line: 3953, column: 19, scope: !7642)
!7649 = !DILocation(line: 3953, column: 16, scope: !7642)
!7650 = !DILocation(line: 3955, column: 15, scope: !7642)
!7651 = distinct !{!7651, !7643, !7652}
!7652 = !DILocation(line: 3956, column: 5, scope: !7632)
!7653 = !DILocation(line: 3958, column: 3, scope: !7632)
!7654 = !DILocation(line: 3948, column: 2, scope: !7641)
!7655 = !DILocation(line: 3948, column: 19, scope: !7641)
!7656 = !DILocation(line: 3954, column: 10, scope: !7642)
!7657 = distinct !DISubprogram(name: "assign_parms_setup_varargs", scope: !3, file: !3, line: 2267, type: !7658, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !4453, !4555, !749}
!7660 = !{!7661, !7662, !7663, !7664}
!7661 = !DILocalVariable(name: "all", arg: 1, scope: !7657, file: !3, line: 2267, type: !4453)
!7662 = !DILocalVariable(name: "data", arg: 2, scope: !7657, file: !3, line: 2268, type: !4555)
!7663 = !DILocalVariable(name: "no_rtl", arg: 3, scope: !7657, file: !3, line: 2268, type: !749)
!7664 = !DILocalVariable(name: "varargs_pretend_bytes", scope: !7657, file: !3, line: 2270, type: !750)
!7665 = !DILocation(line: 0, scope: !7657)
!7666 = !DILocation(line: 2270, column: 3, scope: !7657)
!7667 = !DILocation(line: 2270, column: 7, scope: !7657)
!7668 = !DILocation(line: 2272, column: 17, scope: !7657)
!7669 = !DILocation(line: 2272, column: 47, scope: !7657)
!7670 = !DILocation(line: 2273, column: 12, scope: !7657)
!7671 = !DILocation(line: 2274, column: 12, scope: !7657)
!7672 = !DILocation(line: 2272, column: 3, scope: !7657)
!7673 = !DILocation(line: 2280, column: 7, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 2280, column: 7)
!7675 = !DILocation(line: 2280, column: 29, scope: !7674)
!7676 = !DILocation(line: 2280, column: 7, scope: !7657)
!7677 = !DILocation(line: 2281, column: 30, scope: !7674)
!7678 = !DILocation(line: 2281, column: 10, scope: !7674)
!7679 = !DILocation(line: 2281, column: 28, scope: !7674)
!7680 = !DILocation(line: 2281, column: 5, scope: !7674)
!7681 = !DILocation(line: 2282, column: 1, scope: !7657)
!7682 = distinct !DISubprogram(name: "assign_parm_find_entry_rtl", scope: !3, file: !3, line: 2288, type: !7683, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7685)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{null, !4453, !4555}
!7685 = !{!7686, !7687, !7688, !7689, !7690, !7691, !7696}
!7686 = !DILocalVariable(name: "all", arg: 1, scope: !7682, file: !3, line: 2288, type: !4453)
!7687 = !DILocalVariable(name: "data", arg: 2, scope: !7682, file: !3, line: 2289, type: !4555)
!7688 = !DILocalVariable(name: "pretend_bytes", scope: !7682, file: !3, line: 2291, type: !851)
!7689 = !DILocalVariable(name: "entry_parm", scope: !7682, file: !3, line: 2292, type: !765)
!7690 = !DILocalVariable(name: "in_regs", scope: !7682, file: !3, line: 2293, type: !749)
!7691 = !DILocalVariable(name: "tem", scope: !7692, file: !3, line: 2330, type: !765)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 2329, column: 2)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2328, column: 11)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 2327, column: 5)
!7695 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2326, column: 7)
!7696 = !DILocalVariable(name: "partial", scope: !7697, file: !3, line: 2350, type: !750)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2349, column: 5)
!7698 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2348, column: 7)
!7699 = !DILocation(line: 0, scope: !7682)
!7700 = !DILocation(line: 2295, column: 13, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2295, column: 7)
!7702 = !DILocation(line: 2295, column: 27, scope: !7701)
!7703 = !DILocation(line: 2295, column: 7, scope: !7682)
!7704 = !DILocation(line: 2297, column: 45, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 2296, column: 5)
!7706 = !DILocation(line: 2297, column: 32, scope: !7705)
!7707 = !DILocation(line: 2297, column: 43, scope: !7705)
!7708 = !DILocation(line: 2297, column: 13, scope: !7705)
!7709 = !DILocation(line: 2297, column: 24, scope: !7705)
!7710 = !DILocation(line: 2298, column: 7, scope: !7705)
!7711 = !DILocation(line: 2305, column: 16, scope: !7682)
!7712 = !DILocation(line: 2309, column: 18, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2309, column: 7)
!7714 = !DILocation(line: 2309, column: 7, scope: !7682)
!7715 = !DILocation(line: 2310, column: 33, scope: !7713)
!7716 = !DILocation(line: 2310, column: 25, scope: !7713)
!7717 = !DILocation(line: 2310, column: 5, scope: !7713)
!7718 = !DILocation(line: 2322, column: 24, scope: !7682)
!7719 = !DILocation(line: 2322, column: 13, scope: !7682)
!7720 = !DILocation(line: 2326, column: 16, scope: !7695)
!7721 = !DILocation(line: 2326, column: 26, scope: !7695)
!7722 = !DILocation(line: 2326, column: 20, scope: !7695)
!7723 = !DILocation(line: 2326, column: 7, scope: !7682)
!7724 = !DILocation(line: 2328, column: 25, scope: !7693)
!7725 = !DILocation(line: 2328, column: 11, scope: !7693)
!7726 = !DILocation(line: 2328, column: 11, scope: !7694)
!7727 = !DILocation(line: 2335, column: 10, scope: !7692)
!7728 = !DILocation(line: 0, scope: !7692)
!7729 = !DILocation(line: 2338, column: 18, scope: !7692)
!7730 = !DILocation(line: 2338, column: 14, scope: !7692)
!7731 = !DILocation(line: 2339, column: 2, scope: !7692)
!7732 = !DILocation(line: 2344, column: 21, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2344, column: 7)
!7734 = !DILocation(line: 2344, column: 47, scope: !7733)
!7735 = !DILocation(line: 2345, column: 12, scope: !7733)
!7736 = !DILocation(line: 2344, column: 7, scope: !7733)
!7737 = !DILocation(line: 2344, column: 7, scope: !7682)
!7738 = !DILocation(line: 2348, column: 7, scope: !7698)
!7739 = !DILocation(line: 2348, column: 7, scope: !7682)
!7740 = !DILocation(line: 2352, column: 31, scope: !7697)
!7741 = !DILocation(line: 2353, column: 14, scope: !7697)
!7742 = !DILocation(line: 2354, column: 14, scope: !7697)
!7743 = !DILocation(line: 2355, column: 14, scope: !7697)
!7744 = !DILocation(line: 2352, column: 17, scope: !7697)
!7745 = !DILocation(line: 0, scope: !7697)
!7746 = !DILocation(line: 2356, column: 13, scope: !7697)
!7747 = !DILocation(line: 2356, column: 21, scope: !7697)
!7748 = !DILocation(line: 2360, column: 19, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2360, column: 11)
!7750 = !DILocation(line: 2360, column: 24, scope: !7749)
!7751 = !DILocation(line: 2360, column: 32, scope: !7749)
!7752 = !DILocation(line: 2360, column: 53, scope: !7749)
!7753 = !DILocation(line: 2360, column: 11, scope: !7697)
!7754 = !DILocation(line: 2379, column: 4, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2361, column: 2)
!7756 = !DILocation(line: 2381, column: 20, scope: !7755)
!7757 = !DILocation(line: 2382, column: 29, scope: !7755)
!7758 = !DILocation(line: 2382, column: 9, scope: !7755)
!7759 = !DILocation(line: 2382, column: 27, scope: !7755)
!7760 = !DILocation(line: 2386, column: 29, scope: !7755)
!7761 = !DILocation(line: 2387, column: 2, scope: !7755)
!7762 = !DILocation(line: 2390, column: 30, scope: !7682)
!7763 = !DILocation(line: 2390, column: 51, scope: !7682)
!7764 = !DILocation(line: 2390, column: 64, scope: !7682)
!7765 = !DILocation(line: 2391, column: 10, scope: !7682)
!7766 = !DILocation(line: 2391, column: 29, scope: !7682)
!7767 = !DILocation(line: 2391, column: 42, scope: !7682)
!7768 = !DILocation(line: 2392, column: 16, scope: !7682)
!7769 = !DILocation(line: 2392, column: 40, scope: !7682)
!7770 = !DILocation(line: 2390, column: 3, scope: !7682)
!7771 = !DILocation(line: 2396, column: 8, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2396, column: 7)
!7773 = !DILocation(line: 2396, column: 16, scope: !7772)
!7774 = !DILocation(line: 2396, column: 25, scope: !7772)
!7775 = !DILocation(line: 2396, column: 60, scope: !7772)
!7776 = !DILocation(line: 2396, column: 45, scope: !7772)
!7777 = !DILocation(line: 2396, column: 7, scope: !7682)
!7778 = !DILocation(line: 2397, column: 31, scope: !7772)
!7779 = !DILocation(line: 2397, column: 5, scope: !7772)
!7780 = !DILocation(line: 2400, column: 24, scope: !7682)
!7781 = !DILocation(line: 2400, column: 44, scope: !7682)
!7782 = !DILocation(line: 2401, column: 28, scope: !7682)
!7783 = !DILocation(line: 2401, column: 37, scope: !7682)
!7784 = !DILocation(line: 2402, column: 23, scope: !7682)
!7785 = !DILocation(line: 2402, column: 32, scope: !7682)
!7786 = !DILocation(line: 2404, column: 9, scope: !7682)
!7787 = !DILocation(line: 2404, column: 20, scope: !7682)
!7788 = !DILocation(line: 2405, column: 1, scope: !7682)
!7789 = distinct !DISubprogram(name: "assign_parm_is_stack_parm", scope: !3, file: !3, line: 2411, type: !7790, scopeLine: 2413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7792)
!7790 = !DISubroutineType(types: !7791)
!7791 = !{!749, !4453, !4555}
!7792 = !{!7793, !7794, !7795}
!7793 = !DILocalVariable(name: "all", arg: 1, scope: !7789, file: !3, line: 2411, type: !4453)
!7794 = !DILocalVariable(name: "data", arg: 2, scope: !7789, file: !3, line: 2412, type: !4555)
!7795 = !DILocalVariable(name: "inc", scope: !7796, file: !3, line: 2436, type: !880)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2436, column: 5)
!7797 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2435, column: 7)
!7798 = !DILocation(line: 0, scope: !7789)
!7799 = !DILocation(line: 2415, column: 13, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2415, column: 7)
!7801 = !DILocation(line: 2415, column: 24, scope: !7800)
!7802 = !DILocation(line: 2415, column: 7, scope: !7789)
!7803 = !DILocation(line: 2419, column: 18, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2419, column: 12)
!7805 = !DILocation(line: 2419, column: 26, scope: !7804)
!7806 = !DILocation(line: 2419, column: 12, scope: !7800)
!7807 = !DILocation(line: 2423, column: 12, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 2423, column: 12)
!7809 = !DILocation(line: 2423, column: 40, scope: !7808)
!7810 = !DILocation(line: 2424, column: 5, scope: !7808)
!7811 = !DILocation(line: 2424, column: 8, scope: !7808)
!7812 = !DILocation(line: 2424, column: 51, scope: !7808)
!7813 = !DILocation(line: 2423, column: 12, scope: !7804)
!7814 = !DILocation(line: 2428, column: 17, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2428, column: 12)
!7816 = !DILocation(line: 2428, column: 38, scope: !7815)
!7817 = !DILocation(line: 2428, column: 12, scope: !7808)
!7818 = !DILocation(line: 2434, column: 54, scope: !7789)
!7819 = !DILocation(line: 2434, column: 24, scope: !7789)
!7820 = !DILocation(line: 2434, column: 33, scope: !7789)
!7821 = !DILocation(line: 2435, column: 25, scope: !7797)
!7822 = !DILocation(line: 2435, column: 7, scope: !7797)
!7823 = !DILocation(line: 2435, column: 7, scope: !7789)
!7824 = !DILocation(line: 0, scope: !7796)
!7825 = !DILocation(line: 2436, column: 5, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 2436, column: 5)
!7827 = !DILocation(line: 2436, column: 5, scope: !7796)
!7828 = !DILocation(line: 2436, column: 5, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2436, column: 5)
!7830 = !DILocation(line: 2439, column: 1, scope: !7789)
!7831 = distinct !DISubprogram(name: "assign_parm_find_stack_rtl", scope: !3, file: !3, line: 2445, type: !7832, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7834)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{null, !880, !4555}
!7834 = !{!7835, !7836, !7837, !7838, !7839, !7840, !7841}
!7835 = !DILocalVariable(name: "parm", arg: 1, scope: !7831, file: !3, line: 2445, type: !880)
!7836 = !DILocalVariable(name: "data", arg: 2, scope: !7831, file: !3, line: 2445, type: !4555)
!7837 = !DILocalVariable(name: "offset_rtx", scope: !7831, file: !3, line: 2447, type: !765)
!7838 = !DILocalVariable(name: "stack_parm", scope: !7831, file: !3, line: 2447, type: !765)
!7839 = !DILocalVariable(name: "align", scope: !7831, file: !3, line: 2448, type: !7)
!7840 = !DILocalVariable(name: "boundary", scope: !7831, file: !3, line: 2448, type: !7)
!7841 = !DILocalVariable(name: "offset", scope: !7842, file: !3, line: 2474, type: !750)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2473, column: 6)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 2472, column: 8)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 2469, column: 2)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 2467, column: 11)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 2463, column: 5)
!7847 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2462, column: 7)
!7848 = !DILocation(line: 0, scope: !7831)
!7849 = !DILocation(line: 2452, column: 13, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2452, column: 7)
!7851 = !DILocation(line: 2452, column: 7, scope: !7850)
!7852 = !DILocation(line: 2452, column: 7, scope: !7831)
!7853 = !DILocation(line: 2453, column: 18, scope: !7850)
!7854 = !DILocation(line: 2455, column: 18, scope: !7850)
!7855 = !DILocation(line: 0, scope: !7850)
!7856 = !DILocation(line: 2457, column: 27, scope: !7831)
!7857 = !DILocation(line: 2458, column: 21, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2458, column: 7)
!7859 = !DILocation(line: 2458, column: 18, scope: !7858)
!7860 = !DILocation(line: 2458, column: 7, scope: !7831)
!7861 = !DILocation(line: 2459, column: 18, scope: !7858)
!7862 = !DILocation(line: 2459, column: 5, scope: !7858)
!7863 = !DILocation(line: 2460, column: 35, scope: !7831)
!7864 = !DILocation(line: 2460, column: 16, scope: !7831)
!7865 = !DILocation(line: 2462, column: 14, scope: !7847)
!7866 = !DILocation(line: 2462, column: 8, scope: !7847)
!7867 = !DILocation(line: 2462, column: 7, scope: !7831)
!7868 = !DILocation(line: 2464, column: 7, scope: !7846)
!7869 = !DILocation(line: 2467, column: 17, scope: !7845)
!7870 = !DILocation(line: 2467, column: 31, scope: !7845)
!7871 = !DILocation(line: 2468, column: 4, scope: !7845)
!7872 = !DILocation(line: 2468, column: 30, scope: !7845)
!7873 = !DILocation(line: 2468, column: 27, scope: !7845)
!7874 = !DILocation(line: 2467, column: 11, scope: !7846)
!7875 = !DILocation(line: 2471, column: 4, scope: !7844)
!7876 = !DILocation(line: 2470, column: 4, scope: !7844)
!7877 = !DILocation(line: 2472, column: 8, scope: !7843)
!7878 = !DILocation(line: 2472, column: 30, scope: !7843)
!7879 = !DILocation(line: 2472, column: 8, scope: !7844)
!7880 = !DILocation(line: 2472, column: 33, scope: !7843)
!7881 = !DILocation(line: 2474, column: 44, scope: !7842)
!7882 = !DILocation(line: 2475, column: 15, scope: !7842)
!7883 = !DILocation(line: 2474, column: 21, scope: !7842)
!7884 = !DILocation(line: 0, scope: !7842)
!7885 = !DILocation(line: 2476, column: 12, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 2476, column: 12)
!7887 = !DILocation(line: 2476, column: 12, scope: !7842)
!7888 = !DILocation(line: 2478, column: 20, scope: !7886)
!7889 = !DILocation(line: 2479, column: 13, scope: !7886)
!7890 = !DILocation(line: 2478, column: 5, scope: !7886)
!7891 = !DILocation(line: 2477, column: 3, scope: !7886)
!7892 = !DILocation(line: 2484, column: 27, scope: !7831)
!7893 = !DILocation(line: 2491, column: 20, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2491, column: 7)
!7895 = !DILocation(line: 2491, column: 30, scope: !7894)
!7896 = !DILocation(line: 2491, column: 42, scope: !7894)
!7897 = !DILocation(line: 2491, column: 51, scope: !7894)
!7898 = !DILocation(line: 2491, column: 45, scope: !7894)
!7899 = !DILocation(line: 2491, column: 7, scope: !7831)
!7900 = !DILocation(line: 2493, column: 12, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 2493, column: 12)
!7902 = !DILocation(line: 2493, column: 12, scope: !7894)
!7903 = !DILocation(line: 2495, column: 15, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2494, column: 5)
!7905 = !DILocation(line: 2496, column: 23, scope: !7904)
!7906 = !DILocation(line: 2496, column: 21, scope: !7904)
!7907 = !DILocation(line: 2497, column: 5, scope: !7904)
!7908 = !DILocation(line: 0, scope: !7894)
!7909 = !DILocation(line: 2498, column: 3, scope: !7831)
!7910 = !DILocation(line: 2500, column: 13, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2500, column: 7)
!7912 = !DILocation(line: 2500, column: 7, scope: !7911)
!7913 = !DILocation(line: 2500, column: 7, scope: !7831)
!7914 = !DILocation(line: 2501, column: 5, scope: !7911)
!7915 = !DILocation(line: 2503, column: 9, scope: !7831)
!7916 = !DILocation(line: 2503, column: 20, scope: !7831)
!7917 = !DILocation(line: 2504, column: 1, scope: !7831)
!7918 = distinct !DISubprogram(name: "assign_parm_adjust_entry_rtl", scope: !3, file: !3, line: 2510, type: !7919, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7921)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{null, !4555}
!7921 = !{!7922, !7923, !7924, !7925, !7930}
!7922 = !DILocalVariable(name: "data", arg: 1, scope: !7918, file: !3, line: 2510, type: !4555)
!7923 = !DILocalVariable(name: "entry_parm", scope: !7918, file: !3, line: 2512, type: !765)
!7924 = !DILocalVariable(name: "stack_parm", scope: !7918, file: !3, line: 2513, type: !765)
!7925 = !DILocalVariable(name: "i", scope: !7926, file: !3, line: 2550, type: !1236)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2549, column: 5)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 2546, column: 12)
!7928 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2540, column: 12)
!7929 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 2520, column: 7)
!7930 = !DILocalVariable(name: "len", scope: !7926, file: !3, line: 2550, type: !1236)
!7931 = !DILocation(line: 0, scope: !7918)
!7932 = !DILocation(line: 2512, column: 26, scope: !7918)
!7933 = !DILocation(line: 2513, column: 26, scope: !7918)
!7934 = !DILocation(line: 2520, column: 13, scope: !7929)
!7935 = !DILocation(line: 2520, column: 21, scope: !7929)
!7936 = !DILocation(line: 2520, column: 7, scope: !7918)
!7937 = !DILocation(line: 2524, column: 11, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 2524, column: 11)
!7939 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2521, column: 5)
!7940 = !DILocation(line: 2524, column: 33, scope: !7938)
!7941 = !DILocation(line: 2524, column: 11, scope: !7939)
!7942 = !DILocation(line: 2525, column: 20, scope: !7938)
!7943 = !DILocation(line: 2526, column: 12, scope: !7938)
!7944 = !DILocation(line: 2527, column: 6, scope: !7938)
!7945 = !DILocation(line: 2525, column: 2, scope: !7938)
!7946 = !DILocation(line: 2530, column: 4, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 2529, column: 2)
!7948 = !DILocation(line: 2531, column: 25, scope: !7947)
!7949 = !DILocation(line: 2531, column: 45, scope: !7947)
!7950 = !DILocation(line: 2532, column: 17, scope: !7947)
!7951 = !DILocation(line: 2532, column: 25, scope: !7947)
!7952 = !DILocation(line: 2531, column: 4, scope: !7947)
!7953 = !DILocation(line: 2540, column: 23, scope: !7928)
!7954 = !DILocation(line: 2540, column: 12, scope: !7929)
!7955 = !DILocation(line: 2546, column: 12, scope: !7927)
!7956 = !DILocation(line: 2546, column: 34, scope: !7927)
!7957 = !DILocation(line: 2547, column: 5, scope: !7927)
!7958 = !DILocation(line: 2547, column: 14, scope: !7927)
!7959 = !DILocation(line: 2547, column: 27, scope: !7927)
!7960 = !DILocation(line: 2548, column: 5, scope: !7927)
!7961 = !DILocation(line: 2548, column: 14, scope: !7927)
!7962 = !DILocation(line: 2548, column: 26, scope: !7927)
!7963 = !DILocation(line: 2546, column: 12, scope: !7928)
!7964 = !DILocation(line: 2550, column: 23, scope: !7926)
!7965 = !DILocation(line: 0, scope: !7926)
!7966 = !DILocation(line: 2552, column: 12, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2552, column: 7)
!7968 = !DILocation(line: 0, scope: !7967)
!7969 = !DILocation(line: 2552, column: 21, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2552, column: 7)
!7971 = !DILocation(line: 2552, column: 7, scope: !7967)
!7972 = !DILocation(line: 2553, column: 6, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 2553, column: 6)
!7974 = !DILocation(line: 2553, column: 43, scope: !7973)
!7975 = !DILocation(line: 2554, column: 6, scope: !7973)
!7976 = !DILocation(line: 2554, column: 9, scope: !7973)
!7977 = !DILocation(line: 2555, column: 6, scope: !7973)
!7978 = !DILocation(line: 2555, column: 10, scope: !7973)
!7979 = !DILocation(line: 2556, column: 3, scope: !7973)
!7980 = !DILocation(line: 2557, column: 6, scope: !7973)
!7981 = !DILocation(line: 2557, column: 9, scope: !7973)
!7982 = !DILocation(line: 2557, column: 55, scope: !7973)
!7983 = !DILocation(line: 2553, column: 6, scope: !7970)
!7984 = !DILocation(line: 2559, column: 19, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2558, column: 4)
!7986 = !DILocation(line: 2560, column: 6, scope: !7985)
!7987 = !DILocation(line: 2552, column: 29, scope: !7970)
!7988 = !DILocation(line: 2552, column: 7, scope: !7970)
!7989 = distinct !{!7989, !7971, !7990}
!7990 = !DILocation(line: 2561, column: 4, scope: !7967)
!7991 = !DILocation(line: 2564, column: 9, scope: !7918)
!7992 = !DILocation(line: 0, scope: !7929)
!7993 = !DILocation(line: 2564, column: 20, scope: !7918)
!7994 = !DILocation(line: 2565, column: 1, scope: !7918)
!7995 = distinct !DISubprogram(name: "assign_parm_adjust_stack_rtl", scope: !3, file: !3, line: 2594, type: !7919, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7996)
!7996 = !{!7997, !7998}
!7997 = !DILocalVariable(name: "data", arg: 1, scope: !7995, file: !3, line: 2594, type: !4555)
!7998 = !DILocalVariable(name: "stack_parm", scope: !7995, file: !3, line: 2596, type: !765)
!7999 = !DILocation(line: 0, scope: !7995)
!8000 = !DILocation(line: 2596, column: 26, scope: !7995)
!8001 = !DILocation(line: 2601, column: 7, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 2601, column: 7)
!8003 = !DILocation(line: 2602, column: 7, scope: !8002)
!8004 = !DILocation(line: 2604, column: 14, scope: !8002)
!8005 = !DILocation(line: 2604, column: 8, scope: !8002)
!8006 = !DILocation(line: 2605, column: 8, scope: !8002)
!8007 = !DILocation(line: 2605, column: 11, scope: !8002)
!8008 = !DILocation(line: 2605, column: 45, scope: !8002)
!8009 = !DILocation(line: 2605, column: 43, scope: !8002)
!8010 = !DILocation(line: 2606, column: 8, scope: !8002)
!8011 = !DILocation(line: 2606, column: 11, scope: !8002)
!8012 = !DILocation(line: 2606, column: 36, scope: !8002)
!8013 = !DILocation(line: 2606, column: 34, scope: !8002)
!8014 = !DILocation(line: 2601, column: 7, scope: !7995)
!8015 = !DILocation(line: 2611, column: 18, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 2611, column: 12)
!8017 = !DILocation(line: 2611, column: 29, scope: !8016)
!8018 = !DILocation(line: 2612, column: 5, scope: !8016)
!8019 = !DILocation(line: 2612, column: 14, scope: !8016)
!8020 = !DILocation(line: 2612, column: 27, scope: !8016)
!8021 = !DILocation(line: 2613, column: 5, scope: !8016)
!8022 = !DILocation(line: 2613, column: 36, scope: !8016)
!8023 = !DILocation(line: 2613, column: 27, scope: !8016)
!8024 = !DILocation(line: 2611, column: 12, scope: !8002)
!8025 = !DILocation(line: 2618, column: 18, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 2618, column: 12)
!8027 = !DILocation(line: 2618, column: 12, scope: !8026)
!8028 = !DILocation(line: 2619, column: 5, scope: !8026)
!8029 = !DILocation(line: 2619, column: 9, scope: !8026)
!8030 = !DILocation(line: 2619, column: 28, scope: !8026)
!8031 = !DILocation(line: 2620, column: 9, scope: !8026)
!8032 = !DILocation(line: 2620, column: 18, scope: !8026)
!8033 = !DILocation(line: 2620, column: 12, scope: !8026)
!8034 = !DILocation(line: 2621, column: 9, scope: !8026)
!8035 = !DILocation(line: 2621, column: 12, scope: !8026)
!8036 = !DILocation(line: 2618, column: 12, scope: !8016)
!8037 = !DILocation(line: 2622, column: 5, scope: !8026)
!8038 = !DILocation(line: 0, scope: !8002)
!8039 = !DILocation(line: 2624, column: 20, scope: !7995)
!8040 = !DILocation(line: 2625, column: 1, scope: !7995)
!8041 = distinct !DISubprogram(name: "assign_parm_setup_block_p", scope: !3, file: !3, line: 2631, type: !8042, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8044)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{!749, !4555}
!8044 = !{!8045}
!8045 = !DILocalVariable(name: "data", arg: 1, scope: !8041, file: !3, line: 2631, type: !4555)
!8046 = !DILocation(line: 0, scope: !8041)
!8047 = !DILocation(line: 2633, column: 13, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 2633, column: 7)
!8049 = !DILocation(line: 2633, column: 26, scope: !8048)
!8050 = !DILocation(line: 2633, column: 7, scope: !8041)
!8051 = !DILocation(line: 2635, column: 7, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 2635, column: 7)
!8053 = !DILocation(line: 2635, column: 35, scope: !8052)
!8054 = !DILocation(line: 2649, column: 1, scope: !8041)
!8055 = distinct !DISubprogram(name: "assign_parm_setup_block", scope: !3, file: !3, line: 2655, type: !4553, scopeLine: 2657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8056)
!8056 = !{!8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8067, !8072, !8075, !8078, !8079, !8080}
!8057 = !DILocalVariable(name: "all", arg: 1, scope: !8055, file: !3, line: 2655, type: !4453)
!8058 = !DILocalVariable(name: "parm", arg: 2, scope: !8055, file: !3, line: 2656, type: !880)
!8059 = !DILocalVariable(name: "data", arg: 3, scope: !8055, file: !3, line: 2656, type: !4555)
!8060 = !DILocalVariable(name: "entry_parm", scope: !8055, file: !3, line: 2658, type: !765)
!8061 = !DILocalVariable(name: "stack_parm", scope: !8055, file: !3, line: 2659, type: !765)
!8062 = !DILocalVariable(name: "size", scope: !8055, file: !3, line: 2660, type: !851)
!8063 = !DILocalVariable(name: "size_stored", scope: !8055, file: !3, line: 2661, type: !851)
!8064 = !DILocalVariable(name: "mem", scope: !8065, file: !3, line: 2682, type: !765)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 2681, column: 5)
!8066 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2680, column: 7)
!8067 = !DILocalVariable(name: "mode", scope: !8068, file: !3, line: 2720, type: !13)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 2719, column: 2)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 2718, column: 16)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2713, column: 16)
!8071 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2703, column: 11)
!8072 = !DILocalVariable(name: "reg", scope: !8073, file: !3, line: 2731, type: !765)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2730, column: 6)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2723, column: 8)
!8075 = !DILocalVariable(name: "tem", scope: !8076, file: !3, line: 2762, type: !765)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 2761, column: 6)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2753, column: 13)
!8078 = !DILocalVariable(name: "x", scope: !8076, file: !3, line: 2762, type: !765)
!8079 = !DILocalVariable(name: "by", scope: !8076, file: !3, line: 2763, type: !750)
!8080 = !DILocalVariable(name: "reg", scope: !8076, file: !3, line: 2764, type: !765)
!8081 = !DILocation(line: 0, scope: !8055)
!8082 = !DILocation(line: 2658, column: 26, scope: !8055)
!8083 = !DILocation(line: 2659, column: 26, scope: !8055)
!8084 = !DILocation(line: 2663, column: 7, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2663, column: 7)
!8086 = !DILocation(line: 2663, column: 29, scope: !8085)
!8087 = !DILocation(line: 2663, column: 7, scope: !8055)
!8088 = !DILocation(line: 2664, column: 18, scope: !8085)
!8089 = !DILocation(line: 2664, column: 5, scope: !8085)
!8090 = !DILocation(line: 2666, column: 35, scope: !8055)
!8091 = !DILocation(line: 2666, column: 10, scope: !8055)
!8092 = !DILocation(line: 2667, column: 17, scope: !8055)
!8093 = !DILocation(line: 2668, column: 18, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2668, column: 7)
!8095 = !DILocation(line: 2668, column: 7, scope: !8055)
!8096 = !DILocation(line: 2670, column: 27, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2669, column: 5)
!8098 = !DILocation(line: 2670, column: 25, scope: !8097)
!8099 = !DILocation(line: 2671, column: 20, scope: !8097)
!8100 = !DILocation(line: 2673, column: 11, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2673, column: 11)
!8102 = !DILocation(line: 2673, column: 49, scope: !8101)
!8103 = !DILocation(line: 2673, column: 11, scope: !8097)
!8104 = !DILocation(line: 2674, column: 2, scope: !8101)
!8105 = !DILocation(line: 2675, column: 7, scope: !8097)
!8106 = !DILocation(line: 2676, column: 5, scope: !8097)
!8107 = !DILocation(line: 2680, column: 7, scope: !8066)
!8108 = !DILocation(line: 2680, column: 26, scope: !8066)
!8109 = !DILocation(line: 2680, column: 51, scope: !8066)
!8110 = !DILocation(line: 2680, column: 7, scope: !8055)
!8111 = !DILocation(line: 2693, column: 11, scope: !8065)
!8112 = !DILocation(line: 2695, column: 16, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2693, column: 11)
!8114 = !DILocation(line: 2700, column: 13, scope: !8065)
!8115 = !DILocation(line: 0, scope: !8065)
!8116 = !DILocation(line: 2703, column: 11, scope: !8071)
!8117 = !DILocation(line: 2703, column: 33, scope: !8071)
!8118 = !DILocation(line: 2703, column: 11, scope: !8065)
!8119 = !DILocation(line: 2705, column: 28, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2704, column: 2)
!8121 = !DILocation(line: 2706, column: 14, scope: !8120)
!8122 = !DILocation(line: 2705, column: 4, scope: !8120)
!8123 = !DILocation(line: 2707, column: 45, scope: !8120)
!8124 = !DILocation(line: 2707, column: 58, scope: !8120)
!8125 = !DILocation(line: 2707, column: 4, scope: !8120)
!8126 = !DILocation(line: 2708, column: 33, scope: !8120)
!8127 = !DILocation(line: 2708, column: 31, scope: !8120)
!8128 = !DILocation(line: 2709, column: 32, scope: !8120)
!8129 = !DILocation(line: 2709, column: 30, scope: !8120)
!8130 = !DILocation(line: 2710, column: 4, scope: !8120)
!8131 = !DILocation(line: 2711, column: 2, scope: !8120)
!8132 = !DILocation(line: 2713, column: 21, scope: !8070)
!8133 = !DILocation(line: 2713, column: 16, scope: !8071)
!8134 = !DILocation(line: 2718, column: 21, scope: !8069)
!8135 = !DILocation(line: 2718, column: 16, scope: !8070)
!8136 = !DILocation(line: 2721, column: 23, scope: !8068)
!8137 = !DILocation(line: 2721, column: 8, scope: !8068)
!8138 = !DILocation(line: 0, scope: !8068)
!8139 = !DILocation(line: 2723, column: 13, scope: !8074)
!8140 = !DILocation(line: 2723, column: 8, scope: !8068)
!8141 = !DILocation(line: 2740, column: 28, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2739, column: 12)
!8143 = !DILocation(line: 2740, column: 9, scope: !8142)
!8144 = !DILocation(line: 0, scope: !8073)
!8145 = !DILocation(line: 2746, column: 24, scope: !8073)
!8146 = !DILocation(line: 2746, column: 8, scope: !8073)
!8147 = !DILocation(line: 2747, column: 6, scope: !8073)
!8148 = !DILocation(line: 2773, column: 27, scope: !8077)
!8149 = !DILocation(line: 2774, column: 18, scope: !8077)
!8150 = !DILocation(line: 2774, column: 6, scope: !8077)
!8151 = !DILocation(line: 2773, column: 6, scope: !8077)
!8152 = !DILocation(line: 2777, column: 23, scope: !8069)
!8153 = !DILocation(line: 2778, column: 21, scope: !8069)
!8154 = !DILocation(line: 2778, column: 9, scope: !8069)
!8155 = !DILocation(line: 2777, column: 2, scope: !8069)
!8156 = !DILocation(line: 2780, column: 18, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 2780, column: 12)
!8158 = !DILocation(line: 2780, column: 29, scope: !8157)
!8159 = !DILocation(line: 2780, column: 12, scope: !8066)
!8160 = !DILocation(line: 2782, column: 31, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2781, column: 5)
!8162 = !DILocation(line: 2782, column: 59, scope: !8161)
!8163 = !DILocation(line: 2782, column: 7, scope: !8161)
!8164 = !DILocation(line: 2783, column: 42, scope: !8161)
!8165 = !DILocation(line: 2783, column: 54, scope: !8161)
!8166 = !DILocation(line: 2783, column: 7, scope: !8161)
!8167 = !DILocation(line: 2785, column: 36, scope: !8161)
!8168 = !DILocation(line: 2785, column: 34, scope: !8161)
!8169 = !DILocation(line: 2786, column: 35, scope: !8161)
!8170 = !DILocation(line: 2786, column: 33, scope: !8161)
!8171 = !DILocation(line: 2787, column: 7, scope: !8161)
!8172 = !DILocation(line: 2788, column: 5, scope: !8161)
!8173 = !DILocation(line: 2790, column: 20, scope: !8055)
!8174 = !DILocation(line: 2791, column: 3, scope: !8055)
!8175 = !DILocation(line: 2792, column: 1, scope: !8055)
!8176 = distinct !DISubprogram(name: "assign_parm_setup_reg", scope: !3, file: !3, line: 2798, type: !4553, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8177)
!8177 = !{!8178, !8179, !8180, !8181, !8182, !8183, !8184, !8185, !8188, !8191, !8192, !8197, !8202, !8203, !8206, !8207, !8208, !8211, !8212, !8213, !8214}
!8178 = !DILocalVariable(name: "all", arg: 1, scope: !8176, file: !3, line: 2798, type: !4453)
!8179 = !DILocalVariable(name: "parm", arg: 2, scope: !8176, file: !3, line: 2798, type: !880)
!8180 = !DILocalVariable(name: "data", arg: 3, scope: !8176, file: !3, line: 2799, type: !4555)
!8181 = !DILocalVariable(name: "parmreg", scope: !8176, file: !3, line: 2801, type: !765)
!8182 = !DILocalVariable(name: "promoted_nominal_mode", scope: !8176, file: !3, line: 2802, type: !13)
!8183 = !DILocalVariable(name: "unsignedp", scope: !8176, file: !3, line: 2803, type: !750)
!8184 = !DILocalVariable(name: "did_conversion", scope: !8176, file: !3, line: 2804, type: !749)
!8185 = !DILocalVariable(name: "x", scope: !8186, file: !3, line: 2822, type: !765)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2821, column: 5)
!8187 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2820, column: 7)
!8188 = !DILocalVariable(name: "save_tree_used", scope: !8189, file: !3, line: 2836, type: !750)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2835, column: 5)
!8190 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2833, column: 7)
!8191 = !DILocalVariable(name: "tempreg", scope: !8189, file: !3, line: 2857, type: !765)
!8192 = !DILocalVariable(name: "_rtx", scope: !8193, file: !3, line: 2875, type: !8196)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2875, column: 4)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 2871, column: 2)
!8195 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 2864, column: 11)
!8196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!8197 = !DILocalVariable(name: "tempreg", scope: !8198, file: !3, line: 2906, type: !765)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2905, column: 2)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 2904, column: 11)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 2898, column: 5)
!8201 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2893, column: 7)
!8202 = !DILocalVariable(name: "unsigned_p", scope: !8198, file: !3, line: 2907, type: !750)
!8203 = !DILocalVariable(name: "linsn", scope: !8204, file: !3, line: 2943, type: !765)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 2942, column: 5)
!8205 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2935, column: 7)
!8206 = !DILocalVariable(name: "sinsn", scope: !8204, file: !3, line: 2944, type: !765)
!8207 = !DILocalVariable(name: "set", scope: !8204, file: !3, line: 2944, type: !765)
!8208 = !DILocalVariable(name: "submode", scope: !8209, file: !3, line: 2949, type: !13)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2948, column: 2)
!8210 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 2947, column: 11)
!8211 = !DILocalVariable(name: "regnor", scope: !8209, file: !3, line: 2951, type: !750)
!8212 = !DILocalVariable(name: "regnoi", scope: !8209, file: !3, line: 2952, type: !750)
!8213 = !DILocalVariable(name: "stackr", scope: !8209, file: !3, line: 2953, type: !765)
!8214 = !DILocalVariable(name: "stacki", scope: !8209, file: !3, line: 2954, type: !765)
!8215 = !DILocation(line: 0, scope: !8176)
!8216 = !DILocation(line: 2803, column: 3, scope: !8176)
!8217 = !DILocation(line: 2803, column: 19, scope: !8176)
!8218 = !DILocation(line: 2803, column: 7, scope: !8176)
!8219 = !DILocation(line: 2810, column: 36, scope: !8176)
!8220 = !DILocation(line: 2810, column: 56, scope: !8176)
!8221 = !DILocation(line: 2811, column: 9, scope: !8176)
!8222 = !DILocation(line: 2810, column: 7, scope: !8176)
!8223 = !DILocation(line: 2813, column: 13, scope: !8176)
!8224 = !DILocation(line: 2815, column: 8, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2815, column: 7)
!8226 = !DILocation(line: 2815, column: 7, scope: !8176)
!8227 = !DILocation(line: 2816, column: 5, scope: !8225)
!8228 = !DILocation(line: 2820, column: 13, scope: !8187)
!8229 = !DILocation(line: 2820, column: 7, scope: !8187)
!8230 = !DILocation(line: 2820, column: 7, scope: !8176)
!8231 = !DILocation(line: 2822, column: 28, scope: !8186)
!8232 = !DILocation(line: 2822, column: 15, scope: !8186)
!8233 = !DILocation(line: 0, scope: !8186)
!8234 = !DILocation(line: 2823, column: 7, scope: !8186)
!8235 = !DILocation(line: 2824, column: 7, scope: !8186)
!8236 = !DILocation(line: 2825, column: 5, scope: !8186)
!8237 = !DILocation(line: 2827, column: 5, scope: !8187)
!8238 = !DILocation(line: 2829, column: 3, scope: !8176)
!8239 = !DILocation(line: 2833, column: 13, scope: !8190)
!8240 = !DILocation(line: 2833, column: 35, scope: !8190)
!8241 = !DILocation(line: 2833, column: 26, scope: !8190)
!8242 = !DILocation(line: 2834, column: 7, scope: !8190)
!8243 = !DILocation(line: 2834, column: 41, scope: !8190)
!8244 = !DILocation(line: 2834, column: 32, scope: !8190)
!8245 = !DILocation(line: 2833, column: 7, scope: !8176)
!8246 = !DILocation(line: 2857, column: 34, scope: !8189)
!8247 = !DILocation(line: 2857, column: 21, scope: !8189)
!8248 = !DILocation(line: 0, scope: !8189)
!8249 = !DILocation(line: 2859, column: 52, scope: !8189)
!8250 = !DILocation(line: 2859, column: 32, scope: !8189)
!8251 = !DILocation(line: 2859, column: 7, scope: !8189)
!8252 = !DILocation(line: 2861, column: 31, scope: !8189)
!8253 = !DILocation(line: 2861, column: 59, scope: !8189)
!8254 = !DILocation(line: 2861, column: 7, scope: !8189)
!8255 = !DILocation(line: 2862, column: 40, scope: !8189)
!8256 = !DILocation(line: 2862, column: 63, scope: !8189)
!8257 = !DILocation(line: 2862, column: 17, scope: !8189)
!8258 = !DILocation(line: 2864, column: 11, scope: !8195)
!8259 = !DILocation(line: 2864, column: 30, scope: !8195)
!8260 = !DILocation(line: 2865, column: 4, scope: !8195)
!8261 = !DILocation(line: 2865, column: 7, scope: !8195)
!8262 = !DILocation(line: 2865, column: 35, scope: !8195)
!8263 = !DILocation(line: 2865, column: 26, scope: !8195)
!8264 = !DILocation(line: 2866, column: 4, scope: !8195)
!8265 = !DILocation(line: 2866, column: 7, scope: !8195)
!8266 = !DILocation(line: 2867, column: 4, scope: !8195)
!8267 = !DILocation(line: 2867, column: 35, scope: !8195)
!8268 = !DILocation(line: 2867, column: 26, scope: !8195)
!8269 = !DILocation(line: 2868, column: 4, scope: !8195)
!8270 = !DILocation(line: 2868, column: 42, scope: !8195)
!8271 = !DILocation(line: 2868, column: 39, scope: !8195)
!8272 = !DILocation(line: 2869, column: 4, scope: !8195)
!8273 = !DILocation(line: 2869, column: 7, scope: !8195)
!8274 = !DILocation(line: 2870, column: 9, scope: !8195)
!8275 = !DILocation(line: 2870, column: 7, scope: !8195)
!8276 = !DILocation(line: 2864, column: 11, scope: !8189)
!8277 = !DILocation(line: 2874, column: 36, scope: !8194)
!8278 = !DILocation(line: 0, scope: !8193)
!8279 = !DILocation(line: 2875, column: 4, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 2875, column: 4)
!8281 = !DILocation(line: 2875, column: 4, scope: !8193)
!8282 = !DILocation(line: 0, scope: !8280)
!8283 = !DILocation(line: 2875, column: 4, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2875, column: 4)
!8285 = !DILocation(line: 2879, column: 24, scope: !8189)
!8286 = !DILocation(line: 2880, column: 49, scope: !8189)
!8287 = !DILocation(line: 2880, column: 32, scope: !8189)
!8288 = !DILocation(line: 2880, column: 7, scope: !8189)
!8289 = !DILocation(line: 2881, column: 24, scope: !8189)
!8290 = !DILocation(line: 2882, column: 36, scope: !8189)
!8291 = !DILocation(line: 2882, column: 34, scope: !8189)
!8292 = !DILocation(line: 2883, column: 35, scope: !8189)
!8293 = !DILocation(line: 2883, column: 33, scope: !8189)
!8294 = !DILocation(line: 2884, column: 7, scope: !8189)
!8295 = !DILocation(line: 2887, column: 5, scope: !8189)
!8296 = !DILocation(line: 2889, column: 50, scope: !8190)
!8297 = !DILocation(line: 2889, column: 30, scope: !8190)
!8298 = !DILocation(line: 2889, column: 5, scope: !8190)
!8299 = !DILocation(line: 2893, column: 13, scope: !8201)
!8300 = !DILocation(line: 2893, column: 7, scope: !8201)
!8301 = !DILocation(line: 2894, column: 7, scope: !8201)
!8302 = !DILocation(line: 2894, column: 10, scope: !8201)
!8303 = !DILocation(line: 2894, column: 39, scope: !8201)
!8304 = !DILocation(line: 2896, column: 7, scope: !8201)
!8305 = !DILocation(line: 2896, column: 11, scope: !8201)
!8306 = !DILocation(line: 2896, column: 43, scope: !8201)
!8307 = !DILocation(line: 0, scope: !8201)
!8308 = !DILocation(line: 2896, column: 40, scope: !8201)
!8309 = !DILocation(line: 2897, column: 4, scope: !8201)
!8310 = !DILocation(line: 2897, column: 7, scope: !8201)
!8311 = !DILocation(line: 2893, column: 7, scope: !8176)
!8312 = !DILocation(line: 2901, column: 30, scope: !8200)
!8313 = !DILocation(line: 2901, column: 17, scope: !8200)
!8314 = !DILocation(line: 2902, column: 7, scope: !8200)
!8315 = !DILocation(line: 2904, column: 11, scope: !8199)
!8316 = !DILocation(line: 2904, column: 33, scope: !8199)
!8317 = !DILocation(line: 2904, column: 30, scope: !8199)
!8318 = !DILocation(line: 0, scope: !8199)
!8319 = !DILocation(line: 2904, column: 11, scope: !8200)
!8320 = !DILocation(line: 2906, column: 31, scope: !8198)
!8321 = !DILocation(line: 2906, column: 18, scope: !8198)
!8322 = !DILocation(line: 0, scope: !8198)
!8323 = !DILocation(line: 2907, column: 21, scope: !8198)
!8324 = !DILocation(line: 2909, column: 28, scope: !8198)
!8325 = !DILocation(line: 2910, column: 14, scope: !8198)
!8326 = !DILocation(line: 2909, column: 4, scope: !8198)
!8327 = !DILocation(line: 2911, column: 29, scope: !8198)
!8328 = !DILocation(line: 2911, column: 4, scope: !8198)
!8329 = !DILocation(line: 2912, column: 31, scope: !8198)
!8330 = !DILocation(line: 2912, column: 14, scope: !8198)
!8331 = !DILocation(line: 2913, column: 4, scope: !8198)
!8332 = !DILocation(line: 2914, column: 33, scope: !8198)
!8333 = !DILocation(line: 2914, column: 31, scope: !8198)
!8334 = !DILocation(line: 2915, column: 32, scope: !8198)
!8335 = !DILocation(line: 2915, column: 30, scope: !8198)
!8336 = !DILocation(line: 2916, column: 4, scope: !8198)
!8337 = !DILocation(line: 2919, column: 2, scope: !8198)
!8338 = !DILocation(line: 2921, column: 27, scope: !8199)
!8339 = !DILocation(line: 2921, column: 2, scope: !8199)
!8340 = !DILocation(line: 2923, column: 7, scope: !8200)
!8341 = !DILocation(line: 2927, column: 13, scope: !8200)
!8342 = !DILocation(line: 2927, column: 24, scope: !8200)
!8343 = !DILocation(line: 2928, column: 5, scope: !8200)
!8344 = !DILocation(line: 2935, column: 13, scope: !8205)
!8345 = !DILocation(line: 2935, column: 35, scope: !8205)
!8346 = !DILocation(line: 2935, column: 26, scope: !8205)
!8347 = !DILocation(line: 2936, column: 11, scope: !8205)
!8348 = !DILocation(line: 2936, column: 7, scope: !8205)
!8349 = !DILocation(line: 2937, column: 16, scope: !8205)
!8350 = !DILocation(line: 2937, column: 27, scope: !8205)
!8351 = !DILocation(line: 2938, column: 7, scope: !8205)
!8352 = !DILocation(line: 2938, column: 10, scope: !8205)
!8353 = !DILocation(line: 2939, column: 7, scope: !8205)
!8354 = !DILocation(line: 2939, column: 30, scope: !8205)
!8355 = !DILocation(line: 2939, column: 34, scope: !8205)
!8356 = !DILocation(line: 2940, column: 7, scope: !8205)
!8357 = !DILocation(line: 2940, column: 27, scope: !8205)
!8358 = !DILocation(line: 2941, column: 6, scope: !8205)
!8359 = !DILocation(line: 2940, column: 10, scope: !8205)
!8360 = !DILocation(line: 2935, column: 7, scope: !8176)
!8361 = !DILocation(line: 2943, column: 19, scope: !8204)
!8362 = !DILocation(line: 0, scope: !8204)
!8363 = !DILocation(line: 2947, column: 11, scope: !8210)
!8364 = !DILocation(line: 2947, column: 30, scope: !8210)
!8365 = !DILocation(line: 2947, column: 11, scope: !8204)
!8366 = !DILocation(line: 2950, column: 8, scope: !8209)
!8367 = !DILocation(line: 0, scope: !8209)
!8368 = !DILocation(line: 2951, column: 17, scope: !8209)
!8369 = !DILocation(line: 2952, column: 17, scope: !8209)
!8370 = !DILocation(line: 2953, column: 17, scope: !8209)
!8371 = !DILocation(line: 2954, column: 17, scope: !8209)
!8372 = !DILocation(line: 0, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 2966, column: 12)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2961, column: 6)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 2959, column: 4)
!8376 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 2959, column: 4)
!8377 = !DILocation(line: 0, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 2968, column: 17)
!8379 = !DILocation(line: 2959, column: 9, scope: !8376)
!8380 = !DILocation(line: 0, scope: !8376)
!8381 = !DILocation(line: 2959, column: 30, scope: !8375)
!8382 = !DILocation(line: 2959, column: 4, scope: !8376)
!8383 = !DILocation(line: 2962, column: 14, scope: !8374)
!8384 = !DILocation(line: 2963, column: 16, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 2963, column: 12)
!8386 = !DILocation(line: 2963, column: 12, scope: !8374)
!8387 = !DILocation(line: 2966, column: 12, scope: !8373)
!8388 = !DILocation(line: 2966, column: 30, scope: !8373)
!8389 = !DILocation(line: 2966, column: 27, scope: !8373)
!8390 = !DILocation(line: 2966, column: 12, scope: !8374)
!8391 = !DILocation(line: 2967, column: 3, scope: !8373)
!8392 = !DILocation(line: 2968, column: 35, scope: !8378)
!8393 = !DILocation(line: 2968, column: 32, scope: !8378)
!8394 = !DILocation(line: 2968, column: 17, scope: !8373)
!8395 = !DILocation(line: 2969, column: 3, scope: !8378)
!8396 = !DILocation(line: 2960, column: 17, scope: !8375)
!8397 = !DILocation(line: 2959, column: 4, scope: !8375)
!8398 = distinct !{!8398, !8382, !8399}
!8399 = !DILocation(line: 2970, column: 6, scope: !8376)
!8400 = !DILocation(line: 2972, column: 23, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2972, column: 16)
!8402 = !DILocation(line: 2972, column: 43, scope: !8401)
!8403 = !DILocation(line: 2973, column: 9, scope: !8401)
!8404 = !DILocation(line: 2973, column: 12, scope: !8401)
!8405 = !DILocation(line: 2973, column: 27, scope: !8401)
!8406 = !DILocation(line: 2972, column: 16, scope: !8210)
!8407 = !DILocation(line: 2974, column: 47, scope: !8401)
!8408 = !DILocation(line: 2974, column: 2, scope: !8401)
!8409 = !DILocation(line: 2978, column: 7, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2978, column: 7)
!8411 = !DILocation(line: 2978, column: 7, scope: !8176)
!8412 = !DILocation(line: 2980, column: 9, scope: !8410)
!8413 = !DILocation(line: 2979, column: 5, scope: !8410)
!8414 = !DILocation(line: 2981, column: 1, scope: !8176)
!8415 = distinct !DISubprogram(name: "assign_parm_setup_stack", scope: !3, file: !3, line: 2987, type: !4553, scopeLine: 2989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8416)
!8416 = !{!8417, !8418, !8419, !8420, !8421, !8424, !8427, !8430, !8431}
!8417 = !DILocalVariable(name: "all", arg: 1, scope: !8415, file: !3, line: 2987, type: !4453)
!8418 = !DILocalVariable(name: "parm", arg: 2, scope: !8415, file: !3, line: 2987, type: !880)
!8419 = !DILocalVariable(name: "data", arg: 3, scope: !8415, file: !3, line: 2988, type: !4555)
!8420 = !DILocalVariable(name: "to_conversion", scope: !8415, file: !3, line: 2992, type: !749)
!8421 = !DILocalVariable(name: "tempreg", scope: !8422, file: !3, line: 2999, type: !765)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2997, column: 5)
!8423 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 2996, column: 7)
!8424 = !DILocalVariable(name: "offset", scope: !8425, file: !3, line: 3011, type: !750)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 3010, column: 2)
!8426 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3009, column: 11)
!8427 = !DILocalVariable(name: "src", scope: !8428, file: !3, line: 3025, type: !765)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3024, column: 5)
!8429 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 3023, column: 7)
!8430 = !DILocalVariable(name: "dest", scope: !8428, file: !3, line: 3025, type: !765)
!8431 = !DILocalVariable(name: "align", scope: !8432, file: !3, line: 3029, type: !750)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 3028, column: 2)
!8433 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 3027, column: 11)
!8434 = !DILocation(line: 0, scope: !8415)
!8435 = !DILocation(line: 2994, column: 3, scope: !8415)
!8436 = !DILocation(line: 2996, column: 13, scope: !8423)
!8437 = !DILocation(line: 2996, column: 36, scope: !8423)
!8438 = !DILocation(line: 2996, column: 27, scope: !8423)
!8439 = !DILocation(line: 2996, column: 7, scope: !8415)
!8440 = !DILocation(line: 2999, column: 34, scope: !8422)
!8441 = !DILocation(line: 2999, column: 21, scope: !8422)
!8442 = !DILocation(line: 0, scope: !8422)
!8443 = !DILocation(line: 3001, column: 52, scope: !8422)
!8444 = !DILocation(line: 3001, column: 32, scope: !8422)
!8445 = !DILocation(line: 3001, column: 7, scope: !8422)
!8446 = !DILocation(line: 3003, column: 31, scope: !8422)
!8447 = !DILocation(line: 3003, column: 59, scope: !8422)
!8448 = !DILocation(line: 3003, column: 7, scope: !8422)
!8449 = !DILocation(line: 3006, column: 49, scope: !8422)
!8450 = !DILocation(line: 3007, column: 8, scope: !8422)
!8451 = !DILocation(line: 3006, column: 26, scope: !8422)
!8452 = !DILocation(line: 3006, column: 24, scope: !8422)
!8453 = !DILocation(line: 3009, column: 17, scope: !8426)
!8454 = !DILocation(line: 3009, column: 11, scope: !8426)
!8455 = !DILocation(line: 3009, column: 11, scope: !8422)
!8456 = !DILocation(line: 3011, column: 46, scope: !8425)
!8457 = !DILocation(line: 3012, column: 12, scope: !8425)
!8458 = !DILocation(line: 3011, column: 17, scope: !8425)
!8459 = !DILocation(line: 0, scope: !8425)
!8460 = !DILocation(line: 3015, column: 8, scope: !8425)
!8461 = !DILocation(line: 3015, column: 6, scope: !8425)
!8462 = !DILocation(line: 3016, column: 8, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 3016, column: 8)
!8464 = !DILocation(line: 3016, column: 15, scope: !8463)
!8465 = !DILocation(line: 3016, column: 18, scope: !8463)
!8466 = !DILocation(line: 3016, column: 8, scope: !8425)
!8467 = !DILocation(line: 3018, column: 23, scope: !8463)
!8468 = !DILocation(line: 3019, column: 9, scope: !8463)
!8469 = !DILocation(line: 3018, column: 8, scope: !8463)
!8470 = !DILocation(line: 3017, column: 6, scope: !8463)
!8471 = !DILocation(line: 3023, column: 13, scope: !8429)
!8472 = !DILocation(line: 3023, column: 33, scope: !8429)
!8473 = !DILocation(line: 3023, column: 24, scope: !8429)
!8474 = !DILocation(line: 3023, column: 7, scope: !8415)
!8475 = !DILocation(line: 3027, column: 28, scope: !8433)
!8476 = !DILocation(line: 3027, column: 11, scope: !8428)
!8477 = !DILocation(line: 3029, column: 16, scope: !8432)
!8478 = !DILocation(line: 0, scope: !8432)
!8479 = !DILocation(line: 3033, column: 28, scope: !8432)
!8480 = !DILocation(line: 3034, column: 7, scope: !8432)
!8481 = !DILocation(line: 3033, column: 8, scope: !8432)
!8482 = !DILocation(line: 3033, column: 6, scope: !8432)
!8483 = !DILocation(line: 3036, column: 4, scope: !8432)
!8484 = !DILocation(line: 3039, column: 34, scope: !8428)
!8485 = !DILocation(line: 3037, column: 2, scope: !8432)
!8486 = !DILocation(line: 3039, column: 14, scope: !8428)
!8487 = !DILocation(line: 0, scope: !8428)
!8488 = !DILocation(line: 3040, column: 33, scope: !8428)
!8489 = !DILocation(line: 3040, column: 13, scope: !8428)
!8490 = !DILocation(line: 3042, column: 11, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 3042, column: 11)
!8492 = !DILocation(line: 3042, column: 11, scope: !8428)
!8493 = !DILocation(line: 3045, column: 9, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 3045, column: 8)
!8495 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 3043, column: 2)
!8496 = !DILocation(line: 3045, column: 8, scope: !8495)
!8497 = !DILocation(line: 3046, column: 30, scope: !8494)
!8498 = !DILocation(line: 3047, column: 16, scope: !8494)
!8499 = !DILocation(line: 3046, column: 6, scope: !8494)
!8500 = !DILocation(line: 3051, column: 7, scope: !8495)
!8501 = !DILocation(line: 3050, column: 4, scope: !8495)
!8502 = !DILocation(line: 3053, column: 2, scope: !8495)
!8503 = !DILocation(line: 3055, column: 2, scope: !8491)
!8504 = !DILocation(line: 3058, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 3058, column: 7)
!8506 = !DILocation(line: 3058, column: 7, scope: !8415)
!8507 = !DILocation(line: 3060, column: 36, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 3059, column: 5)
!8509 = !DILocation(line: 3060, column: 12, scope: !8508)
!8510 = !DILocation(line: 3060, column: 34, scope: !8508)
!8511 = !DILocation(line: 3061, column: 35, scope: !8508)
!8512 = !DILocation(line: 3061, column: 12, scope: !8508)
!8513 = !DILocation(line: 3061, column: 33, scope: !8508)
!8514 = !DILocation(line: 3062, column: 7, scope: !8508)
!8515 = !DILocation(line: 3063, column: 5, scope: !8508)
!8516 = !DILocation(line: 3065, column: 3, scope: !8415)
!8517 = !DILocation(line: 3066, column: 1, scope: !8415)
!8518 = distinct !DISubprogram(name: "assign_parms_unsplit_complex", scope: !3, file: !3, line: 3072, type: !8519, scopeLine: 3074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8521)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{null, !4453, !2176}
!8521 = !{!8522, !8523, !8524, !8525, !8526, !8527, !8533, !8534, !8535, !8536, !8539, !8540, !8541}
!8522 = !DILocalVariable(name: "all", arg: 1, scope: !8518, file: !3, line: 3072, type: !4453)
!8523 = !DILocalVariable(name: "fnargs", arg: 2, scope: !8518, file: !3, line: 3073, type: !2176)
!8524 = !DILocalVariable(name: "parm", scope: !8518, file: !3, line: 3075, type: !880)
!8525 = !DILocalVariable(name: "orig_fnargs", scope: !8518, file: !3, line: 3076, type: !880)
!8526 = !DILocalVariable(name: "i", scope: !8518, file: !3, line: 3077, type: !7)
!8527 = !DILocalVariable(name: "tmp", scope: !8528, file: !3, line: 3084, type: !765)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 3083, column: 2)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 3081, column: 11)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 3080, column: 5)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 3079, column: 3)
!8532 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 3079, column: 3)
!8533 = !DILocalVariable(name: "real", scope: !8528, file: !3, line: 3084, type: !765)
!8534 = !DILocalVariable(name: "imag", scope: !8528, file: !3, line: 3084, type: !765)
!8535 = !DILocalVariable(name: "inner", scope: !8528, file: !3, line: 3085, type: !13)
!8536 = !DILocalVariable(name: "rmem", scope: !8537, file: !3, line: 3097, type: !765)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 3096, column: 6)
!8538 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3095, column: 8)
!8539 = !DILocalVariable(name: "imem", scope: !8537, file: !3, line: 3097, type: !765)
!8540 = !DILocalVariable(name: "size", scope: !8537, file: !3, line: 3098, type: !851)
!8541 = !DILocalVariable(name: "align", scope: !8537, file: !3, line: 3099, type: !750)
!8542 = !DILocation(line: 0, scope: !8518)
!8543 = !DILocation(line: 3076, column: 27, scope: !8518)
!8544 = !DILocation(line: 0, scope: !8528)
!8545 = !DILocation(line: 0, scope: !8537)
!8546 = !DILocation(line: 3079, column: 8, scope: !8532)
!8547 = !DILocation(line: 0, scope: !8532)
!8548 = !DILocation(line: 3079, column: 3, scope: !8532)
!8549 = !DILocation(line: 3081, column: 11, scope: !8529)
!8550 = !DILocation(line: 3081, column: 40, scope: !8529)
!8551 = !DILocation(line: 3082, column: 4, scope: !8529)
!8552 = !DILocation(line: 3082, column: 21, scope: !8529)
!8553 = !DILocation(line: 3082, column: 7, scope: !8529)
!8554 = !DILocation(line: 3081, column: 11, scope: !8530)
!8555 = !DILocation(line: 3085, column: 30, scope: !8528)
!8556 = !DILocation(line: 3087, column: 11, scope: !8528)
!8557 = !DILocation(line: 3088, column: 11, scope: !8528)
!8558 = !DILocation(line: 3089, column: 17, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3089, column: 8)
!8560 = !DILocation(line: 3089, column: 14, scope: !8559)
!8561 = !DILocation(line: 3089, column: 8, scope: !8528)
!8562 = !DILocation(line: 3091, column: 15, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 3090, column: 6)
!8564 = !DILocation(line: 3092, column: 15, scope: !8563)
!8565 = !DILocation(line: 3093, column: 6, scope: !8563)
!8566 = !DILocation(line: 3095, column: 8, scope: !8538)
!8567 = !DILocation(line: 3095, column: 8, scope: !8528)
!8568 = !DILocation(line: 3098, column: 48, scope: !8537)
!8569 = !DILocation(line: 3098, column: 29, scope: !8537)
!8570 = !DILocation(line: 3099, column: 20, scope: !8537)
!8571 = !DILocation(line: 3105, column: 34, scope: !8537)
!8572 = !DILocation(line: 3105, column: 14, scope: !8537)
!8573 = !DILocation(line: 3106, column: 8, scope: !8537)
!8574 = !DILocation(line: 3107, column: 15, scope: !8537)
!8575 = !DILocation(line: 3108, column: 15, scope: !8537)
!8576 = !DILocation(line: 3109, column: 32, scope: !8537)
!8577 = !DILocation(line: 3110, column: 11, scope: !8537)
!8578 = !DILocation(line: 3109, column: 8, scope: !8537)
!8579 = !DILocation(line: 3111, column: 8, scope: !8537)
!8580 = !DILocation(line: 3112, column: 8, scope: !8537)
!8581 = !DILocation(line: 3113, column: 37, scope: !8537)
!8582 = !DILocation(line: 3113, column: 35, scope: !8537)
!8583 = !DILocation(line: 3114, column: 36, scope: !8537)
!8584 = !DILocation(line: 3114, column: 34, scope: !8537)
!8585 = !DILocation(line: 3115, column: 8, scope: !8537)
!8586 = !DILocation(line: 3116, column: 6, scope: !8537)
!8587 = !DILocation(line: 3118, column: 12, scope: !8538)
!8588 = !DILocation(line: 0, scope: !8538)
!8589 = !DILocation(line: 3119, column: 4, scope: !8528)
!8590 = !DILocation(line: 3121, column: 11, scope: !8528)
!8591 = !DILocation(line: 3122, column: 11, scope: !8528)
!8592 = !DILocation(line: 3123, column: 17, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3123, column: 8)
!8594 = !DILocation(line: 3123, column: 14, scope: !8593)
!8595 = !DILocation(line: 3123, column: 8, scope: !8528)
!8596 = !DILocation(line: 3125, column: 15, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 3124, column: 6)
!8598 = !DILocation(line: 3126, column: 15, scope: !8597)
!8599 = !DILocation(line: 3127, column: 6, scope: !8597)
!8600 = !DILocation(line: 3128, column: 10, scope: !8528)
!8601 = !DILocation(line: 3129, column: 4, scope: !8528)
!8602 = !DILocation(line: 3131, column: 2, scope: !8528)
!8603 = !DILocation(line: 3079, column: 41, scope: !8531)
!8604 = !DILocation(line: 3079, column: 60, scope: !8531)
!8605 = !DILocation(line: 3079, column: 3, scope: !8531)
!8606 = distinct !{!8606, !8548, !8607}
!8607 = !DILocation(line: 3132, column: 5, scope: !8532)
!8608 = !DILocation(line: 3133, column: 1, scope: !8518)
!8609 = distinct !DISubprogram(name: "assign_parm_remove_parallels", scope: !3, file: !3, line: 2571, type: !7919, scopeLine: 2572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8610)
!8610 = !{!8611, !8612, !8613}
!8611 = !DILocalVariable(name: "data", arg: 1, scope: !8609, file: !3, line: 2571, type: !4555)
!8612 = !DILocalVariable(name: "entry_parm", scope: !8609, file: !3, line: 2573, type: !765)
!8613 = !DILocalVariable(name: "parmreg", scope: !8614, file: !3, line: 2581, type: !765)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 2580, column: 5)
!8615 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2579, column: 7)
!8616 = !DILocation(line: 0, scope: !8609)
!8617 = !DILocation(line: 2573, column: 26, scope: !8609)
!8618 = !DILocation(line: 2579, column: 7, scope: !8615)
!8619 = !DILocation(line: 2579, column: 29, scope: !8615)
!8620 = !DILocation(line: 2579, column: 41, scope: !8615)
!8621 = !DILocation(line: 2579, column: 44, scope: !8615)
!8622 = !DILocation(line: 2579, column: 66, scope: !8615)
!8623 = !DILocation(line: 2579, column: 7, scope: !8609)
!8624 = !DILocation(line: 2581, column: 34, scope: !8614)
!8625 = !DILocation(line: 2581, column: 21, scope: !8614)
!8626 = !DILocation(line: 0, scope: !8614)
!8627 = !DILocation(line: 2582, column: 52, scope: !8614)
!8628 = !DILocation(line: 2583, column: 4, scope: !8614)
!8629 = !DILocation(line: 2582, column: 7, scope: !8614)
!8630 = !DILocation(line: 2585, column: 5, scope: !8614)
!8631 = !DILocation(line: 2587, column: 20, scope: !8609)
!8632 = !DILocation(line: 2588, column: 1, scope: !8609)
!8633 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !142, file: !142, line: 182, type: !8634, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8636)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{!880, !4537, !7}
!8636 = !{!8637, !8638}
!8637 = !DILocalVariable(name: "vec_", arg: 1, scope: !8633, file: !142, line: 182, type: !4537)
!8638 = !DILocalVariable(name: "ix_", arg: 2, scope: !8633, file: !142, line: 182, type: !7)
!8639 = !DILocation(line: 0, scope: !8633)
!8640 = !DILocation(line: 182, column: 1, scope: !8633)
!8641 = distinct !DISubprogram(name: "do_use_return_reg", scope: !3, file: !3, line: 4608, type: !5734, scopeLine: 4609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8642)
!8642 = !{!8643, !8644}
!8643 = !DILocalVariable(name: "reg", arg: 1, scope: !8641, file: !3, line: 4608, type: !765)
!8644 = !DILocalVariable(name: "arg", arg: 2, scope: !8641, file: !3, line: 4608, type: !754)
!8645 = !DILocation(line: 0, scope: !8641)
!8646 = !DILocation(line: 4610, column: 3, scope: !8641)
!8647 = !DILocation(line: 4611, column: 1, scope: !8641)
!8648 = distinct !DISubprogram(name: "ei_end_p", scope: !369, file: !369, line: 721, type: !8649, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8651)
!8649 = !DISubroutineType(types: !8650)
!8650 = !{!749, !6167}
!8651 = !{!8652}
!8652 = !DILocalVariable(name: "i", arg: 1, scope: !8648, file: !369, line: 721, type: !6167)
!8653 = !DILocation(line: 723, column: 22, scope: !8648)
!8654 = !DILocation(line: 723, column: 19, scope: !8648)
!8655 = !DILocation(line: 723, column: 10, scope: !8648)
!8656 = !DILocation(line: 723, column: 3, scope: !8648)
!8657 = distinct !DISubprogram(name: "ei_edge", scope: !369, file: !369, line: 752, type: !8658, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8660)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{!1315, !6167}
!8660 = !{!8661}
!8661 = !DILocalVariable(name: "i", arg: 1, scope: !8657, file: !369, line: 752, type: !6167)
!8662 = !DILocation(line: 754, column: 10, scope: !8657)
!8663 = !DILocation(line: 754, column: 3, scope: !8657)
!8664 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !369, file: !369, line: 150, type: !8665, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8669)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{!7, !8667}
!8667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8668, size: 64)
!8668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!8669 = !{!8670}
!8670 = !DILocalVariable(name: "vec_", arg: 1, scope: !8664, file: !369, line: 150, type: !8667)
!8671 = !DILocation(line: 0, scope: !8664)
!8672 = !DILocation(line: 150, column: 1, scope: !8664)
!8673 = distinct !DISubprogram(name: "ei_container", scope: !369, file: !369, line: 685, type: !8674, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!1303, !6167}
!8676 = !{!8677}
!8677 = !DILocalVariable(name: "i", arg: 1, scope: !8673, file: !369, line: 685, type: !6167)
!8678 = !DILocation(line: 687, column: 3, scope: !8673)
!8679 = !DILocation(line: 688, column: 10, scope: !8673)
!8680 = !DILocation(line: 688, column: 3, scope: !8673)
!8681 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !369, file: !369, line: 150, type: !8682, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!1315, !8667, !7}
!8684 = !{!8685, !8686}
!8685 = !DILocalVariable(name: "vec_", arg: 1, scope: !8681, file: !369, line: 150, type: !8667)
!8686 = !DILocalVariable(name: "ix_", arg: 2, scope: !8681, file: !369, line: 150, type: !7)
!8687 = !DILocation(line: 0, scope: !8681)
!8688 = !DILocation(line: 150, column: 1, scope: !8681)
!8689 = distinct !DISubprogram(name: "thread_prologue_and_epilogue_insns", scope: !3, file: !3, line: 5008, type: !2749, scopeLine: 5009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8690)
!8690 = !{!8691, !8692, !8693, !8694, !8695, !8696, !8699, !8700, !8703, !8707, !8708, !8712, !8713, !8714, !8718, !8719, !8722, !8723}
!8691 = !DILocalVariable(name: "inserted", scope: !8689, file: !3, line: 5010, type: !750)
!8692 = !DILocalVariable(name: "e", scope: !8689, file: !3, line: 5011, type: !1315)
!8693 = !DILocalVariable(name: "seq", scope: !8689, file: !3, line: 5013, type: !765)
!8694 = !DILocalVariable(name: "epilogue_end", scope: !8689, file: !3, line: 5016, type: !765)
!8695 = !DILocalVariable(name: "ei", scope: !8689, file: !3, line: 5018, type: !6167)
!8696 = !DILocalVariable(name: "last", scope: !8697, file: !3, line: 5077, type: !1298)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 5070, column: 5)
!8698 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5069, column: 7)
!8699 = !DILocalVariable(name: "label", scope: !8697, file: !3, line: 5078, type: !765)
!8700 = !DILocalVariable(name: "ei2", scope: !8701, file: !3, line: 5098, type: !6167)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 5097, column: 2)
!8702 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5096, column: 11)
!8703 = !DILocalVariable(name: "bb", scope: !8704, file: !3, line: 5102, type: !1298)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 5101, column: 6)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 5100, column: 4)
!8706 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5100, column: 4)
!8707 = !DILocalVariable(name: "jump", scope: !8704, file: !3, line: 5103, type: !765)
!8708 = !DILocalVariable(name: "prev", scope: !8709, file: !3, line: 5180, type: !765)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 5179, column: 5)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 5178, column: 3)
!8711 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5178, column: 3)
!8712 = !DILocalVariable(name: "last", scope: !8709, file: !3, line: 5180, type: !765)
!8713 = !DILocalVariable(name: "trial", scope: !8709, file: !3, line: 5180, type: !765)
!8714 = !DILocalVariable(name: "bb", scope: !8715, file: !3, line: 5269, type: !1298)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 5268, column: 5)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 5267, column: 3)
!8717 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5267, column: 3)
!8718 = !DILocalVariable(name: "insn", scope: !8715, file: !3, line: 5270, type: !765)
!8719 = !DILocalVariable(name: "insn", scope: !8720, file: !3, line: 5299, type: !765)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 5298, column: 5)
!8721 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5297, column: 7)
!8722 = !DILocalVariable(name: "next", scope: !8720, file: !3, line: 5299, type: !765)
!8723 = !DILabel(scope: !8689, name: "epilogue_done", file: !3, line: 5248)
!8724 = !DILocation(line: 0, scope: !8689)
!8725 = !DILocation(line: 5011, column: 3, scope: !8689)
!8726 = !DILocation(line: 5018, column: 3, scope: !8689)
!8727 = !DILocation(line: 5020, column: 23, scope: !8689)
!8728 = !DILocation(line: 5020, column: 3, scope: !8689)
!8729 = !DILocation(line: 5024, column: 7, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 5023, column: 5)
!8731 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5022, column: 7)
!8732 = !DILocation(line: 5025, column: 13, scope: !8730)
!8733 = !DILocation(line: 5026, column: 7, scope: !8730)
!8734 = !DILocation(line: 5030, column: 17, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 5030, column: 11)
!8736 = !DILocation(line: 5030, column: 11, scope: !8735)
!8737 = !DILocation(line: 5030, column: 25, scope: !8735)
!8738 = !DILocation(line: 5030, column: 28, scope: !8735)
!8739 = !DILocation(line: 5030, column: 11, scope: !8730)
!8740 = !DILocation(line: 5031, column: 12, scope: !8735)
!8741 = !DILocation(line: 5031, column: 2, scope: !8735)
!8742 = !DILocation(line: 5034, column: 7, scope: !8730)
!8743 = !DILocation(line: 5035, column: 7, scope: !8730)
!8744 = !DILocation(line: 5041, column: 17, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 5041, column: 11)
!8746 = !DILocation(line: 5041, column: 11, scope: !8745)
!8747 = !DILocation(line: 5041, column: 11, scope: !8730)
!8748 = !DILocation(line: 5042, column: 20, scope: !8745)
!8749 = !DILocation(line: 5042, column: 9, scope: !8745)
!8750 = !DILocation(line: 5045, column: 13, scope: !8730)
!8751 = !DILocation(line: 5046, column: 7, scope: !8730)
!8752 = !DILocation(line: 5047, column: 31, scope: !8730)
!8753 = !DILocation(line: 5047, column: 7, scope: !8730)
!8754 = !DILocation(line: 5052, column: 7, scope: !8730)
!8755 = !DILocation(line: 5054, column: 51, scope: !8730)
!8756 = !DILocation(line: 5054, column: 33, scope: !8730)
!8757 = !DILocation(line: 5054, column: 7, scope: !8730)
!8758 = !DILocation(line: 5061, column: 3, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5061, column: 3)
!8760 = !DILocation(line: 0, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 5061, column: 3)
!8762 = !DILocation(line: 5061, column: 3, scope: !8761)
!8763 = !DILocation(line: 5064, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5064, column: 7)
!8765 = !DILocation(line: 5062, column: 10, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 5062, column: 9)
!8767 = !DILocation(line: 5062, column: 13, scope: !8766)
!8768 = !DILocation(line: 5062, column: 19, scope: !8766)
!8769 = !DILocation(line: 5062, column: 32, scope: !8766)
!8770 = !DILocation(line: 5062, column: 9, scope: !8761)
!8771 = distinct !{!8771, !8758, !8772}
!8772 = !DILocation(line: 5063, column: 7, scope: !8759)
!8773 = !DILocation(line: 5064, column: 9, scope: !8764)
!8774 = !DILocation(line: 5064, column: 7, scope: !8689)
!8775 = !DILocation(line: 5067, column: 23, scope: !8689)
!8776 = !DILocation(line: 5067, column: 3, scope: !8689)
!8777 = !DILocation(line: 5069, column: 7, scope: !8698)
!8778 = !DILocation(line: 5069, column: 16, scope: !8698)
!8779 = !DILocation(line: 5069, column: 19, scope: !8698)
!8780 = !DILocation(line: 5069, column: 7, scope: !8689)
!8781 = !DILocation(line: 5080, column: 7, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5080, column: 7)
!8783 = !DILocation(line: 5080, column: 7, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 5080, column: 7)
!8785 = !DILocation(line: 5083, column: 11, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5083, column: 11)
!8787 = !DILocation(line: 5081, column: 6, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 5081, column: 6)
!8789 = !DILocation(line: 5081, column: 9, scope: !8788)
!8790 = !DILocation(line: 5081, column: 15, scope: !8788)
!8791 = !DILocation(line: 5081, column: 6, scope: !8784)
!8792 = distinct !{!8792, !8781, !8793}
!8793 = !DILocation(line: 5082, column: 4, scope: !8782)
!8794 = !DILocation(line: 5083, column: 13, scope: !8786)
!8795 = !DILocation(line: 5083, column: 11, scope: !8697)
!8796 = !DILocation(line: 5085, column: 17, scope: !8697)
!8797 = !DILocation(line: 0, scope: !8697)
!8798 = !DILocation(line: 5088, column: 15, scope: !8697)
!8799 = !DILocation(line: 5089, column: 7, scope: !8697)
!8800 = !DILocation(line: 5089, column: 14, scope: !8697)
!8801 = !DILocation(line: 5089, column: 20, scope: !8697)
!8802 = !DILocation(line: 5089, column: 24, scope: !8697)
!8803 = !DILocation(line: 5091, column: 8, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 5091, column: 8)
!8805 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5090, column: 2)
!8806 = !DILocation(line: 5091, column: 8, scope: !8805)
!8807 = !DILocation(line: 5093, column: 12, scope: !8805)
!8808 = distinct !{!8808, !8799, !8809}
!8809 = !DILocation(line: 5094, column: 2, scope: !8697)
!8810 = !DILocation(line: 5096, column: 11, scope: !8702)
!8811 = !DILocation(line: 5096, column: 26, scope: !8702)
!8812 = !DILocation(line: 5096, column: 35, scope: !8702)
!8813 = !DILocation(line: 5096, column: 38, scope: !8702)
!8814 = !DILocation(line: 5096, column: 11, scope: !8697)
!8815 = !DILocation(line: 5098, column: 4, scope: !8701)
!8816 = !DILocation(line: 5100, column: 15, scope: !8706)
!8817 = !DILocation(line: 0, scope: !8705)
!8818 = !DILocation(line: 5100, column: 9, scope: !8706)
!8819 = !DILocation(line: 5100, column: 44, scope: !8705)
!8820 = !DILocation(line: 5100, column: 42, scope: !8705)
!8821 = !DILocation(line: 5100, column: 4, scope: !8706)
!8822 = !DILocation(line: 5102, column: 28, scope: !8704)
!8823 = !DILocation(line: 0, scope: !8704)
!8824 = !DILocation(line: 5105, column: 18, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 5105, column: 12)
!8826 = !DILocation(line: 5105, column: 15, scope: !8825)
!8827 = !DILocation(line: 5105, column: 12, scope: !8704)
!8828 = !DILocation(line: 0, scope: !8701)
!8829 = !DILocation(line: 5107, column: 5, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 5106, column: 3)
!8831 = !DILocation(line: 5108, column: 5, scope: !8830)
!8832 = distinct !{!8832, !8821, !8833}
!8833 = !DILocation(line: 5153, column: 6, scope: !8706)
!8834 = !DILocation(line: 5111, column: 15, scope: !8704)
!8835 = !DILocation(line: 5112, column: 13, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 5112, column: 12)
!8837 = !DILocation(line: 5112, column: 27, scope: !8836)
!8838 = !DILocation(line: 5112, column: 30, scope: !8836)
!8839 = !DILocation(line: 5112, column: 48, scope: !8836)
!8840 = !DILocation(line: 5112, column: 12, scope: !8704)
!8841 = !DILocation(line: 5114, column: 5, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 5113, column: 3)
!8843 = !DILocation(line: 5115, column: 5, scope: !8842)
!8844 = !DILocation(line: 5120, column: 12, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 5120, column: 12)
!8846 = !DILocation(line: 5120, column: 12, scope: !8704)
!8847 = !DILocation(line: 5122, column: 5, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 5121, column: 3)
!8849 = !DILocation(line: 5123, column: 5, scope: !8848)
!8850 = !DILocation(line: 5124, column: 3, scope: !8848)
!8851 = !DILocation(line: 5128, column: 17, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 5128, column: 17)
!8853 = !DILocation(line: 5128, column: 17, scope: !8845)
!8854 = !DILocation(line: 5130, column: 11, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 5130, column: 9)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 5129, column: 3)
!8857 = !DILocation(line: 5130, column: 9, scope: !8856)
!8858 = !DILocation(line: 5132, column: 9, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 5131, column: 7)
!8860 = !DILocation(line: 5133, column: 9, scope: !8859)
!8861 = !DILocation(line: 5139, column: 9, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 5139, column: 9)
!8863 = !DILocation(line: 5139, column: 9, scope: !8856)
!8864 = !DILocation(line: 5141, column: 9, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 5140, column: 7)
!8866 = !DILocation(line: 5142, column: 9, scope: !8865)
!8867 = !DILocation(line: 5147, column: 5, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 5146, column: 3)
!8869 = !DILocation(line: 5148, column: 5, scope: !8868)
!8870 = !DILocation(line: 5152, column: 28, scope: !8704)
!8871 = !DILocation(line: 5152, column: 31, scope: !8704)
!8872 = !DILocation(line: 5152, column: 8, scope: !8704)
!8873 = !DILocation(line: 5153, column: 6, scope: !8705)
!8874 = !DILocation(line: 5158, column: 24, scope: !8701)
!8875 = !DILocation(line: 5158, column: 4, scope: !8701)
!8876 = !DILocation(line: 5159, column: 4, scope: !8701)
!8877 = !DILocation(line: 5160, column: 19, scope: !8701)
!8878 = !DILocation(line: 5161, column: 4, scope: !8701)
!8879 = !DILocation(line: 5161, column: 29, scope: !8701)
!8880 = !DILocation(line: 5161, column: 35, scope: !8701)
!8881 = !DILocation(line: 5163, column: 2, scope: !8702)
!8882 = !DILocation(line: 5016, column: 7, scope: !8689)
!8883 = !DILocation(line: 5170, column: 22, scope: !8689)
!8884 = !DILocation(line: 5178, column: 3, scope: !8711)
!8885 = !DILocation(line: 5178, column: 3, scope: !8710)
!8886 = !DILocation(line: 5182, column: 11, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 5182, column: 11)
!8888 = !DILocation(line: 5182, column: 14, scope: !8887)
!8889 = !DILocation(line: 5182, column: 20, scope: !8887)
!8890 = !DILocation(line: 5182, column: 11, scope: !8709)
!8891 = !DILocation(line: 5184, column: 14, scope: !8709)
!8892 = !DILocation(line: 0, scope: !8709)
!8893 = !DILocation(line: 5185, column: 12, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 5185, column: 11)
!8895 = !DILocation(line: 5185, column: 11, scope: !8709)
!8896 = !DILocation(line: 5188, column: 14, scope: !8709)
!8897 = !DILocation(line: 5189, column: 26, scope: !8709)
!8898 = !DILocation(line: 5189, column: 15, scope: !8709)
!8899 = !DILocation(line: 5190, column: 17, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 5190, column: 11)
!8901 = !DILocation(line: 5190, column: 11, scope: !8709)
!8902 = !DILocation(line: 5193, column: 21, scope: !8709)
!8903 = !DILocation(line: 5193, column: 39, scope: !8709)
!8904 = !DILocation(line: 5193, column: 7, scope: !8709)
!8905 = !DILocation(line: 5194, column: 7, scope: !8709)
!8906 = !DILocation(line: 5195, column: 5, scope: !8710)
!8907 = distinct !{!8907, !8884, !8908}
!8908 = !DILocation(line: 5195, column: 5, scope: !8711)
!8909 = !DILocation(line: 5203, column: 3, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5203, column: 3)
!8911 = !DILocation(line: 5203, column: 3, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 5203, column: 3)
!8913 = !DILocation(line: 5206, column: 7, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5206, column: 7)
!8915 = !DILocation(line: 5204, column: 9, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 5204, column: 9)
!8917 = !DILocation(line: 5204, column: 12, scope: !8916)
!8918 = !DILocation(line: 5204, column: 18, scope: !8916)
!8919 = !DILocation(line: 5204, column: 9, scope: !8912)
!8920 = distinct !{!8920, !8909, !8921}
!8921 = !DILocation(line: 5205, column: 7, scope: !8910)
!8922 = !DILocation(line: 5206, column: 9, scope: !8914)
!8923 = !DILocation(line: 5206, column: 7, scope: !8689)
!8924 = !DILocation(line: 5212, column: 7, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 5211, column: 5)
!8926 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5210, column: 7)
!8927 = !DILocation(line: 5213, column: 22, scope: !8925)
!8928 = !DILocation(line: 5214, column: 13, scope: !8925)
!8929 = !DILocation(line: 5215, column: 7, scope: !8925)
!8930 = !DILocation(line: 5218, column: 7, scope: !8925)
!8931 = !DILocation(line: 5219, column: 31, scope: !8925)
!8932 = !DILocation(line: 5219, column: 7, scope: !8925)
!8933 = !DILocation(line: 5221, column: 13, scope: !8925)
!8934 = !DILocation(line: 5222, column: 7, scope: !8925)
!8935 = !DILocation(line: 5224, column: 33, scope: !8925)
!8936 = !DILocation(line: 5224, column: 7, scope: !8925)
!8937 = !DILocation(line: 5210, column: 7, scope: !8926)
!8938 = !DILocation(line: 5248, column: 1, scope: !8689)
!8939 = !DILocation(line: 5249, column: 3, scope: !8689)
!8940 = !DILocation(line: 5253, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 5252, column: 5)
!8942 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 5251, column: 7)
!8943 = !DILocation(line: 5257, column: 7, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 5257, column: 7)
!8945 = !DILocation(line: 5257, column: 7, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 5257, column: 7)
!8947 = !DILocation(line: 5259, column: 10, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 5259, column: 8)
!8949 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 5258, column: 2)
!8950 = !DILocation(line: 5259, column: 13, scope: !8948)
!8951 = !DILocation(line: 5259, column: 19, scope: !8948)
!8952 = !DILocation(line: 5259, column: 36, scope: !8948)
!8953 = !DILocation(line: 5260, column: 8, scope: !8948)
!8954 = !DILocation(line: 5260, column: 25, scope: !8948)
!8955 = !DILocation(line: 5260, column: 11, scope: !8948)
!8956 = !DILocation(line: 5259, column: 8, scope: !8949)
!8957 = !DILocation(line: 5261, column: 6, scope: !8948)
!8958 = !DILocation(line: 5261, column: 9, scope: !8948)
!8959 = !DILocation(line: 5261, column: 15, scope: !8948)
!8960 = distinct !{!8960, !8943, !8961}
!8961 = !DILocation(line: 5262, column: 2, scope: !8944)
!8962 = !DILocation(line: 5267, column: 13, scope: !8717)
!8963 = !DILocation(line: 5267, column: 8, scope: !8717)
!8964 = !DILocation(line: 5267, column: 52, scope: !8716)
!8965 = !DILocation(line: 5267, column: 50, scope: !8716)
!8966 = !DILocation(line: 5267, column: 3, scope: !8717)
!8967 = !DILocation(line: 5269, column: 27, scope: !8715)
!8968 = !DILocation(line: 0, scope: !8715)
!8969 = !DILocation(line: 5270, column: 18, scope: !8715)
!8970 = !DILocation(line: 5272, column: 12, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 5272, column: 11)
!8972 = !DILocation(line: 5273, column: 4, scope: !8971)
!8973 = !DILocation(line: 5273, column: 9, scope: !8971)
!8974 = !DILocation(line: 5272, column: 11, scope: !8715)
!8975 = !DILocation(line: 5275, column: 4, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 5274, column: 2)
!8977 = !DILocation(line: 5276, column: 4, scope: !8976)
!8978 = distinct !{!8978, !8966, !8979}
!8979 = !DILocation(line: 5293, column: 5, scope: !8717)
!8980 = !DILocation(line: 5279, column: 7, scope: !8715)
!8981 = !DILocation(line: 5280, column: 7, scope: !8715)
!8982 = !DILocation(line: 5281, column: 18, scope: !8715)
!8983 = !DILocation(line: 5281, column: 7, scope: !8715)
!8984 = !DILocation(line: 5282, column: 13, scope: !8715)
!8985 = !DILocation(line: 5283, column: 7, scope: !8715)
!8986 = !DILocation(line: 5288, column: 7, scope: !8715)
!8987 = !DILocation(line: 5289, column: 31, scope: !8715)
!8988 = !DILocation(line: 5289, column: 7, scope: !8715)
!8989 = !DILocation(line: 5291, column: 7, scope: !8715)
!8990 = !DILocation(line: 5292, column: 7, scope: !8715)
!8991 = !DILocation(line: 5293, column: 5, scope: !8716)
!8992 = !DILocation(line: 5297, column: 7, scope: !8721)
!8993 = !DILocation(line: 5297, column: 7, scope: !8689)
!8994 = !DILocation(line: 0, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 5309, column: 8)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 5307, column: 2)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 5306, column: 7)
!8998 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 5306, column: 7)
!8999 = !DILocation(line: 5306, column: 7, scope: !8998)
!9000 = !DILocation(line: 0, scope: !8998)
!9001 = !DILocation(line: 0, scope: !8720)
!9002 = !DILocation(line: 5308, column: 11, scope: !8996)
!9003 = !DILocation(line: 5309, column: 8, scope: !8995)
!9004 = !DILocation(line: 5310, column: 8, scope: !8995)
!9005 = !DILocation(line: 5310, column: 12, scope: !8995)
!9006 = !DILocation(line: 5310, column: 29, scope: !8995)
!9007 = !DILocation(line: 5309, column: 8, scope: !8996)
!9008 = !DILocation(line: 5311, column: 33, scope: !8995)
!9009 = !DILocation(line: 5311, column: 6, scope: !8995)
!9010 = !DILocation(line: 5306, column: 7, scope: !8997)
!9011 = distinct !{!9011, !8999, !9012}
!9012 = !DILocation(line: 5312, column: 2, scope: !8998)
!9013 = !DILocation(line: 5318, column: 22, scope: !8689)
!9014 = !DILocation(line: 5319, column: 3, scope: !8689)
!9015 = !DILocation(line: 5320, column: 1, scope: !8689)
!9016 = distinct !DISubprogram(name: "record_insns", scope: !3, file: !3, line: 4915, type: !9017, scopeLine: 4916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9020)
!9017 = !DISubroutineType(types: !9018)
!9018 = !{null, !765, !765, !9019}
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!9020 = !{!9021, !9022, !9023, !9024, !9025, !9026}
!9021 = !DILocalVariable(name: "insns", arg: 1, scope: !9016, file: !3, line: 4915, type: !765)
!9022 = !DILocalVariable(name: "end", arg: 2, scope: !9016, file: !3, line: 4915, type: !765)
!9023 = !DILocalVariable(name: "hashp", arg: 3, scope: !9016, file: !3, line: 4915, type: !9019)
!9024 = !DILocalVariable(name: "tmp", scope: !9016, file: !3, line: 4917, type: !765)
!9025 = !DILocalVariable(name: "hash", scope: !9016, file: !3, line: 4918, type: !1210)
!9026 = !DILocalVariable(name: "slot", scope: !9027, file: !3, line: 4926, type: !1234)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 4925, column: 5)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 4924, column: 3)
!9029 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4924, column: 3)
!9030 = !DILocation(line: 0, scope: !9016)
!9031 = !DILocation(line: 4918, column: 17, scope: !9016)
!9032 = !DILocation(line: 4920, column: 12, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4920, column: 7)
!9034 = !DILocation(line: 4920, column: 7, scope: !9016)
!9035 = !DILocation(line: 4922, column: 9, scope: !9033)
!9036 = !DILocation(line: 4921, column: 12, scope: !9033)
!9037 = !DILocation(line: 4921, column: 5, scope: !9033)
!9038 = !DILocation(line: 4924, column: 8, scope: !9029)
!9039 = !DILocation(line: 0, scope: !9029)
!9040 = !DILocation(line: 4924, column: 25, scope: !9028)
!9041 = !DILocation(line: 4924, column: 3, scope: !9029)
!9042 = !DILocation(line: 4926, column: 43, scope: !9027)
!9043 = !DILocation(line: 4926, column: 21, scope: !9027)
!9044 = !DILocation(line: 0, scope: !9027)
!9045 = !DILocation(line: 4927, column: 7, scope: !9027)
!9046 = !DILocation(line: 4928, column: 13, scope: !9027)
!9047 = !DILocation(line: 4924, column: 39, scope: !9028)
!9048 = !DILocation(line: 4924, column: 3, scope: !9028)
!9049 = distinct !{!9049, !9041, !9050}
!9050 = !DILocation(line: 4929, column: 5, scope: !9029)
!9051 = !DILocation(line: 4930, column: 1, scope: !9016)
!9052 = distinct !DISubprogram(name: "set_insn_locators", scope: !3, file: !3, line: 4951, type: !9053, scopeLine: 4952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9055)
!9053 = !DISubroutineType(types: !9054)
!9054 = !{null, !765, !750}
!9055 = !{!9056, !9057}
!9056 = !DILocalVariable(name: "insn", arg: 1, scope: !9052, file: !3, line: 4951, type: !765)
!9057 = !DILocalVariable(name: "loc", arg: 2, scope: !9052, file: !3, line: 4951, type: !750)
!9058 = !DILocation(line: 0, scope: !9052)
!9059 = !DILocation(line: 4953, column: 3, scope: !9052)
!9060 = !DILocation(line: 4953, column: 15, scope: !9052)
!9061 = !DILocation(line: 4955, column: 11, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 4955, column: 11)
!9063 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 4954, column: 5)
!9064 = !DILocation(line: 4955, column: 11, scope: !9063)
!9065 = !DILocation(line: 4956, column: 2, scope: !9062)
!9066 = !DILocation(line: 4956, column: 22, scope: !9062)
!9067 = !DILocation(line: 4957, column: 14, scope: !9063)
!9068 = distinct !{!9068, !9059, !9069}
!9069 = !DILocation(line: 4958, column: 5, scope: !9052)
!9070 = !DILocation(line: 4959, column: 1, scope: !9052)
!9071 = distinct !DISubprogram(name: "single_succ_p", scope: !369, file: !369, line: 626, type: !9072, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9077)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!749, !9074}
!9074 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !766, line: 112, baseType: !9075)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 64)
!9076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!9077 = !{!9078}
!9078 = !DILocalVariable(name: "bb", arg: 1, scope: !9071, file: !369, line: 626, type: !9074)
!9079 = !DILocation(line: 0, scope: !9071)
!9080 = !DILocation(line: 628, column: 10, scope: !9071)
!9081 = !DILocation(line: 628, column: 33, scope: !9071)
!9082 = !DILocation(line: 628, column: 3, scope: !9071)
!9083 = distinct !DISubprogram(name: "single_succ_edge", scope: !369, file: !369, line: 643, type: !9084, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9086)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!1315, !9074}
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "bb", arg: 1, scope: !9083, file: !369, line: 643, type: !9074)
!9088 = !DILocation(line: 0, scope: !9083)
!9089 = !DILocation(line: 645, column: 3, scope: !9083)
!9090 = !DILocation(line: 646, column: 10, scope: !9083)
!9091 = !DILocation(line: 646, column: 3, scope: !9083)
!9092 = distinct !DISubprogram(name: "ei_safe_edge", scope: !369, file: !369, line: 761, type: !8658, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9093)
!9093 = !{!9094}
!9094 = !DILocalVariable(name: "i", arg: 1, scope: !9092, file: !369, line: 761, type: !6167)
!9095 = !DILocation(line: 763, column: 11, scope: !9092)
!9096 = !DILocation(line: 763, column: 10, scope: !9092)
!9097 = !DILocation(line: 763, column: 26, scope: !9092)
!9098 = !DILocation(line: 763, column: 3, scope: !9092)
!9099 = distinct !DISubprogram(name: "emit_return_into_block", scope: !3, file: !3, line: 4997, type: !9100, scopeLine: 4998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9102)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !1298}
!9102 = !{!9103}
!9103 = !DILocalVariable(name: "bb", arg: 1, scope: !9099, file: !3, line: 4997, type: !1298)
!9104 = !DILocation(line: 0, scope: !9099)
!9105 = !DILocation(line: 4999, column: 25, scope: !9099)
!9106 = !DILocation(line: 4999, column: 40, scope: !9099)
!9107 = !DILocation(line: 4999, column: 3, scope: !9099)
!9108 = !DILocation(line: 5000, column: 1, scope: !9099)
!9109 = distinct !DISubprogram(name: "match_asm_constraints_1", scope: !3, file: !3, line: 5656, type: !9110, scopeLine: 5657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9112)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{null, !765, !3976, !750}
!9112 = !{!9113, !9114, !9115, !9116, !9117, !9118, !9119, !9120, !9121, !9122, !9126, !9127, !9128, !9129, !9130, !9131}
!9113 = !DILocalVariable(name: "insn", arg: 1, scope: !9109, file: !3, line: 5656, type: !765)
!9114 = !DILocalVariable(name: "p_sets", arg: 2, scope: !9109, file: !3, line: 5656, type: !3976)
!9115 = !DILocalVariable(name: "noutputs", arg: 3, scope: !9109, file: !3, line: 5656, type: !750)
!9116 = !DILocalVariable(name: "i", scope: !9109, file: !3, line: 5658, type: !750)
!9117 = !DILocalVariable(name: "changed", scope: !9109, file: !3, line: 5659, type: !749)
!9118 = !DILocalVariable(name: "op", scope: !9109, file: !3, line: 5660, type: !765)
!9119 = !DILocalVariable(name: "ninputs", scope: !9109, file: !3, line: 5661, type: !750)
!9120 = !DILocalVariable(name: "inputs", scope: !9109, file: !3, line: 5662, type: !793)
!9121 = !DILocalVariable(name: "output_matched", scope: !9109, file: !3, line: 5663, type: !748)
!9122 = !DILocalVariable(name: "input", scope: !9123, file: !3, line: 5668, type: !765)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 5667, column: 5)
!9124 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 5666, column: 3)
!9125 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 5666, column: 3)
!9126 = !DILocalVariable(name: "output", scope: !9123, file: !3, line: 5668, type: !765)
!9127 = !DILocalVariable(name: "insns", scope: !9123, file: !3, line: 5668, type: !765)
!9128 = !DILocalVariable(name: "constraint", scope: !9123, file: !3, line: 5669, type: !755)
!9129 = !DILocalVariable(name: "end", scope: !9123, file: !3, line: 5670, type: !752)
!9130 = !DILocalVariable(name: "match", scope: !9123, file: !3, line: 5671, type: !750)
!9131 = !DILocalVariable(name: "j", scope: !9123, file: !3, line: 5671, type: !750)
!9132 = !DILocation(line: 0, scope: !9109)
!9133 = !DILocation(line: 5660, column: 12, scope: !9109)
!9134 = !DILocation(line: 5661, column: 17, scope: !9109)
!9135 = !DILocation(line: 5663, column: 26, scope: !9109)
!9136 = !DILocation(line: 5665, column: 3, scope: !9109)
!9137 = !DILocation(line: 0, scope: !9123)
!9138 = !DILocation(line: 5666, column: 8, scope: !9125)
!9139 = !DILocation(line: 5659, column: 8, scope: !9109)
!9140 = !DILocation(line: 5666, column: 17, scope: !9124)
!9141 = !DILocation(line: 5666, column: 3, scope: !9125)
!9142 = !DILocation(line: 5669, column: 32, scope: !9123)
!9143 = !DILocation(line: 5670, column: 7, scope: !9123)
!9144 = !DILocation(line: 5673, column: 11, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5673, column: 11)
!9146 = !DILocation(line: 5673, column: 23, scope: !9145)
!9147 = !DILocation(line: 5674, column: 12, scope: !9145)
!9148 = !DILocation(line: 5673, column: 11, scope: !9123)
!9149 = !DILocation(line: 5676, column: 15, scope: !9123)
!9150 = !DILocation(line: 5677, column: 11, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5677, column: 11)
!9152 = !DILocation(line: 5677, column: 15, scope: !9151)
!9153 = !DILocation(line: 5677, column: 11, scope: !9123)
!9154 = !DILocation(line: 5680, column: 7, scope: !9123)
!9155 = !DILocation(line: 5681, column: 16, scope: !9123)
!9156 = !DILocation(line: 5682, column: 15, scope: !9123)
!9157 = !DILocation(line: 5684, column: 13, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5684, column: 11)
!9159 = !DILocation(line: 5685, column: 4, scope: !9158)
!9160 = !DILocation(line: 5685, column: 7, scope: !9158)
!9161 = !DILocation(line: 5686, column: 4, scope: !9158)
!9162 = !DILocation(line: 5686, column: 8, scope: !9158)
!9163 = !DILocation(line: 5686, column: 25, scope: !9158)
!9164 = !DILocation(line: 5687, column: 8, scope: !9158)
!9165 = !DILocation(line: 5687, column: 31, scope: !9158)
!9166 = !DILocation(line: 5687, column: 28, scope: !9158)
!9167 = !DILocation(line: 5684, column: 11, scope: !9123)
!9168 = !DILocation(line: 5692, column: 12, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5692, column: 7)
!9170 = !DILocation(line: 0, scope: !9169)
!9171 = !DILocation(line: 5692, column: 21, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 5692, column: 7)
!9173 = !DILocation(line: 5692, column: 7, scope: !9169)
!9174 = !DILocation(line: 5693, column: 46, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 5693, column: 13)
!9176 = !DILocation(line: 5693, column: 13, scope: !9175)
!9177 = !DILocation(line: 5693, column: 13, scope: !9172)
!9178 = !DILocation(line: 5692, column: 33, scope: !9172)
!9179 = !DILocation(line: 5692, column: 7, scope: !9172)
!9180 = distinct !{!9180, !9173, !9181}
!9181 = !DILocation(line: 5694, column: 4, scope: !9169)
!9182 = !DILocation(line: 5695, column: 13, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5695, column: 11)
!9184 = !DILocation(line: 5695, column: 11, scope: !9123)
!9185 = !DILocation(line: 5702, column: 13, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5702, column: 11)
!9187 = !DILocation(line: 5702, column: 11, scope: !9123)
!9188 = !DILocation(line: 5704, column: 4, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 5704, column: 4)
!9190 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 5703, column: 2)
!9191 = !DILocation(line: 0, scope: !9189)
!9192 = !DILocation(line: 5704, column: 18, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 5704, column: 4)
!9194 = !DILocation(line: 5705, column: 10, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 5705, column: 10)
!9196 = !DILocation(line: 5705, column: 28, scope: !9195)
!9197 = !DILocation(line: 5705, column: 40, scope: !9195)
!9198 = !DILocation(line: 5705, column: 37, scope: !9195)
!9199 = !DILocation(line: 5705, column: 10, scope: !9193)
!9200 = !DILocation(line: 5704, column: 31, scope: !9193)
!9201 = !DILocation(line: 5704, column: 4, scope: !9193)
!9202 = distinct !{!9202, !9188, !9203}
!9203 = !DILocation(line: 5706, column: 8, scope: !9189)
!9204 = !DILocation(line: 5707, column: 10, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 5707, column: 8)
!9206 = !DILocation(line: 5707, column: 8, scope: !9190)
!9207 = !DILocation(line: 5710, column: 7, scope: !9123)
!9208 = !DILocation(line: 5710, column: 29, scope: !9123)
!9209 = !DILocation(line: 5712, column: 7, scope: !9123)
!9210 = !DILocation(line: 5713, column: 7, scope: !9123)
!9211 = !DILocation(line: 5714, column: 15, scope: !9123)
!9212 = !DILocation(line: 5715, column: 7, scope: !9123)
!9213 = !DILocation(line: 5716, column: 7, scope: !9123)
!9214 = !DILocation(line: 5740, column: 12, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5740, column: 7)
!9216 = !DILocation(line: 0, scope: !9215)
!9217 = !DILocation(line: 5740, column: 21, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 5740, column: 7)
!9219 = !DILocation(line: 5740, column: 7, scope: !9215)
!9220 = !DILocation(line: 5745, column: 7, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5745, column: 7)
!9222 = !DILocation(line: 5741, column: 20, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 5741, column: 6)
!9224 = !DILocation(line: 5741, column: 7, scope: !9223)
!9225 = !DILocation(line: 5742, column: 6, scope: !9223)
!9226 = !DILocation(line: 5742, column: 41, scope: !9223)
!9227 = !DILocation(line: 5742, column: 9, scope: !9223)
!9228 = !DILocation(line: 5741, column: 6, scope: !9218)
!9229 = !DILocation(line: 5743, column: 40, scope: !9223)
!9230 = !DILocation(line: 5743, column: 27, scope: !9223)
!9231 = !DILocation(line: 5743, column: 4, scope: !9223)
!9232 = !DILocation(line: 5743, column: 25, scope: !9223)
!9233 = !DILocation(line: 5740, column: 34, scope: !9218)
!9234 = !DILocation(line: 5740, column: 7, scope: !9218)
!9235 = distinct !{!9235, !9219, !9236}
!9236 = !DILocation(line: 5744, column: 25, scope: !9215)
!9237 = !DILocation(line: 0, scope: !9221)
!9238 = !DILocation(line: 5745, column: 21, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 5745, column: 7)
!9240 = !DILocation(line: 5746, column: 38, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 5746, column: 6)
!9242 = !DILocation(line: 5746, column: 6, scope: !9241)
!9243 = !DILocation(line: 5746, column: 6, scope: !9239)
!9244 = !DILocation(line: 5747, column: 41, scope: !9241)
!9245 = !DILocation(line: 5747, column: 28, scope: !9241)
!9246 = !DILocation(line: 5747, column: 26, scope: !9241)
!9247 = !DILocation(line: 5747, column: 4, scope: !9241)
!9248 = !DILocation(line: 5745, column: 33, scope: !9239)
!9249 = !DILocation(line: 5745, column: 7, scope: !9239)
!9250 = distinct !{!9250, !9220, !9251}
!9251 = !DILocation(line: 5748, column: 26, scope: !9221)
!9252 = !DILocation(line: 5751, column: 5, scope: !9124)
!9253 = !DILocation(line: 5666, column: 29, scope: !9124)
!9254 = !DILocation(line: 5666, column: 3, scope: !9124)
!9255 = distinct !{!9255, !9141, !9256}
!9256 = !DILocation(line: 5751, column: 5, scope: !9125)
!9257 = !DILocation(line: 5753, column: 7, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 5753, column: 7)
!9259 = !DILocation(line: 5753, column: 7, scope: !9109)
!9260 = !DILocation(line: 5754, column: 5, scope: !9258)
!9261 = !DILocation(line: 5755, column: 1, scope: !9109)
