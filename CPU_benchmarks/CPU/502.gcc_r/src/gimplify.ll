; ModuleID = 'gimplify.bc'
source_filename = "gimplify.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gimplify_ctx = type { %struct.gimplify_ctx*, %struct.VEC_gimple_heap*, %union.tree_node*, %struct.gimple_seq_d*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_heap*, %struct.htab*, i32, i8, i8, i8 }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gimplify_omp_ctx = type { %struct.gimplify_omp_ctx*, %struct.splay_tree_s*, %struct.pointer_set_t*, i32, i32, i32 }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.pointer_set_t = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.processor_costs = type { i32, i32, i32, i32, [5 x i32], i32, [5 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x %struct.stringop_algs], [2 x %struct.stringop_algs], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.stringop_algs = type { i32, [4 x %struct.stringop_strategy] }
%struct.stringop_strategy = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_stmt_iterator = type { %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_statement_list_node = type { %struct.tree_statement_list_node*, %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.tree_constructor = type { %struct.tree_common, %struct.VEC_constructor_elt_gc* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_vec = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.gimple_temp_hash_elt = type { %union.tree_node*, %union.tree_node* }
%struct.gimplify_init_ctor_preeval_data = type { %union.tree_node*, i32 }
%struct.gimple_omp_for_iter = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@gimplify_ctxp = internal unnamed_addr global %struct.gimplify_ctx* null, align 8, !dbg !0
@.str = private unnamed_addr constant [11 x i8] c"gimplify.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@libiberty_optr = external dso_local local_unnamed_addr global i8*, align 8
@libiberty_len = external dso_local local_unnamed_addr global i64, align 8
@libiberty_nptr = external dso_local local_unnamed_addr global i8*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1
@tmp_var_id_num = internal global i32 0, align 4, !dbg !2261
@input_location = external dso_local local_unnamed_addr global i32, align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@gimplify_omp_ctxp = internal unnamed_addr global %struct.gimplify_omp_ctx* null, align 8, !dbg !2259
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.4 = private unnamed_addr constant [7 x i8] c"retval\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.5 = private unnamed_addr constant [4 x i8] c"vol\00", align 1
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@nonlocal_vlas = internal unnamed_addr global %struct.pointer_set_t* null, align 8, !dbg !2263
@flag_instrument_function_entry_exit = external dso_local local_unnamed_addr global i32, align 4
@implicit_built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@gt_ggc_r_gt_gimplify_h = dso_local local_unnamed_addr constant [1 x %struct.ggc_root_tab] zeroinitializer, align 16, !dbg !2242
@gt_pch_rs_gt_gimplify_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @tmp_var_id_num to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2256
@optimize = external dso_local local_unnamed_addr global i32, align 4
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.6 = private unnamed_addr constant [6 x i8] c"iftmp\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"too few arguments to function %<va_start%>\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"using result of function returning %<void%>\00", align 1
@flag_merge_constants = external dso_local local_unnamed_addr global i32, align 4
@.str.9 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@ix86_cost = external dso_local local_unnamed_addr global %struct.processor_costs*, align 8
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.10 = private unnamed_addr constant [12 x i8] c"saved_stack\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"invalid lvalue in asm output %d\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"impossible constraint in %<asm%>\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"non-memory input %d must stay in memory\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"memory input %d is not directly addressable\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@.str.17 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"%qE not specified in enclosing parallel\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"enclosing parallel\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"firstprivate\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"lastprivate\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"%s variable %qE is private in outer context\00", align 1
@.str.24 = private unnamed_addr constant [41 x i8] c"iteration variable %qE should be private\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"iteration variable %qE should not be firstprivate\00", align 1
@.str.26 = private unnamed_addr constant [47 x i8] c"iteration variable %qE should not be reduction\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2297, metadata !DIExpression()), !dbg !2299
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2298, metadata !DIExpression()), !dbg !2299
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2300
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2301
  ret i32 %call, !dbg !2302
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2303 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2307
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2308
  ret i32 %call, !dbg !2309
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2310 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2365, metadata !DIExpression()), !dbg !2366
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2367
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2367
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2367
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2367
  %cmp = icmp uge i8* %0, %1, !dbg !2367
  %conv1 = zext i1 %cmp to i64, !dbg !2367
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2367
  %tobool = icmp eq i64 %expval, 0, !dbg !2367
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2367

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2367
  br label %cond.end, !dbg !2367

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2367
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2367
  %2 = load i8, i8* %0, align 1, !dbg !2367
  %conv3 = zext i8 %2 to i32, !dbg !2367
  br label %cond.end, !dbg !2367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2367
  ret i32 %cond, !dbg !2368
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2371, metadata !DIExpression()), !dbg !2372
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2373
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2373
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2373
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2373
  %cmp = icmp uge i8* %0, %1, !dbg !2373
  %conv1 = zext i1 %cmp to i64, !dbg !2373
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2373
  %tobool = icmp eq i64 %expval, 0, !dbg !2373
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2373

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2373
  br label %cond.end, !dbg !2373

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2373
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2373
  %2 = load i8, i8* %0, align 1, !dbg !2373
  %conv3 = zext i8 %2 to i32, !dbg !2373
  br label %cond.end, !dbg !2373

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2373
  ret i32 %cond, !dbg !2374
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2375 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2376
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2376
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2376
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2376
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2376
  %cmp = icmp uge i8* %1, %2, !dbg !2376
  %conv1 = zext i1 %cmp to i64, !dbg !2376
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2376
  %tobool = icmp eq i64 %expval, 0, !dbg !2376
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2376

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2376
  br label %cond.end, !dbg !2376

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2376
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2376
  %3 = load i8, i8* %1, align 1, !dbg !2376
  %conv3 = zext i8 %3 to i32, !dbg !2376
  br label %cond.end, !dbg !2376

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2376
  ret i32 %cond, !dbg !2377
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2378 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2382, metadata !DIExpression()), !dbg !2383
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2384
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2385
  ret i32 %call, !dbg !2386
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2391, metadata !DIExpression()), !dbg !2393
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2392, metadata !DIExpression()), !dbg !2393
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2394
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2394
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2394
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2394
  %cmp = icmp uge i8* %0, %1, !dbg !2394
  %conv1 = zext i1 %cmp to i64, !dbg !2394
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2394
  %tobool = icmp eq i64 %expval, 0, !dbg !2394
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2394

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2394
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2394
  br label %cond.end, !dbg !2394

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2394
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2394
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2394
  store i8 %conv2, i8* %0, align 1, !dbg !2394
  %conv6 = and i32 %__c, 255, !dbg !2394
  br label %cond.end, !dbg !2394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2394
  ret i32 %cond, !dbg !2395
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2399, metadata !DIExpression()), !dbg !2400
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2401
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2401
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2401
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2401
  %cmp = icmp uge i8* %0, %1, !dbg !2401
  %conv1 = zext i1 %cmp to i64, !dbg !2401
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2401
  %tobool = icmp eq i64 %expval, 0, !dbg !2401
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2401

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2401
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2401
  br label %cond.end, !dbg !2401

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2401
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2401
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2401
  store i8 %conv2, i8* %0, align 1, !dbg !2401
  %conv6 = and i32 %__c, 255, !dbg !2401
  br label %cond.end, !dbg !2401

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2401
  ret i32 %cond, !dbg !2402
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2403 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2405, metadata !DIExpression()), !dbg !2406
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2407
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2407
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2407
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2407
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2407
  %cmp = icmp uge i8* %1, %2, !dbg !2407
  %conv1 = zext i1 %cmp to i64, !dbg !2407
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2407
  %tobool = icmp eq i64 %expval, 0, !dbg !2407
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2407

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2407
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2407
  br label %cond.end, !dbg !2407

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2407
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2407
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2407
  store i8 %conv4, i8* %1, align 1, !dbg !2407
  %conv6 = and i32 %__c, 255, !dbg !2407
  br label %cond.end, !dbg !2407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2407
  ret i32 %cond, !dbg !2408
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2409 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2415, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2416, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2417, metadata !DIExpression()), !dbg !2418
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2419
  ret i64 %call, !dbg !2420
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2421 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2423, metadata !DIExpression()), !dbg !2424
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2425
  %0 = load i32, i32* %_flags, align 8, !dbg !2425
  %and = lshr i32 %0, 4, !dbg !2425
  %and.lobit = and i32 %and, 1, !dbg !2425
  ret i32 %and.lobit, !dbg !2426
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2427 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2429, metadata !DIExpression()), !dbg !2430
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2431
  %0 = load i32, i32* %_flags, align 8, !dbg !2431
  %and = lshr i32 %0, 5, !dbg !2431
  %and.lobit = and i32 %and, 1, !dbg !2431
  ret i32 %and.lobit, !dbg !2432
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2433 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2436, metadata !DIExpression()), !dbg !2437
  %__c.off = add i32 %__c, 128, !dbg !2438
  %0 = icmp ult i32 %__c.off, 384, !dbg !2438
  br i1 %0, label %cond.true, label %cond.end, !dbg !2438

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2439
  %1 = load i32*, i32** %call, align 8, !dbg !2440
  %idxprom = sext i32 %__c to i64, !dbg !2441
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2441
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2441
  br label %cond.end, !dbg !2442

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2442
  ret i32 %cond, !dbg !2443
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2444 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2446, metadata !DIExpression()), !dbg !2447
  %__c.off = add i32 %__c, 128, !dbg !2448
  %0 = icmp ult i32 %__c.off, 384, !dbg !2448
  br i1 %0, label %cond.true, label %cond.end, !dbg !2448

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2449
  %1 = load i32*, i32** %call, align 8, !dbg !2450
  %idxprom = sext i32 %__c to i64, !dbg !2451
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2451
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2451
  br label %cond.end, !dbg !2452

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2452
  ret i32 %cond, !dbg !2453
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2454 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2459, metadata !DIExpression()), !dbg !2460
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2461
  %conv = trunc i64 %call to i32, !dbg !2462
  ret i32 %conv, !dbg !2463
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2464 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2468, metadata !DIExpression()), !dbg !2469
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2470
  ret i64 %call, !dbg !2471
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2477, metadata !DIExpression()), !dbg !2478
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2479
  ret i64 %call, !dbg !2480
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2481 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2487, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2488, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2489, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2490, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2491, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 0, metadata !2492, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2493, metadata !DIExpression()), !dbg !2497
  br label %while.cond, !dbg !2498

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2499
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2493, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2492, metadata !DIExpression()), !dbg !2497
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2500
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2498

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2501
  %div = lshr i64 %add, 1, !dbg !2503
  call void @llvm.dbg.value(metadata i64 %div, metadata !2494, metadata !DIExpression()), !dbg !2497
  %mul = mul i64 %div, %__size, !dbg !2504
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2505
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2495, metadata !DIExpression()), !dbg !2497
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2506
  call void @llvm.dbg.value(metadata i32 %call, metadata !2496, metadata !DIExpression()), !dbg !2497
  %cmp1 = icmp slt i32 %call, 0, !dbg !2507
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2509

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2510
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2512

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2513
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2492, metadata !DIExpression()), !dbg !2497
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2497
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2493, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2492, metadata !DIExpression()), !dbg !2497
  br label %while.cond, !dbg !2498, !llvm.loop !2514

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2497
  ret i8* %retval.0, !dbg !2516
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2517 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2523, metadata !DIExpression()), !dbg !2524
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2525
  ret double %call, !dbg !2526
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2527 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2536, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2537, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i32 %base, metadata !2538, metadata !DIExpression()), !dbg !2539
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2540
  ret i64 %call, !dbg !2541
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2548, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2549, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %base, metadata !2550, metadata !DIExpression()), !dbg !2551
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2552
  ret i64 %call, !dbg !2553
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2565, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2566, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata i32 %base, metadata !2567, metadata !DIExpression()), !dbg !2568
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2569
  ret i64 %call, !dbg !2570
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2571 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2575, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2576, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i32 %base, metadata !2577, metadata !DIExpression()), !dbg !2578
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2579
  ret i64 %call, !dbg !2580
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2581 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2621, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2622, metadata !DIExpression()), !dbg !2623
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2624
  ret i32 %call, !dbg !2625
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2626 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2628, metadata !DIExpression()), !dbg !2630
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2629, metadata !DIExpression()), !dbg !2630
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2631
  ret i32 %call, !dbg !2632
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2633 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2637, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2638, metadata !DIExpression()), !dbg !2639
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2640
  ret i32 %call, !dbg !2641
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2642 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2646, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2647, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2648, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2649, metadata !DIExpression()), !dbg !2650
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2651
  ret i32 %call, !dbg !2652
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2653 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2657, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2658, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2659, metadata !DIExpression()), !dbg !2660
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2659, metadata !DIExpression(DW_OP_deref)), !dbg !2660
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2661
  ret i32 %call, !dbg !2662
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2663 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2667, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2668, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2669, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2670, metadata !DIExpression()), !dbg !2671
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2670, metadata !DIExpression(DW_OP_deref)), !dbg !2671
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2672
  ret i32 %call, !dbg !2673
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2674 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2698, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2699, metadata !DIExpression()), !dbg !2700
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2701
  ret i32 %call, !dbg !2702
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2703 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2705, metadata !DIExpression()), !dbg !2707
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2706, metadata !DIExpression()), !dbg !2707
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2708
  ret i32 %call, !dbg !2709
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2710 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2714, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2715, metadata !DIExpression()), !dbg !2716
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2717
  ret i32 %call, !dbg !2718
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2719 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2723, metadata !DIExpression()), !dbg !2727
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2724, metadata !DIExpression()), !dbg !2727
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2725, metadata !DIExpression()), !dbg !2727
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2726, metadata !DIExpression()), !dbg !2727
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2728
  ret i32 %call, !dbg !2729
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @mark_addressable(%union.tree_node* %x) local_unnamed_addr #5 !dbg !2730 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !2734, metadata !DIExpression()), !dbg !2735
  br label %while.cond, !dbg !2736

while.cond:                                       ; preds = %while.body, %entry
  %x.addr.0 = phi %union.tree_node* [ %x, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0, metadata !2734, metadata !DIExpression()), !dbg !2735
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %x.addr.0) #7, !dbg !2737
  %tobool = icmp eq i8 %call, 0, !dbg !2736
  br i1 %tobool, label %while.end, label %while.body, !dbg !2736

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2738
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2738
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2734, metadata !DIExpression()), !dbg !2735
  br label %while.cond, !dbg !2736, !llvm.loop !2739

while.end:                                        ; preds = %while.cond
  %x.addr.0.lcssa = phi %union.tree_node* [ %x.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa, metadata !2734, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa, metadata !2734, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa, metadata !2734, metadata !DIExpression()), !dbg !2735
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2740
  %bf.load = load i64, i64* %1, align 8, !dbg !2740
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2742
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2742
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !2743

land.lhs.true:                                    ; preds = %while.end
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !2744
  br i1 %cmp5, label %if.end, label %land.lhs.true6, !dbg !2745

land.lhs.true6:                                   ; preds = %land.lhs.true
  %cmp11 = icmp eq i64 %bf.cast1, 36, !dbg !2746
  br i1 %cmp11, label %if.end, label %return, !dbg !2747

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true, %while.end
  %bf.set = or i64 %bf.load, 262144, !dbg !2748
  store i64 %bf.set, i64* %1, align 8, !dbg !2748
  br label %return, !dbg !2749

return:                                           ; preds = %land.lhs.true6, %if.end
  ret void, !dbg !2749
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !2750 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2754, metadata !DIExpression()), !dbg !2755
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2756
  %bf.load = load i64, i64* %0, align 8, !dbg !2756
  %1 = trunc i64 %bf.load to i16, !dbg !2756
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !2757

sw.default:                                       ; preds = %entry
  br label %return, !dbg !2758

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !2760
  ret i8 %retval.0, !dbg !2761
}

; Function Attrs: nounwind uwtable
define dso_local void @push_gimplify_context(%struct.gimplify_ctx* %c) local_unnamed_addr #5 !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %c, metadata !2766, metadata !DIExpression()), !dbg !2767
  %0 = bitcast %struct.gimplify_ctx* %c to i8*, !dbg !2768
  %call = tail call i8* @memset(i8* %0, i32 0, i64 72) #6, !dbg !2769
  %1 = load i64, i64* bitcast (%struct.gimplify_ctx** @gimplify_ctxp to i64*), align 8, !dbg !2770
  %2 = bitcast %struct.gimplify_ctx* %c to i64*, !dbg !2771
  store i64 %1, i64* %2, align 8, !dbg !2771
  store %struct.gimplify_ctx* %c, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !2772
  ret void, !dbg !2773
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @pop_gimplify_context(%union.gimple_statement_d* %body) local_unnamed_addr #5 !dbg !2774 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %body, metadata !2778, metadata !DIExpression()), !dbg !2780
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !2781
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %0, metadata !2779, metadata !DIExpression()), !dbg !2780
  %tobool = icmp eq %struct.gimplify_ctx* %0, null, !dbg !2782
  br i1 %tobool, label %cond.true5, label %land.lhs.true, !dbg !2782

land.lhs.true:                                    ; preds = %entry
  %bind_expr_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !2782
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %bind_expr_stack, align 8, !dbg !2782
  %cmp = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !2782
  br i1 %cmp, label %cond.end7, label %lor.lhs.false, !dbg !2782

lor.lhs.false:                                    ; preds = %land.lhs.true
  br i1 false, label %lor.lhs.false.cond.end_crit_edge, label %cond.true, !dbg !2782

lor.lhs.false.cond.end_crit_edge:                 ; preds = %lor.lhs.false
  br label %cond.end, !dbg !2782

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !2782
  br label %cond.end, !dbg !2782

cond.end:                                         ; preds = %lor.lhs.false.cond.end_crit_edge, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ undef, %lor.lhs.false.cond.end_crit_edge ], !dbg !2782
  %call = tail call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %cond) #7, !dbg !2782
  %cmp4 = icmp eq i32 %call, 0, !dbg !2782
  br i1 %cmp4, label %cond.end7, label %cond.true5, !dbg !2782

cond.true5:                                       ; preds = %entry, %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2782
  br label %cond.end7, !dbg !2782

cond.end7:                                        ; preds = %land.lhs.true, %cond.end, %cond.true5
  %bind_expr_stack9 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !2783
  tail call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %bind_expr_stack9) #7, !dbg !2783
  %2 = bitcast %struct.gimplify_ctx* %0 to i64*, !dbg !2784
  %3 = load i64, i64* %2, align 8, !dbg !2784
  store i64 %3, i64* bitcast (%struct.gimplify_ctx** @gimplify_ctxp to i64*), align 8, !dbg !2785
  %tobool10 = icmp eq %union.gimple_statement_d* %body, null, !dbg !2786
  %temps = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 2, !dbg !2788
  %4 = load %union.tree_node*, %union.tree_node** %temps, align 8, !dbg !2788
  br i1 %tobool10, label %if.else, label %if.then, !dbg !2789

if.then:                                          ; preds = %cond.end7
  tail call void @declare_vars(%union.tree_node* %4, %union.gimple_statement_d* nonnull %body, i8 zeroext 0) #7, !dbg !2790
  br label %if.end, !dbg !2790

if.else:                                          ; preds = %cond.end7
  tail call void @record_vars(%union.tree_node* %4) #6, !dbg !2791
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %temp_htab = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 7, !dbg !2792
  %5 = load %struct.htab*, %struct.htab** %temp_htab, align 8, !dbg !2792
  %tobool12 = icmp eq %struct.htab* %5, null, !dbg !2794
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !2795

if.then13:                                        ; preds = %if.end
  tail call void @htab_delete(%struct.htab* nonnull %5) #6, !dbg !2796
  br label %if.end15, !dbg !2796

if.end15:                                         ; preds = %if.end, %if.then13
  ret void, !dbg !2797
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !2798 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !2804, metadata !DIExpression()), !dbg !2805
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !2806
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2806

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !2806
  %0 = load i32, i32* %num, align 8, !dbg !2806
  br label %cond.end, !dbg !2806

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2806
  ret i32 %cond, !dbg !2806
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !2807 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !2812, metadata !DIExpression()), !dbg !2813
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !2814
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !2814
  br i1 %tobool, label %if.end, label %if.then, !dbg !2816

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !2816
  tail call void @free(i8* nonnull %1) #6, !dbg !2814
  br label %if.end, !dbg !2814

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !2816
  ret void, !dbg !2816
}

; Function Attrs: nounwind uwtable
define dso_local void @declare_vars(%union.tree_node* %vars, %union.gimple_statement_d* %scope, i8 zeroext %debug_info) local_unnamed_addr #5 !dbg !2817 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %vars, metadata !2821, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %scope, metadata !2822, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.value(metadata i8 %debug_info, metadata !2823, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.value(metadata %union.tree_node* %vars, metadata !2824, metadata !DIExpression()), !dbg !2829
  %tobool = icmp eq %union.tree_node* %vars, null, !dbg !2830
  br i1 %tobool, label %if.end29, label %if.then, !dbg !2831

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %scope) #7, !dbg !2832
  %cmp = icmp eq i32 %call, 10, !dbg !2832
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2832

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 671, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2832
  br label %cond.end, !dbg !2832

cond.end:                                         ; preds = %if.then, %cond.true
  %call1 = tail call %union.tree_node* @nreverse(%union.tree_node* nonnull %vars) #6, !dbg !2833
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2825, metadata !DIExpression()), !dbg !2834
  %call2 = tail call fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %scope) #7, !dbg !2835
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !2828, metadata !DIExpression()), !dbg !2834
  %tobool3 = icmp eq %union.tree_node* %call2, null, !dbg !2836
  br i1 %tobool3, label %cond.end7, label %lor.lhs.false, !dbg !2836

lor.lhs.false:                                    ; preds = %cond.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2836
  %bf.load = load i64, i64* %0, align 8, !dbg !2836
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2836
  %cmp4 = icmp eq i64 %bf.cast1, 4, !dbg !2836
  br i1 %cmp4, label %cond.end7, label %cond.true5, !dbg !2836

cond.true5:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 676, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2836
  br label %cond.end7, !dbg !2836

cond.end7:                                        ; preds = %cond.end, %lor.lhs.false, %cond.true5
  %tobool9 = icmp ne %union.tree_node* %call2, null, !dbg !2837
  %tobool11 = icmp ne i8 %debug_info, 0, !dbg !2839
  %or.cond = and i1 %tobool9, %tobool11, !dbg !2840
  br i1 %or.cond, label %if.else, label %if.then12, !dbg !2840

if.then12:                                        ; preds = %cond.end7
  %call13 = tail call fastcc %union.tree_node* @gimple_bind_vars(%union.gimple_statement_d* %scope) #7, !dbg !2841
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %vars, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2843
  store %union.tree_node* %call13, %union.tree_node** %chain, align 8, !dbg !2844
  tail call fastcc void @gimple_bind_set_vars(%union.gimple_statement_d* %scope, %union.tree_node* %call1) #7, !dbg !2845
  br label %if.end29, !dbg !2846

if.else:                                          ; preds = %cond.end7
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2847
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !2847
  %tobool16 = icmp eq %union.tree_node* %2, null, !dbg !2847
  br i1 %tobool16, label %if.else23, label %if.then17, !dbg !2850

if.then17:                                        ; preds = %if.else
  %call20 = tail call %union.tree_node* @chainon(%union.tree_node* nonnull %2, %union.tree_node* %call1) #6, !dbg !2851
  store %union.tree_node* %call20, %union.tree_node** %1, align 8, !dbg !2852
  br label %if.end29, !dbg !2853

if.else23:                                        ; preds = %if.else
  %call24 = tail call fastcc %union.tree_node* @gimple_bind_vars(%union.gimple_statement_d* %scope) #7, !dbg !2854
  %call25 = tail call %union.tree_node* @chainon(%union.tree_node* %call24, %union.tree_node* %call1) #6, !dbg !2856
  tail call fastcc void @gimple_bind_set_vars(%union.gimple_statement_d* %scope, %union.tree_node* %call25) #7, !dbg !2857
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !2858
  br label %if.end29

if.end29:                                         ; preds = %entry, %if.then12, %if.else23, %if.then17
  ret void, !dbg !2859
}

declare dso_local void @record_vars(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @gimple_current_bind_expr() local_unnamed_addr #5 !dbg !2860 {
entry:
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !2863
  %bind_expr_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !2863
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %bind_expr_stack, align 8, !dbg !2863
  %tobool = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !2863
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2863

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !2863
  br label %cond.end, !dbg !2863

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2863
  %call = tail call fastcc %union.gimple_statement_d* @VEC_gimple_base_last(%struct.VEC_gimple_base* %cond) #7, !dbg !2863
  ret %union.gimple_statement_d* %call, !dbg !2864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @VEC_gimple_base_last(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !2865 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !2869, metadata !DIExpression()), !dbg !2870
  br label %land.end, !dbg !2871

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !2871
  %0 = load i32, i32* %num2, align 8, !dbg !2871
  %sub = add i32 %0, -1, !dbg !2871
  %idxprom = zext i32 %sub to i64, !dbg !2871
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2871
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !2871
  ret %union.gimple_statement_d* %1, !dbg !2871
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_gimple_heap* @gimple_bind_expr_stack() local_unnamed_addr #5 !dbg !2872 {
entry:
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !2875
  %bind_expr_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !2876
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %bind_expr_stack, align 8, !dbg !2876
  ret %struct.VEC_gimple_heap* %1, !dbg !2877
}

; Function Attrs: nounwind uwtable
define dso_local void @append_to_statement_list(%union.tree_node* %t, %union.tree_node** %list_p) local_unnamed_addr #5 !dbg !2878 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2882, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p, metadata !2883, metadata !DIExpression()), !dbg !2884
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !2885
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2887

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2888
  %bf.load = load i64, i64* %0, align 8, !dbg !2888
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !2888
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !2888
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2889

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @append_to_statement_list_1(%union.tree_node* nonnull %t, %union.tree_node** %list_p) #7, !dbg !2890
  br label %if.end, !dbg !2890

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !2891
}

; Function Attrs: nounwind uwtable
define internal fastcc void @append_to_statement_list_1(%union.tree_node* %t, %union.tree_node** %list_p) unnamed_addr #5 !dbg !2892 {
entry:
  %i = alloca %struct.tree_stmt_iterator, align 8
  %tmp = alloca %struct.tree_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2894, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p, metadata !2895, metadata !DIExpression()), !dbg !2904
  %0 = load %union.tree_node*, %union.tree_node** %list_p, align 8, !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2896, metadata !DIExpression()), !dbg !2904
  %1 = bitcast %struct.tree_stmt_iterator* %i to i8*, !dbg !2906
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2906
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2907
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2909

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq %union.tree_node* %t, null, !dbg !2910
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !2913

land.lhs.true:                                    ; preds = %if.then
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2914
  %bf.load = load i64, i64* %2, align 8, !dbg !2914
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2915
  %cmp = icmp eq i64 %bf.cast1, 147, !dbg !2915
  br i1 %cmp, label %if.then2, label %if.end, !dbg !2916

if.then2:                                         ; preds = %land.lhs.true
  store %union.tree_node* %t, %union.tree_node** %list_p, align 8, !dbg !2917
  br label %cleanup, !dbg !2919

if.end:                                           ; preds = %if.then, %land.lhs.true
  %call = tail call %union.tree_node* @alloc_stmt_list() #6, !dbg !2920
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2896, metadata !DIExpression()), !dbg !2904
  store %union.tree_node* %call, %union.tree_node** %list_p, align 8, !dbg !2921
  br label %if.end3, !dbg !2922

if.end3:                                          ; preds = %entry, %if.end
  %list.0 = phi %union.tree_node* [ %0, %entry ], [ %call, %if.end ], !dbg !2904
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !2896, metadata !DIExpression()), !dbg !2904
  %3 = bitcast %struct.tree_stmt_iterator* %tmp to i8*, !dbg !2923
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !2923
  %call4 = tail call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_last(%union.tree_node* %list.0) #7, !dbg !2923
  %4 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp, i64 0, i32 0, !dbg !2923
  %5 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call4, 0, !dbg !2923
  store %struct.tree_statement_list_node* %5, %struct.tree_statement_list_node** %4, align 8, !dbg !2923
  %6 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp, i64 0, i32 1, !dbg !2923
  %7 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call4, 1, !dbg !2923
  store %union.tree_node* %7, %union.tree_node** %6, align 8, !dbg !2923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !2923
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !2923
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !2897, metadata !DIExpression(DW_OP_deref)), !dbg !2904
  call void @tsi_link_after(%struct.tree_stmt_iterator* nonnull %i, %union.tree_node* %t, i32 4) #6, !dbg !2924
  br label %cleanup, !dbg !2925

cleanup:                                          ; preds = %if.end3, %if.then2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2925
  ret void, !dbg !2925
}

; Function Attrs: nounwind uwtable
define dso_local void @append_to_statement_list_force(%union.tree_node* %t, %union.tree_node** %list_p) local_unnamed_addr #5 !dbg !2926 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2928, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p, metadata !2929, metadata !DIExpression()), !dbg !2930
  %cmp = icmp eq %union.tree_node* %t, null, !dbg !2931
  br i1 %cmp, label %if.end, label %if.then, !dbg !2933

if.then:                                          ; preds = %entry
  tail call fastcc void @append_to_statement_list_1(%union.tree_node* nonnull %t, %union.tree_node** %list_p) #7, !dbg !2934
  br label %if.end, !dbg !2934

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !2935
}

; Function Attrs: nounwind uwtable
define dso_local void @gimplify_and_add(%union.tree_node* %t, %struct.gimple_seq_d** %seq_p) local_unnamed_addr #5 !dbg !2936 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2941, metadata !DIExpression()), !dbg !2943
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !2942, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata %union.tree_node** %t.addr, metadata !2941, metadata !DIExpression(DW_OP_deref)), !dbg !2943
  %call = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %t.addr, %struct.gimple_seq_d** %seq_p) #7, !dbg !2944
  ret void, !dbg !2945
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimplify_stmt(%union.tree_node** %stmt_p, %struct.gimple_seq_d** %seq_p) local_unnamed_addr #5 !dbg !2946 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %stmt_p, metadata !2950, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !2951, metadata !DIExpression()), !dbg !2953
  %0 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq_p, align 8, !dbg !2954
  %tobool = icmp eq %struct.gimple_seq_d* %0, null, !dbg !2954
  br i1 %tobool, label %if.then, label %if.end, !dbg !2956

if.then:                                          ; preds = %entry
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !2957
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq_p, align 8, !dbg !2958
  br label %if.end, !dbg !2959

if.end:                                           ; preds = %entry, %if.then
  %1 = phi %struct.gimple_seq_d* [ %0, %entry ], [ %call, %if.then ], !dbg !2960
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %1) #7, !dbg !2961
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call1, metadata !2952, metadata !DIExpression()), !dbg !2953
  %call2 = tail call i32 @gimplify_expr(%union.tree_node** %stmt_p, %struct.gimple_seq_d** %seq_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_stmt, i32 0) #7, !dbg !2962
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq_p, align 8, !dbg !2963
  %call3 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %2) #7, !dbg !2964
  %cmp = icmp ne %struct.gimple_seq_node_d* %call1, %call3, !dbg !2965
  %conv4 = zext i1 %cmp to i8, !dbg !2966
  ret i8 %conv4, !dbg !2967
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @create_tmp_var_name(i8* %prefix) local_unnamed_addr #5 !dbg !2968 {
entry:
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !2972, metadata !DIExpression()), !dbg !2982
  %tobool = icmp eq i8* %prefix, null, !dbg !2983
  br i1 %tobool, label %do.body, label %if.then, !dbg !2984

if.then:                                          ; preds = %entry
  store i8* %prefix, i8** @libiberty_optr, align 8, !dbg !2985
  %call = tail call i64 @strlen(i8* nonnull %prefix) #6, !dbg !2985
  %add = add i64 %call, 1, !dbg !2985
  store i64 %add, i64* @libiberty_len, align 8, !dbg !2985
  %0 = alloca i8, i64 %add, align 16, !dbg !2985
  store i8* %0, i8** @libiberty_nptr, align 8, !dbg !2985
  %1 = load i8*, i8** @libiberty_optr, align 8, !dbg !2985
  %call1 = call i8* @memcpy(i8* nonnull %0, i8* %1, i64 %add) #6, !dbg !2985
  call void @llvm.dbg.value(metadata i8* %call1, metadata !2974, metadata !DIExpression()), !dbg !2986
  %call2 = call i64 @strlen(i8* %call1) #6, !dbg !2987
  %conv = trunc i64 %call2 to i32, !dbg !2987
  call fastcc void @remove_suffix(i8* %call1, i32 %conv) #7, !dbg !2988
  call void @llvm.dbg.value(metadata i8* %call1, metadata !2972, metadata !DIExpression()), !dbg !2982
  br label %do.body, !dbg !2989

do.body:                                          ; preds = %entry, %if.then
  %prefix.addr.0 = phi i8* [ %call1, %if.then ], [ null, %entry ]
  call void @llvm.dbg.value(metadata i8* %prefix.addr.0, metadata !2972, metadata !DIExpression()), !dbg !2982
  %tobool3 = icmp eq i8* %prefix.addr.0, null, !dbg !2990
  %prefix.addr.0. = select i1 %tobool3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* %prefix.addr.0, !dbg !2990
  call void @llvm.dbg.value(metadata i8* %prefix.addr.0., metadata !2977, metadata !DIExpression()), !dbg !2991
  %call4 = call i64 @strlen(i8* %prefix.addr.0.) #6, !dbg !2990
  %add5 = add i64 %call4, 32, !dbg !2990
  %2 = alloca i8, i64 %add5, align 16, !dbg !2990
  call void @llvm.dbg.value(metadata i8* %2, metadata !2973, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %2, metadata !2980, metadata !DIExpression()), !dbg !2991
  %3 = load i32, i32* @tmp_var_id_num, align 4, !dbg !2990
  %inc = add i32 %3, 1, !dbg !2990
  store i32 %inc, i32* @tmp_var_id_num, align 4, !dbg !2990
  %conv6 = zext i32 %3 to i64, !dbg !2990
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %prefix.addr.0., i64 %conv6) #6, !dbg !2990
  %call8 = call %union.tree_node* @get_identifier(i8* nonnull %2) #6, !dbg !2992
  ret %union.tree_node* %call8, !dbg !2993
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @remove_suffix(i8* %name, i32 %len) unnamed_addr #0 !dbg !2994 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !2998, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata i32 %len, metadata !2999, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata i32 2, metadata !3000, metadata !DIExpression()), !dbg !3001
  %0 = sext i32 %len to i64, !dbg !3002
  %1 = sext i32 %len to i64, !dbg !3002
  br label %for.cond, !dbg !3002

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 2, %entry ], !dbg !3004
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3000, metadata !DIExpression()), !dbg !3001
  %cmp = icmp ult i64 %indvars.iv, 8, !dbg !3005
  %cmp1 = icmp slt i64 %indvars.iv, %0, !dbg !3007
  %spec.select = and i1 %cmp, %cmp1, !dbg !3008
  br i1 %spec.select, label %for.body, label %for.end.loopexit, !dbg !3009

for.body:                                         ; preds = %for.cond
  %2 = sub nsw i64 %1, %indvars.iv, !dbg !3010
  %arrayidx = getelementptr inbounds i8, i8* %name, i64 %2, !dbg !3013
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3013
  %cmp2 = icmp eq i8 %3, 46, !dbg !3014
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !3015

if.then:                                          ; preds = %for.body
  %arrayidx.lcssa = phi i8* [ %arrayidx, %for.body ], !dbg !3013
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3000, metadata !DIExpression()), !dbg !3001
  store i8 0, i8* %arrayidx.lcssa, align 1, !dbg !3016
  br label %for.end, !dbg !3018

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3019
  call void @llvm.dbg.value(metadata i32 undef, metadata !3000, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3001
  br label %for.cond, !dbg !3020, !llvm.loop !3021

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !3023

for.end:                                          ; preds = %for.end.loopexit, %if.then
  ret void, !dbg !3023
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node* %type, i8* %prefix) local_unnamed_addr #5 !dbg !3024 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3028, metadata !DIExpression()), !dbg !3032
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !3029, metadata !DIExpression()), !dbg !3032
  %call = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 0) #6, !dbg !3033
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3031, metadata !DIExpression()), !dbg !3032
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3034
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !3034
  %2 = load i64, i64* %1, align 8, !dbg !3034
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3035
  %4 = bitcast %union.tree_node** %3 to i64*, !dbg !3036
  store i64 %2, i64* %4, align 8, !dbg !3036
  %5 = load i32, i32* @input_location, align 4, !dbg !3037
  %tobool = icmp eq i8* %prefix, null, !dbg !3037
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3037

cond.true:                                        ; preds = %entry
  %call4 = tail call %union.tree_node* @create_tmp_var_name(i8* nonnull %prefix) #7, !dbg !3037
  br label %cond.end, !dbg !3037

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %call4, %cond.true ], [ null, %entry ], !dbg !3037
  %call5 = tail call %union.tree_node* @build_decl_stat(i32 %5, i32 32, %union.tree_node* %cond, %union.tree_node* %type) #6, !dbg !3037
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3030, metadata !DIExpression()), !dbg !3032
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3038
  %6 = bitcast i40* %artificial_flag to i64*, !dbg !3038
  %bf.load = load i64, i64* %6, align 8, !dbg !3039
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3040
  %bf.load10 = load i64, i64* %7, align 8, !dbg !3041
  %bf.set9 = and i64 %bf.load, -33559553, !dbg !3042
  %bf.clear14 = or i64 %bf.set9, 5120, !dbg !3042
  store i64 %bf.clear14, i64* %6, align 8, !dbg !3042
  %bf.clear20 = and i64 %bf.load10, -84934657, !dbg !3043
  %bf.set21 = or i64 %bf.clear20, 16777216, !dbg !3043
  store i64 %bf.set21, i64* %7, align 8, !dbg !3043
  ret %union.tree_node* %call5, !dbg !3044
}

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @create_tmp_var(%union.tree_node* %type, i8* %prefix) local_unnamed_addr #5 !dbg !3045 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3047, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !3048, metadata !DIExpression()), !dbg !3050
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3051
  %bf.load = load i64, i64* %0, align 8, !dbg !3051
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !3051
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !3051
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !3051

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3051
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3051
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !3051
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3051

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 504, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3051
  br label %cond.end, !dbg !3051

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %type, i8* %prefix) #7, !dbg !3052
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3049, metadata !DIExpression()), !dbg !3050
  tail call void @gimple_add_tmp_var(%union.tree_node* %call) #7, !dbg !3053
  ret %union.tree_node* %call, !dbg !3054
}

; Function Attrs: nounwind uwtable
define dso_local void @gimple_add_tmp_var(%union.tree_node* %tmp) local_unnamed_addr #5 !dbg !3055 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp, metadata !3057, metadata !DIExpression()), !dbg !3066
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3067
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3067
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !3067
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !3067

land.lhs.true:                                    ; preds = %entry
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3067
  %1 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !3067
  %bf.load = load i32, i32* %1, align 8, !dbg !3067
  %bf.clear = and i32 %bf.load, 256, !dbg !3067
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !3067
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3067

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 727, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3067
  br label %cond.end, !dbg !3067

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3068
  %2 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3068
  %call = tail call i32 @host_integerp(%union.tree_node* %2, i32 1) #6, !dbg !3070
  %tobool2 = icmp eq i32 %call, 0, !dbg !3070
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3071

if.then:                                          ; preds = %cond.end
  tail call fastcc void @force_constant_size(%union.tree_node* %tmp) #7, !dbg !3072
  br label %if.end, !dbg !3072

if.end:                                           ; preds = %cond.end, %if.then
  %3 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3073
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3074
  %4 = bitcast %union.tree_node** %context to i64*, !dbg !3075
  store i64 %3, i64* %4, align 8, !dbg !3075
  %seen_in_bind_expr4 = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3076
  %5 = bitcast i24* %seen_in_bind_expr4 to i32*, !dbg !3076
  %bf.load5 = load i32, i32* %5, align 8, !dbg !3077
  %bf.set = or i32 %bf.load5, 256, !dbg !3077
  store i32 %bf.set, i32* %5, align 8, !dbg !3077
  %6 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !3078
  %tobool7 = icmp eq %struct.gimplify_ctx* %6, null, !dbg !3078
  %7 = inttoptr i64 %3 to %union.tree_node*, !dbg !3079
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3079

if.then8:                                         ; preds = %if.end
  %temps = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %6, i64 0, i32 2, !dbg !3080
  %8 = bitcast %union.tree_node** %temps to i64*, !dbg !3080
  %9 = load i64, i64* %8, align 8, !dbg !3080
  %10 = bitcast %union.tree_node** %chain to i64*, !dbg !3081
  store i64 %9, i64* %10, align 8, !dbg !3081
  store %union.tree_node* %tmp, %union.tree_node** %temps, align 8, !dbg !3082
  %11 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !3083
  %tobool12 = icmp eq %struct.gimplify_omp_ctx* %11, null, !dbg !3083
  br i1 %tobool12, label %if.end25, label %if.then13, !dbg !3084

if.then13:                                        ; preds = %if.then8
  br label %while.cond, !dbg !3085

while.cond:                                       ; preds = %while.body, %if.then13
  %ctx.0 = phi %struct.gimplify_omp_ctx* [ %11, %if.then13 ], [ %ctx.0.pre, %while.body ], !dbg !3086
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.0, metadata !3058, metadata !DIExpression()), !dbg !3086
  %cond1 = icmp eq %struct.gimplify_omp_ctx* %ctx.0, null, !dbg !3087
  br i1 %cond1, label %if.end25.loopexit, label %land.rhs, !dbg !3087

land.rhs:                                         ; preds = %while.cond
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 5, !dbg !3088
  %12 = load i32, i32* %region_type, align 8, !dbg !3088
  %cmp = icmp eq i32 %12, 0, !dbg !3089
  br i1 %cmp, label %while.body, label %while.end, !dbg !3085

while.body:                                       ; preds = %land.rhs
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 0, !dbg !3090
  %ctx.0.pre = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !3086
  br label %while.cond, !dbg !3085, !llvm.loop !3091

while.end:                                        ; preds = %land.rhs
  %ctx.0.lcssa5 = phi %struct.gimplify_omp_ctx* [ %ctx.0, %land.rhs ], !dbg !3086
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.0.lcssa5, metadata !3058, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.0.lcssa5, metadata !3058, metadata !DIExpression()), !dbg !3086
  tail call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* nonnull %ctx.0.lcssa5, %union.tree_node* %tmp, i32 129) #7, !dbg !3092
  br label %if.end25, !dbg !3092

if.else:                                          ; preds = %if.end
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3094
  %tobool19 = icmp eq %struct.function* %13, null, !dbg !3094
  br i1 %tobool19, label %if.else21, label %if.then20, !dbg !3095

if.then20:                                        ; preds = %if.else
  tail call void @record_vars(%union.tree_node* %tmp) #6, !dbg !3096
  br label %if.end25, !dbg !3096

if.else21:                                        ; preds = %if.else
  %call22 = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %7) #6, !dbg !3097
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call22, metadata !3063, metadata !DIExpression()), !dbg !3098
  %call23 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call22) #7, !dbg !3099
  tail call void @declare_vars(%union.tree_node* %tmp, %union.gimple_statement_d* %call23, i8 zeroext 0) #7, !dbg !3100
  br label %if.end25

if.end25.loopexit:                                ; preds = %while.cond
  br label %if.end25, !dbg !3101

if.end25:                                         ; preds = %if.end25.loopexit, %if.then8, %if.then20, %if.else21, %while.end
  ret void, !dbg !3101
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_formal_tmp_var(%union.tree_node* %val, %struct.gimple_seq_d** %pre_p) local_unnamed_addr #5 !dbg !3102 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3106, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !3107, metadata !DIExpression()), !dbg !3108
  %call = tail call fastcc %union.tree_node* @internal_get_tmp_var(%union.tree_node* %val, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 zeroext 1) #7, !dbg !3109
  ret %union.tree_node* %call, !dbg !3110
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @internal_get_tmp_var(%union.tree_node* %val, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %is_formal) unnamed_addr #5 !dbg !3111 {
entry:
  %val.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3115, metadata !DIExpression()), !dbg !3124
  store %union.tree_node* %val, %union.tree_node** %val.addr, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !3117, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata i8 %is_formal, metadata !3118, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %union.tree_node** %val.addr, metadata !3115, metadata !DIExpression(DW_OP_deref)), !dbg !3124
  %call = call i32 @gimplify_expr(%union.tree_node** nonnull %val.addr, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_reg_rhs_or_call, i32 1) #7, !dbg !3125
  %0 = load %union.tree_node*, %union.tree_node** %val.addr, align 8, !dbg !3126
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3115, metadata !DIExpression()), !dbg !3124
  %call1 = call fastcc %union.tree_node* @lookup_tmp_var(%union.tree_node* %0, i8 zeroext %is_formal) #7, !dbg !3127
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3119, metadata !DIExpression()), !dbg !3124
  %tobool = icmp eq i8 %is_formal, 0, !dbg !3128
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !3130

entry.if.end_crit_edge:                           ; preds = %entry
  %type14.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3124
  %.pre = load %union.tree_node*, %union.tree_node** %type14.phi.trans.insert, align 8, !dbg !3131
  br label %if.end, !dbg !3130

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3132
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !3132
  %2 = load i64*, i64** %1, align 8, !dbg !3132
  %bf.load = load i64, i64* %2, align 8, !dbg !3132
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3133
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !3133
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !3134
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3134

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp9 = icmp eq i64 %bf.cast1, 14, !dbg !3135
  br i1 %cmp9, label %if.then, label %if.end, !dbg !3136

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3137
  %4 = bitcast i40* %gimple_reg_flag to i64*, !dbg !3137
  %bf.load11 = load i64, i64* %4, align 8, !dbg !3138
  %bf.set = or i64 %bf.load11, 134217728, !dbg !3138
  store i64 %bf.set, i64* %4, align 8, !dbg !3138
  br label %if.end, !dbg !3137

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then, %lor.lhs.false
  %5 = phi %union.tree_node* [ %.pre, %entry.if.end_crit_edge ], [ %3, %if.then ], [ %3, %lor.lhs.false ], !dbg !3131
  %6 = load %union.tree_node*, %union.tree_node** %val.addr, align 8, !dbg !3131
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3115, metadata !DIExpression()), !dbg !3124
  %call15 = call %union.tree_node* @unshare_expr(%union.tree_node* %6) #7, !dbg !3131
  %call16 = call %union.tree_node* @build2_stat(i32 54, %union.tree_node* %5, %union.tree_node* %call1, %union.tree_node* %call15) #6, !dbg !3131
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !3120, metadata !DIExpression()), !dbg !3124
  %7 = bitcast %union.tree_node** %val.addr to i64**, !dbg !3139
  %8 = load i64*, i64** %7, align 8, !dbg !3139
  %bf.load18 = load i64, i64* %8, align 8, !dbg !3139
  %bf.cast20 = and i64 %bf.load18, 65535, !dbg !3139
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast20, !dbg !3139
  %9 = load i32, i32* %arrayidx, align 4, !dbg !3139
  %cmp21 = icmp ugt i32 %9, 3, !dbg !3139
  br i1 %cmp21, label %land.lhs.true23, label %cond.end, !dbg !3139

land.lhs.true23:                                  ; preds = %if.end
  %cmp30 = icmp ult i32 %9, 11, !dbg !3139
  br i1 %cmp30, label %cond.true, label %cond.end, !dbg !3139

cond.true:                                        ; preds = %land.lhs.true23
  %locus = getelementptr inbounds i64, i64* %8, i64 3, !dbg !3139
  %10 = bitcast i64* %locus to i32*, !dbg !3139
  %11 = load i32, i32* %10, align 8, !dbg !3139
  %phitmp = icmp ne i32 %11, 0, !dbg !3139
  br label %cond.end, !dbg !3139

cond.end:                                         ; preds = %if.end, %land.lhs.true23, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %land.lhs.true23 ], [ false, %if.end ]
  br i1 %cond, label %if.then34, label %if.else, !dbg !3141

if.then34:                                        ; preds = %cond.end
  br i1 %cmp21, label %land.lhs.true43, label %cond.end56, !dbg !3142

land.lhs.true43:                                  ; preds = %if.then34
  %cmp50 = icmp ult i32 %9, 11, !dbg !3142
  br i1 %cmp50, label %cond.true52, label %cond.end56, !dbg !3142

cond.true52:                                      ; preds = %land.lhs.true43
  %locus54 = getelementptr inbounds i64, i64* %8, i64 3, !dbg !3142
  %12 = bitcast i64* %locus54 to i32*, !dbg !3142
  %13 = load i32, i32* %12, align 8, !dbg !3142
  br label %cond.end56, !dbg !3142

cond.end56:                                       ; preds = %if.then34, %land.lhs.true43, %cond.true52
  %cond57 = phi i32 [ %13, %cond.true52 ], [ 0, %land.lhs.true43 ], [ 0, %if.then34 ], !dbg !3142
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3142
  store i32 %cond57, i32* %14, align 8, !dbg !3142
  br label %if.end62, !dbg !3142

if.else:                                          ; preds = %cond.end
  %15 = load i32, i32* @input_location, align 4, !dbg !3143
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3143
  store i32 %15, i32* %16, align 8, !dbg !3143
  br label %if.end62

if.end62:                                         ; preds = %if.else, %cond.end56
  call void @gimplify_and_add(%union.tree_node* %call16, %struct.gimple_seq_d** %pre_p) #7, !dbg !3144
  %17 = bitcast %union.tree_node* %call16 to i8*, !dbg !3145
  call void @ggc_free(i8* %17) #6, !dbg !3146
  %18 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !3147
  %into_ssa = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %18, i64 0, i32 10, !dbg !3148
  %19 = load i8, i8* %into_ssa, align 1, !dbg !3148
  %tobool63 = icmp eq i8 %19, 0, !dbg !3147
  br i1 %tobool63, label %if.end67, label %if.then64, !dbg !3149

if.then64:                                        ; preds = %if.end62
  %20 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %pre_p, align 8, !dbg !3150
  %call65 = call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %20) #7, !dbg !3151
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !3121, metadata !DIExpression()), !dbg !3152
  %call66 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call65) #6, !dbg !3153
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !3119, metadata !DIExpression()), !dbg !3124
  br label %if.end67, !dbg !3154

if.end67:                                         ; preds = %if.end62, %if.then64
  %t.0 = phi %union.tree_node* [ %call66, %if.then64 ], [ %call1, %if.end62 ], !dbg !3124
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3119, metadata !DIExpression()), !dbg !3124
  ret %union.tree_node* %t.0, !dbg !3155
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %val, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) local_unnamed_addr #5 !dbg !3156 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3160, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !3161, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !3162, metadata !DIExpression()), !dbg !3163
  %call = tail call fastcc %union.tree_node* @internal_get_tmp_var(%union.tree_node* %val, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext 0) #7, !dbg !3164
  ret %union.tree_node* %call, !dbg !3165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3166 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3171, metadata !DIExpression()), !dbg !3172
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3173
  %bf.load = load i32, i32* %0, align 8, !dbg !3173
  %bf.clear = and i32 %bf.load, 255, !dbg !3173
  ret i32 %bf.clear, !dbg !3174
}

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3175 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3179, metadata !DIExpression()), !dbg !3180
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !3181
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3181
  ret %union.tree_node* %1, !dbg !3182
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_bind_vars(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3183 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3185, metadata !DIExpression()), !dbg !3186
  %vars = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !3187
  %0 = bitcast i32* %vars to %union.tree_node**, !dbg !3187
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3187
  ret %union.tree_node* %1, !dbg !3188
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_bind_set_vars(%union.gimple_statement_d* %gs, %union.tree_node* %vars) unnamed_addr #0 !dbg !3189 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3193, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.value(metadata %union.tree_node* %vars, metadata !3194, metadata !DIExpression()), !dbg !3195
  %vars1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !3196
  %0 = bitcast i32* %vars1 to %union.tree_node**, !dbg !3196
  store %union.tree_node* %vars, %union.tree_node** %0, align 8, !dbg !3197
  ret void, !dbg !3198
}

declare dso_local %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @force_constant_size(%union.tree_node* %var) unnamed_addr #5 !dbg !3199 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3201, metadata !DIExpression()), !dbg !3203
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3204
  %bf.load = load i64, i64* %0, align 8, !dbg !3204
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3204
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3204
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3204

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 712, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3204
  br label %cond.end, !dbg !3204

cond.end:                                         ; preds = %entry, %cond.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3205
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3205
  %call = tail call i64 @max_int_size_in_bytes(%union.tree_node* %1) #6, !dbg !3206
  call void @llvm.dbg.value(metadata i64 %call, metadata !3202, metadata !DIExpression()), !dbg !3203
  %cmp1 = icmp sgt i64 %call, -1, !dbg !3207
  br i1 %cmp1, label %cond.end4, label %cond.true2, !dbg !3207

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 716, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3207
  br label %cond.end4, !dbg !3207

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3208
  %2 = bitcast %union.tree_node** %size_unit to %struct.tree_common**, !dbg !3208
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3208
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !3208
  %4 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !3208
  %call8 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 %call) #6, !dbg !3209
  store %union.tree_node* %call8, %union.tree_node** %size_unit, align 8, !dbg !3210
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3211
  %5 = bitcast %union.tree_node** %size to %struct.tree_common**, !dbg !3211
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !3211
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !3211
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !3211
  %mul = shl nsw i64 %call, 3, !dbg !3212
  %call14 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %7, i64 %mul) #6, !dbg !3213
  store %union.tree_node* %call14, %union.tree_node** %size, align 8, !dbg !3214
  ret void, !dbg !3215
}

; Function Attrs: nounwind uwtable
define internal fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl, i32 %flags) unnamed_addr #5 !dbg !3216 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx, metadata !3220, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3221, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3222, metadata !DIExpression()), !dbg !3226
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3227
  %cmp = icmp eq %union.tree_node* %0, %decl, !dbg !3229
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !3230

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3231
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3231
  %cmp1 = icmp eq %union.tree_node* %1, %0, !dbg !3232
  %2 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !3233
  br i1 %cmp1, label %cleanup.cont, label %if.end, !dbg !3233

if.end:                                           ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3233
  %bf.load = load i64, i64* %3, align 8, !dbg !3234
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !3234
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !3234
  br i1 %tobool, label %lor.lhs.false4, label %if.then12, !dbg !3236

lor.lhs.false4:                                   ; preds = %if.end
  %needs_constructing_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !3237
  %bf.load8 = load i32, i32* %needs_constructing_flag, align 4, !dbg !3237
  %bf.clear10 = and i32 %bf.load8, 2048, !dbg !3237
  %tobool11 = icmp eq i32 %bf.clear10, 0, !dbg !3237
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3238

if.then12:                                        ; preds = %lor.lhs.false4, %if.end
  %or = or i32 %flags, 1, !dbg !3239
  call void @llvm.dbg.value(metadata i32 %or, metadata !3222, metadata !DIExpression()), !dbg !3226
  br label %if.end13, !dbg !3240

if.end13:                                         ; preds = %lor.lhs.false4, %if.then12
  %flags.addr.0 = phi i32 [ %or, %if.then12 ], [ %flags, %lor.lhs.false4 ]
  call void @llvm.dbg.value(metadata i32 %flags.addr.0, metadata !3222, metadata !DIExpression()), !dbg !3226
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 1, !dbg !3241
  %4 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !3241
  %5 = ptrtoint %union.tree_node* %decl to i64, !dbg !3242
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %4, i64 %5) #6, !dbg !3243
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call, metadata !3223, metadata !DIExpression()), !dbg !3226
  %cmp14 = icmp eq %struct.splay_tree_node_s* %call, null, !dbg !3244
  br i1 %cmp14, label %if.end32, label %if.then15, !dbg !3246

if.then15:                                        ; preds = %if.end13
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call, i64 0, i32 1, !dbg !3247
  %6 = load i64, i64* %value, align 8, !dbg !3247
  %and = and i64 %6, 252, !dbg !3247
  %conv = zext i32 %flags.addr.0 to i64, !dbg !3247
  %and16 = and i64 %and, %conv, !dbg !3247
  %cmp17 = icmp eq i64 %and16, 0, !dbg !3247
  br i1 %cmp17, label %cond.end, label %cond.true, !dbg !3247

cond.true:                                        ; preds = %if.then15
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3247
  %.pre = load i64, i64* %value, align 8, !dbg !3249
  br label %cond.end, !dbg !3247

cond.end:                                         ; preds = %if.then15, %cond.true
  %7 = phi i64 [ %6, %if.then15 ], [ %.pre, %cond.true ], !dbg !3249
  %8 = trunc i64 %7 to i32, !dbg !3250
  %conv22 = or i32 %flags.addr.0, %8, !dbg !3250
  call void @llvm.dbg.value(metadata i32 %conv22, metadata !3224, metadata !DIExpression()), !dbg !3226
  %and23 = and i32 %conv22, 252, !dbg !3251
  %cmp24 = icmp eq i32 %and23, 48, !dbg !3251
  br i1 %cmp24, label %cond.end28, label %cond.true26, !dbg !3251

cond.true26:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3251
  br label %cond.end28, !dbg !3251

cond.end28:                                       ; preds = %cond.end, %cond.true26
  %conv30 = zext i32 %conv22 to i64, !dbg !3252
  store i64 %conv30, i64* %value, align 8, !dbg !3253
  br label %cleanup.cont, !dbg !3254

if.end32:                                         ; preds = %if.end13
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3255
  %9 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3255
  %tobool33 = icmp eq %union.tree_node* %9, null, !dbg !3255
  br i1 %tobool33, label %if.else94, label %land.lhs.true, !dbg !3257

land.lhs.true:                                    ; preds = %if.end32
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3257
  %bf.load37 = load i64, i64* %10, align 8, !dbg !3258
  %bf.cast393 = and i64 %bf.load37, 65535, !dbg !3259
  %cmp40 = icmp eq i64 %bf.cast393, 23, !dbg !3259
  br i1 %cmp40, label %if.else94, label %if.then42, !dbg !3260

if.then42:                                        ; preds = %land.lhs.true
  %11 = trunc i32 %flags.addr.0 to i8, !dbg !3261
  %tobool44 = icmp slt i8 %11, 0, !dbg !3261
  br i1 %tobool44, label %if.end73, label %if.then45, !dbg !3264

if.then45:                                        ; preds = %if.then42
  %and46 = and i32 %flags.addr.0, 8, !dbg !3265
  %tobool47 = icmp eq i32 %and46, 0, !dbg !3267
  %cond48 = select i1 %tobool47, i32 16, i32 8, !dbg !3267
  call void @llvm.dbg.value(metadata i32 %cond48, metadata !3224, metadata !DIExpression()), !dbg !3226
  %and49 = and i32 %flags.addr.0, 1, !dbg !3268
  %or50 = or i32 %cond48, %and49, !dbg !3269
  call void @llvm.dbg.value(metadata i32 %or50, metadata !3224, metadata !DIExpression()), !dbg !3226
  %call51 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %decl) #6, !dbg !3270
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !3225, metadata !DIExpression()), !dbg !3226
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3271
  %bf.load53 = load i64, i64* %12, align 8, !dbg !3271
  %bf.cast554 = and i64 %bf.load53, 65535, !dbg !3271
  %cmp56 = icmp eq i64 %bf.cast554, 47, !dbg !3271
  br i1 %cmp56, label %cond.end60, label %cond.true58, !dbg !3271

cond.true58:                                      ; preds = %if.then45
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3271
  br label %cond.end60, !dbg !3271

cond.end60:                                       ; preds = %if.then45, %cond.true58
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3272
  %13 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3272
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3225, metadata !DIExpression()), !dbg !3226
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3273
  %bf.load63 = load i64, i64* %14, align 8, !dbg !3273
  %bf.cast65 = and i64 %bf.load63, 65535, !dbg !3273
  %arrayidx66 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast65, !dbg !3273
  %15 = load i32, i32* %arrayidx66, align 4, !dbg !3273
  %cmp67 = icmp eq i32 %15, 3, !dbg !3273
  br i1 %cmp67, label %cond.end71, label %cond.true69, !dbg !3273

cond.true69:                                      ; preds = %cond.end60
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5409, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3273
  br label %cond.end71, !dbg !3273

cond.end71:                                       ; preds = %cond.end60, %cond.true69
  tail call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %13, i32 %or50) #7, !dbg !3274
  br label %if.end73, !dbg !3275

if.end73:                                         ; preds = %cond.end71, %if.then42
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3276
  %16 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3276
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %16) #7, !dbg !3277
  %17 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3278
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %17) #7, !dbg !3279
  %18 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3280
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %18) #7, !dbg !3281
  %and79 = and i32 %flags.addr.0, 4, !dbg !3282
  %tobool80 = icmp eq i32 %and79, 0, !dbg !3282
  br i1 %tobool80, label %if.else, label %if.then81, !dbg !3284

if.then81:                                        ; preds = %if.end73
  %and82 = and i32 %flags.addr.0, 3, !dbg !3285
  %or83 = or i32 %and82, 264, !dbg !3286
  call void @llvm.dbg.value(metadata i32 %or83, metadata !3222, metadata !DIExpression()), !dbg !3226
  br label %if.end128, !dbg !3287

if.else:                                          ; preds = %if.end73
  br i1 %tobool44, label %if.end128, label %if.then86, !dbg !3288

if.then86:                                        ; preds = %if.else
  %19 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3289
  %20 = load %struct.tree_type*, %struct.tree_type** %19, align 8, !dbg !3289
  %size_unit90 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 3, !dbg !3289
  %21 = load %union.tree_node*, %union.tree_node** %size_unit90, align 8, !dbg !3289
  %call91 = tail call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %21, i8 zeroext 1) #7, !dbg !3291
  br label %if.end128, !dbg !3291

if.else94:                                        ; preds = %land.lhs.true, %if.end32
  %22 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 10), align 8, !dbg !3292
  %call95 = tail call zeroext i8 %22(%union.tree_node* %decl) #6, !dbg !3294
  %tobool96 = icmp eq i8 %call95, 0, !dbg !3294
  br i1 %tobool96, label %if.end128, label %if.then97, !dbg !3295

if.then97:                                        ; preds = %if.else94
  %23 = trunc i32 %flags.addr.0 to i8, !dbg !3296
  %cmp99 = icmp sgt i8 %23, -1, !dbg !3296
  br i1 %cmp99, label %cond.end103, label %cond.true101, !dbg !3296

cond.true101:                                     ; preds = %if.then97
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3296
  br label %cond.end103, !dbg !3296

cond.end103:                                      ; preds = %if.then97, %cond.true101
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3298
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %24) #7, !dbg !3299
  %and107 = and i32 %flags.addr.0, 4, !dbg !3300
  %cmp108 = icmp eq i32 %and107, 0, !dbg !3302
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !3303

if.then110:                                       ; preds = %cond.end103
  %25 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !3304
  %26 = load %struct.tree_common*, %struct.tree_common** %25, align 8, !dbg !3304
  %type114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 2, !dbg !3304
  %27 = bitcast %union.tree_node** %type114 to %struct.tree_type**, !dbg !3304
  %28 = load %struct.tree_type*, %struct.tree_type** %27, align 8, !dbg !3304
  %size_unit116 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %28, i64 0, i32 3, !dbg !3304
  %29 = load %union.tree_node*, %union.tree_node** %size_unit116, align 8, !dbg !3304
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3225, metadata !DIExpression()), !dbg !3226
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3306
  %bf.load118 = load i64, i64* %30, align 8, !dbg !3306
  %bf.cast1202 = and i64 %bf.load118, 65535, !dbg !3308
  %cmp121 = icmp eq i64 %bf.cast1202, 23, !dbg !3308
  br i1 %cmp121, label %if.end128, label %if.then123, !dbg !3309

if.then123:                                       ; preds = %if.then110
  %call124 = tail call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %29, i8 zeroext 1) #7, !dbg !3310
  br label %if.end128, !dbg !3310

if.end128:                                        ; preds = %if.then110, %if.else94, %if.then123, %cond.end103, %if.then81, %if.then86, %if.else
  %flags.addr.2 = phi i32 [ %or83, %if.then81 ], [ %flags.addr.0, %if.then86 ], [ %flags.addr.0, %if.else ], [ %flags.addr.0, %cond.end103 ], [ %flags.addr.0, %if.then123 ], [ %flags.addr.0, %if.then110 ], [ %flags.addr.0, %if.else94 ], !dbg !3226
  call void @llvm.dbg.value(metadata i32 %flags.addr.2, metadata !3222, metadata !DIExpression()), !dbg !3226
  %31 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !3311
  %conv130 = zext i32 %flags.addr.2 to i64, !dbg !3312
  %call131 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %31, i64 %5, i64 %conv130) #6, !dbg !3313
  br label %cleanup.cont, !dbg !3314

cleanup.cont:                                     ; preds = %cond.end28, %if.end128, %lor.lhs.false, %entry
  ret void, !dbg !3314
}

declare dso_local %struct.gimple_seq_d* @gimple_body(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !3315 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !3322, metadata !DIExpression()), !dbg !3324
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) #7, !dbg !3325
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !3323, metadata !DIExpression()), !dbg !3324
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !3326
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3326

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !3327
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3327
  br label %cond.end, !dbg !3326

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !3326
  ret %union.gimple_statement_d* %cond, !dbg !3328
}

; Function Attrs: nounwind uwtable
define dso_local void @annotate_all_with_location(%struct.gimple_seq_d* %stmt_p, i32 %location) local_unnamed_addr #5 !dbg !3329 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %stmt_p, metadata !3333, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i32 %location, metadata !3334, metadata !DIExpression()), !dbg !3346
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !3347
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3347
  %call = tail call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %stmt_p) #7, !dbg !3348
  %tobool = icmp eq i8 %call, 0, !dbg !3348
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3350

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3351
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3351
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %stmt_p) #7, !dbg !3351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3351
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3351
  br label %for.cond, !dbg !3352

for.cond:                                         ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3335, metadata !DIExpression(DW_OP_deref)), !dbg !3346
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3353
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3354
  br i1 %tobool2, label %for.body, label %cleanup.loopexit, !dbg !3355

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3335, metadata !DIExpression(DW_OP_deref)), !dbg !3346
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3356
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !3342, metadata !DIExpression()), !dbg !3357
  call fastcc void @annotate_one_with_location(%union.gimple_statement_d* %call3, i32 %location) #7, !dbg !3358
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3335, metadata !DIExpression(DW_OP_deref)), !dbg !3346
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !3359
  br label %for.cond, !dbg !3360, !llvm.loop !3361

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3363

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3363
  ret void, !dbg !3363
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !3364 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !3368, metadata !DIExpression()), !dbg !3369
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !3370
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3371

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !3372
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !3372
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3373
  %phitmp = zext i1 %cmp1 to i8, !dbg !3371
  br label %lor.end, !dbg !3371

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !3374
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !3375 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3379, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3380, metadata !DIExpression()), !dbg !3382
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !3383
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3384
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3385
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3386
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !3387
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !3388
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !3389

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !3390
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3390
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !3391
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3392

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !3393
  br label %cond.end, !dbg !3392

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !3392
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3394
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !3395
  ret void, !dbg !3396
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3397 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3401, metadata !DIExpression()), !dbg !3402
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3403
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3403
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3404
  %conv1 = zext i1 %cmp to i8, !dbg !3405
  ret i8 %conv1, !dbg !3406
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3407 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3411, metadata !DIExpression()), !dbg !3412
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3413
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3413
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3414
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3414
  ret %union.gimple_statement_d* %1, !dbg !3415
}

; Function Attrs: nounwind uwtable
define internal fastcc void @annotate_one_with_location(%union.gimple_statement_d* %gs, i32 %location) unnamed_addr #5 !dbg !3416 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3420, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i32 %location, metadata !3421, metadata !DIExpression()), !dbg !3422
  %call = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %gs) #7, !dbg !3423
  %tobool = icmp eq i8 %call, 0, !dbg !3423
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3425

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @gimple_do_not_emit_location_p(%union.gimple_statement_d* %gs) #7, !dbg !3426
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3426
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !3427

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call fastcc zeroext i8 @should_carry_location_p(%union.gimple_statement_d* %gs) #7, !dbg !3428
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3428
  br i1 %tobool5, label %if.end, label %if.then, !dbg !3429

if.then:                                          ; preds = %land.lhs.true3
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %gs, i32 %location) #7, !dbg !3430
  br label %if.end, !dbg !3430

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %entry, %if.then
  ret void, !dbg !3431
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3432 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3437, metadata !DIExpression()), !dbg !3438
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3439
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3439
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3440
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3440
  %2 = load i64, i64* %1, align 8, !dbg !3440
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3441
  store i64 %2, i64* %3, align 8, !dbg !3441
  ret void, !dbg !3442
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @unshare_expr(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !3443 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3447, metadata !DIExpression()), !dbg !3448
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !3447, metadata !DIExpression(DW_OP_deref)), !dbg !3448
  %call = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %expr.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @mostly_copy_tree_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3449
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !3450
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3447, metadata !DIExpression()), !dbg !3448
  ret %union.tree_node* %0, !dbg !3451
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @mostly_copy_tree_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !3452 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !3457, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !3458, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.value(metadata i8* %data, metadata !3459, metadata !DIExpression()), !dbg !3461
  %0 = bitcast %union.tree_node** %tp to i64**, !dbg !3462
  %1 = load i64*, i64** %0, align 8, !dbg !3462
  %bf.load = load i64, i64* %1, align 8, !dbg !3462
  %2 = trunc i64 %bf.load to i32, !dbg !3462
  %bf.cast = and i32 %2, 65535, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3460, metadata !DIExpression()), !dbg !3461
  %idxprom = zext i32 %bf.cast to i64, !dbg !3463
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3463
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3463
  %cmp = icmp eq i32 %3, 2, !dbg !3465
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3466

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %3, 3, !dbg !3467
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3468

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %3, 1, !dbg !3469
  %cmp9 = icmp eq i32 %bf.cast, 120, !dbg !3470
  %or.cond = or i1 %cmp7, %cmp9, !dbg !3471
  %cmp11 = icmp eq i32 %bf.cast, 55, !dbg !3472
  %or.cond1 = or i1 %or.cond, %cmp11, !dbg !3471
  %cmp13 = icmp eq i32 %bf.cast, 4, !dbg !3473
  %or.cond2 = or i1 %or.cond1, %cmp13, !dbg !3471
  br i1 %or.cond2, label %if.then, label %if.else, !dbg !3471

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3474
  br label %if.end, !dbg !3475

if.else:                                          ; preds = %lor.lhs.false4
  %cmp14 = icmp eq i32 %bf.cast, 58, !dbg !3476
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !3476

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 870, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3476
  br label %cond.end, !dbg !3476

cond.end:                                         ; preds = %if.else, %cond.true
  %call = tail call %union.tree_node* @copy_tree_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #6, !dbg !3478
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  ret %union.tree_node* null, !dbg !3479
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @voidify_wrapper_expr(%union.tree_node* %wrapper, %union.tree_node* %temp) local_unnamed_addr #5 !dbg !3480 {
entry:
  %wrapper.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %wrapper, metadata !3484, metadata !DIExpression()), !dbg !3497
  store %union.tree_node* %wrapper, %union.tree_node** %wrapper.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %temp, metadata !3485, metadata !DIExpression()), !dbg !3497
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %wrapper, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3498
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3498
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3486, metadata !DIExpression()), !dbg !3497
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !3499
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !3500

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3501
  %bf.load = load i64, i64* %1, align 8, !dbg !3501
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3501
  %cmp = icmp eq i64 %bf.cast2, 19, !dbg !3501
  br i1 %cmp, label %cleanup, label %for.cond.preheader, !dbg !3502

for.cond.preheader:                               ; preds = %land.lhs.true
  br label %for.cond, !dbg !3503

for.cond:                                         ; preds = %for.cond.preheader, %sw.epilog
  %p.0 = phi %union.tree_node** [ %p.2, %sw.epilog ], [ %wrapper.addr, %for.cond.preheader ], !dbg !3504
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !3487, metadata !DIExpression()), !dbg !3505
  %cond1 = icmp eq %union.tree_node** %p.0, null, !dbg !3506
  br i1 %cond1, label %cleanup.loopexit, label %land.rhs, !dbg !3506

land.rhs:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %p.0, align 8, !dbg !3507
  %tobool3 = icmp eq %union.tree_node* %2, null, !dbg !3506
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3503
  br i1 %tobool3, label %land.rhs.out_crit_edge, label %for.body, !dbg !3503

land.rhs.out_crit_edge:                           ; preds = %land.rhs
  %.lcssa25 = phi %union.tree_node* [ %2, %land.rhs ], !dbg !3507
  %.lcssa = phi i64* [ %3, %land.rhs ], !dbg !3503
  %p.0.lcssa21 = phi %union.tree_node** [ %p.0, %land.rhs ], !dbg !3504
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa21, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa21, metadata !3487, metadata !DIExpression()), !dbg !3505
  %bf.load55.pre = load i64, i64* %.lcssa, align 8, !dbg !3508
  br label %out, !dbg !3503

for.body:                                         ; preds = %land.rhs
  %bf.load5 = load i64, i64* %3, align 8, !dbg !3510
  %4 = trunc i64 %bf.load5 to i16, !dbg !3510
  switch i16 %4, label %out.loopexit [
    i16 58, label %sw.bb
    i16 61, label %sw.bb13
    i16 131, label %sw.bb13
    i16 130, label %sw.bb13
    i16 147, label %sw.bb23
    i16 52, label %for.cond34.preheader
  ], !dbg !3511

for.cond34.preheader:                             ; preds = %for.body
  br label %for.cond34, !dbg !3512

sw.bb:                                            ; preds = %for.body
  %bf.set = or i64 %bf.load5, 65536, !dbg !3514
  store i64 %bf.set, i64* %3, align 8, !dbg !3514
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3515
  %6 = bitcast %union.tree_node** %p.0 to %struct.tree_common**, !dbg !3516
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !3516
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !3516
  %8 = bitcast %union.tree_node** %type12 to i64*, !dbg !3517
  store i64 %5, i64* %8, align 8, !dbg !3517
  %9 = bitcast %union.tree_node** %p.0 to %struct.tree_exp**, !dbg !3518
  %10 = load %struct.tree_exp*, %struct.tree_exp** %9, align 8, !dbg !3518
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 1, !dbg !3518
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %sw.epilog, !dbg !3519

sw.bb13:                                          ; preds = %for.body, %for.body, %for.body
  %bf.set17 = or i64 %bf.load5, 65536, !dbg !3520
  store i64 %bf.set17, i64* %3, align 8, !dbg !3520
  %11 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3521
  %12 = bitcast %union.tree_node** %p.0 to %struct.tree_common**, !dbg !3522
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !3522
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !3522
  %14 = bitcast %union.tree_node** %type19 to i64*, !dbg !3523
  store i64 %11, i64* %14, align 8, !dbg !3523
  %15 = bitcast %union.tree_node** %p.0 to %struct.tree_exp**, !dbg !3524
  %16 = load %struct.tree_exp*, %struct.tree_exp** %15, align 8, !dbg !3524
  %arrayidx22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %16, i64 0, i32 3, i64 0, !dbg !3524
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx22, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %sw.epilog, !dbg !3525

sw.bb23:                                          ; preds = %for.body
  %17 = bitcast %union.tree_node** %p.0 to i64**, !dbg !3510
  %call = call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_last(%union.tree_node* nonnull %2) #7, !dbg !3526
  %18 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call, 0, !dbg !3526
  %19 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call, 1, !dbg !3526
  %20 = load i64*, i64** %17, align 8, !dbg !3527
  %bf.load25 = load i64, i64* %20, align 8, !dbg !3528
  %bf.set27 = or i64 %bf.load25, 65536, !dbg !3528
  store i64 %bf.set27, i64* %20, align 8, !dbg !3528
  %21 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3529
  %22 = bitcast %union.tree_node** %p.0 to %struct.tree_common**, !dbg !3530
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !3530
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !3530
  %24 = bitcast %union.tree_node** %type29 to i64*, !dbg !3531
  store i64 %21, i64* %24, align 8, !dbg !3531
  %call30 = call fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %18, %union.tree_node* %19) #7, !dbg !3532
  %tobool31 = icmp eq i8 %call30, 0, !dbg !3532
  br i1 %tobool31, label %cond.false, label %cond.end, !dbg !3532

cond.false:                                       ; preds = %sw.bb23
  %call32 = call fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %18, %union.tree_node* %19) #7, !dbg !3533
  br label %cond.end, !dbg !3532

cond.end:                                         ; preds = %sw.bb23, %cond.false
  %cond = phi %union.tree_node** [ %call32, %cond.false ], [ null, %sw.bb23 ], !dbg !3532
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %sw.epilog, !dbg !3534

for.cond34:                                       ; preds = %for.cond34.preheader, %for.body41
  %25 = phi i64* [ %.pre, %for.body41 ], [ %3, %for.cond34.preheader ]
  %bf.load43 = phi i64 [ %bf.load36.pre, %for.body41 ], [ %bf.load5, %for.cond34.preheader ], !dbg !3535
  %p.1 = phi %union.tree_node** [ %arrayidx50, %for.body41 ], [ %p.0, %for.cond34.preheader ], !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1, metadata !3487, metadata !DIExpression()), !dbg !3505
  %bf.cast387 = and i64 %bf.load43, 65535, !dbg !3538
  %cmp39 = icmp eq i64 %bf.cast387, 52, !dbg !3538
  br i1 %cmp39, label %for.body41, label %sw.epilog.loopexit, !dbg !3512

for.body41:                                       ; preds = %for.cond34
  %bf.set45 = or i64 %bf.load43, 65536, !dbg !3539
  store i64 %bf.set45, i64* %25, align 8, !dbg !3539
  %26 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3541
  %27 = bitcast %union.tree_node** %p.1 to %struct.tree_common**, !dbg !3542
  %28 = load %struct.tree_common*, %struct.tree_common** %27, align 8, !dbg !3542
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i64 0, i32 2, !dbg !3542
  %29 = bitcast %union.tree_node** %type47 to i64*, !dbg !3543
  store i64 %26, i64* %29, align 8, !dbg !3543
  %30 = bitcast %union.tree_node** %p.1 to %struct.tree_exp**, !dbg !3544
  %31 = load %struct.tree_exp*, %struct.tree_exp** %30, align 8, !dbg !3544
  %arrayidx50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %31, i64 0, i32 3, i64 1, !dbg !3544
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx50, metadata !3487, metadata !DIExpression()), !dbg !3505
  %.phi.trans.insert = bitcast %union.tree_node** %arrayidx50 to i64**, !dbg !3545
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !3535
  %bf.load36.pre = load i64, i64* %.pre, align 8, !dbg !3535
  br label %for.cond34, !dbg !3546, !llvm.loop !3547

sw.epilog.loopexit:                               ; preds = %for.cond34
  %p.1.lcssa = phi %union.tree_node** [ %p.1, %for.cond34 ], !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1.lcssa, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1.lcssa, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1.lcssa, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %sw.epilog, !dbg !3549

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %cond.end, %sw.bb13, %sw.bb
  %p.2 = phi %union.tree_node** [ %cond, %cond.end ], [ %arrayidx22, %sw.bb13 ], [ %arrayidx, %sw.bb ], [ %p.1.lcssa, %sw.epilog.loopexit ], !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node** %p.2, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %for.cond, !dbg !3549, !llvm.loop !3550

out.loopexit:                                     ; preds = %for.body
  %bf.load5.lcssa = phi i64 [ %bf.load5, %for.body ], !dbg !3510
  %.lcssa26 = phi %union.tree_node* [ %2, %for.body ], !dbg !3507
  %p.0.lcssa22 = phi %union.tree_node** [ %p.0, %for.body ], !dbg !3504
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa22, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa22, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %out, !dbg !3508

out:                                              ; preds = %out.loopexit, %land.rhs.out_crit_edge
  %32 = phi %union.tree_node* [ %.lcssa25, %land.rhs.out_crit_edge ], [ %.lcssa26, %out.loopexit ]
  %p.023 = phi %union.tree_node** [ %p.0.lcssa21, %land.rhs.out_crit_edge ], [ %p.0.lcssa22, %out.loopexit ]
  %bf.load55 = phi i64 [ %bf.load55.pre, %land.rhs.out_crit_edge ], [ %bf.load5.lcssa, %out.loopexit ], !dbg !3508
  call void @llvm.dbg.value(metadata %union.tree_node** %p.023, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %p.023, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.label(metadata !3496), !dbg !3552
  %bf.cast573 = and i64 %bf.load55, 65535, !dbg !3508
  %cmp58 = icmp eq i64 %bf.cast573, 116, !dbg !3508
  br i1 %cmp58, label %land.lhs.true60, label %if.else, !dbg !3508

land.lhs.true60:                                  ; preds = %out
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3508
  %33 = bitcast %union.tree_node** %type62 to i64**, !dbg !3508
  %34 = load i64*, i64** %33, align 8, !dbg !3508
  %bf.load64 = load i64, i64* %34, align 8, !dbg !3508
  %bf.cast666 = and i64 %bf.load64, 65535, !dbg !3508
  %cmp67 = icmp eq i64 %bf.cast666, 19, !dbg !3508
  br i1 %cmp67, label %land.lhs.true69, label %if.else, !dbg !3508

land.lhs.true69:                                  ; preds = %land.lhs.true60
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3508
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8, !dbg !3508
  %call73 = call i32 @integer_zerop(%union.tree_node* %36) #6, !dbg !3508
  %tobool74 = icmp eq i32 %call73, 0, !dbg !3508
  br i1 %tobool74, label %if.else, label %cleanup, !dbg !3553

if.else:                                          ; preds = %land.lhs.true69, %land.lhs.true60, %out
  %tobool76 = icmp eq %union.tree_node* %temp, null, !dbg !3554
  br i1 %tobool76, label %if.else98, label %if.then77, !dbg !3556

if.then77:                                        ; preds = %if.else
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %temp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3557
  %bf.load79 = load i64, i64* %37, align 8, !dbg !3557
  %bf.cast814 = and i64 %bf.load79, 65535, !dbg !3557
  %cmp82 = icmp eq i64 %bf.cast814, 54, !dbg !3557
  br i1 %cmp82, label %cond.end93, label %lor.lhs.false84, !dbg !3557

lor.lhs.false84:                                  ; preds = %if.then77
  %cmp89 = icmp eq i64 %bf.cast814, 53, !dbg !3557
  br i1 %cmp89, label %cond.end93, label %cond.true91, !dbg !3557

cond.true91:                                      ; preds = %lor.lhs.false84
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1038, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3557
  br label %cond.end93, !dbg !3557

cond.end93:                                       ; preds = %if.then77, %lor.lhs.false84, %cond.true91
  %38 = bitcast %union.tree_node** %p.023 to i64*, !dbg !3559
  %39 = load i64, i64* %38, align 8, !dbg !3559
  %operands96 = getelementptr inbounds %union.tree_node, %union.tree_node* %temp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3560
  %arrayidx97 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands96, i64 1, !dbg !3560
  %40 = bitcast %union.tree_node** %arrayidx97 to i64*, !dbg !3561
  store i64 %39, i64* %40, align 8, !dbg !3561
  store %union.tree_node* %temp, %union.tree_node** %p.023, align 8, !dbg !3562
  br label %cleanup, !dbg !3563

if.else98:                                        ; preds = %if.else
  %call99 = call %union.tree_node* @create_tmp_var(%union.tree_node* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !3564
  call void @llvm.dbg.value(metadata %union.tree_node* %call99, metadata !3485, metadata !DIExpression()), !dbg !3497
  %41 = load %union.tree_node*, %union.tree_node** %p.023, align 8, !dbg !3566
  %call100 = call %union.tree_node* @build2_stat(i32 54, %union.tree_node* nonnull %0, %union.tree_node* %call99, %union.tree_node* %41) #6, !dbg !3566
  store %union.tree_node* %call100, %union.tree_node** %p.023, align 8, !dbg !3567
  br label %cleanup

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3568

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true69, %entry, %land.lhs.true, %if.else98, %cond.end93
  %retval.0 = phi %union.tree_node* [ null, %land.lhs.true69 ], [ %temp, %cond.end93 ], [ %call99, %if.else98 ], [ null, %land.lhs.true ], [ null, %entry ], [ null, %cleanup.loopexit ], !dbg !3497
  ret %union.tree_node* %retval.0, !dbg !3568
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_last(%union.tree_node* %t) unnamed_addr #0 !dbg !3569 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3573, metadata !DIExpression()), !dbg !3575
  %tail = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3576
  %0 = bitcast %union.tree_node** %tail to %struct.tree_statement_list_node**, !dbg !3576
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !3576
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !3577
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !3577
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !3577
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !3578 {
entry:
  %cmp = icmp eq %struct.tree_statement_list_node* %i.coerce0, null, !dbg !3583
  %conv1 = zext i1 %cmp to i8, !dbg !3584
  ret i8 %conv1, !dbg !3585
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !3586 {
entry:
  %stmt = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 2, !dbg !3591
  ret %union.tree_node** %stmt, !dbg !3592
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sort_case_labels(%struct.VEC_tree_heap* %label_vec) local_unnamed_addr #5 !dbg !3593 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %label_vec, metadata !3597, metadata !DIExpression()), !dbg !3599
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %label_vec, i64 0, i32 0, !dbg !3600
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !3600
  %conv = zext i32 %call to i64, !dbg !3600
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3598, metadata !DIExpression()), !dbg !3599
  %call7 = tail call fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %base) #7, !dbg !3601
  %0 = bitcast %union.tree_node** %call7 to i8*, !dbg !3601
  tail call void @spec_qsort(i8* %0, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @compare_case_labels) #6, !dbg !3602
  ret void, !dbg !3603
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3604 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3610, metadata !DIExpression()), !dbg !3611
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3612
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3612

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3612
  %0 = load i32, i32* %num, align 8, !dbg !3612
  br label %cond.end, !dbg !3612

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3612
  ret i32 %cond, !dbg !3612
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3613 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3618, metadata !DIExpression()), !dbg !3619
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3620
  %arraydecay = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !3620
  %cond = select i1 %tobool, %union.tree_node** null, %union.tree_node** %arraydecay, !dbg !3620
  ret %union.tree_node** %cond, !dbg !3620
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_case_labels(i8* %p1, i8* %p2) #5 !dbg !3621 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3623, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3624, metadata !DIExpression()), !dbg !3627
  %0 = bitcast i8* %p1 to %union.tree_node**, !dbg !3628
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3629
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3625, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3626, metadata !DIExpression()), !dbg !3627
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3630
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3630
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !3630
  br i1 %tobool, label %cleanup, label %if.else, !dbg !3632

if.else:                                          ; preds = %entry
  %3 = bitcast i8* %p2 to %union.tree_node**, !dbg !3633
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3634
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3626, metadata !DIExpression()), !dbg !3627
  %operands2 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3635
  %5 = load %union.tree_node*, %union.tree_node** %operands2, align 8, !dbg !3635
  %tobool4 = icmp eq %union.tree_node* %5, null, !dbg !3635
  br i1 %tobool4, label %cleanup, label %if.else6, !dbg !3637

if.else6:                                         ; preds = %if.else
  %call = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %2, %union.tree_node* nonnull %5) #6, !dbg !3638
  br label %cleanup, !dbg !3639

cleanup:                                          ; preds = %if.else, %entry, %if.else6
  %retval.0 = phi i32 [ %call, %if.else6 ], [ -1, %entry ], [ 1, %if.else ], !dbg !3640
  ret i32 %retval.0, !dbg !3641
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_and_jump(%union.tree_node** %label_p) local_unnamed_addr #5 !dbg !3642 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %label_p, metadata !3646, metadata !DIExpression()), !dbg !3650
  %cmp = icmp eq %union.tree_node** %label_p, null, !dbg !3651
  br i1 %cmp, label %return, label %if.end, !dbg !3653

if.end:                                           ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** %label_p, align 8, !dbg !3654
  %cmp1 = icmp eq %union.tree_node* %0, null, !dbg !3655
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3656

if.then2:                                         ; preds = %if.end
  %call = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !3657
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3647, metadata !DIExpression()), !dbg !3658
  store %union.tree_node* %call, %union.tree_node** %label_p, align 8, !dbg !3659
  br label %if.end3, !dbg !3660

if.end3:                                          ; preds = %if.then2, %if.end
  %1 = phi %union.tree_node* [ %call, %if.then2 ], [ %0, %if.end ], !dbg !3661
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !3661
  %call4 = tail call %union.tree_node* @build1_stat(i32 134, %union.tree_node* %2, %union.tree_node* %1) #6, !dbg !3661
  br label %return, !dbg !3662

return:                                           ; preds = %entry, %if.end3
  %retval.0 = phi %union.tree_node* [ %call4, %if.end3 ], [ null, %entry ], !dbg !3650
  ret %union.tree_node* %retval.0, !dbg !3663
}

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @force_labels_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !3664 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !3666, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !3667, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata i8* %data, metadata !3668, metadata !DIExpression()), !dbg !3669
  %0 = bitcast %union.tree_node** %tp to i64**, !dbg !3670
  %1 = load i64*, i64** %0, align 8, !dbg !3670
  %bf.load = load i64, i64* %1, align 8, !dbg !3670
  %bf.cast = and i64 %bf.load, 65535, !dbg !3670
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3670
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3670
  %cmp = icmp eq i32 %2, 2, !dbg !3670
  br i1 %cmp, label %if.then, label %if.end, !dbg !3672

if.then:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3673
  %.pre = load i64*, i64** %0, align 8, !dbg !3674
  %bf.load2.pre = load i64, i64* %.pre, align 8, !dbg !3674
  br label %if.end, !dbg !3676

if.end:                                           ; preds = %if.then, %entry
  %bf.load8 = phi i64 [ %bf.load2.pre, %if.then ], [ %bf.load, %entry ], !dbg !3674
  %3 = phi i64* [ %.pre, %if.then ], [ %1, %entry ], !dbg !3674
  %bf.cast41 = and i64 %bf.load8, 65535, !dbg !3677
  %cmp5 = icmp eq i64 %bf.cast41, 30, !dbg !3677
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !3678

if.then6:                                         ; preds = %if.end
  %bf.set = or i64 %bf.load8, 65536, !dbg !3679
  store i64 %bf.set, i64* %3, align 8, !dbg !3679
  br label %if.end10, !dbg !3680

if.end10:                                         ; preds = %if.then6, %if.end
  ret %union.tree_node* null, !dbg !3681
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimple_boolify(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !3682 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3684, metadata !DIExpression()), !dbg !3694
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3695
  %0 = bitcast %union.tree_node** %type1 to i64**, !dbg !3695
  %1 = load i64*, i64** %0, align 8, !dbg !3695
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3696
  %bf.load = load i64, i64* %2, align 8, !dbg !3696
  %bf.cast = and i64 %bf.load, 65535, !dbg !3696
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3696
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3696
  %cmp = icmp ugt i32 %3, 3, !dbg !3696
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !3696

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp ult i32 %3, 11, !dbg !3696
  br i1 %cmp8, label %cond.true, label %cond.end, !dbg !3696

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3696
  %5 = load i32, i32* %4, align 8, !dbg !3696
  br label %cond.end, !dbg !3696

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !3696
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3686, metadata !DIExpression()), !dbg !3694
  %cmp13 = icmp eq i64 %bf.cast, 102, !dbg !3697
  br i1 %cmp13, label %land.lhs.true14, label %if.end88, !dbg !3698

land.lhs.true14:                                  ; preds = %cond.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3699
  %6 = bitcast %union.tree_node** %operands to i64**, !dbg !3699
  %7 = load i64*, i64** %6, align 8, !dbg !3699
  %bf.load18 = load i64, i64* %7, align 8, !dbg !3699
  %bf.cast203 = and i64 %bf.load18, 65535, !dbg !3700
  %cmp21 = icmp eq i64 %bf.cast203, 59, !dbg !3700
  br i1 %cmp21, label %land.lhs.true22, label %if.end88, !dbg !3701

land.lhs.true22:                                  ; preds = %land.lhs.true14
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3702
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !3702
  %call = tail call i32 @integer_zerop(%union.tree_node* %8) #6, !dbg !3703
  %tobool = icmp eq i32 %call, 0, !dbg !3703
  br i1 %tobool, label %if.end88, label %if.then, !dbg !3704

if.then:                                          ; preds = %land.lhs.true22
  %9 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3705
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3687, metadata !DIExpression()), !dbg !3706
  %call30 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %9) #6, !dbg !3707
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3690, metadata !DIExpression()), !dbg !3706
  %tobool31 = icmp eq %union.tree_node* %call30, null, !dbg !3708
  br i1 %tobool31, label %if.end88, label %land.lhs.true32, !dbg !3709

land.lhs.true32:                                  ; preds = %if.then
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 5, !dbg !3710
  %bf.load33 = load i32, i32* %built_in_class, align 8, !dbg !3710
  %bf.clear34 = and i32 %bf.load33, 6144, !dbg !3710
  %cmp35 = icmp eq i32 %bf.clear34, 6144, !dbg !3711
  br i1 %cmp35, label %land.lhs.true36, label %if.end88, !dbg !3712

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %bf.clear39 = and i32 %bf.load33, 2047, !dbg !3713
  %cmp40 = icmp eq i32 %bf.clear39, 446, !dbg !3714
  br i1 %cmp40, label %land.lhs.true41, label %if.end88, !dbg !3715

land.lhs.true41:                                  ; preds = %land.lhs.true36
  %operands43 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3716
  %10 = bitcast %union.tree_node** %operands43 to %struct.tree_int_cst**, !dbg !3716
  %11 = load %struct.tree_int_cst*, %struct.tree_int_cst** %10, align 8, !dbg !3716
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %11, i64 0, i32 1, i32 0, !dbg !3716
  %12 = load i64, i64* %low, align 8, !dbg !3716
  %conv = trunc i64 %12 to i32, !dbg !3716
  %cmp46 = icmp eq i32 %conv, 5, !dbg !3717
  br i1 %cmp46, label %if.then48, label %if.end88, !dbg !3718

if.then48:                                        ; preds = %land.lhs.true41
  %arrayidx51 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands43, i64 3, !dbg !3719
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx51, align 8, !dbg !3719
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3691, metadata !DIExpression()), !dbg !3720
  %tobool52 = icmp eq %union.tree_node* %13, null, !dbg !3721
  br i1 %tobool52, label %if.end88, label %if.then53, !dbg !3723

if.then53:                                        ; preds = %if.then48
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3724
  %bf.load55 = load i64, i64* %14, align 8, !dbg !3724
  %bf.cast574 = and i64 %bf.load55, 65535, !dbg !3727
  %cmp58 = icmp eq i64 %bf.cast574, 116, !dbg !3727
  br i1 %cmp58, label %land.lhs.true60, label %if.end, !dbg !3728

land.lhs.true60:                                  ; preds = %if.then53
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3729
  %15 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !3729
  %type64 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3730
  %16 = load %union.tree_node*, %union.tree_node** %type64, align 8, !dbg !3730
  %cmp65 = icmp eq %union.tree_node* %15, %16, !dbg !3731
  br i1 %cmp65, label %if.then67, label %if.end, !dbg !3732

if.then67:                                        ; preds = %land.lhs.true60
  %operands69 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3733
  %17 = load %union.tree_node*, %union.tree_node** %operands69, align 8, !dbg !3733
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3691, metadata !DIExpression()), !dbg !3720
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3734
  %bf.load72.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3736
  br label %if.end, !dbg !3737

if.end:                                           ; preds = %if.then67, %land.lhs.true60, %if.then53
  %bf.load72 = phi i64 [ %bf.load72.pre, %if.then67 ], [ %bf.load55, %land.lhs.true60 ], [ %bf.load55, %if.then53 ], !dbg !3736
  %arg.0 = phi %union.tree_node* [ %17, %if.then67 ], [ %13, %land.lhs.true60 ], [ %13, %if.then53 ], !dbg !3720
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !3691, metadata !DIExpression()), !dbg !3720
  %18 = trunc i64 %bf.load72 to i32, !dbg !3736
  %bf.cast74 = and i32 %18, 65535, !dbg !3736
  %call75 = tail call fastcc zeroext i8 @truth_value_p(i32 %bf.cast74) #7, !dbg !3738
  %tobool76 = icmp eq i8 %call75, 0, !dbg !3738
  br i1 %tobool76, label %if.end88, label %if.then77, !dbg !3739

if.then77:                                        ; preds = %if.end
  %call78 = tail call %union.tree_node* @gimple_boolify(%union.tree_node* %arg.0) #7, !dbg !3740
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !3691, metadata !DIExpression()), !dbg !3720
  %type80 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3742
  %19 = load %union.tree_node*, %union.tree_node** %type80, align 8, !dbg !3742
  %call81 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %19, %union.tree_node* %call78) #6, !dbg !3743
  store %union.tree_node* %call81, %union.tree_node** %arrayidx51, align 8, !dbg !3744
  br label %if.end88, !dbg !3745

if.end88:                                         ; preds = %if.end, %if.then48, %if.then, %land.lhs.true22, %land.lhs.true32, %land.lhs.true36, %land.lhs.true41, %if.then77, %land.lhs.true14, %cond.end
  %bf.load90 = load i64, i64* %1, align 8, !dbg !3746
  %bf.cast922 = and i64 %bf.load90, 65535, !dbg !3748
  %cmp93 = icmp eq i64 %bf.cast922, 7, !dbg !3748
  br i1 %cmp93, label %cleanup, label %if.end96, !dbg !3749

if.end96:                                         ; preds = %if.end88
  %bf.load98 = load i64, i64* %2, align 8, !dbg !3750
  %20 = trunc i64 %bf.load98 to i16, !dbg !3750
  switch i16 %20, label %sw.default [
    i16 93, label %sw.bb
    i16 94, label %sw.bb
    i16 95, label %sw.bb
    i16 91, label %sw.bb
    i16 92, label %sw.bb
    i16 96, label %sw.bb108
    i16 101, label %sw.bb116
    i16 102, label %sw.bb116
    i16 98, label %sw.bb116
    i16 100, label %sw.bb116
    i16 97, label %sw.bb116
    i16 99, label %sw.bb116
  ], !dbg !3751

sw.bb:                                            ; preds = %if.end96, %if.end96, %if.end96, %if.end96, %if.end96
  %operands102 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3752
  %arrayidx103 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands102, i64 1, !dbg !3752
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx103, align 8, !dbg !3752
  %call104 = tail call %union.tree_node* @gimple_boolify(%union.tree_node* %21) #7, !dbg !3754
  store %union.tree_node* %call104, %union.tree_node** %arrayidx103, align 8, !dbg !3755
  br label %sw.bb108, !dbg !3756

sw.bb108:                                         ; preds = %if.end96, %sw.bb
  %operands110 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3757
  %22 = load %union.tree_node*, %union.tree_node** %operands110, align 8, !dbg !3757
  %call112 = tail call %union.tree_node* @gimple_boolify(%union.tree_node* %22) #7, !dbg !3758
  store %union.tree_node* %call112, %union.tree_node** %operands110, align 8, !dbg !3759
  br label %sw.bb116, !dbg !3760

sw.bb116:                                         ; preds = %if.end96, %if.end96, %if.end96, %if.end96, %if.end96, %if.end96, %sw.bb108
  %23 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !3761
  %24 = bitcast %union.tree_node** %type1 to i64*, !dbg !3762
  store i64 %23, i64* %24, align 8, !dbg !3762
  br label %cleanup, !dbg !3763

sw.default:                                       ; preds = %if.end96
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3764
  %call119 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %25, %union.tree_node* %expr) #6, !dbg !3765
  br label %cleanup, !dbg !3766

cleanup:                                          ; preds = %if.end88, %sw.default, %sw.bb116
  %retval.0 = phi %union.tree_node* [ %call119, %sw.default ], [ %expr, %sw.bb116 ], [ %expr, %if.end88 ], !dbg !3694
  ret %union.tree_node* %retval.0, !dbg !3767
}

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @truth_value_p(i32 %code) unnamed_addr #0 !dbg !3768 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3772, metadata !DIExpression()), !dbg !3773
  %idxprom = sext i32 %code to i64, !dbg !3774
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3774
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3774
  %cmp = icmp eq i32 %0, 5, !dbg !3775
  %cmp1 = icmp eq i32 %code, 93, !dbg !3776
  %or.cond = or i1 %cmp, %cmp1, !dbg !3777
  %cmp3 = icmp eq i32 %code, 91, !dbg !3778
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !3777
  %1 = or i32 %code, 2, !dbg !3777
  %2 = icmp eq i32 %1, 94, !dbg !3777
  %3 = or i1 %2, %or.cond1, !dbg !3777
  %4 = add i32 %code, -95, !dbg !3777
  %5 = icmp ult i32 %4, 2, !dbg !3777
  %6 = or i1 %5, %3, !dbg !3777
  %conv = zext i1 %6 to i8, !dbg !3779
  ret i8 %conv, !dbg !3780
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %lhs) local_unnamed_addr #5 !dbg !3781 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !3789, metadata !DIExpression()), !dbg !3790
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %lhs) #6, !dbg !3791
  %tobool = icmp eq i8 %call, 0, !dbg !3791
  %is_gimple_reg_rhs_or_call.is_gimple_mem_rhs_or_call = select i1 %tobool, i8 (%union.tree_node*)* @is_gimple_mem_rhs_or_call, i8 (%union.tree_node*)* @is_gimple_reg_rhs_or_call, !dbg !3793
  ret i8 (%union.tree_node*)* %is_gimple_reg_rhs_or_call.is_gimple_mem_rhs_or_call, !dbg !3794
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @is_gimple_reg_rhs_or_call(%union.tree_node* %t) #5 !dbg !3795 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3797, metadata !DIExpression()), !dbg !3798
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3799
  %bf.load = load i64, i64* %0, align 8, !dbg !3799
  %1 = trunc i64 %bf.load to i32, !dbg !3799
  %bf.cast = and i32 %1, 65535, !dbg !3799
  %call = tail call fastcc i32 @get_gimple_rhs_class(i32 %bf.cast) #7, !dbg !3800
  %cmp = icmp eq i32 %call, 0, !dbg !3801
  br i1 %cmp, label %lor.rhs, label %lor.end, !dbg !3802

lor.rhs:                                          ; preds = %entry
  %bf.load2 = load i64, i64* %0, align 8, !dbg !3803
  %bf.cast41 = and i64 %bf.load2, 65535, !dbg !3804
  %cmp5 = icmp eq i64 %bf.cast41, 59, !dbg !3804
  %phitmp = zext i1 %cmp5 to i8, !dbg !3802
  br label %lor.end, !dbg !3802

lor.end:                                          ; preds = %entry, %lor.rhs
  %2 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !3805
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @is_gimple_mem_rhs_or_call(%union.tree_node* %t) #5 !dbg !3806 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3808, metadata !DIExpression()), !dbg !3809
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3810
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3810
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %0) #6, !dbg !3812
  %tobool = icmp eq i8 %call, 0, !dbg !3812
  %call1 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %t) #6, !dbg !3813
  br i1 %tobool, label %if.else, label %return, !dbg !3814

if.else:                                          ; preds = %entry
  %tobool3 = icmp eq i8 %call1, 0, !dbg !3815
  br i1 %tobool3, label %lor.lhs.false, label %lor.end, !dbg !3816

lor.lhs.false:                                    ; preds = %if.else
  %call4 = tail call zeroext i8 @is_gimple_lvalue(%union.tree_node* %t) #6, !dbg !3817
  %tobool6 = icmp eq i8 %call4, 0, !dbg !3817
  br i1 %tobool6, label %lor.rhs, label %lor.end, !dbg !3818

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3819
  %bf.load = load i64, i64* %1, align 8, !dbg !3819
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3820
  %cmp = icmp eq i64 %bf.cast1, 59, !dbg !3820
  %phitmp = zext i1 %cmp to i8, !dbg !3818
  br label %lor.end, !dbg !3818

lor.end:                                          ; preds = %lor.lhs.false, %if.else, %lor.rhs
  %2 = phi i8 [ 1, %lor.lhs.false ], [ 1, %if.else ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !3821

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i8 [ %2, %lor.end ], [ %call1, %entry ], !dbg !3813
  ret i8 %retval.0, !dbg !3822
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node* %t) local_unnamed_addr #5 !dbg !3823 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3825, metadata !DIExpression()), !dbg !3867
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3868
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !3868
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3868
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3868
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !3868
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3826, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3827, metadata !DIExpression()), !dbg !3867
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %t) #6, !dbg !3869
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3827, metadata !DIExpression()), !dbg !3867
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3870
  %3 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !3870
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3828, metadata !DIExpression()), !dbg !3867
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3871
  %bf.load = load i64, i64* %4, align 8, !dbg !3871
  %bf.cast7 = and i64 %bf.load, 65535, !dbg !3871
  %cmp = icmp eq i64 %bf.cast7, 10, !dbg !3871
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3871

lor.lhs.false:                                    ; preds = %entry
  %cmp10 = icmp eq i64 %bf.cast7, 12, !dbg !3871
  br i1 %cmp10, label %if.end, label %cleanup327, !dbg !3873

if.end:                                           ; preds = %lor.lhs.false, %entry
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3874
  %bf.load12 = load i64, i64* %5, align 8, !dbg !3874
  %bf.cast149 = and i64 %bf.load12, 65535, !dbg !3875
  %cmp15 = icmp eq i64 %bf.cast149, 121, !dbg !3875
  br i1 %cmp15, label %if.then16, label %if.end101, !dbg !3876

if.then16:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3877
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3877
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3829, metadata !DIExpression()), !dbg !3878
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3879
  %7 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !3879
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3832, metadata !DIExpression()), !dbg !3878
  %call19 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %7) #6, !dbg !3880
  %tobool = icmp eq i8 %call19, 0, !dbg !3880
  br i1 %tobool, label %if.end21, label %cleanup97, !dbg !3882

if.end21:                                         ; preds = %if.then16
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3883
  %bf.load23 = load i64, i64* %8, align 8, !dbg !3883
  %bf.cast2521 = and i64 %bf.load23, 65535, !dbg !3884
  %cmp26 = icmp eq i64 %bf.cast2521, 15, !dbg !3884
  br i1 %cmp26, label %land.lhs.true, label %if.else, !dbg !3885

land.lhs.true:                                    ; preds = %if.end21
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3886
  %9 = bitcast %union.tree_node** %type28 to %struct.tree_type**, !dbg !3886
  %10 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !3886
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 2, !dbg !3886
  %11 = bitcast %union.tree_node** %size to i64**, !dbg !3886
  %12 = load i64*, i64** %11, align 8, !dbg !3886
  %bf.load31 = load i64, i64* %12, align 8, !dbg !3886
  %bf.cast3324 = and i64 %bf.load31, 65535, !dbg !3887
  %cmp34 = icmp eq i64 %bf.cast3324, 23, !dbg !3887
  br i1 %cmp34, label %land.lhs.true35, label %if.else, !dbg !3888

land.lhs.true35:                                  ; preds = %land.lhs.true
  %13 = bitcast %struct.tree_type* %10 to %union.tree_node*, !dbg !3888
  %call38 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %13) #6, !dbg !3889
  %tobool39 = icmp eq i8 %call38, 0, !dbg !3889
  br i1 %tobool39, label %land.lhs.true35.if.else_crit_edge, label %if.then40, !dbg !3890

land.lhs.true35.if.else_crit_edge:                ; preds = %land.lhs.true35
  %bf.load61.pre = load i64, i64* %8, align 8, !dbg !3891
  br label %if.else, !dbg !3890

if.then40:                                        ; preds = %land.lhs.true35
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3892
  %14 = bitcast i32* %values to %union.tree_node**, !dbg !3892
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !3892
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3833, metadata !DIExpression()), !dbg !3893
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !3894
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3836, metadata !DIExpression()), !dbg !3893
  %tobool42 = icmp eq %union.tree_node* %15, null, !dbg !3895
  br i1 %tobool42, label %if.end49, label %land.lhs.true43, !dbg !3897

land.lhs.true43:                                  ; preds = %if.then40
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3898
  %17 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !3898
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !3898
  %tobool45 = icmp eq %union.tree_node* %18, null, !dbg !3898
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !3899

if.then46:                                        ; preds = %land.lhs.true43
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3836, metadata !DIExpression()), !dbg !3893
  br label %if.end49, !dbg !3900

if.end49:                                         ; preds = %land.lhs.true43, %if.then40, %if.then46
  %min_val.0 = phi %union.tree_node* [ %18, %if.then46 ], [ %16, %land.lhs.true43 ], [ %16, %if.then40 ], !dbg !3893
  call void @llvm.dbg.value(metadata %union.tree_node* %min_val.0, metadata !3836, metadata !DIExpression()), !dbg !3893
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %min_val.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3901
  %bf.load51 = load i64, i64* %19, align 8, !dbg !3901
  %bf.cast5325 = and i64 %bf.load51, 65535, !dbg !3903
  %cmp54 = icmp eq i64 %bf.cast5325, 23, !dbg !3903
  br i1 %cmp54, label %if.then56, label %cleanup, !dbg !3904

if.then56:                                        ; preds = %if.end49
  %call57 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %2, %union.tree_node* %6, %union.tree_node* %min_val.0, %union.tree_node* null, %union.tree_node* null) #6, !dbg !3905
  br label %cleanup, !dbg !3906

cleanup:                                          ; preds = %if.end49, %if.then56
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then56 ], [ 0, %if.end49 ]
  %retval.0 = phi %union.tree_node* [ %call57, %if.then56 ], [ undef, %if.end49 ]
  %cond6 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond6, label %if.end96, label %cleanup97

if.else:                                          ; preds = %land.lhs.true35.if.else_crit_edge, %land.lhs.true, %if.end21
  %bf.load61 = phi i64 [ %bf.load61.pre, %land.lhs.true35.if.else_crit_edge ], [ %bf.load23, %land.lhs.true ], [ %bf.load23, %if.end21 ], !dbg !3891
  %bf.cast6322 = and i64 %bf.load61, 65535, !dbg !3907
  %cmp64 = icmp eq i64 %bf.cast6322, 13, !dbg !3907
  br i1 %cmp64, label %land.lhs.true66, label %if.else74, !dbg !3908

land.lhs.true66:                                  ; preds = %if.else
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3909
  %20 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !3909
  %call69 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %20) #6, !dbg !3910
  %tobool71 = icmp eq i8 %call69, 0, !dbg !3910
  br i1 %tobool71, label %land.lhs.true66.if.else74_crit_edge, label %if.then72, !dbg !3911

land.lhs.true66.if.else74_crit_edge:              ; preds = %land.lhs.true66
  %bf.load76.pre = load i64, i64* %8, align 8, !dbg !3912
  br label %if.else74, !dbg !3911

if.then72:                                        ; preds = %land.lhs.true66
  %call73 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 43, %union.tree_node* %2, %union.tree_node* %6) #6, !dbg !3913
  br label %cleanup97, !dbg !3914

if.else74:                                        ; preds = %land.lhs.true66.if.else74_crit_edge, %if.else
  %bf.load76 = phi i64 [ %bf.load76.pre, %land.lhs.true66.if.else74_crit_edge ], [ %bf.load61, %if.else ], !dbg !3912
  %bf.cast7823 = and i64 %bf.load76, 65535, !dbg !3915
  %cmp79 = icmp eq i64 %bf.cast7823, 14, !dbg !3915
  br i1 %cmp79, label %land.lhs.true81, label %if.end96, !dbg !3916

land.lhs.true81:                                  ; preds = %if.else74
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3917
  %21 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !3917
  %call84 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %21) #6, !dbg !3918
  %tobool86 = icmp eq i8 %call84, 0, !dbg !3918
  br i1 %tobool86, label %if.end96, label %if.then87, !dbg !3919

if.then87:                                        ; preds = %land.lhs.true81
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3920
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !3920
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3837, metadata !DIExpression()), !dbg !3921
  %call90 = tail call %union.tree_node* @size_int_kind(i64 0, i32 2) #6, !dbg !3922
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !3841, metadata !DIExpression()), !dbg !3921
  %call91 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 42, %union.tree_node* %2, %union.tree_node* %6, %union.tree_node* %23, %union.tree_node* %call90) #6, !dbg !3923
  br label %cleanup97

if.end96:                                         ; preds = %land.lhs.true81, %if.else74, %cleanup
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ undef, %if.else74 ], [ undef, %land.lhs.true81 ]
  br label %cleanup97, !dbg !3924

cleanup97:                                        ; preds = %if.then16, %cleanup, %if.end96, %if.then87, %if.then72
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end96 ], [ 1, %if.then72 ], [ 1, %if.then87 ], [ 1, %if.then16 ]
  %retval.2 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %retval.1, %if.end96 ], [ %call73, %if.then72 ], [ %call91, %if.then87 ], [ %6, %if.then16 ], !dbg !3878
  %cond5 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond5, label %cleanup97.if.end101_crit_edge, label %cleanup327

cleanup97.if.end101_crit_edge:                    ; preds = %cleanup97
  %bf.load103.pre = load i64, i64* %5, align 8, !dbg !3925
  br label %if.end101

if.end101:                                        ; preds = %cleanup97.if.end101_crit_edge, %if.end
  %bf.load103 = phi i64 [ %bf.load12, %if.end ], [ %bf.load103.pre, %cleanup97.if.end101_crit_edge ], !dbg !3925
  %retval.3 = phi %union.tree_node* [ undef, %if.end ], [ %retval.2, %cleanup97.if.end101_crit_edge ]
  %bf.cast10510 = and i64 %bf.load103, 65535, !dbg !3926
  %cmp106 = icmp eq i64 %bf.cast10510, 66, !dbg !3926
  br i1 %cmp106, label %land.lhs.true108, label %if.end186, !dbg !3927

land.lhs.true108:                                 ; preds = %if.end101
  %operands110 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3928
  %arrayidx111 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands110, i64 1, !dbg !3928
  %24 = bitcast %union.tree_node** %arrayidx111 to i64**, !dbg !3928
  %25 = load i64*, i64** %24, align 8, !dbg !3928
  %bf.load113 = load i64, i64* %25, align 8, !dbg !3928
  %bf.cast11518 = and i64 %bf.load113, 65535, !dbg !3929
  %cmp116 = icmp eq i64 %bf.cast11518, 23, !dbg !3929
  %26 = bitcast i64* %25 to %union.tree_node*, !dbg !3930
  br i1 %cmp116, label %if.then118, label %if.end186, !dbg !3930

if.then118:                                       ; preds = %land.lhs.true108
  %27 = load %union.tree_node*, %union.tree_node** %operands110, align 8, !dbg !3931
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3842, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !3845, metadata !DIExpression()), !dbg !3932
  %call125 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %27) #6, !dbg !3933
  call void @llvm.dbg.value(metadata %union.tree_node* %call125, metadata !3842, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3846, metadata !DIExpression()), !dbg !3932
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3934
  %bf.load129 = load i64, i64* %28, align 8, !dbg !3934
  %bf.cast13119 = and i64 %bf.load129, 65535, !dbg !3935
  %cmp132 = icmp eq i64 %bf.cast13119, 121, !dbg !3935
  br i1 %cmp132, label %land.lhs.true134, label %if.end180, !dbg !3936

land.lhs.true134:                                 ; preds = %if.then118
  %type127 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3937
  %29 = load %union.tree_node*, %union.tree_node** %type127, align 8, !dbg !3937
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3846, metadata !DIExpression()), !dbg !3932
  %type136 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3938
  %30 = bitcast %union.tree_node** %type136 to i64**, !dbg !3938
  %31 = load i64*, i64** %30, align 8, !dbg !3938
  %bf.load138 = load i64, i64* %31, align 8, !dbg !3938
  %bf.cast14020 = and i64 %bf.load138, 65535, !dbg !3939
  %cmp141 = icmp eq i64 %bf.cast14020, 14, !dbg !3939
  br i1 %cmp141, label %land.lhs.true143, label %if.end180, !dbg !3940

land.lhs.true143:                                 ; preds = %land.lhs.true134
  %type147 = getelementptr inbounds i64, i64* %31, i64 2, !dbg !3941
  %32 = bitcast i64* %type147 to %union.tree_node**, !dbg !3941
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !3941
  %call148 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %33) #6, !dbg !3942
  %tobool150 = icmp eq i8 %call148, 0, !dbg !3942
  br i1 %tobool150, label %if.end180, label %if.then151, !dbg !3943

if.then151:                                       ; preds = %land.lhs.true143
  %call152 = tail call i64 @tree_low_cst(%union.tree_node* %26, i32 0) #6, !dbg !3944
  call void @llvm.dbg.value(metadata i64 %call152, metadata !3847, metadata !DIExpression()), !dbg !3945
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3946
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !3946
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !3850, metadata !DIExpression()), !dbg !3945
  %call156 = tail call i64 @tree_low_cst(%union.tree_node* %35, i32 0) #6, !dbg !3947
  %div = sdiv i64 %call156, 8, !dbg !3948
  call void @llvm.dbg.value(metadata i64 %div, metadata !3851, metadata !DIExpression()), !dbg !3945
  %mul = shl nsw i64 %call152, 3, !dbg !3949
  call void @llvm.dbg.value(metadata i64 %mul, metadata !3852, metadata !DIExpression()), !dbg !3945
  %call158 = tail call %union.tree_node* @size_int_kind(i64 %mul, i32 2) #6, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %call158, metadata !3853, metadata !DIExpression()), !dbg !3945
  %div159 = udiv i64 %call152, %div, !dbg !3951
  %36 = bitcast %union.tree_node** %type136 to %struct.tree_type**, !dbg !3953
  %37 = load %struct.tree_type*, %struct.tree_type** %36, align 8, !dbg !3953
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %37, i64 0, i32 6, !dbg !3953
  %bf.load163 = load i32, i32* %precision, align 4, !dbg !3953
  %bf.clear164 = and i32 %bf.load163, 1023, !dbg !3953
  %sh_prom = zext i32 %bf.clear164 to i64, !dbg !3953
  %shl = shl i64 1, %sh_prom, !dbg !3953
  %cmp165 = icmp ugt i64 %div159, %shl, !dbg !3954
  br i1 %cmp165, label %cleanup173, label %if.then167, !dbg !3955

if.then167:                                       ; preds = %if.then151
  %operands169 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3956
  %38 = load %union.tree_node*, %union.tree_node** %operands169, align 8, !dbg !3956
  %call171 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 42, %union.tree_node* %2, %union.tree_node* %38, %union.tree_node* %35, %union.tree_node* %call158) #6, !dbg !3956
  br label %cleanup173, !dbg !3957

cleanup173:                                       ; preds = %if.then151, %if.then167
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then167 ], [ 0, %if.then151 ]
  %retval.4 = phi %union.tree_node* [ %call171, %if.then167 ], [ %retval.3, %if.then151 ], !dbg !3867
  %cond4 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond4, label %if.end180, label %cleanup181

if.end180:                                        ; preds = %land.lhs.true143, %cleanup173, %land.lhs.true134, %if.then118
  %retval.5 = phi %union.tree_node* [ %retval.3, %land.lhs.true143 ], [ %retval.3, %land.lhs.true134 ], [ %retval.3, %if.then118 ], [ %retval.4, %cleanup173 ], !dbg !3867
  br label %cleanup181, !dbg !3958

cleanup181:                                       ; preds = %cleanup173, %if.end180
  %cleanup.dest.slot.3 = phi i32 [ %cleanup.dest.slot.2, %cleanup173 ], [ 0, %if.end180 ]
  %retval.6 = phi %union.tree_node* [ %retval.4, %cleanup173 ], [ %retval.5, %if.end180 ], !dbg !3957
  %cond3 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond3, label %cleanup181.if.end186_crit_edge, label %cleanup327

cleanup181.if.end186_crit_edge:                   ; preds = %cleanup181
  %bf.load188.pre = load i64, i64* %5, align 8, !dbg !3959
  br label %if.end186

if.end186:                                        ; preds = %cleanup181.if.end186_crit_edge, %land.lhs.true108, %if.end101
  %bf.load188 = phi i64 [ %bf.load103, %land.lhs.true108 ], [ %bf.load103, %if.end101 ], [ %bf.load188.pre, %cleanup181.if.end186_crit_edge ], !dbg !3959
  %retval.7 = phi %union.tree_node* [ %retval.3, %land.lhs.true108 ], [ %retval.3, %if.end101 ], [ %retval.6, %cleanup181.if.end186_crit_edge ], !dbg !3867
  %bf.cast19011 = and i64 %bf.load188, 65535, !dbg !3960
  %cmp191 = icmp eq i64 %bf.cast19011, 66, !dbg !3960
  br i1 %cmp191, label %land.lhs.true193, label %if.end259, !dbg !3961

land.lhs.true193:                                 ; preds = %if.end186
  %operands195 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3962
  %arrayidx196 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands195, i64 1, !dbg !3962
  %39 = bitcast %union.tree_node** %arrayidx196 to i64**, !dbg !3962
  %40 = load i64*, i64** %39, align 8, !dbg !3962
  %bf.load198 = load i64, i64* %40, align 8, !dbg !3962
  %bf.cast20015 = and i64 %bf.load198, 65535, !dbg !3963
  %cmp201 = icmp eq i64 %bf.cast20015, 23, !dbg !3963
  %41 = bitcast i64* %40 to %union.tree_node*, !dbg !3964
  br i1 %cmp201, label %if.then203, label %if.end259, !dbg !3964

if.then203:                                       ; preds = %land.lhs.true193
  %42 = load %union.tree_node*, %union.tree_node** %operands195, align 8, !dbg !3965
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !3854, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !3857, metadata !DIExpression()), !dbg !3966
  %call213 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %42) #6, !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %call213, metadata !3854, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3858, metadata !DIExpression()), !dbg !3966
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3968
  %bf.load217 = load i64, i64* %43, align 8, !dbg !3968
  %bf.cast21916 = and i64 %bf.load217, 65535, !dbg !3969
  %cmp220 = icmp eq i64 %bf.cast21916, 121, !dbg !3969
  br i1 %cmp220, label %land.lhs.true222, label %if.end253, !dbg !3970

land.lhs.true222:                                 ; preds = %if.then203
  %type215 = getelementptr inbounds %union.tree_node, %union.tree_node* %call213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3971
  %44 = load %union.tree_node*, %union.tree_node** %type215, align 8, !dbg !3971
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !3858, metadata !DIExpression()), !dbg !3966
  %type224 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3972
  %45 = bitcast %union.tree_node** %type224 to i64**, !dbg !3972
  %46 = load i64*, i64** %45, align 8, !dbg !3972
  %bf.load226 = load i64, i64* %46, align 8, !dbg !3972
  %bf.cast22817 = and i64 %bf.load226, 65535, !dbg !3973
  %cmp229 = icmp eq i64 %bf.cast22817, 13, !dbg !3973
  br i1 %cmp229, label %land.lhs.true231, label %if.end253, !dbg !3974

land.lhs.true231:                                 ; preds = %land.lhs.true222
  %type235 = getelementptr inbounds i64, i64* %46, i64 2, !dbg !3975
  %47 = bitcast i64* %type235 to %union.tree_node**, !dbg !3975
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !3975
  %call236 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %48) #6, !dbg !3976
  %tobool238 = icmp eq i8 %call236, 0, !dbg !3976
  br i1 %tobool238, label %if.end253, label %if.then239, !dbg !3977

if.then239:                                       ; preds = %land.lhs.true231
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3978
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !3859, metadata !DIExpression()), !dbg !3979
  %call242 = tail call i32 @tree_int_cst_equal(%union.tree_node* %50, %union.tree_node* %41) #6, !dbg !3980
  %tobool243 = icmp eq i32 %call242, 0, !dbg !3980
  br i1 %tobool243, label %cleanup250, label %if.then244, !dbg !3982

if.then244:                                       ; preds = %if.then239
  %operands246 = getelementptr inbounds %union.tree_node, %union.tree_node* %call213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3983
  %51 = load %union.tree_node*, %union.tree_node** %operands246, align 8, !dbg !3983
  %call248 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 44, %union.tree_node* %2, %union.tree_node* %51) #6, !dbg !3983
  br label %cleanup250, !dbg !3984

cleanup250:                                       ; preds = %if.then239, %if.then244
  %cleanup.dest.slot.4 = phi i32 [ 1, %if.then244 ], [ 0, %if.then239 ]
  %retval.8 = phi %union.tree_node* [ %call248, %if.then244 ], [ %retval.7, %if.then239 ], !dbg !3867
  %cond2 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond2, label %if.end253, label %cleanup254

if.end253:                                        ; preds = %land.lhs.true231, %cleanup250, %land.lhs.true222, %if.then203
  %retval.9 = phi %union.tree_node* [ %retval.7, %land.lhs.true231 ], [ %retval.7, %land.lhs.true222 ], [ %retval.7, %if.then203 ], [ %retval.8, %cleanup250 ], !dbg !3867
  br label %cleanup254, !dbg !3985

cleanup254:                                       ; preds = %cleanup250, %if.end253
  %cleanup.dest.slot.5 = phi i32 [ %cleanup.dest.slot.4, %cleanup250 ], [ 0, %if.end253 ]
  %retval.10 = phi %union.tree_node* [ %retval.8, %cleanup250 ], [ %retval.9, %if.end253 ], !dbg !3984
  %cond1 = icmp eq i32 %cleanup.dest.slot.5, 0
  br i1 %cond1, label %if.end259, label %cleanup327

if.end259:                                        ; preds = %cleanup254, %land.lhs.true193, %if.end186
  %retval.11 = phi %union.tree_node* [ %retval.7, %land.lhs.true193 ], [ %retval.7, %if.end186 ], [ %retval.10, %cleanup254 ], !dbg !3867
  %type261 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3986
  %52 = bitcast %union.tree_node** %type261 to i64**, !dbg !3986
  %53 = load i64*, i64** %52, align 8, !dbg !3986
  %bf.load263 = load i64, i64* %53, align 8, !dbg !3986
  %bf.cast26512 = and i64 %bf.load263, 65535, !dbg !3987
  %cmp266 = icmp eq i64 %bf.cast26512, 15, !dbg !3987
  br i1 %cmp266, label %land.lhs.true268, label %if.end326, !dbg !3988

land.lhs.true268:                                 ; preds = %if.end259
  %type272 = getelementptr inbounds i64, i64* %53, i64 2, !dbg !3989
  %54 = bitcast i64* %type272 to %struct.tree_type**, !dbg !3989
  %55 = load %struct.tree_type*, %struct.tree_type** %54, align 8, !dbg !3989
  %size274 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 2, !dbg !3989
  %56 = bitcast %union.tree_node** %size274 to i64**, !dbg !3989
  %57 = load i64*, i64** %56, align 8, !dbg !3989
  %bf.load276 = load i64, i64* %57, align 8, !dbg !3989
  %bf.cast27813 = and i64 %bf.load276, 65535, !dbg !3990
  %cmp279 = icmp eq i64 %bf.cast27813, 23, !dbg !3990
  br i1 %cmp279, label %land.lhs.true281, label %if.end326, !dbg !3991

land.lhs.true281:                                 ; preds = %land.lhs.true268
  %58 = bitcast %struct.tree_type* %55 to %union.tree_node*, !dbg !3991
  %call286 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %58) #6, !dbg !3992
  %tobool288 = icmp eq i8 %call286, 0, !dbg !3992
  br i1 %tobool288, label %if.end326, label %if.then289, !dbg !3993

if.then289:                                       ; preds = %land.lhs.true281
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !3994
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !3865, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3866, metadata !DIExpression()), !dbg !3995
  %call292 = tail call %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node* %call) #7, !dbg !3996
  call void @llvm.dbg.value(metadata %union.tree_node* %call292, metadata !3827, metadata !DIExpression()), !dbg !3867
  %tobool293 = icmp eq %union.tree_node* %call292, null, !dbg !3997
  br i1 %tobool293, label %if.then294, label %if.end298, !dbg !3999

if.then294:                                       ; preds = %if.then289
  %60 = load %union.tree_node*, %union.tree_node** %type261, align 8, !dbg !4000
  %call297 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %60, %union.tree_node* %call) #6, !dbg !4000
  call void @llvm.dbg.value(metadata %union.tree_node* %call297, metadata !3827, metadata !DIExpression()), !dbg !3867
  br label %if.end298, !dbg !4001

if.end298:                                        ; preds = %if.then289, %if.then294
  %sub.0 = phi %union.tree_node* [ %call292, %if.then289 ], [ %call297, %if.then294 ], !dbg !3995
  call void @llvm.dbg.value(metadata %union.tree_node* %sub.0, metadata !3827, metadata !DIExpression()), !dbg !3867
  %type300 = getelementptr inbounds %union.tree_node, %union.tree_node* %sub.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4002
  %61 = bitcast %union.tree_node** %type300 to %struct.tree_type**, !dbg !4002
  %62 = load %struct.tree_type*, %struct.tree_type** %61, align 8, !dbg !4002
  %values302 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %62, i64 0, i32 1, !dbg !4002
  %63 = load %union.tree_node*, %union.tree_node** %values302, align 8, !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %63, metadata !3862, metadata !DIExpression()), !dbg !3995
  %tobool303 = icmp eq %union.tree_node* %63, null, !dbg !4003
  br i1 %tobool303, label %if.end311, label %land.lhs.true304, !dbg !4005

land.lhs.true304:                                 ; preds = %if.end298
  %minval306 = getelementptr inbounds %union.tree_node, %union.tree_node* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !4006
  %64 = bitcast %struct.lang_decl** %minval306 to %union.tree_node**, !dbg !4006
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8, !dbg !4006
  %tobool307 = icmp eq %union.tree_node* %65, null, !dbg !4006
  br i1 %tobool307, label %if.end311, label %if.then308, !dbg !4007

if.then308:                                       ; preds = %land.lhs.true304
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !3865, metadata !DIExpression()), !dbg !3995
  br label %if.end311, !dbg !4008

if.end311:                                        ; preds = %land.lhs.true304, %if.end298, %if.then308
  %min_val291.0 = phi %union.tree_node* [ %65, %if.then308 ], [ %59, %land.lhs.true304 ], [ %59, %if.end298 ], !dbg !3995
  call void @llvm.dbg.value(metadata %union.tree_node* %min_val291.0, metadata !3865, metadata !DIExpression()), !dbg !3995
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %min_val291.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4009
  %bf.load313 = load i64, i64* %66, align 8, !dbg !4009
  %bf.cast31514 = and i64 %bf.load313, 65535, !dbg !4011
  %cmp316 = icmp eq i64 %bf.cast31514, 23, !dbg !4011
  br i1 %cmp316, label %if.then318, label %cleanup321, !dbg !4012

if.then318:                                       ; preds = %if.end311
  %call319 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %2, %union.tree_node* %sub.0, %union.tree_node* %min_val291.0, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4013
  br label %cleanup321, !dbg !4014

cleanup321:                                       ; preds = %if.end311, %if.then318
  %cleanup.dest.slot.6 = phi i1 [ false, %if.then318 ], [ true, %if.end311 ]
  %retval.12 = phi %union.tree_node* [ %call319, %if.then318 ], [ %retval.11, %if.end311 ], !dbg !3867
  br i1 %cleanup.dest.slot.6, label %if.end326, label %cleanup327

if.end326:                                        ; preds = %land.lhs.true281, %cleanup321, %land.lhs.true268, %if.end259
  br label %cleanup327, !dbg !4015

cleanup327:                                       ; preds = %lor.lhs.false, %cleanup97, %cleanup181, %cleanup254, %cleanup321, %if.end326
  %retval.13 = phi %union.tree_node* [ %retval.2, %cleanup97 ], [ %retval.6, %cleanup181 ], [ %retval.10, %cleanup254 ], [ %retval.12, %cleanup321 ], [ null, %if.end326 ], [ null, %lor.lhs.false ], !dbg !3867
  ret %union.tree_node* %retval.13, !dbg !4016
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4017 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4021, metadata !DIExpression()), !dbg !4022
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4023
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4023

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !4024
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !4024
  br label %cond.end, !dbg !4023

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4023
  ret %struct.gimple_seq_node_d* %cond, !dbg !4025
}

; Function Attrs: nounwind uwtable
define dso_local i32 @gimplify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* %gimple_test_f, i32 %fallback) local_unnamed_addr #5 !dbg !4026 {
entry:
  %tmp = alloca %union.tree_node*, align 8
  %internal_pre = alloca %struct.gimple_seq_d*, align 8
  %internal_post = alloca %struct.gimple_seq_d*, align 8
  %pre_last_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %post_last_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp90 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp91 = alloca %struct.gimple_stmt_iterator, align 8
  %ce = alloca %struct.constructor_elt_d*, align 8
  %temp = alloca %union.tree_node*, align 8
  %eval = alloca %struct.gimple_seq_d*, align 8
  %cleanup = alloca %struct.gimple_seq_d*, align 8
  %handler = alloca %struct.gimple_seq_d*, align 8
  %failure = alloca %struct.gimple_seq_d*, align 8
  %body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !4031, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !4032, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !4033, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*)* %gimple_test_f, metadata !4034, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i32 %fallback, metadata !4035, metadata !DIExpression()), !dbg !4098
  %0 = bitcast %union.tree_node** %tmp to i8*, !dbg !4099
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4099
  %1 = bitcast %struct.gimple_seq_d** %internal_pre to i8*, !dbg !4100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4100
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4037, metadata !DIExpression()), !dbg !4098
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %internal_pre, align 8, !dbg !4101
  %2 = bitcast %struct.gimple_seq_d** %internal_post to i8*, !dbg !4102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4038, metadata !DIExpression()), !dbg !4098
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4103
  %3 = bitcast %struct.gimple_stmt_iterator* %pre_last_gsi to i8*, !dbg !4104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4104
  %4 = bitcast %struct.gimple_stmt_iterator* %post_last_gsi to i8*, !dbg !4104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4104
  %5 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4105
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4039, metadata !DIExpression()), !dbg !4098
  %cmp = icmp eq %union.tree_node* %5, null, !dbg !4106
  br i1 %cmp, label %cleanup1117, label %if.end, !dbg !4108

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_stmt, !dbg !4109
  call void @llvm.dbg.value(metadata i1 %cmp1, metadata !4040, metadata !DIExpression()), !dbg !4098
  %tobool = xor i1 %cmp1, true, !dbg !4110
  %tobool4 = icmp ne %struct.gimple_seq_d** %pre_p, null, !dbg !4112
  %or.cond11 = or i1 %tobool4, %tobool, !dbg !4113
  br i1 %or.cond11, label %if.end5, label %cond.true, !dbg !4113

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6467, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4112
  br label %if.end5, !dbg !4112

if.end5:                                          ; preds = %if.end, %cond.true
  %cmp6 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_reg, !dbg !4114
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !4116

if.then8:                                         ; preds = %if.end5
  %and = and i32 %fallback, 3, !dbg !4117
  %tobool9 = icmp eq i32 %and, 0, !dbg !4117
  br i1 %tobool9, label %cond.true10, label %if.end81, !dbg !4117

cond.true10:                                      ; preds = %if.then8
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6471, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4117
  br label %if.end81, !dbg !4117

if.else:                                          ; preds = %if.end5
  %cmp14 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_val, !dbg !4118
  %cmp16 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_call_addr, !dbg !4120
  %or.cond = or i1 %cmp14, %cmp16, !dbg !4121
  %cmp19 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_condexpr, !dbg !4122
  %or.cond1 = or i1 %or.cond, %cmp19, !dbg !4121
  %cmp22 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_mem_rhs, !dbg !4123
  %or.cond2 = or i1 %or.cond1, %cmp22, !dbg !4121
  %cmp25 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_mem_rhs_or_call, !dbg !4124
  %or.cond3 = or i1 %or.cond2, %cmp25, !dbg !4121
  %cmp28 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_reg_rhs, !dbg !4125
  %or.cond4 = or i1 %or.cond3, %cmp28, !dbg !4121
  %cmp31 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_reg_rhs_or_call, !dbg !4126
  %or.cond5 = or i1 %or.cond4, %cmp31, !dbg !4121
  %cmp34 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_asm_val, !dbg !4127
  %or.cond6 = or i1 %or.cond5, %cmp34, !dbg !4121
  br i1 %or.cond6, label %if.then36, label %if.else43, !dbg !4121

if.then36:                                        ; preds = %if.else
  %and37 = and i32 %fallback, 1, !dbg !4128
  %tobool38 = icmp eq i32 %and37, 0, !dbg !4128
  br i1 %tobool38, label %cond.true39, label %if.end81, !dbg !4128

cond.true39:                                      ; preds = %if.then36
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6480, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4128
  br label %if.end81, !dbg !4128

if.else43:                                        ; preds = %if.else
  %cmp44 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_min_lval, !dbg !4129
  %cmp47 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_lvalue, !dbg !4131
  %or.cond7 = or i1 %cmp44, %cmp47, !dbg !4132
  br i1 %or.cond7, label %if.then49, label %if.else56, !dbg !4132

if.then49:                                        ; preds = %if.else43
  %and50 = and i32 %fallback, 2, !dbg !4133
  %tobool51 = icmp eq i32 %and50, 0, !dbg !4133
  br i1 %tobool51, label %cond.true52, label %if.end81, !dbg !4133

cond.true52:                                      ; preds = %if.then49
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4133
  br label %if.end81, !dbg !4133

if.else56:                                        ; preds = %if.else43
  %cmp57 = icmp eq i8 (%union.tree_node*)* %gimple_test_f, @is_gimple_addressable, !dbg !4134
  br i1 %cmp57, label %if.then59, label %if.else66, !dbg !4136

if.then59:                                        ; preds = %if.else56
  %and60 = and i32 %fallback, 3, !dbg !4137
  %tobool61 = icmp eq i32 %and60, 0, !dbg !4137
  br i1 %tobool61, label %cond.true62, label %if.end81, !dbg !4137

cond.true62:                                      ; preds = %if.then59
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4137
  br label %if.end81, !dbg !4137

if.else66:                                        ; preds = %if.else56
  br i1 %cmp1, label %if.then69, label %if.else76, !dbg !4138

if.then69:                                        ; preds = %if.else66
  %cmp70 = icmp eq i32 %fallback, 0, !dbg !4139
  br i1 %cmp70, label %if.end81, label %cond.true72, !dbg !4139

cond.true72:                                      ; preds = %if.then69
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4139
  br label %if.end81, !dbg !4139

if.else76:                                        ; preds = %if.else66
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6493, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4141
  br label %if.end81

if.end81:                                         ; preds = %if.then8, %if.then36, %if.then49, %if.then59, %cond.true39, %cond.true62, %cond.true72, %if.then69, %if.else76, %cond.true52, %cond.true10
  %cmp82 = icmp eq %struct.gimple_seq_d** %pre_p, null, !dbg !4143
  %spec.select = select i1 %cmp82, %struct.gimple_seq_d** %internal_pre, %struct.gimple_seq_d** %pre_p, !dbg !4145
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %spec.select, metadata !4032, metadata !DIExpression()), !dbg !4098
  %cmp86 = icmp eq %struct.gimple_seq_d** %post_p, null, !dbg !4146
  %post_p.addr.0 = select i1 %cmp86, %struct.gimple_seq_d** %internal_post, %struct.gimple_seq_d** %post_p, !dbg !4148
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p.addr.0, metadata !4033, metadata !DIExpression()), !dbg !4098
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp90 to i8*, !dbg !4149
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4149
  %7 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %spec.select, align 8, !dbg !4150
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp90, %struct.gimple_seq_d* %7) #7, !dbg !4149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !4149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4149
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp91 to i8*, !dbg !4151
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !4151
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %post_p.addr.0, align 8, !dbg !4152
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp91, %struct.gimple_seq_d* %9) #7, !dbg !4151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !4151
  %10 = load i32, i32* @input_location, align 4, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %10, metadata !4041, metadata !DIExpression()), !dbg !4098
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4154
  %cmp92 = icmp eq %union.tree_node* %5, %11, !dbg !4156
  br i1 %cmp92, label %if.end81.if.end135_crit_edge, label %land.lhs.true, !dbg !4157

if.end81.if.end135_crit_edge:                     ; preds = %if.end81
  %.pre47 = bitcast %union.tree_node** %expr_p to i64**, !dbg !4158
  br label %if.end135, !dbg !4157

land.lhs.true:                                    ; preds = %if.end81
  %12 = bitcast %union.tree_node** %expr_p to i64**, !dbg !4159
  %13 = load i64*, i64** %12, align 8, !dbg !4159
  %bf.load = load i64, i64* %13, align 8, !dbg !4159
  %bf.cast = and i64 %bf.load, 65535, !dbg !4159
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4159
  %14 = load i32, i32* %arrayidx, align 4, !dbg !4159
  %cmp94 = icmp ugt i32 %14, 3, !dbg !4159
  br i1 %cmp94, label %land.lhs.true96, label %cond.end107, !dbg !4159

land.lhs.true96:                                  ; preds = %land.lhs.true
  %cmp103 = icmp ult i32 %14, 11, !dbg !4159
  br i1 %cmp103, label %cond.true105, label %cond.end107, !dbg !4159

cond.true105:                                     ; preds = %land.lhs.true96
  %locus = getelementptr inbounds i64, i64* %13, i64 3, !dbg !4159
  %15 = bitcast i64* %locus to i32*, !dbg !4159
  %16 = load i32, i32* %15, align 8, !dbg !4159
  br label %cond.end107, !dbg !4159

cond.end107:                                      ; preds = %land.lhs.true, %land.lhs.true96, %cond.true105
  %cond108 = phi i32 [ %16, %cond.true105 ], [ 0, %land.lhs.true96 ], [ 0, %land.lhs.true ], !dbg !4159
  %cmp109 = icmp eq i32 %cond108, 0, !dbg !4159
  br i1 %cmp109, label %if.end135, label %if.then111, !dbg !4160

if.then111:                                       ; preds = %cond.end107
  br i1 %cmp94, label %land.lhs.true120, label %cond.end133, !dbg !4161

land.lhs.true120:                                 ; preds = %if.then111
  %cmp127 = icmp ult i32 %14, 11, !dbg !4161
  br i1 %cmp127, label %cond.true129, label %cond.end133, !dbg !4161

cond.true129:                                     ; preds = %land.lhs.true120
  %locus131 = getelementptr inbounds i64, i64* %13, i64 3, !dbg !4161
  %17 = bitcast i64* %locus131 to i32*, !dbg !4161
  %18 = load i32, i32* %17, align 8, !dbg !4161
  br label %cond.end133, !dbg !4161

cond.end133:                                      ; preds = %if.then111, %land.lhs.true120, %cond.true129
  %cond134 = phi i32 [ %18, %cond.true129 ], [ 0, %land.lhs.true120 ], [ 0, %if.then111 ], !dbg !4161
  store i32 %cond134, i32* @input_location, align 4, !dbg !4162
  br label %if.end135, !dbg !4163

if.end135:                                        ; preds = %if.end81.if.end135_crit_edge, %cond.end107, %cond.end133
  %.pre-phi = phi i64** [ %.pre47, %if.end81.if.end135_crit_edge ], [ %12, %cond.end107 ], [ %12, %cond.end133 ], !dbg !4158
  %19 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !4164
  %20 = bitcast %union.tree_node** %expr_p to i64*, !dbg !4166
  %21 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !4168
  %22 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !4171
  %cmp575 = icmp eq %struct.gimple_seq_d** %post_p.addr.0, %internal_post, !dbg !4172
  %.post_p.addr.0 = select i1 %cmp575, %struct.gimple_seq_d** null, %struct.gimple_seq_d** %post_p.addr.0, !dbg !4172
  %23 = bitcast %struct.gimple_seq_d** %failure to i8*, !dbg !4174
  %24 = bitcast %struct.gimple_seq_d** %handler to i8*, !dbg !4175
  %25 = bitcast %struct.gimple_seq_d** %eval to i8*, !dbg !4176
  %26 = bitcast %struct.gimple_seq_d** %cleanup to i8*, !dbg !4176
  %27 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !4177
  %28 = bitcast %union.tree_node** %temp to i8*, !dbg !4177
  %29 = bitcast %union.tree_node** %expr_p to %struct.tree_constructor**, !dbg !4178
  %30 = bitcast %union.tree_node** %temp to i64*, !dbg !4177
  %and302 = and i32 %fallback, 2, !dbg !4181
  %tobool303 = icmp eq i32 %and302, 0, !dbg !4181
  %cmp268 = icmp eq i32 %fallback, 0, !dbg !4183
  %cmp206 = icmp ne i32 %fallback, 0, !dbg !4185
  %conv208 = zext i1 %cmp206 to i8, !dbg !4185
  %cmp192 = icmp eq i32 %fallback, 2, !dbg !4186
  %fallback. = select i1 %cmp268, i32 1, i32 %fallback, !dbg !4185
  br label %do.body, !dbg !4188

do.body:                                          ; preds = %do.cond, %if.end135
  %g.0 = phi %union.gimple_statement_d* [ undef, %if.end135 ], [ %g.3, %do.cond ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g.0, metadata !4078, metadata !DIExpression()), !dbg !4171
  %31 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4189
  %call = call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %31) #6, !dbg !4189
  store %union.tree_node* %call, %union.tree_node** %expr_p, align 8, !dbg !4189
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4039, metadata !DIExpression()), !dbg !4098
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4190
  %cmp136 = icmp eq %union.tree_node* %call, %32, !dbg !4192
  br i1 %cmp136, label %do.end, label %lor.lhs.false138, !dbg !4193

lor.lhs.false138:                                 ; preds = %do.body
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4194
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4194
  %tobool139 = icmp eq %union.tree_node* %33, null, !dbg !4194
  br i1 %tobool139, label %if.end146, label %land.lhs.true140, !dbg !4195

land.lhs.true140:                                 ; preds = %lor.lhs.false138
  %cmp143 = icmp eq %union.tree_node* %33, %32, !dbg !4196
  br i1 %cmp143, label %do.end, label %if.end146, !dbg !4197

if.end146:                                        ; preds = %lor.lhs.false138, %land.lhs.true140
  %34 = load i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 39), align 8, !dbg !4198
  %call147 = call i32 %34(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #6, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %call147, metadata !4042, metadata !DIExpression()), !dbg !4098
  switch i32 %call147, label %do.end [
    i32 0, label %if.then150
    i32 -1, label %if.end146.if.end164_crit_edge
  ], !dbg !4200

if.end146.if.end164_crit_edge:                    ; preds = %if.end146
  %.pre = load i64*, i64** %.pre-phi, align 8, !dbg !4201
  %35 = bitcast i64* %.pre to %struct.tree_exp*, !dbg !4200
  %36 = bitcast i64* %.pre to %union.tree_node*, !dbg !4200
  %37 = bitcast i64* %.pre to %struct.tree_constructor*, !dbg !4200
  %38 = bitcast i64* %.pre to %struct.tree_decl_common*, !dbg !4200
  %39 = bitcast i64* %.pre to %struct.tree_common*, !dbg !4200
  br label %if.end164, !dbg !4200

if.then150:                                       ; preds = %if.end146
  %40 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4202
  %cmp151 = icmp eq %union.tree_node* %40, null, !dbg !4206
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4207
  %42 = bitcast %union.tree_node* %40 to %struct.tree_exp*, !dbg !4207
  %43 = bitcast %union.tree_node* %40 to %struct.tree_constructor*, !dbg !4207
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4207
  br i1 %cmp151, label %do.end, label %if.end154, !dbg !4207

if.end154:                                        ; preds = %if.then150
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4207
  %cmp155 = icmp eq %union.tree_node* %40, %call, !dbg !4208
  br i1 %cmp155, label %if.end164, label %do.cond, !dbg !4210

if.end164:                                        ; preds = %if.end146.if.end164_crit_edge, %if.end154
  %46 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %47 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %48 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %49 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %50 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %51 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %52 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %53 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %54 = phi %struct.tree_common* [ %39, %if.end146.if.end164_crit_edge ], [ %44, %if.end154 ]
  %55 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %56 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %57 = phi %struct.tree_common* [ %39, %if.end146.if.end164_crit_edge ], [ %44, %if.end154 ]
  %58 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %59 = phi %struct.tree_common* [ %39, %if.end146.if.end164_crit_edge ], [ %44, %if.end154 ]
  %60 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %61 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %62 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %63 = phi %struct.tree_decl_common* [ %38, %if.end146.if.end164_crit_edge ], [ %45, %if.end154 ]
  %64 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %65 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %66 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %67 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %68 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %69 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %70 = phi %struct.tree_constructor* [ %37, %if.end146.if.end164_crit_edge ], [ %43, %if.end154 ]
  %71 = phi %struct.tree_constructor* [ %37, %if.end146.if.end164_crit_edge ], [ %43, %if.end154 ]
  %72 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %73 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %74 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %75 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %76 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %77 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %78 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %79 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %80 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %81 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %82 = phi %union.tree_node* [ %36, %if.end146.if.end164_crit_edge ], [ %call, %if.end154 ]
  %83 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %84 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %85 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %86 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %87 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %88 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %89 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %90 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %91 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %92 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %93 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %94 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %95 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ]
  %96 = phi %struct.tree_exp* [ %35, %if.end146.if.end164_crit_edge ], [ %42, %if.end154 ]
  %97 = phi i64* [ %.pre, %if.end146.if.end164_crit_edge ], [ %41, %if.end154 ], !dbg !4201
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  %bf.load166 = load i64, i64* %97, align 8, !dbg !4201
  %98 = trunc i64 %bf.load166 to i16, !dbg !4201
  switch i16 %98, label %sw.default765 [
    i16 128, label %sw.bb
    i16 127, label %sw.bb
    i16 126, label %sw.bb
    i16 125, label %sw.bb
    i16 45, label %sw.bb173
    i16 46, label %sw.bb173
    i16 43, label %sw.bb173
    i16 44, label %sw.bb173
    i16 41, label %sw.bb173
    i16 118, label %sw.bb173
    i16 56, label %sw.bb180
    i16 59, label %sw.bb187
    i16 2, label %sw.bb197
    i16 52, label %sw.bb198
    i16 119, label %sw.bb203
    i16 53, label %sw.bb205
    i16 54, label %sw.bb205
    i16 91, label %sw.bb210
    i16 92, label %sw.bb210
    i16 96, label %sw.bb212
    i16 121, label %sw.bb231
    i16 129, label %sw.bb233
    i16 116, label %sw.bb235
    i16 113, label %sw.bb235
    i16 77, label %sw.bb284
    i16 47, label %sw.bb289
    i16 48, label %sw.bb295
    i16 49, label %sw.bb295
    i16 23, label %sw.epilog883
    i16 24, label %sw.epilog883
    i16 25, label %sw.epilog883
    i16 28, label %sw.epilog883
    i16 26, label %sw.epilog883
    i16 27, label %sw.epilog883
    i16 33, label %sw.bb301
    i16 132, label %sw.bb307
    i16 58, label %sw.bb309
    i16 137, label %sw.bb311
    i16 138, label %sw.bb313
    i16 136, label %sw.bb315
    i16 134, label %sw.bb317
    i16 185, label %sw.bb341
    i16 133, label %sw.bb352
    i16 139, label %sw.bb367
    i16 135, label %sw.bb369
    i16 51, label %sw.bb371
    i16 120, label %sw.bb403
    i16 42, label %sw.bb405
    i16 152, label %sw.bb436
    i16 117, label %sw.bb476
    i16 140, label %sw.bb477
    i16 131, label %sw.bb479
    i16 130, label %sw.bb479
    i16 61, label %sw.bb515
    i16 55, label %sw.bb517
    i16 142, label %sw.bb519
    i16 143, label %sw.bb529
    i16 50, label %sw.bb545
    i16 30, label %sw.bb565
    i16 147, label %sw.bb569
    i16 150, label %sw.bb571
    i16 32, label %sw.bb586
    i16 34, label %sw.bb586
    i16 36, label %sw.bb588
    i16 141, label %sw.epilog883
    i16 153, label %sw.bb594
    i16 154, label %sw.bb595
    i16 155, label %sw.bb596
    i16 156, label %sw.bb598
    i16 157, label %sw.bb598
    i16 158, label %sw.bb599
    i16 159, label %sw.bb599
    i16 160, label %sw.bb599
    i16 161, label %sw.bb599
    i16 162, label %sw.bb620
    i16 66, label %sw.bb622
  ], !dbg !4211

sw.bb:                                            ; preds = %if.end164, %if.end164, %if.end164, %if.end164
  %call172 = call fastcc i32 @gimplify_self_mod_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 zeroext %conv208) #7, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %call172, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4213

sw.bb173:                                         ; preds = %if.end164, %if.end164, %if.end164, %if.end164, %if.end164, %if.end164
  %call179 = call fastcc i32 @gimplify_compound_lval(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i32 %fallback.) #7, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %call179, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4215

sw.bb180:                                         ; preds = %if.end164
  %call181 = call fastcc i32 @gimplify_cond_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, i32 %fallback) #7, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %call181, metadata !4042, metadata !DIExpression()), !dbg !4098
  br i1 %cmp192, label %if.then184, label %sw.epilog883, !dbg !4217

if.then184:                                       ; preds = %sw.bb180
  %99 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4218
  %call185 = call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %99, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4221
  store %union.tree_node* %call185, %union.tree_node** %expr_p, align 8, !dbg !4222
  call void @mark_addressable(%union.tree_node* %call185) #7, !dbg !4223
  br label %sw.epilog883, !dbg !4224

sw.bb187:                                         ; preds = %if.end164
  %call191 = call fastcc i32 @gimplify_call_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, i8 zeroext %conv208) #7, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %call191, metadata !4042, metadata !DIExpression()), !dbg !4098
  br i1 %cmp192, label %if.then194, label %sw.epilog883, !dbg !4226

if.then194:                                       ; preds = %sw.bb187
  %100 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4227
  %call195 = call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %100, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4229
  store %union.tree_node* %call195, %union.tree_node** %expr_p, align 8, !dbg !4230
  call void @mark_addressable(%union.tree_node* %call195) #7, !dbg !4231
  br label %sw.epilog883, !dbg !4232

sw.bb197:                                         ; preds = %if.end164
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4233
  br label %sw.bb198, !dbg !4233

sw.bb198:                                         ; preds = %if.end164, %sw.bb197
  %call202 = call fastcc i32 @gimplify_compound_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, i8 zeroext %conv208) #7, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %call202, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4235

sw.bb203:                                         ; preds = %if.end164
  %call204 = call fastcc i32 @gimplify_compound_literal_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4236
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4237

sw.bb205:                                         ; preds = %if.end164, %if.end164
  %call209 = call fastcc i32 @gimplify_modify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 zeroext %conv208) #7, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %call209, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4239

sw.bb210:                                         ; preds = %if.end164, %if.end164
  %call211 = call fastcc i32 @gimplify_boolean_expr(%union.tree_node** %expr_p, i32 %10) #7, !dbg !4240
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4241

sw.bb212:                                         ; preds = %if.end164
  %type214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %54, i64 0, i32 2, !dbg !4242
  %101 = bitcast %union.tree_node** %type214 to i64**, !dbg !4242
  %102 = load i64*, i64** %101, align 8, !dbg !4242
  %bf.load216 = load i64, i64* %102, align 8, !dbg !4242
  %bf.cast21840 = and i64 %bf.load216, 65535, !dbg !4243
  %cmp219 = icmp eq i64 %bf.cast21840, 7, !dbg !4243
  br i1 %cmp219, label %if.end227, label %if.then221, !dbg !4244

if.then221:                                       ; preds = %sw.bb212
  %type224 = getelementptr inbounds %union.tree_node, %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4245
  %103 = load %union.tree_node*, %union.tree_node** %type224, align 8, !dbg !4245
  call void @llvm.dbg.value(metadata %union.tree_node* %103, metadata !4045, metadata !DIExpression()), !dbg !4246
  %call225 = call %union.tree_node* @gimple_boolify(%union.tree_node* %52) #7, !dbg !4247
  %call226 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %103, %union.tree_node* %call225) #6, !dbg !4247
  store %union.tree_node* %call226, %union.tree_node** %expr_p, align 8, !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883

if.end227:                                        ; preds = %sw.bb212
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4249
  %call230 = call i32 @gimplify_expr(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %call230, metadata !4042, metadata !DIExpression()), !dbg !4098
  %104 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4251
  call void @recalculate_side_effects(%union.tree_node* %104) #6, !dbg !4252
  br label %sw.epilog883, !dbg !4253

sw.bb231:                                         ; preds = %if.end164
  %call232 = call fastcc i32 @gimplify_addr_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %call232, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4255

sw.bb233:                                         ; preds = %if.end164
  %call234 = call i32 @gimplify_va_arg_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #6, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %call234, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4257

sw.bb235:                                         ; preds = %if.end164, %if.end164
  %bf.load237 = load i64, i64* %60, align 8, !dbg !4258
  %bf.cast23937 = and i64 %bf.load237, 65535, !dbg !4258
  %cmp240 = icmp eq i64 %bf.cast23937, 116, !dbg !4258
  br i1 %cmp240, label %land.lhs.true242, label %if.end258, !dbg !4258

land.lhs.true242:                                 ; preds = %sw.bb235
  %type244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %59, i64 0, i32 2, !dbg !4258
  %105 = bitcast %union.tree_node** %type244 to i64**, !dbg !4258
  %106 = load i64*, i64** %105, align 8, !dbg !4258
  %bf.load246 = load i64, i64* %106, align 8, !dbg !4258
  %bf.cast24839 = and i64 %bf.load246, 65535, !dbg !4258
  %cmp249 = icmp eq i64 %bf.cast24839, 19, !dbg !4258
  br i1 %cmp249, label %land.lhs.true251, label %if.end258, !dbg !4258

land.lhs.true251:                                 ; preds = %land.lhs.true242
  %arrayidx254 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %58, i64 0, i32 3, i64 0, !dbg !4258
  %107 = load %union.tree_node*, %union.tree_node** %arrayidx254, align 8, !dbg !4258
  %call255 = call i32 @integer_zerop(%union.tree_node* %107) #6, !dbg !4258
  %tobool256 = icmp eq i32 %call255, 0, !dbg !4258
  br i1 %tobool256, label %land.lhs.true251.if.end258_crit_edge, label %sw.epilog883, !dbg !4260

land.lhs.true251.if.end258_crit_edge:             ; preds = %land.lhs.true251
  %.pre44 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !4261
  %108 = bitcast %struct.tree_common* %.pre44 to %struct.tree_exp*, !dbg !4260
  br label %if.end258, !dbg !4260

if.end258:                                        ; preds = %land.lhs.true251.if.end258_crit_edge, %land.lhs.true242, %sw.bb235
  %109 = phi %struct.tree_exp* [ %108, %land.lhs.true251.if.end258_crit_edge ], [ %55, %land.lhs.true242 ], [ %55, %sw.bb235 ]
  %110 = phi %struct.tree_common* [ %.pre44, %land.lhs.true251.if.end258_crit_edge ], [ %57, %land.lhs.true242 ], [ %57, %sw.bb235 ], !dbg !4261
  %type260 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %110, i64 0, i32 2, !dbg !4261
  %111 = bitcast %union.tree_node** %type260 to i64**, !dbg !4261
  %112 = load i64*, i64** %111, align 8, !dbg !4261
  %bf.load262 = load i64, i64* %112, align 8, !dbg !4261
  %bf.cast26438 = and i64 %bf.load262, 65535, !dbg !4261
  %cmp265 = icmp eq i64 %bf.cast26438, 19, !dbg !4261
  %or.cond8 = or i1 %cmp265, %cmp268, !dbg !4262
  br i1 %or.cond8, label %if.then270, label %if.end274, !dbg !4262

if.then270:                                       ; preds = %if.end258
  %arrayidx273 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %109, i64 0, i32 3, i64 0, !dbg !4263
  %113 = bitcast %union.tree_node** %arrayidx273 to i64*, !dbg !4263
  %114 = load i64, i64* %113, align 8, !dbg !4263
  store i64 %114, i64* %20, align 8, !dbg !4265
  br label %sw.epilog883, !dbg !4266

if.end274:                                        ; preds = %if.end258
  %call275 = call fastcc i32 @gimplify_conversion(%union.tree_node** %expr_p) #7, !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br i1 false, label %if.end274.sw.epilog883_crit_edge, label %if.end279, !dbg !4268

if.end274.sw.epilog883_crit_edge:                 ; preds = %if.end274
  br label %sw.epilog883, !dbg !4268

if.end279:                                        ; preds = %if.end274
  %115 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4269
  %cmp280 = icmp eq %union.tree_node* %115, %call, !dbg !4271
  %116 = bitcast %union.tree_node* %115 to %struct.tree_exp*, !dbg !4272
  br i1 %cmp280, label %sw.bb284, label %sw.epilog883, !dbg !4272

sw.bb284:                                         ; preds = %if.end279, %if.end164
  %117 = phi %struct.tree_exp* [ %116, %if.end279 ], [ %56, %if.end164 ], !dbg !4273
  %arrayidx287 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %117, i64 0, i32 3, i64 0, !dbg !4273
  %call288 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx287, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %call288, metadata !4042, metadata !DIExpression()), !dbg !4098
  %118 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4275
  call void @recalculate_side_effects(%union.tree_node* %118) #6, !dbg !4276
  br label %sw.epilog883, !dbg !4277

sw.bb289:                                         ; preds = %if.end164
  %119 = load i32, i32* @input_location, align 4, !dbg !4278
  %call290 = call %union.tree_node* @fold_indirect_ref_loc(i32 %119, %union.tree_node* %62) #6, !dbg !4279
  store %union.tree_node* %call290, %union.tree_node** %expr_p, align 8, !dbg !4280
  %cmp291 = icmp eq %union.tree_node* %call290, %call, !dbg !4281
  %120 = bitcast %union.tree_node* %call290 to %struct.tree_exp*, !dbg !4283
  br i1 %cmp291, label %sw.bb295, label %sw.epilog883, !dbg !4283

sw.bb295:                                         ; preds = %sw.bb289, %if.end164, %if.end164
  %121 = phi %struct.tree_exp* [ %120, %sw.bb289 ], [ %61, %if.end164 ], [ %61, %if.end164 ], !dbg !4284
  %arrayidx298 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %121, i64 0, i32 3, i64 0, !dbg !4284
  %call299 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx298, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_reg, i32 1) #7, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %call299, metadata !4042, metadata !DIExpression()), !dbg !4098
  %122 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4286
  call void @recalculate_side_effects(%union.tree_node* %122) #6, !dbg !4287
  br label %sw.epilog883, !dbg !4288

sw.bb301:                                         ; preds = %if.end164
  br i1 %tobool303, label %if.else305, label %sw.epilog883, !dbg !4289

if.else305:                                       ; preds = %sw.bb301
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %63, i64 0, i32 5, !dbg !4290
  %123 = bitcast %union.tree_node** %initial to i64*, !dbg !4290
  %124 = load i64, i64* %123, align 8, !dbg !4290
  store i64 %124, i64* %20, align 8, !dbg !4291
  br label %sw.epilog883

sw.bb307:                                         ; preds = %if.end164
  %call308 = call fastcc i32 @gimplify_decl_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %call308, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4293

sw.bb309:                                         ; preds = %if.end164
  %call310 = call fastcc i32 @gimplify_bind_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4294
  call void @llvm.dbg.value(metadata i32 %call310, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4295

sw.bb311:                                         ; preds = %if.end164
  %call312 = call fastcc i32 @gimplify_loop_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4296
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4297

sw.bb313:                                         ; preds = %if.end164
  %call314 = call fastcc i32 @gimplify_switch_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %call314, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4299

sw.bb315:                                         ; preds = %if.end164
  %call316 = call fastcc i32 @gimplify_exit_expr(%union.tree_node** %expr_p) #7, !dbg !4300
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4301

sw.bb317:                                         ; preds = %if.end164
  %arrayidx320 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %66, i64 0, i32 3, i64 0, !dbg !4302
  %125 = bitcast %union.tree_node** %arrayidx320 to i64**, !dbg !4302
  %126 = load i64*, i64** %125, align 8, !dbg !4302
  %bf.load322 = load i64, i64* %126, align 8, !dbg !4302
  %bf.cast32436 = and i64 %bf.load322, 65535, !dbg !4304
  %cmp325 = icmp eq i64 %bf.cast32436, 30, !dbg !4304
  br i1 %cmp325, label %if.end336, label %if.then327, !dbg !4305

if.then327:                                       ; preds = %sw.bb317
  %arrayidx330 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %65, i64 0, i32 3, i64 0, !dbg !4306
  %call331 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx330, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %call331, metadata !4042, metadata !DIExpression()), !dbg !4098
  %cmp332 = icmp eq i32 %call331, -2, !dbg !4309
  br i1 %cmp332, label %sw.epilog883, label %if.then327.if.end336_crit_edge, !dbg !4311

if.then327.if.end336_crit_edge:                   ; preds = %if.then327
  %.pre43 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4312
  br label %if.end336, !dbg !4311

if.end336:                                        ; preds = %if.then327.if.end336_crit_edge, %sw.bb317
  %127 = phi %struct.tree_exp* [ %64, %sw.bb317 ], [ %.pre43, %if.then327.if.end336_crit_edge ], !dbg !4312
  %ret.1 = phi i32 [ 0, %sw.bb317 ], [ %call331, %if.then327.if.end336_crit_edge ], !dbg !4158
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !4042, metadata !DIExpression()), !dbg !4098
  %arrayidx339 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %127, i64 0, i32 3, i64 0, !dbg !4312
  %128 = load %union.tree_node*, %union.tree_node** %arrayidx339, align 8, !dbg !4312
  %call340 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %128) #6, !dbg !4313
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call340) #7, !dbg !4314
  br label %sw.epilog883, !dbg !4315

sw.bb341:                                         ; preds = %if.end164
  %arrayidx344 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %67, i64 0, i32 3, i64 0, !dbg !4316
  %129 = load %union.tree_node*, %union.tree_node** %arrayidx344, align 8, !dbg !4316
  %call345 = call i64 @tree_low_cst(%union.tree_node* %129, i32 0) #6, !dbg !4316
  %conv346 = trunc i64 %call345 to i32, !dbg !4316
  %130 = load i64*, i64** %.pre-phi, align 8, !dbg !4317
  %bf.load348 = load i64, i64* %130, align 8, !dbg !4317
  %bf.lshr = lshr i64 %bf.load348, 18, !dbg !4317
  %131 = trunc i64 %bf.lshr to i32, !dbg !4317
  %bf.cast350 = and i32 %131, 1, !dbg !4317
  %call351 = call %union.gimple_statement_d* @gimple_build_predict(i32 %conv346, i32 %bf.cast350) #6, !dbg !4318
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call351) #7, !dbg !4319
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4320

sw.bb352:                                         ; preds = %if.end164
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  %arrayidx355 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %68, i64 0, i32 3, i64 0, !dbg !4321
  %132 = load %union.tree_node*, %union.tree_node** %arrayidx355, align 8, !dbg !4321
  %call356 = call %union.tree_node* @decl_function_context(%union.tree_node* %132) #6, !dbg !4321
  %133 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4321
  %cmp357 = icmp eq %union.tree_node* %call356, %133, !dbg !4321
  br i1 %cmp357, label %cond.end361, label %cond.true359, !dbg !4321

cond.true359:                                     ; preds = %sw.bb352
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6758, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4321
  br label %cond.end361, !dbg !4321

cond.end361:                                      ; preds = %sw.bb352, %cond.true359
  %134 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4322
  %arrayidx365 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %134, i64 0, i32 3, i64 0, !dbg !4322
  %135 = load %union.tree_node*, %union.tree_node** %arrayidx365, align 8, !dbg !4322
  %call366 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %135) #6, !dbg !4323
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call366) #7, !dbg !4324
  br label %sw.epilog883, !dbg !4325

sw.bb367:                                         ; preds = %if.end164
  %call368 = call fastcc i32 @gimplify_case_label_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4326
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4327

sw.bb369:                                         ; preds = %if.end164
  %call370 = call fastcc i32 @gimplify_return_expr(%union.tree_node* %69, %struct.gimple_seq_d** %spec.select) #7, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %call370, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4329

sw.bb371:                                         ; preds = %if.end164
  switch i32 %fallback, label %sw.epilog883 [
    i32 0, label %if.then374
    i32 2, label %if.then398
  ], !dbg !4330

if.then374:                                       ; preds = %sw.bb371
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8, !dbg !4331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8, !dbg !4332
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4055, metadata !DIExpression()), !dbg !4177
  store %union.tree_node* null, %union.tree_node** %temp, align 8, !dbg !4333
  call void @llvm.dbg.value(metadata i64 0, metadata !4050, metadata !DIExpression()), !dbg !4177
  br label %for.cond, !dbg !4334

for.cond:                                         ; preds = %for.inc, %if.then374
  %136 = phi %struct.tree_constructor* [ %70, %if.then374 ], [ %.pre42, %for.inc ]
  %137 = phi %struct.tree_constructor* [ %71, %if.then374 ], [ %.pre42, %for.inc ], !dbg !4335
  %ix.0 = phi i64 [ 0, %if.then374 ], [ %inc, %for.inc ], !dbg !4336
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !4050, metadata !DIExpression()), !dbg !4177
  %elts = getelementptr inbounds %struct.tree_constructor, %struct.tree_constructor* %137, i64 0, i32 1, !dbg !4335
  %138 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %elts, align 8, !dbg !4335
  %tobool375 = icmp eq %struct.VEC_constructor_elt_gc* %138, null, !dbg !4335
  br i1 %tobool375, label %cond.end381, label %cond.true376, !dbg !4335

cond.true376:                                     ; preds = %for.cond
  %elts378 = getelementptr inbounds %struct.tree_constructor, %struct.tree_constructor* %136, i64 0, i32 1, !dbg !4335
  %139 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %elts378, align 8, !dbg !4335
  %base379 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %139, i64 0, i32 0, !dbg !4335
  br label %cond.end381, !dbg !4335

cond.end381:                                      ; preds = %for.cond, %cond.true376
  %cond382 = phi %struct.VEC_constructor_elt_base* [ %base379, %cond.true376 ], [ null, %for.cond ], !dbg !4335
  %conv383 = trunc i64 %ix.0 to i32, !dbg !4335
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !4053, metadata !DIExpression(DW_OP_deref)), !dbg !4177
  %call384 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond382, i32 %conv383, %struct.constructor_elt_d** nonnull %ce) #7, !dbg !4335
  %tobool385 = icmp eq i32 %call384, 0, !dbg !4337
  br i1 %tobool385, label %for.end, label %for.body, !dbg !4337

for.body:                                         ; preds = %cond.end381
  %140 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !4338
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %140, metadata !4053, metadata !DIExpression()), !dbg !4177
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %140, i64 0, i32 1, !dbg !4338
  %141 = bitcast %union.tree_node** %value to i64**, !dbg !4338
  %142 = load i64*, i64** %141, align 8, !dbg !4338
  %bf.load387 = load i64, i64* %142, align 8, !dbg !4338
  %bf.cast39035 = and i64 %bf.load387, 65536, !dbg !4338
  %tobool391 = icmp eq i64 %bf.cast39035, 0, !dbg !4338
  br i1 %tobool391, label %for.inc, label %if.then392, !dbg !4340

if.then392:                                       ; preds = %for.body
  %143 = bitcast i64* %142 to %union.tree_node*, !dbg !4340
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %140, metadata !4053, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.value(metadata %union.tree_node** %temp, metadata !4055, metadata !DIExpression(DW_OP_deref)), !dbg !4177
  call void @append_to_statement_list(%union.tree_node* %143, %union.tree_node** nonnull %temp) #7, !dbg !4341
  br label %for.inc, !dbg !4341

for.inc:                                          ; preds = %for.body, %if.then392
  %inc = add i64 %ix.0, 1, !dbg !4342
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4050, metadata !DIExpression()), !dbg !4177
  %.pre42 = load %struct.tree_constructor*, %struct.tree_constructor** %29, align 8, !dbg !4335
  br label %for.cond, !dbg !4343, !llvm.loop !4344

for.end:                                          ; preds = %cond.end381
  %144 = load i64, i64* %30, align 8, !dbg !4346
  store i64 %144, i64* %20, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8, !dbg !4348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8, !dbg !4348
  br label %sw.epilog883, !dbg !4349

if.then398:                                       ; preds = %sw.bb371
  %call399 = call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %72, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4350
  store %union.tree_node* %call399, %union.tree_node** %expr_p, align 8, !dbg !4353
  call void @mark_addressable(%union.tree_node* %call399) #7, !dbg !4354
  br label %sw.epilog883, !dbg !4355

sw.bb403:                                         ; preds = %if.end164
  %call404 = call fastcc i32 @gimplify_save_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %call404, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4357

sw.bb405:                                         ; preds = %if.end164
  %arrayidx408 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %73, i64 0, i32 3, i64 0, !dbg !4358
  %call409 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx408, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 3) #7, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %call409, metadata !4056, metadata !DIExpression()), !dbg !4360
  %145 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4361
  %arrayidx412 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %145, i64 0, i32 3, i64 1, !dbg !4361
  %call413 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx412, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %call413, metadata !4058, metadata !DIExpression()), !dbg !4360
  %146 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4363
  %arrayidx416 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %146, i64 0, i32 3, i64 2, !dbg !4363
  %call417 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx416, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %call417, metadata !4059, metadata !DIExpression()), !dbg !4360
  %147 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4365
  call void @recalculate_side_effects(%union.tree_node* %147) #6, !dbg !4366
  %cmp418 = icmp slt i32 %call413, %call417, !dbg !4367
  %call413.call417 = select i1 %cmp418, i32 %call413, i32 %call417, !dbg !4367
  %cmp424 = icmp slt i32 %call409, %call413.call417, !dbg !4367
  %cond435 = select i1 %cmp424, i32 %call409, i32 %call413.call417, !dbg !4367
  br label %sw.epilog883, !dbg !4367

sw.bb436:                                         ; preds = %if.end164
  call void @llvm.dbg.value(metadata i32 1, metadata !4060, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.value(metadata i32 1, metadata !4062, metadata !DIExpression()), !dbg !4368
  %arrayidx441 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %75, i64 0, i32 3, i64 0, !dbg !4369
  %148 = load %union.tree_node*, %union.tree_node** %arrayidx441, align 8, !dbg !4369
  %tobool442 = icmp eq %union.tree_node* %148, null, !dbg !4369
  br i1 %tobool442, label %if.else448, label %if.then443, !dbg !4371

if.then443:                                       ; preds = %sw.bb436
  %call447 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx441, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 3) #7, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %call447, metadata !4060, metadata !DIExpression()), !dbg !4368
  br label %if.end459, !dbg !4373

if.else448:                                       ; preds = %sw.bb436
  %arrayidx451 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %75, i64 0, i32 3, i64 1, !dbg !4374
  %149 = load %union.tree_node*, %union.tree_node** %arrayidx451, align 8, !dbg !4374
  %tobool452 = icmp eq %union.tree_node* %149, null, !dbg !4374
  br i1 %tobool452, label %if.end459, label %if.then453, !dbg !4376

if.then453:                                       ; preds = %if.else448
  %arrayidx456 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %74, i64 0, i32 3, i64 1, !dbg !4377
  %call457 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx456, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 3) #7, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %call457, metadata !4060, metadata !DIExpression()), !dbg !4368
  br label %if.end459, !dbg !4379

if.end459:                                        ; preds = %if.else448, %if.then453, %if.then443
  %r0437.1 = phi i32 [ %call447, %if.then443 ], [ %call457, %if.then453 ], [ 1, %if.else448 ], !dbg !4380
  call void @llvm.dbg.value(metadata i32 %r0437.1, metadata !4060, metadata !DIExpression()), !dbg !4368
  %150 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4381
  %arrayidx462 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %150, i64 0, i32 3, i64 2, !dbg !4381
  %151 = load %union.tree_node*, %union.tree_node** %arrayidx462, align 8, !dbg !4381
  %tobool463 = icmp eq %union.tree_node* %151, null, !dbg !4381
  br i1 %tobool463, label %if.end469, label %if.then464, !dbg !4383

if.then464:                                       ; preds = %if.end459
  %call468 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx462, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %call468, metadata !4062, metadata !DIExpression()), !dbg !4368
  br label %if.end469, !dbg !4385

if.end469:                                        ; preds = %if.end459, %if.then464
  %r1438.0 = phi i32 [ %call468, %if.then464 ], [ 1, %if.end459 ], !dbg !4368
  call void @llvm.dbg.value(metadata i32 %r1438.0, metadata !4062, metadata !DIExpression()), !dbg !4368
  %cmp470 = icmp slt i32 %r0437.1, %r1438.0, !dbg !4386
  %r0437.1.r1438.0 = select i1 %cmp470, i32 %r0437.1, i32 %r1438.0, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %r0437.1.r1438.0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4387

sw.bb476:                                         ; preds = %if.end164
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4388
  br label %sw.bb477, !dbg !4388

sw.bb477:                                         ; preds = %if.end164, %sw.bb476
  %call478 = call fastcc i32 @gimplify_asm_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %call478, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4390

sw.bb479:                                         ; preds = %if.end164, %if.end164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8, !dbg !4391
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8, !dbg !4391
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4065, metadata !DIExpression()), !dbg !4176
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %cleanup, align 8, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4063, metadata !DIExpression()), !dbg !4176
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %eval, align 8, !dbg !4393
  %arrayidx482 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %76, i64 0, i32 3, i64 0, !dbg !4394
  %152 = load %union.tree_node*, %union.tree_node** %arrayidx482, align 8, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %eval, metadata !4063, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  call void @gimplify_and_add(%union.tree_node* %152, %struct.gimple_seq_d** nonnull %eval) #7, !dbg !4395
  %153 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4396
  %arrayidx485 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %153, i64 0, i32 3, i64 1, !dbg !4396
  %154 = load %union.tree_node*, %union.tree_node** %arrayidx485, align 8, !dbg !4396
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  call void @gimplify_and_add(%union.tree_node* %154, %struct.gimple_seq_d** nonnull %cleanup) #7, !dbg !4397
  %155 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %155, metadata !4065, metadata !DIExpression()), !dbg !4176
  %call486 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %155) #7, !dbg !4400
  %tobool487 = icmp eq i8 %call486, 0, !dbg !4400
  %156 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %eval, align 8, !dbg !4176
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %156, metadata !4063, metadata !DIExpression()), !dbg !4176
  br i1 %tobool487, label %if.end489, label %if.then488, !dbg !4401

if.then488:                                       ; preds = %sw.bb479
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d* %156) #6, !dbg !4402
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %cleanup512, !dbg !4404

if.end489:                                        ; preds = %sw.bb479
  %157 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup, align 8, !dbg !4405
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %157, metadata !4065, metadata !DIExpression()), !dbg !4176
  %158 = load i64*, i64** %.pre-phi, align 8, !dbg !4406
  %bf.load491 = load i64, i64* %158, align 8, !dbg !4406
  %bf.cast49333 = and i64 %bf.load491, 65535, !dbg !4407
  %cmp494 = icmp eq i64 %bf.cast49333, 131, !dbg !4407
  %cond496 = select i1 %cmp494, i32 2, i32 1, !dbg !4406
  %call497 = call %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d* %156, %struct.gimple_seq_d* %157, i32 %cond496) #6, !dbg !4408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call497, metadata !4066, metadata !DIExpression()), !dbg !4176
  %159 = load i64*, i64** %.pre-phi, align 8, !dbg !4409
  %bf.load499 = load i64, i64* %159, align 8, !dbg !4409
  %bf.cast50134 = and i64 %bf.load499, 65535, !dbg !4411
  %cmp502 = icmp eq i64 %bf.cast50134, 130, !dbg !4411
  br i1 %cmp502, label %if.then504, label %if.end511, !dbg !4412

if.then504:                                       ; preds = %if.end489
  %bf.lshr507 = lshr i64 %bf.load499, 26, !dbg !4413
  %160 = trunc i64 %bf.lshr507 to i8, !dbg !4413
  %bf.cast509 = and i8 %160, 1, !dbg !4413
  call fastcc void @gimple_try_set_catch_is_cleanup(%union.gimple_statement_d* %call497, i8 zeroext %bf.cast509) #7, !dbg !4414
  br label %if.end511, !dbg !4414

if.end511:                                        ; preds = %if.then504, %if.end489
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call497) #7, !dbg !4415
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %cleanup512, !dbg !4416

cleanup512:                                       ; preds = %if.end511, %if.then488
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8, !dbg !4417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8, !dbg !4417
  br label %sw.epilog883

sw.bb515:                                         ; preds = %if.end164
  %call516 = call fastcc i32 @gimplify_cleanup_point_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %call516, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4419

sw.bb517:                                         ; preds = %if.end164
  %call518 = call fastcc i32 @gimplify_target_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %call518, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4421

sw.bb519:                                         ; preds = %if.end164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8, !dbg !4422
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4069, metadata !DIExpression()), !dbg !4175
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %handler, align 8, !dbg !4423
  %arrayidx522 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %77, i64 0, i32 3, i64 1, !dbg !4424
  %161 = load %union.tree_node*, %union.tree_node** %arrayidx522, align 8, !dbg !4424
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %handler, metadata !4069, metadata !DIExpression(DW_OP_deref)), !dbg !4175
  call void @gimplify_and_add(%union.tree_node* %161, %struct.gimple_seq_d** nonnull %handler) #7, !dbg !4425
  %162 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4426
  %arrayidx525 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %162, i64 0, i32 3, i64 0, !dbg !4426
  %163 = load %union.tree_node*, %union.tree_node** %arrayidx525, align 8, !dbg !4426
  %164 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %handler, align 8, !dbg !4427
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %164, metadata !4069, metadata !DIExpression()), !dbg !4175
  %call526 = call %union.gimple_statement_d* @gimple_build_catch(%union.tree_node* %163, %struct.gimple_seq_d* %164) #6, !dbg !4428
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call526, metadata !4067, metadata !DIExpression()), !dbg !4175
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call526) #7, !dbg !4429
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8, !dbg !4430
  br label %sw.epilog883

sw.bb529:                                         ; preds = %if.end164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8, !dbg !4431
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4072, metadata !DIExpression()), !dbg !4174
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %failure, align 8, !dbg !4432
  %arrayidx532 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %78, i64 0, i32 3, i64 1, !dbg !4433
  %165 = load %union.tree_node*, %union.tree_node** %arrayidx532, align 8, !dbg !4433
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %failure, metadata !4072, metadata !DIExpression(DW_OP_deref)), !dbg !4174
  call void @gimplify_and_add(%union.tree_node* %165, %struct.gimple_seq_d** nonnull %failure) #7, !dbg !4434
  %166 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4435
  %arrayidx535 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %166, i64 0, i32 3, i64 0, !dbg !4435
  %167 = load %union.tree_node*, %union.tree_node** %arrayidx535, align 8, !dbg !4435
  %168 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %failure, align 8, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %168, metadata !4072, metadata !DIExpression()), !dbg !4174
  %call536 = call %union.gimple_statement_d* @gimple_build_eh_filter(%union.tree_node* %167, %struct.gimple_seq_d* %168) #6, !dbg !4437
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call536, metadata !4070, metadata !DIExpression()), !dbg !4174
  %169 = load i64*, i64** %.pre-phi, align 8, !dbg !4438
  %bf.load538 = load i64, i64* %169, align 8, !dbg !4438
  %bf.lshr539 = lshr i64 %bf.load538, 23, !dbg !4438
  %170 = trunc i64 %bf.lshr539 to i8, !dbg !4438
  %bf.cast541 = and i8 %170, 1, !dbg !4438
  call fastcc void @gimple_set_no_warning(%union.gimple_statement_d* %call536, i8 zeroext %bf.cast541) #7, !dbg !4439
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %call536) #7, !dbg !4440
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8, !dbg !4441
  br label %sw.epilog883

sw.bb545:                                         ; preds = %if.end164
  %arrayidx550 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %79, i64 0, i32 3, i64 1, !dbg !4442
  %call551 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx550, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %call551, metadata !4073, metadata !DIExpression()), !dbg !4444
  %171 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4445
  %arrayidx554 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %171, i64 0, i32 3, i64 0, !dbg !4445
  %call555 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx554, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4446
  call void @llvm.dbg.value(metadata i32 %call555, metadata !4075, metadata !DIExpression()), !dbg !4444
  %172 = load i64*, i64** %.pre-phi, align 8, !dbg !4447
  %bf.load557 = load i64, i64* %172, align 8, !dbg !4448
  %bf.clear558 = and i64 %bf.load557, -65537, !dbg !4448
  store i64 %bf.clear558, i64* %172, align 8, !dbg !4448
  %cmp559 = icmp slt i32 %call551, %call555, !dbg !4449
  %call551.call555 = select i1 %cmp559, i32 %call551, i32 %call555, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %call551.call555, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4450

sw.bb565:                                         ; preds = %if.end164
  %bf.load567 = load i64, i64* %80, align 8, !dbg !4451
  %bf.set = or i64 %bf.load567, 65536, !dbg !4451
  store i64 %bf.set, i64* %80, align 8, !dbg !4451
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4452

sw.bb569:                                         ; preds = %if.end164
  %call570 = call fastcc i32 @gimplify_statement_list(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4453
  call void @llvm.dbg.value(metadata i32 %call570, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4454

sw.bb571:                                         ; preds = %if.end164
  %arrayidx574 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %81, i64 0, i32 3, i64 0, !dbg !4455
  %call581 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx574, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %.post_p.addr.0, i8 (%union.tree_node*)* %gimple_test_f, i32 %fallback) #7, !dbg !4456
  %173 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4457
  %arrayidx584 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %173, i64 0, i32 3, i64 1, !dbg !4457
  %call585 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx584, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4458
  br label %sw.epilog883, !dbg !4459

sw.bb586:                                         ; preds = %if.end164, %if.end164
  %call587 = call fastcc i32 @gimplify_var_or_parm_decl(%union.tree_node** %expr_p) #7, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %call587, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4461

sw.bb588:                                         ; preds = %if.end164
  %174 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !4462
  %tobool589 = icmp eq %struct.gimplify_omp_ctx* %174, null, !dbg !4462
  br i1 %tobool589, label %sw.epilog883, label %if.then590, !dbg !4464

if.then590:                                       ; preds = %sw.bb588
  %call591 = call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* nonnull %174, %union.tree_node* %82, i8 zeroext 1) #7, !dbg !4465
  br label %sw.epilog883, !dbg !4465

sw.bb594:                                         ; preds = %if.end164
  call fastcc void @gimplify_omp_parallel(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4466
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4467

sw.bb595:                                         ; preds = %if.end164
  call fastcc void @gimplify_omp_task(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4468
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4469

sw.bb596:                                         ; preds = %if.end164
  %call597 = call fastcc i32 @gimplify_omp_for(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %call597, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4471

sw.bb598:                                         ; preds = %if.end164, %if.end164
  call fastcc void @gimplify_omp_workshare(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4472
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4473

sw.bb599:                                         ; preds = %if.end164, %if.end164, %if.end164, %if.end164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8, !dbg !4474
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4076, metadata !DIExpression()), !dbg !4171
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !4475
  %arrayidx602 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %83, i64 0, i32 3, i64 0, !dbg !4476
  %175 = load %union.tree_node*, %union.tree_node** %arrayidx602, align 8, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !4076, metadata !DIExpression(DW_OP_deref)), !dbg !4171
  call void @gimplify_and_add(%union.tree_node* %175, %struct.gimple_seq_d** nonnull %body) #7, !dbg !4477
  %176 = load i64*, i64** %.pre-phi, align 8, !dbg !4478
  %bf.load604 = load i64, i64* %176, align 8, !dbg !4478
  %177 = trunc i64 %bf.load604 to i16, !dbg !4478
  switch i16 %177, label %sw.default [
    i16 158, label %sw.bb607
    i16 159, label %sw.bb609
    i16 160, label %sw.bb611
    i16 161, label %sw.bb613
  ], !dbg !4479

sw.bb607:                                         ; preds = %sw.bb599
  %178 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !4480
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %178, metadata !4076, metadata !DIExpression()), !dbg !4171
  %call608 = call %union.gimple_statement_d* @gimple_build_omp_section(%struct.gimple_seq_d* %178) #6, !dbg !4482
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call608, metadata !4078, metadata !DIExpression()), !dbg !4171
  br label %sw.epilog, !dbg !4483

sw.bb609:                                         ; preds = %sw.bb599
  %179 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !4484
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %179, metadata !4076, metadata !DIExpression()), !dbg !4171
  %call610 = call %union.gimple_statement_d* @gimple_build_omp_master(%struct.gimple_seq_d* %179) #6, !dbg !4485
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call610, metadata !4078, metadata !DIExpression()), !dbg !4171
  br label %sw.epilog, !dbg !4486

sw.bb611:                                         ; preds = %sw.bb599
  %180 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !4487
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %180, metadata !4076, metadata !DIExpression()), !dbg !4171
  %call612 = call %union.gimple_statement_d* @gimple_build_omp_ordered(%struct.gimple_seq_d* %180) #6, !dbg !4488
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call612, metadata !4078, metadata !DIExpression()), !dbg !4171
  br label %sw.epilog, !dbg !4489

sw.bb613:                                         ; preds = %sw.bb599
  %181 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !4490
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %181, metadata !4076, metadata !DIExpression()), !dbg !4171
  %arrayidx616 = getelementptr inbounds i64, i64* %176, i64 6, !dbg !4491
  %182 = bitcast i64* %arrayidx616 to %union.tree_node**, !dbg !4491
  %183 = load %union.tree_node*, %union.tree_node** %182, align 8, !dbg !4491
  %call617 = call %union.gimple_statement_d* @gimple_build_omp_critical(%struct.gimple_seq_d* %181, %union.tree_node* %183) #6, !dbg !4492
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call617, metadata !4078, metadata !DIExpression()), !dbg !4171
  br label %sw.epilog, !dbg !4493

sw.default:                                       ; preds = %sw.bb599
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4494
  br label %sw.epilog, !dbg !4495

sw.epilog:                                        ; preds = %sw.default, %sw.bb613, %sw.bb611, %sw.bb609, %sw.bb607
  %g.1 = phi %union.gimple_statement_d* [ %g.0, %sw.default ], [ %call617, %sw.bb613 ], [ %call612, %sw.bb611 ], [ %call610, %sw.bb609 ], [ %call608, %sw.bb607 ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g.1, metadata !4078, metadata !DIExpression()), !dbg !4171
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %spec.select, %union.gimple_statement_d* %g.1) #7, !dbg !4496
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8, !dbg !4497
  br label %sw.epilog883

sw.bb620:                                         ; preds = %if.end164
  %call621 = call fastcc i32 @gimplify_omp_atomic(%union.tree_node** %expr_p, %struct.gimple_seq_d** %spec.select) #7, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %call621, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog883, !dbg !4499

sw.bb622:                                         ; preds = %if.end164
  %arrayidx625 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %96, i64 0, i32 3, i64 1, !dbg !4500
  %184 = bitcast %union.tree_node** %arrayidx625 to i64**, !dbg !4500
  %185 = load i64*, i64** %184, align 8, !dbg !4500
  %bf.load627 = load i64, i64* %185, align 8, !dbg !4500
  %bf.cast62912 = and i64 %bf.load627, 65535, !dbg !4501
  %cmp630 = icmp eq i64 %bf.cast62912, 23, !dbg !4501
  br i1 %cmp630, label %land.lhs.true632, label %if.end667, !dbg !4502

land.lhs.true632:                                 ; preds = %sw.bb622
  %bf.load634 = load i64, i64* %95, align 8, !dbg !4503
  %bf.cast636 = and i64 %bf.load634, 65535, !dbg !4503
  %arrayidx638 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast636, !dbg !4503
  %186 = load i32, i32* %arrayidx638, align 4, !dbg !4503
  %cmp639 = icmp ugt i32 %186, 3, !dbg !4503
  br i1 %cmp639, label %land.lhs.true641, label %cond.end654, !dbg !4503

land.lhs.true641:                                 ; preds = %land.lhs.true632
  %bf.load643 = load i64, i64* %94, align 8, !dbg !4503
  %bf.cast645 = and i64 %bf.load643, 65535, !dbg !4503
  %arrayidx647 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast645, !dbg !4503
  %187 = load i32, i32* %arrayidx647, align 4, !dbg !4503
  %cmp648 = icmp ult i32 %187, 11, !dbg !4503
  br i1 %cmp648, label %cond.true650, label %cond.end654, !dbg !4503

cond.true650:                                     ; preds = %land.lhs.true641
  %locus652 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %93, i64 0, i32 1, !dbg !4503
  %188 = load i32, i32* %locus652, align 8, !dbg !4503
  br label %cond.end654, !dbg !4503

cond.end654:                                      ; preds = %land.lhs.true632, %land.lhs.true641, %cond.true650
  %cond655 = phi i32 [ %188, %cond.true650 ], [ 0, %land.lhs.true641 ], [ 0, %land.lhs.true632 ], !dbg !4503
  %arrayidx658 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %92, i64 0, i32 3, i64 0, !dbg !4504
  %189 = load %union.tree_node*, %union.tree_node** %arrayidx658, align 8, !dbg !4504
  %arrayidx661 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %92, i64 0, i32 3, i64 1, !dbg !4505
  %190 = load %union.tree_node*, %union.tree_node** %arrayidx661, align 8, !dbg !4505
  %type663 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %92, i64 0, i32 0, i32 2, !dbg !4506
  %191 = load %union.tree_node*, %union.tree_node** %type663, align 8, !dbg !4506
  %call664 = call %union.tree_node* @maybe_fold_offset_to_address(i32 %cond655, %union.tree_node* %189, %union.tree_node* %190, %union.tree_node* %191) #6, !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %call664, metadata !4036, metadata !DIExpression()), !dbg !4098
  store %union.tree_node* %call664, %union.tree_node** %tmp, align 8, !dbg !4508
  %tobool665 = icmp eq %union.tree_node* %call664, null, !dbg !4508
  br i1 %tobool665, label %cond.end654.if.end667_crit_edge, label %if.then666, !dbg !4509

cond.end654.if.end667_crit_edge:                  ; preds = %cond.end654
  %.pre41 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4510
  %192 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %.pre41, i64 0, i32 0, i32 0, i32 0, !dbg !4509
  br label %if.end667, !dbg !4509

if.then666:                                       ; preds = %cond.end654
  %193 = ptrtoint %union.tree_node* %call664 to i64, !dbg !4509
  store i64 %193, i64* %20, align 8, !dbg !4511
  br label %sw.epilog883, !dbg !4512

if.end667:                                        ; preds = %cond.end654.if.end667_crit_edge, %sw.bb622
  %194 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %46, %sw.bb622 ]
  %195 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %47, %sw.bb622 ]
  %196 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %48, %sw.bb622 ]
  %197 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %49, %sw.bb622 ]
  %198 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %50, %sw.bb622 ]
  %199 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %51, %sw.bb622 ]
  %200 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %84, %sw.bb622 ]
  %201 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %85, %sw.bb622 ]
  %202 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %86, %sw.bb622 ]
  %203 = phi i64* [ %192, %cond.end654.if.end667_crit_edge ], [ %87, %sw.bb622 ]
  %204 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %88, %sw.bb622 ]
  %205 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %89, %sw.bb622 ]
  %206 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %90, %sw.bb622 ]
  %207 = phi %struct.tree_exp* [ %.pre41, %cond.end654.if.end667_crit_edge ], [ %91, %sw.bb622 ], !dbg !4510
  %arrayidx670 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %207, i64 0, i32 3, i64 0, !dbg !4510
  %208 = bitcast %union.tree_node** %arrayidx670 to i64**, !dbg !4510
  %209 = load i64*, i64** %208, align 8, !dbg !4510
  %bf.load672 = load i64, i64* %209, align 8, !dbg !4510
  %bf.cast67413 = and i64 %bf.load672, 65535, !dbg !4513
  %cmp675 = icmp eq i64 %bf.cast67413, 116, !dbg !4513
  br i1 %cmp675, label %land.lhs.true677, label %sw.default765, !dbg !4514

land.lhs.true677:                                 ; preds = %if.end667
  %arrayidx680 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %206, i64 0, i32 3, i64 1, !dbg !4515
  %210 = bitcast %union.tree_node** %arrayidx680 to i64**, !dbg !4515
  %211 = load i64*, i64** %210, align 8, !dbg !4515
  %bf.load682 = load i64, i64* %211, align 8, !dbg !4515
  %bf.cast68429 = and i64 %bf.load682, 65535, !dbg !4516
  %cmp685 = icmp eq i64 %bf.cast68429, 23, !dbg !4516
  br i1 %cmp685, label %land.lhs.true687, label %sw.default765, !dbg !4517

land.lhs.true687:                                 ; preds = %land.lhs.true677
  %arrayidx690 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %205, i64 0, i32 3, i64 0, !dbg !4518
  %212 = bitcast %union.tree_node** %arrayidx690 to %struct.tree_exp**, !dbg !4518
  %213 = load %struct.tree_exp*, %struct.tree_exp** %212, align 8, !dbg !4518
  %arrayidx693 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %213, i64 0, i32 3, i64 0, !dbg !4518
  %214 = bitcast %union.tree_node** %arrayidx693 to %struct.tree_common**, !dbg !4518
  %215 = load %struct.tree_common*, %struct.tree_common** %214, align 8, !dbg !4518
  %type695 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %215, i64 0, i32 2, !dbg !4518
  %216 = bitcast %union.tree_node** %type695 to i64**, !dbg !4518
  %217 = load i64*, i64** %216, align 8, !dbg !4518
  %bf.load697 = load i64, i64* %217, align 8, !dbg !4518
  %bf.cast69930 = and i64 %bf.load697, 65535, !dbg !4518
  %cmp700 = icmp eq i64 %bf.cast69930, 10, !dbg !4518
  br i1 %cmp700, label %land.lhs.true717, label %lor.lhs.false702, !dbg !4518

lor.lhs.false702:                                 ; preds = %land.lhs.true687
  %arrayidx705 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %204, i64 0, i32 3, i64 0, !dbg !4518
  %218 = bitcast %union.tree_node** %arrayidx705 to %struct.tree_exp**, !dbg !4518
  %219 = load %struct.tree_exp*, %struct.tree_exp** %218, align 8, !dbg !4518
  %arrayidx708 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %219, i64 0, i32 3, i64 0, !dbg !4518
  %220 = bitcast %union.tree_node** %arrayidx708 to %struct.tree_common**, !dbg !4518
  %221 = load %struct.tree_common*, %struct.tree_common** %220, align 8, !dbg !4518
  %type710 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %221, i64 0, i32 2, !dbg !4518
  %222 = bitcast %union.tree_node** %type710 to i64**, !dbg !4518
  %223 = load i64*, i64** %222, align 8, !dbg !4518
  %bf.load712 = load i64, i64* %223, align 8, !dbg !4518
  %bf.cast71431 = and i64 %bf.load712, 65535, !dbg !4518
  %cmp715 = icmp eq i64 %bf.cast71431, 12, !dbg !4518
  br i1 %cmp715, label %land.lhs.true717, label %sw.default765, !dbg !4519

land.lhs.true717:                                 ; preds = %lor.lhs.false702, %land.lhs.true687
  %bf.load719 = load i64, i64* %203, align 8, !dbg !4520
  %bf.cast721 = and i64 %bf.load719, 65535, !dbg !4520
  %arrayidx723 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast721, !dbg !4520
  %224 = load i32, i32* %arrayidx723, align 4, !dbg !4520
  %cmp724 = icmp ugt i32 %224, 3, !dbg !4520
  br i1 %cmp724, label %land.lhs.true726, label %cond.end739, !dbg !4520

land.lhs.true726:                                 ; preds = %land.lhs.true717
  %bf.load728 = load i64, i64* %202, align 8, !dbg !4520
  %bf.cast730 = and i64 %bf.load728, 65535, !dbg !4520
  %arrayidx732 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast730, !dbg !4520
  %225 = load i32, i32* %arrayidx732, align 4, !dbg !4520
  %cmp733 = icmp ult i32 %225, 11, !dbg !4520
  br i1 %cmp733, label %cond.true735, label %cond.end739, !dbg !4520

cond.true735:                                     ; preds = %land.lhs.true726
  %locus737 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %201, i64 0, i32 1, !dbg !4520
  %226 = load i32, i32* %locus737, align 8, !dbg !4520
  br label %cond.end739, !dbg !4520

cond.end739:                                      ; preds = %land.lhs.true717, %land.lhs.true726, %cond.true735
  %cond740 = phi i32 [ %226, %cond.true735 ], [ 0, %land.lhs.true726 ], [ 0, %land.lhs.true717 ], !dbg !4520
  %arrayidx743 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %200, i64 0, i32 3, i64 0, !dbg !4521
  %227 = bitcast %union.tree_node** %arrayidx743 to %struct.tree_exp**, !dbg !4521
  %228 = load %struct.tree_exp*, %struct.tree_exp** %227, align 8, !dbg !4521
  %arrayidx746 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %228, i64 0, i32 3, i64 0, !dbg !4521
  %229 = load %union.tree_node*, %union.tree_node** %arrayidx746, align 8, !dbg !4521
  %arrayidx749 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %200, i64 0, i32 3, i64 1, !dbg !4522
  %230 = load %union.tree_node*, %union.tree_node** %arrayidx749, align 8, !dbg !4522
  %type757 = getelementptr inbounds %union.tree_node, %union.tree_node* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4523
  %231 = load %union.tree_node*, %union.tree_node** %type757, align 8, !dbg !4523
  %call758 = call %union.tree_node* @maybe_fold_offset_to_address(i32 %cond740, %union.tree_node* %229, %union.tree_node* %230, %union.tree_node* %231) #6, !dbg !4524
  call void @llvm.dbg.value(metadata %union.tree_node* %call758, metadata !4036, metadata !DIExpression()), !dbg !4098
  store %union.tree_node* %call758, %union.tree_node** %tmp, align 8, !dbg !4525
  %tobool759 = icmp eq %union.tree_node* %call758, null, !dbg !4525
  br i1 %tobool759, label %cond.end739.sw.default765_crit_edge, label %if.then760, !dbg !4526

cond.end739.sw.default765_crit_edge:              ; preds = %cond.end739
  %.pre45 = load i64*, i64** %.pre-phi, align 8, !dbg !4527
  %232 = bitcast i64* %.pre45 to %struct.tree_exp*, !dbg !4526
  br label %sw.default765, !dbg !4526

if.then760:                                       ; preds = %cond.end739
  %233 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !4528
  %type762 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %233, i64 0, i32 2, !dbg !4528
  %234 = load %union.tree_node*, %union.tree_node** %type762, align 8, !dbg !4528
  call void @llvm.dbg.value(metadata %union.tree_node* %call758, metadata !4036, metadata !DIExpression()), !dbg !4098
  %call763 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %234, %union.tree_node* nonnull %call758) #6, !dbg !4528
  store %union.tree_node* %call763, %union.tree_node** %expr_p, align 8, !dbg !4529
  br label %sw.epilog883, !dbg !4530

sw.default765:                                    ; preds = %cond.end739.sw.default765_crit_edge, %if.end667, %land.lhs.true677, %lor.lhs.false702, %if.end164
  %235 = phi i64* [ %.pre45, %cond.end739.sw.default765_crit_edge ], [ %194, %if.end667 ], [ %194, %land.lhs.true677 ], [ %194, %lor.lhs.false702 ], [ %46, %if.end164 ]
  %236 = phi i64* [ %.pre45, %cond.end739.sw.default765_crit_edge ], [ %195, %if.end667 ], [ %195, %land.lhs.true677 ], [ %195, %lor.lhs.false702 ], [ %47, %if.end164 ]
  %237 = phi i64* [ %.pre45, %cond.end739.sw.default765_crit_edge ], [ %196, %if.end667 ], [ %196, %land.lhs.true677 ], [ %196, %lor.lhs.false702 ], [ %48, %if.end164 ]
  %238 = phi %struct.tree_exp* [ %232, %cond.end739.sw.default765_crit_edge ], [ %197, %if.end667 ], [ %197, %land.lhs.true677 ], [ %197, %lor.lhs.false702 ], [ %49, %if.end164 ]
  %239 = phi %struct.tree_exp* [ %232, %cond.end739.sw.default765_crit_edge ], [ %198, %if.end667 ], [ %198, %land.lhs.true677 ], [ %198, %lor.lhs.false702 ], [ %50, %if.end164 ]
  %240 = phi i64* [ %.pre45, %cond.end739.sw.default765_crit_edge ], [ %199, %if.end667 ], [ %199, %land.lhs.true677 ], [ %199, %lor.lhs.false702 ], [ %51, %if.end164 ], !dbg !4527
  %bf.load767 = load i64, i64* %240, align 8, !dbg !4527
  %bf.cast769 = and i64 %bf.load767, 65535, !dbg !4527
  %arrayidx771 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast769, !dbg !4527
  %241 = load i32, i32* %arrayidx771, align 4, !dbg !4527
  switch i32 %241, label %sw.default857 [
    i32 5, label %sw.bb772
    i32 6, label %sw.bb832
    i32 7, label %expr_2
    i32 3, label %sw.epilog883
    i32 1, label %sw.epilog883
  ], !dbg !4531

sw.bb772:                                         ; preds = %sw.default765
  %arrayidx776 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %238, i64 0, i32 3, i64 1, !dbg !4532
  %242 = bitcast %union.tree_node** %arrayidx776 to %struct.tree_common**, !dbg !4532
  %243 = load %struct.tree_common*, %struct.tree_common** %242, align 8, !dbg !4532
  %type778 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %243, i64 0, i32 2, !dbg !4532
  %244 = load %union.tree_node*, %union.tree_node** %type778, align 8, !dbg !4532
  call void @llvm.dbg.value(metadata %union.tree_node* %244, metadata !4079, metadata !DIExpression()), !dbg !4533
  %245 = getelementptr inbounds %union.tree_node, %union.tree_node* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4534
  %bf.load780 = load i64, i64* %245, align 8, !dbg !4534
  %bf.cast78221 = and i64 %bf.load780, 65535, !dbg !4534
  %cmp783 = icmp eq i64 %bf.cast78221, 15, !dbg !4534
  br i1 %cmp783, label %if.else807, label %lor.lhs.false785, !dbg !4534

lor.lhs.false785:                                 ; preds = %sw.bb772
  %cmp790 = icmp eq i64 %bf.cast78221, 16, !dbg !4534
  br i1 %cmp790, label %if.else807, label %lor.lhs.false792, !dbg !4534

lor.lhs.false792:                                 ; preds = %lor.lhs.false785
  %cmp797 = icmp eq i64 %bf.cast78221, 17, !dbg !4534
  br i1 %cmp797, label %if.else807, label %lor.lhs.false799, !dbg !4534

lor.lhs.false799:                                 ; preds = %lor.lhs.false792
  %cmp804 = icmp eq i64 %bf.cast78221, 18, !dbg !4534
  br i1 %cmp804, label %if.else807, label %cleanup831, !dbg !4536

if.else807:                                       ; preds = %lor.lhs.false799, %lor.lhs.false792, %lor.lhs.false785, %sw.bb772
  %cmp812 = icmp eq i64 %bf.cast78221, 14, !dbg !4537
  br i1 %cmp812, label %cond.true814, label %cond.false816, !dbg !4537

cond.true814:                                     ; preds = %if.else807
  %call815 = call i32 @vector_type_mode(%union.tree_node* %244) #6, !dbg !4537
  br label %cond.end821, !dbg !4537

cond.false816:                                    ; preds = %if.else807
  %type817 = bitcast %union.tree_node* %244 to %struct.tree_type*, !dbg !4537
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type817, i64 0, i32 6, !dbg !4537
  %bf.load818 = load i32, i32* %mode, align 4, !dbg !4537
  %bf.lshr819 = lshr i32 %bf.load818, 16, !dbg !4537
  %bf.clear820 = and i32 %bf.lshr819, 255, !dbg !4537
  br label %cond.end821, !dbg !4537

cond.end821:                                      ; preds = %cond.false816, %cond.true814
  %cond822 = phi i32 [ %call815, %cond.true814 ], [ %bf.clear820, %cond.false816 ], !dbg !4537
  %cmp823 = icmp eq i32 %cond822, 1, !dbg !4539
  br i1 %cmp823, label %if.else827, label %if.then825, !dbg !4540

if.then825:                                       ; preds = %cond.end821
  %call826 = call fastcc i32 @gimplify_scalar_mode_aggregate_compare(%union.tree_node** %expr_p) #7, !dbg !4541
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %cleanup831, !dbg !4542

if.else827:                                       ; preds = %cond.end821
  %call828 = call fastcc i32 @gimplify_variable_sized_compare(%union.tree_node** %expr_p) #7, !dbg !4543
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %cleanup831

cleanup831:                                       ; preds = %if.else827, %if.then825, %lor.lhs.false799
  %cleanup.dest.slot.0 = phi i32 [ 10, %lor.lhs.false799 ], [ 9, %if.then825 ], [ 9, %if.else827 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4098
  switch i32 %cleanup.dest.slot.0, label %cleanup1117.loopexit [
    i32 9, label %sw.epilog882
    i32 10, label %expr_2
  ]

sw.bb832:                                         ; preds = %sw.default765
  %arrayidx835 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %239, i64 0, i32 3, i64 0, !dbg !4544
  %call836 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx835, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %call836, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog882, !dbg !4546

expr_2:                                           ; preds = %cond.true878, %lor.lhs.false871, %lor.lhs.false864, %sw.default857, %sw.default765, %cleanup831
  call void @llvm.dbg.label(metadata !4095), !dbg !4547
  %246 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4548
  %arrayidx842 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %246, i64 0, i32 3, i64 0, !dbg !4548
  %call843 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx842, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %call843, metadata !4082, metadata !DIExpression()), !dbg !4550
  %247 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4551
  %arrayidx846 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %247, i64 0, i32 3, i64 1, !dbg !4551
  %call847 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx846, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %call847, metadata !4084, metadata !DIExpression()), !dbg !4550
  %cmp848 = icmp slt i32 %call843, %call847, !dbg !4553
  %call843.call847 = select i1 %cmp848, i32 %call843, i32 %call847, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %call843.call847, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %sw.epilog882

sw.default857:                                    ; preds = %sw.default765
  %bf.load859 = load i64, i64* %237, align 8, !dbg !4554
  %bf.cast86126 = and i64 %bf.load859, 65535, !dbg !4554
  %cmp862 = icmp eq i64 %bf.cast86126, 93, !dbg !4554
  br i1 %cmp862, label %expr_2, label %lor.lhs.false864, !dbg !4554

lor.lhs.false864:                                 ; preds = %sw.default857
  %bf.load866 = load i64, i64* %236, align 8, !dbg !4554
  %bf.cast86827 = and i64 %bf.load866, 65535, !dbg !4554
  %cmp869 = icmp eq i64 %bf.cast86827, 94, !dbg !4554
  br i1 %cmp869, label %expr_2, label %lor.lhs.false871, !dbg !4554

lor.lhs.false871:                                 ; preds = %lor.lhs.false864
  %bf.load873 = load i64, i64* %235, align 8, !dbg !4554
  %bf.cast87528 = and i64 %bf.load873, 65535, !dbg !4554
  %cmp876 = icmp eq i64 %bf.cast87528, 95, !dbg !4554
  br i1 %cmp876, label %expr_2, label %cond.true878, !dbg !4554

cond.true878:                                     ; preds = %lor.lhs.false871
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4554
  br label %expr_2, !dbg !4554

sw.epilog882:                                     ; preds = %expr_2, %sw.bb832, %cleanup831
  %ret.7 = phi i32 [ %call843.call847, %expr_2 ], [ %call836, %sw.bb832 ], [ 0, %cleanup831 ], !dbg !4555
  call void @llvm.dbg.value(metadata i32 %ret.7, metadata !4042, metadata !DIExpression()), !dbg !4098
  %248 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4556
  call void @recalculate_side_effects(%union.tree_node* %248) #6, !dbg !4557
  br label %sw.epilog883, !dbg !4557

sw.epilog883:                                     ; preds = %if.end274.sw.epilog883_crit_edge, %land.lhs.true251, %if.end279, %sw.bb289, %sw.bb301, %sw.bb588, %sw.epilog882, %sw.default765, %sw.default765, %if.end164, %if.then590, %sw.bb405, %for.end, %sw.bb371, %if.then398, %if.then327, %if.else305, %if.end164, %if.end164, %if.end164, %if.end164, %if.end164, %if.end164, %sw.bb187, %if.then194, %sw.bb180, %if.then184, %if.then760, %if.then666, %sw.bb620, %sw.epilog, %sw.bb598, %sw.bb596, %sw.bb595, %sw.bb594, %sw.bb586, %sw.bb571, %sw.bb569, %sw.bb565, %sw.bb545, %sw.bb529, %sw.bb519, %sw.bb517, %sw.bb515, %cleanup512, %sw.bb477, %if.end469, %sw.bb403, %sw.bb369, %sw.bb367, %cond.end361, %sw.bb341, %if.end336, %sw.bb315, %sw.bb313, %sw.bb311, %sw.bb309, %sw.bb307, %sw.bb295, %sw.bb284, %if.then270, %sw.bb233, %sw.bb231, %if.end227, %if.then221, %sw.bb210, %sw.bb205, %sw.bb203, %sw.bb198, %sw.bb173, %sw.bb
  %ret.9 = phi i32 [ 0, %if.then666 ], [ 0, %if.then760 ], [ %call621, %sw.bb620 ], [ 1, %sw.epilog ], [ 1, %sw.bb598 ], [ %call597, %sw.bb596 ], [ 1, %sw.bb595 ], [ 1, %sw.bb594 ], [ %call587, %sw.bb586 ], [ 0, %sw.bb571 ], [ %call570, %sw.bb569 ], [ 1, %sw.bb565 ], [ %call551.call555, %sw.bb545 ], [ 1, %sw.bb529 ], [ 1, %sw.bb519 ], [ %call518, %sw.bb517 ], [ %call516, %sw.bb515 ], [ 1, %cleanup512 ], [ %call478, %sw.bb477 ], [ %r0437.1.r1438.0, %if.end469 ], [ %call404, %sw.bb403 ], [ %call370, %sw.bb369 ], [ 1, %sw.bb367 ], [ 1, %cond.end361 ], [ 1, %sw.bb341 ], [ %ret.1, %if.end336 ], [ 0, %sw.bb315 ], [ %call314, %sw.bb313 ], [ 1, %sw.bb311 ], [ %call310, %sw.bb309 ], [ %call308, %sw.bb307 ], [ %call299, %sw.bb295 ], [ %call288, %sw.bb284 ], [ 0, %if.then270 ], [ %call234, %sw.bb233 ], [ %call232, %sw.bb231 ], [ 0, %if.then221 ], [ %call230, %if.end227 ], [ 0, %sw.bb210 ], [ %call209, %sw.bb205 ], [ 0, %sw.bb203 ], [ %call202, %sw.bb198 ], [ %call179, %sw.bb173 ], [ %call172, %sw.bb ], [ %call181, %if.then184 ], [ %call181, %sw.bb180 ], [ %call191, %if.then194 ], [ %call191, %sw.bb187 ], [ 1, %land.lhs.true251 ], [ undef, %if.end274.sw.epilog883_crit_edge ], [ 0, %if.end279 ], [ 0, %sw.bb289 ], [ 1, %if.end164 ], [ 1, %if.end164 ], [ 1, %if.end164 ], [ 1, %if.end164 ], [ 1, %if.end164 ], [ 1, %if.end164 ], [ 0, %if.else305 ], [ 1, %sw.bb301 ], [ -2, %if.then327 ], [ 0, %for.end ], [ 0, %if.then398 ], [ 1, %sw.bb371 ], [ %cond435, %sw.bb405 ], [ 1, %if.then590 ], [ 1, %sw.bb588 ], [ 1, %if.end164 ], [ %ret.7, %sw.epilog882 ], [ 1, %sw.default765 ], [ 1, %sw.default765 ], !dbg !4158
  %g.2 = phi %union.gimple_statement_d* [ %g.0, %if.then666 ], [ %g.0, %if.then760 ], [ %g.0, %sw.bb620 ], [ %g.1, %sw.epilog ], [ %g.0, %sw.bb598 ], [ %g.0, %sw.bb596 ], [ %g.0, %sw.bb595 ], [ %g.0, %sw.bb594 ], [ %g.0, %sw.bb586 ], [ %g.0, %sw.bb571 ], [ %g.0, %sw.bb569 ], [ %g.0, %sw.bb565 ], [ %g.0, %sw.bb545 ], [ %g.0, %sw.bb529 ], [ %g.0, %sw.bb519 ], [ %g.0, %sw.bb517 ], [ %g.0, %sw.bb515 ], [ %g.0, %cleanup512 ], [ %g.0, %sw.bb477 ], [ %g.0, %if.end469 ], [ %g.0, %sw.bb403 ], [ %g.0, %sw.bb369 ], [ %g.0, %sw.bb367 ], [ %g.0, %cond.end361 ], [ %g.0, %sw.bb341 ], [ %g.0, %if.end336 ], [ %g.0, %sw.bb315 ], [ %g.0, %sw.bb313 ], [ %g.0, %sw.bb311 ], [ %g.0, %sw.bb309 ], [ %g.0, %sw.bb307 ], [ %g.0, %sw.bb295 ], [ %g.0, %sw.bb284 ], [ %g.0, %if.then270 ], [ %g.0, %sw.bb233 ], [ %g.0, %sw.bb231 ], [ %g.0, %if.then221 ], [ %g.0, %if.end227 ], [ %g.0, %sw.bb210 ], [ %g.0, %sw.bb205 ], [ %g.0, %sw.bb203 ], [ %g.0, %sw.bb198 ], [ %g.0, %sw.bb173 ], [ %g.0, %sw.bb ], [ %g.0, %if.then184 ], [ %g.0, %sw.bb180 ], [ %g.0, %if.then194 ], [ %g.0, %sw.bb187 ], [ %g.0, %land.lhs.true251 ], [ undef, %if.end274.sw.epilog883_crit_edge ], [ %g.0, %if.end279 ], [ %g.0, %sw.bb289 ], [ %g.0, %if.end164 ], [ %g.0, %if.end164 ], [ %g.0, %if.end164 ], [ %g.0, %if.end164 ], [ %g.0, %if.end164 ], [ %g.0, %if.end164 ], [ %g.0, %if.else305 ], [ %g.0, %sw.bb301 ], [ %g.0, %if.then327 ], [ %g.0, %for.end ], [ %g.0, %if.then398 ], [ %g.0, %sw.bb371 ], [ %g.0, %sw.bb405 ], [ %g.0, %if.then590 ], [ %g.0, %sw.bb588 ], [ %g.0, %if.end164 ], [ %g.0, %sw.epilog882 ], [ %g.0, %sw.default765 ], [ %g.0, %sw.default765 ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g.2, metadata !4078, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %ret.9, metadata !4042, metadata !DIExpression()), !dbg !4098
  %cmp884 = icmp eq i32 %ret.9, 0, !dbg !4558
  br i1 %cmp884, label %land.lhs.true886, label %do.cond, !dbg !4560

land.lhs.true886:                                 ; preds = %sw.epilog883
  %249 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4561
  %cmp887 = icmp eq %union.tree_node* %249, null, !dbg !4562
  br i1 %cmp887, label %if.then892, label %lor.lhs.false889, !dbg !4563

lor.lhs.false889:                                 ; preds = %land.lhs.true886
  %cmp890 = icmp eq %union.tree_node* %249, %call, !dbg !4564
  br i1 %cmp890, label %if.then892, label %do.cond, !dbg !4565

if.then892:                                       ; preds = %lor.lhs.false889, %land.lhs.true886
  call void @llvm.dbg.value(metadata i32 1, metadata !4042, metadata !DIExpression()), !dbg !4098
  br label %do.cond, !dbg !4566

do.cond:                                          ; preds = %if.end154, %sw.epilog883, %lor.lhs.false889, %if.then892
  %ret.11 = phi i32 [ 0, %if.end154 ], [ 1, %if.then892 ], [ 0, %lor.lhs.false889 ], [ %ret.9, %sw.epilog883 ], !dbg !4158
  %g.3 = phi %union.gimple_statement_d* [ %g.0, %if.end154 ], [ %g.2, %if.then892 ], [ %g.2, %lor.lhs.false889 ], [ %g.2, %sw.epilog883 ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g.3, metadata !4078, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %ret.11, metadata !4042, metadata !DIExpression()), !dbg !4098
  %cmp894 = icmp eq i32 %ret.11, 0, !dbg !4567
  br i1 %cmp894, label %do.body, label %do.end, !dbg !4568, !llvm.loop !4569

do.end:                                           ; preds = %if.end146, %if.then150, %do.body, %land.lhs.true140, %do.cond
  %ret.12 = phi i32 [ %ret.11, %do.cond ], [ -2, %land.lhs.true140 ], [ -2, %do.body ], [ 0, %if.then150 ], [ %call147, %if.end146 ], !dbg !4158
  call void @llvm.dbg.value(metadata i32 %ret.12, metadata !4042, metadata !DIExpression()), !dbg !4098
  switch i32 %ret.12, label %cond.end907 [
    i32 -2, label %if.then898
    i32 -1, label %cond.true905
  ], !dbg !4571

if.then898:                                       ; preds = %do.end
  br i1 %cmp1, label %if.then900, label %out, !dbg !4572

if.then900:                                       ; preds = %if.then898
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4575
  br label %out, !dbg !4577

cond.true905:                                     ; preds = %do.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4578
  br label %cond.end907, !dbg !4578

cond.end907:                                      ; preds = %do.end, %cond.true905
  br i1 %cmp268, label %land.lhs.true911, label %lor.lhs.false998, !dbg !4579

land.lhs.true911:                                 ; preds = %cond.end907
  %250 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4580
  %tobool912 = icmp eq %union.tree_node* %250, null, !dbg !4580
  br i1 %tobool912, label %if.end995, label %land.lhs.true913, !dbg !4581

land.lhs.true913:                                 ; preds = %land.lhs.true911
  %call914 = call zeroext i8 @is_gimple_stmt(%union.tree_node* nonnull %250) #6, !dbg !4582
  %tobool915 = icmp eq i8 %call914, 0, !dbg !4582
  br i1 %tobool915, label %if.then916, label %if.end995, !dbg !4583

if.then916:                                       ; preds = %land.lhs.true913
  %251 = load i64*, i64** %.pre-phi, align 8, !dbg !4584
  %bf.load918 = load i64, i64* %251, align 8, !dbg !4584
  %bf.cast92117 = and i64 %bf.load918, 65536, !dbg !4584
  %tobool922 = icmp eq i64 %bf.cast92117, 0, !dbg !4584
  br i1 %tobool922, label %if.then923, label %if.else924, !dbg !4585

if.then923:                                       ; preds = %if.then916
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4586
  br label %if.end995, !dbg !4587

if.else924:                                       ; preds = %if.then916
  %bf.cast92918 = and i64 %bf.load918, 524288, !dbg !4588
  %tobool930 = icmp eq i64 %bf.cast92918, 0, !dbg !4588
  br i1 %tobool930, label %if.then931, label %if.else952, !dbg !4589

if.then931:                                       ; preds = %if.else924
  %252 = trunc i64 %bf.load918 to i16, !dbg !4590
  switch i16 %252, label %sw.default950 [
    i16 41, label %sw.bb936
    i16 43, label %sw.bb936
    i16 44, label %sw.bb936
    i16 118, label %sw.bb936
    i16 45, label %sw.bb941
    i16 46, label %sw.bb941
  ], !dbg !4591

sw.bb936:                                         ; preds = %if.then931, %if.then931, %if.then931, %if.then931
  %arrayidx939 = getelementptr inbounds i64, i64* %251, i64 5, !dbg !4592
  %253 = bitcast i64* %arrayidx939 to %union.tree_node**, !dbg !4592
  %call940 = call i32 @gimplify_expr(%union.tree_node** nonnull %253, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* %gimple_test_f, i32 0) #7, !dbg !4594
  br label %sw.epilog951, !dbg !4595

sw.bb941:                                         ; preds = %if.then931, %if.then931
  %arrayidx944 = getelementptr inbounds i64, i64* %251, i64 5, !dbg !4596
  %254 = bitcast i64* %arrayidx944 to %union.tree_node**, !dbg !4596
  %call945 = call i32 @gimplify_expr(%union.tree_node** nonnull %254, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* %gimple_test_f, i32 0) #7, !dbg !4597
  %255 = load %struct.tree_exp*, %struct.tree_exp** %19, align 8, !dbg !4598
  %arrayidx948 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %255, i64 0, i32 3, i64 1, !dbg !4598
  %call949 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx948, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* %gimple_test_f, i32 0) #7, !dbg !4599
  br label %sw.epilog951, !dbg !4600

sw.default950:                                    ; preds = %if.then931
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4601
  br label %sw.epilog951, !dbg !4602

sw.epilog951:                                     ; preds = %sw.default950, %sw.bb941, %sw.bb936
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4603
  br label %if.end995, !dbg !4604

if.else952:                                       ; preds = %if.else924
  %type954 = getelementptr inbounds i64, i64* %251, i64 2, !dbg !4605
  %256 = bitcast i64* %type954 to %struct.tree_type**, !dbg !4605
  %257 = load %struct.tree_type*, %struct.tree_type** %256, align 8, !dbg !4605
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %257, i64 0, i32 2, !dbg !4605
  %258 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4605
  %cmp956 = icmp eq %union.tree_node* %258, null, !dbg !4605
  %259 = bitcast %struct.tree_type* %257 to %union.tree_node*, !dbg !4606
  br i1 %cmp956, label %if.else991, label %land.lhs.true958, !dbg !4606

land.lhs.true958:                                 ; preds = %if.else952
  %260 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %257, i64 0, i32 0, i32 0, i32 0, !dbg !4606
  %bf.load962 = load i64, i64* %260, align 8, !dbg !4607
  %bf.cast96420 = and i64 %bf.load962, 65535, !dbg !4607
  %cmp965 = icmp eq i64 %bf.cast96420, 14, !dbg !4607
  br i1 %cmp965, label %cond.true967, label %cond.false971, !dbg !4607

cond.true967:                                     ; preds = %land.lhs.true958
  %call970 = call i32 @vector_type_mode(%union.tree_node* %259) #6, !dbg !4607
  br label %cond.end979, !dbg !4607

cond.false971:                                    ; preds = %land.lhs.true958
  %mode975 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %257, i64 0, i32 6, !dbg !4607
  %bf.load976 = load i32, i32* %mode975, align 4, !dbg !4607
  %bf.lshr977 = lshr i32 %bf.load976, 16, !dbg !4607
  %bf.clear978 = and i32 %bf.lshr977, 255, !dbg !4607
  br label %cond.end979, !dbg !4607

cond.end979:                                      ; preds = %cond.false971, %cond.true967
  %cond980 = phi i32 [ %call970, %cond.true967 ], [ %bf.clear978, %cond.false971 ], !dbg !4607
  %cmp981 = icmp eq i32 %cond980, 1, !dbg !4608
  br i1 %cmp981, label %if.else991, label %if.then983, !dbg !4609

if.then983:                                       ; preds = %cond.end979
  %261 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !4610
  %type986 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %261, i64 0, i32 2, !dbg !4610
  %262 = bitcast %union.tree_node** %type986 to %struct.tree_type**, !dbg !4610
  %263 = load %struct.tree_type*, %struct.tree_type** %262, align 8, !dbg !4610
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %263, i64 0, i32 16, !dbg !4610
  %264 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !4610
  call void @llvm.dbg.value(metadata %union.tree_node* %264, metadata !4091, metadata !DIExpression()), !dbg !4611
  %call989 = call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %264, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !4612
  call void @llvm.dbg.value(metadata %union.tree_node* %call989, metadata !4094, metadata !DIExpression()), !dbg !4611
  call void @gimple_add_tmp_var(%union.tree_node* %call989) #7, !dbg !4613
  %265 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4614
  %call990 = call %union.gimple_statement_d* @gimplify_assign(%union.tree_node* %call989, %union.tree_node* %265, %struct.gimple_seq_d** %spec.select) #6, !dbg !4615
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4616
  br label %if.end995, !dbg !4617

if.else991:                                       ; preds = %cond.end979, %if.else952
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4618
  br label %if.end995

if.end995:                                        ; preds = %land.lhs.true913, %land.lhs.true911, %if.then923, %if.then983, %if.else991, %sw.epilog951
  br i1 true, label %if.then1001, label %if.end995.lor.lhs.false998_crit_edge, !dbg !4619

if.end995.lor.lhs.false998_crit_edge:             ; preds = %if.end995
  br label %lor.lhs.false998, !dbg !4619

lor.lhs.false998:                                 ; preds = %if.end995.lor.lhs.false998_crit_edge, %cond.end907
  br i1 %cmp1, label %if.then1001, label %if.end1017, !dbg !4621

if.then1001:                                      ; preds = %lor.lhs.false998, %if.end995
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !4622
  %266 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_pre, align 8, !dbg !4624
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %266, metadata !4037, metadata !DIExpression()), !dbg !4098
  %call1002 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %266) #7, !dbg !4626
  %tobool1003 = icmp eq i8 %call1002, 0, !dbg !4626
  br i1 %tobool1003, label %if.then1007, label %lor.lhs.false1004, !dbg !4627

lor.lhs.false1004:                                ; preds = %if.then1001
  %267 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4628
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %267, metadata !4038, metadata !DIExpression()), !dbg !4098
  %call1005 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %267) #7, !dbg !4629
  %tobool1006 = icmp eq i8 %call1005, 0, !dbg !4629
  br i1 %tobool1006, label %if.then1007, label %if.end1008, !dbg !4630

if.then1007:                                      ; preds = %lor.lhs.false1004, %if.then1001
  %268 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4631
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %268, metadata !4038, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %internal_pre, metadata !4037, metadata !DIExpression(DW_OP_deref)), !dbg !4098
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** nonnull %internal_pre, %struct.gimple_seq_d* %268) #7, !dbg !4633
  %269 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_pre, align 8, !dbg !4634
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %269, metadata !4037, metadata !DIExpression()), !dbg !4098
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d* %269) #7, !dbg !4635
  br label %if.end1008, !dbg !4636

if.end1008:                                       ; preds = %lor.lhs.false1004, %if.then1007
  %270 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %spec.select, align 8, !dbg !4637
  %call1009 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %270) #7, !dbg !4639
  %tobool1010 = icmp eq i8 %call1009, 0, !dbg !4639
  br i1 %tobool1010, label %if.then1011, label %if.end1012, !dbg !4640

if.then1011:                                      ; preds = %if.end1008
  %271 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %spec.select, align 8, !dbg !4641
  %272 = load i32, i32* @input_location, align 4, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %pre_last_gsi, metadata !4043, metadata !DIExpression(DW_OP_deref)), !dbg !4098
  call fastcc void @annotate_all_with_location_after(%struct.gimple_seq_d* %271, %struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %pre_last_gsi, i32 %272) #7, !dbg !4643
  br label %if.end1012, !dbg !4643

if.end1012:                                       ; preds = %if.end1008, %if.then1011
  %273 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %post_p.addr.0, align 8, !dbg !4644
  %call1013 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %273) #7, !dbg !4646
  %tobool1014 = icmp eq i8 %call1013, 0, !dbg !4646
  br i1 %tobool1014, label %if.then1015, label %out, !dbg !4647

if.then1015:                                      ; preds = %if.end1012
  %274 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %post_p.addr.0, align 8, !dbg !4648
  %275 = load i32, i32* @input_location, align 4, !dbg !4649
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %post_last_gsi, metadata !4044, metadata !DIExpression(DW_OP_deref)), !dbg !4098
  call fastcc void @annotate_all_with_location_after(%struct.gimple_seq_d* %274, %struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %post_last_gsi, i32 %275) #7, !dbg !4650
  br label %out, !dbg !4650

if.end1017:                                       ; preds = %lor.lhs.false998
  %276 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4651
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %276, metadata !4038, metadata !DIExpression()), !dbg !4098
  %call1018 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %276) #7, !dbg !4653
  %tobool1020 = icmp eq i8 %call1018, 0, !dbg !4653
  br i1 %tobool1020, label %if.end1026, label %land.lhs.true1021, !dbg !4654

land.lhs.true1021:                                ; preds = %if.end1017
  %277 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4655
  %call1022 = call zeroext i8 %gimple_test_f(%union.tree_node* %277) #6, !dbg !4656
  %tobool1024 = icmp eq i8 %call1022, 0, !dbg !4656
  br i1 %tobool1024, label %if.end1026, label %out, !dbg !4657

if.end1026:                                       ; preds = %land.lhs.true1021, %if.end1017
  br i1 %tobool303, label %if.else1045, label %land.lhs.true1029, !dbg !4658

land.lhs.true1029:                                ; preds = %if.end1026
  %278 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4660
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %278, metadata !4038, metadata !DIExpression()), !dbg !4098
  %call1030 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %278) #7, !dbg !4661
  %tobool1032 = icmp eq i8 %call1030, 0, !dbg !4661
  br i1 %tobool1032, label %if.else1045, label %land.lhs.true1033, !dbg !4662

land.lhs.true1033:                                ; preds = %land.lhs.true1029
  %279 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4663
  %call1034 = call zeroext i8 @is_gimple_addressable(%union.tree_node* %279) #6, !dbg !4664
  %tobool1036 = icmp eq i8 %call1034, 0, !dbg !4664
  br i1 %tobool1036, label %if.else1045, label %if.then1037, !dbg !4665

if.then1037:                                      ; preds = %land.lhs.true1033
  %280 = load i32, i32* @input_location, align 4, !dbg !4666
  %281 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4668
  %call1038 = call %union.tree_node* @build_fold_addr_expr_loc(i32 %280, %union.tree_node* %281) #6, !dbg !4669
  call void @llvm.dbg.value(metadata %union.tree_node* %call1038, metadata !4036, metadata !DIExpression()), !dbg !4098
  store %union.tree_node* %call1038, %union.tree_node** %tmp, align 8, !dbg !4670
  call void @llvm.dbg.value(metadata %union.tree_node** %tmp, metadata !4036, metadata !DIExpression(DW_OP_deref)), !dbg !4098
  %call1039 = call i32 @gimplify_expr(%union.tree_node** nonnull %tmp, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0, i8 (%union.tree_node*)* nonnull @is_gimple_reg, i32 1) #7, !dbg !4671
  %282 = bitcast %union.tree_node** %tmp to %struct.tree_common**, !dbg !4672
  %283 = load %struct.tree_common*, %struct.tree_common** %282, align 8, !dbg !4672
  %type1041 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %283, i64 0, i32 2, !dbg !4672
  %284 = bitcast %union.tree_node** %type1041 to %struct.tree_common**, !dbg !4672
  %285 = load %struct.tree_common*, %struct.tree_common** %284, align 8, !dbg !4672
  %type1043 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %285, i64 0, i32 2, !dbg !4672
  %286 = load %union.tree_node*, %union.tree_node** %type1043, align 8, !dbg !4672
  %.cast = bitcast %struct.tree_common* %283 to %union.tree_node*, !dbg !4672
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4036, metadata !DIExpression()), !dbg !4098
  %call1044 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %286, %union.tree_node* %.cast) #6, !dbg !4672
  store %union.tree_node* %call1044, %union.tree_node** %expr_p, align 8, !dbg !4673
  br label %if.end1106, !dbg !4674

if.else1045:                                      ; preds = %land.lhs.true1033, %land.lhs.true1029, %if.end1026
  %and1046 = and i32 %fallback, 1, !dbg !4675
  %tobool1047 = icmp eq i32 %and1046, 0, !dbg !4675
  br i1 %tobool1047, label %if.else1098, label %land.lhs.true1048, !dbg !4677

land.lhs.true1048:                                ; preds = %if.else1045
  %287 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4678
  %call1049 = call zeroext i8 @is_gimple_reg_rhs_or_call(%union.tree_node* %287) #7, !dbg !4679
  %tobool1051 = icmp eq i8 %call1049, 0, !dbg !4679
  br i1 %tobool1051, label %if.else1098, label %if.then1052, !dbg !4680

if.then1052:                                      ; preds = %land.lhs.true1048
  %288 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !4681
  %type1054 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %288, i64 0, i32 2, !dbg !4681
  %289 = bitcast %union.tree_node** %type1054 to i64**, !dbg !4681
  %290 = load i64*, i64** %289, align 8, !dbg !4681
  %bf.load1056 = load i64, i64* %290, align 8, !dbg !4681
  %bf.cast105814 = and i64 %bf.load1056, 65535, !dbg !4681
  %cmp1059 = icmp eq i64 %bf.cast105814, 19, !dbg !4681
  br i1 %cmp1059, label %cond.true1061, label %cond.end1063, !dbg !4681

cond.true1061:                                    ; preds = %if.then1052
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7289, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4681
  br label %cond.end1063, !dbg !4681

cond.end1063:                                     ; preds = %if.then1052, %cond.true1061
  %291 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4683
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %291, metadata !4038, metadata !DIExpression()), !dbg !4098
  %call1065 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %291) #7, !dbg !4685
  %tobool1066 = icmp eq i8 %call1065, 0, !dbg !4685
  %tobool1069 = icmp ne i32 %and302, 0, !dbg !4686
  %or.cond10 = or i1 %tobool1066, %tobool1069, !dbg !4687
  %292 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4688
  br i1 %or.cond10, label %if.then1070, label %if.else1095, !dbg !4687

if.then1070:                                      ; preds = %cond.end1063
  %call1071 = call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %292, %struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d** %post_p.addr.0) #7, !dbg !4689
  store %union.tree_node* %call1071, %union.tree_node** %expr_p, align 8, !dbg !4691
  %type1073 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1071, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4692
  %293 = bitcast %union.tree_node** %type1073 to i64**, !dbg !4692
  %294 = load i64*, i64** %293, align 8, !dbg !4692
  %bf.load1075 = load i64, i64* %294, align 8, !dbg !4692
  %bf.cast107715 = and i64 %bf.load1075, 65535, !dbg !4694
  %cmp1078 = icmp eq i64 %bf.cast107715, 13, !dbg !4694
  br i1 %cmp1078, label %if.then1089, label %lor.lhs.false1080, !dbg !4695

lor.lhs.false1080:                                ; preds = %if.then1070
  %cmp1087 = icmp eq i64 %bf.cast107715, 14, !dbg !4696
  br i1 %cmp1087, label %if.then1089, label %if.end1106, !dbg !4697

if.then1089:                                      ; preds = %lor.lhs.false1080, %if.then1070
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call1071, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4698
  %295 = bitcast i40* %gimple_reg_flag to i64*, !dbg !4698
  %bf.load1091 = load i64, i64* %295, align 8, !dbg !4699
  %bf.set1093 = or i64 %bf.load1091, 134217728, !dbg !4699
  store i64 %bf.set1093, i64* %295, align 8, !dbg !4699
  %.pre46 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !4700
  br label %if.end1106, !dbg !4698

if.else1095:                                      ; preds = %cond.end1063
  %call1096 = call %union.tree_node* @get_formal_tmp_var(%union.tree_node* %292, %struct.gimple_seq_d** %spec.select) #7, !dbg !4701
  store %union.tree_node* %call1096, %union.tree_node** %expr_p, align 8, !dbg !4702
  br label %if.end1106

if.else1098:                                      ; preds = %land.lhs.true1048, %if.else1045
  %and1099 = and i32 %fallback, 4, !dbg !4703
  %tobool1100 = icmp eq i32 %and1099, 0, !dbg !4703
  br i1 %tobool1100, label %cond.true1101, label %out, !dbg !4703

cond.true1101:                                    ; preds = %if.else1098
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4703
  br label %out, !dbg !4703

if.end1106:                                       ; preds = %lor.lhs.false1080, %if.then1089, %if.else1095, %if.then1037
  %296 = phi %union.tree_node* [ %call1071, %lor.lhs.false1080 ], [ %.pre46, %if.then1089 ], [ %call1096, %if.else1095 ], [ %call1044, %if.then1037 ], !dbg !4700
  %call1107 = call zeroext i8 %gimple_test_f(%union.tree_node* %296) #6, !dbg !4700
  %tobool1108 = icmp eq i8 %call1107, 0, !dbg !4700
  br i1 %tobool1108, label %cond.true1109, label %cond.end1111, !dbg !4700

cond.true1109:                                    ; preds = %if.end1106
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4700
  br label %cond.end1111, !dbg !4700

cond.end1111:                                     ; preds = %if.end1106, %cond.true1109
  %297 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4705
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %297, metadata !4038, metadata !DIExpression()), !dbg !4098
  %call1113 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %297) #7, !dbg !4707
  %tobool1114 = icmp eq i8 %call1113, 0, !dbg !4707
  br i1 %tobool1114, label %if.then1115, label %out, !dbg !4708

if.then1115:                                      ; preds = %cond.end1111
  %298 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4709
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %298, metadata !4038, metadata !DIExpression()), !dbg !4098
  %299 = load i32, i32* @input_location, align 4, !dbg !4711
  call void @annotate_all_with_location(%struct.gimple_seq_d* %298, i32 %299) #7, !dbg !4712
  %300 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %internal_post, align 8, !dbg !4713
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %300, metadata !4038, metadata !DIExpression()), !dbg !4098
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %spec.select, %struct.gimple_seq_d* %300) #7, !dbg !4714
  br label %out, !dbg !4715

out:                                              ; preds = %if.end1012, %land.lhs.true1021, %cond.end1111, %if.else1098, %if.then1115, %cond.true1101, %if.then1015, %if.then898, %if.then900
  %ret.13 = phi i32 [ -2, %if.then900 ], [ -2, %if.then898 ], [ %ret.12, %if.then1015 ], [ %ret.12, %if.end1012 ], [ %ret.12, %land.lhs.true1021 ], [ -2, %if.else1098 ], [ -2, %cond.true1101 ], [ %ret.12, %if.then1115 ], [ %ret.12, %cond.end1111 ], !dbg !4098
  call void @llvm.dbg.value(metadata i32 %ret.13, metadata !4042, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.label(metadata !4097), !dbg !4716
  store i32 %10, i32* @input_location, align 4, !dbg !4717
  br label %cleanup1117, !dbg !4718

cleanup1117.loopexit:                             ; preds = %cleanup831
  br label %cleanup1117, !dbg !4719

cleanup1117:                                      ; preds = %cleanup1117.loopexit, %entry, %out
  %retval.0 = phi i32 [ %ret.13, %out ], [ 1, %entry ], [ undef, %cleanup1117.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4719
  ret i32 %retval.0, !dbg !4719
}

declare dso_local zeroext i8 @is_gimple_stmt(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define dso_local void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !4720 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx, metadata !4724, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4725, metadata !DIExpression()), !dbg !4727
  %cmp = icmp eq %union.tree_node* %decl, null, !dbg !4728
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !4730

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4731
  %bf.load = load i64, i64* %0, align 8, !dbg !4731
  %bf.cast = and i64 %bf.load, 65535, !dbg !4731
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4731
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4731
  %cmp1 = icmp eq i32 %1, 3, !dbg !4731
  br i1 %cmp1, label %do.body.preheader, label %cleanup.cont, !dbg !4732

do.body.preheader:                                ; preds = %lor.lhs.false
  %2 = ptrtoint %union.tree_node* %decl to i64, !dbg !4733
  br label %do.body, !dbg !4735

do.body:                                          ; preds = %do.body.preheader, %if.end13
  %ctx.addr.0 = phi %struct.gimplify_omp_ctx* [ %6, %if.end13 ], [ %ctx, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.addr.0, metadata !4724, metadata !DIExpression()), !dbg !4727
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.addr.0, i64 0, i32 1, !dbg !4736
  %3 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !4736
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %3, i64 %2) #6, !dbg !4737
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call, metadata !4726, metadata !DIExpression()), !dbg !4727
  %cmp2 = icmp eq %struct.splay_tree_node_s* %call, null, !dbg !4738
  br i1 %cmp2, label %if.else9, label %if.then3, !dbg !4740

if.then3:                                         ; preds = %do.body
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call, i64 0, i32 1, !dbg !4741
  %4 = load i64, i64* %value, align 8, !dbg !4741
  %and = and i64 %4, 4, !dbg !4744
  %tobool = icmp eq i64 %and, 0, !dbg !4744
  br i1 %tobool, label %cleanup.cont.loopexit, label %if.then4, !dbg !4745

if.then4:                                         ; preds = %if.then3
  %and6 = and i64 %4, 1, !dbg !4746
  %or = or i64 %and6, 16, !dbg !4747
  store i64 %or, i64* %value, align 8, !dbg !4748
  br label %if.end13, !dbg !4749

if.else9:                                         ; preds = %do.body
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.addr.0, i64 0, i32 5, !dbg !4750
  %5 = load i32, i32* %region_type, align 8, !dbg !4750
  %cmp10 = icmp eq i32 %5, 0, !dbg !4752
  br i1 %cmp10, label %if.end13, label %if.then11, !dbg !4753

if.then11:                                        ; preds = %if.else9
  tail call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %ctx.addr.0, %union.tree_node* nonnull %decl, i32 16) #7, !dbg !4754
  br label %if.end13, !dbg !4754

if.end13:                                         ; preds = %if.else9, %if.then11, %if.then4
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.addr.0, i64 0, i32 0, !dbg !4755
  %6 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !4755
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %6, metadata !4724, metadata !DIExpression()), !dbg !4727
  %tobool14 = icmp eq %struct.gimplify_omp_ctx* %6, null, !dbg !4756
  br i1 %tobool14, label %cleanup.cont.loopexit, label %do.body, !dbg !4756, !llvm.loop !4757

cleanup.cont.loopexit:                            ; preds = %if.end13, %if.then3
  br label %cleanup.cont, !dbg !4759

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %lor.lhs.false, %entry
  ret void, !dbg !4759
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_call_addr(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_condexpr(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_mem_rhs(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_reg_rhs(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_asm_val(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_min_lval(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_lvalue(%union.tree_node*) #2

declare dso_local zeroext i8 @is_gimple_addressable(%union.tree_node*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !4760 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !4762, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4763, metadata !DIExpression()), !dbg !4765
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %seq) #7, !dbg !4766
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4767
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4768
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4769
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !4770
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !4771
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !4772

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !4773
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4773
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !4774
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !4775

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !4776
  br label %cond.end, !dbg !4775

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4775
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4777
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !4778
  ret void, !dbg !4779
}

declare dso_local %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_self_mod_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !4780 {
entry:
  %lhs = alloca %union.tree_node*, align 8
  %lvalue = alloca %union.tree_node*, align 8
  %post = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !4784, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !4785, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !4786, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !4787, metadata !DIExpression()), !dbg !4799
  %0 = bitcast %union.tree_node** %lhs to i8*, !dbg !4800
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4800
  %1 = bitcast %union.tree_node** %lvalue to i8*, !dbg !4800
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4800
  %2 = bitcast %struct.gimple_seq_d** %post to i8*, !dbg !4801
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4801
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4793, metadata !DIExpression()), !dbg !4799
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %post, align 8, !dbg !4802
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !4794, metadata !DIExpression()), !dbg !4799
  %3 = bitcast %union.tree_node** %expr_p to i64**, !dbg !4803
  %4 = load i64*, i64** %3, align 8, !dbg !4803
  %bf.load = load i64, i64* %4, align 8, !dbg !4803
  %bf.cast = and i64 %bf.load, 65535, !dbg !4803
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4803
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4803
  %cmp = icmp ugt i32 %5, 3, !dbg !4803
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !4803

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %5, 11, !dbg !4803
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !4803

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %4, i64 3, !dbg !4803
  %6 = bitcast i64* %locus to i32*, !dbg !4803
  %7 = load i32, i32* %6, align 8, !dbg !4803
  br label %cond.end, !dbg !4803

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !4803
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4798, metadata !DIExpression()), !dbg !4799
  %8 = trunc i64 %bf.load to i32, !dbg !4804
  %bf.cast11 = and i32 %8, 65535, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %bf.cast11, metadata !4788, metadata !DIExpression()), !dbg !4799
  %bf.cast11.off = add nsw i32 %bf.cast11, -125, !dbg !4805
  %switch = icmp ult i32 %bf.cast11.off, 4, !dbg !4805
  br i1 %switch, label %cond.end20, label %cond.true18, !dbg !4805

cond.true18:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2087, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4805
  br label %cond.end20, !dbg !4805

cond.end20:                                       ; preds = %cond.end, %cond.true18
  %bf.cast11.off1 = add nsw i32 %bf.cast11, -127, !dbg !4806
  %switch2 = icmp ugt i32 %bf.cast11.off1, 1, !dbg !4806
  %tobool7 = icmp eq i8 %want_value, 0, !dbg !4808
  %tobool = or i1 %tobool7, %switch2, !dbg !4808
  %spec.select = select i1 %tobool, %struct.gimple_seq_d** %post_p, %struct.gimple_seq_d** %post, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %spec.select, metadata !4786, metadata !DIExpression()), !dbg !4799
  %trunc = trunc i64 %bf.load to i16, !dbg !4811
  switch i16 %trunc, label %if.else31 [
    i16 126, label %if.end32
    i16 128, label %if.end32
  ], !dbg !4811

if.else31:                                        ; preds = %cond.end20
  call void @llvm.dbg.value(metadata i32 64, metadata !4796, metadata !DIExpression()), !dbg !4799
  br label %if.end32

if.end32:                                         ; preds = %cond.end20, %cond.end20, %if.else31
  %arith_code.0 = phi i32 [ 64, %if.else31 ], [ 63, %cond.end20 ], [ 63, %cond.end20 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %arith_code.0, metadata !4796, metadata !DIExpression()), !dbg !4799
  %9 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !4814
  %10 = load %struct.tree_exp*, %struct.tree_exp** %9, align 8, !dbg !4814
  %arrayidx34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 0, !dbg !4814
  %11 = bitcast %union.tree_node** %arrayidx34 to i64*, !dbg !4814
  %12 = load i64, i64* %11, align 8, !dbg !4814
  %13 = bitcast %union.tree_node** %lvalue to i64*, !dbg !4815
  store i64 %12, i64* %13, align 8, !dbg !4815
  call void @llvm.dbg.value(metadata %union.tree_node** %lvalue, metadata !4790, metadata !DIExpression(DW_OP_deref)), !dbg !4799
  %call = call i32 @gimplify_expr(%union.tree_node** nonnull %lvalue, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %spec.select, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %call, metadata !4797, metadata !DIExpression()), !dbg !4799
  %cmp35 = icmp eq i32 %call, -2, !dbg !4817
  br i1 %cmp35, label %cleanup, label %if.end37, !dbg !4819

if.end37:                                         ; preds = %if.end32
  %14 = load i64, i64* %13, align 8, !dbg !4820
  %15 = bitcast %union.tree_node** %lhs to i64*, !dbg !4821
  store i64 %14, i64* %15, align 8, !dbg !4821
  %16 = load %struct.tree_exp*, %struct.tree_exp** %9, align 8, !dbg !4822
  %arrayidx40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %16, i64 0, i32 3, i64 1, !dbg !4822
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx40, align 8, !dbg !4822
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4791, metadata !DIExpression()), !dbg !4799
  %18 = inttoptr i64 %14 to %struct.tree_common*, !dbg !4823
  br i1 %tobool, label %if.end37.if.end54_crit_edge, label %if.then42, !dbg !4823

if.end37.if.end54_crit_edge:                      ; preds = %if.end37
  br label %if.end54, !dbg !4823

if.then42:                                        ; preds = %if.end37
  %19 = inttoptr i64 %14 to %union.tree_node*, !dbg !4823
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !4790, metadata !DIExpression()), !dbg !4799
  %call43 = call zeroext i8 @is_gimple_min_lval(%union.tree_node* %19) #6, !dbg !4824
  %tobool44 = icmp eq i8 %call43, 0, !dbg !4824
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !4828

if.then45:                                        ; preds = %if.then42
  %20 = load %union.tree_node*, %union.tree_node** %lvalue, align 8, !dbg !4829
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !4790, metadata !DIExpression()), !dbg !4799
  call void @mark_addressable(%union.tree_node* %20) #7, !dbg !4831
  %21 = load i32, i32* @input_location, align 4, !dbg !4832
  %22 = load %union.tree_node*, %union.tree_node** %lvalue, align 8, !dbg !4833
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !4790, metadata !DIExpression()), !dbg !4799
  %call46 = call %union.tree_node* @build_fold_addr_expr_loc(i32 %21, %union.tree_node* %22) #6, !dbg !4834
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !4790, metadata !DIExpression()), !dbg !4799
  store %union.tree_node* %call46, %union.tree_node** %lvalue, align 8, !dbg !4835
  call void @llvm.dbg.value(metadata %union.tree_node** %lvalue, metadata !4790, metadata !DIExpression(DW_OP_deref)), !dbg !4799
  %call47 = call i32 @gimplify_expr(%union.tree_node** nonnull %lvalue, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %spec.select, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4836
  %23 = load i32, i32* @input_location, align 4, !dbg !4837
  %24 = load %union.tree_node*, %union.tree_node** %lvalue, align 8, !dbg !4838
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !4790, metadata !DIExpression()), !dbg !4799
  %call48 = call %union.tree_node* @build_fold_indirect_ref_loc(i32 %23, %union.tree_node* %24) #6, !dbg !4839
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !4790, metadata !DIExpression()), !dbg !4799
  store %union.tree_node* %call48, %union.tree_node** %lvalue, align 8, !dbg !4840
  br label %if.end49, !dbg !4841

if.end49:                                         ; preds = %if.then42, %if.then45
  call void @llvm.dbg.value(metadata %union.tree_node** %lhs, metadata !4789, metadata !DIExpression(DW_OP_deref)), !dbg !4799
  %call50 = call i32 @gimplify_expr(%union.tree_node** nonnull %lhs, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %spec.select, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %call50, metadata !4797, metadata !DIExpression()), !dbg !4799
  %cmp51 = icmp eq i32 %call50, -2, !dbg !4843
  br i1 %cmp51, label %cleanup, label %if.end49.if.end54_crit_edge, !dbg !4845

if.end49.if.end54_crit_edge:                      ; preds = %if.end49
  %.phi.trans.insert = bitcast %union.tree_node** %lhs to %struct.tree_common**, !dbg !4846
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !4848
  br label %if.end54, !dbg !4845

if.end54:                                         ; preds = %if.end37.if.end54_crit_edge, %if.end49.if.end54_crit_edge
  %25 = phi %struct.tree_common* [ %.pre, %if.end49.if.end54_crit_edge ], [ %18, %if.end37.if.end54_crit_edge ]
  %26 = phi %struct.tree_common* [ %.pre, %if.end49.if.end54_crit_edge ], [ %18, %if.end37.if.end54_crit_edge ], !dbg !4848
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 2, !dbg !4848
  %27 = bitcast %union.tree_node** %type to i64**, !dbg !4848
  %28 = load i64*, i64** %27, align 8, !dbg !4848
  %bf.load56 = load i64, i64* %28, align 8, !dbg !4848
  %bf.cast584 = and i64 %bf.load56, 65535, !dbg !4848
  %cmp59 = icmp eq i64 %bf.cast584, 10, !dbg !4848
  br i1 %cmp59, label %if.then68, label %lor.lhs.false60, !dbg !4848

lor.lhs.false60:                                  ; preds = %if.end54
  %type62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i64 0, i32 2, !dbg !4848
  %29 = bitcast %union.tree_node** %type62 to i64**, !dbg !4848
  %30 = load i64*, i64** %29, align 8, !dbg !4848
  %bf.load64 = load i64, i64* %30, align 8, !dbg !4848
  %bf.cast665 = and i64 %bf.load64, 65535, !dbg !4848
  %cmp67 = icmp eq i64 %bf.cast665, 12, !dbg !4848
  br i1 %cmp67, label %if.then68, label %if.end76, !dbg !4849

if.then68:                                        ; preds = %lor.lhs.false60, %if.end54
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4850
  %call69 = call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %31, %union.tree_node* %17) #6, !dbg !4852
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !4791, metadata !DIExpression()), !dbg !4799
  %cmp70 = icmp eq i32 %arith_code.0, 64, !dbg !4853
  br i1 %cmp70, label %if.then71, label %if.end76, !dbg !4855

if.then71:                                        ; preds = %if.then68
  %type73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4856
  %32 = load %union.tree_node*, %union.tree_node** %type73, align 8, !dbg !4856
  %call74 = call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 79, %union.tree_node* %32, %union.tree_node* %call69) #6, !dbg !4856
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !4791, metadata !DIExpression()), !dbg !4799
  br label %if.end76, !dbg !4857

if.end76:                                         ; preds = %if.then68, %if.then71, %lor.lhs.false60
  %rhs.1 = phi %union.tree_node* [ %17, %lor.lhs.false60 ], [ %call74, %if.then71 ], [ %call69, %if.then68 ], !dbg !4799
  %arith_code.1 = phi i32 [ %arith_code.0, %lor.lhs.false60 ], [ 66, %if.then71 ], [ 66, %if.then68 ], !dbg !4799
  call void @llvm.dbg.value(metadata i32 %arith_code.1, metadata !4796, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.1, metadata !4791, metadata !DIExpression()), !dbg !4799
  %33 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !4858
  %34 = load %struct.tree_common*, %struct.tree_common** %33, align 8, !dbg !4858
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !4858
  %35 = load %union.tree_node*, %union.tree_node** %type78, align 8, !dbg !4858
  %36 = load %union.tree_node*, %union.tree_node** %lhs, align 8, !dbg !4858
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !4789, metadata !DIExpression()), !dbg !4799
  %call79 = call %union.tree_node* @build2_stat(i32 %arith_code.1, %union.tree_node* %35, %union.tree_node* %36, %union.tree_node* %rhs.1) #6, !dbg !4858
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !4792, metadata !DIExpression()), !dbg !4799
  %37 = load %union.tree_node*, %union.tree_node** %lvalue, align 8, !dbg !4859
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !4790, metadata !DIExpression()), !dbg !4799
  br i1 %tobool, label %if.else83, label %if.then81, !dbg !4861

if.then81:                                        ; preds = %if.end76
  %call82 = call %union.gimple_statement_d* @gimplify_assign(%union.tree_node* %37, %union.tree_node* %call79, %struct.gimple_seq_d** %post_p) #6, !dbg !4862
  %38 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %post, align 8, !dbg !4864
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %38, metadata !4793, metadata !DIExpression()), !dbg !4799
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %post_p, %struct.gimple_seq_d* %38) #7, !dbg !4865
  %39 = load i64, i64* %15, align 8, !dbg !4866
  %40 = bitcast %union.tree_node** %expr_p to i64*, !dbg !4867
  store i64 %39, i64* %40, align 8, !dbg !4867
  br label %cleanup, !dbg !4868

if.else83:                                        ; preds = %if.end76
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4869
  %41 = load %union.tree_node*, %union.tree_node** %type85, align 8, !dbg !4869
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !4790, metadata !DIExpression()), !dbg !4799
  %call86 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %41, %union.tree_node* %37, %union.tree_node* %call79) #6, !dbg !4869
  store %union.tree_node* %call86, %union.tree_node** %expr_p, align 8, !dbg !4871
  br label %cleanup, !dbg !4872

cleanup:                                          ; preds = %if.end49, %if.end32, %if.else83, %if.then81
  %retval.0 = phi i32 [ 1, %if.then81 ], [ 0, %if.else83 ], [ -2, %if.end32 ], [ -2, %if.end49 ], !dbg !4799
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4873
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4873
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4873
  ret i32 %retval.0, !dbg !4873
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_compound_lval(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i32 %fallback) unnamed_addr #5 !dbg !4874 {
entry:
  %stack = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !4878, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !4879, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !4880, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %fallback, metadata !4881, metadata !DIExpression()), !dbg !4917
  %0 = bitcast %struct.VEC_tree_heap** %stack to i8*, !dbg !4918
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4918
  call void @llvm.dbg.value(metadata i32 0, metadata !4884, metadata !DIExpression()), !dbg !4917
  %1 = bitcast %union.tree_node** %expr_p to i64**, !dbg !4919
  %2 = load i64*, i64** %1, align 8, !dbg !4919
  %bf.load = load i64, i64* %2, align 8, !dbg !4919
  %bf.cast = and i64 %bf.load, 65535, !dbg !4919
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4919
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4919
  %cmp = icmp ugt i32 %3, 3, !dbg !4919
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !4919

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %3, 11, !dbg !4919
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !4919

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %2, i64 3, !dbg !4919
  %4 = bitcast i64* %locus to i32*, !dbg !4919
  %5 = load i32, i32* %4, align 8, !dbg !4919
  br label %cond.end, !dbg !4919

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !4919
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4887, metadata !DIExpression()), !dbg !4917
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 10) #7, !dbg !4920
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !4883, metadata !DIExpression()), !dbg !4917
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %stack, align 8, !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !4882, metadata !DIExpression()), !dbg !4917
  br label %for.cond, !dbg !4922

for.cond:                                         ; preds = %if.end31, %cond.end
  %p.0 = phi %union.tree_node** [ %expr_p, %cond.end ], [ %arrayidx34, %if.end31 ], !dbg !4923
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !4882, metadata !DIExpression()), !dbg !4917
  %6 = bitcast %union.tree_node** %p.0 to i64**, !dbg !4924
  br label %restart, !dbg !4926

restart:                                          ; preds = %land.lhs.true26, %for.cond
  call void @llvm.dbg.label(metadata !4913), !dbg !4927
  %7 = load i64*, i64** %6, align 8, !dbg !4928
  %bf.load9 = load i64, i64* %7, align 8, !dbg !4928
  %bf.cast111 = and i64 %bf.load9, 65535, !dbg !4929
  %cmp12 = icmp eq i64 %bf.cast111, 47, !dbg !4929
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !4930
  br i1 %cmp12, label %if.then, label %if.end, !dbg !4930

if.then:                                          ; preds = %restart
  %call13 = call %union.tree_node* @fold_indirect_ref_loc(i32 %cond, %union.tree_node* %8) #6, !dbg !4931
  store %union.tree_node* %call13, %union.tree_node** %p.0, align 8, !dbg !4932
  br label %if.end, !dbg !4933

if.end:                                           ; preds = %if.then, %restart
  %9 = phi %union.tree_node* [ %call13, %if.then ], [ %8, %restart ], !dbg !4934
  %call14 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %9) #7, !dbg !4936
  %tobool = icmp eq i8 %call14, 0, !dbg !4936
  %10 = load %union.tree_node*, %union.tree_node** %p.0, align 8, !dbg !4937
  br i1 %tobool, label %if.else, label %if.end31, !dbg !4938

if.else:                                          ; preds = %if.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4939
  %bf.load17 = load i64, i64* %11, align 8, !dbg !4939
  %bf.cast192 = and i64 %bf.load17, 65533, !dbg !4941
  %12 = or i64 %bf.cast192, 2, !dbg !4942
  %13 = icmp eq i64 %12, 34, !dbg !4942
  br i1 %13, label %land.lhs.true26, label %for.end, !dbg !4942

land.lhs.true26:                                  ; preds = %if.else
  %call27 = call fastcc i32 @gimplify_var_or_parm_decl(%union.tree_node** %p.0) #7, !dbg !4943
  %cmp28 = icmp eq i32 %call27, 0, !dbg !4944
  br i1 %cmp28, label %restart, label %for.end, !dbg !4945

if.end31:                                         ; preds = %if.end
  %.lcssa = phi %union.tree_node* [ %10, %if.end ], !dbg !4937
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %stack, metadata !4883, metadata !DIExpression(DW_OP_deref)), !dbg !4917
  %call32 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %stack, %union.tree_node* %.lcssa) #7, !dbg !4946
  %14 = bitcast %union.tree_node** %p.0 to %struct.tree_exp**, !dbg !4947
  %15 = load %struct.tree_exp*, %struct.tree_exp** %14, align 8, !dbg !4947
  %arrayidx34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %15, i64 0, i32 3, i64 0, !dbg !4947
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx34, metadata !4882, metadata !DIExpression()), !dbg !4917
  br label %for.cond, !dbg !4948, !llvm.loop !4949

for.end:                                          ; preds = %if.else, %land.lhs.true26
  %p.0.lcssa = phi %union.tree_node** [ %p.0, %if.else ], [ %p.0, %land.lhs.true26 ], !dbg !4923
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !4882, metadata !DIExpression()), !dbg !4917
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %stack, align 8, !dbg !4952
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !4883, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !4883, metadata !DIExpression()), !dbg !4917
  %base37 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !4952
  %call41 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base37) #7, !dbg !4952
  %tobool42 = icmp eq i32 %call41, 0, !dbg !4952
  br i1 %tobool42, label %cond.true43, label %cond.end45, !dbg !4952

cond.true43:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1925, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4952
  br label %cond.end45, !dbg !4952

cond.end45:                                       ; preds = %for.end, %cond.true43
  %17 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %stack, align 8, !dbg !4953
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !4883, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !4883, metadata !DIExpression()), !dbg !4917
  %base49 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %17, i64 0, i32 0, !dbg !4953
  %call53 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base49) #7, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %call53, metadata !4886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4917
  br label %for.cond54, !dbg !4954

for.cond54:                                       ; preds = %for.inc177, %cond.end45
  %ret.0 = phi i32 [ 0, %cond.end45 ], [ %ret.8, %for.inc177 ], !dbg !4955
  %i.0.in = phi i32 [ %call53, %cond.end45 ], [ %i.0, %for.inc177 ]
  %i.0 = add i32 %i.0.in, -1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4886, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !4884, metadata !DIExpression()), !dbg !4917
  %cmp55 = icmp sgt i32 %i.0, -1, !dbg !4957
  br i1 %cmp55, label %for.body, label %for.end178, !dbg !4958

for.body:                                         ; preds = %for.cond54
  %18 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %stack, align 8, !dbg !4959
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %18, metadata !4883, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %18, metadata !4883, metadata !DIExpression()), !dbg !4917
  %base58 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %18, i64 0, i32 0, !dbg !4959
  %call62 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base58, i32 %i.0) #7, !dbg !4959
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !4888, metadata !DIExpression()), !dbg !4960
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4961
  %bf.load64 = load i64, i64* %19, align 8, !dbg !4961
  %bf.cast668 = and i64 %bf.load64, 65535, !dbg !4962
  %cmp67 = icmp eq i64 %bf.cast668, 45, !dbg !4962
  br i1 %cmp67, label %if.then74, label %lor.lhs.false68, !dbg !4963

lor.lhs.false68:                                  ; preds = %for.body
  %cmp73 = icmp eq i64 %bf.cast668, 46, !dbg !4964
  br i1 %cmp73, label %if.then74, label %if.else132, !dbg !4965

if.then74:                                        ; preds = %lor.lhs.false68, %for.body
  %operands76 = getelementptr inbounds %union.tree_node, %union.tree_node* %call62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4966
  %arrayidx77 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands76, i64 2, !dbg !4966
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx77, align 8, !dbg !4966
  %cmp78 = icmp eq %union.tree_node* %20, null, !dbg !4967
  br i1 %cmp78, label %if.then79, label %if.end98, !dbg !4968

if.then79:                                        ; preds = %if.then74
  %call80 = call %union.tree_node* @array_ref_low_bound(%union.tree_node* %call62) #6, !dbg !4969
  %call81 = call %union.tree_node* @unshare_expr(%union.tree_node* %call80) #7, !dbg !4970
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !4892, metadata !DIExpression()), !dbg !4971
  %call82 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call81) #6, !dbg !4972
  %tobool83 = icmp eq i8 %call82, 0, !dbg !4972
  br i1 %tobool83, label %if.then84, label %if.end98, !dbg !4974

if.then84:                                        ; preds = %if.then79
  store %union.tree_node* %call81, %union.tree_node** %arrayidx77, align 8, !dbg !4975
  %call91 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx77, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_reg, i32 1) #7, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %call91, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp92 = icmp slt i32 %ret.0, %call91, !dbg !4978
  %ret.0.call91 = select i1 %cmp92, i32 %ret.0, i32 %call91, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %ret.0.call91, metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %if.end98, !dbg !4979

if.end98:                                         ; preds = %if.then79, %if.then84, %if.then74
  %ret.2 = phi i32 [ %ret.0, %if.then74 ], [ %ret.0, %if.then79 ], [ %ret.0.call91, %if.then84 ], !dbg !4955
  call void @llvm.dbg.value(metadata i32 %ret.2, metadata !4884, metadata !DIExpression()), !dbg !4917
  %arrayidx101 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands76, i64 3, !dbg !4980
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx101, align 8, !dbg !4980
  %tobool102 = icmp eq %union.tree_node* %21, null, !dbg !4980
  br i1 %tobool102, label %if.then103, label %for.inc177, !dbg !4981

if.then103:                                       ; preds = %if.end98
  %22 = bitcast %union.tree_node** %operands76 to %struct.tree_common**, !dbg !4982
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !4982
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !4982
  %24 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4982
  %25 = load %struct.tree_common*, %struct.tree_common** %24, align 8, !dbg !4982
  %type108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i64 0, i32 2, !dbg !4982
  %26 = bitcast %union.tree_node** %type108 to %struct.tree_type**, !dbg !4982
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !4982
  %call109 = call %union.tree_node* @array_ref_element_size(%union.tree_node* %call62) #6, !dbg !4983
  %call110 = call %union.tree_node* @unshare_expr(%union.tree_node* %call109) #7, !dbg !4984
  call void @llvm.dbg.value(metadata %union.tree_node* %call110, metadata !4900, metadata !DIExpression()), !dbg !4985
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 7, !dbg !4986
  %28 = load i32, i32* %align, align 8, !dbg !4986
  %div = lshr i32 %28, 3, !dbg !4986
  %conv = zext i32 %div to i64, !dbg !4986
  %call112 = call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #6, !dbg !4986
  call void @llvm.dbg.value(metadata %union.tree_node* %call112, metadata !4901, metadata !DIExpression()), !dbg !4985
  %call113 = call %union.tree_node* @size_binop_loc(i32 %cond, i32 76, %union.tree_node* %call110, %union.tree_node* %call112) #6, !dbg !4987
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !4900, metadata !DIExpression()), !dbg !4985
  %call114 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call113) #6, !dbg !4988
  %tobool115 = icmp eq i8 %call114, 0, !dbg !4988
  br i1 %tobool115, label %if.then116, label %for.inc177, !dbg !4990

if.then116:                                       ; preds = %if.then103
  store %union.tree_node* %call113, %union.tree_node** %arrayidx101, align 8, !dbg !4991
  %call123 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx101, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_reg, i32 1) #7, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %call123, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp124 = icmp slt i32 %ret.2, %call123, !dbg !4994
  %ret.2.call123 = select i1 %cmp124, i32 %ret.2, i32 %call123, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %ret.2.call123, metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %for.inc177, !dbg !4995

if.else132:                                       ; preds = %lor.lhs.false68
  %cmp137 = icmp eq i64 %bf.cast668, 41, !dbg !4996
  br i1 %cmp137, label %if.then139, label %for.inc177, !dbg !4997

if.then139:                                       ; preds = %if.else132
  %operands141 = getelementptr inbounds %union.tree_node, %union.tree_node* %call62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4998
  %arrayidx142 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands141, i64 2, !dbg !4998
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx142, align 8, !dbg !4998
  %tobool143 = icmp eq %union.tree_node* %29, null, !dbg !4998
  br i1 %tobool143, label %if.then144, label %for.inc177, !dbg !4999

if.then144:                                       ; preds = %if.then139
  %call145 = call %union.tree_node* @component_ref_field_offset(%union.tree_node* %call62) #6, !dbg !5000
  %call146 = call %union.tree_node* @unshare_expr(%union.tree_node* %call145) #7, !dbg !5001
  call void @llvm.dbg.value(metadata %union.tree_node* %call146, metadata !4902, metadata !DIExpression()), !dbg !5002
  %arrayidx149 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands141, i64 1, !dbg !5003
  %30 = bitcast %union.tree_node** %arrayidx149 to %struct.tree_decl_common**, !dbg !5003
  %31 = load %struct.tree_decl_common*, %struct.tree_decl_common** %30, align 8, !dbg !5003
  %off_align = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %31, i64 0, i32 2, !dbg !5004
  %32 = bitcast i40* %off_align to i64*, !dbg !5004
  %bf.load151 = load i64, i64* %32, align 8, !dbg !5004
  %bf.lshr = lshr i64 %bf.load151, 32, !dbg !5004
  %bf.cast153 = and i64 %bf.lshr, 255, !dbg !5004
  %shl = shl i64 1, %bf.cast153, !dbg !5004
  %div154 = lshr i64 %shl, 3, !dbg !5004
  %call155 = call %union.tree_node* @size_int_kind(i64 %div154, i32 0) #6, !dbg !5004
  call void @llvm.dbg.value(metadata %union.tree_node* %call155, metadata !4908, metadata !DIExpression()), !dbg !5002
  %call156 = call %union.tree_node* @size_binop_loc(i32 %cond, i32 76, %union.tree_node* %call146, %union.tree_node* %call155) #6, !dbg !5005
  call void @llvm.dbg.value(metadata %union.tree_node* %call156, metadata !4902, metadata !DIExpression()), !dbg !5002
  %call157 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call156) #6, !dbg !5006
  %tobool158 = icmp eq i8 %call157, 0, !dbg !5006
  br i1 %tobool158, label %if.then159, label %for.inc177, !dbg !5008

if.then159:                                       ; preds = %if.then144
  store %union.tree_node* %call156, %union.tree_node** %arrayidx142, align 8, !dbg !5009
  %call166 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx142, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_reg, i32 1) #7, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %call166, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp167 = icmp slt i32 %ret.0, %call166, !dbg !5012
  %ret.0.call166 = select i1 %cmp167, i32 %ret.0, i32 %call166, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %ret.0.call166, metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %for.inc177, !dbg !5013

for.inc177:                                       ; preds = %if.then103, %if.end98, %if.then144, %if.then139, %if.then116, %if.then159, %if.else132
  %ret.8 = phi i32 [ %ret.2, %if.end98 ], [ %ret.2, %if.then103 ], [ %ret.2.call123, %if.then116 ], [ %ret.0, %if.else132 ], [ %ret.0, %if.then139 ], [ %ret.0, %if.then144 ], [ %ret.0.call166, %if.then159 ], !dbg !4955
  call void @llvm.dbg.value(metadata i32 %ret.8, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4917
  br label %for.cond54, !dbg !5014, !llvm.loop !5015

for.end178:                                       ; preds = %for.cond54
  %ret.0.lcssa = phi i32 [ %ret.0, %for.cond54 ], !dbg !4955
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  %or = or i32 %fallback, 2, !dbg !5017
  %call179 = call i32 @gimplify_expr(%union.tree_node** %p.0.lcssa, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_min_lval, i32 %or) #7, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %call179, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp180 = icmp slt i32 %ret.0.lcssa, %call179, !dbg !5019
  %ret.0.call179 = select i1 %cmp180, i32 %ret.0.lcssa, i32 %call179, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %ret.0.call179, metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %for.cond186, !dbg !5020

for.cond186:                                      ; preds = %if.end265, %for.end178
  %ret.9 = phi i32 [ %ret.0.call179, %for.end178 ], [ %ret.12, %if.end265 ], !dbg !5021
  call void @llvm.dbg.value(metadata i32 %ret.9, metadata !4884, metadata !DIExpression()), !dbg !4917
  %33 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %stack, align 8, !dbg !5022
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !4883, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !4883, metadata !DIExpression()), !dbg !4917
  %base189 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %33, i64 0, i32 0, !dbg !5022
  %call193 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base189) #7, !dbg !5022
  %cmp194 = icmp eq i32 %call193, 0, !dbg !5023
  br i1 %cmp194, label %for.end273, label %for.body196, !dbg !5024

for.body196:                                      ; preds = %for.cond186
  %34 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %stack, align 8, !dbg !5025
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %34, metadata !4883, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %34, metadata !4883, metadata !DIExpression()), !dbg !4917
  %base200 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %34, i64 0, i32 0, !dbg !5025
  %call204 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base200) #7, !dbg !5025
  call void @llvm.dbg.value(metadata %union.tree_node* %call204, metadata !4909, metadata !DIExpression()), !dbg !5026
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5027
  %bf.load206 = load i64, i64* %35, align 8, !dbg !5027
  %bf.cast2085 = and i64 %bf.load206, 65535, !dbg !5029
  %cmp209 = icmp eq i64 %bf.cast2085, 45, !dbg !5029
  br i1 %cmp209, label %if.then218, label %lor.lhs.false211, !dbg !5030

lor.lhs.false211:                                 ; preds = %for.body196
  %cmp216 = icmp eq i64 %bf.cast2085, 46, !dbg !5031
  br i1 %cmp216, label %if.then218, label %if.else236, !dbg !5032

if.then218:                                       ; preds = %lor.lhs.false211, %for.body196
  %operands220 = getelementptr inbounds %union.tree_node, %union.tree_node* %call204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5033
  %arrayidx221 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands220, i64 1, !dbg !5033
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx221, align 8, !dbg !5033
  %call222 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %36) #6, !dbg !5036
  %tobool223 = icmp eq i8 %call222, 0, !dbg !5036
  br i1 %tobool223, label %if.then224, label %if.end265, !dbg !5037

if.then224:                                       ; preds = %if.then218
  %call228 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx221, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %call228, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp229 = icmp slt i32 %ret.9, %call228, !dbg !5040
  %ret.9.call228 = select i1 %cmp229, i32 %ret.9, i32 %call228, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %ret.9.call228, metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %if.end265, !dbg !5041

if.else236:                                       ; preds = %lor.lhs.false211
  %cmp241 = icmp eq i64 %bf.cast2085, 42, !dbg !5042
  br i1 %cmp241, label %if.then243, label %if.end265, !dbg !5044

if.then243:                                       ; preds = %if.else236
  %operands245 = getelementptr inbounds %union.tree_node, %union.tree_node* %call204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5045
  %arrayidx246 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands245, i64 1, !dbg !5045
  %call247 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx246, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !5047
  call void @llvm.dbg.value(metadata i32 %call247, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp248 = icmp slt i32 %ret.9, %call247, !dbg !5048
  %ret.9.call247 = select i1 %cmp248, i32 %ret.9, i32 %call247, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %ret.9.call247, metadata !4884, metadata !DIExpression()), !dbg !4917
  %arrayidx256 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands245, i64 2, !dbg !5049
  %call257 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx256, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %call257, metadata !4885, metadata !DIExpression()), !dbg !4917
  %cmp258 = icmp slt i32 %ret.9.call247, %call257, !dbg !5051
  %cond263 = select i1 %cmp258, i32 %ret.9.call247, i32 %call257, !dbg !5051
  br label %if.end265, !dbg !5051

if.end265:                                        ; preds = %if.then218, %if.else236, %if.then243, %if.then224
  %ret.12 = phi i32 [ %ret.9, %if.then218 ], [ %ret.9.call228, %if.then224 ], [ %ret.9, %if.else236 ], [ %cond263, %if.then243 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.12, metadata !4884, metadata !DIExpression()), !dbg !4917
  %operands267 = getelementptr inbounds %union.tree_node, %union.tree_node* %call204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5052
  %37 = load %union.tree_node*, %union.tree_node** %operands267, align 8, !dbg !5052
  %call269 = call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %37) #6, !dbg !5052
  store %union.tree_node* %call269, %union.tree_node** %operands267, align 8, !dbg !5052
  call void @recalculate_side_effects(%union.tree_node* %call204) #6, !dbg !5053
  br label %for.cond186, !dbg !5054, !llvm.loop !5055

for.end273:                                       ; preds = %for.cond186
  %ret.9.lcssa = phi i32 [ %ret.9, %for.cond186 ], !dbg !5021
  call void @llvm.dbg.value(metadata i32 %ret.9.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.9.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.9.lcssa, metadata !4884, metadata !DIExpression()), !dbg !4917
  %and = and i32 %fallback, 1, !dbg !5057
  %tobool274 = icmp eq i32 %and, 0, !dbg !5057
  br i1 %tobool274, label %if.end289, label %land.lhs.true275, !dbg !5059

land.lhs.true275:                                 ; preds = %for.end273
  %38 = load i64*, i64** %1, align 8, !dbg !5060
  %bf.load277 = load i64, i64* %38, align 8, !dbg !5060
  %bf.cast2794 = and i64 %bf.load277, 65535, !dbg !5061
  %cmp280 = icmp eq i64 %bf.cast2794, 41, !dbg !5061
  br i1 %cmp280, label %if.then282, label %if.end289, !dbg !5062

if.then282:                                       ; preds = %land.lhs.true275
  call fastcc void @canonicalize_component_ref(%union.tree_node** %expr_p) #7, !dbg !5063
  %cmp283 = icmp slt i32 %ret.9.lcssa, 0, !dbg !5065
  %ret.9. = select i1 %cmp283, i32 %ret.9.lcssa, i32 0, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %ret.9., metadata !4884, metadata !DIExpression()), !dbg !4917
  br label %if.end289, !dbg !5066

if.end289:                                        ; preds = %for.end273, %if.then282, %land.lhs.true275
  %ret.13 = phi i32 [ %ret.9., %if.then282 ], [ %ret.9.lcssa, %land.lhs.true275 ], [ %ret.9.lcssa, %for.end273 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %ret.13, metadata !4884, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %stack, metadata !4883, metadata !DIExpression(DW_OP_deref)), !dbg !4917
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %stack) #7, !dbg !5067
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5068
  ret i32 %ret.13, !dbg !5069
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_cond_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, i32 %fallback) unnamed_addr #5 !dbg !5070 {
entry:
  %expr = alloca %union.tree_node*, align 8
  %arm1 = alloca %union.tree_node*, align 8
  %arm2 = alloca %union.tree_node*, align 8
  %pred_code = alloca i32, align 4
  %seq = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5074, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5075, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i32 %fallback, metadata !5076, metadata !DIExpression()), !dbg !5105
  %0 = bitcast %union.tree_node** %expr to i8*, !dbg !5106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5106
  %1 = bitcast %union.tree_node** %expr_p to i64*, !dbg !5107
  %2 = load i64, i64* %1, align 8, !dbg !5107
  %3 = bitcast %union.tree_node** %expr to i64*, !dbg !5108
  store i64 %2, i64* %3, align 8, !dbg !5108
  %4 = bitcast %union.tree_node** %arm1 to i8*, !dbg !5109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5109
  %5 = bitcast %union.tree_node** %arm2 to i8*, !dbg !5109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !5109
  %6 = bitcast i32* %pred_code to i8*, !dbg !5110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !5110
  %7 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !5111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5111
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !5090, metadata !DIExpression()), !dbg !5105
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %seq, align 8, !dbg !5112
  %8 = inttoptr i64 %2 to i64*, !dbg !5113
  %bf.load = load i64, i64* %8, align 8, !dbg !5113
  %bf.cast = and i64 %bf.load, 65535, !dbg !5113
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5113
  %9 = load i32, i32* %arrayidx, align 4, !dbg !5113
  %cmp = icmp ugt i32 %9, 3, !dbg !5113
  %10 = inttoptr i64 %2 to %struct.tree_exp*, !dbg !5113
  %11 = inttoptr i64 %2 to %struct.tree_common*, !dbg !5113
  %12 = inttoptr i64 %2 to %union.tree_node*, !dbg !5113
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5113

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %9, 11, !dbg !5113
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5113

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 1, !dbg !5113
  %13 = load i32, i32* %locus, align 8, !dbg !5113
  br label %cond.end, !dbg !5113

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5113
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5091, metadata !DIExpression()), !dbg !5105
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !5114
  %14 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5114
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !5079, metadata !DIExpression()), !dbg !5105
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5115
  %bf.load10 = load i64, i64* %15, align 8, !dbg !5115
  %bf.cast123 = and i64 %bf.load10, 65535, !dbg !5115
  %cmp13 = icmp eq i64 %bf.cast123, 19, !dbg !5115
  br i1 %cmp13, label %if.end147, label %if.then, !dbg !5116

if.then:                                          ; preds = %cond.end
  %16 = and i32 %fallback, 3, !dbg !5117
  %17 = icmp eq i32 %16, 2, !dbg !5117
  br i1 %17, label %if.else, label %land.lhs.true16, !dbg !5117

land.lhs.true16:                                  ; preds = %if.then
  %bf.cast204 = and i64 %bf.load10, 262144, !dbg !5118
  %tobool21 = icmp eq i64 %bf.cast204, 0, !dbg !5118
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !5119

if.then22:                                        ; preds = %land.lhs.true16
  %18 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !5120
  %allow_rhs_cond_expr = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %18, i64 0, i32 11, !dbg !5123
  %19 = load i8, i8* %allow_rhs_cond_expr, align 2, !dbg !5123
  %tobool23 = icmp eq i8 %19, 0, !dbg !5120
  br i1 %tobool23, label %if.end, label %land.lhs.true24, !dbg !5124

land.lhs.true24:                                  ; preds = %if.then22
  %20 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5125
  %arrayidx26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 1, !dbg !5125
  %21 = bitcast %union.tree_node** %arrayidx26 to i64**, !dbg !5125
  %22 = load i64*, i64** %21, align 8, !dbg !5125
  %bf.load28 = load i64, i64* %22, align 8, !dbg !5125
  %bf.cast315 = and i64 %bf.load28, 65536, !dbg !5125
  %tobool32 = icmp eq i64 %bf.cast315, 0, !dbg !5125
  br i1 %tobool32, label %land.lhs.true33, label %if.end, !dbg !5126

land.lhs.true33:                                  ; preds = %land.lhs.true24
  %23 = bitcast i64* %22 to %union.tree_node*, !dbg !5126
  %call = tail call fastcc zeroext i8 @generic_expr_could_trap_p(%union.tree_node* %23) #7, !dbg !5127
  %tobool37 = icmp eq i8 %call, 0, !dbg !5127
  br i1 %tobool37, label %land.lhs.true38, label %if.end, !dbg !5128

land.lhs.true38:                                  ; preds = %land.lhs.true33
  %24 = load %struct.tree_exp*, %struct.tree_exp** %20, align 8, !dbg !5129
  %arrayidx41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %24, i64 0, i32 3, i64 2, !dbg !5129
  %25 = bitcast %union.tree_node** %arrayidx41 to i64**, !dbg !5129
  %26 = load i64*, i64** %25, align 8, !dbg !5129
  %bf.load43 = load i64, i64* %26, align 8, !dbg !5129
  %bf.cast466 = and i64 %bf.load43, 65536, !dbg !5129
  %tobool47 = icmp eq i64 %bf.cast466, 0, !dbg !5129
  br i1 %tobool47, label %land.lhs.true48, label %if.end, !dbg !5130

land.lhs.true48:                                  ; preds = %land.lhs.true38
  %27 = bitcast i64* %26 to %union.tree_node*, !dbg !5130
  %call52 = tail call fastcc zeroext i8 @generic_expr_could_trap_p(%union.tree_node* %27) #7, !dbg !5131
  %tobool53 = icmp eq i8 %call52, 0, !dbg !5131
  br i1 %tobool53, label %if.then54, label %if.end, !dbg !5132

if.then54:                                        ; preds = %land.lhs.true48
  %call55 = tail call fastcc i32 @gimplify_pure_cond_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) #7, !dbg !5133
  br label %cleanup609, !dbg !5134

if.end:                                           ; preds = %land.lhs.true48, %land.lhs.true38, %land.lhs.true33, %land.lhs.true24, %if.then22
  %28 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5135
  %call58 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !5136
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !5078, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !5092, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata i32 1, metadata !5082, metadata !DIExpression()), !dbg !5105
  br label %if.end107, !dbg !5138

if.else:                                          ; preds = %land.lhs.true16, %if.then
  %call62 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %14) #6, !dbg !5139
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !5095, metadata !DIExpression()), !dbg !5140
  %arrayidx65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 2, !dbg !5141
  %29 = bitcast %struct.tree_common* %arrayidx65 to %struct.tree_common**, !dbg !5141
  %30 = load %struct.tree_common*, %struct.tree_common** %29, align 8, !dbg !5141
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %30, i64 0, i32 2, !dbg !5141
  %31 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !5141
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5143
  %cmp68 = icmp eq %union.tree_node* %31, %32, !dbg !5144
  br i1 %cmp68, label %if.else.if.end78_crit_edge, label %if.then70, !dbg !5145

if.else.if.end78_crit_edge:                       ; preds = %if.else
  br label %if.end78, !dbg !5145

if.then70:                                        ; preds = %if.else
  %arrayidx73 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 1, !dbg !5146
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx73, align 8, !dbg !5146
  %call74 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %33) #6, !dbg !5147
  store %union.tree_node* %call74, %union.tree_node** %arrayidx73, align 8, !dbg !5148
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5149
  br label %if.end78, !dbg !5151

if.end78:                                         ; preds = %if.else.if.end78_crit_edge, %if.then70
  %34 = phi %union.tree_node* [ %31, %if.else.if.end78_crit_edge ], [ %.pre, %if.then70 ], !dbg !5149
  %arrayidx81 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 2, !dbg !5152
  %35 = bitcast %union.tree_node** %arrayidx81 to %struct.tree_common**, !dbg !5152
  %36 = load %struct.tree_common*, %struct.tree_common** %35, align 8, !dbg !5152
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %36, i64 0, i32 2, !dbg !5152
  %37 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !5152
  %cmp84 = icmp eq %union.tree_node* %37, %34, !dbg !5153
  br i1 %cmp84, label %if.end94, label %if.then86, !dbg !5154

if.then86:                                        ; preds = %if.end78
  %38 = bitcast %struct.tree_common* %36 to %union.tree_node*, !dbg !5154
  %call90 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %38) #6, !dbg !5155
  store %union.tree_node* %call90, %union.tree_node** %arrayidx81, align 8, !dbg !5156
  br label %if.end94, !dbg !5157

if.end94:                                         ; preds = %if.end78, %if.then86
  %call95 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %call62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !5158
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !5078, metadata !DIExpression()), !dbg !5105
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5159
  %arrayidx98 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 0, !dbg !5159
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx98, align 8, !dbg !5159
  %arrayidx101 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 1, !dbg !5159
  %41 = load %union.tree_node*, %union.tree_node** %arrayidx101, align 8, !dbg !5159
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8, !dbg !5159
  %call105 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %39, %union.tree_node* %40, %union.tree_node* %41, %union.tree_node* %42) #6, !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !5077, metadata !DIExpression()), !dbg !5105
  store %union.tree_node* %call105, %union.tree_node** %expr, align 8, !dbg !5160
  %call106 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %cond, %union.tree_node* %call95) #6, !dbg !5161
  call void @llvm.dbg.value(metadata %union.tree_node* %call106, metadata !5092, metadata !DIExpression()), !dbg !5137
  %43 = bitcast %union.tree_node* %call105 to %struct.tree_exp*
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %if.end107

if.end107:                                        ; preds = %if.end94, %if.end
  %45 = phi %struct.tree_common* [ %44, %if.end94 ], [ %11, %if.end ]
  %46 = phi %struct.tree_exp* [ %43, %if.end94 ], [ %10, %if.end ]
  %47 = phi %struct.tree_exp* [ %43, %if.end94 ], [ %10, %if.end ]
  %48 = phi %struct.tree_exp* [ %43, %if.end94 ], [ %10, %if.end ]
  %49 = phi %struct.tree_exp* [ %43, %if.end94 ], [ %10, %if.end ], !dbg !5162
  %tmp.0 = phi %union.tree_node* [ %call95, %if.end94 ], [ %call58, %if.end ], !dbg !5164
  %result.0 = phi %union.tree_node* [ %call106, %if.end94 ], [ %call58, %if.end ], !dbg !5164
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !5092, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.0, metadata !5078, metadata !DIExpression()), !dbg !5105
  %arrayidx110 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %49, i64 0, i32 3, i64 1, !dbg !5162
  %50 = bitcast %union.tree_node** %arrayidx110 to %struct.tree_common**, !dbg !5162
  %51 = load %struct.tree_common*, %struct.tree_common** %50, align 8, !dbg !5162
  %type112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %51, i64 0, i32 2, !dbg !5162
  %52 = load %union.tree_node*, %union.tree_node** %type112, align 8, !dbg !5162
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5165
  %cmp113 = icmp eq %union.tree_node* %52, %53, !dbg !5166
  br i1 %cmp113, label %if.end125, label %if.then115, !dbg !5167

if.then115:                                       ; preds = %if.end107
  %type117 = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5168
  %54 = load %union.tree_node*, %union.tree_node** %type117, align 8, !dbg !5168
  %arrayidx120 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %48, i64 0, i32 3, i64 1, !dbg !5168
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx120, align 8, !dbg !5168
  %call121 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %54, %union.tree_node* %tmp.0, %union.tree_node* %55) #6, !dbg !5168
  store %union.tree_node* %call121, %union.tree_node** %arrayidx120, align 8, !dbg !5169
  %.pre16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5170
  br label %if.end125, !dbg !5172

if.end125:                                        ; preds = %if.end107, %if.then115
  %.in = phi %union.tree_node* [ %53, %if.end107 ], [ %.pre16, %if.then115 ]
  %56 = phi %union.tree_node* [ %52, %if.end107 ], [ %.pre16, %if.then115 ], !dbg !5170
  %57 = ptrtoint %union.tree_node* %.in to i64, !dbg !5137
  %arrayidx128 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %47, i64 0, i32 3, i64 2, !dbg !5173
  %58 = bitcast %union.tree_node** %arrayidx128 to %struct.tree_common**, !dbg !5173
  %59 = load %struct.tree_common*, %struct.tree_common** %58, align 8, !dbg !5173
  %type130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %59, i64 0, i32 2, !dbg !5173
  %60 = load %union.tree_node*, %union.tree_node** %type130, align 8, !dbg !5173
  %cmp131 = icmp eq %union.tree_node* %60, %56, !dbg !5174
  br i1 %cmp131, label %if.end143, label %if.then133, !dbg !5175

if.then133:                                       ; preds = %if.end125
  %type135 = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5176
  %61 = load %union.tree_node*, %union.tree_node** %type135, align 8, !dbg !5176
  %arrayidx138 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %46, i64 0, i32 3, i64 2, !dbg !5176
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx138, align 8, !dbg !5176
  %call139 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %61, %union.tree_node* %tmp.0, %union.tree_node* %62) #6, !dbg !5176
  store %union.tree_node* %call139, %union.tree_node** %arrayidx138, align 8, !dbg !5177
  %.pre17 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !5178
  br label %if.end143, !dbg !5179

if.end143:                                        ; preds = %if.end125, %if.then133
  %63 = phi i64 [ %57, %if.end125 ], [ %.pre17, %if.then133 ], !dbg !5178
  %type145 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %45, i64 0, i32 2, !dbg !5180
  %64 = bitcast %union.tree_node** %type145 to i64*, !dbg !5181
  store i64 %63, i64* %64, align 8, !dbg !5181
  %.cast = bitcast %struct.tree_common* %45 to %union.tree_node*, !dbg !5182
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !5077, metadata !DIExpression()), !dbg !5105
  tail call void @recalculate_side_effects(%union.tree_node* %.cast) #6, !dbg !5183
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5077, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  %call146 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %expr, %struct.gimple_seq_d** %pre_p) #7, !dbg !5184
  store %union.tree_node* %result.0, %union.tree_node** %expr_p, align 8, !dbg !5185
  br label %cleanup609, !dbg !5186

if.end147:                                        ; preds = %cond.end
  %65 = bitcast %union.tree_node** %expr to %struct.tree_exp**, !dbg !5187
  %arrayidx150 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 0, !dbg !5187
  %66 = load %union.tree_node*, %union.tree_node** %arrayidx150, align 8, !dbg !5187
  %call151 = tail call %union.tree_node* @gimple_boolify(%union.tree_node* %66) #7, !dbg !5188
  store %union.tree_node* %call151, %union.tree_node** %arrayidx150, align 8, !dbg !5189
  %.cast7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5190
  %bf.load159 = load i64, i64* %.cast7, align 8, !dbg !5190
  %bf.cast1618 = and i64 %bf.load159, 65535, !dbg !5192
  %cmp162 = icmp eq i64 %bf.cast1618, 91, !dbg !5192
  br i1 %cmp162, label %if.then174, label %lor.lhs.false164, !dbg !5193

lor.lhs.false164:                                 ; preds = %if.end147
  %cmp172 = icmp eq i64 %bf.cast1618, 92, !dbg !5194
  br i1 %cmp172, label %if.then174, label %if.end181, !dbg !5195

if.then174:                                       ; preds = %lor.lhs.false164, %if.end147
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5077, metadata !DIExpression()), !dbg !5105
  %call175 = tail call fastcc %union.tree_node* @shortcut_cond_expr(%union.tree_node* %12) #7, !dbg !5196
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !5077, metadata !DIExpression()), !dbg !5105
  store %union.tree_node* %call175, %union.tree_node** %expr, align 8, !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !5077, metadata !DIExpression()), !dbg !5105
  %67 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5199
  %cmp176 = icmp eq %union.tree_node* %call175, %67, !dbg !5201
  %68 = bitcast %union.tree_node* %call175 to %struct.tree_exp*, !dbg !5202
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5202
  br i1 %cmp176, label %if.end181, label %if.then178, !dbg !5202

if.then178:                                       ; preds = %if.then174
  %70 = ptrtoint %union.tree_node* %call175 to i64, !dbg !5202
  store i64 %70, i64* %1, align 8, !dbg !5203
  tail call fastcc void @gimple_push_condition() #7, !dbg !5205
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  %call179 = call zeroext i8 @gimplify_stmt(%union.tree_node** %expr_p, %struct.gimple_seq_d** nonnull %seq) #7, !dbg !5206
  call fastcc void @gimple_pop_condition(%struct.gimple_seq_d** %pre_p) #7, !dbg !5207
  %71 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5208
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %71, metadata !5090, metadata !DIExpression()), !dbg !5105
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d* %71) #6, !dbg !5209
  br label %cleanup609, !dbg !5210

if.end181:                                        ; preds = %if.then174, %lor.lhs.false164
  %72 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %73 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %74 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %75 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %76 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %77 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %78 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %79 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %80 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %81 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %82 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %83 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %84 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %85 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %86 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %87 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %88 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %89 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %90 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %91 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %92 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %93 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %94 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %95 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %96 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %97 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %98 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %99 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %100 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %101 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %102 = phi i64* [ %69, %if.then174 ], [ %8, %lor.lhs.false164 ]
  %103 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %104 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %105 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %106 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %107 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ]
  %108 = phi %struct.tree_exp* [ %68, %if.then174 ], [ %10, %lor.lhs.false164 ], !dbg !5211
  %arrayidx184 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %108, i64 0, i32 3, i64 0, !dbg !5211
  %call185 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx184, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_condexpr, i32 1) #7, !dbg !5212
  call void @llvm.dbg.value(metadata i32 %call185, metadata !5082, metadata !DIExpression()), !dbg !5105
  %cmp186 = icmp eq i32 %call185, -2, !dbg !5213
  br i1 %cmp186, label %cleanup609, label %if.end189, !dbg !5215

if.end189:                                        ; preds = %if.end181
  %arrayidx192 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %107, i64 0, i32 3, i64 0, !dbg !5216
  %109 = load %union.tree_node*, %union.tree_node** %arrayidx192, align 8, !dbg !5216
  %cmp193 = icmp eq %union.tree_node* %109, null, !dbg !5216
  br i1 %cmp193, label %cond.true195, label %cond.end197, !dbg !5216

cond.true195:                                     ; preds = %if.end189
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2970, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5216
  br label %cond.end197, !dbg !5216

cond.end197:                                      ; preds = %if.end189, %cond.true195
  tail call fastcc void @gimple_push_condition() #7, !dbg !5217
  call void @llvm.dbg.value(metadata i8 0, metadata !5087, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i8 0, metadata !5086, metadata !DIExpression()), !dbg !5105
  %arrayidx201 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %106, i64 0, i32 3, i64 1, !dbg !5218
  %110 = load %union.tree_node*, %union.tree_node** %arrayidx201, align 8, !dbg !5218
  %cmp202 = icmp eq %union.tree_node* %110, null, !dbg !5220
  br i1 %cmp202, label %if.else364, label %land.lhs.true204, !dbg !5221

land.lhs.true204:                                 ; preds = %cond.end197
  %arrayidx207 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %105, i64 0, i32 3, i64 1, !dbg !5222
  %111 = bitcast %union.tree_node** %arrayidx207 to i64**, !dbg !5222
  %112 = load i64*, i64** %111, align 8, !dbg !5222
  %bf.load209 = load i64, i64* %112, align 8, !dbg !5222
  %bf.cast21113 = and i64 %bf.load209, 65535, !dbg !5223
  %cmp212 = icmp eq i64 %bf.cast21113, 134, !dbg !5223
  br i1 %cmp212, label %land.lhs.true214, label %if.else364, !dbg !5224

land.lhs.true214:                                 ; preds = %land.lhs.true204
  %arrayidx217 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %104, i64 0, i32 3, i64 1, !dbg !5225
  %113 = bitcast %union.tree_node** %arrayidx217 to %struct.tree_exp**, !dbg !5225
  %114 = load %struct.tree_exp*, %struct.tree_exp** %113, align 8, !dbg !5225
  %arrayidx220 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %114, i64 0, i32 3, i64 0, !dbg !5225
  %115 = bitcast %union.tree_node** %arrayidx220 to i64**, !dbg !5225
  %116 = load i64*, i64** %115, align 8, !dbg !5225
  %bf.load222 = load i64, i64* %116, align 8, !dbg !5225
  %bf.cast22414 = and i64 %bf.load222, 65535, !dbg !5226
  %cmp225 = icmp eq i64 %bf.cast22414, 30, !dbg !5226
  br i1 %cmp225, label %land.lhs.true227, label %if.else364, !dbg !5227

land.lhs.true227:                                 ; preds = %land.lhs.true214
  %arrayidx230 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %103, i64 0, i32 3, i64 1, !dbg !5228
  %117 = bitcast %union.tree_node** %arrayidx230 to %struct.tree_exp**, !dbg !5228
  %118 = load %struct.tree_exp*, %struct.tree_exp** %117, align 8, !dbg !5228
  %arrayidx233 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %118, i64 0, i32 3, i64 0, !dbg !5228
  %119 = bitcast %union.tree_node** %arrayidx233 to %struct.tree_decl_minimal**, !dbg !5228
  %120 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %119, align 8, !dbg !5228
  %context = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %120, i64 0, i32 4, !dbg !5228
  %121 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5228
  %122 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5229
  %cmp234 = icmp eq %union.tree_node* %121, %122, !dbg !5230
  br i1 %cmp234, label %land.lhs.true236, label %if.else364, !dbg !5231

land.lhs.true236:                                 ; preds = %land.lhs.true227
  %123 = load i32, i32* @optimize, align 4, !dbg !5232
  %tobool237 = icmp eq i32 %123, 0, !dbg !5232
  br i1 %tobool237, label %lor.lhs.false238, label %if.then357, !dbg !5233

lor.lhs.false238:                                 ; preds = %land.lhs.true236
  %bf.load240 = load i64, i64* %102, align 8, !dbg !5234
  %bf.cast242 = and i64 %bf.load240, 65535, !dbg !5234
  %arrayidx244 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast242, !dbg !5234
  %124 = load i32, i32* %arrayidx244, align 4, !dbg !5234
  %cmp245 = icmp ugt i32 %124, 3, !dbg !5234
  br i1 %cmp245, label %land.lhs.true247, label %cond.end260, !dbg !5234

land.lhs.true247:                                 ; preds = %lor.lhs.false238
  %bf.load249 = load i64, i64* %101, align 8, !dbg !5234
  %bf.cast251 = and i64 %bf.load249, 65535, !dbg !5234
  %arrayidx253 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast251, !dbg !5234
  %125 = load i32, i32* %arrayidx253, align 4, !dbg !5234
  %cmp254 = icmp ult i32 %125, 11, !dbg !5234
  br i1 %cmp254, label %cond.true256, label %cond.end260, !dbg !5234

cond.true256:                                     ; preds = %land.lhs.true247
  %locus258 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %100, i64 0, i32 1, !dbg !5234
  %126 = load i32, i32* %locus258, align 8, !dbg !5234
  br label %cond.end260, !dbg !5234

cond.end260:                                      ; preds = %lor.lhs.false238, %land.lhs.true247, %cond.true256
  %cond261 = phi i32 [ %126, %cond.true256 ], [ 0, %land.lhs.true247 ], [ 0, %lor.lhs.false238 ], !dbg !5234
  %cmp262 = icmp eq i32 %cond261, 0, !dbg !5234
  br i1 %cmp262, label %if.then357, label %lor.lhs.false264, !dbg !5235

lor.lhs.false264:                                 ; preds = %cond.end260
  %arrayidx267 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %99, i64 0, i32 3, i64 1, !dbg !5236
  %127 = bitcast %union.tree_node** %arrayidx267 to i64**, !dbg !5236
  %128 = load i64*, i64** %127, align 8, !dbg !5236
  %bf.load269 = load i64, i64* %128, align 8, !dbg !5236
  %bf.cast271 = and i64 %bf.load269, 65535, !dbg !5236
  %arrayidx273 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast271, !dbg !5236
  %129 = load i32, i32* %arrayidx273, align 4, !dbg !5236
  %cmp274 = icmp ugt i32 %129, 3, !dbg !5236
  br i1 %cmp274, label %land.lhs.true276, label %cond.end295, !dbg !5236

land.lhs.true276:                                 ; preds = %lor.lhs.false264
  %arrayidx279 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %98, i64 0, i32 3, i64 1, !dbg !5236
  %130 = bitcast %union.tree_node** %arrayidx279 to i64**, !dbg !5236
  %131 = load i64*, i64** %130, align 8, !dbg !5236
  %bf.load281 = load i64, i64* %131, align 8, !dbg !5236
  %bf.cast283 = and i64 %bf.load281, 65535, !dbg !5236
  %arrayidx285 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast283, !dbg !5236
  %132 = load i32, i32* %arrayidx285, align 4, !dbg !5236
  %cmp286 = icmp ult i32 %132, 11, !dbg !5236
  br i1 %cmp286, label %cond.true288, label %cond.end295, !dbg !5236

cond.true288:                                     ; preds = %land.lhs.true276
  %arrayidx291 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %97, i64 0, i32 3, i64 1, !dbg !5236
  %133 = bitcast %union.tree_node** %arrayidx291 to %struct.tree_exp**, !dbg !5236
  %134 = load %struct.tree_exp*, %struct.tree_exp** %133, align 8, !dbg !5236
  %locus293 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %134, i64 0, i32 1, !dbg !5236
  %135 = load i32, i32* %locus293, align 8, !dbg !5236
  br label %cond.end295, !dbg !5236

cond.end295:                                      ; preds = %lor.lhs.false264, %land.lhs.true276, %cond.true288
  %cond296 = phi i32 [ %135, %cond.true288 ], [ 0, %land.lhs.true276 ], [ 0, %lor.lhs.false264 ], !dbg !5236
  %cmp297 = icmp eq i32 %cond296, 0, !dbg !5236
  br i1 %cmp297, label %if.then357, label %lor.lhs.false299, !dbg !5237

lor.lhs.false299:                                 ; preds = %cond.end295
  %bf.load301 = load i64, i64* %96, align 8, !dbg !5238
  %bf.cast303 = and i64 %bf.load301, 65535, !dbg !5238
  %arrayidx305 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast303, !dbg !5238
  %136 = load i32, i32* %arrayidx305, align 4, !dbg !5238
  %cmp306 = icmp ugt i32 %136, 3, !dbg !5238
  br i1 %cmp306, label %land.lhs.true308, label %cond.end321, !dbg !5238

land.lhs.true308:                                 ; preds = %lor.lhs.false299
  %bf.load310 = load i64, i64* %95, align 8, !dbg !5238
  %bf.cast312 = and i64 %bf.load310, 65535, !dbg !5238
  %arrayidx314 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast312, !dbg !5238
  %137 = load i32, i32* %arrayidx314, align 4, !dbg !5238
  %cmp315 = icmp ult i32 %137, 11, !dbg !5238
  br i1 %cmp315, label %cond.true317, label %cond.end321, !dbg !5238

cond.true317:                                     ; preds = %land.lhs.true308
  %locus319 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %94, i64 0, i32 1, !dbg !5238
  %138 = load i32, i32* %locus319, align 8, !dbg !5238
  br label %cond.end321, !dbg !5238

cond.end321:                                      ; preds = %lor.lhs.false299, %land.lhs.true308, %cond.true317
  %cond322 = phi i32 [ %138, %cond.true317 ], [ 0, %land.lhs.true308 ], [ 0, %lor.lhs.false299 ], !dbg !5238
  %arrayidx325 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %93, i64 0, i32 3, i64 1, !dbg !5239
  %139 = bitcast %union.tree_node** %arrayidx325 to i64**, !dbg !5239
  %140 = load i64*, i64** %139, align 8, !dbg !5239
  %bf.load327 = load i64, i64* %140, align 8, !dbg !5239
  %bf.cast329 = and i64 %bf.load327, 65535, !dbg !5239
  %arrayidx331 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast329, !dbg !5239
  %141 = load i32, i32* %arrayidx331, align 4, !dbg !5239
  %cmp332 = icmp ugt i32 %141, 3, !dbg !5239
  br i1 %cmp332, label %land.lhs.true334, label %cond.end353, !dbg !5239

land.lhs.true334:                                 ; preds = %cond.end321
  %arrayidx337 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %92, i64 0, i32 3, i64 1, !dbg !5239
  %142 = bitcast %union.tree_node** %arrayidx337 to i64**, !dbg !5239
  %143 = load i64*, i64** %142, align 8, !dbg !5239
  %bf.load339 = load i64, i64* %143, align 8, !dbg !5239
  %bf.cast341 = and i64 %bf.load339, 65535, !dbg !5239
  %arrayidx343 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast341, !dbg !5239
  %144 = load i32, i32* %arrayidx343, align 4, !dbg !5239
  %cmp344 = icmp ult i32 %144, 11, !dbg !5239
  br i1 %cmp344, label %cond.true346, label %cond.end353, !dbg !5239

cond.true346:                                     ; preds = %land.lhs.true334
  %arrayidx349 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %91, i64 0, i32 3, i64 1, !dbg !5239
  %145 = bitcast %union.tree_node** %arrayidx349 to %struct.tree_exp**, !dbg !5239
  %146 = load %struct.tree_exp*, %struct.tree_exp** %145, align 8, !dbg !5239
  %locus351 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %146, i64 0, i32 1, !dbg !5239
  %147 = load i32, i32* %locus351, align 8, !dbg !5239
  br label %cond.end353, !dbg !5239

cond.end353:                                      ; preds = %cond.end321, %land.lhs.true334, %cond.true346
  %cond354 = phi i32 [ %147, %cond.true346 ], [ 0, %land.lhs.true334 ], [ 0, %cond.end321 ], !dbg !5239
  %cmp355 = icmp eq i32 %cond322, %cond354, !dbg !5240
  br i1 %cmp355, label %if.then357, label %if.else364, !dbg !5241

if.then357:                                       ; preds = %cond.end295, %cond.end260, %land.lhs.true236, %cond.end353
  %arrayidx360 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %90, i64 0, i32 3, i64 1, !dbg !5242
  %148 = bitcast %union.tree_node** %arrayidx360 to %struct.tree_exp**, !dbg !5242
  %149 = load %struct.tree_exp*, %struct.tree_exp** %148, align 8, !dbg !5242
  %arrayidx363 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %149, i64 0, i32 3, i64 0, !dbg !5242
  %150 = load %union.tree_node*, %union.tree_node** %arrayidx363, align 8, !dbg !5242
  call void @llvm.dbg.value(metadata %union.tree_node* %150, metadata !5083, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i8 1, metadata !5086, metadata !DIExpression()), !dbg !5105
  br label %if.end366, !dbg !5244

if.else364:                                       ; preds = %cond.end197, %cond.end353, %land.lhs.true227, %land.lhs.true214, %land.lhs.true204
  %call365 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !5245
  call void @llvm.dbg.value(metadata %union.tree_node* %call365, metadata !5083, metadata !DIExpression()), !dbg !5105
  br label %if.end366

if.end366:                                        ; preds = %if.else364, %if.then357
  %label_true.0 = phi %union.tree_node* [ %150, %if.then357 ], [ %call365, %if.else364 ], !dbg !5246
  %have_then_clause_p.0 = phi i8 [ 1, %if.then357 ], [ 0, %if.else364 ], !dbg !5105
  call void @llvm.dbg.value(metadata i8 %have_then_clause_p.0, metadata !5086, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %label_true.0, metadata !5083, metadata !DIExpression()), !dbg !5105
  %arrayidx369 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %89, i64 0, i32 3, i64 2, !dbg !5247
  %151 = load %union.tree_node*, %union.tree_node** %arrayidx369, align 8, !dbg !5247
  %cmp370 = icmp eq %union.tree_node* %151, null, !dbg !5249
  br i1 %cmp370, label %if.else534, label %land.lhs.true372, !dbg !5250

land.lhs.true372:                                 ; preds = %if.end366
  %arrayidx375 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %88, i64 0, i32 3, i64 2, !dbg !5251
  %152 = bitcast %union.tree_node** %arrayidx375 to i64**, !dbg !5251
  %153 = load i64*, i64** %152, align 8, !dbg !5251
  %bf.load377 = load i64, i64* %153, align 8, !dbg !5251
  %bf.cast37910 = and i64 %bf.load377, 65535, !dbg !5252
  %cmp380 = icmp eq i64 %bf.cast37910, 134, !dbg !5252
  br i1 %cmp380, label %land.lhs.true382, label %if.else534, !dbg !5253

land.lhs.true382:                                 ; preds = %land.lhs.true372
  %arrayidx385 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %87, i64 0, i32 3, i64 2, !dbg !5254
  %154 = bitcast %union.tree_node** %arrayidx385 to %struct.tree_exp**, !dbg !5254
  %155 = load %struct.tree_exp*, %struct.tree_exp** %154, align 8, !dbg !5254
  %arrayidx388 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %155, i64 0, i32 3, i64 0, !dbg !5254
  %156 = bitcast %union.tree_node** %arrayidx388 to i64**, !dbg !5254
  %157 = load i64*, i64** %156, align 8, !dbg !5254
  %bf.load390 = load i64, i64* %157, align 8, !dbg !5254
  %bf.cast39211 = and i64 %bf.load390, 65535, !dbg !5255
  %cmp393 = icmp eq i64 %bf.cast39211, 30, !dbg !5255
  br i1 %cmp393, label %land.lhs.true395, label %if.else534, !dbg !5256

land.lhs.true395:                                 ; preds = %land.lhs.true382
  %arrayidx398 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %86, i64 0, i32 3, i64 2, !dbg !5257
  %158 = bitcast %union.tree_node** %arrayidx398 to %struct.tree_exp**, !dbg !5257
  %159 = load %struct.tree_exp*, %struct.tree_exp** %158, align 8, !dbg !5257
  %arrayidx401 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %159, i64 0, i32 3, i64 0, !dbg !5257
  %160 = bitcast %union.tree_node** %arrayidx401 to %struct.tree_decl_minimal**, !dbg !5257
  %161 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %160, align 8, !dbg !5257
  %context403 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %161, i64 0, i32 4, !dbg !5257
  %162 = load %union.tree_node*, %union.tree_node** %context403, align 8, !dbg !5257
  %163 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5258
  %cmp404 = icmp eq %union.tree_node* %162, %163, !dbg !5259
  br i1 %cmp404, label %land.lhs.true406, label %if.else534, !dbg !5260

land.lhs.true406:                                 ; preds = %land.lhs.true395
  %164 = load i32, i32* @optimize, align 4, !dbg !5261
  %tobool407 = icmp eq i32 %164, 0, !dbg !5261
  br i1 %tobool407, label %lor.lhs.false408, label %if.then527, !dbg !5262

lor.lhs.false408:                                 ; preds = %land.lhs.true406
  %bf.load410 = load i64, i64* %85, align 8, !dbg !5263
  %bf.cast412 = and i64 %bf.load410, 65535, !dbg !5263
  %arrayidx414 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast412, !dbg !5263
  %165 = load i32, i32* %arrayidx414, align 4, !dbg !5263
  %cmp415 = icmp ugt i32 %165, 3, !dbg !5263
  br i1 %cmp415, label %land.lhs.true417, label %cond.end430, !dbg !5263

land.lhs.true417:                                 ; preds = %lor.lhs.false408
  %bf.load419 = load i64, i64* %84, align 8, !dbg !5263
  %bf.cast421 = and i64 %bf.load419, 65535, !dbg !5263
  %arrayidx423 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast421, !dbg !5263
  %166 = load i32, i32* %arrayidx423, align 4, !dbg !5263
  %cmp424 = icmp ult i32 %166, 11, !dbg !5263
  br i1 %cmp424, label %cond.true426, label %cond.end430, !dbg !5263

cond.true426:                                     ; preds = %land.lhs.true417
  %locus428 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %83, i64 0, i32 1, !dbg !5263
  %167 = load i32, i32* %locus428, align 8, !dbg !5263
  %phitmp = icmp ne i32 %167, 0, !dbg !5263
  br label %cond.end430, !dbg !5263

cond.end430:                                      ; preds = %lor.lhs.false408, %land.lhs.true417, %cond.true426
  %cond431 = phi i1 [ %phitmp, %cond.true426 ], [ false, %land.lhs.true417 ], [ false, %lor.lhs.false408 ]
  br i1 %cond431, label %lor.lhs.false434, label %if.then527, !dbg !5264

lor.lhs.false434:                                 ; preds = %cond.end430
  %arrayidx437 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %82, i64 0, i32 3, i64 2, !dbg !5265
  %168 = bitcast %union.tree_node** %arrayidx437 to i64**, !dbg !5265
  %169 = load i64*, i64** %168, align 8, !dbg !5265
  %bf.load439 = load i64, i64* %169, align 8, !dbg !5265
  %bf.cast441 = and i64 %bf.load439, 65535, !dbg !5265
  %arrayidx443 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast441, !dbg !5265
  %170 = load i32, i32* %arrayidx443, align 4, !dbg !5265
  %cmp444 = icmp ugt i32 %170, 3, !dbg !5265
  br i1 %cmp444, label %land.lhs.true446, label %cond.end465, !dbg !5265

land.lhs.true446:                                 ; preds = %lor.lhs.false434
  %arrayidx449 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %81, i64 0, i32 3, i64 2, !dbg !5265
  %171 = bitcast %union.tree_node** %arrayidx449 to i64**, !dbg !5265
  %172 = load i64*, i64** %171, align 8, !dbg !5265
  %bf.load451 = load i64, i64* %172, align 8, !dbg !5265
  %bf.cast453 = and i64 %bf.load451, 65535, !dbg !5265
  %arrayidx455 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast453, !dbg !5265
  %173 = load i32, i32* %arrayidx455, align 4, !dbg !5265
  %cmp456 = icmp ult i32 %173, 11, !dbg !5265
  br i1 %cmp456, label %cond.true458, label %cond.end465, !dbg !5265

cond.true458:                                     ; preds = %land.lhs.true446
  %arrayidx461 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %80, i64 0, i32 3, i64 2, !dbg !5265
  %174 = bitcast %union.tree_node** %arrayidx461 to %struct.tree_exp**, !dbg !5265
  %175 = load %struct.tree_exp*, %struct.tree_exp** %174, align 8, !dbg !5265
  %locus463 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %175, i64 0, i32 1, !dbg !5265
  %176 = load i32, i32* %locus463, align 8, !dbg !5265
  %phitmp12 = icmp ne i32 %176, 0, !dbg !5265
  br label %cond.end465, !dbg !5265

cond.end465:                                      ; preds = %lor.lhs.false434, %land.lhs.true446, %cond.true458
  %cond466 = phi i1 [ %phitmp12, %cond.true458 ], [ false, %land.lhs.true446 ], [ false, %lor.lhs.false434 ]
  br i1 %cond466, label %lor.lhs.false469, label %if.then527, !dbg !5266

lor.lhs.false469:                                 ; preds = %cond.end465
  %bf.load471 = load i64, i64* %79, align 8, !dbg !5267
  %bf.cast473 = and i64 %bf.load471, 65535, !dbg !5267
  %arrayidx475 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast473, !dbg !5267
  %177 = load i32, i32* %arrayidx475, align 4, !dbg !5267
  %cmp476 = icmp ugt i32 %177, 3, !dbg !5267
  br i1 %cmp476, label %land.lhs.true478, label %cond.end491, !dbg !5267

land.lhs.true478:                                 ; preds = %lor.lhs.false469
  %bf.load480 = load i64, i64* %78, align 8, !dbg !5267
  %bf.cast482 = and i64 %bf.load480, 65535, !dbg !5267
  %arrayidx484 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast482, !dbg !5267
  %178 = load i32, i32* %arrayidx484, align 4, !dbg !5267
  %cmp485 = icmp ult i32 %178, 11, !dbg !5267
  br i1 %cmp485, label %cond.true487, label %cond.end491, !dbg !5267

cond.true487:                                     ; preds = %land.lhs.true478
  %locus489 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %77, i64 0, i32 1, !dbg !5267
  %179 = load i32, i32* %locus489, align 8, !dbg !5267
  br label %cond.end491, !dbg !5267

cond.end491:                                      ; preds = %lor.lhs.false469, %land.lhs.true478, %cond.true487
  %cond492 = phi i32 [ %179, %cond.true487 ], [ 0, %land.lhs.true478 ], [ 0, %lor.lhs.false469 ], !dbg !5267
  %arrayidx495 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %76, i64 0, i32 3, i64 2, !dbg !5268
  %180 = bitcast %union.tree_node** %arrayidx495 to i64**, !dbg !5268
  %181 = load i64*, i64** %180, align 8, !dbg !5268
  %bf.load497 = load i64, i64* %181, align 8, !dbg !5268
  %bf.cast499 = and i64 %bf.load497, 65535, !dbg !5268
  %arrayidx501 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast499, !dbg !5268
  %182 = load i32, i32* %arrayidx501, align 4, !dbg !5268
  %cmp502 = icmp ugt i32 %182, 3, !dbg !5268
  br i1 %cmp502, label %land.lhs.true504, label %cond.end523, !dbg !5268

land.lhs.true504:                                 ; preds = %cond.end491
  %arrayidx507 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %75, i64 0, i32 3, i64 2, !dbg !5268
  %183 = bitcast %union.tree_node** %arrayidx507 to i64**, !dbg !5268
  %184 = load i64*, i64** %183, align 8, !dbg !5268
  %bf.load509 = load i64, i64* %184, align 8, !dbg !5268
  %bf.cast511 = and i64 %bf.load509, 65535, !dbg !5268
  %arrayidx513 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast511, !dbg !5268
  %185 = load i32, i32* %arrayidx513, align 4, !dbg !5268
  %cmp514 = icmp ult i32 %185, 11, !dbg !5268
  br i1 %cmp514, label %cond.true516, label %cond.end523, !dbg !5268

cond.true516:                                     ; preds = %land.lhs.true504
  %arrayidx519 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %74, i64 0, i32 3, i64 2, !dbg !5268
  %186 = bitcast %union.tree_node** %arrayidx519 to %struct.tree_exp**, !dbg !5268
  %187 = load %struct.tree_exp*, %struct.tree_exp** %186, align 8, !dbg !5268
  %locus521 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %187, i64 0, i32 1, !dbg !5268
  %188 = load i32, i32* %locus521, align 8, !dbg !5268
  br label %cond.end523, !dbg !5268

cond.end523:                                      ; preds = %cond.end491, %land.lhs.true504, %cond.true516
  %cond524 = phi i32 [ %188, %cond.true516 ], [ 0, %land.lhs.true504 ], [ 0, %cond.end491 ], !dbg !5268
  %cmp525 = icmp eq i32 %cond492, %cond524, !dbg !5269
  br i1 %cmp525, label %if.then527, label %if.else534, !dbg !5270

if.then527:                                       ; preds = %land.lhs.true406, %cond.end523, %cond.end465, %cond.end430
  %arrayidx530 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %73, i64 0, i32 3, i64 2, !dbg !5271
  %189 = bitcast %union.tree_node** %arrayidx530 to %struct.tree_exp**, !dbg !5271
  %190 = load %struct.tree_exp*, %struct.tree_exp** %189, align 8, !dbg !5271
  %arrayidx533 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %190, i64 0, i32 3, i64 0, !dbg !5271
  %191 = load %union.tree_node*, %union.tree_node** %arrayidx533, align 8, !dbg !5271
  call void @llvm.dbg.value(metadata %union.tree_node* %191, metadata !5084, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i8 1, metadata !5087, metadata !DIExpression()), !dbg !5105
  br label %if.end536, !dbg !5273

if.else534:                                       ; preds = %if.end366, %cond.end523, %land.lhs.true395, %land.lhs.true382, %land.lhs.true372
  %call535 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !5274
  call void @llvm.dbg.value(metadata %union.tree_node* %call535, metadata !5084, metadata !DIExpression()), !dbg !5105
  br label %if.end536

if.end536:                                        ; preds = %if.else534, %if.then527
  %label_false.0 = phi %union.tree_node* [ %191, %if.then527 ], [ %call535, %if.else534 ], !dbg !5275
  %have_else_clause_p.0 = phi i8 [ 1, %if.then527 ], [ 0, %if.else534 ], !dbg !5105
  call void @llvm.dbg.value(metadata i8 %have_else_clause_p.0, metadata !5087, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %label_false.0, metadata !5084, metadata !DIExpression()), !dbg !5105
  %arrayidx539 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %72, i64 0, i32 3, i64 0, !dbg !5276
  %192 = load %union.tree_node*, %union.tree_node** %arrayidx539, align 8, !dbg !5276
  call void @llvm.dbg.value(metadata %union.tree_node** %arm1, metadata !5080, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node** %arm2, metadata !5081, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call void @llvm.dbg.value(metadata i32* %pred_code, metadata !5089, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call void @gimple_cond_get_ops_from_tree(%union.tree_node* %192, i32* nonnull %pred_code, %union.tree_node** nonnull %arm1, %union.tree_node** nonnull %arm2) #6, !dbg !5277
  %193 = load i32, i32* %pred_code, align 4, !dbg !5278
  call void @llvm.dbg.value(metadata i32 %193, metadata !5089, metadata !DIExpression()), !dbg !5105
  %194 = load %union.tree_node*, %union.tree_node** %arm1, align 8, !dbg !5279
  call void @llvm.dbg.value(metadata %union.tree_node* %194, metadata !5080, metadata !DIExpression()), !dbg !5105
  %195 = load %union.tree_node*, %union.tree_node** %arm2, align 8, !dbg !5280
  call void @llvm.dbg.value(metadata %union.tree_node* %195, metadata !5081, metadata !DIExpression()), !dbg !5105
  %call540 = call %union.gimple_statement_d* @gimple_build_cond(i32 %193, %union.tree_node* %194, %union.tree_node* %195, %union.tree_node* %label_true.0, %union.tree_node* %label_false.0) #6, !dbg !5281
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call540, metadata !5088, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call540) #7, !dbg !5282
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5085, metadata !DIExpression()), !dbg !5105
  %tobool541 = icmp eq i8 %have_then_clause_p.0, 0, !dbg !5283
  br i1 %tobool541, label %if.then542, label %if.end579, !dbg !5284

if.then542:                                       ; preds = %if.end536
  %196 = load %struct.tree_exp*, %struct.tree_exp** %65, align 8, !dbg !5285
  %arrayidx545 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %196, i64 0, i32 3, i64 1, !dbg !5285
  %197 = load %union.tree_node*, %union.tree_node** %arrayidx545, align 8, !dbg !5285
  %cmp546 = icmp ne %union.tree_node* %197, null, !dbg !5286
  %tobool549 = icmp ne i8 %have_else_clause_p.0, 0, !dbg !5287
  %or.cond1 = or i1 %cmp546, %tobool549, !dbg !5288
  br i1 %or.cond1, label %if.else557, label %land.lhs.true550, !dbg !5288

land.lhs.true550:                                 ; preds = %if.then542
  %arrayidx553 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %196, i64 0, i32 3, i64 2, !dbg !5289
  %198 = load %union.tree_node*, %union.tree_node** %arrayidx553, align 8, !dbg !5289
  %cmp554 = icmp eq %union.tree_node* %198, null, !dbg !5290
  br i1 %cmp554, label %if.else557, label %if.end579, !dbg !5291

if.else557:                                       ; preds = %land.lhs.true550, %if.then542
  %call558 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %label_true.0) #6, !dbg !5292
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call558) #7, !dbg !5293
  %199 = load %struct.tree_exp*, %struct.tree_exp** %65, align 8, !dbg !5294
  %arrayidx561 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %199, i64 0, i32 3, i64 1, !dbg !5294
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  %call562 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx561, %struct.gimple_seq_d** nonnull %seq) #7, !dbg !5295
  call void @llvm.dbg.value(metadata i8 %call562, metadata !5086, metadata !DIExpression()), !dbg !5105
  %tobool563 = icmp eq i8 %have_else_clause_p.0, 0, !dbg !5296
  br i1 %tobool563, label %land.lhs.true564, label %if.end579, !dbg !5297

land.lhs.true564:                                 ; preds = %if.else557
  %200 = load %struct.tree_exp*, %struct.tree_exp** %65, align 8, !dbg !5298
  %arrayidx567 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %200, i64 0, i32 3, i64 2, !dbg !5298
  %201 = load %union.tree_node*, %union.tree_node** %arrayidx567, align 8, !dbg !5298
  %cmp568 = icmp eq %union.tree_node* %201, null, !dbg !5299
  br i1 %cmp568, label %if.end579, label %land.lhs.true570, !dbg !5300

land.lhs.true570:                                 ; preds = %land.lhs.true564
  %202 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5301
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %202, metadata !5090, metadata !DIExpression()), !dbg !5105
  %call571 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %202) #6, !dbg !5302
  %tobool573 = icmp eq i8 %call571, 0, !dbg !5302
  br i1 %tobool573, label %if.end579, label %if.then574, !dbg !5303

if.then574:                                       ; preds = %land.lhs.true570
  %call575 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !5304
  call void @llvm.dbg.value(metadata %union.tree_node* %call575, metadata !5085, metadata !DIExpression()), !dbg !5105
  %call576 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call575) #6, !dbg !5305
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call576, metadata !5098, metadata !DIExpression()), !dbg !5306
  call fastcc void @gimple_set_do_not_emit_location(%union.gimple_statement_d* %call576) #7, !dbg !5307
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call576) #7, !dbg !5308
  br label %if.end579, !dbg !5309

if.end579:                                        ; preds = %land.lhs.true570, %land.lhs.true564, %if.else557, %land.lhs.true550, %if.end536, %if.then574
  %label_cont.2 = phi %union.tree_node* [ null, %if.end536 ], [ %label_true.0, %land.lhs.true550 ], [ null, %if.else557 ], [ %call575, %if.then574 ], [ null, %land.lhs.true570 ], [ null, %land.lhs.true564 ], !dbg !5310
  %have_then_clause_p.2 = phi i8 [ %have_then_clause_p.0, %if.end536 ], [ 0, %land.lhs.true550 ], [ %call562, %if.else557 ], [ %call562, %if.then574 ], [ %call562, %land.lhs.true570 ], [ %call562, %land.lhs.true564 ], !dbg !5105
  call void @llvm.dbg.value(metadata i8 %have_then_clause_p.2, metadata !5086, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %label_cont.2, metadata !5085, metadata !DIExpression()), !dbg !5105
  %tobool580 = icmp eq i8 %have_else_clause_p.0, 0, !dbg !5311
  br i1 %tobool580, label %if.then581, label %if.end587, !dbg !5313

if.then581:                                       ; preds = %if.end579
  %call582 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %label_false.0) #6, !dbg !5314
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call582) #7, !dbg !5316
  %203 = load %struct.tree_exp*, %struct.tree_exp** %65, align 8, !dbg !5317
  %arrayidx585 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %203, i64 0, i32 3, i64 2, !dbg !5317
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  %call586 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx585, %struct.gimple_seq_d** nonnull %seq) #7, !dbg !5318
  call void @llvm.dbg.value(metadata i8 %call586, metadata !5087, metadata !DIExpression()), !dbg !5105
  br label %if.end587, !dbg !5319

if.end587:                                        ; preds = %if.end579, %if.then581
  %have_else_clause_p.1 = phi i8 [ %have_else_clause_p.0, %if.end579 ], [ %call586, %if.then581 ], !dbg !5105
  call void @llvm.dbg.value(metadata i8 %have_else_clause_p.1, metadata !5087, metadata !DIExpression()), !dbg !5105
  %tobool588 = icmp eq %union.tree_node* %label_cont.2, null, !dbg !5320
  br i1 %tobool588, label %if.end591, label %if.then589, !dbg !5322

if.then589:                                       ; preds = %if.end587
  %call590 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* nonnull %label_cont.2) #6, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call590) #7, !dbg !5324
  br label %if.end591, !dbg !5324

if.end591:                                        ; preds = %if.end587, %if.then589
  call fastcc void @gimple_pop_condition(%struct.gimple_seq_d** %pre_p) #7, !dbg !5325
  %204 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %204, metadata !5090, metadata !DIExpression()), !dbg !5105
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d* %204) #6, !dbg !5327
  br i1 false, label %if.end591.if.end608_crit_edge, label %if.else595, !dbg !5328

if.end591.if.end608_crit_edge:                    ; preds = %if.end591
  br label %if.end608, !dbg !5328

if.else595:                                       ; preds = %if.end591
  %205 = or i8 %have_then_clause_p.2, %have_else_clause_p.1, !dbg !5329
  %206 = icmp eq i8 %205, 0, !dbg !5329
  br i1 %206, label %if.else602, label %if.end608, !dbg !5329

if.else602:                                       ; preds = %if.else595
  %207 = load %struct.tree_exp*, %struct.tree_exp** %65, align 8, !dbg !5332
  %arrayidx605 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %207, i64 0, i32 3, i64 0, !dbg !5332
  %208 = bitcast %union.tree_node** %arrayidx605 to i64*, !dbg !5332
  %209 = load i64, i64* %208, align 8, !dbg !5332
  store i64 %209, i64* %3, align 8, !dbg !5334
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5077, metadata !DIExpression(DW_OP_deref)), !dbg !5105
  %call606 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %expr, %struct.gimple_seq_d** %pre_p) #7, !dbg !5335
  br label %if.end608

if.end608:                                        ; preds = %if.end591.if.end608_crit_edge, %if.else595, %if.else602
  %ret.1 = phi i32 [ undef, %if.end591.if.end608_crit_edge ], [ %call185, %if.else602 ], [ 1, %if.else595 ], !dbg !5105
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !5082, metadata !DIExpression()), !dbg !5105
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !5336
  br label %cleanup609, !dbg !5337

cleanup609:                                       ; preds = %if.end181, %if.then54, %if.end143, %if.end608, %if.then178
  %retval.1 = phi i32 [ 1, %if.then178 ], [ %ret.1, %if.end608 ], [ 1, %if.end143 ], [ %call55, %if.then54 ], [ -2, %if.end181 ], !dbg !5105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5338
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !5338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !5338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5338
  ret i32 %retval.1, !dbg !5338
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_call_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !5339 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5343, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5344, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !5345, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i8 0, metadata !5353, metadata !DIExpression()), !dbg !5377
  %0 = bitcast %union.tree_node** %expr_p to i64**, !dbg !5378
  %1 = load i64*, i64** %0, align 8, !dbg !5378
  %bf.load = load i64, i64* %1, align 8, !dbg !5378
  %bf.cast = and i64 %bf.load, 65535, !dbg !5378
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5378
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5378
  %cmp = icmp ugt i32 %2, 3, !dbg !5378
  %3 = bitcast i64* %1 to %struct.tree_exp*, !dbg !5378
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5378

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %2, 11, !dbg !5378
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5378

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %1, i64 3, !dbg !5378
  %4 = bitcast i64* %locus to i32*, !dbg !5378
  %5 = load i32, i32* %4, align 8, !dbg !5378
  br label %cond.end, !dbg !5378

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5378
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5354, metadata !DIExpression()), !dbg !5377
  %cmp12 = icmp eq i64 %bf.cast, 59, !dbg !5379
  br i1 %cmp12, label %cond.end15, label %cond.true13, !dbg !5379

cond.true13:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2237, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5379
  %.pre = load i64*, i64** %0, align 8, !dbg !5380
  %bf.load18.pre = load i64, i64* %.pre, align 8, !dbg !5380
  %6 = bitcast i64* %.pre to %struct.tree_exp*, !dbg !5379
  %.pre18 = and i64 %bf.load18.pre, 65535, !dbg !5380
  br label %cond.end15, !dbg !5379

cond.end15:                                       ; preds = %cond.end, %cond.true13
  %bf.cast20.pre-phi = phi i64 [ 59, %cond.end ], [ %.pre18, %cond.true13 ], !dbg !5380
  %.in = phi i64* [ %1, %cond.end ], [ %.pre, %cond.true13 ]
  %7 = phi %struct.tree_exp* [ %3, %cond.end ], [ %6, %cond.true13 ]
  %8 = phi %struct.tree_exp* [ %3, %cond.end ], [ %6, %cond.true13 ]
  %9 = bitcast i64* %.in to %union.tree_node*, !dbg !5377
  %arrayidx22 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast20.pre-phi, !dbg !5380
  %10 = load i32, i32* %arrayidx22, align 4, !dbg !5380
  %cmp23 = icmp ugt i32 %10, 3, !dbg !5380
  br i1 %cmp23, label %land.lhs.true24, label %cond.end36, !dbg !5380

land.lhs.true24:                                  ; preds = %cond.end15
  %cmp31 = icmp ult i32 %10, 11, !dbg !5380
  br i1 %cmp31, label %cond.true32, label %cond.end36, !dbg !5380

cond.true32:                                      ; preds = %land.lhs.true24
  %locus34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i64 0, i32 1, !dbg !5380
  %11 = load i32, i32* %locus34, align 8, !dbg !5380
  br label %cond.end36, !dbg !5380

cond.end36:                                       ; preds = %cond.end15, %land.lhs.true24, %cond.true32
  %cond37 = phi i32 [ %11, %cond.true32 ], [ 0, %land.lhs.true24 ], [ 0, %cond.end15 ], !dbg !5380
  %cmp38 = icmp eq i32 %cond37, 0, !dbg !5380
  br i1 %cmp38, label %if.then, label %if.end, !dbg !5382

if.then:                                          ; preds = %cond.end36
  %12 = load i32, i32* @input_location, align 4, !dbg !5383
  %locus40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %7, i64 0, i32 1, !dbg !5383
  store i32 %12, i32* %locus40, align 8, !dbg !5383
  %.pre17 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5384
  br label %if.end, !dbg !5383

if.end:                                           ; preds = %cond.end36, %if.then
  %13 = phi %union.tree_node* [ %9, %cond.end36 ], [ %.pre17, %if.then ], !dbg !5384
  %call41 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %13) #6, !dbg !5385
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !5346, metadata !DIExpression()), !dbg !5377
  %tobool = icmp eq %union.tree_node* %call41, null, !dbg !5386
  br i1 %tobool, label %if.end130, label %land.lhs.true42, !dbg !5387

land.lhs.true42:                                  ; preds = %if.end
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 5, !dbg !5388
  %bf.load43 = load i32, i32* %built_in_class, align 8, !dbg !5388
  %bf.clear44 = and i32 %bf.load43, 6144, !dbg !5388
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !5388
  br i1 %cmp45, label %if.end130, label %if.then46, !dbg !5389

if.then46:                                        ; preds = %land.lhs.true42
  %14 = load i32, i32* @input_location, align 4, !dbg !5390
  %15 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5391
  %tobool47 = icmp eq i8 %want_value, 0, !dbg !5392
  %conv = zext i1 %tobool47 to i8, !dbg !5392
  %call48 = tail call %union.tree_node* @fold_call_expr(i32 %14, %union.tree_node* %15, i8 zeroext %conv) #6, !dbg !5393
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !5355, metadata !DIExpression()), !dbg !5394
  %tobool49 = icmp eq %union.tree_node* %call48, null, !dbg !5395
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !5397

land.lhs.true50:                                  ; preds = %if.then46
  %16 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5398
  %cmp51 = icmp eq %union.tree_node* %call48, %16, !dbg !5399
  br i1 %cmp51, label %if.end54, label %if.then53, !dbg !5400

if.then53:                                        ; preds = %land.lhs.true50
  store %union.tree_node* %call48, %union.tree_node** %expr_p, align 8, !dbg !5401
  br label %cleanup, !dbg !5403

if.end54:                                         ; preds = %land.lhs.true50, %if.then46
  %bf.load57 = load i32, i32* %built_in_class, align 8, !dbg !5404
  %bf.clear59 = and i32 %bf.load57, 6144, !dbg !5404
  %cmp60 = icmp eq i32 %bf.clear59, 6144, !dbg !5406
  br i1 %cmp60, label %land.lhs.true62, label %cleanup, !dbg !5407

land.lhs.true62:                                  ; preds = %if.end54
  %bf.clear65 = and i32 %bf.load57, 2047, !dbg !5408
  %cmp66 = icmp eq i32 %bf.clear65, 515, !dbg !5409
  br i1 %cmp66, label %if.then68, label %cleanup, !dbg !5410

if.then68:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.value(metadata i8 1, metadata !5353, metadata !DIExpression()), !dbg !5377
  %17 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5411
  %18 = load %struct.tree_exp*, %struct.tree_exp** %17, align 8, !dbg !5411
  %arrayidx70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i64 0, i32 3, i64 0, !dbg !5411
  %19 = bitcast %union.tree_node** %arrayidx70 to %struct.tree_int_cst**, !dbg !5411
  %20 = load %struct.tree_int_cst*, %struct.tree_int_cst** %19, align 8, !dbg !5411
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %20, i64 0, i32 1, i32 0, !dbg !5411
  %21 = load i64, i64* %low, align 8, !dbg !5411
  %conv72 = trunc i64 %21 to i32, !dbg !5411
  %cmp73 = icmp slt i32 %conv72, 5, !dbg !5414
  br i1 %cmp73, label %if.then75, label %if.end100, !dbg !5415

if.then75:                                        ; preds = %if.then68
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !5416
  %22 = load i64*, i64** %0, align 8, !dbg !5418
  %bf.load77 = load i64, i64* %22, align 8, !dbg !5418
  %bf.cast79 = and i64 %bf.load77, 65535, !dbg !5418
  %arrayidx81 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast79, !dbg !5418
  %23 = load i32, i32* %arrayidx81, align 4, !dbg !5418
  %cmp82 = icmp ugt i32 %23, 3, !dbg !5418
  br i1 %cmp82, label %land.lhs.true84, label %cond.end97, !dbg !5418

land.lhs.true84:                                  ; preds = %if.then75
  %cmp91 = icmp ult i32 %23, 11, !dbg !5418
  br i1 %cmp91, label %cond.true93, label %cond.end97, !dbg !5418

cond.true93:                                      ; preds = %land.lhs.true84
  %locus95 = getelementptr inbounds i64, i64* %22, i64 3, !dbg !5418
  %24 = bitcast i64* %locus95 to i32*, !dbg !5418
  %25 = load i32, i32* %24, align 8, !dbg !5418
  br label %cond.end97, !dbg !5418

cond.end97:                                       ; preds = %if.then75, %land.lhs.true84, %cond.true93
  %cond98 = phi i32 [ %25, %cond.true93 ], [ 0, %land.lhs.true84 ], [ 0, %if.then75 ], !dbg !5418
  %call99 = tail call %union.tree_node* @build_empty_stmt(i32 %cond98) #6, !dbg !5419
  store %union.tree_node* %call99, %union.tree_node** %expr_p, align 8, !dbg !5420
  br label %cleanup, !dbg !5421

if.end100:                                        ; preds = %if.then68
  %26 = bitcast %struct.tree_exp* %18 to %union.tree_node*, !dbg !5415
  %call101 = tail call zeroext i8 @fold_builtin_next_arg(%union.tree_node* %26, i8 zeroext 1) #6, !dbg !5422
  %tobool102 = icmp eq i8 %call101, 0, !dbg !5422
  br i1 %tobool102, label %cleanup, label %if.then103, !dbg !5424

if.then103:                                       ; preds = %if.end100
  %27 = load i64*, i64** %0, align 8, !dbg !5425
  %bf.load105 = load i64, i64* %27, align 8, !dbg !5425
  %bf.cast107 = and i64 %bf.load105, 65535, !dbg !5425
  %arrayidx109 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast107, !dbg !5425
  %28 = load i32, i32* %arrayidx109, align 4, !dbg !5425
  %cmp110 = icmp ugt i32 %28, 3, !dbg !5425
  br i1 %cmp110, label %land.lhs.true112, label %cond.end125, !dbg !5425

land.lhs.true112:                                 ; preds = %if.then103
  %cmp119 = icmp ult i32 %28, 11, !dbg !5425
  br i1 %cmp119, label %cond.true121, label %cond.end125, !dbg !5425

cond.true121:                                     ; preds = %land.lhs.true112
  %locus123 = getelementptr inbounds i64, i64* %27, i64 3, !dbg !5425
  %29 = bitcast i64* %locus123 to i32*, !dbg !5425
  %30 = load i32, i32* %29, align 8, !dbg !5425
  br label %cond.end125, !dbg !5425

cond.end125:                                      ; preds = %if.then103, %land.lhs.true112, %cond.true121
  %cond126 = phi i32 [ %30, %cond.true121 ], [ 0, %land.lhs.true112 ], [ 0, %if.then103 ], !dbg !5425
  %call127 = tail call %union.tree_node* @build_empty_stmt(i32 %cond126) #6, !dbg !5427
  store %union.tree_node* %call127, %union.tree_node** %expr_p, align 8, !dbg !5428
  br label %cleanup, !dbg !5429

cleanup:                                          ; preds = %if.end100, %if.end54, %land.lhs.true62, %cond.end125, %cond.end97, %if.then53
  %builtin_va_start_p.1 = phi i8 [ 0, %if.then53 ], [ 1, %cond.end97 ], [ 1, %cond.end125 ], [ 0, %land.lhs.true62 ], [ 0, %if.end54 ], [ 1, %if.end100 ], !dbg !5377
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then53 ], [ false, %cond.end97 ], [ false, %cond.end125 ], [ true, %land.lhs.true62 ], [ true, %if.end54 ], [ true, %if.end100 ]
  call void @llvm.dbg.value(metadata i8 %builtin_va_start_p.1, metadata !5353, metadata !DIExpression()), !dbg !5377
  br i1 %cleanup.dest.slot.0, label %if.end130, label %cleanup448

if.end130:                                        ; preds = %land.lhs.true42, %if.end, %cleanup
  %builtin_va_start_p.2 = phi i8 [ 0, %land.lhs.true42 ], [ 0, %if.end ], [ %builtin_va_start_p.1, %cleanup ], !dbg !5430
  call void @llvm.dbg.value(metadata i8 %builtin_va_start_p.2, metadata !5353, metadata !DIExpression()), !dbg !5377
  %31 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5431
  %32 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5431
  %arrayidx133 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %32, i64 0, i32 3, i64 1, !dbg !5431
  %call134 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx133, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_call_addr, i32 1) #7, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %call134, metadata !5349, metadata !DIExpression()), !dbg !5377
  %33 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5433
  %arrayidx137 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %33, i64 0, i32 3, i64 0, !dbg !5433
  %34 = bitcast %union.tree_node** %arrayidx137 to %struct.tree_int_cst**, !dbg !5433
  %35 = load %struct.tree_int_cst*, %struct.tree_int_cst** %34, align 8, !dbg !5433
  %low140 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %35, i64 0, i32 1, i32 0, !dbg !5433
  %36 = load i64, i64* %low140, align 8, !dbg !5433
  %conv141 = trunc i64 %36 to i32, !dbg !5433
  %sub142 = add nsw i32 %conv141, -3, !dbg !5433
  call void @llvm.dbg.value(metadata i32 %sub142, metadata !5351, metadata !DIExpression()), !dbg !5377
  %37 = bitcast %struct.tree_exp* %33 to %union.tree_node*, !dbg !5434
  %call143 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %37) #6, !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !5346, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5347, metadata !DIExpression()), !dbg !5377
  %tobool144 = icmp eq %union.tree_node* %call143, null, !dbg !5436
  br i1 %tobool144, label %if.else, label %if.then145, !dbg !5438

if.then145:                                       ; preds = %if.end130
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5439
  %38 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5439
  %39 = load %struct.tree_type*, %struct.tree_type** %38, align 8, !dbg !5439
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %39, i64 0, i32 1, !dbg !5439
  %40 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !5439
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !5347, metadata !DIExpression()), !dbg !5377
  br label %if.end180, !dbg !5440

if.else:                                          ; preds = %if.end130
  %41 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5441
  %arrayidx149 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %41, i64 0, i32 3, i64 1, !dbg !5441
  %42 = bitcast %union.tree_node** %arrayidx149 to %struct.tree_common**, !dbg !5441
  %43 = load %struct.tree_common*, %struct.tree_common** %42, align 8, !dbg !5441
  %type151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %43, i64 0, i32 2, !dbg !5441
  %44 = bitcast %union.tree_node** %type151 to i64**, !dbg !5441
  %45 = load i64*, i64** %44, align 8, !dbg !5441
  %bf.load153 = load i64, i64* %45, align 8, !dbg !5441
  %bf.cast1558 = and i64 %bf.load153, 65535, !dbg !5441
  %cmp156 = icmp eq i64 %bf.cast1558, 10, !dbg !5441
  br i1 %cmp156, label %if.then169, label %lor.lhs.false, !dbg !5441

lor.lhs.false:                                    ; preds = %if.else
  %cmp167 = icmp eq i64 %bf.cast1558, 12, !dbg !5441
  br i1 %cmp167, label %if.then169, label %if.end180, !dbg !5443

if.then169:                                       ; preds = %lor.lhs.false, %if.else
  %type176 = getelementptr inbounds i64, i64* %45, i64 2, !dbg !5444
  %46 = bitcast i64* %type176 to %struct.tree_type**, !dbg !5444
  %47 = load %struct.tree_type*, %struct.tree_type** %46, align 8, !dbg !5444
  %values178 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %47, i64 0, i32 1, !dbg !5444
  %48 = load %union.tree_node*, %union.tree_node** %values178, align 8, !dbg !5444
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !5347, metadata !DIExpression()), !dbg !5377
  br label %if.end180, !dbg !5445

if.end180:                                        ; preds = %lor.lhs.false, %if.then169, %if.then145
  %parms.1 = phi %union.tree_node* [ %40, %if.then145 ], [ %48, %if.then169 ], [ null, %lor.lhs.false ], !dbg !5446
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.1, metadata !5347, metadata !DIExpression()), !dbg !5377
  br i1 %tobool144, label %if.else187, label %land.lhs.true182, !dbg !5447

land.lhs.true182:                                 ; preds = %if.end180
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %call143, i64 0, i32 0, i32 0, i32 2, !dbg !5449
  %49 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !5449
  %tobool183 = icmp eq %union.tree_node* %49, null, !dbg !5449
  br i1 %tobool183, label %if.else187, label %if.then184, !dbg !5450

if.then184:                                       ; preds = %land.lhs.true182
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !5348, metadata !DIExpression()), !dbg !5377
  br label %if.end192, !dbg !5451

if.else187:                                       ; preds = %land.lhs.true182, %if.end180
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.1, metadata !5348, metadata !DIExpression()), !dbg !5377
  br label %if.end192

if.end192:                                        ; preds = %if.else187, %if.then184
  %p.1 = phi %union.tree_node* [ %49, %if.then184 ], [ %parms.1, %if.else187 ], !dbg !5452
  call void @llvm.dbg.value(metadata %union.tree_node* %p.1, metadata !5348, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 0, metadata !5350, metadata !DIExpression()), !dbg !5377
  br label %for.cond, !dbg !5453

for.cond:                                         ; preds = %for.inc, %if.end192
  %i.0 = phi i32 [ 0, %if.end192 ], [ %inc, %for.inc ], !dbg !5455
  %p.2 = phi %union.tree_node* [ %p.1, %if.end192 ], [ %50, %for.inc ], !dbg !5377
  call void @llvm.dbg.value(metadata %union.tree_node* %p.2, metadata !5348, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5350, metadata !DIExpression()), !dbg !5377
  %cmp193 = icmp slt i32 %i.0, %sub142, !dbg !5456
  %tobool195 = icmp ne %union.tree_node* %p.2, null, !dbg !5458
  %spec.select = and i1 %cmp193, %tobool195, !dbg !5458
  br i1 %spec.select, label %for.inc, label %for.end, !dbg !5459

for.inc:                                          ; preds = %for.cond
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5350, metadata !DIExpression()), !dbg !5377
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %p.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5461
  %50 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5461
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !5348, metadata !DIExpression()), !dbg !5377
  br label %for.cond, !dbg !5462, !llvm.loop !5463

for.end:                                          ; preds = %for.cond
  %p.2.lcssa = phi %union.tree_node* [ %p.2, %for.cond ], !dbg !5377
  %cmp193.lcssa = phi i1 [ %cmp193, %for.cond ], !dbg !5456
  call void @llvm.dbg.value(metadata %union.tree_node* %p.2.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata %union.tree_node* %p.2.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5350, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata %union.tree_node* %p.2.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5377
  %tobool197 = icmp eq %union.tree_node* %p.2.lcssa, null, !dbg !5465
  %or.cond = and i1 %tobool197, %cmp193.lcssa, !dbg !5466
  br i1 %or.cond, label %land.lhs.true201, label %if.end337, !dbg !5466

land.lhs.true201:                                 ; preds = %for.end
  %51 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5467
  %add = shl i64 %36, 32, !dbg !5467
  %sext = add i64 %add, -4294967296, !dbg !5467
  %idxprom205 = ashr exact i64 %sext, 32, !dbg !5467
  %arrayidx206 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %51, i64 0, i32 3, i64 %idxprom205, !dbg !5467
  %52 = bitcast %union.tree_node** %arrayidx206 to i64**, !dbg !5467
  %53 = load i64*, i64** %52, align 8, !dbg !5467
  %bf.load208 = load i64, i64* %53, align 8, !dbg !5467
  %bf.cast21012 = and i64 %bf.load208, 65535, !dbg !5468
  %cmp211 = icmp eq i64 %bf.cast21012, 59, !dbg !5468
  br i1 %cmp211, label %if.then213, label %if.end337, !dbg !5469

if.then213:                                       ; preds = %land.lhs.true201
  %54 = bitcast i64* %53 to %union.tree_node*, !dbg !5469
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !5358, metadata !DIExpression()), !dbg !5470
  %call220 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %54) #6, !dbg !5471
  call void @llvm.dbg.value(metadata %union.tree_node* %call220, metadata !5361, metadata !DIExpression()), !dbg !5470
  %tobool221 = icmp eq %union.tree_node* %call220, null, !dbg !5472
  br i1 %tobool221, label %if.end337, label %land.lhs.true222, !dbg !5473

land.lhs.true222:                                 ; preds = %if.then213
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5474
  %bf.load224 = load i64, i64* %55, align 8, !dbg !5474
  %bf.cast22614 = and i64 %bf.load224, 65535, !dbg !5475
  %cmp227 = icmp eq i64 %bf.cast22614, 29, !dbg !5475
  br i1 %cmp227, label %land.lhs.true229, label %if.end337, !dbg !5476

land.lhs.true229:                                 ; preds = %land.lhs.true222
  %built_in_class231 = getelementptr inbounds %union.tree_node, %union.tree_node* %call220, i64 0, i32 0, i32 5, !dbg !5477
  %bf.load232 = load i32, i32* %built_in_class231, align 8, !dbg !5477
  %bf.clear234 = and i32 %bf.load232, 6144, !dbg !5477
  %cmp235 = icmp eq i32 %bf.clear234, 6144, !dbg !5478
  br i1 %cmp235, label %land.lhs.true237, label %if.end337, !dbg !5479

land.lhs.true237:                                 ; preds = %land.lhs.true229
  %bf.clear241 = and i32 %bf.load232, 2047, !dbg !5480
  %cmp242 = icmp eq i32 %bf.clear241, 516, !dbg !5481
  br i1 %cmp242, label %if.then244, label %if.end337, !dbg !5482

if.then244:                                       ; preds = %land.lhs.true237
  %56 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5483
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !5362, metadata !DIExpression()), !dbg !5484
  %dec = add nsw i32 %conv141, -4, !dbg !5485
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5351, metadata !DIExpression()), !dbg !5377
  %type247 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5486
  %57 = load %union.tree_node*, %union.tree_node** %type247, align 8, !dbg !5486
  %operands249 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5487
  %arrayidx250 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands249, i64 1, !dbg !5487
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx250, align 8, !dbg !5487
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands249, i64 3, !dbg !5488
  %call254 = tail call %union.tree_node* @build_call_array_loc(i32 %cond, %union.tree_node* %57, %union.tree_node* %58, i32 %dec, %union.tree_node** nonnull %add.ptr) #6, !dbg !5489
  store %union.tree_node* %call254, %union.tree_node** %expr_p, align 8, !dbg !5490
  %arrayidx257 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands249, i64 2, !dbg !5491
  %59 = bitcast %union.tree_node** %arrayidx257 to i64*, !dbg !5491
  %60 = load i64, i64* %59, align 8, !dbg !5491
  %operands259 = getelementptr inbounds %union.tree_node, %union.tree_node* %call254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5492
  %arrayidx260 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands259, i64 2, !dbg !5492
  %61 = bitcast %union.tree_node** %arrayidx260 to i64*, !dbg !5493
  store i64 %60, i64* %61, align 8, !dbg !5493
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5494
  %bf.load262 = load i64, i64* %62, align 8, !dbg !5494
  %bf.cast265 = and i64 %bf.load262, 262144, !dbg !5494
  %63 = load i64*, i64** %0, align 8, !dbg !5495
  %bf.load267 = load i64, i64* %63, align 8, !dbg !5496
  %bf.clear268 = and i64 %bf.load267, -262145, !dbg !5496
  %bf.set = or i64 %bf.clear268, %bf.cast265, !dbg !5496
  store i64 %bf.set, i64* %63, align 8, !dbg !5496
  %bf.load270 = load i64, i64* %62, align 8, !dbg !5497
  %bf.cast273 = and i64 %bf.load270, 268435456, !dbg !5497
  %64 = load i64*, i64** %0, align 8, !dbg !5498
  %bf.load275 = load i64, i64* %64, align 8, !dbg !5499
  %bf.clear278 = and i64 %bf.load275, -268435457, !dbg !5499
  %bf.set279 = or i64 %bf.clear278, %bf.cast273, !dbg !5499
  store i64 %bf.set279, i64* %64, align 8, !dbg !5499
  %bf.load282 = load i64, i64* %62, align 8, !dbg !5500
  %bf.cast285 = and i64 %bf.load282, 536870912, !dbg !5500
  %65 = load i64*, i64** %0, align 8, !dbg !5501
  %bf.load287 = load i64, i64* %65, align 8, !dbg !5502
  %bf.clear290 = and i64 %bf.load287, -536870913, !dbg !5502
  %bf.set291 = or i64 %bf.clear290, %bf.cast285, !dbg !5502
  store i64 %bf.set291, i64* %65, align 8, !dbg !5502
  %bf.load294 = load i64, i64* %62, align 8, !dbg !5503
  %bf.cast297 = and i64 %bf.load294, 67108864, !dbg !5503
  %66 = load i64*, i64** %0, align 8, !dbg !5504
  %bf.load299 = load i64, i64* %66, align 8, !dbg !5505
  %bf.clear302 = and i64 %bf.load299, -67108865, !dbg !5505
  %bf.set303 = or i64 %bf.clear302, %bf.cast297, !dbg !5505
  store i64 %bf.set303, i64* %66, align 8, !dbg !5505
  %bf.load306 = load i64, i64* %62, align 8, !dbg !5506
  %bf.cast308 = and i64 %bf.load306, 65535, !dbg !5506
  %arrayidx310 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast308, !dbg !5506
  %67 = load i32, i32* %arrayidx310, align 4, !dbg !5506
  %cmp311 = icmp ugt i32 %67, 3, !dbg !5506
  br i1 %cmp311, label %land.lhs.true313, label %cond.end326, !dbg !5506

land.lhs.true313:                                 ; preds = %if.then244
  %cmp320 = icmp ult i32 %67, 11, !dbg !5506
  br i1 %cmp320, label %cond.true322, label %cond.end326, !dbg !5506

cond.true322:                                     ; preds = %land.lhs.true313
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5506
  %69 = load i32, i32* %68, align 8, !dbg !5506
  br label %cond.end326, !dbg !5506

cond.end326:                                      ; preds = %if.then244, %land.lhs.true313, %cond.true322
  %cond327 = phi i32 [ %69, %cond.true322 ], [ 0, %land.lhs.true313 ], [ 0, %if.then244 ], !dbg !5506
  %70 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5506
  %locus329 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %70, i64 0, i32 1, !dbg !5506
  store i32 %cond327, i32* %locus329, align 8, !dbg !5506
  %call330 = tail call %union.tree_node** @tree_block(%union.tree_node* %56) #6, !dbg !5507
  %71 = bitcast %union.tree_node** %call330 to i64*, !dbg !5507
  %72 = load i64, i64* %71, align 8, !dbg !5507
  %73 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5508
  %call331 = tail call %union.tree_node** @tree_block(%union.tree_node* %73) #6, !dbg !5508
  %74 = bitcast %union.tree_node** %call331 to i64*, !dbg !5509
  store i64 %72, i64* %74, align 8, !dbg !5509
  %75 = load i64*, i64** %0, align 8, !dbg !5510
  %bf.load333 = load i64, i64* %75, align 8, !dbg !5511
  %bf.set335 = or i64 %bf.load333, 134217728, !dbg !5511
  store i64 %bf.set335, i64* %75, align 8, !dbg !5511
  br label %if.end337, !dbg !5512

if.end337:                                        ; preds = %if.then213, %land.lhs.true222, %land.lhs.true229, %land.lhs.true237, %cond.end326, %for.end, %land.lhs.true201
  %nargs.1 = phi i32 [ %sub142, %for.end ], [ %sub142, %land.lhs.true201 ], [ %dec, %cond.end326 ], [ %sub142, %land.lhs.true237 ], [ %sub142, %land.lhs.true229 ], [ %sub142, %land.lhs.true222 ], [ %sub142, %if.then213 ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %nargs.1, metadata !5351, metadata !DIExpression()), !dbg !5377
  %cmp338 = icmp sgt i32 %nargs.1, 0, !dbg !5513
  br i1 %cmp338, label %if.then340, label %if.end388, !dbg !5514

if.then340:                                       ; preds = %if.end337
  call void @llvm.dbg.value(metadata i32 %nargs.1, metadata !5350, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5377
  %tobool349 = icmp eq i8 %builtin_va_start_p.2, 0, !dbg !5515
  br i1 %tobool349, label %if.then340.if.then340.split_crit_edge, label %if.then340.split.us, !dbg !5517

if.then340.if.then340.split_crit_edge:            ; preds = %if.then340
  %76 = sext i32 %nargs.1 to i64, !dbg !5517
  br label %for.cond342, !dbg !5517

if.then340.split.us:                              ; preds = %if.then340
  %77 = sext i32 %nargs.1 to i64, !dbg !5517
  br label %for.cond342.us, !dbg !5517

for.cond342.us:                                   ; preds = %for.inc385.us, %if.then340.split.us
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %for.inc385.us ], [ %77, %if.then340.split.us ]
  %ret.0.us = phi i32 [ %ret.2.us, %for.inc385.us ], [ %call134, %if.then340.split.us ], !dbg !5377
  %indvars.iv.next22 = add nsw i64 %indvars.iv21, -1, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %ret.0.us, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5350, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5377
  %cmp343.us = icmp sgt i64 %indvars.iv21, 0, !dbg !5519
  br i1 %cmp343.us, label %for.body345.us, label %if.end388.loopexit.us-lcssa.us, !dbg !5520

for.body345.us:                                   ; preds = %for.cond342.us
  %78 = trunc i64 %indvars.iv.next22 to i32, !dbg !5521
  %cmp346.us = icmp eq i32 %78, 1, !dbg !5521
  br i1 %cmp346.us, label %for.inc385.us, label %if.then350.us, !dbg !5522

if.then350.us:                                    ; preds = %for.body345.us
  %79 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5523
  %80 = add nsw i64 %indvars.iv21, 2, !dbg !5523
  %arrayidx355.us = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %79, i64 0, i32 3, i64 %80, !dbg !5523
  %.cast.us = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %79, i64 0, i32 0, i32 0, i32 0, !dbg !5525
  %bf.load357.us = load i64, i64* %.cast.us, align 8, !dbg !5525
  %bf.cast359.us = and i64 %bf.load357.us, 65535, !dbg !5525
  %arrayidx361.us = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast359.us, !dbg !5525
  %81 = load i32, i32* %arrayidx361.us, align 4, !dbg !5525
  %cmp362.us = icmp ugt i32 %81, 3, !dbg !5525
  br i1 %cmp362.us, label %land.lhs.true364.us, label %cond.end377.us, !dbg !5525

land.lhs.true364.us:                              ; preds = %if.then350.us
  %cmp371.us = icmp ult i32 %81, 11, !dbg !5525
  br i1 %cmp371.us, label %cond.true373.us, label %cond.end377.us, !dbg !5525

cond.true373.us:                                  ; preds = %land.lhs.true364.us
  %locus375.us = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %79, i64 0, i32 1, !dbg !5525
  %82 = load i32, i32* %locus375.us, align 8, !dbg !5525
  br label %cond.end377.us, !dbg !5525

cond.end377.us:                                   ; preds = %cond.true373.us, %land.lhs.true364.us, %if.then350.us
  %cond378.us = phi i32 [ %82, %cond.true373.us ], [ 0, %land.lhs.true364.us ], [ 0, %if.then350.us ], !dbg !5525
  %call379.us = tail call fastcc i32 @gimplify_arg(%union.tree_node** nonnull %arrayidx355.us, %struct.gimple_seq_d** %pre_p, i32 %cond378.us) #7, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %call379.us, metadata !5365, metadata !DIExpression()), !dbg !5527
  %cmp380.us = icmp eq i32 %call379.us, -2, !dbg !5528
  %spec.select4.us = select i1 %cmp380.us, i32 -2, i32 %ret.0.us, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %spec.select4.us, metadata !5349, metadata !DIExpression()), !dbg !5377
  br label %for.inc385.us, !dbg !5531

for.inc385.us:                                    ; preds = %cond.end377.us, %for.body345.us
  %ret.2.us = phi i32 [ %spec.select4.us, %cond.end377.us ], [ %ret.0.us, %for.body345.us ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.2.us, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5350, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5377
  br label %for.cond342.us, !dbg !5532, !llvm.loop !5533

if.end388.loopexit.us-lcssa.us:                   ; preds = %for.cond342.us
  %ret.0.us.lcssa = phi i32 [ %ret.0.us, %for.cond342.us ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.0.us.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.0.us.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5377
  br label %if.end388.loopexit, !dbg !5535

for.cond342:                                      ; preds = %cond.end377, %if.then340.if.then340.split_crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end377 ], [ %76, %if.then340.if.then340.split_crit_edge ]
  %ret.0 = phi i32 [ %spec.select4, %cond.end377 ], [ %call134, %if.then340.if.then340.split_crit_edge ], !dbg !5377
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5350, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5377
  %cmp343 = icmp sgt i64 %indvars.iv, 0, !dbg !5519
  br i1 %cmp343, label %for.body345, label %if.end388.loopexit.us-lcssa, !dbg !5520

for.body345:                                      ; preds = %for.cond342
  %83 = load %struct.tree_exp*, %struct.tree_exp** %31, align 8, !dbg !5523
  %84 = add nsw i64 %indvars.iv, 2, !dbg !5523
  %arrayidx355 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %83, i64 0, i32 3, i64 %84, !dbg !5523
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %83, i64 0, i32 0, i32 0, i32 0, !dbg !5525
  %bf.load357 = load i64, i64* %.cast, align 8, !dbg !5525
  %bf.cast359 = and i64 %bf.load357, 65535, !dbg !5525
  %arrayidx361 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast359, !dbg !5525
  %85 = load i32, i32* %arrayidx361, align 4, !dbg !5525
  %cmp362 = icmp ugt i32 %85, 3, !dbg !5525
  br i1 %cmp362, label %land.lhs.true364, label %cond.end377, !dbg !5525

land.lhs.true364:                                 ; preds = %for.body345
  %cmp371 = icmp ult i32 %85, 11, !dbg !5525
  br i1 %cmp371, label %cond.true373, label %cond.end377, !dbg !5525

cond.true373:                                     ; preds = %land.lhs.true364
  %locus375 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %83, i64 0, i32 1, !dbg !5525
  %86 = load i32, i32* %locus375, align 8, !dbg !5525
  br label %cond.end377, !dbg !5525

cond.end377:                                      ; preds = %for.body345, %land.lhs.true364, %cond.true373
  %cond378 = phi i32 [ %86, %cond.true373 ], [ 0, %land.lhs.true364 ], [ 0, %for.body345 ], !dbg !5525
  %call379 = tail call fastcc i32 @gimplify_arg(%union.tree_node** nonnull %arrayidx355, %struct.gimple_seq_d** %pre_p, i32 %cond378) #7, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %call379, metadata !5365, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i32 undef, metadata !5349, metadata !DIExpression()), !dbg !5377
  %cmp380 = icmp eq i32 %call379, -2, !dbg !5528
  %spec.select4 = select i1 %cmp380, i32 -2, i32 %ret.0, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5350, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5377
  br label %for.cond342, !dbg !5532, !llvm.loop !5533

if.end388.loopexit.us-lcssa:                      ; preds = %for.cond342
  %ret.0.lcssa24 = phi i32 [ %ret.0, %for.cond342 ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa24, metadata !5349, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa24, metadata !5349, metadata !DIExpression()), !dbg !5377
  br label %if.end388.loopexit, !dbg !5535

if.end388.loopexit:                               ; preds = %if.end388.loopexit.us-lcssa.us, %if.end388.loopexit.us-lcssa
  %ret.0.lcssa = phi i32 [ %ret.0.lcssa24, %if.end388.loopexit.us-lcssa ], [ %ret.0.us.lcssa, %if.end388.loopexit.us-lcssa.us ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5377
  br label %if.end388, !dbg !5535

if.end388:                                        ; preds = %if.end388.loopexit, %if.end337
  %ret.3 = phi i32 [ %call134, %if.end337 ], [ %ret.0.lcssa, %if.end388.loopexit ], !dbg !5537
  call void @llvm.dbg.value(metadata i32 %ret.3, metadata !5349, metadata !DIExpression()), !dbg !5377
  %tobool390 = icmp ne i8 %want_value, 0, !dbg !5535
  %tobool392 = icmp ne %union.tree_node* %call143, null, !dbg !5538
  %or.cond5 = and i1 %tobool390, %tobool392, !dbg !5539
  br i1 %or.cond5, label %land.lhs.true393, label %if.end405, !dbg !5539

land.lhs.true393:                                 ; preds = %if.end388
  %type395 = getelementptr inbounds %union.tree_node, %union.tree_node* %call143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5540
  %87 = bitcast %union.tree_node** %type395 to %struct.tree_common**, !dbg !5540
  %88 = load %struct.tree_common*, %struct.tree_common** %87, align 8, !dbg !5540
  %type397 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %88, i64 0, i32 2, !dbg !5540
  %89 = bitcast %union.tree_node** %type397 to i64**, !dbg !5540
  %90 = load i64*, i64** %89, align 8, !dbg !5540
  %bf.load399 = load i64, i64* %90, align 8, !dbg !5540
  %bf.cast40111 = and i64 %bf.load399, 65535, !dbg !5540
  %cmp402 = icmp eq i64 %bf.cast40111, 19, !dbg !5540
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !5541

if.then404:                                       ; preds = %land.lhs.true393
  tail call void (i32, i8*, ...) @error_at(i32 %cond, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5542
  call void @llvm.dbg.value(metadata i32 -2, metadata !5349, metadata !DIExpression()), !dbg !5377
  br label %if.end405, !dbg !5544

if.end405:                                        ; preds = %if.then404, %land.lhs.true393, %if.end388
  %ret.4 = phi i32 [ -2, %if.then404 ], [ %ret.3, %land.lhs.true393 ], [ %ret.3, %if.end388 ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %ret.4, metadata !5349, metadata !DIExpression()), !dbg !5377
  %cmp406 = icmp eq i32 %ret.4, -2, !dbg !5545
  br i1 %cmp406, label %if.else424, label %if.then408, !dbg !5546

if.then408:                                       ; preds = %if.end405
  %91 = load i32, i32* @input_location, align 4, !dbg !5547
  %92 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5548
  %tobool410 = icmp eq i8 %want_value, 0, !dbg !5549
  %conv413 = zext i1 %tobool410 to i8, !dbg !5549
  %call414 = tail call %union.tree_node* @fold_call_expr(i32 %91, %union.tree_node* %92, i8 zeroext %conv413) #6, !dbg !5550
  call void @llvm.dbg.value(metadata %union.tree_node* %call414, metadata !5371, metadata !DIExpression()), !dbg !5551
  %tobool415 = icmp eq %union.tree_node* %call414, null, !dbg !5552
  br i1 %tobool415, label %cleanup421, label %land.lhs.true416, !dbg !5554

land.lhs.true416:                                 ; preds = %if.then408
  %93 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5555
  %cmp417 = icmp eq %union.tree_node* %call414, %93, !dbg !5556
  br i1 %cmp417, label %cleanup421, label %if.then419, !dbg !5557

if.then419:                                       ; preds = %land.lhs.true416
  store %union.tree_node* %call414, %union.tree_node** %expr_p, align 8, !dbg !5558
  br label %cleanup421, !dbg !5560

cleanup421:                                       ; preds = %land.lhs.true416, %if.then408, %if.then419
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then419 ], [ true, %land.lhs.true416 ], [ true, %if.then408 ]
  br i1 %cleanup.dest.slot.1, label %if.end425, label %cleanup448

if.else424:                                       ; preds = %if.end405
  %94 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5561
  %95 = bitcast %union.tree_node** %expr_p to i64*, !dbg !5563
  store i64 %94, i64* %95, align 8, !dbg !5563
  br label %cleanup448, !dbg !5564

if.end425:                                        ; preds = %cleanup421
  %96 = load i64*, i64** %0, align 8, !dbg !5565
  %bf.load427 = load i64, i64* %96, align 8, !dbg !5565
  %bf.cast42910 = and i64 %bf.load427, 65535, !dbg !5566
  %cmp430 = icmp eq i64 %bf.cast42910, 59, !dbg !5566
  br i1 %cmp430, label %if.then432, label %if.end443, !dbg !5567

if.then432:                                       ; preds = %if.end425
  %97 = bitcast i64* %96 to %union.tree_node*, !dbg !5567
  %call433 = tail call i32 @call_expr_flags(%union.tree_node* %97) #6, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %call433, metadata !5374, metadata !DIExpression()), !dbg !5569
  %and = and i32 %call433, 3, !dbg !5570
  %tobool434 = icmp eq i32 %and, 0, !dbg !5570
  %and436 = and i32 %call433, 4, !dbg !5572
  %tobool437 = icmp ne i32 %and436, 0, !dbg !5572
  %or.cond6 = or i1 %tobool434, %tobool437, !dbg !5573
  br i1 %or.cond6, label %if.end443, label %if.then438, !dbg !5573

if.then438:                                       ; preds = %if.then432
  %98 = load i64*, i64** %0, align 8, !dbg !5574
  %bf.load440 = load i64, i64* %98, align 8, !dbg !5575
  %bf.clear441 = and i64 %bf.load440, -65537, !dbg !5575
  store i64 %bf.clear441, i64* %98, align 8, !dbg !5575
  br label %if.end443, !dbg !5574

if.end443:                                        ; preds = %if.then438, %if.then432, %if.end425
  br i1 %tobool410, label %if.then445, label %cleanup448, !dbg !5576

if.then445:                                       ; preds = %if.end443
  %99 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5577
  %call446 = tail call %union.gimple_statement_d* @gimple_build_call_from_tree(%union.tree_node* %99) #6, !dbg !5580
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call446, metadata !5352, metadata !DIExpression()), !dbg !5377
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call446) #7, !dbg !5581
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !5582
  br label %cleanup448, !dbg !5583

cleanup448:                                       ; preds = %if.end443, %if.then445, %cleanup, %cleanup421, %if.else424
  %retval.3 = phi i32 [ 0, %cleanup ], [ 0, %cleanup421 ], [ -2, %if.else424 ], [ %ret.4, %if.then445 ], [ %ret.4, %if.end443 ], !dbg !5377
  ret i32 %retval.3, !dbg !5584
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_compound_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !5585 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5587, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5588, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !5589, metadata !DIExpression()), !dbg !5593
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5594
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5590, metadata !DIExpression()), !dbg !5593
  br label %do.body, !dbg !5595

do.body:                                          ; preds = %if.end, %entry
  %t.0 = phi %union.tree_node* [ %0, %entry ], [ %3, %if.end ], !dbg !5593
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5590, metadata !DIExpression()), !dbg !5593
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5596
  call void @llvm.dbg.value(metadata %union.tree_node** %operands, metadata !5591, metadata !DIExpression()), !dbg !5597
  %1 = bitcast %union.tree_node** %operands to i64**, !dbg !5598
  %2 = load i64*, i64** %1, align 8, !dbg !5598
  %bf.load = load i64, i64* %2, align 8, !dbg !5598
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5600
  %cmp = icmp eq i64 %bf.cast1, 52, !dbg !5600
  br i1 %cmp, label %if.then, label %if.else, !dbg !5601

if.then:                                          ; preds = %do.body
  %call = tail call fastcc i32 @gimplify_compound_expr(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %pre_p, i8 zeroext 0) #7, !dbg !5602
  br label %if.end, !dbg !5602

if.else:                                          ; preds = %do.body
  %call1 = tail call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %pre_p) #7, !dbg !5603
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5604
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !5604
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5590, metadata !DIExpression()), !dbg !5593
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5605
  %bf.load6 = load i64, i64* %4, align 8, !dbg !5605
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !5606
  %cmp9 = icmp eq i64 %bf.cast82, 52, !dbg !5606
  br i1 %cmp9, label %do.body, label %do.end, !dbg !5607, !llvm.loop !5608

do.end:                                           ; preds = %if.end
  %.lcssa = phi %union.tree_node* [ %3, %if.end ], !dbg !5604
  store %union.tree_node* %.lcssa, %union.tree_node** %expr_p, align 8, !dbg !5610
  %tobool = icmp eq i8 %want_value, 0, !dbg !5611
  br i1 %tobool, label %if.else11, label %cleanup, !dbg !5613

if.else11:                                        ; preds = %do.end
  %call12 = tail call zeroext i8 @gimplify_stmt(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) #7, !dbg !5614
  br label %cleanup, !dbg !5616

cleanup:                                          ; preds = %do.end, %if.else11
  %retval.0 = phi i32 [ 1, %if.else11 ], [ 0, %do.end ], !dbg !5617
  ret i32 %retval.0, !dbg !5618
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_compound_literal_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !5619 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5623, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5624, metadata !DIExpression()), !dbg !5627
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5628
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !5628
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !5628
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5628
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5625, metadata !DIExpression()), !dbg !5627
  %operands2 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5629
  %3 = load %union.tree_node*, %union.tree_node** %operands2, align 8, !dbg !5629
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5626, metadata !DIExpression()), !dbg !5627
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 0, i32 0, i32 0, !dbg !5630
  %bf.load = load i64, i64* %.cast, align 8, !dbg !5630
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !5630
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !5630
  br i1 %tobool, label %if.end, label %if.then, !dbg !5632

if.then:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5633
  %bf.load5 = load i64, i64* %4, align 8, !dbg !5634
  %bf.set = or i64 %bf.load5, 262144, !dbg !5634
  store i64 %bf.set, i64* %4, align 8, !dbg !5634
  br label %if.end, !dbg !5633

if.end:                                           ; preds = %entry, %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5635
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !5635
  %6 = load i64*, i64** %5, align 8, !dbg !5635
  %bf.load8 = load i64, i64* %6, align 8, !dbg !5635
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !5637
  %cmp = icmp eq i64 %bf.cast102, 13, !dbg !5637
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5638

lor.lhs.false:                                    ; preds = %if.end
  %cmp17 = icmp eq i64 %bf.cast102, 14, !dbg !5639
  br i1 %cmp17, label %land.lhs.true, label %if.end30, !dbg !5640

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5641
  %bf.load19 = load i64, i64* %7, align 8, !dbg !5641
  %bf.cast224 = and i64 %bf.load19, 524288, !dbg !5641
  %tobool23 = icmp eq i64 %bf.cast224, 0, !dbg !5641
  br i1 %tobool23, label %land.lhs.true24, label %if.end30, !dbg !5642

land.lhs.true24:                                  ; preds = %land.lhs.true
  %call = tail call zeroext i8 @needs_to_live_in_memory(%union.tree_node* %3) #6, !dbg !5643
  %tobool25 = icmp eq i8 %call, 0, !dbg !5643
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !5644

if.then26:                                        ; preds = %land.lhs.true24
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5645
  %8 = bitcast i40* %gimple_reg_flag to i64*, !dbg !5645
  %bf.load27 = load i64, i64* %8, align 8, !dbg !5646
  %bf.set29 = or i64 %bf.load27, 134217728, !dbg !5646
  store i64 %bf.set29, i64* %8, align 8, !dbg !5646
  br label %if.end30, !dbg !5645

if.end30:                                         ; preds = %land.lhs.true24, %land.lhs.true, %if.then26, %lor.lhs.false
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5647
  %9 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5647
  %cmp31 = icmp eq %union.tree_node* %9, null, !dbg !5649
  br i1 %cmp31, label %land.lhs.true32, label %if.end38, !dbg !5650

land.lhs.true32:                                  ; preds = %if.end30
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5651
  %10 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !5651
  %bf.load33 = load i32, i32* %10, align 8, !dbg !5651
  %bf.clear35 = and i32 %bf.load33, 256, !dbg !5651
  %tobool36 = icmp eq i32 %bf.clear35, 0, !dbg !5651
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5652

if.then37:                                        ; preds = %land.lhs.true32
  tail call void @gimple_add_tmp_var(%union.tree_node* %3) #7, !dbg !5653
  br label %if.end38, !dbg !5653

if.end38:                                         ; preds = %land.lhs.true32, %if.then37, %if.end30
  tail call void @gimplify_and_add(%union.tree_node* %2, %struct.gimple_seq_d** %pre_p) #7, !dbg !5654
  store %union.tree_node* %3, %union.tree_node** %expr_p, align 8, !dbg !5655
  ret i32 undef, !dbg !5656
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_modify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !5657 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5659, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5660, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !5661, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !5662, metadata !DIExpression()), !dbg !5672
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5673
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !5673
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 1, !dbg !5673
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5663, metadata !DIExpression()), !dbg !5672
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !5674
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx3, metadata !5664, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 -1, metadata !5665, metadata !DIExpression()), !dbg !5672
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 0, i32 0, i32 0, !dbg !5675
  %bf.load = load i64, i64* %.cast, align 8, !dbg !5675
  %bf.cast = and i64 %bf.load, 65535, !dbg !5675
  %arrayidx4 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5675
  %2 = load i32, i32* %arrayidx4, align 4, !dbg !5675
  %cmp = icmp ugt i32 %2, 3, !dbg !5675
  br i1 %cmp, label %land.lhs.true, label %entry.cond.end_crit_edge, !dbg !5675

entry.cond.end_crit_edge:                         ; preds = %entry
  %.pre18 = bitcast %union.tree_node** %expr_p to i64**, !dbg !5676
  br label %cond.end, !dbg !5675

land.lhs.true:                                    ; preds = %entry
  %3 = bitcast %union.tree_node** %expr_p to i64**, !dbg !5675
  %cmp11 = icmp ult i32 %2, 11, !dbg !5675
  br i1 %cmp11, label %cond.true, label %cond.end, !dbg !5675

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 1, !dbg !5675
  %4 = load i32, i32* %locus, align 8, !dbg !5675
  br label %cond.end, !dbg !5675

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %land.lhs.true, %cond.true
  %.pre-phi19 = phi i64** [ %.pre18, %entry.cond.end_crit_edge ], [ %3, %land.lhs.true ], [ %3, %cond.true ], !dbg !5676
  %cond = phi i32 [ 0, %entry.cond.end_crit_edge ], [ 0, %land.lhs.true ], [ %4, %cond.true ], !dbg !5675
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5667, metadata !DIExpression()), !dbg !5672
  %cmp17 = icmp eq i64 %bf.cast, 53, !dbg !5676
  br i1 %cmp17, label %cond.end25, label %lor.lhs.false, !dbg !5676

lor.lhs.false:                                    ; preds = %cond.end
  %cmp22 = icmp eq i64 %bf.cast, 54, !dbg !5676
  br i1 %cmp22, label %cond.end25, label %cond.true23, !dbg !5676

cond.true23:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5676
  br label %cond.end25, !dbg !5676

cond.end25:                                       ; preds = %cond.end, %lor.lhs.false, %cond.true23
  %5 = bitcast %union.tree_node** %arrayidx3 to %struct.tree_common**, !dbg !5677
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !5677
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !5677
  %7 = bitcast %union.tree_node** %type to i64**, !dbg !5677
  %8 = load i64*, i64** %7, align 8, !dbg !5677
  %bf.load28 = load i64, i64* %8, align 8, !dbg !5677
  %bf.cast305 = and i64 %bf.load28, 65535, !dbg !5677
  %cmp31 = icmp eq i64 %bf.cast305, 10, !dbg !5677
  br i1 %cmp31, label %if.then, label %lor.lhs.false32, !dbg !5677

lor.lhs.false32:                                  ; preds = %cond.end25
  %cmp39 = icmp eq i64 %bf.cast305, 12, !dbg !5677
  br i1 %cmp39, label %if.then, label %if.end49, !dbg !5679

if.then:                                          ; preds = %lor.lhs.false32, %cond.end25
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5680
  %call = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %9) #6, !dbg !5680
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !dbg !5680
  %10 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !5682
  %type41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !5682
  %11 = load %union.tree_node*, %union.tree_node** %type41, align 8, !dbg !5682
  %type43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5684
  %12 = load %union.tree_node*, %union.tree_node** %type43, align 8, !dbg !5684
  %call44 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %11, %union.tree_node* %12) #6, !dbg !5685
  %tobool = icmp eq i8 %call44, 0, !dbg !5685
  br i1 %tobool, label %if.then45, label %if.end49, !dbg !5686

if.then45:                                        ; preds = %if.then
  %13 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !5687
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !5687
  %14 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !5687
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5688
  %call48 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %14, %union.tree_node* %15) #6, !dbg !5689
  store %union.tree_node* %call48, %union.tree_node** %arrayidx, align 8, !dbg !5690
  br label %if.end49, !dbg !5691

if.end49:                                         ; preds = %if.then, %if.then45, %lor.lhs.false32
  %call50 = tail call fastcc i32 @gimplify_modify_expr_rhs(%union.tree_node** %expr_p, %union.tree_node** nonnull %arrayidx, %union.tree_node** nonnull %arrayidx3, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value) #7, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %call50, metadata !5665, metadata !DIExpression()), !dbg !5672
  %cmp51 = icmp eq i32 %call50, -1, !dbg !5693
  br i1 %cmp51, label %if.end53, label %cleanup243, !dbg !5695

if.end53:                                         ; preds = %if.end49
  %16 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !5696
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !5696
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !5696
  %18 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !5696
  %call56 = tail call fastcc zeroext i8 @zero_sized_type(%union.tree_node* %18) #7, !dbg !5698
  %tobool57 = icmp eq i8 %call56, 0, !dbg !5698
  %tobool59 = icmp ne i8 %want_value, 0, !dbg !5699
  %or.cond = or i1 %tobool57, %tobool59, !dbg !5700
  br i1 %or.cond, label %if.end63, label %if.then60, !dbg !5700

if.then60:                                        ; preds = %if.end53
  %call61 = tail call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p) #7, !dbg !5701
  %call62 = tail call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx3, %struct.gimple_seq_d** %pre_p) #7, !dbg !5703
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !5704
  br label %cleanup243, !dbg !5705

if.end63:                                         ; preds = %if.end53
  tail call fastcc void @maybe_with_size_expr(%union.tree_node** nonnull %arrayidx) #7, !dbg !5706
  %call64 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx3, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %call64, metadata !5665, metadata !DIExpression()), !dbg !5672
  %cmp65 = icmp eq i32 %call64, -2, !dbg !5708
  br i1 %cmp65, label %cleanup243, label %if.end68, !dbg !5710

if.end68:                                         ; preds = %if.end63
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5711
  %call69 = tail call i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %19) #7, !dbg !5712
  %call70 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* %call69, i32 1) #7, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %call70, metadata !5665, metadata !DIExpression()), !dbg !5672
  %cmp71 = icmp eq i32 %call70, -2, !dbg !5714
  br i1 %cmp71, label %cleanup243, label %if.end74, !dbg !5716

if.end74:                                         ; preds = %if.end68
  %call75 = tail call fastcc i32 @gimplify_modify_expr_rhs(%union.tree_node** %expr_p, %union.tree_node** nonnull %arrayidx, %union.tree_node** nonnull %arrayidx3, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value) #7, !dbg !5717
  call void @llvm.dbg.value(metadata i32 %call75, metadata !5665, metadata !DIExpression()), !dbg !5672
  %cmp76 = icmp eq i32 %call75, -1, !dbg !5718
  br i1 %cmp76, label %if.end79, label %cleanup243, !dbg !5720

if.end79:                                         ; preds = %if.end74
  %20 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !5721
  %21 = load i64*, i64** %20, align 8, !dbg !5721
  %bf.load81 = load i64, i64* %21, align 8, !dbg !5721
  %bf.cast837 = and i64 %bf.load81, 65535, !dbg !5722
  %cmp84 = icmp eq i64 %bf.cast837, 150, !dbg !5722
  br i1 %cmp84, label %if.then86, label %if.end108, !dbg !5723

if.then86:                                        ; preds = %if.end79
  %arrayidx89 = getelementptr inbounds i64, i64* %21, i64 5, !dbg !5724
  %22 = bitcast i64* %arrayidx89 to %union.tree_node**, !dbg !5724
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !5724
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5668, metadata !DIExpression()), !dbg !5725
  %arrayidx92 = getelementptr inbounds i64, i64* %21, i64 6, !dbg !5726
  %24 = bitcast i64* %arrayidx92 to %union.tree_node**, !dbg !5726
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !5726
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !5671, metadata !DIExpression()), !dbg !5725
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5727
  %bf.load94 = load i64, i64* %26, align 8, !dbg !5727
  %bf.cast9614 = and i64 %bf.load94, 65535, !dbg !5729
  %cmp97 = icmp eq i64 %bf.cast9614, 51, !dbg !5729
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !5730

if.then99:                                        ; preds = %if.then86
  %call100 = tail call fastcc i32 @gimplify_modify_expr_to_memset(%union.tree_node** %expr_p, %union.tree_node* %25, i8 zeroext %want_value, %struct.gimple_seq_d** %pre_p) #7, !dbg !5731
  br label %cleanup, !dbg !5732

if.end101:                                        ; preds = %if.then86
  %call102 = tail call zeroext i8 @is_gimple_addressable(%union.tree_node* %23) #6, !dbg !5733
  %tobool103 = icmp eq i8 %call102, 0, !dbg !5733
  br i1 %tobool103, label %cleanup, label %if.then104, !dbg !5735

if.then104:                                       ; preds = %if.end101
  store %union.tree_node* %23, %union.tree_node** %arrayidx, align 8, !dbg !5736
  %call105 = tail call fastcc i32 @gimplify_modify_expr_to_memcpy(%union.tree_node** %expr_p, %union.tree_node* %25, i8 zeroext %want_value, %struct.gimple_seq_d** %pre_p) #7, !dbg !5738
  br label %cleanup, !dbg !5739

cleanup:                                          ; preds = %if.end101, %if.then104, %if.then99
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then99 ], [ false, %if.then104 ], [ true, %if.end101 ]
  br i1 %cleanup.dest.slot.0, label %if.end108, label %cleanup243

if.end108:                                        ; preds = %cleanup, %if.end79
  %27 = bitcast %union.tree_node** %arrayidx3 to i64**, !dbg !5740
  %28 = load i64*, i64** %27, align 8, !dbg !5740
  %bf.load110 = load i64, i64* %28, align 8, !dbg !5740
  %bf.cast1128 = and i64 %bf.load110, 65535, !dbg !5742
  %cmp113 = icmp eq i64 %bf.cast1128, 43, !dbg !5742
  br i1 %cmp113, label %land.lhs.true122, label %lor.lhs.false115, !dbg !5743

lor.lhs.false115:                                 ; preds = %if.end108
  %cmp120 = icmp eq i64 %bf.cast1128, 44, !dbg !5744
  br i1 %cmp120, label %land.lhs.true122, label %if.end131, !dbg !5745

land.lhs.true122:                                 ; preds = %lor.lhs.false115, %if.end108
  %arrayidx125 = getelementptr inbounds i64, i64* %28, i64 5, !dbg !5746
  %29 = bitcast i64* %arrayidx125 to %union.tree_node**, !dbg !5746
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !5746
  %call126 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %30) #6, !dbg !5747
  %tobool128 = icmp eq i8 %call126, 0, !dbg !5747
  br i1 %tobool128, label %if.end131, label %if.then129, !dbg !5748

if.then129:                                       ; preds = %land.lhs.true122
  %call130 = tail call fastcc i32 @gimplify_modify_expr_complex_part(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, i8 zeroext %want_value) #7, !dbg !5749
  br label %cleanup243, !dbg !5750

if.end131:                                        ; preds = %land.lhs.true122, %lor.lhs.false115
  %31 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !5751
  %into_ssa = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %31, i64 0, i32 10, !dbg !5753
  %32 = load i8, i8* %into_ssa, align 1, !dbg !5753
  %tobool132 = icmp eq i8 %32, 0, !dbg !5751
  br i1 %tobool132, label %land.lhs.true133, label %if.end180, !dbg !5754

land.lhs.true133:                                 ; preds = %if.end131
  %33 = load i64*, i64** %20, align 8, !dbg !5755
  %bf.load135 = load i64, i64* %33, align 8, !dbg !5755
  %bf.cast137 = and i64 %bf.load135, 65535, !dbg !5755
  %arrayidx139 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast137, !dbg !5755
  %34 = load i32, i32* %arrayidx139, align 4, !dbg !5755
  %cmp140 = icmp eq i32 %34, 3, !dbg !5755
  br i1 %cmp140, label %land.lhs.true142, label %if.end180, !dbg !5756

land.lhs.true142:                                 ; preds = %land.lhs.true133
  %35 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !5757
  %ignored_flag = getelementptr inbounds i64, i64* %33, i64 7, !dbg !5757
  %bf.load143 = load i64, i64* %ignored_flag, align 8, !dbg !5757
  %bf.cast14512 = and i64 %bf.load143, 1024, !dbg !5757
  %tobool146 = icmp eq i64 %bf.cast14512, 0, !dbg !5757
  br i1 %tobool146, label %if.end180, label %land.lhs.true147, !dbg !5758

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %36 = load i64*, i64** %27, align 8, !dbg !5759
  %bf.load149 = load i64, i64* %36, align 8, !dbg !5759
  %bf.cast151 = and i64 %bf.load149, 65535, !dbg !5759
  %arrayidx153 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast151, !dbg !5759
  %37 = load i32, i32* %arrayidx153, align 4, !dbg !5759
  %cmp154 = icmp eq i32 %37, 3, !dbg !5759
  br i1 %cmp154, label %land.lhs.true156, label %if.end180, !dbg !5760

land.lhs.true156:                                 ; preds = %land.lhs.true147
  %ignored_flag158 = getelementptr inbounds i64, i64* %36, i64 7, !dbg !5761
  %bf.load159 = load i64, i64* %ignored_flag158, align 8, !dbg !5761
  %bf.cast16213 = and i64 %bf.load159, 1024, !dbg !5761
  %tobool163 = icmp eq i64 %bf.cast16213, 0, !dbg !5761
  br i1 %tobool163, label %if.then164, label %if.end180, !dbg !5762

if.then164:                                       ; preds = %land.lhs.true156
  %38 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_minimal**, !dbg !5763
  %name = getelementptr inbounds i64, i64* %33, i64 4, !dbg !5763
  %39 = bitcast i64* %name to %union.tree_node**, !dbg !5763
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !5763
  %tobool165 = icmp eq %union.tree_node* %40, null, !dbg !5763
  br i1 %tobool165, label %land.lhs.true166, label %if.end176, !dbg !5766

land.lhs.true166:                                 ; preds = %if.then164
  %name168 = getelementptr inbounds i64, i64* %36, i64 4, !dbg !5767
  %41 = bitcast i64* %name168 to %union.tree_node**, !dbg !5767
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !5767
  %tobool169 = icmp eq %union.tree_node* %42, null, !dbg !5767
  br i1 %tobool169, label %if.end176, label %if.then170, !dbg !5768

if.then170:                                       ; preds = %land.lhs.true166
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5769
  %43 = bitcast i32* %str to i8**, !dbg !5769
  %44 = load i8*, i8** %43, align 8, !dbg !5769
  %call173 = tail call %union.tree_node* @create_tmp_var_name(i8* %44) #7, !dbg !5770
  %45 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %38, align 8, !dbg !5771
  %name175 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %45, i64 0, i32 3, !dbg !5771
  store %union.tree_node* %call173, %union.tree_node** %name175, align 8, !dbg !5772
  %.pre = load %struct.tree_decl_common*, %struct.tree_decl_common** %35, align 8, !dbg !5773
  %debug_expr_is_from.phi.trans.insert = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %.pre, i64 0, i32 2, !dbg !5774
  %.phi.trans.insert = bitcast i40* %debug_expr_is_from.phi.trans.insert to i64*, !dbg !5774
  %bf.load178.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5775
  br label %if.end176, !dbg !5771

if.end176:                                        ; preds = %land.lhs.true166, %if.then164, %if.then170
  %.pre-phi = phi i64* [ %ignored_flag, %land.lhs.true166 ], [ %ignored_flag, %if.then164 ], [ %.phi.trans.insert, %if.then170 ], !dbg !5773
  %bf.load178 = phi i64 [ %bf.load143, %land.lhs.true166 ], [ %bf.load143, %if.then164 ], [ %bf.load178.pre, %if.then170 ], !dbg !5775
  %bf.set = or i64 %bf.load178, 16384, !dbg !5775
  store i64 %bf.set, i64* %.pre-phi, align 8, !dbg !5775
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5776
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5776
  tail call void @decl_debug_expr_insert(%union.tree_node* %46, %union.tree_node* %47) #6, !dbg !5776
  br label %if.end180, !dbg !5777

if.end180:                                        ; preds = %land.lhs.true156, %land.lhs.true142, %if.end131, %if.end176, %land.lhs.true147, %land.lhs.true133
  %48 = load i64*, i64** %20, align 8, !dbg !5778
  %bf.load182 = load i64, i64* %48, align 8, !dbg !5778
  %bf.cast18410 = and i64 %bf.load182, 65535, !dbg !5780
  %cmp185 = icmp eq i64 %bf.cast18410, 59, !dbg !5780
  %49 = bitcast i64* %48 to %union.tree_node*, !dbg !5781
  br i1 %cmp185, label %if.then187, label %if.else, !dbg !5781

if.then187:                                       ; preds = %if.end180
  %call188 = tail call %union.gimple_statement_d* @gimple_build_call_from_tree(%union.tree_node* %49) #6, !dbg !5782
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call188, metadata !5666, metadata !DIExpression()), !dbg !5672
  %call189 = tail call fastcc zeroext i8 @gimple_call_noreturn_p(%union.gimple_statement_d* %call188) #7, !dbg !5784
  %tobool190 = icmp eq i8 %call189, 0, !dbg !5784
  br i1 %tobool190, label %if.then191, label %if.end217, !dbg !5786

if.then191:                                       ; preds = %if.then187
  %50 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5787
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call188, %union.tree_node* %50) #7, !dbg !5788
  br label %if.end217, !dbg !5788

if.else:                                          ; preds = %if.end180
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5789
  %call193 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %51, %union.tree_node* %49) #6, !dbg !5789
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call193, metadata !5666, metadata !DIExpression()), !dbg !5672
  %52 = load i64*, i64** %.pre-phi19, align 8, !dbg !5791
  %bf.load195 = load i64, i64* %52, align 8, !dbg !5791
  %bf.cast197 = and i64 %bf.load195, 65535, !dbg !5791
  %arrayidx199 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast197, !dbg !5791
  %53 = load i32, i32* %arrayidx199, align 4, !dbg !5791
  %cmp200 = icmp ugt i32 %53, 3, !dbg !5791
  br i1 %cmp200, label %land.lhs.true202, label %cond.end215, !dbg !5791

land.lhs.true202:                                 ; preds = %if.else
  %cmp209 = icmp ult i32 %53, 11, !dbg !5791
  br i1 %cmp209, label %cond.true211, label %cond.end215, !dbg !5791

cond.true211:                                     ; preds = %land.lhs.true202
  %locus213 = getelementptr inbounds i64, i64* %52, i64 3, !dbg !5791
  %54 = bitcast i64* %locus213 to i32*, !dbg !5791
  %55 = load i32, i32* %54, align 8, !dbg !5791
  br label %cond.end215, !dbg !5791

cond.end215:                                      ; preds = %if.else, %land.lhs.true202, %cond.true211
  %cond216 = phi i32 [ %55, %cond.true211 ], [ 0, %land.lhs.true202 ], [ 0, %if.else ], !dbg !5791
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call193, i32 %cond216) #7, !dbg !5792
  br label %if.end217

if.end217:                                        ; preds = %if.then187, %if.then191, %cond.end215
  %assign.0 = phi %union.gimple_statement_d* [ %call193, %cond.end215 ], [ %call188, %if.then191 ], [ %call188, %if.then187 ], !dbg !5793
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %assign.0, metadata !5666, metadata !DIExpression()), !dbg !5672
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %assign.0) #7, !dbg !5794
  %56 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !5795
  %into_ssa218 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %56, i64 0, i32 10, !dbg !5797
  %57 = load i8, i8* %into_ssa218, align 1, !dbg !5797
  %tobool220 = icmp eq i8 %57, 0, !dbg !5795
  br i1 %tobool220, label %if.end237, label %land.lhs.true221, !dbg !5798

land.lhs.true221:                                 ; preds = %if.end217
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5799
  %call222 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %58) #6, !dbg !5800
  %tobool224 = icmp eq i8 %call222, 0, !dbg !5800
  br i1 %tobool224, label %if.end237, label %if.then225, !dbg !5801

if.then225:                                       ; preds = %land.lhs.true221
  %59 = load i64*, i64** %27, align 8, !dbg !5802
  %bf.load227 = load i64, i64* %59, align 8, !dbg !5802
  %bf.cast22911 = and i64 %bf.load227, 65535, !dbg !5802
  %cmp230 = icmp eq i64 %bf.cast22911, 141, !dbg !5802
  %60 = bitcast i64* %59 to %union.tree_node*, !dbg !5802
  br i1 %cmp230, label %cond.true232, label %cond.end234, !dbg !5802

cond.true232:                                     ; preds = %if.then225
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4538, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5802
  %.pre16 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5804
  br label %cond.end234, !dbg !5802

cond.end234:                                      ; preds = %if.then225, %cond.true232
  %61 = phi %union.tree_node* [ %60, %if.then225 ], [ %.pre16, %cond.true232 ], !dbg !5804
  %call236 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %61, %union.gimple_statement_d* %assign.0) #7, !dbg !5805
  store %union.tree_node* %call236, %union.tree_node** %arrayidx3, align 8, !dbg !5806
  tail call void @gimple_set_lhs(%union.gimple_statement_d* %assign.0, %union.tree_node* %call236) #6, !dbg !5807
  br label %if.end237, !dbg !5808

if.end237:                                        ; preds = %land.lhs.true221, %if.end217, %cond.end234
  %tobool238 = icmp eq i8 %want_value, 0, !dbg !5809
  br i1 %tobool238, label %if.else241, label %if.then239, !dbg !5811

if.then239:                                       ; preds = %if.end237
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5812
  %call240 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %62) #7, !dbg !5814
  store %union.tree_node* %call240, %union.tree_node** %expr_p, align 8, !dbg !5815
  br label %cleanup243, !dbg !5816

if.else241:                                       ; preds = %if.end237
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !5817
  br label %cleanup243, !dbg !5818

cleanup243:                                       ; preds = %if.end74, %if.end49, %if.end68, %if.end63, %cleanup, %if.else241, %if.then239, %if.then129, %if.then60
  %retval.1 = phi i32 [ 1, %cleanup ], [ 1, %if.then129 ], [ 0, %if.then239 ], [ 1, %if.else241 ], [ 1, %if.then60 ], [ %call50, %if.end49 ], [ -2, %if.end63 ], [ -2, %if.end68 ], [ %call75, %if.end74 ], !dbg !5672
  ret i32 %retval.1, !dbg !5819
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_boolean_expr(%union.tree_node** %expr_p, i32 %locus) unnamed_addr #5 !dbg !5820 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5824, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i32 %locus, metadata !5825, metadata !DIExpression()), !dbg !5827
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !5828
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5828
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5828
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5828
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5826, metadata !DIExpression()), !dbg !5827
  %.cast = bitcast %struct.tree_common* %1 to %union.tree_node*, !dbg !5829
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !5829
  %call = tail call %union.tree_node* @fold_convert_loc(i32 %locus, %union.tree_node* %2, %union.tree_node* %3) #6, !dbg !5829
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !5829
  %call2 = tail call %union.tree_node* @fold_convert_loc(i32 %locus, %union.tree_node* %2, %union.tree_node* %4) #6, !dbg !5829
  %call3 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %2, %union.tree_node* %.cast, %union.tree_node* %call, %union.tree_node* %call2) #6, !dbg !5829
  store %union.tree_node* %call3, %union.tree_node** %expr_p, align 8, !dbg !5830
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5831
  store i32 %locus, i32* %5, align 8, !dbg !5831
  ret i32 undef, !dbg !5832
}

declare dso_local void @recalculate_side_effects(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_addr_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) unnamed_addr #5 !dbg !5833 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5837, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5838, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !5839, metadata !DIExpression()), !dbg !5850
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5851
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5840, metadata !DIExpression()), !dbg !5850
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5852
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5852
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5841, metadata !DIExpression()), !dbg !5850
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5853
  %bf.load = load i64, i64* %.cast, align 8, !dbg !5853
  %bf.cast = and i64 %bf.load, 65535, !dbg !5853
  %arrayidx1 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5853
  %2 = load i32, i32* %arrayidx1, align 4, !dbg !5853
  %cmp = icmp ugt i32 %2, 3, !dbg !5853
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5853

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp ult i32 %2, 11, !dbg !5853
  br i1 %cmp8, label %cond.true, label %cond.end, !dbg !5853

cond.true:                                        ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5853
  %4 = load i32, i32* %3, align 8, !dbg !5853
  br label %cond.end, !dbg !5853

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5853
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5843, metadata !DIExpression()), !dbg !5850
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5854
  %bf.load11 = load i64, i64* %5, align 8, !dbg !5854
  %6 = trunc i64 %bf.load11 to i16, !dbg !5854
  switch i16 %6, label %sw.default [
    i16 47, label %do_indirect_ref
    i16 49, label %do_indirect_ref
    i16 118, label %sw.bb22
  ], !dbg !5855

do_indirect_ref:                                  ; preds = %if.end46, %cond.end, %cond.end
  %op0.0 = phi %union.tree_node* [ %1, %cond.end ], [ %1, %cond.end ], [ %15, %if.end46 ], !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !5841, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.label(metadata !5849), !dbg !5856
  %operands15 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5857
  %7 = load %union.tree_node*, %union.tree_node** %operands15, align 8, !dbg !5857
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5844, metadata !DIExpression()), !dbg !5858
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5859
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5859
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5847, metadata !DIExpression()), !dbg !5858
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5860
  %9 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5848, metadata !DIExpression()), !dbg !5858
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %8, %union.tree_node* %9) #6, !dbg !5861
  %tobool = icmp eq i8 %call, 0, !dbg !5861
  br i1 %tobool, label %if.then, label %if.end, !dbg !5863

if.then:                                          ; preds = %do_indirect_ref
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5864
  %call21 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %10, %union.tree_node* %7) #6, !dbg !5865
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !5844, metadata !DIExpression()), !dbg !5858
  br label %if.end, !dbg !5866

if.end:                                           ; preds = %do_indirect_ref, %if.then
  %op00.0 = phi %union.tree_node* [ %7, %do_indirect_ref ], [ %call21, %if.then ], !dbg !5858
  call void @llvm.dbg.value(metadata %union.tree_node* %op00.0, metadata !5844, metadata !DIExpression()), !dbg !5858
  store %union.tree_node* %op00.0, %union.tree_node** %expr_p, align 8, !dbg !5867
  call void @llvm.dbg.value(metadata i32 0, metadata !5842, metadata !DIExpression()), !dbg !5850
  br label %sw.epilog, !dbg !5868

sw.bb22:                                          ; preds = %cond.end
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5869
  %11 = load %union.tree_node*, %union.tree_node** %operands24, align 8, !dbg !5869
  %call26 = tail call zeroext i8 @tree_ssa_useless_type_conversion(%union.tree_node* %11) #6, !dbg !5871
  %tobool27 = icmp eq i8 %call26, 0, !dbg !5871
  br i1 %tobool27, label %if.end32, label %if.then28, !dbg !5872

if.then28:                                        ; preds = %sw.bb22
  %12 = load %union.tree_node*, %union.tree_node** %operands24, align 8, !dbg !5873
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5841, metadata !DIExpression()), !dbg !5850
  br label %if.end32, !dbg !5874

if.end32:                                         ; preds = %sw.bb22, %if.then28
  %op0.1 = phi %union.tree_node* [ %12, %if.then28 ], [ %1, %sw.bb22 ], !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !5841, metadata !DIExpression()), !dbg !5850
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5875
  %13 = load %union.tree_node*, %union.tree_node** %type34, align 8, !dbg !5875
  %operands36 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5876
  %14 = load %union.tree_node*, %union.tree_node** %operands36, align 8, !dbg !5876
  %call38 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %14) #6, !dbg !5877
  %call39 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %13, %union.tree_node* %call38) #6, !dbg !5878
  store %union.tree_node* %call39, %union.tree_node** %expr_p, align 8, !dbg !5879
  call void @llvm.dbg.value(metadata i32 0, metadata !5842, metadata !DIExpression()), !dbg !5850
  br label %sw.epilog, !dbg !5880

sw.default:                                       ; preds = %cond.end
  %call43 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_addressable, i32 3) #7, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %call43, metadata !5842, metadata !DIExpression()), !dbg !5850
  %cmp44 = icmp eq i32 %call43, -2, !dbg !5882
  br i1 %cmp44, label %sw.epilog, label %if.end46, !dbg !5884

if.end46:                                         ; preds = %sw.default
  tail call fastcc void @prepare_gimple_addressable(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %pre_p) #7, !dbg !5885
  %15 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5841, metadata !DIExpression()), !dbg !5850
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5887
  %bf.load54 = load i64, i64* %16, align 8, !dbg !5887
  %bf.cast561 = and i64 %bf.load54, 65535, !dbg !5889
  %cmp57 = icmp eq i64 %bf.cast561, 47, !dbg !5889
  br i1 %cmp57, label %do_indirect_ref, label %if.end59, !dbg !5890

if.end59:                                         ; preds = %if.end46
  tail call void @mark_addressable(%union.tree_node* %15) #7, !dbg !5891
  %type64 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5892
  %17 = load %union.tree_node*, %union.tree_node** %type64, align 8, !dbg !5892
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5894
  %18 = bitcast %union.tree_node** %type66 to %struct.tree_common**, !dbg !5894
  %19 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !5894
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !5894
  %20 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !5894
  %call69 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %17, %union.tree_node* %20) #6, !dbg !5895
  %tobool70 = icmp eq i8 %call69, 0, !dbg !5895
  br i1 %tobool70, label %if.then71, label %if.end59.if.end73_crit_edge, !dbg !5896

if.end59.if.end73_crit_edge:                      ; preds = %if.end59
  %.pre = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5897
  br label %if.end73, !dbg !5896

if.then71:                                        ; preds = %if.end59
  %call72 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %15) #6, !dbg !5898
  store %union.tree_node* %call72, %union.tree_node** %expr_p, align 8, !dbg !5899
  br label %if.end73, !dbg !5900

if.end73:                                         ; preds = %if.end59.if.end73_crit_edge, %if.then71
  %21 = phi %union.tree_node* [ %.pre, %if.end59.if.end73_crit_edge ], [ %call72, %if.then71 ], !dbg !5897
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %21) #6, !dbg !5901
  %22 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !5902
  %23 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !5904
  %24 = load %struct.tree_common*, %struct.tree_common** %23, align 8, !dbg !5904
  %type77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i64 0, i32 2, !dbg !5904
  %25 = load %union.tree_node*, %union.tree_node** %type77, align 8, !dbg !5904
  %call78 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %22, %union.tree_node* %25) #6, !dbg !5905
  %tobool79 = icmp eq i8 %call78, 0, !dbg !5905
  br i1 %tobool79, label %if.then80, label %sw.epilog, !dbg !5906

if.then80:                                        ; preds = %if.end73
  %26 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !5907
  %27 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5907
  %call83 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %26, %union.tree_node* %27) #6, !dbg !5907
  store %union.tree_node* %call83, %union.tree_node** %expr_p, align 8, !dbg !5908
  br label %sw.epilog, !dbg !5909

sw.epilog:                                        ; preds = %if.end73, %if.then80, %sw.default, %if.end32, %if.end
  %ret.0 = phi i32 [ 0, %if.end ], [ 0, %if.end32 ], [ -2, %sw.default ], [ %call43, %if.then80 ], [ %call43, %if.end73 ], !dbg !5910
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !5842, metadata !DIExpression()), !dbg !5850
  ret i32 %ret.0, !dbg !5911
}

declare dso_local i32 @gimplify_va_arg_expr(%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_conversion(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !5912 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !5916, metadata !DIExpression()), !dbg !5922
  %0 = bitcast %union.tree_node** %expr_p to i64**, !dbg !5923
  %1 = load i64*, i64** %0, align 8, !dbg !5923
  %bf.load = load i64, i64* %1, align 8, !dbg !5923
  %bf.cast = and i64 %bf.load, 65535, !dbg !5923
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5923
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5923
  %cmp = icmp ugt i32 %2, 3, !dbg !5923
  %3 = bitcast i64* %1 to %struct.tree_exp*, !dbg !5923
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5923

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %2, 11, !dbg !5923
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5923

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %1, i64 3, !dbg !5923
  %4 = bitcast i64* %locus to i32*, !dbg !5923
  %5 = load i32, i32* %4, align 8, !dbg !5923
  br label %cond.end, !dbg !5923

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5923
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5918, metadata !DIExpression()), !dbg !5922
  %cmp12 = icmp eq i64 %bf.cast, 116, !dbg !5924
  br i1 %cmp12, label %cond.end20, label %lor.lhs.false, !dbg !5924

lor.lhs.false:                                    ; preds = %cond.end
  %cmp17 = icmp eq i64 %bf.cast, 113, !dbg !5924
  br i1 %cmp17, label %cond.end20, label %cond.true18, !dbg !5924

cond.true18:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1751, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5924
  %.phi.trans.insert = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5922
  %.pre = load %struct.tree_exp*, %struct.tree_exp** %.phi.trans.insert, align 8, !dbg !5925
  br label %cond.end20, !dbg !5924

cond.end20:                                       ; preds = %cond.end, %lor.lhs.false, %cond.true18
  %6 = phi %struct.tree_exp* [ %3, %cond.end ], [ %3, %lor.lhs.false ], [ %.pre, %cond.true18 ], !dbg !5925
  %7 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5925
  %arrayidx23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %6, i64 0, i32 3, i64 0, !dbg !5925
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8, !dbg !5925
  %call = tail call %union.tree_node* @tree_strip_sign_nop_conversions(%union.tree_node* %8) #6, !dbg !5925
  %9 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !5925
  %arrayidx26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 0, !dbg !5925
  store %union.tree_node* %call, %union.tree_node** %arrayidx26, align 8, !dbg !5925
  %10 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !5926
  %call27 = tail call zeroext i8 @tree_ssa_useless_type_conversion(%union.tree_node* %10) #6, !dbg !5928
  %tobool = icmp eq i8 %call27, 0, !dbg !5928
  br i1 %tobool, label %cond.end20.if.end_crit_edge, label %if.then, !dbg !5929

cond.end20.if.end_crit_edge:                      ; preds = %cond.end20
  %.pre15 = load i64*, i64** %0, align 8, !dbg !5930
  %11 = bitcast i64* %.pre15 to %struct.tree_common*, !dbg !5929
  %12 = bitcast i64* %.pre15 to %struct.tree_exp*, !dbg !5929
  br label %if.end, !dbg !5929

if.then:                                          ; preds = %cond.end20
  %13 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !5932
  %arrayidx30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %13, i64 0, i32 3, i64 0, !dbg !5932
  %14 = bitcast %union.tree_node** %arrayidx30 to i64*, !dbg !5932
  %15 = load i64, i64* %14, align 8, !dbg !5932
  %16 = bitcast %union.tree_node** %expr_p to i64*, !dbg !5933
  store i64 %15, i64* %16, align 8, !dbg !5933
  %17 = inttoptr i64 %15 to i64*, !dbg !5934
  %18 = inttoptr i64 %15 to %struct.tree_common*, !dbg !5934
  %19 = inttoptr i64 %15 to %struct.tree_exp*, !dbg !5934
  br label %if.end, !dbg !5934

if.end:                                           ; preds = %cond.end20.if.end_crit_edge, %if.then
  %20 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %21 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %22 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ]
  %23 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ]
  %24 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %25 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %26 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ]
  %27 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ]
  %28 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %29 = phi %struct.tree_exp* [ %12, %cond.end20.if.end_crit_edge ], [ %19, %if.then ]
  %30 = phi %struct.tree_common* [ %11, %cond.end20.if.end_crit_edge ], [ %18, %if.then ]
  %31 = phi %struct.tree_common* [ %11, %cond.end20.if.end_crit_edge ], [ %18, %if.then ]
  %32 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ]
  %33 = phi i64* [ %.pre15, %cond.end20.if.end_crit_edge ], [ %17, %if.then ], !dbg !5930
  %bf.load32 = load i64, i64* %33, align 8, !dbg !5930
  %bf.cast343 = and i64 %bf.load32, 65535, !dbg !5930
  %cmp35 = icmp eq i64 %bf.cast343, 116, !dbg !5930
  br i1 %cmp35, label %land.lhs.true42, label %lor.lhs.false36, !dbg !5930

lor.lhs.false36:                                  ; preds = %if.end
  %bf.load38 = load i64, i64* %32, align 8, !dbg !5930
  %bf.cast404 = and i64 %bf.load38, 65535, !dbg !5930
  %cmp41 = icmp eq i64 %bf.cast404, 113, !dbg !5930
  br i1 %cmp41, label %land.lhs.true42, label %if.end108, !dbg !5935

land.lhs.true42:                                  ; preds = %lor.lhs.false36, %if.end
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !5936
  %34 = bitcast %union.tree_node** %type to i64**, !dbg !5936
  %35 = load i64*, i64** %34, align 8, !dbg !5936
  %bf.load44 = load i64, i64* %35, align 8, !dbg !5936
  %bf.cast4611 = and i64 %bf.load44, 65535, !dbg !5936
  %cmp47 = icmp eq i64 %bf.cast4611, 10, !dbg !5936
  br i1 %cmp47, label %land.lhs.true56, label %lor.lhs.false48, !dbg !5936

lor.lhs.false48:                                  ; preds = %land.lhs.true42
  %type50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %30, i64 0, i32 2, !dbg !5936
  %36 = bitcast %union.tree_node** %type50 to i64**, !dbg !5936
  %37 = load i64*, i64** %36, align 8, !dbg !5936
  %bf.load52 = load i64, i64* %37, align 8, !dbg !5936
  %bf.cast5412 = and i64 %bf.load52, 65535, !dbg !5936
  %cmp55 = icmp eq i64 %bf.cast5412, 12, !dbg !5936
  br i1 %cmp55, label %land.lhs.true56, label %if.end108, !dbg !5937

land.lhs.true56:                                  ; preds = %lor.lhs.false48, %land.lhs.true42
  %arrayidx59 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %29, i64 0, i32 3, i64 0, !dbg !5938
  %38 = bitcast %union.tree_node** %arrayidx59 to %struct.tree_common**, !dbg !5938
  %39 = load %struct.tree_common*, %struct.tree_common** %38, align 8, !dbg !5938
  %type61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i64 0, i32 2, !dbg !5938
  %40 = bitcast %union.tree_node** %type61 to i64**, !dbg !5938
  %41 = load i64*, i64** %40, align 8, !dbg !5938
  %bf.load63 = load i64, i64* %41, align 8, !dbg !5938
  %bf.cast6513 = and i64 %bf.load63, 65535, !dbg !5938
  %cmp66 = icmp eq i64 %bf.cast6513, 10, !dbg !5938
  br i1 %cmp66, label %land.lhs.true78, label %lor.lhs.false67, !dbg !5938

lor.lhs.false67:                                  ; preds = %land.lhs.true56
  %arrayidx70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %28, i64 0, i32 3, i64 0, !dbg !5938
  %42 = bitcast %union.tree_node** %arrayidx70 to %struct.tree_common**, !dbg !5938
  %43 = load %struct.tree_common*, %struct.tree_common** %42, align 8, !dbg !5938
  %type72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %43, i64 0, i32 2, !dbg !5938
  %44 = bitcast %union.tree_node** %type72 to i64**, !dbg !5938
  %45 = load i64*, i64** %44, align 8, !dbg !5938
  %bf.load74 = load i64, i64* %45, align 8, !dbg !5938
  %bf.cast7614 = and i64 %bf.load74, 65535, !dbg !5938
  %cmp77 = icmp eq i64 %bf.cast7614, 12, !dbg !5938
  br i1 %cmp77, label %land.lhs.true78, label %if.end108, !dbg !5939

land.lhs.true78:                                  ; preds = %lor.lhs.false67, %land.lhs.true56
  %bf.load80 = load i64, i64* %27, align 8, !dbg !5940
  %bf.cast82 = and i64 %bf.load80, 65535, !dbg !5940
  %arrayidx84 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast82, !dbg !5940
  %46 = load i32, i32* %arrayidx84, align 4, !dbg !5940
  %cmp85 = icmp ugt i32 %46, 3, !dbg !5940
  br i1 %cmp85, label %land.lhs.true86, label %cond.end98, !dbg !5940

land.lhs.true86:                                  ; preds = %land.lhs.true78
  %bf.load88 = load i64, i64* %26, align 8, !dbg !5940
  %bf.cast90 = and i64 %bf.load88, 65535, !dbg !5940
  %arrayidx92 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast90, !dbg !5940
  %47 = load i32, i32* %arrayidx92, align 4, !dbg !5940
  %cmp93 = icmp ult i32 %47, 11, !dbg !5940
  br i1 %cmp93, label %cond.true94, label %cond.end98, !dbg !5940

cond.true94:                                      ; preds = %land.lhs.true86
  %locus96 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %25, i64 0, i32 1, !dbg !5940
  %48 = load i32, i32* %locus96, align 8, !dbg !5940
  br label %cond.end98, !dbg !5940

cond.end98:                                       ; preds = %land.lhs.true78, %land.lhs.true86, %cond.true94
  %cond99 = phi i32 [ %48, %cond.true94 ], [ 0, %land.lhs.true86 ], [ 0, %land.lhs.true78 ], !dbg !5940
  %arrayidx102 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %24, i64 0, i32 3, i64 0, !dbg !5941
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx102, align 8, !dbg !5941
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5942
  %type104 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %24, i64 0, i32 0, i32 2, !dbg !5943
  %51 = load %union.tree_node*, %union.tree_node** %type104, align 8, !dbg !5943
  %call105 = tail call %union.tree_node* @maybe_fold_offset_to_address(i32 %cond99, %union.tree_node* %49, %union.tree_node* %50, %union.tree_node* %51) #6, !dbg !5944
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !5917, metadata !DIExpression()), !dbg !5922
  %cmp106 = icmp eq %union.tree_node* %call105, null, !dbg !5945
  br i1 %cmp106, label %cond.end98.if.end108_crit_edge, label %if.then107, !dbg !5946

cond.end98.if.end108_crit_edge:                   ; preds = %cond.end98
  %.pre16 = load i64*, i64** %0, align 8, !dbg !5947
  %52 = bitcast i64* %.pre16 to %struct.tree_exp*, !dbg !5946
  br label %if.end108, !dbg !5946

if.then107:                                       ; preds = %cond.end98
  store %union.tree_node* %call105, %union.tree_node** %expr_p, align 8, !dbg !5948
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5949
  %54 = bitcast %union.tree_node* %call105 to %struct.tree_exp*, !dbg !5949
  br label %if.end108, !dbg !5949

if.end108:                                        ; preds = %cond.end98.if.end108_crit_edge, %if.then107, %lor.lhs.false67, %lor.lhs.false48, %lor.lhs.false36
  %55 = phi %struct.tree_exp* [ %52, %cond.end98.if.end108_crit_edge ], [ %54, %if.then107 ], [ %20, %lor.lhs.false67 ], [ %20, %lor.lhs.false48 ], [ %20, %lor.lhs.false36 ]
  %56 = phi %struct.tree_exp* [ %52, %cond.end98.if.end108_crit_edge ], [ %54, %if.then107 ], [ %21, %lor.lhs.false67 ], [ %21, %lor.lhs.false48 ], [ %21, %lor.lhs.false36 ]
  %57 = phi i64* [ %.pre16, %cond.end98.if.end108_crit_edge ], [ %53, %if.then107 ], [ %22, %lor.lhs.false67 ], [ %22, %lor.lhs.false48 ], [ %22, %lor.lhs.false36 ]
  %58 = phi i64* [ %.pre16, %cond.end98.if.end108_crit_edge ], [ %53, %if.then107 ], [ %23, %lor.lhs.false67 ], [ %23, %lor.lhs.false48 ], [ %23, %lor.lhs.false36 ], !dbg !5947
  %bf.load110 = load i64, i64* %58, align 8, !dbg !5947
  %bf.cast1125 = and i64 %bf.load110, 65535, !dbg !5947
  %cmp113 = icmp eq i64 %bf.cast1125, 116, !dbg !5947
  br i1 %cmp113, label %if.then120, label %lor.lhs.false114, !dbg !5947

lor.lhs.false114:                                 ; preds = %if.end108
  %bf.load116 = load i64, i64* %57, align 8, !dbg !5947
  %bf.cast1186 = and i64 %bf.load116, 65535, !dbg !5947
  %cmp119 = icmp eq i64 %bf.cast1186, 113, !dbg !5947
  br i1 %cmp119, label %if.then120, label %if.end141, !dbg !5950

if.then120:                                       ; preds = %lor.lhs.false114, %if.end108
  %arrayidx123 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %56, i64 0, i32 3, i64 0, !dbg !5951
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx123, align 8, !dbg !5951
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !5919, metadata !DIExpression()), !dbg !5952
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5953
  %bf.load125 = load i64, i64* %60, align 8, !dbg !5953
  %bf.cast1279 = and i64 %bf.load125, 65535, !dbg !5955
  %cmp128 = icmp eq i64 %bf.cast1279, 41, !dbg !5955
  br i1 %cmp128, label %if.then129, label %if.else, !dbg !5956

if.then129:                                       ; preds = %if.then120
  %arrayidx132 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %55, i64 0, i32 3, i64 0, !dbg !5957
  tail call fastcc void @canonicalize_component_ref(%union.tree_node** nonnull %arrayidx132) #7, !dbg !5958
  br label %if.end141, !dbg !5958

if.else:                                          ; preds = %if.then120
  %cmp137 = icmp eq i64 %bf.cast1279, 121, !dbg !5959
  br i1 %cmp137, label %if.then138, label %if.end141, !dbg !5961

if.then138:                                       ; preds = %if.else
  tail call fastcc void @canonicalize_addr_expr(%union.tree_node** %expr_p) #7, !dbg !5962
  br label %if.end141, !dbg !5962

if.end141:                                        ; preds = %if.then129, %if.then138, %if.else, %lor.lhs.false114
  %61 = load i64*, i64** %0, align 8, !dbg !5963
  %bf.load143 = load i64, i64* %61, align 8, !dbg !5963
  %bf.cast1457 = and i64 %bf.load143, 65535, !dbg !5963
  %cmp146 = icmp eq i64 %bf.cast1457, 116, !dbg !5963
  br i1 %cmp146, label %land.lhs.true153, label %lor.lhs.false147, !dbg !5963

lor.lhs.false147:                                 ; preds = %if.end141
  %cmp152 = icmp eq i64 %bf.cast1457, 113, !dbg !5963
  br i1 %cmp152, label %land.lhs.true153, label %if.end165, !dbg !5965

land.lhs.true153:                                 ; preds = %lor.lhs.false147, %if.end141
  %type155 = getelementptr inbounds i64, i64* %61, i64 2, !dbg !5966
  %62 = bitcast i64* %type155 to %union.tree_node**, !dbg !5966
  %63 = load %union.tree_node*, %union.tree_node** %62, align 8, !dbg !5966
  %call156 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %63) #6, !dbg !5967
  %tobool157 = icmp eq i8 %call156, 0, !dbg !5967
  br i1 %tobool157, label %if.then158, label %if.end165, !dbg !5968

if.then158:                                       ; preds = %land.lhs.true153
  %64 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !5966
  %65 = load %struct.tree_common*, %struct.tree_common** %64, align 8, !dbg !5969
  %type160 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %65, i64 0, i32 2, !dbg !5969
  %66 = load %union.tree_node*, %union.tree_node** %type160, align 8, !dbg !5969
  %operands162 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %65, i64 1, i32 2, !dbg !5969
  %67 = load %union.tree_node*, %union.tree_node** %operands162, align 8, !dbg !5969
  %call164 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 118, %union.tree_node* %66, %union.tree_node* %67) #6, !dbg !5969
  store %union.tree_node* %call164, %union.tree_node** %expr_p, align 8, !dbg !5970
  br label %if.end165, !dbg !5971

if.end165:                                        ; preds = %land.lhs.true153, %if.then158, %lor.lhs.false147
  ret i32 undef, !dbg !5972
}

declare dso_local %union.tree_node* @fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_decl_expr(%union.tree_node** %stmt_p, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !5973 {
entry:
  %init = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %stmt_p, metadata !5975, metadata !DIExpression()), !dbg !5982
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !5976, metadata !DIExpression()), !dbg !5982
  %0 = bitcast %union.tree_node** %stmt_p to %struct.tree_exp**, !dbg !5983
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !5983
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !5984
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5984
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5978, metadata !DIExpression()), !dbg !5982
  store %union.tree_node* null, %union.tree_node** %stmt_p, align 8, !dbg !5985
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5986
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5986
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5988
  %cmp = icmp eq %union.tree_node* %3, %4, !dbg !5989
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5990
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5990

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5991
  %bf.load = load i64, i64* %6, align 8, !dbg !5991
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5993
  %cmp1 = icmp eq i64 %bf.cast1, 35, !dbg !5993
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !5994

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i64 %bf.cast1, 32, !dbg !5995
  br i1 %cmp6, label %land.lhs.true, label %if.end16, !dbg !5996

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %bf.load10 = load i64, i64* %5, align 8, !dbg !5997
  %bf.cast129 = and i64 %bf.load10, 131072, !dbg !5997
  %tobool = icmp eq i64 %bf.cast129, 0, !dbg !5997
  br i1 %tobool, label %if.then13, label %if.end16, !dbg !5998

if.then13:                                        ; preds = %land.lhs.true
  tail call void @gimplify_type_sizes(%union.tree_node* %3, %struct.gimple_seq_d** %seq_p) #7, !dbg !5999
  %bf.load18.pre = load i64, i64* %6, align 8, !dbg !6000
  br label %if.end16, !dbg !5999

if.end16:                                         ; preds = %land.lhs.true, %if.then13, %lor.lhs.false
  %bf.load18 = phi i64 [ %bf.load, %land.lhs.true ], [ %bf.load18.pre, %if.then13 ], [ %bf.load, %lor.lhs.false ], !dbg !6000
  %bf.cast203 = and i64 %bf.load18, 65535, !dbg !6001
  %cmp21 = icmp eq i64 %bf.cast203, 32, !dbg !6001
  br i1 %cmp21, label %land.lhs.true22, label %cleanup, !dbg !6002

land.lhs.true22:                                  ; preds = %if.end16
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6003
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !6003
  %bf.load23 = load i64, i64* %7, align 8, !dbg !6003
  %bf.cast264 = and i64 %bf.load23, 33554432, !dbg !6003
  %tobool27 = icmp eq i64 %bf.cast264, 0, !dbg !6003
  br i1 %tobool27, label %if.then28, label %cleanup, !dbg !6004

if.then28:                                        ; preds = %land.lhs.true22
  %8 = bitcast %union.tree_node** %init to i8*, !dbg !6005
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !6005
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !6006
  %9 = bitcast %union.tree_node** %initial to i64*, !dbg !6006
  %10 = load i64, i64* %9, align 8, !dbg !6006
  %11 = bitcast %union.tree_node** %init to i64*, !dbg !6007
  store i64 %10, i64* %11, align 8, !dbg !6007
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6008
  %12 = bitcast %union.tree_node** %size_unit to i64**, !dbg !6008
  %13 = load i64*, i64** %12, align 8, !dbg !6008
  %bf.load32 = load i64, i64* %13, align 8, !dbg !6008
  %bf.cast345 = and i64 %bf.load32, 65535, !dbg !6010
  %cmp35 = icmp eq i64 %bf.cast345, 23, !dbg !6010
  %14 = bitcast i64* %13 to %union.tree_node*, !dbg !6011
  %15 = inttoptr i64 %10 to %union.tree_node*, !dbg !6011
  br i1 %cmp35, label %lor.lhs.false36, label %if.then49, !dbg !6011

lor.lhs.false36:                                  ; preds = %if.then28
  %bf.load38 = load i64, i64* %6, align 8, !dbg !6012
  %bf.cast416 = and i64 %bf.load38, 67108864, !dbg !6012
  %tobool42 = icmp eq i64 %bf.cast416, 0, !dbg !6012
  %16 = load i32, i32* @flag_stack_check, align 4, !dbg !6013
  %cmp44 = icmp eq i32 %16, 1, !dbg !6014
  %or.cond = and i1 %tobool42, %cmp44, !dbg !6015
  br i1 %or.cond, label %land.lhs.true45, label %if.end50, !dbg !6015

land.lhs.true45:                                  ; preds = %lor.lhs.false36
  %call = tail call i32 @compare_tree_int(%union.tree_node* %14, i64 40) #6, !dbg !6016
  %cmp48 = icmp sgt i32 %call, 0, !dbg !6017
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !6018

if.then49:                                        ; preds = %if.then28, %land.lhs.true45
  tail call fastcc void @gimplify_vla_decl(%union.tree_node* %2, %struct.gimple_seq_d** %seq_p) #7, !dbg !6019
  br label %if.end50, !dbg !6019

if.end50:                                         ; preds = %lor.lhs.false36, %if.then49, %land.lhs.true45
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5979, metadata !DIExpression()), !dbg !6020
  %tobool51 = icmp eq i64 %10, 0, !dbg !6021
  br i1 %tobool51, label %if.end67, label %land.lhs.true52, !dbg !6023

land.lhs.true52:                                  ; preds = %if.end50
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5979, metadata !DIExpression()), !dbg !6020
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6024
  %cmp53 = icmp eq %union.tree_node* %17, %15, !dbg !6025
  br i1 %cmp53, label %if.end67, label %if.then54, !dbg !6026

if.then54:                                        ; preds = %land.lhs.true52
  %bf.load56 = load i64, i64* %6, align 8, !dbg !6027
  %bf.cast598 = and i64 %bf.load56, 67108864, !dbg !6027
  %tobool60 = icmp eq i64 %bf.cast598, 0, !dbg !6027
  br i1 %tobool60, label %if.then61, label %if.else, !dbg !6030

if.then61:                                        ; preds = %if.then54
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !dbg !6031
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6033
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5979, metadata !DIExpression()), !dbg !6020
  %call64 = tail call %union.tree_node* @build2_stat(i32 54, %union.tree_node* %18, %union.tree_node* %2, %union.tree_node* %15) #6, !dbg !6033
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !5979, metadata !DIExpression()), !dbg !6020
  store %union.tree_node* %call64, %union.tree_node** %init, align 8, !dbg !6034
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !5979, metadata !DIExpression()), !dbg !6020
  tail call void @gimplify_and_add(%union.tree_node* %call64, %struct.gimple_seq_d** %seq_p) #7, !dbg !6035
  %.cast = bitcast %union.tree_node* %call64 to i8*, !dbg !6036
  tail call void @ggc_free(i8* %.cast) #6, !dbg !6037
  br label %if.end67, !dbg !6038

if.else:                                          ; preds = %if.then54
  call void @llvm.dbg.value(metadata %union.tree_node** %init, metadata !5979, metadata !DIExpression(DW_OP_deref)), !dbg !6020
  %call65 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %init, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @force_labels_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !6039
  br label %if.end67

if.end67:                                         ; preds = %land.lhs.true52, %if.end50, %if.then61, %if.else
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6040
  %19 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !6040
  %bf.load68 = load i32, i32* %19, align 8, !dbg !6040
  %bf.clear70 = and i32 %bf.load68, 256, !dbg !6040
  %tobool71 = icmp eq i32 %bf.clear70, 0, !dbg !6040
  br i1 %tobool71, label %land.lhs.true72, label %if.end82, !dbg !6042

land.lhs.true72:                                  ; preds = %if.end67
  %bf.load74 = load i64, i64* %7, align 8, !dbg !6043
  %bf.cast777 = and i64 %bf.load74, 4096, !dbg !6043
  %tobool78 = icmp eq i64 %bf.cast777, 0, !dbg !6043
  br i1 %tobool78, label %if.end82, label %land.lhs.true79, !dbg !6044

land.lhs.true79:                                  ; preds = %land.lhs.true72
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6045
  %20 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6045
  %cmp80 = icmp eq %union.tree_node* %20, null, !dbg !6046
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !6047

if.then81:                                        ; preds = %land.lhs.true79
  call void @gimple_add_tmp_var(%union.tree_node* %2) #7, !dbg !6048
  br label %if.end82, !dbg !6048

if.end82:                                         ; preds = %land.lhs.true72, %if.end67, %if.then81, %land.lhs.true79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !6049
  br label %cleanup, !dbg !6050

cleanup:                                          ; preds = %land.lhs.true22, %if.end16, %if.end82, %entry
  %retval.0 = phi i32 [ -2, %entry ], [ 1, %if.end82 ], [ 1, %land.lhs.true22 ], [ 1, %if.end16 ], !dbg !5982
  ret i32 %retval.0, !dbg !6051
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_bind_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6052 {
entry:
  %body = alloca %struct.gimple_seq_d*, align 8
  %stack_save = alloca %union.gimple_statement_d*, align 8
  %stack_restore = alloca %union.gimple_statement_d*, align 8
  %cleanup = alloca %struct.gimple_seq_d*, align 8
  %new_body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6054, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6055, metadata !DIExpression()), !dbg !6075
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !6076
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6056, metadata !DIExpression()), !dbg !6075
  %1 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6077
  %save_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %1, i64 0, i32 9, !dbg !6078
  %2 = load i8, i8* %save_stack, align 4, !dbg !6078
  call void @llvm.dbg.value(metadata i8 %2, metadata !6057, metadata !DIExpression()), !dbg !6075
  %3 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !6079
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6079
  %call = tail call %union.tree_node* @voidify_wrapper_expr(%union.tree_node* %0, %union.tree_node* null) #7, !dbg !6080
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6061, metadata !DIExpression()), !dbg !6075
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6081
  br label %for.cond, !dbg !6082

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %operands, %entry ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !6083
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !6058, metadata !DIExpression()), !dbg !6075
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !6084
  br i1 %tobool, label %for.end, label %for.body, !dbg !6084

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6085
  %bf.load = load i64, i64* %4, align 8, !dbg !6085
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6086
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6086
  br i1 %cmp, label %if.then, label %if.end31, !dbg !6087

if.then:                                          ; preds = %for.body
  %5 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !6088
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %5, metadata !6062, metadata !DIExpression()), !dbg !6089
  %tobool1 = icmp eq %struct.gimplify_omp_ctx* %5, null, !dbg !6090
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !6092

land.lhs.true:                                    ; preds = %if.then
  %call2 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* nonnull %t.0) #7, !dbg !6093
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6093
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !6094

land.lhs.true4:                                   ; preds = %land.lhs.true
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6095
  %6 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !6095
  %bf.load5 = load i32, i32* %6, align 8, !dbg !6095
  %bf.clear6 = and i32 %bf.load5, 256, !dbg !6095
  %tobool7 = icmp eq i32 %bf.clear6, 0, !dbg !6095
  br i1 %tobool7, label %if.then10, label %lor.lhs.false, !dbg !6096

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %5, i64 0, i32 1, !dbg !6097
  %7 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !6097
  %8 = ptrtoint %union.tree_node* %t.0 to i64, !dbg !6098
  %call8 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %7, i64 %8) #6, !dbg !6099
  %cmp9 = icmp eq %struct.splay_tree_node_s* %call8, null, !dbg !6100
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !6101

if.then10:                                        ; preds = %land.lhs.true4, %lor.lhs.false
  %9 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !6102
  tail call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %9, %union.tree_node* nonnull %t.0, i32 129) #7, !dbg !6103
  br label %if.end, !dbg !6103

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then10, %lor.lhs.false
  %seen_in_bind_expr12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6104
  %10 = bitcast i24* %seen_in_bind_expr12 to i32*, !dbg !6104
  %bf.load13 = load i32, i32* %10, align 8, !dbg !6105
  %bf.set = or i32 %bf.load13, 256, !dbg !6105
  store i32 %bf.set, i32* %10, align 8, !dbg !6105
  %bf.clear18 = and i32 %bf.load13, 2, !dbg !6106
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !6106
  br i1 %tobool19, label %if.end31, label %land.lhs.true20, !dbg !6108

land.lhs.true20:                                  ; preds = %if.end
  %call21 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* nonnull %t.0) #7, !dbg !6109
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6109
  br i1 %tobool22, label %land.lhs.true23, label %if.end31, !dbg !6110

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6111
  %tobool24 = icmp eq %struct.function* %11, null, !dbg !6111
  br i1 %tobool24, label %if.end31, label %if.then25, !dbg !6112

if.then25:                                        ; preds = %land.lhs.true23
  %has_local_explicit_reg_vars = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 20, !dbg !6113
  %bf.load27 = load i32, i32* %has_local_explicit_reg_vars, align 8, !dbg !6114
  %bf.set29 = or i32 %bf.load27, 536870912, !dbg !6114
  store i32 %bf.set29, i32* %has_local_explicit_reg_vars, align 8, !dbg !6114
  br label %if.end31, !dbg !6115

if.end31:                                         ; preds = %land.lhs.true23, %land.lhs.true20, %if.end, %if.then25, %for.body
  %12 = load i32, i32* @optimize, align 4, !dbg !6116
  %tobool32 = icmp eq i32 %12, 0, !dbg !6116
  br i1 %tobool32, label %for.inc, label %land.lhs.true33, !dbg !6118

land.lhs.true33:                                  ; preds = %if.end31
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6119
  %13 = bitcast %union.tree_node** %type to i64**, !dbg !6119
  %14 = load i64*, i64** %13, align 8, !dbg !6119
  %bf.load35 = load i64, i64* %14, align 8, !dbg !6119
  %bf.cast372 = and i64 %bf.load35, 65535, !dbg !6120
  %cmp38 = icmp eq i64 %bf.cast372, 13, !dbg !6120
  br i1 %cmp38, label %land.lhs.true47, label %lor.lhs.false39, !dbg !6121

lor.lhs.false39:                                  ; preds = %land.lhs.true33
  %cmp46 = icmp eq i64 %bf.cast372, 14, !dbg !6122
  br i1 %cmp46, label %land.lhs.true47, label %for.inc, !dbg !6123

land.lhs.true47:                                  ; preds = %lor.lhs.false39, %land.lhs.true33
  %bf.load49 = load i64, i64* %4, align 8, !dbg !6124
  %bf.cast524 = and i64 %bf.load49, 524288, !dbg !6124
  %tobool53 = icmp eq i64 %bf.cast524, 0, !dbg !6124
  br i1 %tobool53, label %land.lhs.true54, label %for.inc, !dbg !6125

land.lhs.true54:                                  ; preds = %land.lhs.true47
  %bf.cast585 = and i64 %bf.load49, 65535, !dbg !6126
  %cmp59 = icmp eq i64 %bf.cast585, 32, !dbg !6126
  br i1 %cmp59, label %land.lhs.true60, label %for.inc, !dbg !6127

land.lhs.true60:                                  ; preds = %land.lhs.true54
  %hard_register62 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6128
  %15 = bitcast i24* %hard_register62 to i32*, !dbg !6128
  %bf.load63 = load i32, i32* %15, align 8, !dbg !6128
  %bf.clear65 = and i32 %bf.load63, 2, !dbg !6128
  %tobool66 = icmp eq i32 %bf.clear65, 0, !dbg !6128
  br i1 %tobool66, label %land.lhs.true67, label %for.inc, !dbg !6129

land.lhs.true67:                                  ; preds = %land.lhs.true60
  %call68 = tail call zeroext i8 @needs_to_live_in_memory(%union.tree_node* nonnull %t.0) #6, !dbg !6130
  %tobool69 = icmp eq i8 %call68, 0, !dbg !6130
  br i1 %tobool69, label %if.then70, label %for.inc, !dbg !6131

if.then70:                                        ; preds = %land.lhs.true67
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6132
  %16 = bitcast i40* %gimple_reg_flag to i64*, !dbg !6132
  %bf.load71 = load i64, i64* %16, align 8, !dbg !6133
  %bf.set73 = or i64 %bf.load71, 134217728, !dbg !6133
  store i64 %bf.set73, i64* %16, align 8, !dbg !6133
  br label %for.inc, !dbg !6132

for.inc:                                          ; preds = %land.lhs.true67, %land.lhs.true60, %land.lhs.true47, %if.end31, %lor.lhs.false39, %land.lhs.true54, %if.then70
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6134
  br label %for.cond, !dbg !6135, !llvm.loop !6136

for.end:                                          ; preds = %for.cond
  %17 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6138
  %arrayidx81 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6139
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8, !dbg !6139
  %call82 = tail call %union.gimple_statement_d* @gimple_build_bind(%union.tree_node* %17, %struct.gimple_seq_d* null, %union.tree_node* %18) #6, !dbg !6140
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call82, metadata !6059, metadata !DIExpression()), !dbg !6075
  tail call fastcc void @gimple_push_bind_expr(%union.gimple_statement_d* %call82) #7, !dbg !6141
  %19 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6142
  %save_stack83 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %19, i64 0, i32 9, !dbg !6143
  store i8 0, i8* %save_stack83, align 4, !dbg !6144
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !6060, metadata !DIExpression()), !dbg !6075
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !6145
  %arrayidx86 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6146
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !6060, metadata !DIExpression(DW_OP_deref)), !dbg !6075
  %call87 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx86, %struct.gimple_seq_d** nonnull %body) #7, !dbg !6147
  %20 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !6148
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %20, metadata !6060, metadata !DIExpression()), !dbg !6075
  call fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %call82, %struct.gimple_seq_d* %20) #7, !dbg !6149
  %21 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6150
  %save_stack88 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %21, i64 0, i32 9, !dbg !6151
  %22 = load i8, i8* %save_stack88, align 4, !dbg !6151
  %tobool89 = icmp eq i8 %22, 0, !dbg !6150
  br i1 %tobool89, label %if.end93, label %if.then90, !dbg !6152

if.then90:                                        ; preds = %for.end
  %23 = bitcast %union.gimple_statement_d** %stack_save to i8*, !dbg !6153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8, !dbg !6153
  %24 = bitcast %union.gimple_statement_d** %stack_restore to i8*, !dbg !6153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8, !dbg !6153
  %25 = bitcast %struct.gimple_seq_d** %cleanup to i8*, !dbg !6154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8, !dbg !6154
  %26 = bitcast %struct.gimple_seq_d** %new_body to i8*, !dbg !6154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8, !dbg !6154
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stack_save, metadata !6068, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stack_restore, metadata !6071, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  call fastcc void @build_stack_save_restore(%union.gimple_statement_d** nonnull %stack_save, %union.gimple_statement_d** nonnull %stack_restore) #7, !dbg !6156
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !6074, metadata !DIExpression()), !dbg !6155
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_body, align 8, !dbg !6157
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !6073, metadata !DIExpression()), !dbg !6155
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %cleanup, align 8, !dbg !6158
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stack_restore, align 8, !dbg !6159
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %27, metadata !6071, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup, metadata !6073, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %cleanup, %union.gimple_statement_d* %27) #7, !dbg !6160
  %call91 = call fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %call82) #7, !dbg !6161
  %28 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup, align 8, !dbg !6162
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %28, metadata !6073, metadata !DIExpression()), !dbg !6155
  %call92 = call %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d* %call91, %struct.gimple_seq_d* %28, i32 2) #6, !dbg !6163
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call92, metadata !6072, metadata !DIExpression()), !dbg !6155
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stack_save, align 8, !dbg !6164
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %29, metadata !6068, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_body, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_body, %union.gimple_statement_d* %29) #7, !dbg !6165
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_body, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_body, %union.gimple_statement_d* %call92) #7, !dbg !6166
  %30 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_body, align 8, !dbg !6167
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %30, metadata !6074, metadata !DIExpression()), !dbg !6155
  call fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %call82, %struct.gimple_seq_d* %30) #7, !dbg !6168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8, !dbg !6169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8, !dbg !6169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8, !dbg !6169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8, !dbg !6169
  %.pre = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6170
  br label %if.end93, !dbg !6171

if.end93:                                         ; preds = %for.end, %if.then90
  %31 = phi %struct.gimplify_ctx* [ %21, %for.end ], [ %.pre, %if.then90 ], !dbg !6170
  %save_stack94 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %31, i64 0, i32 9, !dbg !6172
  store i8 %2, i8* %save_stack94, align 4, !dbg !6173
  call fastcc void @gimple_pop_bind_expr() #7, !dbg !6174
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call82) #7, !dbg !6175
  %tobool95 = icmp eq %union.tree_node* %call, null, !dbg !6176
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !6178

if.then96:                                        ; preds = %if.end93
  br label %cleanup98, !dbg !6179

if.end97:                                         ; preds = %if.end93
  br label %cleanup98, !dbg !6181

cleanup98:                                        ; preds = %if.end97, %if.then96
  %storemerge = phi %union.tree_node* [ null, %if.end97 ], [ %call, %if.then96 ], !dbg !6075
  %retval.0 = phi i32 [ 1, %if.end97 ], [ 0, %if.then96 ], !dbg !6075
  store %union.tree_node* %storemerge, %union.tree_node** %expr_p, align 8, !dbg !6075
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6182
  ret i32 %retval.0, !dbg !6182
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_loop_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6183 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6185, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6186, metadata !DIExpression()), !dbg !6189
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6190
  %exit_label = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 4, !dbg !6191
  %1 = bitcast %union.tree_node** %exit_label to i64*, !dbg !6191
  %2 = load i64, i64* %1, align 8, !dbg !6191
  %call = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !6192
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6188, metadata !DIExpression()), !dbg !6189
  %call1 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call) #6, !dbg !6193
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call1) #7, !dbg !6194
  %3 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6195
  %exit_label2 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 4, !dbg !6196
  store %union.tree_node* null, %union.tree_node** %exit_label2, align 8, !dbg !6197
  %4 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6198
  %5 = load %struct.tree_exp*, %struct.tree_exp** %4, align 8, !dbg !6198
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 3, i64 0, !dbg !6198
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6198
  tail call void @gimplify_and_add(%union.tree_node* %6, %struct.gimple_seq_d** %pre_p) #7, !dbg !6199
  %call3 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call) #6, !dbg !6200
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call3) #7, !dbg !6201
  %7 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6202
  %exit_label4 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %7, i64 0, i32 4, !dbg !6204
  %8 = load %union.tree_node*, %union.tree_node** %exit_label4, align 8, !dbg !6204
  %tobool = icmp eq %union.tree_node* %8, null, !dbg !6202
  br i1 %tobool, label %if.end, label %if.then, !dbg !6205

if.then:                                          ; preds = %entry
  %call6 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* nonnull %8) #6, !dbg !6206
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call6) #7, !dbg !6207
  %.pre = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6208
  br label %if.end, !dbg !6207

if.end:                                           ; preds = %entry, %if.then
  %9 = phi %struct.gimplify_ctx* [ %7, %entry ], [ %.pre, %if.then ], !dbg !6208
  %exit_label7 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 4, !dbg !6209
  %10 = bitcast %union.tree_node** %exit_label7 to i64*, !dbg !6210
  store i64 %2, i64* %10, align 8, !dbg !6210
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !6211
  ret i32 undef, !dbg !6212
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_switch_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6213 {
entry:
  %switch_body_seq = alloca %struct.gimple_seq_d*, align 8
  %labels = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6215, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6216, metadata !DIExpression()), !dbg !6245
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !6246
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6217, metadata !DIExpression()), !dbg !6245
  %1 = bitcast %struct.gimple_seq_d** %switch_body_seq to i8*, !dbg !6247
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6247
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !6218, metadata !DIExpression()), !dbg !6245
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %switch_body_seq, align 8, !dbg !6248
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6249
  %call = tail call i32 @gimplify_expr(%union.tree_node** nonnull %operands, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %call, metadata !6219, metadata !DIExpression()), !dbg !6245
  %switch = icmp ugt i32 %call, -3, !dbg !6251
  br i1 %switch, label %cleanup, label %if.end, !dbg !6251

if.end:                                           ; preds = %entry
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6253
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !6253
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !6253
  br i1 %tobool, label %if.else259, label %if.then5, !dbg !6254

if.then5:                                         ; preds = %if.end
  %3 = bitcast %struct.VEC_tree_heap** %labels to i8*, !dbg !6255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6255
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6224, metadata !DIExpression()), !dbg !6256
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6257
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !6257
  %tobool9 = icmp eq %union.tree_node* %4, null, !dbg !6257
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !6257

cond.true:                                        ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1456, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6257
  br label %cond.end, !dbg !6257

cond.end:                                         ; preds = %if.then5, %cond.true
  %5 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6258
  %case_labels = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %5, i64 0, i32 6, !dbg !6259
  %6 = bitcast %struct.VEC_tree_heap** %case_labels to i64*, !dbg !6259
  %7 = load i64, i64* %6, align 8, !dbg !6259
  %call10 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 8) #7, !dbg !6260
  %8 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6261
  %case_labels11 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %8, i64 0, i32 6, !dbg !6262
  store %struct.VEC_tree_heap* %call10, %struct.VEC_tree_heap** %case_labels11, align 8, !dbg !6263
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body_seq, metadata !6218, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  %call15 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx4, %struct.gimple_seq_d** nonnull %switch_body_seq) #7, !dbg !6264
  %9 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6265
  %case_labels16 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 6, !dbg !6266
  %10 = bitcast %struct.VEC_tree_heap** %case_labels16 to i64*, !dbg !6266
  %11 = load i64, i64* %10, align 8, !dbg !6266
  %12 = bitcast %struct.VEC_tree_heap** %labels to i64*, !dbg !6267
  store i64 %11, i64* %12, align 8, !dbg !6267
  store i64 %7, i64* %10, align 8, !dbg !6268
  call void @llvm.dbg.value(metadata i64 0, metadata !6225, metadata !DIExpression()), !dbg !6256
  %13 = inttoptr i64 %11 to %struct.VEC_tree_heap*, !dbg !6269
  br label %while.cond, !dbg !6269

while.cond:                                       ; preds = %if.end64, %cond.end
  %14 = phi %struct.VEC_tree_heap* [ %13, %cond.end ], [ %.pre, %if.end64 ]
  %15 = phi %struct.VEC_tree_heap* [ %13, %cond.end ], [ %.pre, %if.end64 ], !dbg !6256
  %16 = phi %struct.VEC_tree_heap* [ %13, %cond.end ], [ %.pre, %if.end64 ], !dbg !6270
  %default_case.0 = phi %union.tree_node* [ null, %cond.end ], [ %default_case.1, %if.end64 ], !dbg !6271
  %i.0 = phi i64 [ 0, %cond.end ], [ %i.1, %if.end64 ], !dbg !6272
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.0, metadata !6224, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !6270
  %call23 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6270
  %conv = zext i32 %call23 to i64, !dbg !6270
  %cmp24 = icmp ult i64 %i.0, %conv, !dbg !6273
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base28 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !6256
  br i1 %cmp24, label %while.body, label %while.end, !dbg !6269

while.body:                                       ; preds = %while.cond
  %conv32 = trunc i64 %i.0 to i32, !dbg !6274
  %call33 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base28, i32 %conv32) #7, !dbg !6274
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !6228, metadata !DIExpression()), !dbg !6275
  %operands35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6276
  %17 = load %union.tree_node*, %union.tree_node** %operands35, align 8, !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6230, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.value(metadata i8 0, metadata !6231, metadata !DIExpression()), !dbg !6275
  %tobool37 = icmp eq %union.tree_node* %17, null, !dbg !6277
  br i1 %tobool37, label %if.else, label %if.then38, !dbg !6278

if.then38:                                        ; preds = %while.body
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands35, i64 1, !dbg !6279
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8, !dbg !6279
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !6232, metadata !DIExpression()), !dbg !6280
  %tobool42 = icmp eq %union.tree_node* %18, null, !dbg !6281
  br i1 %tobool42, label %if.end52, label %land.lhs.true, !dbg !6283

land.lhs.true:                                    ; preds = %if.then38
  %call43 = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %18, %union.tree_node* nonnull %17) #6, !dbg !6284
  %tobool44 = icmp ne i32 %call43, 0, !dbg !6284
  %spec.select = zext i1 %tobool44 to i8, !dbg !6285
  br label %if.end52, !dbg !6285

if.else:                                          ; preds = %while.body
  %tobool47 = icmp eq %union.tree_node* %default_case.0, null, !dbg !6286
  br i1 %tobool47, label %if.end52, label %cond.true48, !dbg !6286

cond.true48:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1484, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6286
  br label %if.end52, !dbg !6286

if.end52:                                         ; preds = %if.then38, %if.else, %land.lhs.true, %cond.true48
  %default_case.1 = phi %union.tree_node* [ %default_case.0, %land.lhs.true ], [ %default_case.0, %if.then38 ], [ %call33, %if.else ], [ %call33, %cond.true48 ], !dbg !6256
  %remove_element.1 = phi i8 [ %spec.select, %land.lhs.true ], [ 0, %if.then38 ], [ 1, %if.else ], [ 1, %cond.true48 ], !dbg !6288
  call void @llvm.dbg.value(metadata i8 %remove_element.1, metadata !6231, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.1, metadata !6224, metadata !DIExpression()), !dbg !6256
  %tobool53 = icmp eq i8 %remove_element.1, 0, !dbg !6289
  br i1 %tobool53, label %if.else63, label %if.then54, !dbg !6291

if.then54:                                        ; preds = %if.end52
  %19 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %19, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %19, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base57 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %19, i64 0, i32 0, !dbg !6292
  %call62 = call fastcc %union.tree_node* @VEC_tree_base_ordered_remove(%struct.VEC_tree_base* %base57, i32 %conv32) #7, !dbg !6292
  br label %if.end64, !dbg !6292

if.else63:                                        ; preds = %if.end52
  %inc = add i64 %i.0, 1, !dbg !6293
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6225, metadata !DIExpression()), !dbg !6256
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.then54
  %i.1 = phi i64 [ %i.0, %if.then54 ], [ %inc, %if.else63 ], !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !6225, metadata !DIExpression()), !dbg !6256
  %.pre = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6270
  br label %while.cond, !dbg !6269, !llvm.loop !6294

while.end:                                        ; preds = %while.cond
  %.lcssa = phi %struct.VEC_tree_heap* [ %14, %while.cond ]
  %default_case.0.lcssa = phi %union.tree_node* [ %default_case.0, %while.cond ], !dbg !6271
  %i.0.lcssa = phi i64 [ %i.0, %while.cond ], !dbg !6272
  %base28.lcssa = phi %struct.VEC_tree_base* [ %base28, %while.cond ], !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.0.lcssa, metadata !6224, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.0.lcssa, metadata !6224, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.0.lcssa, metadata !6224, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6226, metadata !DIExpression()), !dbg !6256
  %call71 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base28.lcssa) #7, !dbg !6296
  %cmp72 = icmp eq i32 %call71, 0, !dbg !6296
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !6298

if.then74:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %.lcssa, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @sort_case_labels(%struct.VEC_tree_heap* %.lcssa) #7, !dbg !6299
  br label %if.end75, !dbg !6299

if.end75:                                         ; preds = %if.then74, %while.end
  %tobool76 = icmp eq %union.tree_node* %default_case.0.lcssa, null, !dbg !6300
  br i1 %tobool76, label %if.then77, label %if.end254, !dbg !6301

if.then77:                                        ; preds = %if.end75
  %type78 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6302
  %20 = load %union.tree_node*, %union.tree_node** %type78, align 8, !dbg !6302
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !6235, metadata !DIExpression()), !dbg !6303
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6304
  %cmp79 = icmp eq %union.tree_node* %20, %21, !dbg !6306
  br i1 %cmp79, label %if.then81, label %if.end87, !dbg !6307

if.then81:                                        ; preds = %if.then77
  %22 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !6308
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !6308
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !6308
  %24 = load %union.tree_node*, %union.tree_node** %type86, align 8, !dbg !6308
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !6235, metadata !DIExpression()), !dbg !6303
  br label %if.end87, !dbg !6309

if.end87:                                         ; preds = %if.then81, %if.then77
  %type.0 = phi %union.tree_node* [ %24, %if.then81 ], [ %20, %if.then77 ], !dbg !6303
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !6235, metadata !DIExpression()), !dbg !6303
  %tobool88 = icmp eq i64 %i.0.lcssa, 0, !dbg !6310
  br i1 %tobool88, label %if.end244, label %land.lhs.true89, !dbg !6311

land.lhs.true89:                                  ; preds = %if.end87
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6312
  %bf.load = load i64, i64* %25, align 8, !dbg !6312
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6312
  %cmp91 = icmp eq i64 %bf.cast1, 6, !dbg !6312
  br i1 %cmp91, label %land.lhs.true107, label %lor.lhs.false93, !dbg !6312

lor.lhs.false93:                                  ; preds = %land.lhs.true89
  %cmp98 = icmp eq i64 %bf.cast1, 7, !dbg !6312
  br i1 %cmp98, label %land.lhs.true107, label %lor.lhs.false100, !dbg !6312

lor.lhs.false100:                                 ; preds = %lor.lhs.false93
  %cmp105 = icmp eq i64 %bf.cast1, 8, !dbg !6312
  br i1 %cmp105, label %land.lhs.true107, label %if.end244, !dbg !6313

land.lhs.true107:                                 ; preds = %lor.lhs.false100, %lor.lhs.false93, %land.lhs.true89
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6314
  %26 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !6314
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !6314
  %tobool109 = icmp eq %union.tree_node* %27, null, !dbg !6314
  br i1 %tobool109, label %if.end244, label %land.lhs.true110, !dbg !6315

land.lhs.true110:                                 ; preds = %land.lhs.true107
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6316
  %28 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !6316
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !6316
  %tobool112 = icmp eq %union.tree_node* %29, null, !dbg !6316
  br i1 %tobool112, label %if.end244, label %land.lhs.true113, !dbg !6317

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %30 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base116 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %30, i64 0, i32 0, !dbg !6318
  %call120 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base116, i32 0) #7, !dbg !6318
  %operands122 = getelementptr inbounds %union.tree_node, %union.tree_node* %call120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6318
  %31 = load %union.tree_node*, %union.tree_node** %operands122, align 8, !dbg !6318
  %32 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !6319
  %call126 = call i32 @tree_int_cst_equal(%union.tree_node* %31, %union.tree_node* %32) #6, !dbg !6320
  %tobool127 = icmp eq i32 %call126, 0, !dbg !6320
  br i1 %tobool127, label %if.end244, label %if.then128, !dbg !6321

if.then128:                                       ; preds = %land.lhs.true113
  %33 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base133 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %33, i64 0, i32 0, !dbg !6322
  %34 = trunc i64 %i.0.lcssa to i32, !dbg !6322
  %conv137 = add i32 %34, -1, !dbg !6322
  %call138 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base133, i32 %conv137) #7, !dbg !6322
  %operands140 = getelementptr inbounds %union.tree_node, %union.tree_node* %call138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6322
  %arrayidx141 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands140, i64 1, !dbg !6322
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx141, align 8, !dbg !6322
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !6241, metadata !DIExpression()), !dbg !6323
  %tobool142 = icmp eq %union.tree_node* %35, null, !dbg !6324
  br i1 %tobool142, label %if.then143, label %if.end156, !dbg !6326

if.then143:                                       ; preds = %if.then128
  %36 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6327
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %36, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %36, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base146 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %36, i64 0, i32 0, !dbg !6327
  %call152 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base146, i32 %conv137) #7, !dbg !6327
  %operands154 = getelementptr inbounds %union.tree_node, %union.tree_node* %call152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6327
  %37 = load %union.tree_node*, %union.tree_node** %operands154, align 8, !dbg !6327
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6241, metadata !DIExpression()), !dbg !6323
  br label %if.end156, !dbg !6328

if.end156:                                        ; preds = %if.then128, %if.then143
  %high130.0 = phi %union.tree_node* [ %35, %if.then128 ], [ %37, %if.then143 ], !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %high130.0, metadata !6241, metadata !DIExpression()), !dbg !6323
  %38 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !6329
  %call159 = call i32 @tree_int_cst_equal(%union.tree_node* %high130.0, %union.tree_node* %38) #6, !dbg !6331
  %tobool160 = icmp eq i32 %call159, 0, !dbg !6331
  br i1 %tobool160, label %if.end244, label %for.cond.preheader, !dbg !6332

for.cond.preheader:                               ; preds = %if.end156
  br label %for.cond, !dbg !6333

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.2 = phi i64 [ %inc227, %for.inc ], [ 1, %for.cond.preheader ], !dbg !6336
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !6225, metadata !DIExpression()), !dbg !6256
  %cmp162 = icmp ult i64 %i.2, %i.0.lcssa, !dbg !6337
  br i1 %cmp162, label %for.body, label %for.end, !dbg !6333

for.body:                                         ; preds = %for.cond
  %39 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6339
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base166 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %39, i64 0, i32 0, !dbg !6339
  %conv170 = trunc i64 %i.2 to i32, !dbg !6339
  %call171 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base166, i32 %conv170) #7, !dbg !6339
  %operands173 = getelementptr inbounds %union.tree_node, %union.tree_node* %call171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6339
  %40 = load %union.tree_node*, %union.tree_node** %operands173, align 8, !dbg !6339
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6241, metadata !DIExpression()), !dbg !6323
  %41 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6341
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %41, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %41, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base177 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %41, i64 0, i32 0, !dbg !6341
  %conv182 = add i32 %conv170, -1, !dbg !6341
  %call183 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base177, i32 %conv182) #7, !dbg !6341
  %operands185 = getelementptr inbounds %union.tree_node, %union.tree_node* %call183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6341
  %arrayidx186 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands185, i64 1, !dbg !6341
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx186, align 8, !dbg !6341
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !6238, metadata !DIExpression()), !dbg !6323
  %tobool187 = icmp eq %union.tree_node* %42, null, !dbg !6342
  br i1 %tobool187, label %if.then188, label %if.end201, !dbg !6344

if.then188:                                       ; preds = %for.body
  %43 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6345
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %43, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %43, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base191 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %43, i64 0, i32 0, !dbg !6345
  %call197 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base191, i32 %conv182) #7, !dbg !6345
  %operands199 = getelementptr inbounds %union.tree_node, %union.tree_node* %call197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6345
  %44 = load %union.tree_node*, %union.tree_node** %operands199, align 8, !dbg !6345
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !6238, metadata !DIExpression()), !dbg !6323
  br label %if.end201, !dbg !6346

if.end201:                                        ; preds = %for.body, %if.then188
  %low129.0 = phi %union.tree_node* [ %42, %for.body ], [ %44, %if.then188 ], !dbg !6347
  call void @llvm.dbg.value(metadata %union.tree_node* %low129.0, metadata !6238, metadata !DIExpression()), !dbg !6323
  %int_cst202 = getelementptr inbounds %union.tree_node, %union.tree_node* %low129.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6348
  %low203 = bitcast i32* %int_cst202 to i64*, !dbg !6348
  %45 = load i64, i64* %low203, align 8, !dbg !6348
  %add = add i64 %45, 1, !dbg !6350
  %int_cst205 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6351
  %low206 = bitcast i32* %int_cst205 to i64*, !dbg !6351
  %46 = load i64, i64* %low206, align 8, !dbg !6351
  %cmp207 = icmp eq i64 %add, %46, !dbg !6352
  br i1 %cmp207, label %lor.lhs.false209, label %for.end, !dbg !6353

lor.lhs.false209:                                 ; preds = %if.end201
  %high212 = getelementptr inbounds i32, i32* %int_cst202, i64 2, !dbg !6354
  %47 = bitcast i32* %high212 to i64*, !dbg !6354
  %48 = load i64, i64* %47, align 8, !dbg !6354
  %cmp216 = icmp eq i64 %add, 0, !dbg !6355
  %conv218 = zext i1 %cmp216 to i64, !dbg !6356
  %add219 = add nsw i64 %48, %conv218, !dbg !6357
  %high222 = getelementptr inbounds i32, i32* %int_cst205, i64 2, !dbg !6358
  %49 = bitcast i32* %high222 to i64*, !dbg !6358
  %50 = load i64, i64* %49, align 8, !dbg !6358
  %cmp223 = icmp eq i64 %add219, %50, !dbg !6359
  br i1 %cmp223, label %for.inc, label %for.end, !dbg !6360

for.inc:                                          ; preds = %lor.lhs.false209
  %inc227 = add i64 %i.2, 1, !dbg !6361
  call void @llvm.dbg.value(metadata i64 %inc227, metadata !6225, metadata !DIExpression()), !dbg !6256
  br label %for.cond, !dbg !6362, !llvm.loop !6363

for.end:                                          ; preds = %lor.lhs.false209, %if.end201, %for.cond
  %i.2.lcssa = phi i64 [ %i.2, %lor.lhs.false209 ], [ %i.2, %if.end201 ], [ %i.2, %for.cond ], !dbg !6336
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i64 %i.2.lcssa, metadata !6225, metadata !DIExpression()), !dbg !6256
  %cmp228 = icmp eq i64 %i.2.lcssa, %i.0.lcssa, !dbg !6365
  br i1 %cmp228, label %if.then230, label %if.end244, !dbg !6367

if.then230:                                       ; preds = %for.end
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6368
  %52 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6368
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %52, metadata !6220, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %52, metadata !6220, metadata !DIExpression()), !dbg !6256
  %base233 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %52, i64 0, i32 0, !dbg !6368
  %call237 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base233, i32 0) #7, !dbg !6368
  %operands239 = getelementptr inbounds %union.tree_node, %union.tree_node* %call237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6368
  %arrayidx240 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands239, i64 2, !dbg !6368
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx240, align 8, !dbg !6368
  %call241 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %51, %union.tree_node* null, %union.tree_node* null, %union.tree_node* %53) #6, !dbg !6368
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !6224, metadata !DIExpression()), !dbg !6256
  br label %if.end244, !dbg !6369

if.end244:                                        ; preds = %if.end156, %land.lhs.true113, %land.lhs.true110, %land.lhs.true107, %if.end87, %if.then230, %for.end, %lor.lhs.false100
  %default_case.4 = phi %union.tree_node* [ null, %land.lhs.true113 ], [ null, %land.lhs.true110 ], [ null, %land.lhs.true107 ], [ null, %lor.lhs.false100 ], [ null, %if.end87 ], [ null, %if.end156 ], [ %call241, %if.then230 ], [ null, %for.end ], !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.4, metadata !6224, metadata !DIExpression()), !dbg !6256
  %tobool245 = icmp eq %union.tree_node* %default_case.4, null, !dbg !6370
  br i1 %tobool245, label %if.then246, label %if.end254, !dbg !6371

if.then246:                                       ; preds = %if.end244
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6372
  %call247 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !6372
  %call248 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %54, %union.tree_node* null, %union.tree_node* null, %union.tree_node* %call247) #6, !dbg !6372
  call void @llvm.dbg.value(metadata %union.tree_node* %call248, metadata !6224, metadata !DIExpression()), !dbg !6256
  %operands250 = getelementptr inbounds %union.tree_node, %union.tree_node* %call248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6373
  %arrayidx251 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands250, i64 2, !dbg !6373
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx251, align 8, !dbg !6373
  %call252 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %55) #6, !dbg !6374
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call252, metadata !6242, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body_seq, metadata !6218, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body_seq, %union.gimple_statement_d* %call252) #7, !dbg !6376
  br label %if.end254, !dbg !6377

if.end254:                                        ; preds = %if.end244, %if.end75, %if.then246
  %default_case.6 = phi %union.tree_node* [ %default_case.0.lcssa, %if.end75 ], [ %default_case.4, %if.end244 ], [ %call248, %if.then246 ], !dbg !6256
  call void @llvm.dbg.value(metadata %union.tree_node* %default_case.6, metadata !6224, metadata !DIExpression()), !dbg !6256
  %56 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6378
  %57 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6379
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %57, metadata !6220, metadata !DIExpression()), !dbg !6256
  %call258 = call %union.gimple_statement_d* @gimple_build_switch_vec(%union.tree_node* %56, %union.tree_node* %default_case.6, %struct.VEC_tree_heap* %57) #6, !dbg !6380
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call258, metadata !6227, metadata !DIExpression()), !dbg !6256
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call258) #7, !dbg !6381
  %58 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %switch_body_seq, align 8, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %58, metadata !6218, metadata !DIExpression()), !dbg !6245
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d* %58) #7, !dbg !6383
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %labels, metadata !6220, metadata !DIExpression(DW_OP_deref)), !dbg !6256
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %labels) #7, !dbg !6384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6385
  br label %cleanup, !dbg !6386

if.else259:                                       ; preds = %if.end
  %arrayidx262 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6387
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx262, align 8, !dbg !6387
  %tobool263 = icmp eq %union.tree_node* %59, null, !dbg !6387
  br i1 %tobool263, label %cond.true264, label %cleanup, !dbg !6387

cond.true264:                                     ; preds = %if.else259
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1562, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6387
  br label %cleanup, !dbg !6387

cleanup:                                          ; preds = %if.else259, %entry, %if.end254, %cond.true264
  %retval.0 = phi i32 [ %call, %entry ], [ 1, %cond.true264 ], [ 1, %if.else259 ], [ 1, %if.end254 ], !dbg !6245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6388
  ret i32 %retval.0, !dbg !6388
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_exit_expr(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !6389 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6391, metadata !DIExpression()), !dbg !6394
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6395
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !6395
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !6395
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6395
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6392, metadata !DIExpression()), !dbg !6394
  %3 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6396
  %exit_label = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 4, !dbg !6397
  %call = tail call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %exit_label) #7, !dbg !6398
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6393, metadata !DIExpression()), !dbg !6394
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6399
  %call1 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %4, %union.tree_node* %2, %union.tree_node* %call, %union.tree_node* null) #6, !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6393, metadata !DIExpression()), !dbg !6394
  store %union.tree_node* %call1, %union.tree_node** %expr_p, align 8, !dbg !6400
  ret i32 undef, !dbg !6401
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %seq_p, %union.gimple_statement_d* %gs) unnamed_addr #5 !dbg !6402 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !6406, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6407, metadata !DIExpression()), !dbg !6409
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !6410
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6410
  %cmp = icmp eq %union.gimple_statement_d* %gs, null, !dbg !6411
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6413

if.end:                                           ; preds = %entry
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq_p, align 8, !dbg !6414
  %cmp1 = icmp eq %struct.gimple_seq_d* %1, null, !dbg !6416
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6417

if.then2:                                         ; preds = %if.end
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !6418
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq_p, align 8, !dbg !6419
  br label %if.end3, !dbg !6420

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = phi %struct.gimple_seq_d* [ %call, %if.then2 ], [ %1, %if.end ], !dbg !6421
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6422
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6422
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %2) #7, !dbg !6422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !6422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6422
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6408, metadata !DIExpression(DW_OP_deref)), !dbg !6409
  call void @gsi_insert_after_without_update(%struct.gimple_stmt_iterator* nonnull %si, %union.gimple_statement_d* nonnull %gs, i32 0) #6, !dbg !6423
  br label %cleanup, !dbg !6424

cleanup:                                          ; preds = %entry, %if.end3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6424
  ret void, !dbg !6424
}

declare dso_local %union.gimple_statement_d* @gimple_build_goto(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_predict(i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_label(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_case_label_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6425 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6427, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6428, metadata !DIExpression()), !dbg !6431
  br label %for.cond, !dbg !6432

for.cond:                                         ; preds = %for.inc, %entry
  %ctxp.0.in = phi %struct.gimplify_ctx** [ @gimplify_ctxp, %entry ], [ %prev_context, %for.inc ]
  %ctxp.0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** %ctxp.0.in, align 8, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %ctxp.0, metadata !6429, metadata !DIExpression()), !dbg !6431
  %case_labels = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %ctxp.0, i64 0, i32 6, !dbg !6435
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %case_labels, align 8, !dbg !6435
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6438
  br i1 %tobool, label %for.inc, label %for.end, !dbg !6439

for.inc:                                          ; preds = %for.cond
  %prev_context = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %ctxp.0, i64 0, i32 0, !dbg !6440
  br label %for.cond, !dbg !6441, !llvm.loop !6442

for.end:                                          ; preds = %for.cond
  %case_labels.lcssa = phi %struct.VEC_tree_heap** [ %case_labels, %for.cond ], !dbg !6435
  %1 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6445
  %2 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !6445
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 2, !dbg !6445
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6445
  %call = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %3) #6, !dbg !6446
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6430, metadata !DIExpression()), !dbg !6431
  %4 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !6447
  %call2 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %case_labels.lcssa, %union.tree_node* %4) #7, !dbg !6447
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call) #7, !dbg !6448
  ret i32 undef, !dbg !6449
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_return_expr(%union.tree_node* %stmt, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6450 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt, metadata !6454, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6455, metadata !DIExpression()), !dbg !6463
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6464
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6464
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6457, metadata !DIExpression()), !dbg !6463
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6465
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !6467
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6468

if.end:                                           ; preds = %entry
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !6469
  br i1 %tobool, label %if.then4, label %lor.lhs.false, !dbg !6470

lor.lhs.false:                                    ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6471
  %bf.load = load i64, i64* %2, align 8, !dbg !6471
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6472
  %cmp1 = icmp eq i64 %bf.cast1, 36, !dbg !6472
  br i1 %cmp1, label %if.then4, label %if.end10, !dbg !6473

if.then4:                                         ; preds = %if.end, %lor.lhs.false
  %call = tail call %union.gimple_statement_d* @gimple_build_return(%union.tree_node* %0) #6, !dbg !6474
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6460, metadata !DIExpression()), !dbg !6475
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6476
  %bf.load7 = load i64, i64* %3, align 8, !dbg !6476
  %bf.lshr = lshr i64 %bf.load7, 23, !dbg !6476
  %4 = trunc i64 %bf.lshr to i8, !dbg !6476
  %bf.cast9 = and i8 %4, 1, !dbg !6476
  tail call fastcc void @gimple_set_no_warning(%union.gimple_statement_d* %call, i8 zeroext %bf.cast9) #7, !dbg !6477
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call) #7, !dbg !6478
  br label %cleanup

if.end10:                                         ; preds = %lor.lhs.false
  %5 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !6479
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !6479
  %6 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6479
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !6479
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !6479
  %8 = bitcast %union.tree_node** %type12 to i64**, !dbg !6479
  %9 = load i64*, i64** %8, align 8, !dbg !6479
  %bf.load14 = load i64, i64* %9, align 8, !dbg !6479
  %bf.cast162 = and i64 %bf.load14, 65535, !dbg !6479
  %cmp17 = icmp eq i64 %bf.cast162, 19, !dbg !6479
  br i1 %cmp17, label %if.end53, label %if.else, !dbg !6481

if.else:                                          ; preds = %if.end10
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6482
  %10 = load %union.tree_node*, %union.tree_node** %operands21, align 8, !dbg !6482
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6458, metadata !DIExpression()), !dbg !6463
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6484
  %bf.load24 = load i64, i64* %11, align 8, !dbg !6484
  %bf.cast263 = and i64 %bf.load24, 65535, !dbg !6486
  %cmp27 = icmp eq i64 %bf.cast263, 47, !dbg !6486
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !6487

if.then29:                                        ; preds = %if.else
  %operands31 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6488
  %12 = load %union.tree_node*, %union.tree_node** %operands31, align 8, !dbg !6488
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6458, metadata !DIExpression()), !dbg !6463
  br label %if.end33, !dbg !6489

if.end33:                                         ; preds = %if.then29, %if.else
  %result_decl.0 = phi %union.tree_node* [ %12, %if.then29 ], [ %10, %if.else ], !dbg !6490
  call void @llvm.dbg.value(metadata %union.tree_node* %result_decl.0, metadata !6458, metadata !DIExpression()), !dbg !6463
  %cmp38 = icmp eq i64 %bf.cast1, 53, !dbg !6491
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false40, !dbg !6491

lor.lhs.false40:                                  ; preds = %if.end33
  %cmp45 = icmp eq i64 %bf.cast1, 54, !dbg !6491
  br i1 %cmp45, label %land.lhs.true, label %cond.true, !dbg !6491

land.lhs.true:                                    ; preds = %lor.lhs.false40, %if.end33
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6491
  %bf.load48 = load i64, i64* %13, align 8, !dbg !6491
  %bf.cast508 = and i64 %bf.load48, 65535, !dbg !6491
  %cmp51 = icmp eq i64 %bf.cast508, 36, !dbg !6491
  br i1 %cmp51, label %if.end53, label %cond.true, !dbg !6491

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false40
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6491
  br label %if.end53, !dbg !6491

if.end53:                                         ; preds = %cond.true, %land.lhs.true, %if.end10
  %result_decl.1 = phi %union.tree_node* [ null, %if.end10 ], [ %result_decl.0, %land.lhs.true ], [ %result_decl.0, %cond.true ], !dbg !6492
  call void @llvm.dbg.value(metadata %union.tree_node* %result_decl.1, metadata !6458, metadata !DIExpression()), !dbg !6463
  %tobool54 = icmp eq %union.tree_node* %result_decl.1, null, !dbg !6493
  br i1 %tobool54, label %if.end96, label %lor.lhs.false55, !dbg !6495

lor.lhs.false55:                                  ; preds = %if.end53
  %14 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !6496
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !6496
  %15 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !6496
  %call58 = tail call i32 @aggregate_value_p(%union.tree_node* nonnull %result_decl.1, %union.tree_node* %15) #6, !dbg !6497
  %tobool59 = icmp eq i32 %call58, 0, !dbg !6497
  br i1 %tobool59, label %if.else61, label %if.end96, !dbg !6498

if.else61:                                        ; preds = %lor.lhs.false55
  %16 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6499
  %return_temp = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %16, i64 0, i32 5, !dbg !6501
  %17 = load %union.tree_node*, %union.tree_node** %return_temp, align 8, !dbg !6501
  %tobool62 = icmp eq %union.tree_node* %17, null, !dbg !6499
  br i1 %tobool62, label %if.else65, label %if.then63, !dbg !6502

if.then63:                                        ; preds = %if.else61
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6459, metadata !DIExpression()), !dbg !6463
  br label %if.end96, !dbg !6503

if.else65:                                        ; preds = %if.else61
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6504
  %18 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !6504
  %call68 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %18, i8* null) #7, !dbg !6506
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !6459, metadata !DIExpression()), !dbg !6463
  %type70 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6507
  %19 = bitcast %union.tree_node** %type70 to i64**, !dbg !6507
  %20 = load i64*, i64** %19, align 8, !dbg !6507
  %bf.load72 = load i64, i64* %20, align 8, !dbg !6507
  %bf.cast746 = and i64 %bf.load72, 65535, !dbg !6509
  %cmp75 = icmp eq i64 %bf.cast746, 13, !dbg !6509
  br i1 %cmp75, label %if.then86, label %lor.lhs.false77, !dbg !6510

lor.lhs.false77:                                  ; preds = %if.else65
  %cmp84 = icmp eq i64 %bf.cast746, 14, !dbg !6511
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !6512

if.then86:                                        ; preds = %lor.lhs.false77, %if.else65
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6513
  %21 = bitcast i40* %gimple_reg_flag to i64*, !dbg !6513
  %bf.load87 = load i64, i64* %21, align 8, !dbg !6514
  %bf.set = or i64 %bf.load87, 134217728, !dbg !6514
  store i64 %bf.set, i64* %21, align 8, !dbg !6514
  br label %if.end89, !dbg !6513

if.end89:                                         ; preds = %if.then86, %lor.lhs.false77
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6515
  %bf.load91 = load i64, i64* %22, align 8, !dbg !6516
  %bf.set93 = or i64 %bf.load91, 8388608, !dbg !6516
  store i64 %bf.set93, i64* %22, align 8, !dbg !6516
  %23 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6517
  %return_temp94 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %23, i64 0, i32 5, !dbg !6518
  store %union.tree_node* %call68, %union.tree_node** %return_temp94, align 8, !dbg !6519
  br label %if.end96

if.end96:                                         ; preds = %lor.lhs.false55, %if.end53, %if.then63, %if.end89
  %result.1 = phi %union.tree_node* [ %result_decl.1, %lor.lhs.false55 ], [ null, %if.end53 ], [ %17, %if.then63 ], [ %call68, %if.end89 ], !dbg !6520
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !6459, metadata !DIExpression()), !dbg !6463
  %cmp97 = icmp eq %union.tree_node* %result.1, %result_decl.1, !dbg !6521
  br i1 %cmp97, label %if.end103, label %if.then99, !dbg !6523

if.then99:                                        ; preds = %if.end96
  %operands101 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6524
  store %union.tree_node* %result.1, %union.tree_node** %operands101, align 8, !dbg !6525
  br label %if.end103, !dbg !6524

if.end103:                                        ; preds = %if.end96, %if.then99
  %24 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6526
  tail call void @gimplify_and_add(%union.tree_node* %24, %struct.gimple_seq_d** %pre_p) #7, !dbg !6527
  %call107 = tail call %union.gimple_statement_d* @gimple_build_return(%union.tree_node* %result.1) #6, !dbg !6528
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call107, metadata !6456, metadata !DIExpression()), !dbg !6463
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6529
  %bf.load109 = load i64, i64* %25, align 8, !dbg !6529
  %bf.lshr110 = lshr i64 %bf.load109, 23, !dbg !6529
  %26 = trunc i64 %bf.lshr110 to i8, !dbg !6529
  %bf.cast112 = and i8 %26, 1, !dbg !6529
  tail call fastcc void @gimple_set_no_warning(%union.gimple_statement_d* %call107, i8 zeroext %bf.cast112) #7, !dbg !6530
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call107) #7, !dbg !6531
  br label %cleanup, !dbg !6532

cleanup:                                          ; preds = %entry, %if.end103, %if.then4
  %retval.0 = phi i32 [ 1, %if.then4 ], [ 1, %if.end103 ], [ -2, %entry ], !dbg !6463
  ret i32 %retval.0, !dbg !6533
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_, %struct.constructor_elt_d** %ptr) unnamed_addr #0 !dbg !6534 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !6540, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6541, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ptr, metadata !6542, metadata !DIExpression()), !dbg !6543
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !6544
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6544

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !6544
  %0 = load i32, i32* %num, align 8, !dbg !6544
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6544
  br i1 %cmp, label %if.then, label %if.else, !dbg !6546

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6547
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6547
  br label %return, !dbg !6547

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6549

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constructor_elt_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !6551
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6551
  store %struct.constructor_elt_d* %storemerge, %struct.constructor_elt_d** %ptr, align 8, !dbg !6551
  ret i32 %retval.0, !dbg !6546
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_save_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) unnamed_addr #5 !dbg !6552 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6554, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6555, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !6556, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 1, metadata !6557, metadata !DIExpression()), !dbg !6559
  %0 = bitcast %union.tree_node** %expr_p to i64**, !dbg !6560
  %1 = load i64*, i64** %0, align 8, !dbg !6560
  %bf.load = load i64, i64* %1, align 8, !dbg !6560
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6560
  %cmp = icmp eq i64 %bf.cast1, 120, !dbg !6560
  %2 = bitcast i64* %1 to %struct.tree_exp*, !dbg !6560
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.true, !dbg !6560

entry.cond.end_crit_edge:                         ; preds = %entry
  %.pre3 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6561
  br label %cond.end, !dbg !6560

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4676, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6560
  %.phi.trans.insert = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6559
  %.pre = load %struct.tree_exp*, %struct.tree_exp** %.phi.trans.insert, align 8, !dbg !6561
  br label %cond.end, !dbg !6560

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %.pre-phi = phi %struct.tree_exp** [ %.pre3, %entry.cond.end_crit_edge ], [ %.phi.trans.insert, %cond.true ], !dbg !6561
  %3 = phi %struct.tree_exp* [ %2, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ]
  %4 = phi %struct.tree_exp* [ %2, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !6561
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 0, !dbg !6561
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6561
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6558, metadata !DIExpression()), !dbg !6559
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 0, i32 0, i32 0, !dbg !6562
  %bf.load2 = load i64, i64* %.cast, align 8, !dbg !6562
  %bf.cast42 = and i64 %bf.load2, 134217728, !dbg !6562
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !6562
  br i1 %tobool, label %if.then, label %if.end17, !dbg !6564

if.then:                                          ; preds = %cond.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6565
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6565
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6568
  %cmp5 = icmp eq %union.tree_node* %6, %7, !dbg !6569
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6570

if.then6:                                         ; preds = %if.then
  %arrayidx9 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 0, !dbg !6571
  %call = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx9, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_stmt, i32 0) #7, !dbg !6573
  call void @llvm.dbg.value(metadata i32 %call, metadata !6557, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %if.end, !dbg !6574

if.else:                                          ; preds = %if.then
  %call10 = tail call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %5, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) #7, !dbg !6575
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %ret.0 = phi i32 [ %call, %if.then6 ], [ 1, %if.else ], !dbg !6559
  %val.0 = phi %union.tree_node* [ null, %if.then6 ], [ %call10, %if.else ], !dbg !6576
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !6558, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !6557, metadata !DIExpression()), !dbg !6559
  %8 = load %struct.tree_exp*, %struct.tree_exp** %.pre-phi, align 8, !dbg !6577
  %arrayidx13 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i64 0, i32 3, i64 0, !dbg !6577
  store %union.tree_node* %val.0, %union.tree_node** %arrayidx13, align 8, !dbg !6578
  %9 = load i64*, i64** %0, align 8, !dbg !6579
  %bf.load15 = load i64, i64* %9, align 8, !dbg !6580
  %bf.set = or i64 %bf.load15, 134217728, !dbg !6580
  store i64 %bf.set, i64* %9, align 8, !dbg !6580
  br label %if.end17, !dbg !6581

if.end17:                                         ; preds = %cond.end, %if.end
  %ret.1 = phi i32 [ 1, %cond.end ], [ %ret.0, %if.end ], !dbg !6559
  %val.1 = phi %union.tree_node* [ %5, %cond.end ], [ %val.0, %if.end ], !dbg !6559
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !6558, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !6557, metadata !DIExpression()), !dbg !6559
  store %union.tree_node* %val.1, %union.tree_node** %expr_p, align 8, !dbg !6582
  ret i32 %ret.1, !dbg !6583
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_asm_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) unnamed_addr #5 !dbg !6584 {
entry:
  %constraint = alloca i8*, align 8
  %allows_mem = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %is_inout = alloca i8, align 1
  %inputs = alloca %struct.VEC_tree_gc*, align 8
  %outputs = alloca %struct.VEC_tree_gc*, align 8
  %clobbers = alloca %struct.VEC_tree_gc*, align 8
  %labels = alloca %struct.VEC_tree_gc*, align 8
  %buf = alloca [10 x i8], align 1
  %tem = alloca i8*, align 8
  %mem_p = alloca i8, align 1
  %reg_p = alloca i8, align 1
  %inout_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6586, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6587, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !6588, metadata !DIExpression()), !dbg !6636
  %0 = bitcast i8** %constraint to i8*, !dbg !6637
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6637
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !6595, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !6638
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !6596, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !6638
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !6638
  %1 = bitcast %struct.VEC_tree_gc** %inputs to i8*, !dbg !6639
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6639
  %2 = bitcast %struct.VEC_tree_gc** %outputs to i8*, !dbg !6640
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6640
  %3 = bitcast %struct.VEC_tree_gc** %clobbers to i8*, !dbg !6641
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6641
  %4 = bitcast %struct.VEC_tree_gc** %labels to i8*, !dbg !6642
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6642
  %5 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !6643
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6589, metadata !DIExpression()), !dbg !6636
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6644
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6644
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6644
  %call = tail call i32 @list_length(%union.tree_node* %6) #6, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %call, metadata !6590, metadata !DIExpression()), !dbg !6636
  %conv = sext i32 %call to i64, !dbg !6646
  %7 = alloca i8*, i64 %conv, align 16, !dbg !6646
  call void @llvm.dbg.value(metadata i8** %7, metadata !6591, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* null, metadata !6604, metadata !DIExpression()), !dbg !6636
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %labels, align 8, !dbg !6647
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* null, metadata !6603, metadata !DIExpression()), !dbg !6636
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %clobbers, align 8, !dbg !6648
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* null, metadata !6602, metadata !DIExpression()), !dbg !6636
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %outputs, align 8, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* null, metadata !6601, metadata !DIExpression()), !dbg !6636
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %inputs, align 8, !dbg !6650
  call void @llvm.dbg.value(metadata i32 1, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6605, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 0, metadata !6592, metadata !DIExpression()), !dbg !6636
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6651
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6593, metadata !DIExpression()), !dbg !6636
  %9 = getelementptr inbounds [10 x i8], [10 x i8]* %buf, i64 0, i64 0, !dbg !6652
  %10 = bitcast i8** %tem to i8*, !dbg !6653
  %arrayidx137 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6652
  br label %for.cond, !dbg !6654

for.cond:                                         ; preds = %cleanup143, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup143 ], [ 0, %entry ], !dbg !6655
  %ret.0 = phi i32 [ %ret.3, %cleanup143 ], [ 1, %entry ], !dbg !6655
  %.in2 = phi %union.tree_node* [ %11, %cleanup143 ], [ %8, %entry ]
  %link.0 = phi %union.tree_node* [ %11, %cleanup143 ], [ %8, %entry ], !dbg !6656
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %link.0, metadata !6593, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !6598, metadata !DIExpression()), !dbg !6636
  %tobool = icmp eq %union.tree_node* %link.0, null, !dbg !6657
  br i1 %tobool, label %for.end147, label %for.body, !dbg !6657

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6658
  %11 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6658
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6605, metadata !DIExpression()), !dbg !6636
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %.in2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6659
  %12 = bitcast i32* %purpose to %struct.tree_list**, !dbg !6659
  %13 = load %struct.tree_list*, %struct.tree_list** %12, align 8, !dbg !6659
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %13, i64 0, i32 2, !dbg !6659
  %14 = bitcast %union.tree_node** %value to %struct.tree_string**, !dbg !6659
  %15 = load %struct.tree_string*, %struct.tree_string** %14, align 8, !dbg !6659
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %15, i64 0, i32 2, i64 0, !dbg !6659
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !6594, metadata !DIExpression()), !dbg !6636
  store i8* %arraydecay, i8** %constraint, align 8, !dbg !6660
  %arrayidx5 = getelementptr inbounds i8*, i8** %7, i64 %indvars.iv, !dbg !6661
  store i8* %arraydecay, i8** %arrayidx5, align 8, !dbg !6662
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !6594, metadata !DIExpression()), !dbg !6636
  %call6 = call i64 @strlen(i8* nonnull %arraydecay) #6, !dbg !6663
  call void @llvm.dbg.value(metadata i64 %call6, metadata !6610, metadata !DIExpression()), !dbg !6664
  %cmp = icmp eq i64 %call6, 0, !dbg !6665
  br i1 %cmp, label %cleanup143, label %if.end, !dbg !6667

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !6594, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !6595, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !6596, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %16 = trunc i64 %indvars.iv to i32, !dbg !6668
  %call8 = call zeroext i8 @parse_output_constraint(i8** nonnull %constraint, i32 %16, i32 0, i32 0, i8* nonnull %allows_mem, i8* nonnull %allows_reg, i8* nonnull %is_inout) #6, !dbg !6668
  call void @llvm.dbg.value(metadata i8 %call8, metadata !6606, metadata !DIExpression()), !dbg !6664
  %tobool9 = icmp eq i8 %call8, 0, !dbg !6669
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6671

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 -2, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i8 0, metadata !6597, metadata !DIExpression()), !dbg !6636
  store i8 0, i8* %is_inout, align 1, !dbg !6672
  br label %if.end11, !dbg !6674

if.end11:                                         ; preds = %if.end, %if.then10
  %ret.1 = phi i32 [ %ret.0, %if.end ], [ -2, %if.then10 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !6598, metadata !DIExpression()), !dbg !6636
  %17 = load i8, i8* %allows_reg, align 1, !dbg !6675
  call void @llvm.dbg.value(metadata i8 %17, metadata !6596, metadata !DIExpression()), !dbg !6636
  %tobool12 = icmp eq i8 %17, 0, !dbg !6675
  br i1 %tobool12, label %land.lhs.true, label %if.end18, !dbg !6677

land.lhs.true:                                    ; preds = %if.end11
  %18 = load i8, i8* %allows_mem, align 1, !dbg !6678
  call void @llvm.dbg.value(metadata i8 %18, metadata !6595, metadata !DIExpression()), !dbg !6636
  %tobool14 = icmp eq i8 %18, 0, !dbg !6678
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !6679

if.then15:                                        ; preds = %land.lhs.true
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6680
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !6680
  call void @mark_addressable(%union.tree_node* %20) #7, !dbg !6681
  br label %if.end18, !dbg !6681

if.end18:                                         ; preds = %land.lhs.true, %if.end11, %if.then15
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6682
  %22 = load i8, i8* %is_inout, align 1, !dbg !6683
  call void @llvm.dbg.value(metadata i8 %22, metadata !6597, metadata !DIExpression()), !dbg !6636
  %tobool22 = icmp eq i8 %22, 0, !dbg !6683
  %cond = select i1 %tobool22, i8 (%union.tree_node*)* @is_gimple_lvalue, i8 (%union.tree_node*)* @is_gimple_min_lval, !dbg !6683
  %call23 = call i32 @gimplify_expr(%union.tree_node** nonnull %21, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull %cond, i32 6) #7, !dbg !6684
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6599, metadata !DIExpression()), !dbg !6636
  %cmp24 = icmp eq i32 %call23, -2, !dbg !6685
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6687

if.then26:                                        ; preds = %if.end18
  %23 = trunc i64 %indvars.iv to i32, !dbg !6688
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 %23) #6, !dbg !6688
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6598, metadata !DIExpression()), !dbg !6636
  br label %if.end27, !dbg !6690

if.end27:                                         ; preds = %if.then26, %if.end18
  %ret.2 = phi i32 [ -2, %if.then26 ], [ %ret.1, %if.end18 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.2, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %outputs, metadata !6602, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %call28 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %outputs, %union.tree_node* nonnull %link.0) #7, !dbg !6691
  store %union.tree_node* null, %union.tree_node** %chain, align 8, !dbg !6692
  %24 = load i8, i8* %is_inout, align 1, !dbg !6693
  call void @llvm.dbg.value(metadata i8 %24, metadata !6597, metadata !DIExpression()), !dbg !6636
  %tobool31 = icmp eq i8 %24, 0, !dbg !6693
  br i1 %tobool31, label %cleanup143, label %if.then32, !dbg !6694

if.then32:                                        ; preds = %if.end27
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %9) #8, !dbg !6695
  call void @llvm.dbg.declare(metadata [10 x i8]* %buf, metadata !6614, metadata !DIExpression()), !dbg !6696
  %25 = load i8*, i8** %constraint, align 8, !dbg !6697
  call void @llvm.dbg.value(metadata i8* %25, metadata !6594, metadata !DIExpression()), !dbg !6636
  %call33 = call i8* @xstrdup(i8* %25) #6, !dbg !6698
  call void @llvm.dbg.value(metadata i8* %call33, metadata !6618, metadata !DIExpression()), !dbg !6652
  store i8 61, i8* %call33, align 1, !dbg !6699
  %conv35 = trunc i64 %call6 to i32, !dbg !6700
  %call36 = call %union.tree_node* @build_string(i32 %conv35, i8* %call33) #6, !dbg !6701
  %26 = load %struct.tree_list*, %struct.tree_list** %12, align 8, !dbg !6702
  %value40 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %26, i64 0, i32 2, !dbg !6702
  store %union.tree_node* %call36, %union.tree_node** %value40, align 8, !dbg !6703
  %27 = load i8, i8* %allows_reg, align 1, !dbg !6704
  call void @llvm.dbg.value(metadata i8 %27, metadata !6596, metadata !DIExpression()), !dbg !6636
  %tobool41 = icmp eq i8 %27, 0, !dbg !6704
  br i1 %tobool41, label %if.else125, label %if.then42, !dbg !6705

if.then42:                                        ; preds = %if.then32
  %28 = trunc i64 %indvars.iv to i32, !dbg !6706
  %call44 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 %28) #6, !dbg !6706
  %call45 = call i8* @strchr(i8* %call33, i32 44) #6, !dbg !6707
  %cmp46 = icmp eq i8* %call45, null, !dbg !6708
  %call50 = call i64 @strlen(i8* nonnull %9) #6, !dbg !6709
  br i1 %cmp46, label %if.else118, label %if.then48, !dbg !6710

if.then48:                                        ; preds = %if.then42
  call void @llvm.dbg.value(metadata i64 0, metadata !6619, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i64 %call50, metadata !6624, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %call33, metadata !6625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6711
  br label %for.cond52, !dbg !6712

for.cond52:                                       ; preds = %if.then70, %if.then48
  %len.0 = phi i64 [ 0, %if.then48 ], [ %len.1, %if.then70 ], !dbg !6711
  %call33.pn = phi i8* [ %call33, %if.then48 ], [ %end.0, %if.then70 ]
  %beg.0 = getelementptr inbounds i8, i8* %call33.pn, i64 1, !dbg !6714
  call void @llvm.dbg.value(metadata i8* %beg.0, metadata !6625, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i64 %len.0, metadata !6619, metadata !DIExpression()), !dbg !6711
  %call53 = call i8* @strchr(i8* nonnull %beg.0, i32 44) #6, !dbg !6715
  call void @llvm.dbg.value(metadata i8* %call53, metadata !6626, metadata !DIExpression()), !dbg !6711
  %cmp54 = icmp eq i8* %call53, null, !dbg !6718
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !6720

if.then56:                                        ; preds = %for.cond52
  %call57 = call i8* @strchr(i8* nonnull %beg.0, i32 0) #6, !dbg !6721
  call void @llvm.dbg.value(metadata i8* %call57, metadata !6626, metadata !DIExpression()), !dbg !6711
  br label %if.end58, !dbg !6722

if.end58:                                         ; preds = %if.then56, %for.cond52
  %end.0 = phi i8* [ %call57, %if.then56 ], [ %call53, %for.cond52 ], !dbg !6723
  call void @llvm.dbg.value(metadata i8* %end.0, metadata !6626, metadata !DIExpression()), !dbg !6711
  %sub.ptr.lhs.cast = ptrtoint i8* %end.0 to i64, !dbg !6724
  %sub.ptr.rhs.cast = ptrtoint i8* %beg.0 to i64, !dbg !6724
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6724
  %cmp59 = icmp ult i64 %sub.ptr.sub, %call50, !dbg !6726
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !6727

if.then61:                                        ; preds = %if.end58
  br label %if.end68, !dbg !6728

if.else:                                          ; preds = %if.end58
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then61
  %add.pn.in = phi i64 [ %call50, %if.then61 ], [ %sub.ptr.sub, %if.else ]
  %add.pn = add i64 %add.pn.in, 1, !dbg !6729
  %len.1 = add i64 %len.0, %add.pn, !dbg !6729
  call void @llvm.dbg.value(metadata i64 %len.1, metadata !6619, metadata !DIExpression()), !dbg !6711
  %29 = load i8, i8* %end.0, align 1, !dbg !6730
  %tobool69 = icmp eq i8 %29, 0, !dbg !6730
  br i1 %tobool69, label %for.end, label %if.then70, !dbg !6732

if.then70:                                        ; preds = %if.end68
  call void @llvm.dbg.value(metadata i8* %end.0, metadata !6625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6711
  br label %for.cond52, !dbg !6733, !llvm.loop !6734

for.end:                                          ; preds = %if.end68
  %len.1.lcssa = phi i64 [ %len.1, %if.end68 ], !dbg !6729
  %30 = alloca i8, i64 %len.1.lcssa, align 16, !dbg !6737
  call void @llvm.dbg.value(metadata i8* %30, metadata !6627, metadata !DIExpression()), !dbg !6711
  %add.ptr74 = getelementptr inbounds i8, i8* %call33, i64 1, !dbg !6738
  call void @llvm.dbg.value(metadata i8* %add.ptr74, metadata !6625, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %30, metadata !6628, metadata !DIExpression()), !dbg !6711
  br label %for.cond75, !dbg !6739

for.cond75:                                       ; preds = %if.end103, %for.end
  %beg.1 = phi i8* [ %add.ptr74, %for.end ], [ %beg.2, %if.end103 ], !dbg !6740
  %dst.0 = phi i8* [ %30, %for.end ], [ %dst.2, %if.end103 ], !dbg !6740
  call void @llvm.dbg.value(metadata i8* %dst.0, metadata !6628, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %beg.1, metadata !6625, metadata !DIExpression()), !dbg !6711
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !6741
  call void @llvm.dbg.value(metadata i8* %mem_p, metadata !6633, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %mem_p) #8, !dbg !6742
  call void @llvm.dbg.value(metadata i8* %reg_p, metadata !6634, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %reg_p) #8, !dbg !6742
  call void @llvm.dbg.value(metadata i8* %inout_p, metadata !6635, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %inout_p) #8, !dbg !6742
  %call76 = call i8* @strchr(i8* %beg.1, i32 44) #6, !dbg !6743
  call void @llvm.dbg.value(metadata i8* %call76, metadata !6626, metadata !DIExpression()), !dbg !6711
  %tobool77 = icmp eq i8* %call76, null, !dbg !6744
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !6746

if.then78:                                        ; preds = %for.cond75
  store i8 0, i8* %call76, align 1, !dbg !6747
  br label %if.end79, !dbg !6748

if.end79:                                         ; preds = %for.cond75, %if.then78
  %arrayidx80 = getelementptr inbounds i8, i8* %beg.1, i64 -1, !dbg !6749
  store i8 61, i8* %arrayidx80, align 1, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %arrayidx80, metadata !6629, metadata !DIExpression()), !dbg !6653
  store i8* %arrayidx80, i8** %tem, align 8, !dbg !6751
  call void @llvm.dbg.value(metadata i8** %tem, metadata !6629, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata i8* %mem_p, metadata !6633, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata i8* %reg_p, metadata !6634, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata i8* %inout_p, metadata !6635, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %31 = trunc i64 %indvars.iv to i32, !dbg !6752
  %call82 = call zeroext i8 @parse_output_constraint(i8** nonnull %tem, i32 %31, i32 0, i32 0, i8* nonnull %mem_p, i8* nonnull %reg_p, i8* nonnull %inout_p) #6, !dbg !6752
  %cmp83 = icmp eq i8* %dst.0, %30, !dbg !6753
  br i1 %cmp83, label %if.end86, label %if.then85, !dbg !6755

if.then85:                                        ; preds = %if.end79
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.0, i64 1, !dbg !6756
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !6628, metadata !DIExpression()), !dbg !6711
  store i8 44, i8* %dst.0, align 1, !dbg !6757
  br label %if.end86, !dbg !6758

if.end86:                                         ; preds = %if.end79, %if.then85
  %dst.1 = phi i8* [ %incdec.ptr, %if.then85 ], [ %30, %if.end79 ], !dbg !6740
  call void @llvm.dbg.value(metadata i8* %dst.1, metadata !6628, metadata !DIExpression()), !dbg !6711
  %32 = load i8, i8* %reg_p, align 1, !dbg !6759
  call void @llvm.dbg.value(metadata i8 %32, metadata !6634, metadata !DIExpression()), !dbg !6653
  %tobool87 = icmp eq i8 %32, 0, !dbg !6759
  br i1 %tobool87, label %if.else92, label %if.then88, !dbg !6761

if.then88:                                        ; preds = %if.end86
  %call90 = call i8* @memcpy(i8* %dst.1, i8* nonnull %9, i64 %call50) #6, !dbg !6762
  br label %if.end103, !dbg !6764

if.else92:                                        ; preds = %if.end86
  br i1 %tobool77, label %if.else98, label %if.then94, !dbg !6765

if.then94:                                        ; preds = %if.else92
  %sub.ptr.lhs.cast95 = ptrtoint i8* %call76 to i64, !dbg !6767
  %sub.ptr.rhs.cast96 = ptrtoint i8* %beg.1 to i64, !dbg !6767
  %sub.ptr.sub97 = sub i64 %sub.ptr.lhs.cast95, %sub.ptr.rhs.cast96, !dbg !6767
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub97, metadata !6619, metadata !DIExpression()), !dbg !6711
  br label %if.end100, !dbg !6769

if.else98:                                        ; preds = %if.else92
  %call99 = call i64 @strlen(i8* %beg.1) #6, !dbg !6770
  call void @llvm.dbg.value(metadata i64 %call99, metadata !6619, metadata !DIExpression()), !dbg !6711
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %if.then94
  %len.2 = phi i64 [ %sub.ptr.sub97, %if.then94 ], [ %call99, %if.else98 ], !dbg !6771
  call void @llvm.dbg.value(metadata i64 %len.2, metadata !6619, metadata !DIExpression()), !dbg !6711
  %call101 = call i8* @memcpy(i8* %dst.1, i8* %beg.1, i64 %len.2) #6, !dbg !6772
  br label %if.end103

if.end103:                                        ; preds = %if.end100, %if.then88
  %call50.pn = phi i64 [ %call50, %if.then88 ], [ %len.2, %if.end100 ]
  %dst.2 = getelementptr inbounds i8, i8* %dst.1, i64 %call50.pn, !dbg !6773
  call void @llvm.dbg.value(metadata i8* %dst.2, metadata !6628, metadata !DIExpression()), !dbg !6711
  %tobool104 = icmp ne i8* %call76, null, !dbg !6774
  %add.ptr106 = getelementptr inbounds i8, i8* %call76, i64 1, !dbg !6776
  %beg.2 = select i1 %tobool104, i8* %add.ptr106, i8* %beg.1, !dbg !6776
  call void @llvm.dbg.value(metadata i8* %beg.2, metadata !6625, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %inout_p, metadata !6635, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %inout_p) #8, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %reg_p, metadata !6634, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %reg_p) #8, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %mem_p, metadata !6633, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %mem_p) #8, !dbg !6777
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !6777
  br i1 %tobool104, label %for.cond75, label %for.end112, !llvm.loop !6778

for.end112:                                       ; preds = %if.end103
  %dst.2.lcssa = phi i8* [ %dst.2, %if.end103 ], !dbg !6773
  store i8 0, i8* %dst.2.lcssa, align 1, !dbg !6781
  %sub.ptr.lhs.cast113 = ptrtoint i8* %dst.2.lcssa to i64, !dbg !6782
  %sub.ptr.rhs.cast114 = ptrtoint i8* %30 to i64, !dbg !6782
  %sub.ptr.sub115 = sub i64 %sub.ptr.lhs.cast113, %sub.ptr.rhs.cast114, !dbg !6782
  %conv116 = trunc i64 %sub.ptr.sub115 to i32, !dbg !6783
  %call117 = call %union.tree_node* @build_string(i32 %conv116, i8* nonnull %30) #6, !dbg !6784
  call void @llvm.dbg.value(metadata %union.tree_node* %call117, metadata !6611, metadata !DIExpression()), !dbg !6652
  br label %if.end129, !dbg !6785

if.else118:                                       ; preds = %if.then42
  %conv121 = trunc i64 %call50 to i32, !dbg !6786
  %call123 = call %union.tree_node* @build_string(i32 %conv121, i8* nonnull %9) #6, !dbg !6787
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !6611, metadata !DIExpression()), !dbg !6652
  br label %if.end129

if.else125:                                       ; preds = %if.then32
  %conv126 = add i32 %conv35, -1, !dbg !6788
  %33 = load i8*, i8** %constraint, align 8, !dbg !6789
  call void @llvm.dbg.value(metadata i8* %33, metadata !6594, metadata !DIExpression()), !dbg !6636
  %add.ptr127 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !6790
  %call128 = call %union.tree_node* @build_string(i32 %conv126, i8* nonnull %add.ptr127) #6, !dbg !6791
  call void @llvm.dbg.value(metadata %union.tree_node* %call128, metadata !6611, metadata !DIExpression()), !dbg !6652
  br label %if.end129

if.end129:                                        ; preds = %for.end112, %if.else118, %if.else125
  %input.1 = phi %union.tree_node* [ %call128, %if.else125 ], [ %call117, %for.end112 ], [ %call123, %if.else118 ], !dbg !6792
  call void @llvm.dbg.value(metadata %union.tree_node* %input.1, metadata !6611, metadata !DIExpression()), !dbg !6652
  call void @free(i8* %call33) #6, !dbg !6793
  %call130 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %input.1) #6, !dbg !6794
  %34 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !6794
  %call133 = call %union.tree_node* @unshare_expr(%union.tree_node* %34) #7, !dbg !6794
  %call134 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* %call130, %union.tree_node* %call133) #6, !dbg !6794
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !6611, metadata !DIExpression()), !dbg !6652
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx137, align 8, !dbg !6795
  %call138 = call %union.tree_node* @chainon(%union.tree_node* %35, %union.tree_node* %call134) #6, !dbg !6796
  store %union.tree_node* %call138, %union.tree_node** %arrayidx137, align 8, !dbg !6797
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %9) #8, !dbg !6798
  br label %cleanup143, !dbg !6799

cleanup143:                                       ; preds = %if.end27, %if.end129, %for.body
  %ret.3 = phi i32 [ %ret.0, %for.body ], [ %ret.2, %if.end129 ], [ %ret.2, %if.end27 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.3, metadata !6598, metadata !DIExpression()), !dbg !6636
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !6800
  call void @llvm.dbg.value(metadata i32 undef, metadata !6592, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6593, metadata !DIExpression()), !dbg !6636
  br label %for.cond, !dbg !6801, !llvm.loop !6802

for.end147:                                       ; preds = %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond ], !dbg !6655
  %ret.0.lcssa = phi i32 [ %ret.0, %for.cond ], !dbg !6655
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  %36 = trunc i64 %indvars.iv.lcssa to i32, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %36, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %36, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6605, metadata !DIExpression()), !dbg !6636
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx137, align 8, !dbg !6804
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6593, metadata !DIExpression()), !dbg !6636
  br label %for.cond151, !dbg !6806

for.cond151:                                      ; preds = %if.end254, %for.end147
  %ret.4 = phi i32 [ %ret.0.lcssa, %for.end147 ], [ %ret.7, %if.end254 ], !dbg !6636
  %.in = phi %union.tree_node* [ %37, %for.end147 ], [ %38, %if.end254 ]
  %link.1 = phi %union.tree_node* [ %37, %for.end147 ], [ %38, %if.end254 ], !dbg !6807
  %i.1 = phi i32 [ %36, %for.end147 ], [ %inc259, %if.end254 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %link.1, metadata !6593, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.4, metadata !6598, metadata !DIExpression()), !dbg !6636
  %tobool152 = icmp eq %union.tree_node* %link.1, null, !dbg !6808
  br i1 %tobool152, label %for.end260, label %for.body153, !dbg !6808

for.body153:                                      ; preds = %for.cond151
  %chain155 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6809
  %38 = load %union.tree_node*, %union.tree_node** %chain155, align 8, !dbg !6809
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !6605, metadata !DIExpression()), !dbg !6636
  %purpose157 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6812
  %39 = bitcast i32* %purpose157 to %struct.tree_list**, !dbg !6812
  %40 = load %struct.tree_list*, %struct.tree_list** %39, align 8, !dbg !6812
  %value159 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %40, i64 0, i32 2, !dbg !6812
  %41 = bitcast %union.tree_node** %value159 to %struct.tree_string**, !dbg !6812
  %42 = load %struct.tree_string*, %struct.tree_string** %41, align 8, !dbg !6812
  %arraydecay162 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %42, i64 0, i32 2, i64 0, !dbg !6812
  call void @llvm.dbg.value(metadata i8* %arraydecay162, metadata !6594, metadata !DIExpression()), !dbg !6636
  store i8* %arraydecay162, i8** %constraint, align 8, !dbg !6813
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !6594, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !6595, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !6596, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %call163 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint, i32 0, i32 0, i32 %call, i32 0, i8** nonnull %7, i8* nonnull %allows_mem, i8* nonnull %allows_reg) #6, !dbg !6814
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6815
  %44 = bitcast %union.tree_node** %43 to %struct.tree_common**, !dbg !6815
  %45 = load %struct.tree_common*, %struct.tree_common** %44, align 8, !dbg !6815
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %45, i64 0, i32 2, !dbg !6815
  %46 = bitcast %union.tree_node** %type to i64**, !dbg !6815
  %47 = load i64*, i64** %46, align 8, !dbg !6815
  %bf.load = load i64, i64* %47, align 8, !dbg !6815
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !6815
  %tobool167 = icmp eq i64 %bf.cast1, 0, !dbg !6815
  br i1 %tobool167, label %for.body153.if.end173_crit_edge, label %if.then168, !dbg !6817

for.body153.if.end173_crit_edge:                  ; preds = %for.body153
  %.pre = load i8, i8* %allows_reg, align 1, !dbg !6818
  br label %if.end173, !dbg !6817

if.then168:                                       ; preds = %for.body153
  %48 = load i8, i8* %allows_mem, align 1, !dbg !6820
  call void @llvm.dbg.value(metadata i8 %48, metadata !6595, metadata !DIExpression()), !dbg !6636
  %tobool169 = icmp eq i8 %48, 0, !dbg !6820
  br i1 %tobool169, label %if.else171, label %if.then170, !dbg !6823

if.then170:                                       ; preds = %if.then168
  call void @llvm.dbg.value(metadata i8 0, metadata !6596, metadata !DIExpression()), !dbg !6636
  store i8 0, i8* %allows_reg, align 1, !dbg !6824
  br label %if.end173, !dbg !6825

if.else171:                                       ; preds = %if.then168
  %i.1.lcssa7 = phi i32 [ %i.1, %if.then168 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa7, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa7, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa7, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6826
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i32 %i.1.lcssa7) #6, !dbg !6828
  br label %cleanup308, !dbg !6829

if.end173:                                        ; preds = %for.body153.if.end173_crit_edge, %if.then170
  %49 = phi i8 [ %.pre, %for.body153.if.end173_crit_edge ], [ 0, %if.then170 ], !dbg !6818
  call void @llvm.dbg.value(metadata i8 %49, metadata !6596, metadata !DIExpression()), !dbg !6636
  %tobool174 = icmp eq i8 %49, 0, !dbg !6818
  br i1 %tobool174, label %land.lhs.true175, label %if.else246, !dbg !6830

land.lhs.true175:                                 ; preds = %if.end173
  %50 = load i8, i8* %allows_mem, align 1, !dbg !6831
  call void @llvm.dbg.value(metadata i8 %50, metadata !6595, metadata !DIExpression()), !dbg !6636
  %tobool177 = icmp eq i8 %50, 0, !dbg !6831
  br i1 %tobool177, label %if.else246, label %if.then178, !dbg !6832

if.then178:                                       ; preds = %land.lhs.true175
  %call181 = call i32 @gimplify_expr(%union.tree_node** nonnull %43, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 6) #7, !dbg !6833
  call void @llvm.dbg.value(metadata i32 %call181, metadata !6599, metadata !DIExpression()), !dbg !6636
  %51 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !6835
  call void @mark_addressable(%union.tree_node* %51) #7, !dbg !6836
  %cmp184 = icmp eq i32 %call181, -2, !dbg !6837
  br i1 %cmp184, label %if.then186, label %if.end254, !dbg !6839

if.then186:                                       ; preds = %if.then178
  %52 = bitcast %union.tree_node** %43 to i64**, !dbg !6840
  %53 = load i64*, i64** %52, align 8, !dbg !6840
  %bf.load190 = load i64, i64* %53, align 8, !dbg !6840
  %bf.cast192 = and i64 %bf.load190, 65535, !dbg !6840
  %arrayidx194 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast192, !dbg !6840
  %54 = load i32, i32* %arrayidx194, align 4, !dbg !6840
  %cmp195 = icmp ugt i32 %54, 3, !dbg !6840
  br i1 %cmp195, label %land.lhs.true197, label %cond.end, !dbg !6840

land.lhs.true197:                                 ; preds = %if.then186
  %cmp206 = icmp ult i32 %54, 11, !dbg !6840
  br i1 %cmp206, label %cond.true, label %cond.end, !dbg !6840

cond.true:                                        ; preds = %land.lhs.true197
  %locus = getelementptr inbounds i64, i64* %53, i64 3, !dbg !6840
  %55 = bitcast i64* %locus to i32*, !dbg !6840
  %56 = load i32, i32* %55, align 8, !dbg !6840
  br label %cond.end, !dbg !6840

cond.end:                                         ; preds = %if.then186, %land.lhs.true197, %cond.true
  %cond211 = phi i32 [ %56, %cond.true ], [ 0, %land.lhs.true197 ], [ 0, %if.then186 ], !dbg !6840
  %cmp212 = icmp eq i32 %cond211, 0, !dbg !6840
  br i1 %cmp212, label %if.end244, label %if.then214, !dbg !6843

if.then214:                                       ; preds = %cond.end
  br i1 %cmp195, label %land.lhs.true225, label %cond.end242, !dbg !6844

land.lhs.true225:                                 ; preds = %if.then214
  %cmp234 = icmp ult i32 %54, 11, !dbg !6844
  br i1 %cmp234, label %cond.true236, label %cond.end242, !dbg !6844

cond.true236:                                     ; preds = %land.lhs.true225
  %locus240 = getelementptr inbounds i64, i64* %53, i64 3, !dbg !6844
  %57 = bitcast i64* %locus240 to i32*, !dbg !6844
  %58 = load i32, i32* %57, align 8, !dbg !6844
  br label %cond.end242, !dbg !6844

cond.end242:                                      ; preds = %if.then214, %land.lhs.true225, %cond.true236
  %cond243 = phi i32 [ %58, %cond.true236 ], [ 0, %land.lhs.true225 ], [ 0, %if.then214 ], !dbg !6844
  store i32 %cond243, i32* @input_location, align 4, !dbg !6845
  br label %if.end244, !dbg !6846

if.end244:                                        ; preds = %cond.end, %cond.end242
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i32 %i.1) #6, !dbg !6847
  call void @llvm.dbg.value(metadata i32 %call181, metadata !6598, metadata !DIExpression()), !dbg !6636
  br label %if.end254, !dbg !6848

if.else246:                                       ; preds = %land.lhs.true175, %if.end173
  %call249 = call i32 @gimplify_expr(%union.tree_node** nonnull %43, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_asm_val, i32 1) #7, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %call249, metadata !6599, metadata !DIExpression()), !dbg !6636
  %cmp250 = icmp eq i32 %call249, -2, !dbg !6851
  %spec.select = select i1 %cmp250, i32 -2, i32 %ret.4, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6598, metadata !DIExpression()), !dbg !6636
  br label %if.end254

if.end254:                                        ; preds = %if.then178, %if.end244, %if.else246
  %ret.7 = phi i32 [ %spec.select, %if.else246 ], [ -2, %if.end244 ], [ %ret.4, %if.then178 ], !dbg !6854
  call void @llvm.dbg.value(metadata i32 %ret.7, metadata !6598, metadata !DIExpression()), !dbg !6636
  store %union.tree_node* null, %union.tree_node** %chain155, align 8, !dbg !6855
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %inputs, metadata !6601, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %call257 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %inputs, %union.tree_node* nonnull %link.1) #7, !dbg !6856
  %inc259 = add nuw nsw i32 %i.1, 1, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %inc259, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !6593, metadata !DIExpression()), !dbg !6636
  br label %for.cond151, !dbg !6858, !llvm.loop !6859

for.end260:                                       ; preds = %for.cond151
  %ret.4.lcssa = phi i32 [ %ret.4, %for.cond151 ], !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.4.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.4.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %ret.4.lcssa, metadata !6598, metadata !DIExpression()), !dbg !6636
  %arrayidx263 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6861
  br label %for.cond264, !dbg !6863

for.cond264:                                      ; preds = %for.body266, %for.end260
  %link.2.in = phi %union.tree_node** [ %arrayidx263, %for.end260 ], [ %chain271, %for.body266 ]
  %link.2 = load %union.tree_node*, %union.tree_node** %link.2.in, align 8, !dbg !6864
  call void @llvm.dbg.value(metadata i32 undef, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %link.2, metadata !6593, metadata !DIExpression()), !dbg !6636
  %tobool265 = icmp eq %union.tree_node* %link.2, null, !dbg !6865
  br i1 %tobool265, label %for.end272, label %for.body266, !dbg !6865

for.body266:                                      ; preds = %for.cond264
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %clobbers, metadata !6603, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %call267 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %clobbers, %union.tree_node* nonnull %link.2) #7, !dbg !6866
  call void @llvm.dbg.value(metadata i32 undef, metadata !6592, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6636
  %chain271 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6868
  br label %for.cond264, !dbg !6869, !llvm.loop !6870

for.end272:                                       ; preds = %for.cond264
  %arrayidx275 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !6872
  br label %for.cond276, !dbg !6874

for.cond276:                                      ; preds = %for.body278, %for.end272
  %link.3.in = phi %union.tree_node** [ %arrayidx275, %for.end272 ], [ %chain283, %for.body278 ]
  %link.3 = load %union.tree_node*, %union.tree_node** %link.3.in, align 8, !dbg !6875
  call void @llvm.dbg.value(metadata i32 undef, metadata !6592, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata %union.tree_node* %link.3, metadata !6593, metadata !DIExpression()), !dbg !6636
  %tobool277 = icmp eq %union.tree_node* %link.3, null, !dbg !6876
  br i1 %tobool277, label %for.end284, label %for.body278, !dbg !6876

for.body278:                                      ; preds = %for.cond276
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %labels, metadata !6604, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  %call279 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %labels, %union.tree_node* nonnull %link.3) #7, !dbg !6877
  call void @llvm.dbg.value(metadata i32 undef, metadata !6592, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6636
  %chain283 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6879
  br label %for.cond276, !dbg !6880, !llvm.loop !6881

for.end284:                                       ; preds = %for.cond276
  %cmp285 = icmp eq i32 %ret.4.lcssa, -2, !dbg !6883
  br i1 %cmp285, label %cleanup308, label %if.then287, !dbg !6885

if.then287:                                       ; preds = %for.end284
  %59 = bitcast %union.tree_node** %operands to %struct.tree_string**, !dbg !6886
  %60 = load %struct.tree_string*, %struct.tree_string** %59, align 8, !dbg !6886
  %arraydecay293 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %60, i64 0, i32 2, i64 0, !dbg !6886
  %61 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %inputs, align 8, !dbg !6888
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %61, metadata !6601, metadata !DIExpression()), !dbg !6636
  %62 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %outputs, align 8, !dbg !6889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %62, metadata !6602, metadata !DIExpression()), !dbg !6636
  %63 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %clobbers, align 8, !dbg !6890
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %63, metadata !6603, metadata !DIExpression()), !dbg !6636
  %64 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %labels, align 8, !dbg !6891
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %64, metadata !6604, metadata !DIExpression()), !dbg !6636
  %call294 = call %union.gimple_statement_d* @gimple_build_asm_vec(i8* nonnull %arraydecay293, %struct.VEC_tree_gc* %61, %struct.VEC_tree_gc* %62, %struct.VEC_tree_gc* %63, %struct.VEC_tree_gc* %64) #6, !dbg !6892
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call294, metadata !6600, metadata !DIExpression()), !dbg !6636
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6893
  %bf.load296 = load i64, i64* %65, align 8, !dbg !6893
  %bf.lshr297 = lshr i64 %bf.load296, 27, !dbg !6893
  %66 = trunc i64 %bf.lshr297 to i8, !dbg !6893
  %bf.cast299 = and i8 %66, 1, !dbg !6893
  call fastcc void @gimple_asm_set_volatile(%union.gimple_statement_d* %call294, i8 zeroext %bf.cast299) #7, !dbg !6894
  %bf.load302 = load i64, i64* %65, align 8, !dbg !6895
  %bf.lshr303 = lshr i64 %bf.load302, 26, !dbg !6895
  %67 = trunc i64 %bf.lshr303 to i8, !dbg !6895
  %bf.cast305 = and i8 %67, 1, !dbg !6895
  call fastcc void @gimple_asm_set_input(%union.gimple_statement_d* %call294, i8 zeroext %bf.cast305) #7, !dbg !6896
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call294) #7, !dbg !6897
  br label %cleanup308, !dbg !6898

cleanup308:                                       ; preds = %for.end284, %if.then287, %if.else171
  %retval.0 = phi i32 [ -2, %if.else171 ], [ %ret.4.lcssa, %if.then287 ], [ -2, %for.end284 ], !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6899
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6899
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6899
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6899
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !6899
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !6596, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !6899
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !6595, metadata !DIExpression(DW_OP_deref)), !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !6899
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6899
  ret i32 %retval.0, !dbg !6899
}

declare dso_local void @gimple_seq_add_seq(%struct.gimple_seq_d**, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_try_set_catch_is_cleanup(%union.gimple_statement_d* %g, i8 zeroext %catch_is_cleanup) unnamed_addr #0 !dbg !6900 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6904, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8 %catch_is_cleanup, metadata !6905, metadata !DIExpression()), !dbg !6906
  %call = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %g) #7, !dbg !6907
  %cmp = icmp eq i32 %call, 1, !dbg !6907
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6907

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 2976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6907
  br label %cond.end, !dbg !6907

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq i8 %catch_is_cleanup, 0, !dbg !6908
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6910
  %bf.load = load i32, i32* %0, align 8, !dbg !6910
  br i1 %tobool, label %if.else, label %if.then, !dbg !6911

if.then:                                          ; preds = %cond.end
  %bf.lshr = and i32 %bf.load, -327680, !dbg !6912
  %or = or i32 %bf.lshr, 262144, !dbg !6912
  %bf.clear = and i32 %bf.load, 65535, !dbg !6912
  %bf.set = or i32 %bf.clear, %or, !dbg !6912
  br label %if.end, !dbg !6913

if.else:                                          ; preds = %cond.end
  %bf.set9 = and i32 %bf.load, -262145, !dbg !6914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %bf.set9, %if.else ], [ %bf.set, %if.then ], !dbg !6910
  store i32 %storemerge, i32* %0, align 8, !dbg !6910
  ret void, !dbg !6915
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_cleanup_point_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !6916 {
entry:
  %iter = alloca %struct.gimple_stmt_iterator, align 8
  %body_sequence = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp21 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6918, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6919, metadata !DIExpression()), !dbg !6936
  %0 = bitcast %struct.gimple_stmt_iterator* %iter to i8*, !dbg !6937
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6937
  %1 = bitcast %struct.gimple_seq_d** %body_sequence to i8*, !dbg !6938
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6938
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !6921, metadata !DIExpression()), !dbg !6936
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body_sequence, align 8, !dbg !6939
  %2 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !6940
  %call = tail call %union.tree_node* @voidify_wrapper_expr(%union.tree_node* %2, %union.tree_node* null) #7, !dbg !6941
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6922, metadata !DIExpression()), !dbg !6936
  %3 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6942
  %conditions = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 8, !dbg !6943
  %4 = load i32, i32* %conditions, align 8, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %4, metadata !6923, metadata !DIExpression()), !dbg !6936
  %conditional_cleanups = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 3, !dbg !6944
  %5 = bitcast %struct.gimple_seq_d** %conditional_cleanups to i64*, !dbg !6944
  %6 = load i64, i64* %5, align 8, !dbg !6944
  store i32 0, i32* %conditions, align 8, !dbg !6945
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %conditional_cleanups, align 8, !dbg !6946
  %7 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !6947
  %8 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !6947
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i64 0, i32 3, i64 0, !dbg !6947
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body_sequence, metadata !6921, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call3 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** nonnull %body_sequence) #7, !dbg !6948
  %9 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !6949
  %conditions4 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 8, !dbg !6950
  store i32 %4, i32* %conditions4, align 8, !dbg !6951
  %conditional_cleanups5 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 3, !dbg !6952
  %10 = bitcast %struct.gimple_seq_d** %conditional_cleanups5 to i64*, !dbg !6953
  store i64 %6, i64* %10, align 8, !dbg !6953
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6954
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6954
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body_sequence, align 8, !dbg !6955
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !6921, metadata !DIExpression()), !dbg !6936
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %12) #7, !dbg !6954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !6954
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6954
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp21 to i8*, !dbg !6956
  br label %for.cond, !dbg !6957

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %iter) #7, !dbg !6958
  %tobool = icmp eq i8 %call6, 0, !dbg !6959
  br i1 %tobool, label %for.body, label %for.end, !dbg !6960

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %iter) #7, !dbg !6961
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !6925, metadata !DIExpression()), !dbg !6962
  %call8 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call7) #7, !dbg !6963
  %cmp = icmp eq i32 %call8, 34, !dbg !6964
  br i1 %cmp, label %if.then, label %if.else23, !dbg !6965

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call9 = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %iter) #7, !dbg !6966
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6966
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !6967

if.then11:                                        ; preds = %if.then
  %call12 = call fastcc %struct.gimple_seq_d* @gimple_wce_cleanup(%union.gimple_statement_d* %call7) #7, !dbg !6968
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  call void @gsi_insert_seq_before_without_update(%struct.gimple_stmt_iterator* nonnull %iter, %struct.gimple_seq_d* %call12, i32 1) #6, !dbg !6970
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %iter, i8 zeroext 1) #6, !dbg !6971
  br label %cleanup, !dbg !6972

if.else:                                          ; preds = %if.then
  %call13 = call fastcc zeroext i8 @gimple_wce_cleanup_eh_only(%union.gimple_statement_d* %call7) #7, !dbg !6973
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6973
  %. = select i1 %tobool14, i32 2, i32 1
  call void @llvm.dbg.value(metadata i32 %., metadata !6935, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call17 = call %struct.gimple_seq_d* @gsi_split_seq_after(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %iter) #6, !dbg !6975
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call17, metadata !6934, metadata !DIExpression()), !dbg !6956
  %call18 = call fastcc %struct.gimple_seq_d* @gimple_wce_cleanup(%union.gimple_statement_d* %call7) #7, !dbg !6976
  %call19 = call %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d* %call17, %struct.gimple_seq_d* %call18, i32 %.) #6, !dbg !6977
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !6929, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  %call20 = call fastcc %union.gimple_statement_d** @gsi_stmt_ptr(%struct.gimple_stmt_iterator* nonnull %iter) #7, !dbg !6978
  store %union.gimple_statement_d* %call19, %union.gimple_statement_d** %call20, align 8, !dbg !6979
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !6980
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp21, %struct.gimple_seq_d* %call17) #7, !dbg !6980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !6980
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !6980
  br label %cleanup, !dbg !6981

if.else23:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %iter, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6936
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %iter) #7, !dbg !6982
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.else23, %if.then11
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then11 ], [ true, %if.else23 ], [ true, %if.else ]
  br i1 %cleanup.dest.slot.0, label %for.cond, label %for.end, !llvm.loop !6983

for.end:                                          ; preds = %cleanup, %for.cond
  %14 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body_sequence, align 8, !dbg !6985
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %14, metadata !6921, metadata !DIExpression()), !dbg !6936
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d* %14) #7, !dbg !6986
  %tobool25 = icmp eq %union.tree_node* %call, null, !dbg !6987
  br i1 %tobool25, label %if.else27, label %if.then26, !dbg !6989

if.then26:                                        ; preds = %for.end
  br label %cleanup28, !dbg !6990

if.else27:                                        ; preds = %for.end
  br label %cleanup28, !dbg !6992

cleanup28:                                        ; preds = %if.else27, %if.then26
  %storemerge = phi %union.tree_node* [ null, %if.else27 ], [ %call, %if.then26 ], !dbg !6994
  %retval.0 = phi i32 [ 1, %if.else27 ], [ 0, %if.then26 ], !dbg !6994
  store %union.tree_node* %storemerge, %union.tree_node** %expr_p, align 8, !dbg !6994
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6995
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6995
  ret i32 %retval.0, !dbg !6995
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_target_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) unnamed_addr #5 !dbg !6996 {
entry:
  %init = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !6998, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !6999, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !7000, metadata !DIExpression()), !dbg !7010
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7011
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7001, metadata !DIExpression()), !dbg !7010
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7012
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7012
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7002, metadata !DIExpression()), !dbg !7010
  %2 = bitcast %union.tree_node** %init to i8*, !dbg !7013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7013
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7014
  %3 = bitcast %union.tree_node** %arrayidx3 to i64*, !dbg !7014
  %4 = load i64, i64* %3, align 8, !dbg !7014
  %5 = bitcast %union.tree_node** %init to i64*, !dbg !7015
  store i64 %4, i64* %5, align 8, !dbg !7015
  call void @llvm.dbg.value(metadata i64 %4, metadata !7003, metadata !DIExpression()), !dbg !7010
  %tobool = icmp eq i64 %4, 0, !dbg !7016
  %6 = inttoptr i64 %4 to %struct.tree_common*, !dbg !7017
  %7 = inttoptr i64 %4 to %union.tree_node*, !dbg !7017
  br i1 %tobool, label %if.else55, label %if.then, !dbg !7017

if.then:                                          ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7018
  %8 = bitcast %union.tree_node** %size to i64**, !dbg !7018
  %9 = load i64*, i64** %8, align 8, !dbg !7018
  %bf.load = load i64, i64* %9, align 8, !dbg !7018
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7020
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !7020
  br i1 %cmp, label %if.else, label %if.then4, !dbg !7021

if.then4:                                         ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7022
  %10 = bitcast %union.tree_node** %type to i64**, !dbg !7022
  %11 = load i64*, i64** %10, align 8, !dbg !7022
  %bf.load6 = load i64, i64* %11, align 8, !dbg !7022
  %bf.cast83 = and i64 %bf.load6, 131072, !dbg !7022
  %tobool9 = icmp eq i64 %bf.cast83, 0, !dbg !7022
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7025

if.then10:                                        ; preds = %if.then4
  %12 = bitcast i64* %11 to %union.tree_node*, !dbg !7025
  tail call void @gimplify_type_sizes(%union.tree_node* %12, %struct.gimple_seq_d** %pre_p) #7, !dbg !7026
  br label %if.end, !dbg !7026

if.end:                                           ; preds = %if.then4, %if.then10
  tail call fastcc void @gimplify_vla_decl(%union.tree_node* %1, %struct.gimple_seq_d** %pre_p) #7, !dbg !7027
  br label %if.end13, !dbg !7028

if.else:                                          ; preds = %if.then
  tail call void @gimple_add_tmp_var(%union.tree_node* %1) #7, !dbg !7029
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !7030
  %13 = bitcast %union.tree_node** %type15 to i64**, !dbg !7030
  %14 = load i64*, i64** %13, align 8, !dbg !7030
  %bf.load17 = load i64, i64* %14, align 8, !dbg !7030
  %bf.cast192 = and i64 %bf.load17, 65535, !dbg !7030
  %cmp20 = icmp eq i64 %bf.cast192, 19, !dbg !7030
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !7031

if.then21:                                        ; preds = %if.end13
  call void @llvm.dbg.value(metadata %union.tree_node** %init, metadata !7003, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call = call i32 @gimplify_expr(%union.tree_node** nonnull %init, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_stmt, i32 0) #7, !dbg !7032
  call void @llvm.dbg.value(metadata i32 %call, metadata !7004, metadata !DIExpression()), !dbg !7010
  br label %if.end25, !dbg !7033

if.else22:                                        ; preds = %if.end13
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7034
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7003, metadata !DIExpression()), !dbg !7010
  %call23 = tail call %union.tree_node* @build2_stat(i32 54, %union.tree_node* %15, %union.tree_node* %1, %union.tree_node* %7) #6, !dbg !7034
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !7005, metadata !DIExpression()), !dbg !7035
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !7003, metadata !DIExpression()), !dbg !7010
  store %union.tree_node* %call23, %union.tree_node** %init, align 8, !dbg !7036
  call void @llvm.dbg.value(metadata %union.tree_node** %init, metadata !7003, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call24 = call i32 @gimplify_expr(%union.tree_node** nonnull %init, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_stmt, i32 0) #7, !dbg !7037
  call void @llvm.dbg.value(metadata i32 %call24, metadata !7004, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7003, metadata !DIExpression()), !dbg !7010
  store %union.tree_node* null, %union.tree_node** %init, align 8, !dbg !7038
  %16 = bitcast %union.tree_node* %call23 to i8*, !dbg !7039
  call void @ggc_free(i8* %16) #6, !dbg !7040
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then21
  %ret.0 = phi i32 [ %call, %if.then21 ], [ %call24, %if.else22 ], !dbg !7041
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !7004, metadata !DIExpression()), !dbg !7010
  %cmp26 = icmp eq i32 %ret.0, -2, !dbg !7042
  br i1 %cmp26, label %if.then27, label %if.end31, !dbg !7044

if.then27:                                        ; preds = %if.end25
  store %union.tree_node* null, %union.tree_node** %arrayidx3, align 8, !dbg !7045
  br label %cleanup, !dbg !7047

if.end31:                                         ; preds = %if.end25
  %17 = load %union.tree_node*, %union.tree_node** %init, align 8, !dbg !7048
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7003, metadata !DIExpression()), !dbg !7010
  %tobool32 = icmp eq %union.tree_node* %17, null, !dbg !7048
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !7050

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7003, metadata !DIExpression()), !dbg !7010
  call void @gimplify_and_add(%union.tree_node* nonnull %17, %struct.gimple_seq_d** %pre_p) #7, !dbg !7051
  br label %if.end34, !dbg !7051

if.end34:                                         ; preds = %if.end31, %if.then33
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7052
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8, !dbg !7052
  %tobool38 = icmp eq %union.tree_node* %18, null, !dbg !7052
  br i1 %tobool38, label %if.end48, label %if.then39, !dbg !7054

if.then39:                                        ; preds = %if.end34
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7055
  %bf.load44 = load i64, i64* %19, align 8, !dbg !7055
  %bf.lshr45 = lshr i64 %bf.load44, 26, !dbg !7055
  %20 = trunc i64 %bf.lshr45 to i8, !dbg !7055
  %bf.cast47 = and i8 %20, 1, !dbg !7055
  call fastcc void @gimple_push_cleanup(%union.tree_node* %1, %union.tree_node* nonnull %18, i8 zeroext %bf.cast47, %struct.gimple_seq_d** %pre_p) #7, !dbg !7056
  br label %if.end48, !dbg !7056

if.end48:                                         ; preds = %if.end34, %if.then39
  %21 = load i64, i64* %5, align 8, !dbg !7057
  %arrayidx51 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !7058
  %22 = bitcast %union.tree_node** %arrayidx51 to i64*, !dbg !7059
  store i64 %21, i64* %22, align 8, !dbg !7059
  store %union.tree_node* null, %union.tree_node** %arrayidx3, align 8, !dbg !7060
  br label %if.end60, !dbg !7061

if.else55:                                        ; preds = %entry
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7062
  %23 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !7062
  %bf.load56 = load i32, i32* %23, align 8, !dbg !7062
  %bf.clear58 = and i32 %bf.load56, 256, !dbg !7062
  %tobool59 = icmp eq i32 %bf.clear58, 0, !dbg !7062
  br i1 %tobool59, label %cond.true, label %if.end60, !dbg !7062

cond.true:                                        ; preds = %if.else55
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5246, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7062
  br label %if.end60, !dbg !7062

if.end60:                                         ; preds = %if.else55, %cond.true, %if.end48
  store %union.tree_node* %1, %union.tree_node** %expr_p, align 8, !dbg !7063
  br label %cleanup, !dbg !7064

cleanup:                                          ; preds = %if.end60, %if.then27
  %retval.0 = phi i32 [ -2, %if.then27 ], [ 0, %if.end60 ], !dbg !7010
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7065
  ret i32 %retval.0, !dbg !7065
}

declare dso_local %union.gimple_statement_d* @gimple_build_catch(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_eh_filter(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_no_warning(%union.gimple_statement_d* %stmt, i8 zeroext %no_warning) unnamed_addr #0 !dbg !7066 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7068, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i8 %no_warning, metadata !7069, metadata !DIExpression()), !dbg !7070
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !7071
  %bf.load = load i32, i32* %0, align 8, !dbg !7072
  %1 = and i8 %no_warning, 1, !dbg !7072
  %bf.value = zext i8 %1 to i32, !dbg !7072
  %bf.shl = shl nuw nsw i32 %bf.value, 8, !dbg !7072
  %bf.clear = and i32 %bf.load, -257, !dbg !7072
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !7072
  store i32 %bf.set, i32* %0, align 8, !dbg !7072
  ret void, !dbg !7073
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_statement_list(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7074 {
entry:
  %i = alloca %struct.tree_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7076, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7077, metadata !DIExpression()), !dbg !7080
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7081
  %call = tail call %union.tree_node* @voidify_wrapper_expr(%union.tree_node* %0, %union.tree_node* null) #7, !dbg !7082
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7078, metadata !DIExpression()), !dbg !7080
  %1 = bitcast %struct.tree_stmt_iterator* %i to i8*, !dbg !7083
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7083
  %2 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7084
  %call1 = tail call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %2) #7, !dbg !7085
  %3 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !7085
  %4 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call1, 0, !dbg !7085
  store %struct.tree_statement_list_node* %4, %struct.tree_statement_list_node** %3, align 8, !dbg !7085
  %5 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 1, !dbg !7085
  %6 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call1, 1, !dbg !7085
  store %union.tree_node* %6, %union.tree_node** %5, align 8, !dbg !7085
  br label %while.cond, !dbg !7086

while.cond:                                       ; preds = %while.body, %entry
  %7 = phi %union.tree_node* [ %.pre1, %while.body ], [ %6, %entry ], !dbg !7087
  %8 = phi %struct.tree_statement_list_node* [ %.pre, %while.body ], [ %4, %entry ], !dbg !7087
  %call2 = call fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %8, %union.tree_node* %7) #7, !dbg !7087
  %tobool = icmp eq i8 %call2, 0, !dbg !7088
  br i1 %tobool, label %while.body, label %while.end, !dbg !7086

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %3, align 8, !dbg !7089
  %10 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !7089
  %call3 = call fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %9, %union.tree_node* %10) #7, !dbg !7089
  %call4 = call zeroext i8 @gimplify_stmt(%union.tree_node** %call3, %struct.gimple_seq_d** %pre_p) #7, !dbg !7091
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !7079, metadata !DIExpression(DW_OP_deref)), !dbg !7080
  call void @tsi_delink(%struct.tree_stmt_iterator* nonnull %i) #6, !dbg !7092
  %.pre = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %3, align 8, !dbg !7087
  %.pre1 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !7087
  br label %while.cond, !dbg !7086, !llvm.loop !7093

while.end:                                        ; preds = %while.cond
  %tobool5 = icmp eq %union.tree_node* %call, null, !dbg !7095
  br i1 %tobool5, label %cleanup, label %if.then, !dbg !7097

if.then:                                          ; preds = %while.end
  store %union.tree_node* %call, %union.tree_node** %expr_p, align 8, !dbg !7098
  br label %cleanup, !dbg !7100

cleanup:                                          ; preds = %while.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %while.end ], !dbg !7080
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7101
  ret i32 %retval.0, !dbg !7101
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_var_or_parm_decl(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !7102 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7104, metadata !DIExpression()), !dbg !7116
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7117
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7105, metadata !DIExpression()), !dbg !7116
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7118
  %bf.load = load i64, i64* %1, align 8, !dbg !7118
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7120
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !7120
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7121

land.lhs.true:                                    ; preds = %entry
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7122
  %2 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !7122
  %bf.load1 = load i32, i32* %2, align 8, !dbg !7122
  %bf.clear2 = and i32 %bf.load1, 256, !dbg !7122
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !7122
  br i1 %tobool, label %land.lhs.true3, label %if.end, !dbg !7123

land.lhs.true3:                                   ; preds = %land.lhs.true
  %bf.cast87 = and i64 %bf.load, 67108864, !dbg !7124
  %tobool9 = icmp eq i64 %bf.cast87, 0, !dbg !7124
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !7125

land.lhs.true10:                                  ; preds = %land.lhs.true3
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7126
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !7126
  %bf.load11 = load i64, i64* %3, align 8, !dbg !7126
  %bf.cast148 = and i64 %bf.load11, 33554432, !dbg !7126
  %tobool15 = icmp eq i64 %bf.cast148, 0, !dbg !7126
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !7127

land.lhs.true16:                                  ; preds = %land.lhs.true10
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #6, !dbg !7128
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7129
  %cmp17 = icmp eq %union.tree_node* %call, %4, !dbg !7130
  br i1 %cmp17, label %if.then, label %if.end, !dbg !7131

if.then:                                          ; preds = %land.lhs.true16
  %5 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !7132
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %5, i64 0, i32 1, i64 4, !dbg !7132
  %6 = load i32, i32* %arrayidx, align 8, !dbg !7132
  %tobool18 = icmp eq i32 %6, 0, !dbg !7132
  br i1 %tobool18, label %lor.lhs.false, label %cleanup, !dbg !7132

lor.lhs.false:                                    ; preds = %if.then
  %arrayidx20 = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %5, i64 0, i32 1, i64 5, !dbg !7132
  %7 = load i32, i32* %arrayidx20, align 4, !dbg !7132
  %tobool21 = icmp eq i32 %7, 0, !dbg !7132
  br i1 %tobool21, label %cond.true, label %cleanup, !dbg !7132

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1820, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7132
  br label %cleanup, !dbg !7132

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true3, %land.lhs.true, %land.lhs.true16, %entry
  %8 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !7134
  %tobool22 = icmp eq %struct.gimplify_omp_ctx* %8, null, !dbg !7134
  br i1 %tobool22, label %if.end27, label %land.lhs.true23, !dbg !7136

land.lhs.true23:                                  ; preds = %if.end
  %call24 = tail call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* nonnull %8, %union.tree_node* %0, i8 zeroext 1) #7, !dbg !7137
  %tobool25 = icmp eq i8 %call24, 0, !dbg !7137
  br i1 %tobool25, label %if.end27, label %cleanup, !dbg !7138

if.end27:                                         ; preds = %land.lhs.true23, %if.end
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7139
  %9 = bitcast i40* %decl_flag_2 to i64*, !dbg !7139
  %bf.load29 = load i64, i64* %9, align 8, !dbg !7139
  %bf.cast322 = and i64 %bf.load29, 67108864, !dbg !7139
  %tobool33 = icmp eq i64 %bf.cast322, 0, !dbg !7139
  br i1 %tobool33, label %cleanup, label %if.then34, !dbg !7140

if.then34:                                        ; preds = %if.end27
  %call35 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %0) #6, !dbg !7141
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !7106, metadata !DIExpression()), !dbg !7142
  %bf.load37 = load i64, i64* %1, align 8, !dbg !7143
  %bf.cast393 = and i64 %bf.load37, 65535, !dbg !7144
  %cmp40 = icmp eq i64 %bf.cast393, 32, !dbg !7144
  br i1 %cmp40, label %land.lhs.true42, label %if.end96, !dbg !7145

land.lhs.true42:                                  ; preds = %if.then34
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7146
  %10 = bitcast %union.tree_node** %size_unit to i64**, !dbg !7146
  %11 = load i64*, i64** %10, align 8, !dbg !7146
  %bf.load45 = load i64, i64* %11, align 8, !dbg !7146
  %bf.cast474 = and i64 %bf.load45, 65535, !dbg !7147
  %cmp48 = icmp ne i64 %bf.cast474, 23, !dbg !7147
  %12 = load %struct.pointer_set_t*, %struct.pointer_set_t** @nonlocal_vlas, align 8, !dbg !7148
  %cmp51 = icmp ne %struct.pointer_set_t* %12, null, !dbg !7149
  %or.cond = and i1 %cmp48, %cmp51, !dbg !7150
  br i1 %or.cond, label %land.lhs.true53, label %if.end96, !dbg !7150

land.lhs.true53:                                  ; preds = %land.lhs.true42
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7151
  %bf.load55 = load i64, i64* %13, align 8, !dbg !7151
  %bf.cast575 = and i64 %bf.load55, 65535, !dbg !7152
  %cmp58 = icmp eq i64 %bf.cast575, 47, !dbg !7152
  br i1 %cmp58, label %land.lhs.true60, label %if.end96, !dbg !7153

land.lhs.true60:                                  ; preds = %land.lhs.true53
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7154
  %14 = bitcast %union.tree_node** %operands to i64**, !dbg !7154
  %15 = load i64*, i64** %14, align 8, !dbg !7154
  %bf.load63 = load i64, i64* %15, align 8, !dbg !7154
  %bf.cast656 = and i64 %bf.load63, 65535, !dbg !7155
  %cmp66 = icmp eq i64 %bf.cast656, 32, !dbg !7155
  br i1 %cmp66, label %land.lhs.true68, label %if.end96, !dbg !7156

land.lhs.true68:                                  ; preds = %land.lhs.true60
  %call69 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #6, !dbg !7157
  %16 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7158
  %cmp70 = icmp eq %union.tree_node* %call69, %16, !dbg !7159
  br i1 %cmp70, label %if.end96, label %if.then72, !dbg !7160

if.then72:                                        ; preds = %land.lhs.true68
  br label %while.cond, !dbg !7161

while.cond:                                       ; preds = %while.body, %if.then72
  %ctx.0.in = phi %struct.gimplify_omp_ctx** [ @gimplify_omp_ctxp, %if.then72 ], [ %outer_context, %while.body ]
  %ctx.0 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %ctx.0.in, align 8, !dbg !7162
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.0, metadata !7109, metadata !DIExpression()), !dbg !7162
  %cond = icmp eq %struct.gimplify_omp_ctx* %ctx.0, null, !dbg !7163
  br i1 %cond, label %land.lhs.true77.loopexit, label %land.rhs, !dbg !7163

land.rhs:                                         ; preds = %while.cond
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 5, !dbg !7164
  %17 = load i32, i32* %region_type, align 8, !dbg !7164
  %cmp74 = icmp eq i32 %17, 0, !dbg !7165
  br i1 %cmp74, label %while.body, label %while.end, !dbg !7161

while.body:                                       ; preds = %land.rhs
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 0, !dbg !7166
  br label %while.cond, !dbg !7161, !llvm.loop !7167

while.end:                                        ; preds = %land.rhs
  br label %if.end96, !dbg !7168

land.lhs.true77.loopexit:                         ; preds = %while.cond
  %18 = load %struct.pointer_set_t*, %struct.pointer_set_t** @nonlocal_vlas, align 8, !dbg !7169
  %19 = bitcast %union.tree_node* %0 to i8*, !dbg !7170
  %call78 = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %18, i8* %19) #6, !dbg !7171
  %tobool79 = icmp eq i32 %call78, 0, !dbg !7171
  br i1 %tobool79, label %if.then80, label %if.end96, !dbg !7172

if.then80:                                        ; preds = %land.lhs.true77.loopexit
  %call81 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %0) #6, !dbg !7173
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !7112, metadata !DIExpression()), !dbg !7174
  %20 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 15), align 8, !dbg !7175
  tail call void %20(%union.tree_node* %call81) #6, !dbg !7176
  tail call void @set_decl_rtl(%union.tree_node* %call81, %struct.rtx_def* null) #6, !dbg !7177
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7178
  %bf.load83 = load i64, i64* %21, align 8, !dbg !7179
  %bf.set = or i64 %bf.load83, 16777216, !dbg !7179
  store i64 %bf.set, i64* %21, align 8, !dbg !7179
  %22 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !7180
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %22, i64 0, i32 5, !dbg !7180
  %23 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7180
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !7115, metadata !DIExpression()), !dbg !7174
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7181
  %25 = bitcast %union.tree_node** %24 to i64*, !dbg !7181
  %26 = load i64, i64* %25, align 8, !dbg !7181
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7182
  %27 = bitcast %union.tree_node** %chain to i64*, !dbg !7183
  store i64 %26, i64* %27, align 8, !dbg !7183
  store %union.tree_node* %call81, %union.tree_node** %24, align 8, !dbg !7184
  %call89 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %call35) #7, !dbg !7185
  tail call void @decl_value_expr_insert(%union.tree_node* %call81, %union.tree_node* %call89) #6, !dbg !7185
  %decl_flag_291 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7186
  %28 = bitcast i40* %decl_flag_291 to i64*, !dbg !7186
  %bf.load92 = load i64, i64* %28, align 8, !dbg !7187
  %bf.set94 = or i64 %bf.load92, 67108864, !dbg !7187
  store i64 %bf.set94, i64* %28, align 8, !dbg !7187
  br label %if.end96, !dbg !7188

if.end96:                                         ; preds = %while.end, %land.lhs.true77.loopexit, %land.lhs.true68, %if.then80, %land.lhs.true60, %land.lhs.true53, %land.lhs.true42, %if.then34
  %call97 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %call35) #7, !dbg !7189
  store %union.tree_node* %call97, %union.tree_node** %expr_p, align 8, !dbg !7190
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false, %if.then, %land.lhs.true23, %if.end27, %cond.true, %if.end96
  %retval.0 = phi i32 [ 0, %if.end96 ], [ -2, %if.then ], [ -2, %lor.lhs.false ], [ -2, %cond.true ], [ 1, %land.lhs.true23 ], [ 1, %if.end27 ], !dbg !7116
  ret i32 %retval.0, !dbg !7191
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl, i8 zeroext %in_code) unnamed_addr #5 !dbg !7192 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx, metadata !7196, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7197, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8 1, metadata !7198, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i32 1, metadata !7200, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8 0, metadata !7201, metadata !DIExpression()), !dbg !7223
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7224
  %cmp = icmp eq %union.tree_node* %0, %decl, !dbg !7226
  br i1 %cmp, label %cleanup218, label %lor.lhs.false, !dbg !7227

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7228
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7228
  %cmp2 = icmp eq %union.tree_node* %1, %0, !dbg !7229
  br i1 %cmp2, label %cleanup218, label %if.end, !dbg !7230

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %decl) #7, !dbg !7231
  %tobool4 = icmp eq i8 %call, 0, !dbg !7231
  br i1 %tobool4, label %if.end34, label %if.then5, !dbg !7232

if.then5:                                         ; preds = %if.end
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7233
  %2 = bitcast i24* %tls_model to i32*, !dbg !7233
  %bf.load = load i32, i32* %2, align 8, !dbg !7233
  %bf.clear = and i32 %bf.load, 49152, !dbg !7233
  %cmp6 = icmp eq i32 %bf.clear, 0, !dbg !7233
  br i1 %cmp6, label %if.end9, label %cleanup218, !dbg !7235

if.end9:                                          ; preds = %if.then5
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7236
  %3 = bitcast i40* %decl_flag_2 to i64*, !dbg !7236
  %bf.load10 = load i64, i64* %3, align 8, !dbg !7236
  %bf.cast7 = and i64 %bf.load10, 67108864, !dbg !7236
  %tobool13 = icmp eq i64 %bf.cast7, 0, !dbg !7236
  br i1 %tobool13, label %if.end34, label %if.then14, !dbg !7237

if.then14:                                        ; preds = %if.end9
  %call15 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %decl) #6, !dbg !7238
  %call16 = tail call %union.tree_node* @get_base_address(%union.tree_node* %call15) #6, !dbg !7239
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !7203, metadata !DIExpression()), !dbg !7240
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !7241
  br i1 %tobool17, label %if.end32, label %land.lhs.true, !dbg !7243

land.lhs.true:                                    ; preds = %if.then14
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7244
  %bf.load18 = load i64, i64* %4, align 8, !dbg !7244
  %bf.cast20 = and i64 %bf.load18, 65535, !dbg !7244
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast20, !dbg !7244
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7244
  %cmp21 = icmp eq i32 %5, 3, !dbg !7244
  br i1 %cmp21, label %land.lhs.true23, label %if.end32, !dbg !7245

land.lhs.true23:                                  ; preds = %land.lhs.true
  %tls_model25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7246
  %6 = bitcast i24* %tls_model25 to i32*, !dbg !7246
  %bf.load26 = load i32, i32* %6, align 8, !dbg !7246
  %bf.clear28 = and i32 %bf.load26, 49152, !dbg !7246
  %cmp29 = icmp eq i32 %bf.clear28, 0, !dbg !7246
  br i1 %cmp29, label %if.end32, label %cleanup, !dbg !7247

if.end32:                                         ; preds = %land.lhs.true23, %if.then14, %land.lhs.true
  br label %cleanup, !dbg !7248

cleanup:                                          ; preds = %land.lhs.true23, %if.end32
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end32 ], [ false, %land.lhs.true23 ]
  br i1 %cleanup.dest.slot.0, label %if.end34, label %cleanup218

if.end34:                                         ; preds = %if.end9, %if.end, %cleanup
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 1, !dbg !7249
  %7 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !7249
  %8 = ptrtoint %union.tree_node* %decl to i64, !dbg !7250
  %call35 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %7, i64 %8) #6, !dbg !7251
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call35, metadata !7199, metadata !DIExpression()), !dbg !7223
  %cmp36 = icmp eq %struct.splay_tree_node_s* %call35, null, !dbg !7252
  br i1 %cmp36, label %if.then38, label %if.end127, !dbg !7253

if.then38:                                        ; preds = %if.end34
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 5, !dbg !7254
  %9 = load i32, i32* %region_type, align 8, !dbg !7254
  %cmp39 = icmp eq i32 %9, 0, !dbg !7256
  br i1 %cmp39, label %do_outer, label %if.end42, !dbg !7257

if.end42:                                         ; preds = %if.then38
  %default_kind43 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 4, !dbg !7258
  %10 = load i32, i32* %default_kind43, align 4, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %10, metadata !7208, metadata !DIExpression()), !dbg !7259
  %11 = load i32 (%union.tree_node*)*, i32 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 11), align 8, !dbg !7260
  %call44 = tail call i32 %11(%union.tree_node* %decl) #6, !dbg !7261
  call void @llvm.dbg.value(metadata i32 %call44, metadata !7211, metadata !DIExpression()), !dbg !7259
  %cmp45 = icmp eq i32 %call44, 0, !dbg !7262
  %spec.select = select i1 %cmp45, i32 %10, i32 %call44, !dbg !7264
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7208, metadata !DIExpression()), !dbg !7259
  switch i32 %spec.select, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb49
    i32 3, label %sw.bb50
    i32 4, label %sw.bb52
    i32 0, label %sw.bb54
  ], !dbg !7265

sw.bb:                                            ; preds = %if.end42
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7266
  %12 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !7266
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0), %union.tree_node* %12) #6, !dbg !7267
  %location = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 3, !dbg !7268
  %13 = load i32, i32* %location, align 8, !dbg !7268
  tail call void (i32, i8*, ...) @error_at(i32 %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !7269
  br label %sw.bb49, !dbg !7269

sw.bb49:                                          ; preds = %if.end42, %sw.bb
  call void @llvm.dbg.value(metadata i32 5, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %sw.epilog, !dbg !7270

sw.bb50:                                          ; preds = %if.end42
  call void @llvm.dbg.value(metadata i32 9, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %sw.epilog, !dbg !7271

sw.bb52:                                          ; preds = %if.end42
  call void @llvm.dbg.value(metadata i32 17, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %sw.epilog, !dbg !7272

sw.bb54:                                          ; preds = %if.end42
  %14 = load i32, i32* %region_type, align 8, !dbg !7273
  %cmp56 = icmp eq i32 %14, 1, !dbg !7273
  br i1 %cmp56, label %cond.end, label %cond.true, !dbg !7273

cond.true:                                        ; preds = %sw.bb54
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7273
  br label %cond.end, !dbg !7273

cond.end:                                         ; preds = %sw.bb54, %cond.true
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 0, !dbg !7274
  %15 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !7274
  %tobool59 = icmp eq %struct.gimplify_omp_ctx* %15, null, !dbg !7276
  br i1 %tobool59, label %if.end63, label %if.then60, !dbg !7277

if.then60:                                        ; preds = %cond.end
  %call62 = tail call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* nonnull %15, %union.tree_node* %decl, i8 zeroext 1) #7, !dbg !7278
  br label %if.end63, !dbg !7278

if.end63:                                         ; preds = %cond.end, %if.then60
  br label %for.cond, !dbg !7279

for.cond:                                         ; preds = %for.inc, %if.end63
  %flags.0 = phi i32 [ 1, %if.end63 ], [ %flags.1, %for.inc ], !dbg !7223
  %ctx.pn = phi %struct.gimplify_omp_ctx* [ %ctx, %if.end63 ], [ %octx.0, %for.inc ]
  %octx.0.in = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.pn, i64 0, i32 0, !dbg !7280
  %octx.0 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %octx.0.in, align 8, !dbg !7280
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %octx.0, metadata !7212, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i32 %flags.0, metadata !7200, metadata !DIExpression()), !dbg !7223
  %tobool65 = icmp eq %struct.gimplify_omp_ctx* %octx.0, null, !dbg !7281
  br i1 %tobool65, label %for.end, label %for.body, !dbg !7281

for.body:                                         ; preds = %for.cond
  %variables66 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %octx.0, i64 0, i32 1, !dbg !7282
  %16 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables66, align 8, !dbg !7282
  %call67 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %16, i64 %8) #6, !dbg !7283
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call67, metadata !7213, metadata !DIExpression()), !dbg !7284
  %tobool68 = icmp eq %struct.splay_tree_node_s* %call67, null, !dbg !7285
  br i1 %tobool68, label %if.end75, label %land.lhs.true69, !dbg !7287

land.lhs.true69:                                  ; preds = %for.body
  %value70 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call67, i64 0, i32 1, !dbg !7288
  %17 = load i64, i64* %value70, align 8, !dbg !7288
  %and = and i64 %17, 252, !dbg !7289
  %cmp71 = icmp eq i64 %and, 4, !dbg !7290
  br i1 %cmp71, label %if.end75, label %if.then73, !dbg !7291

if.then73:                                        ; preds = %land.lhs.true69
  %or74 = or i32 %flags.0, 16, !dbg !7292
  call void @llvm.dbg.value(metadata i32 %or74, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %cleanup82, !dbg !7294

if.end75:                                         ; preds = %land.lhs.true69, %for.body
  %region_type76 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %octx.0, i64 0, i32 5, !dbg !7295
  %18 = load i32, i32* %region_type76, align 8, !dbg !7295
  %and77 = shl i32 %18, 1, !dbg !7297
  %19 = and i32 %and77, 4, !dbg !7297
  br label %cleanup82, !dbg !7297

cleanup82:                                        ; preds = %if.end75, %if.then73
  %flags.1 = phi i32 [ %or74, %if.then73 ], [ %flags.0, %if.end75 ], !dbg !7223
  %cleanup.dest.slot.1 = phi i32 [ 4, %if.then73 ], [ %19, %if.end75 ]
  call void @llvm.dbg.value(metadata i32 %flags.1, metadata !7200, metadata !DIExpression()), !dbg !7223
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup82
  br label %for.cond, !dbg !7298, !llvm.loop !7299

for.end:                                          ; preds = %for.cond, %cleanup82
  %tobool65.lcssa = phi i1 [ %tobool65, %for.cond ], [ %tobool65, %cleanup82 ], !dbg !7281
  %flags.2 = phi i32 [ %flags.1, %cleanup82 ], [ %flags.0, %for.cond ], !dbg !7223
  call void @llvm.dbg.value(metadata i32 %flags.2, metadata !7200, metadata !DIExpression()), !dbg !7223
  %and86 = and i32 %flags.2, 16, !dbg !7301
  %tobool87 = icmp eq i32 %and86, 0, !dbg !7301
  br i1 %tobool87, label %if.end89, label %sw.epilog, !dbg !7303

if.end89:                                         ; preds = %for.end
  br i1 %tobool65.lcssa, label %land.lhs.true92, label %if.end108, !dbg !7304

land.lhs.true92:                                  ; preds = %if.end89
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7306
  %bf.load94 = load i64, i64* %20, align 8, !dbg !7306
  %bf.cast966 = and i64 %bf.load94, 65535, !dbg !7307
  %cmp97 = icmp eq i64 %bf.cast966, 34, !dbg !7307
  br i1 %cmp97, label %if.then106, label %lor.lhs.false99, !dbg !7308

lor.lhs.false99:                                  ; preds = %land.lhs.true92
  %call100 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %decl) #7, !dbg !7309
  %tobool101 = icmp eq i8 %call100, 0, !dbg !7309
  br i1 %tobool101, label %land.lhs.true102, label %if.end108, !dbg !7310

land.lhs.true102:                                 ; preds = %lor.lhs.false99
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7311
  %21 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !7311
  %22 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7312
  %cmp104 = icmp eq %union.tree_node* %21, %22, !dbg !7313
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !7314

if.then106:                                       ; preds = %land.lhs.true102, %land.lhs.true92
  %or107 = or i32 %flags.2, 16, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %or107, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %sw.epilog, !dbg !7317

if.end108:                                        ; preds = %lor.lhs.false99, %land.lhs.true102, %if.end89
  %or109 = or i32 %flags.2, 4, !dbg !7318
  call void @llvm.dbg.value(metadata i32 %or109, metadata !7200, metadata !DIExpression()), !dbg !7223
  br label %sw.epilog, !dbg !7319

sw.default:                                       ; preds = %if.end42
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5549, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7320
  br label %sw.epilog, !dbg !7321

sw.epilog:                                        ; preds = %for.end, %sw.default, %if.end108, %if.then106, %sw.bb52, %sw.bb50, %sw.bb49
  %flags.3 = phi i32 [ 1, %sw.default ], [ %or107, %if.then106 ], [ %or109, %if.end108 ], [ 17, %sw.bb52 ], [ 9, %sw.bb50 ], [ 5, %sw.bb49 ], [ %flags.2, %for.end ], !dbg !7223
  call void @llvm.dbg.value(metadata i32 %flags.3, metadata !7200, metadata !DIExpression()), !dbg !7223
  %and110 = and i32 %flags.3, 8, !dbg !7322
  %tobool111 = icmp eq i32 %and110, 0, !dbg !7322
  br i1 %tobool111, label %if.end118, label %land.lhs.true112, !dbg !7324

land.lhs.true112:                                 ; preds = %sw.epilog
  %23 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 14), align 8, !dbg !7325
  %call113 = tail call zeroext i8 %23(%union.tree_node* %decl) #6, !dbg !7326
  %tobool115 = icmp eq i8 %call113, 0, !dbg !7326
  %or117 = or i32 %flags.3, 512, !dbg !7327
  %spec.select2 = select i1 %tobool115, i32 %flags.3, i32 %or117, !dbg !7328
  br label %if.end118, !dbg !7328

if.end118:                                        ; preds = %sw.epilog, %land.lhs.true112
  %flags.4 = phi i32 [ %flags.3, %sw.epilog ], [ %spec.select2, %land.lhs.true112 ], !dbg !7223
  call void @llvm.dbg.value(metadata i32 %flags.4, metadata !7200, metadata !DIExpression()), !dbg !7223
  tail call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl, i32 %flags.4) #7, !dbg !7329
  %and119 = lshr i32 %flags.4, 2, !dbg !7330
  %24 = trunc i32 %and119 to i8, !dbg !7330
  %25 = and i8 %24, 1, !dbg !7330
  call void @llvm.dbg.value(metadata i8 %25, metadata !7202, metadata !DIExpression()), !dbg !7223
  %26 = load i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 12), align 8, !dbg !7331
  %call123 = tail call zeroext i8 %26(%union.tree_node* %decl, i8 zeroext %25) #6, !dbg !7332
  call void @llvm.dbg.value(metadata i8 %call123, metadata !7201, metadata !DIExpression()), !dbg !7223
  br label %do_outer, !dbg !7333

if.end127:                                        ; preds = %if.end34
  %value128 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call35, i64 0, i32 1, !dbg !7334
  %27 = load i64, i64* %value128, align 8, !dbg !7334
  %and129 = and i64 %27, 129, !dbg !7335
  %cmp130 = icmp eq i64 %and129, 0, !dbg !7336
  br i1 %cmp130, label %land.lhs.true136, label %if.end178, !dbg !7337

land.lhs.true136:                                 ; preds = %if.end127
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7338
  %28 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7338
  %tobool138 = icmp eq %union.tree_node* %28, null, !dbg !7338
  br i1 %tobool138, label %if.end178, label %land.lhs.true139, !dbg !7339

land.lhs.true139:                                 ; preds = %land.lhs.true136
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7339
  %bf.load143 = load i64, i64* %29, align 8, !dbg !7340
  %bf.cast1454 = and i64 %bf.load143, 65535, !dbg !7341
  %cmp146 = icmp eq i64 %bf.cast1454, 23, !dbg !7341
  br i1 %cmp146, label %if.end178, label %if.then148, !dbg !7342

if.then148:                                       ; preds = %land.lhs.true139
  %call150 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %decl) #6, !dbg !7343
  call void @llvm.dbg.value(metadata %union.tree_node* %call150, metadata !7221, metadata !DIExpression()), !dbg !7344
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %call150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7345
  %bf.load152 = load i64, i64* %30, align 8, !dbg !7345
  %bf.cast1545 = and i64 %bf.load152, 65535, !dbg !7345
  %cmp155 = icmp eq i64 %bf.cast1545, 47, !dbg !7345
  br i1 %cmp155, label %cond.end159, label %cond.true157, !dbg !7345

cond.true157:                                     ; preds = %if.then148
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7345
  br label %cond.end159, !dbg !7345

cond.end159:                                      ; preds = %if.then148, %cond.true157
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7346
  %31 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7346
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !7221, metadata !DIExpression()), !dbg !7344
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7347
  %bf.load163 = load i64, i64* %32, align 8, !dbg !7347
  %bf.cast165 = and i64 %bf.load163, 65535, !dbg !7347
  %arrayidx167 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast165, !dbg !7347
  %33 = load i32, i32* %arrayidx167, align 4, !dbg !7347
  %cmp168 = icmp eq i32 %33, 3, !dbg !7347
  br i1 %cmp168, label %cond.end172, label %cond.true170, !dbg !7347

cond.true170:                                     ; preds = %cond.end159
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5572, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7347
  br label %cond.end172, !dbg !7347

cond.end172:                                      ; preds = %cond.end159, %cond.true170
  %34 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !7348
  %35 = ptrtoint %union.tree_node* %31 to i64, !dbg !7349
  %call175 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %34, i64 %35) #6, !dbg !7350
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call175, metadata !7218, metadata !DIExpression()), !dbg !7344
  %value176 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call175, i64 0, i32 1, !dbg !7351
  %36 = load i64, i64* %value176, align 8, !dbg !7352
  %or177 = or i64 %36, 1, !dbg !7352
  store i64 %or177, i64* %value176, align 8, !dbg !7352
  %.pre = load i64, i64* %value128, align 8, !dbg !7353
  br label %if.end178, !dbg !7354

if.end178:                                        ; preds = %land.lhs.true139, %land.lhs.true136, %cond.end172, %if.end127
  %37 = phi i64 [ %27, %land.lhs.true139 ], [ %27, %land.lhs.true136 ], [ %.pre, %cond.end172 ], [ %27, %if.end127 ], !dbg !7353
  %and182 = lshr i64 %37, 2, !dbg !7355
  %38 = trunc i64 %and182 to i8, !dbg !7355
  %39 = and i8 %38, 1, !dbg !7355
  call void @llvm.dbg.value(metadata i8 %39, metadata !7202, metadata !DIExpression()), !dbg !7223
  %40 = load i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 12), align 8, !dbg !7356
  %call186 = tail call zeroext i8 %40(%union.tree_node* %decl, i8 zeroext %39) #6, !dbg !7357
  call void @llvm.dbg.value(metadata i8 %call186, metadata !7201, metadata !DIExpression()), !dbg !7223
  %41 = load i64, i64* %value128, align 8, !dbg !7358
  %and189 = and i64 %41, 1, !dbg !7360
  %cmp191 = icmp eq i64 %and189, 0, !dbg !7361
  br i1 %cmp191, label %if.end194, label %cleanup218, !dbg !7362

if.end194:                                        ; preds = %if.end178
  %or197 = or i64 %41, 1, !dbg !7363
  %conv198 = trunc i64 %or197 to i32, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %conv198, metadata !7200, metadata !DIExpression()), !dbg !7223
  %conv199 = and i64 %or197, 4294967295, !dbg !7364
  store i64 %conv199, i64* %value128, align 8, !dbg !7365
  br label %do_outer, !dbg !7366

do_outer:                                         ; preds = %if.end118, %if.then38, %if.end194
  %ret.1 = phi i8 [ %call186, %if.end194 ], [ %call123, %if.end118 ], [ 0, %if.then38 ], !dbg !7223
  %flags.6 = phi i32 [ %conv198, %if.end194 ], [ %flags.4, %if.end118 ], [ 1, %if.then38 ], !dbg !7223
  call void @llvm.dbg.value(metadata i32 %flags.6, metadata !7200, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !7201, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.label(metadata !7222), !dbg !7367
  %42 = and i32 %flags.6, 520, !dbg !7368
  %43 = icmp eq i32 %42, 8, !dbg !7368
  br i1 %43, label %cleanup218, label %if.end208, !dbg !7368

if.end208:                                        ; preds = %do_outer
  %outer_context209 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 0, !dbg !7370
  %44 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context209, align 8, !dbg !7370
  %tobool210 = icmp eq %struct.gimplify_omp_ctx* %44, null, !dbg !7372
  br i1 %tobool210, label %if.end217, label %land.lhs.true211, !dbg !7373

land.lhs.true211:                                 ; preds = %if.end208
  %call213 = tail call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* nonnull %44, %union.tree_node* %decl, i8 zeroext 1) #7, !dbg !7374
  %tobool215 = icmp eq i8 %call213, 0, !dbg !7374
  br i1 %tobool215, label %if.end217, label %cleanup218, !dbg !7375

if.end217:                                        ; preds = %land.lhs.true211, %if.end208
  br label %cleanup218, !dbg !7376

cleanup218:                                       ; preds = %if.end178, %if.then5, %land.lhs.true211, %do_outer, %entry, %lor.lhs.false, %cleanup, %if.end217
  %retval.3 = phi i8 [ 0, %cleanup ], [ %ret.1, %if.end217 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.then5 ], [ %call186, %if.end178 ], [ %ret.1, %do_outer ], [ 1, %land.lhs.true211 ], !dbg !7223
  ret i8 %retval.3, !dbg !7377
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_omp_parallel(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7378 {
entry:
  %body = alloca %struct.gimple_seq_d*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7382, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7383, metadata !DIExpression()), !dbg !7388
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7389
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7384, metadata !DIExpression()), !dbg !7388
  %1 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !7390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7390
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7386, metadata !DIExpression()), !dbg !7388
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !7391
  %2 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !7392
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7392
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7393
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7393
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7394
  %bf.load = load i64, i64* %3, align 8, !dbg !7394
  %bf.cast1 = and i64 %bf.load, 268435456, !dbg !7394
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !7394
  %cond = select i1 %tobool, i32 2, i32 3, !dbg !7394
  tail call fastcc void @gimplify_scan_omp_clauses(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p, i32 %cond) #7, !dbg !7395
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !7387, metadata !DIExpression(DW_OP_deref)), !dbg !7388
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !7396
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7397
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !7386, metadata !DIExpression(DW_OP_deref)), !dbg !7388
  %call = call fastcc %union.gimple_statement_d* @gimplify_and_return_first(%union.tree_node* %4, %struct.gimple_seq_d** nonnull %body) #7, !dbg !7398
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7385, metadata !DIExpression()), !dbg !7388
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !7399
  %cmp = icmp eq i32 %call4, 10, !dbg !7401
  br i1 %cmp, label %if.then, label %if.else, !dbg !7402

if.then:                                          ; preds = %entry
  call void @pop_gimplify_context(%union.gimple_statement_d* %call) #7, !dbg !7403
  br label %if.end, !dbg !7403

if.else:                                          ; preds = %entry
  call void @pop_gimplify_context(%union.gimple_statement_d* null) #7, !dbg !7404
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call fastcc void @gimplify_adjust_omp_clauses(%union.tree_node** nonnull %arrayidx) #7, !dbg !7405
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !7406
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %5, metadata !7386, metadata !DIExpression()), !dbg !7388
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7407
  %call11 = call %union.gimple_statement_d* @gimple_build_omp_parallel(%struct.gimple_seq_d* %5, %union.tree_node* %6, %union.tree_node* null, %union.tree_node* null) #6, !dbg !7408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !7385, metadata !DIExpression()), !dbg !7388
  %bf.load13 = load i64, i64* %3, align 8, !dbg !7409
  %bf.cast162 = and i64 %bf.load13, 268435456, !dbg !7409
  %tobool17 = icmp eq i64 %bf.cast162, 0, !dbg !7409
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7411

if.then18:                                        ; preds = %if.end
  call fastcc void @gimple_omp_set_subcode(%union.gimple_statement_d* %call11, i32 1) #7, !dbg !7412
  br label %if.end19, !dbg !7412

if.end19:                                         ; preds = %if.end, %if.then18
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call11) #7, !dbg !7413
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !7414
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7415
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7415
  ret void, !dbg !7415
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_omp_task(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7416 {
entry:
  %body = alloca %struct.gimple_seq_d*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7418, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7419, metadata !DIExpression()), !dbg !7424
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7425
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7420, metadata !DIExpression()), !dbg !7424
  %1 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !7426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7426
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7422, metadata !DIExpression()), !dbg !7424
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !7427
  %2 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !7428
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7428
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7429
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7429
  tail call fastcc void @gimplify_scan_omp_clauses(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p, i32 1) #7, !dbg !7430
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !7423, metadata !DIExpression(DW_OP_deref)), !dbg !7424
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !7431
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7432
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !7422, metadata !DIExpression(DW_OP_deref)), !dbg !7424
  %call = call fastcc %union.gimple_statement_d* @gimplify_and_return_first(%union.tree_node* %3, %struct.gimple_seq_d** nonnull %body) #7, !dbg !7433
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7421, metadata !DIExpression()), !dbg !7424
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !7434
  %cmp = icmp eq i32 %call4, 10, !dbg !7436
  br i1 %cmp, label %if.then, label %if.else, !dbg !7437

if.then:                                          ; preds = %entry
  call void @pop_gimplify_context(%union.gimple_statement_d* %call) #7, !dbg !7438
  br label %if.end, !dbg !7438

if.else:                                          ; preds = %entry
  call void @pop_gimplify_context(%union.gimple_statement_d* null) #7, !dbg !7439
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call fastcc void @gimplify_adjust_omp_clauses(%union.tree_node** nonnull %arrayidx) #7, !dbg !7440
  %4 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !7441
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !7422, metadata !DIExpression()), !dbg !7424
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7442
  %call11 = call %union.gimple_statement_d* @gimple_build_omp_task(%struct.gimple_seq_d* %4, %union.tree_node* %5, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #6, !dbg !7443
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !7421, metadata !DIExpression()), !dbg !7424
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call11) #7, !dbg !7444
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !7445
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7446
  ret void, !dbg !7446
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_omp_for(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7447 {
entry:
  %for_body = alloca %struct.gimple_seq_d*, align 8
  %for_pre_body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7449, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7450, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 1, metadata !7455, metadata !DIExpression()), !dbg !7467
  %0 = bitcast %struct.gimple_seq_d** %for_body to i8*, !dbg !7468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7468
  %1 = bitcast %struct.gimple_seq_d** %for_pre_body to i8*, !dbg !7468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7468
  %2 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7469
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7451, metadata !DIExpression()), !dbg !7467
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7470
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7470
  tail call fastcc void @gimplify_scan_omp_clauses(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p, i32 0) #7, !dbg !7471
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7459, metadata !DIExpression()), !dbg !7467
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %for_pre_body, align 8, !dbg !7472
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !7473
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !7473
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_pre_body, metadata !7459, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  call void @gimplify_and_add(%union.tree_node* %3, %struct.gimple_seq_d** nonnull %for_pre_body) #7, !dbg !7474
  store %union.tree_node* null, %union.tree_node** %arrayidx3, align 8, !dbg !7475
  %call = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !7476
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !7458, metadata !DIExpression()), !dbg !7467
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %for_body, align 8, !dbg !7477
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7478
  %4 = bitcast %union.tree_node** %arrayidx9 to %struct.tree_vec**, !dbg !7478
  %5 = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7478
  %length = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %5, i64 0, i32 1, !dbg !7478
  %6 = load i32, i32* %length, align 8, !dbg !7478
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !7478
  %7 = bitcast %union.tree_node** %arrayidx12 to %struct.tree_vec**, !dbg !7478
  %8 = load %struct.tree_vec*, %struct.tree_vec** %7, align 8, !dbg !7478
  %length14 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %8, i64 0, i32 1, !dbg !7478
  %9 = load i32, i32* %length14, align 8, !dbg !7478
  %cmp = icmp eq i32 %6, %9, !dbg !7478
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7478

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7478
  %.pre = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7479
  %length19.phi.trans.insert = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %.pre, i64 0, i32 1, !dbg !7467
  %.pre13 = load i32, i32* %length19.phi.trans.insert, align 8, !dbg !7479
  br label %cond.end, !dbg !7478

cond.end:                                         ; preds = %entry, %cond.true
  %10 = phi i32 [ %6, %entry ], [ %.pre13, %cond.true ], !dbg !7479
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !7479
  %11 = bitcast %union.tree_node** %arrayidx22 to %struct.tree_vec**, !dbg !7479
  %12 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7479
  %length24 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %12, i64 0, i32 1, !dbg !7479
  %13 = load i32, i32* %length24, align 8, !dbg !7479
  %cmp25 = icmp eq i32 %10, %13, !dbg !7479
  br i1 %cmp25, label %cond.end28, label %cond.true26, !dbg !7479

cond.true26:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6069, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7479
  br label %cond.end28, !dbg !7479

cond.end28:                                       ; preds = %cond.end, %cond.true26
  call void @llvm.dbg.value(metadata i32 0, metadata !7460, metadata !DIExpression()), !dbg !7467
  br label %for.cond, !dbg !7480

for.cond:                                         ; preds = %for.inc359, %cond.end28
  %indvars.iv15 = phi i64 [ %indvars.iv.next16, %for.inc359 ], [ 0, %cond.end28 ], !dbg !7467
  %ret.0 = phi i32 [ %ret.1, %for.inc359 ], [ 1, %cond.end28 ], !dbg !7467
  call void @llvm.dbg.value(metadata i64 %indvars.iv15, metadata !7460, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !7455, metadata !DIExpression()), !dbg !7467
  %14 = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7481
  %length34 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %14, i64 0, i32 1, !dbg !7481
  %15 = load i32, i32* %length34, align 8, !dbg !7481
  %16 = sext i32 %15 to i64, !dbg !7482
  %cmp35 = icmp slt i64 %indvars.iv15, %16, !dbg !7482
  br i1 %cmp35, label %for.body, label %for.end360, !dbg !7483

for.body:                                         ; preds = %for.cond
  %arrayidx40 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %14, i64 0, i32 2, i64 %indvars.iv15, !dbg !7484
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx40, align 8, !dbg !7484
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7454, metadata !DIExpression()), !dbg !7467
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7485
  %bf.load = load i64, i64* %18, align 8, !dbg !7485
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7485
  %cmp41 = icmp eq i64 %bf.cast1, 53, !dbg !7485
  br i1 %cmp41, label %cond.end44, label %cond.true42, !dbg !7485

cond.true42:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6073, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7485
  br label %cond.end44, !dbg !7485

cond.end44:                                       ; preds = %for.body, %cond.true42
  %operands47 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7486
  %19 = load %union.tree_node*, %union.tree_node** %operands47, align 8, !dbg !7486
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !7452, metadata !DIExpression()), !dbg !7467
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7487
  %bf.load50 = load i64, i64* %20, align 8, !dbg !7487
  %bf.cast52 = and i64 %bf.load50, 65535, !dbg !7487
  %arrayidx54 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast52, !dbg !7487
  %21 = load i32, i32* %arrayidx54, align 4, !dbg !7487
  %cmp55 = icmp eq i32 %21, 3, !dbg !7487
  br i1 %cmp55, label %cond.end58, label %cond.true56, !dbg !7487

cond.true56:                                      ; preds = %cond.end44
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6075, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7487
  br label %cond.end58, !dbg !7487

cond.end58:                                       ; preds = %cond.end44, %cond.true56
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7488
  %22 = bitcast %union.tree_node** %type to i64**, !dbg !7488
  %23 = load i64*, i64** %22, align 8, !dbg !7488
  %bf.load61 = load i64, i64* %23, align 8, !dbg !7488
  %bf.cast632 = and i64 %bf.load61, 65535, !dbg !7488
  %cmp64 = icmp eq i64 %bf.cast632, 6, !dbg !7488
  br i1 %cmp64, label %cond.end98, label %lor.lhs.false, !dbg !7488

lor.lhs.false:                                    ; preds = %cond.end58
  %cmp71 = icmp eq i64 %bf.cast632, 7, !dbg !7488
  br i1 %cmp71, label %cond.end98, label %lor.lhs.false72, !dbg !7488

lor.lhs.false72:                                  ; preds = %lor.lhs.false
  %cmp79 = icmp eq i64 %bf.cast632, 8, !dbg !7488
  br i1 %cmp79, label %cond.end98, label %lor.lhs.false80, !dbg !7488

lor.lhs.false80:                                  ; preds = %lor.lhs.false72
  %cmp87 = icmp eq i64 %bf.cast632, 10, !dbg !7488
  br i1 %cmp87, label %cond.end98, label %lor.lhs.false88, !dbg !7488

lor.lhs.false88:                                  ; preds = %lor.lhs.false80
  %cmp95 = icmp eq i64 %bf.cast632, 12, !dbg !7488
  br i1 %cmp95, label %cond.end98, label %cond.true96, !dbg !7488

cond.true96:                                      ; preds = %lor.lhs.false88
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6077, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7488
  br label %cond.end98, !dbg !7488

cond.end98:                                       ; preds = %cond.end58, %lor.lhs.false, %lor.lhs.false72, %lor.lhs.false80, %lor.lhs.false88, %cond.true96
  %24 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !7489
  %call100 = call fastcc zeroext i8 @omp_is_private(%struct.gimplify_omp_ctx* %24, %union.tree_node* %19) #7, !dbg !7491
  %tobool = icmp eq i8 %call100, 0, !dbg !7491
  %25 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !7492
  br i1 %tobool, label %if.else, label %if.then, !dbg !7493

if.then:                                          ; preds = %cond.end98
  %call101 = call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* %25, %union.tree_node* %19, i8 zeroext 1) #7, !dbg !7494
  br label %if.end, !dbg !7494

if.else:                                          ; preds = %cond.end98
  call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %25, %union.tree_node* %19, i32 9) #7, !dbg !7495
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call102 = call zeroext i8 @is_gimple_reg(%union.tree_node* %19) #6, !dbg !7496
  %tobool103 = icmp eq i8 %call102, 0, !dbg !7496
  br i1 %tobool103, label %if.then104, label %if.end114, !dbg !7498

if.then104:                                       ; preds = %if.end
  %26 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7499
  %call107 = call i8* @get_name(%union.tree_node* %19) #6, !dbg !7501
  %call108 = call %union.tree_node* @create_tmp_var(%union.tree_node* %26, i8* %call107) #7, !dbg !7502
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !7453, metadata !DIExpression()), !dbg !7467
  store %union.tree_node* %call108, %union.tree_node** %operands47, align 8, !dbg !7503
  %call112 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %19, %union.tree_node* %call108) #6, !dbg !7504
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_body, metadata !7458, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %for_body, %union.gimple_statement_d* %call112) #7, !dbg !7505
  %27 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !7506
  call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %27, %union.tree_node* %call108, i32 9) #7, !dbg !7507
  br label %if.end114, !dbg !7508

if.end114:                                        ; preds = %if.end, %if.then104
  %var.0 = phi %union.tree_node* [ %call108, %if.then104 ], [ %19, %if.end ], !dbg !7509
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !7453, metadata !DIExpression()), !dbg !7467
  %arrayidx117 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands47, i64 1, !dbg !7510
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_pre_body, metadata !7459, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  %call118 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx117, %struct.gimple_seq_d** nonnull %for_pre_body, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %call118, metadata !7456, metadata !DIExpression()), !dbg !7467
  %cmp119 = icmp slt i32 %ret.0, %call118, !dbg !7512
  %ret.0.call118 = select i1 %cmp119, i32 %ret.0, i32 %call118, !dbg !7512
  call void @llvm.dbg.value(metadata i32 %ret.0.call118, metadata !7455, metadata !DIExpression()), !dbg !7467
  %cmp124 = icmp eq i32 %ret.0.call118, -2, !dbg !7513
  br i1 %cmp124, label %cleanup.loopexit, label %if.end126, !dbg !7515

if.end126:                                        ; preds = %if.end114
  %28 = load %struct.tree_vec*, %struct.tree_vec** %7, align 8, !dbg !7516
  %arrayidx133 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %28, i64 0, i32 2, i64 %indvars.iv15, !dbg !7516
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx133, align 8, !dbg !7516
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !7454, metadata !DIExpression()), !dbg !7467
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7517
  %bf.load135 = load i64, i64* %30, align 8, !dbg !7517
  %bf.cast137 = and i64 %bf.load135, 65535, !dbg !7517
  %arrayidx139 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast137, !dbg !7517
  %31 = load i32, i32* %arrayidx139, align 4, !dbg !7517
  %cmp140 = icmp eq i32 %31, 5, !dbg !7517
  br i1 %cmp140, label %cond.end143, label %cond.true141, !dbg !7517

cond.true141:                                     ; preds = %if.end126
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7517
  br label %cond.end143, !dbg !7517

cond.end143:                                      ; preds = %if.end126, %cond.true141
  %operands146 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7518
  %32 = load %union.tree_node*, %union.tree_node** %operands146, align 8, !dbg !7518
  %cmp148 = icmp eq %union.tree_node* %32, %19, !dbg !7518
  br i1 %cmp148, label %cond.end151, label %cond.true149, !dbg !7518

cond.true149:                                     ; preds = %cond.end143
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7518
  br label %cond.end151, !dbg !7518

cond.end151:                                      ; preds = %cond.end143, %cond.true149
  %arrayidx155 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands146, i64 1, !dbg !7519
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_pre_body, metadata !7459, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  %call156 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx155, %struct.gimple_seq_d** nonnull %for_pre_body, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7520
  call void @llvm.dbg.value(metadata i32 %call156, metadata !7456, metadata !DIExpression()), !dbg !7467
  %cmp157 = icmp slt i32 %ret.0.call118, %call156, !dbg !7521
  %ret.0.call118.call156 = select i1 %cmp157, i32 %ret.0.call118, i32 %call156, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %ret.0.call118.call156, metadata !7455, metadata !DIExpression()), !dbg !7467
  %33 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7522
  %arrayidx168 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %33, i64 0, i32 2, i64 %indvars.iv15, !dbg !7522
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx168, align 8, !dbg !7522
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !7454, metadata !DIExpression()), !dbg !7467
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7523
  %bf.load170 = load i64, i64* %35, align 8, !dbg !7523
  %36 = trunc i64 %bf.load170 to i16, !dbg !7523
  switch i16 %36, label %sw.default262 [
    i16 126, label %sw.bb
    i16 128, label %sw.bb
    i16 125, label %sw.bb189
    i16 127, label %sw.bb189
    i16 53, label %sw.bb206
  ], !dbg !7524

sw.bb:                                            ; preds = %cond.end151, %cond.end151
  %37 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7525
  %call175 = call %union.tree_node* @build_int_cst(%union.tree_node* %37, i64 1) #6, !dbg !7527
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !7454, metadata !DIExpression()), !dbg !7467
  %38 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7528
  %call178 = call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %38, %union.tree_node* %var.0, %union.tree_node* %call175) #6, !dbg !7528
  call void @llvm.dbg.value(metadata %union.tree_node* %call178, metadata !7454, metadata !DIExpression()), !dbg !7467
  %type180 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7529
  %39 = load %union.tree_node*, %union.tree_node** %type180, align 8, !dbg !7529
  %call181 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %39, %union.tree_node* %var.0, %union.tree_node* %call178) #6, !dbg !7529
  call void @llvm.dbg.value(metadata %union.tree_node* %call181, metadata !7454, metadata !DIExpression()), !dbg !7467
  %40 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7530
  %arrayidx188 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %40, i64 0, i32 2, i64 %indvars.iv15, !dbg !7530
  store %union.tree_node* %call181, %union.tree_node** %arrayidx188, align 8, !dbg !7531
  br label %sw.epilog263, !dbg !7532

sw.bb189:                                         ; preds = %cond.end151, %cond.end151
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7533
  %call192 = call %union.tree_node* @build_int_cst(%union.tree_node* %41, i64 -1) #6, !dbg !7534
  call void @llvm.dbg.value(metadata %union.tree_node* %call192, metadata !7454, metadata !DIExpression()), !dbg !7467
  %42 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7535
  %call195 = call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %42, %union.tree_node* %var.0, %union.tree_node* %call192) #6, !dbg !7535
  call void @llvm.dbg.value(metadata %union.tree_node* %call195, metadata !7454, metadata !DIExpression()), !dbg !7467
  %type197 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7536
  %43 = load %union.tree_node*, %union.tree_node** %type197, align 8, !dbg !7536
  %call198 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %43, %union.tree_node* %var.0, %union.tree_node* %call195) #6, !dbg !7536
  call void @llvm.dbg.value(metadata %union.tree_node* %call198, metadata !7454, metadata !DIExpression()), !dbg !7467
  %44 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7537
  %arrayidx205 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %44, i64 0, i32 2, i64 %indvars.iv15, !dbg !7537
  store %union.tree_node* %call198, %union.tree_node** %arrayidx205, align 8, !dbg !7538
  br label %sw.epilog263, !dbg !7539

sw.bb206:                                         ; preds = %cond.end151
  %operands208 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7540
  %45 = load %union.tree_node*, %union.tree_node** %operands208, align 8, !dbg !7540
  %cmp210 = icmp eq %union.tree_node* %45, %19, !dbg !7540
  br i1 %cmp210, label %cond.end213, label %cond.true211, !dbg !7540

cond.true211:                                     ; preds = %sw.bb206
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7540
  br label %cond.end213, !dbg !7540

cond.end213:                                      ; preds = %sw.bb206, %cond.true211
  store %union.tree_node* %var.0, %union.tree_node** %operands208, align 8, !dbg !7541
  %arrayidx220 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands208, i64 1, !dbg !7542
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx220, align 8, !dbg !7542
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !7454, metadata !DIExpression()), !dbg !7467
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7543
  %bf.load222 = load i64, i64* %47, align 8, !dbg !7543
  %48 = trunc i64 %bf.load222 to i16, !dbg !7543
  switch i16 %48, label %sw.default [
    i16 63, label %sw.bb225
    i16 64, label %sw.bb241
    i16 66, label %sw.bb241
  ], !dbg !7544

sw.bb225:                                         ; preds = %cond.end213
  %operands227 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7545
  %arrayidx228 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands227, i64 1, !dbg !7545
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx228, align 8, !dbg !7545
  %cmp229 = icmp eq %union.tree_node* %49, %19, !dbg !7548
  br i1 %cmp229, label %if.then230, label %sw.bb241, !dbg !7549

if.then230:                                       ; preds = %sw.bb225
  %50 = bitcast %union.tree_node** %operands227 to i64*, !dbg !7550
  %51 = load i64, i64* %50, align 8, !dbg !7550
  %52 = bitcast %union.tree_node** %arrayidx228 to i64*, !dbg !7552
  store i64 %51, i64* %52, align 8, !dbg !7552
  store %union.tree_node* %var.0, %union.tree_node** %operands227, align 8, !dbg !7553
  br label %sw.epilog, !dbg !7554

sw.bb241:                                         ; preds = %sw.bb225, %cond.end213, %cond.end213
  %operands243 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7555
  %53 = load %union.tree_node*, %union.tree_node** %operands243, align 8, !dbg !7555
  %cmp245 = icmp eq %union.tree_node* %53, %19, !dbg !7555
  br i1 %cmp245, label %cond.end248, label %cond.true246, !dbg !7555

cond.true246:                                     ; preds = %sw.bb241
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7555
  br label %cond.end248, !dbg !7555

cond.end248:                                      ; preds = %sw.bb241, %cond.true246
  store %union.tree_node* %var.0, %union.tree_node** %operands243, align 8, !dbg !7556
  br label %sw.epilog, !dbg !7557

sw.default:                                       ; preds = %cond.end213
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7558
  br label %sw.epilog, !dbg !7559

sw.epilog:                                        ; preds = %sw.default, %cond.end248, %if.then230
  %operands254 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7560
  %arrayidx255 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands254, i64 1, !dbg !7560
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_pre_body, metadata !7459, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  %call256 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx255, %struct.gimple_seq_d** nonnull %for_pre_body, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %call256, metadata !7456, metadata !DIExpression()), !dbg !7467
  %cmp257 = icmp slt i32 %ret.0.call118.call156, %call256, !dbg !7562
  %ret.0.call118.call156.call256 = select i1 %cmp257, i32 %ret.0.call118.call156, i32 %call256, !dbg !7562
  call void @llvm.dbg.value(metadata i32 %ret.0.call118.call156.call256, metadata !7455, metadata !DIExpression()), !dbg !7467
  br label %sw.epilog263, !dbg !7563

sw.default262:                                    ; preds = %cond.end151
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7564
  br label %sw.epilog263, !dbg !7565

sw.epilog263:                                     ; preds = %sw.default262, %sw.epilog, %sw.bb189, %sw.bb
  %ret.1 = phi i32 [ %ret.0.call118.call156, %sw.default262 ], [ %ret.0.call118.call156.call256, %sw.epilog ], [ %ret.0.call118.call156, %sw.bb189 ], [ %ret.0.call118.call156, %sw.bb ], !dbg !7566
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !7455, metadata !DIExpression()), !dbg !7467
  %cmp264 = icmp eq %union.tree_node* %var.0, %19, !dbg !7567
  br i1 %cmp264, label %lor.lhs.false265, label %if.then272, !dbg !7568

lor.lhs.false265:                                 ; preds = %sw.epilog263
  %54 = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7569
  %length270 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %54, i64 0, i32 1, !dbg !7569
  %55 = load i32, i32* %length270, align 8, !dbg !7569
  %cmp271 = icmp sgt i32 %55, 1, !dbg !7570
  br i1 %cmp271, label %if.then272, label %for.inc359, !dbg !7571

if.then272:                                       ; preds = %sw.epilog263, %lor.lhs.false265
  br label %for.cond276, !dbg !7572

for.cond276:                                      ; preds = %for.inc, %if.then272
  %c.0.in = phi %union.tree_node** [ %arrayidx, %if.then272 ], [ %chain, %for.inc ]
  %c.0 = load %union.tree_node*, %union.tree_node** %c.0.in, align 8, !dbg !7574
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !7461, metadata !DIExpression()), !dbg !7575
  %tobool277 = icmp eq %union.tree_node* %c.0, null, !dbg !7576
  br i1 %tobool277, label %for.inc359.loopexit, label %for.body278, !dbg !7576

for.body278:                                      ; preds = %for.cond276
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7577
  %57 = load i32, i32* %56, align 4, !dbg !7577
  %cmp279 = icmp eq i32 %57, 4, !dbg !7580
  br i1 %cmp279, label %land.lhs.true, label %for.inc, !dbg !7581

land.lhs.true:                                    ; preds = %for.body278
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7582
  %arrayidx281 = bitcast i40* %ops to %union.tree_node**, !dbg !7582
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx281, align 8, !dbg !7582
  %cmp282 = icmp eq %union.tree_node* %58, %19, !dbg !7583
  br i1 %cmp282, label %land.lhs.true283, label %for.inc, !dbg !7584

land.lhs.true283:                                 ; preds = %land.lhs.true
  %gimple_reduction_init = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7585
  %59 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !7585
  %60 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %59, align 8, !dbg !7585
  %cmp285 = icmp eq %struct.gimple_seq_d* %60, null, !dbg !7586
  br i1 %cmp285, label %if.then286, label %for.inc, !dbg !7587

if.then286:                                       ; preds = %land.lhs.true283
  %61 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7588
  %arrayidx293 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %61, i64 0, i32 2, i64 %indvars.iv15, !dbg !7588
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx293, align 8, !dbg !7588
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !7454, metadata !DIExpression()), !dbg !7467
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7590
  %bf.load295 = load i64, i64* %63, align 8, !dbg !7590
  %bf.cast2977 = and i64 %bf.load295, 65535, !dbg !7590
  %cmp298 = icmp eq i64 %bf.cast2977, 53, !dbg !7590
  br i1 %cmp298, label %cond.end301, label %cond.true299, !dbg !7590

cond.true299:                                     ; preds = %if.then286
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7590
  br label %cond.end301, !dbg !7590

cond.end301:                                      ; preds = %if.then286, %cond.true299
  %operands304 = getelementptr inbounds %union.tree_node, %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7591
  %64 = load %union.tree_node*, %union.tree_node** %operands304, align 8, !dbg !7591
  %cmp306 = icmp eq %union.tree_node* %64, %var.0, !dbg !7591
  br i1 %cmp306, label %cond.end309, label %cond.true307, !dbg !7591

cond.true307:                                     ; preds = %cond.end301
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7591
  br label %cond.end309, !dbg !7591

cond.end309:                                      ; preds = %cond.end301, %cond.true307
  %arrayidx313 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands304, i64 1, !dbg !7592
  %65 = load %union.tree_node*, %union.tree_node** %arrayidx313, align 8, !dbg !7592
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !7454, metadata !DIExpression()), !dbg !7467
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7593
  %bf.load315 = load i64, i64* %66, align 8, !dbg !7593
  %bf.cast3178 = and i64 %bf.load315, 65535, !dbg !7593
  %cmp318 = icmp eq i64 %bf.cast3178, 63, !dbg !7593
  br i1 %cmp318, label %cond.end333, label %lor.lhs.false319, !dbg !7593

lor.lhs.false319:                                 ; preds = %cond.end309
  %cmp324 = icmp eq i64 %bf.cast3178, 64, !dbg !7593
  br i1 %cmp324, label %cond.end333, label %lor.lhs.false325, !dbg !7593

lor.lhs.false325:                                 ; preds = %lor.lhs.false319
  %cmp330 = icmp eq i64 %bf.cast3178, 66, !dbg !7593
  br i1 %cmp330, label %cond.end333, label %cond.true331, !dbg !7593

cond.true331:                                     ; preds = %lor.lhs.false325
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6183, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7593
  br label %cond.end333, !dbg !7593

cond.end333:                                      ; preds = %cond.end309, %lor.lhs.false319, %lor.lhs.false325, %cond.true331
  %operands336 = getelementptr inbounds %union.tree_node, %union.tree_node* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7594
  %67 = load %union.tree_node*, %union.tree_node** %operands336, align 8, !dbg !7594
  %cmp338 = icmp eq %union.tree_node* %67, %var.0, !dbg !7594
  br i1 %cmp338, label %cond.end341, label %cond.true339, !dbg !7594

cond.true339:                                     ; preds = %cond.end333
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7594
  br label %cond.end341, !dbg !7594

cond.end341:                                      ; preds = %cond.end333, %cond.true339
  %bf.load344 = load i64, i64* %66, align 8, !dbg !7595
  %68 = trunc i64 %bf.load344 to i32, !dbg !7595
  %bf.cast346 = and i32 %68, 65535, !dbg !7595
  %69 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7595
  %arrayidx351 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands336, i64 1, !dbg !7595
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx351, align 8, !dbg !7595
  %call352 = call %union.tree_node* @build2_stat(i32 %bf.cast346, %union.tree_node* %69, %union.tree_node* %19, %union.tree_node* %70) #6, !dbg !7595
  call void @llvm.dbg.value(metadata %union.tree_node* %call352, metadata !7454, metadata !DIExpression()), !dbg !7467
  %call355 = call %union.gimple_statement_d* @gimplify_assign(%union.tree_node* %19, %union.tree_node* %call352, %struct.gimple_seq_d** nonnull %59) #6, !dbg !7596
  br label %for.inc, !dbg !7597

for.inc:                                          ; preds = %for.body278, %land.lhs.true, %land.lhs.true283, %cond.end341
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7598
  br label %for.cond276, !dbg !7599, !llvm.loop !7600

for.inc359.loopexit:                              ; preds = %for.cond276
  br label %for.inc359, !dbg !7602

for.inc359:                                       ; preds = %for.inc359.loopexit, %lor.lhs.false265
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !7602
  call void @llvm.dbg.value(metadata i32 undef, metadata !7460, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7467
  br label %for.cond, !dbg !7603, !llvm.loop !7604

for.end360:                                       ; preds = %for.cond
  %ret.0.lcssa = phi i32 [ %ret.0, %for.cond ], !dbg !7467
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !7455, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !7455, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 %ret.0.lcssa, metadata !7455, metadata !DIExpression()), !dbg !7467
  %71 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7606
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %for_body, metadata !7458, metadata !DIExpression(DW_OP_deref)), !dbg !7467
  call void @gimplify_and_add(%union.tree_node* %71, %struct.gimple_seq_d** nonnull %for_body) #7, !dbg !7607
  call fastcc void @gimplify_adjust_omp_clauses(%union.tree_node** nonnull %arrayidx) #7, !dbg !7608
  %72 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %for_body, align 8, !dbg !7609
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %72, metadata !7458, metadata !DIExpression()), !dbg !7467
  %73 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7610
  %74 = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7611
  %length374 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %74, i64 0, i32 1, !dbg !7611
  %75 = load i32, i32* %length374, align 8, !dbg !7611
  %conv = sext i32 %75 to i64, !dbg !7611
  %76 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %for_pre_body, align 8, !dbg !7612
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %76, metadata !7459, metadata !DIExpression()), !dbg !7467
  %call375 = call %union.gimple_statement_d* @gimple_build_omp_for(%struct.gimple_seq_d* %72, %union.tree_node* %73, i64 %conv, %struct.gimple_seq_d* %76) #6, !dbg !7613
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call375, metadata !7457, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 0, metadata !7460, metadata !DIExpression()), !dbg !7467
  br label %for.cond376, !dbg !7614

for.cond376:                                      ; preds = %for.body384, %for.end360
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body384 ], [ 0, %for.end360 ], !dbg !7616
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7460, metadata !DIExpression()), !dbg !7467
  %77 = load %struct.tree_vec*, %struct.tree_vec** %4, align 8, !dbg !7617
  %length381 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %77, i64 0, i32 1, !dbg !7617
  %78 = load i32, i32* %length381, align 8, !dbg !7617
  %79 = sext i32 %78 to i64, !dbg !7619
  %cmp382 = icmp slt i64 %indvars.iv, %79, !dbg !7619
  br i1 %cmp382, label %for.body384, label %for.end429, !dbg !7620

for.body384:                                      ; preds = %for.cond376
  %arrayidx391 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %77, i64 0, i32 2, i64 %indvars.iv, !dbg !7621
  %80 = load %union.tree_node*, %union.tree_node** %arrayidx391, align 8, !dbg !7621
  call void @llvm.dbg.value(metadata %union.tree_node* %80, metadata !7454, metadata !DIExpression()), !dbg !7467
  %operands394 = getelementptr inbounds %union.tree_node, %union.tree_node* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7623
  %81 = load %union.tree_node*, %union.tree_node** %operands394, align 8, !dbg !7623
  call fastcc void @gimple_omp_for_set_index(%union.gimple_statement_d* %call375, i64 %indvars.iv, %union.tree_node* %81) #7, !dbg !7624
  %arrayidx399 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands394, i64 1, !dbg !7625
  %82 = load %union.tree_node*, %union.tree_node** %arrayidx399, align 8, !dbg !7625
  call fastcc void @gimple_omp_for_set_initial(%union.gimple_statement_d* %call375, i64 %indvars.iv, %union.tree_node* %82) #7, !dbg !7626
  %83 = load %struct.tree_vec*, %struct.tree_vec** %7, align 8, !dbg !7627
  %arrayidx406 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %83, i64 0, i32 2, i64 %indvars.iv, !dbg !7627
  %84 = load %union.tree_node*, %union.tree_node** %arrayidx406, align 8, !dbg !7627
  call void @llvm.dbg.value(metadata %union.tree_node* %84, metadata !7454, metadata !DIExpression()), !dbg !7467
  %85 = getelementptr inbounds %union.tree_node, %union.tree_node* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7628
  %bf.load409 = load i64, i64* %85, align 8, !dbg !7628
  %86 = trunc i64 %bf.load409 to i32, !dbg !7628
  %bf.cast411 = and i32 %86, 65535, !dbg !7628
  call fastcc void @gimple_omp_for_set_cond(%union.gimple_statement_d* %call375, i64 %indvars.iv, i32 %bf.cast411) #7, !dbg !7629
  %operands414 = getelementptr inbounds %union.tree_node, %union.tree_node* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7630
  %arrayidx415 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands414, i64 1, !dbg !7630
  %87 = load %union.tree_node*, %union.tree_node** %arrayidx415, align 8, !dbg !7630
  call fastcc void @gimple_omp_for_set_final(%union.gimple_statement_d* %call375, i64 %indvars.iv, %union.tree_node* %87) #7, !dbg !7631
  %88 = load %struct.tree_vec*, %struct.tree_vec** %11, align 8, !dbg !7632
  %arrayidx422 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %88, i64 0, i32 2, i64 %indvars.iv, !dbg !7632
  %89 = bitcast %union.tree_node** %arrayidx422 to %struct.tree_exp**, !dbg !7632
  %90 = load %struct.tree_exp*, %struct.tree_exp** %89, align 8, !dbg !7632
  %arrayidx426 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %90, i64 0, i32 3, i64 1, !dbg !7633
  %91 = load %union.tree_node*, %union.tree_node** %arrayidx426, align 8, !dbg !7633
  call fastcc void @gimple_omp_for_set_incr(%union.gimple_statement_d* %call375, i64 %indvars.iv, %union.tree_node* %91) #7, !dbg !7634
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7635
  call void @llvm.dbg.value(metadata i32 undef, metadata !7460, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7467
  br label %for.cond376, !dbg !7636, !llvm.loop !7637

for.end429:                                       ; preds = %for.cond376
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call375) #7, !dbg !7639
  %cmp430 = icmp eq i32 %ret.0.lcssa, 1, !dbg !7640
  %cond432 = select i1 %cmp430, i32 1, i32 -2, !dbg !7641
  br label %cleanup, !dbg !7642

cleanup.loopexit:                                 ; preds = %if.end114
  br label %cleanup, !dbg !7643

cleanup:                                          ; preds = %cleanup.loopexit, %for.end429
  %retval.0 = phi i32 [ %cond432, %for.end429 ], [ -2, %cleanup.loopexit ], !dbg !7467
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7643
  ret i32 %retval.0, !dbg !7643
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_omp_workshare(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7644 {
entry:
  %body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7646, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7647, metadata !DIExpression()), !dbg !7651
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7652
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7648, metadata !DIExpression()), !dbg !7651
  %1 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !7653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7650, metadata !DIExpression()), !dbg !7651
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !7654
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7655
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7655
  tail call fastcc void @gimplify_scan_omp_clauses(%union.tree_node** nonnull %arrayidx, %struct.gimple_seq_d** %pre_p, i32 0) #7, !dbg !7656
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7657
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !7650, metadata !DIExpression(DW_OP_deref)), !dbg !7651
  call void @gimplify_and_add(%union.tree_node* %2, %struct.gimple_seq_d** nonnull %body) #7, !dbg !7658
  call fastcc void @gimplify_adjust_omp_clauses(%union.tree_node** nonnull %arrayidx) #7, !dbg !7659
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7660
  %bf.load = load i64, i64* %3, align 8, !dbg !7660
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7662
  %cmp = icmp eq i64 %bf.cast1, 156, !dbg !7662
  br i1 %cmp, label %if.then, label %if.else, !dbg !7663

if.then:                                          ; preds = %entry
  %4 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !7664
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !7650, metadata !DIExpression()), !dbg !7651
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7665
  %call = call %union.gimple_statement_d* @gimple_build_omp_sections(%struct.gimple_seq_d* %4, %union.tree_node* %5) #6, !dbg !7666
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7649, metadata !DIExpression()), !dbg !7651
  br label %if.end21, !dbg !7667

if.else:                                          ; preds = %entry
  %cmp14 = icmp eq i64 %bf.cast1, 157, !dbg !7668
  br i1 %cmp14, label %if.then15, label %if.else20, !dbg !7670

if.then15:                                        ; preds = %if.else
  %6 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !7671
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %6, metadata !7650, metadata !DIExpression()), !dbg !7651
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7672
  %call19 = call %union.gimple_statement_d* @gimple_build_omp_single(%struct.gimple_seq_d* %6, %union.tree_node* %7) #6, !dbg !7673
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !7649, metadata !DIExpression()), !dbg !7651
  br label %if.end21, !dbg !7674

if.else20:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7675
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %if.else20, %if.then
  %stmt.1 = phi %union.gimple_statement_d* [ %call, %if.then ], [ %call19, %if.then15 ], [ undef, %if.else20 ], !dbg !7676
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !7649, metadata !DIExpression()), !dbg !7651
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %stmt.1) #7, !dbg !7677
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7678
  ret void, !dbg !7678
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_section(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_master(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_ordered(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_critical(%struct.gimple_seq_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_omp_atomic(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !7679 {
entry:
  %addr = alloca %union.tree_node*, align 8
  %rhs = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7681, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !7682, metadata !DIExpression()), !dbg !7687
  %0 = bitcast %union.tree_node** %addr to i8*, !dbg !7688
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7688
  %1 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !7689
  %2 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !7689
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 0, !dbg !7689
  %3 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !7689
  %4 = load i64, i64* %3, align 8, !dbg !7689
  %5 = bitcast %union.tree_node** %addr to i64*, !dbg !7690
  store i64 %4, i64* %5, align 8, !dbg !7690
  %6 = bitcast %union.tree_node** %rhs to i8*, !dbg !7691
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !7691
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 1, !dbg !7692
  %7 = bitcast %union.tree_node** %arrayidx3 to i64*, !dbg !7692
  %8 = load i64, i64* %7, align 8, !dbg !7692
  %9 = bitcast %union.tree_node** %rhs to i64*, !dbg !7693
  store i64 %8, i64* %9, align 8, !dbg !7693
  %10 = inttoptr i64 %4 to %struct.tree_common*, !dbg !7694
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !7694
  %11 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !7694
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !7694
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !7694
  %13 = bitcast %union.tree_node** %type6 to %struct.tree_type**, !dbg !7694
  %14 = load %struct.tree_type*, %struct.tree_type** %13, align 8, !dbg !7694
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 16, !dbg !7694
  %15 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !7694
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !7685, metadata !DIExpression()), !dbg !7687
  %call = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %15, i8* null) #7, !dbg !7695
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7686, metadata !DIExpression()), !dbg !7687
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7696
  %bf.load = load i64, i64* %16, align 8, !dbg !7696
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7698
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !7698
  %17 = inttoptr i64 %4 to %union.tree_node*, !dbg !7699
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7699

lor.lhs.false:                                    ; preds = %entry
  %cmp12 = icmp eq i64 %bf.cast1, 14, !dbg !7700
  br i1 %cmp12, label %if.then, label %if.end, !dbg !7701

if.then:                                          ; preds = %lor.lhs.false, %entry
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7702
  %18 = bitcast i40* %gimple_reg_flag to i64*, !dbg !7702
  %bf.load13 = load i64, i64* %18, align 8, !dbg !7703
  %bf.set = or i64 %bf.load13, 134217728, !dbg !7703
  store i64 %bf.set, i64* %18, align 8, !dbg !7703
  br label %if.end, !dbg !7702

if.end:                                           ; preds = %if.then, %lor.lhs.false
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7683, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata %union.tree_node** %rhs, metadata !7684, metadata !DIExpression(DW_OP_deref)), !dbg !7687
  %call15 = call fastcc i32 @goa_stabilize_expr(%union.tree_node** nonnull %rhs, %struct.gimple_seq_d** %pre_p, %union.tree_node* %17, %union.tree_node* %call) #7, !dbg !7704
  %cmp16 = icmp slt i32 %call15, 0, !dbg !7706
  br i1 %cmp16, label %cleanup, label %if.end18, !dbg !7707

if.end18:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node** %addr, metadata !7683, metadata !DIExpression(DW_OP_deref)), !dbg !7687
  %call19 = call i32 @gimplify_expr(%union.tree_node** nonnull %addr, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7708
  %cmp20 = icmp eq i32 %call19, 1, !dbg !7710
  br i1 %cmp20, label %if.end22, label %cleanup, !dbg !7711

if.end22:                                         ; preds = %if.end18
  %19 = load %union.tree_node*, %union.tree_node** %addr, align 8, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !7683, metadata !DIExpression()), !dbg !7687
  %call23 = call %union.gimple_statement_d* @gimple_build_omp_atomic_load(%union.tree_node* %call, %union.tree_node* %19) #6, !dbg !7713
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call23) #7, !dbg !7714
  call void @llvm.dbg.value(metadata %union.tree_node** %rhs, metadata !7684, metadata !DIExpression(DW_OP_deref)), !dbg !7687
  %call24 = call i32 @gimplify_expr(%union.tree_node** nonnull %rhs, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7715
  %cmp25 = icmp eq i32 %call24, 1, !dbg !7717
  br i1 %cmp25, label %if.end27, label %cleanup, !dbg !7718

if.end27:                                         ; preds = %if.end22
  %20 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !7719
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !7684, metadata !DIExpression()), !dbg !7687
  %call28 = call %union.gimple_statement_d* @gimple_build_omp_atomic_store(%union.tree_node* %20) #6, !dbg !7720
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call28) #7, !dbg !7721
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !7722
  br label %cleanup, !dbg !7723

cleanup:                                          ; preds = %if.end22, %if.end18, %if.end, %if.end27
  %retval.0 = phi i32 [ 1, %if.end27 ], [ -2, %if.end ], [ -2, %if.end18 ], [ -2, %if.end22 ], !dbg !7687
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !7724
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7724
  ret i32 %retval.0, !dbg !7724
}

declare dso_local %union.tree_node* @maybe_fold_offset_to_address(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_scalar_mode_aggregate_compare(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !7725 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7727, metadata !DIExpression()), !dbg !7733
  %0 = bitcast %union.tree_node** %expr_p to i64**, !dbg !7734
  %1 = load i64*, i64** %0, align 8, !dbg !7734
  %bf.load = load i64, i64* %1, align 8, !dbg !7734
  %bf.cast = and i64 %bf.load, 65535, !dbg !7734
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7734
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7734
  %cmp = icmp ugt i32 %2, 3, !dbg !7734
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !7734

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %2, 11, !dbg !7734
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !7734

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %1, i64 3, !dbg !7734
  %3 = bitcast i64* %locus to i32*, !dbg !7734
  %4 = load i32, i32* %3, align 8, !dbg !7734
  br label %cond.end, !dbg !7734

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !7734
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7728, metadata !DIExpression()), !dbg !7733
  %arrayidx9 = getelementptr inbounds i64, i64* %1, i64 5, !dbg !7735
  %5 = bitcast i64* %arrayidx9 to %union.tree_node**, !dbg !7735
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !7735
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7729, metadata !DIExpression()), !dbg !7733
  %arrayidx12 = getelementptr inbounds i64, i64* %1, i64 6, !dbg !7736
  %7 = bitcast i64* %arrayidx12 to %union.tree_node**, !dbg !7736
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !7736
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7730, metadata !DIExpression()), !dbg !7733
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7737
  %9 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !7737
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7731, metadata !DIExpression()), !dbg !7733
  %10 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !7738
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7739
  %bf.load15 = load i64, i64* %11, align 8, !dbg !7739
  %bf.cast171 = and i64 %bf.load15, 65535, !dbg !7739
  %cmp18 = icmp eq i64 %bf.cast171, 14, !dbg !7739
  br i1 %cmp18, label %cond.true19, label %cond.false20, !dbg !7739

cond.true19:                                      ; preds = %cond.end
  %call = tail call i32 @vector_type_mode(%union.tree_node* %9) #6, !dbg !7739
  br label %cond.end24, !dbg !7739

cond.false20:                                     ; preds = %cond.end
  %type21 = bitcast %union.tree_node* %9 to %struct.tree_type*, !dbg !7739
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i64 0, i32 6, !dbg !7739
  %bf.load22 = load i32, i32* %mode, align 4, !dbg !7739
  %bf.lshr = lshr i32 %bf.load22, 16, !dbg !7739
  %bf.clear23 = and i32 %bf.lshr, 255, !dbg !7739
  br label %cond.end24, !dbg !7739

cond.end24:                                       ; preds = %cond.false20, %cond.true19
  %cond25 = phi i32 [ %call, %cond.true19 ], [ %bf.clear23, %cond.false20 ], !dbg !7739
  %call26 = tail call %union.tree_node* %10(i32 %cond25, i32 1) #6, !dbg !7740
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !7732, metadata !DIExpression()), !dbg !7733
  %call27 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 118, %union.tree_node* %call26, %union.tree_node* %6) #6, !dbg !7741
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !7729, metadata !DIExpression()), !dbg !7733
  %call28 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 118, %union.tree_node* %call26, %union.tree_node* %8) #6, !dbg !7742
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !7730, metadata !DIExpression()), !dbg !7733
  %12 = load i64*, i64** %0, align 8, !dbg !7743
  %bf.load30 = load i64, i64* %12, align 8, !dbg !7743
  %13 = trunc i64 %bf.load30 to i32, !dbg !7743
  %bf.cast32 = and i32 %13, 65535, !dbg !7743
  %type34 = getelementptr inbounds i64, i64* %12, i64 2, !dbg !7743
  %14 = bitcast i64* %type34 to %union.tree_node**, !dbg !7743
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7743
  %call35 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %cond, i32 %bf.cast32, %union.tree_node* %15, %union.tree_node* %call27, %union.tree_node* %call28) #6, !dbg !7743
  store %union.tree_node* %call35, %union.tree_node** %expr_p, align 8, !dbg !7744
  ret i32 undef, !dbg !7745
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_variable_sized_compare(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !7746 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7748, metadata !DIExpression()), !dbg !7756
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !7757
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !7757
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !7757
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7757
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7749, metadata !DIExpression()), !dbg !7756
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 1, !dbg !7758
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !7758
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7750, metadata !DIExpression()), !dbg !7756
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 0, i32 0, i32 0, !dbg !7759
  %bf.load = load i64, i64* %.cast, align 8, !dbg !7759
  %bf.cast = and i64 %bf.load, 65535, !dbg !7759
  %arrayidx4 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7759
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !7759
  %cmp = icmp ugt i32 %4, 3, !dbg !7759
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !7759

land.lhs.true:                                    ; preds = %entry
  %cmp11 = icmp ult i32 %4, 11, !dbg !7759
  br i1 %cmp11, label %cond.true, label %cond.end, !dbg !7759

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 1, !dbg !7759
  %5 = load i32, i32* %locus, align 8, !dbg !7759
  br label %cond.end, !dbg !7759

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !7759
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7755, metadata !DIExpression()), !dbg !7756
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7760
  %6 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !7760
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !7760
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 3, !dbg !7760
  %8 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !7760
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7752, metadata !DIExpression()), !dbg !7756
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %8) #7, !dbg !7761
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7752, metadata !DIExpression()), !dbg !7756
  %cmp14 = icmp eq %union.tree_node* %call, null, !dbg !7762
  br i1 %cmp14, label %cond.end22, label %lor.lhs.false, !dbg !7762

lor.lhs.false:                                    ; preds = %cond.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7762
  %bf.load16 = load i64, i64* %9, align 8, !dbg !7762
  %bf.cast181 = and i64 %bf.load16, 131072, !dbg !7762
  %tobool = icmp eq i64 %bf.cast181, 0, !dbg !7762
  br i1 %tobool, label %cond.false20, label %cond.end22, !dbg !7762

cond.false20:                                     ; preds = %lor.lhs.false
  %call21 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %call, %union.tree_node* %2) #6, !dbg !7762
  br label %cond.end22, !dbg !7762

cond.end22:                                       ; preds = %lor.lhs.false, %cond.end, %cond.false20
  %cond23 = phi %union.tree_node* [ %call21, %cond.false20 ], [ %call, %lor.lhs.false ], [ null, %cond.end ], !dbg !7762
  call void @llvm.dbg.value(metadata %union.tree_node* %cond23, metadata !7752, metadata !DIExpression()), !dbg !7756
  %call24 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %3) #6, !dbg !7763
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !7754, metadata !DIExpression()), !dbg !7756
  %call25 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %2) #6, !dbg !7764
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !7753, metadata !DIExpression()), !dbg !7756
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 329), align 8, !dbg !7765
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7751, metadata !DIExpression()), !dbg !7756
  %call26 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %cond, %union.tree_node* %10, i32 3, %union.tree_node* %call25, %union.tree_node* %call24, %union.tree_node* %cond23) #6, !dbg !7766
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !7751, metadata !DIExpression()), !dbg !7756
  %11 = bitcast %union.tree_node** %expr_p to i64**, !dbg !7767
  %12 = load i64*, i64** %11, align 8, !dbg !7767
  %bf.load28 = load i64, i64* %12, align 8, !dbg !7767
  %13 = trunc i64 %bf.load28 to i32, !dbg !7767
  %bf.cast30 = and i32 %13, 65535, !dbg !7767
  %type32 = getelementptr inbounds i64, i64* %12, i64 2, !dbg !7767
  %14 = bitcast i64* %type32 to %union.tree_node**, !dbg !7767
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7767
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7767
  %call33 = tail call %union.tree_node* @build2_stat(i32 %bf.cast30, %union.tree_node* %15, %union.tree_node* %call26, %union.tree_node* %16) #6, !dbg !7767
  store %union.tree_node* %call33, %union.tree_node** %expr_p, align 8, !dbg !7768
  ret i32 undef, !dbg !7769
}

declare dso_local %union.gimple_statement_d* @gimplify_assign(%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %dst_p, %struct.gimple_seq_d* %src) unnamed_addr #5 !dbg !7770 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %dst_p, metadata !7774, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %src, metadata !7775, metadata !DIExpression()), !dbg !7777
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !7778
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7778
  %cmp = icmp eq %struct.gimple_seq_d* %src, null, !dbg !7779
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7781

if.end:                                           ; preds = %entry
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %dst_p, align 8, !dbg !7782
  %cmp1 = icmp eq %struct.gimple_seq_d* %1, null, !dbg !7784
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7785

if.then2:                                         ; preds = %if.end
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !7786
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %dst_p, align 8, !dbg !7787
  br label %if.end3, !dbg !7788

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = phi %struct.gimple_seq_d* [ %call, %if.then2 ], [ %1, %if.end ], !dbg !7789
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7790
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !7790
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %2) #7, !dbg !7790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !7790
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !7790
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !7776, metadata !DIExpression(DW_OP_deref)), !dbg !7777
  call void @gsi_insert_seq_after_without_update(%struct.gimple_stmt_iterator* nonnull %si, %struct.gimple_seq_d* nonnull %src, i32 0) #6, !dbg !7791
  br label %cleanup, !dbg !7792

cleanup:                                          ; preds = %entry, %if.end3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7792
  ret void, !dbg !7792
}

; Function Attrs: nounwind uwtable
define internal fastcc void @annotate_all_with_location_after(%struct.gimple_seq_d* %seq, %struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi, i32 %location) unnamed_addr #5 !dbg !7793 {
entry:
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !7797, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7798, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %location, metadata !7799, metadata !DIExpression()), !dbg !7800
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7802
  %tobool = icmp eq i8 %call, 0, !dbg !7802
  br i1 %tobool, label %if.else, label %if.then, !dbg !7804

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7805
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7805
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %seq) #7, !dbg !7805
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !7805
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7805
  br label %if.end, !dbg !7806

if.else:                                          ; preds = %entry
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7807
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !7808

for.cond:                                         ; preds = %for.body, %if.end
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7809
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7812
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7813

for.body:                                         ; preds = %for.cond
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7814
  call fastcc void @annotate_one_with_location(%union.gimple_statement_d* %call3, i32 %location) #7, !dbg !7815
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7816
  br label %for.cond, !dbg !7817, !llvm.loop !7818

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7820
}

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gimplify_type_sizes(%union.tree_node* %type, %struct.gimple_seq_d** %list_p) local_unnamed_addr #5 !dbg !7821 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7823, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %list_p, metadata !7824, metadata !DIExpression()), !dbg !7827
  %cmp = icmp eq %union.tree_node* %type, null, !dbg !7828
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7830
  %cmp1 = icmp eq %union.tree_node* %0, %type, !dbg !7831
  %or.cond = or i1 %cmp, %cmp1, !dbg !7832
  br i1 %or.cond, label %cleanup.cont, label %if.end, !dbg !7832

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7833
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !7833
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7823, metadata !DIExpression()), !dbg !7827
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7834
  %bf.load = load i64, i64* %3, align 8, !dbg !7834
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !7834
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !7834
  br i1 %tobool, label %if.end4, label %cleanup.cont, !dbg !7836

if.end4:                                          ; preds = %if.end
  %bf.set = or i64 %bf.load, 131072, !dbg !7837
  store i64 %bf.set, i64* %3, align 8, !dbg !7837
  %4 = trunc i64 %bf.load to i16, !dbg !7838
  switch i16 %4, label %sw.epilog [
    i16 8, label %sw.bb
    i16 6, label %sw.bb
    i16 7, label %sw.bb
    i16 9, label %sw.bb
    i16 11, label %sw.bb
    i16 15, label %sw.bb26
    i16 16, label %sw.bb104
    i16 17, label %sw.bb104
    i16 18, label %sw.bb104
  ], !dbg !7839

sw.bb:                                            ; preds = %if.end4, %if.end4, %if.end4, %if.end4, %if.end4
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7840
  %5 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !7840
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %5, %struct.gimple_seq_d** %list_p) #7, !dbg !7842
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7843
  %6 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !7843
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %6, %struct.gimple_seq_d** %list_p) #7, !dbg !7844
  %7 = bitcast %struct.lang_decl** %minval to i64*, !dbg !7845
  %8 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !7845
  br label %for.cond, !dbg !7849

for.cond:                                         ; preds = %for.body, %sw.bb
  %.pn10 = phi %union.tree_node* [ %2, %sw.bb ], [ %t.0, %for.body ]
  %t.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %.pn10, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7850
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !7850
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7826, metadata !DIExpression()), !dbg !7827
  %tobool15 = icmp eq %union.tree_node* %t.0, null, !dbg !7851
  br i1 %tobool15, label %sw.epilog.loopexit, label %for.body, !dbg !7851

for.body:                                         ; preds = %for.cond
  %9 = load i64, i64* %7, align 8, !dbg !7852
  %minval19 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7853
  %10 = bitcast %struct.lang_decl** %minval19 to i64*, !dbg !7854
  store i64 %9, i64* %10, align 8, !dbg !7854
  %11 = load i64, i64* %8, align 8, !dbg !7855
  %maxval23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7856
  %12 = bitcast %struct.rtx_def** %maxval23 to i64*, !dbg !7857
  store i64 %11, i64* %12, align 8, !dbg !7857
  br label %for.cond, !dbg !7858, !llvm.loop !7859

sw.bb26:                                          ; preds = %if.end4
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7861
  %13 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !7861
  tail call void @gimplify_type_sizes(%union.tree_node* %13, %struct.gimple_seq_d** %list_p) #7, !dbg !7862
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7863
  %14 = bitcast i32* %values to %union.tree_node**, !dbg !7863
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7863
  tail call void @gimplify_type_sizes(%union.tree_node* %15, %struct.gimple_seq_d** %list_p) #7, !dbg !7864
  %16 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7865
  %tobool31 = icmp eq %union.tree_node* %16, null, !dbg !7865
  %17 = bitcast %union.tree_node* %16 to %struct.tree_type*, !dbg !7867
  br i1 %tobool31, label %sw.epilog, label %land.lhs.true, !dbg !7867

land.lhs.true:                                    ; preds = %sw.bb26
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7867
  %bf.load35 = load i64, i64* %18, align 8, !dbg !7868
  %bf.cast373 = and i64 %bf.load35, 65535, !dbg !7868
  %cmp38 = icmp eq i64 %bf.cast373, 6, !dbg !7868
  br i1 %cmp38, label %if.then55, label %lor.lhs.false39, !dbg !7868

lor.lhs.false39:                                  ; preds = %land.lhs.true
  %cmp46 = icmp eq i64 %bf.cast373, 7, !dbg !7868
  br i1 %cmp46, label %if.then55, label %lor.lhs.false47, !dbg !7868

lor.lhs.false47:                                  ; preds = %lor.lhs.false39
  %cmp54 = icmp eq i64 %bf.cast373, 8, !dbg !7868
  br i1 %cmp54, label %if.then55, label %sw.epilog, !dbg !7869

if.then55:                                        ; preds = %lor.lhs.false47, %lor.lhs.false39, %land.lhs.true
  %19 = bitcast i32* %values to %struct.tree_type**, !dbg !7870
  %minval59 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7870
  %20 = bitcast %struct.lang_decl** %minval59 to %union.tree_node**, !dbg !7870
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !7870
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !7826, metadata !DIExpression()), !dbg !7827
  %tobool60 = icmp eq %union.tree_node* %21, null, !dbg !7872
  br i1 %tobool60, label %if.end77, label %land.lhs.true61, !dbg !7874

land.lhs.true61:                                  ; preds = %if.then55
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7875
  %bf.load63 = load i64, i64* %22, align 8, !dbg !7875
  %bf.cast658 = and i64 %bf.load63, 65535, !dbg !7876
  %cmp66 = icmp eq i64 %bf.cast658, 32, !dbg !7876
  br i1 %cmp66, label %land.lhs.true67, label %if.end77, !dbg !7877

land.lhs.true67:                                  ; preds = %land.lhs.true61
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7878
  %23 = bitcast i40* %artificial_flag to i64*, !dbg !7878
  %bf.load68 = load i64, i64* %23, align 8, !dbg !7878
  %bf.cast719 = and i64 %bf.load68, 4096, !dbg !7878
  %tobool72 = icmp eq i64 %bf.cast719, 0, !dbg !7878
  br i1 %tobool72, label %if.end77, label %if.then73, !dbg !7879

if.then73:                                        ; preds = %land.lhs.true67
  %bf.clear76 = and i64 %bf.load68, -1025, !dbg !7880
  store i64 %bf.clear76, i64* %23, align 8, !dbg !7880
  %.pre = load %struct.tree_type*, %struct.tree_type** %19, align 8, !dbg !7881
  br label %if.end77, !dbg !7882

if.end77:                                         ; preds = %land.lhs.true67, %if.then55, %if.then73, %land.lhs.true61
  %24 = phi %struct.tree_type* [ %17, %land.lhs.true67 ], [ %17, %if.then55 ], [ %.pre, %if.then73 ], [ %17, %land.lhs.true61 ], !dbg !7881
  %maxval81 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 14, !dbg !7881
  %25 = load %union.tree_node*, %union.tree_node** %maxval81, align 8, !dbg !7881
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !7826, metadata !DIExpression()), !dbg !7827
  %tobool82 = icmp eq %union.tree_node* %25, null, !dbg !7883
  br i1 %tobool82, label %sw.epilog, label %land.lhs.true83, !dbg !7885

land.lhs.true83:                                  ; preds = %if.end77
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7886
  %bf.load85 = load i64, i64* %26, align 8, !dbg !7886
  %bf.cast876 = and i64 %bf.load85, 65535, !dbg !7887
  %cmp88 = icmp eq i64 %bf.cast876, 32, !dbg !7887
  br i1 %cmp88, label %land.lhs.true89, label %sw.epilog, !dbg !7888

land.lhs.true89:                                  ; preds = %land.lhs.true83
  %artificial_flag91 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7889
  %27 = bitcast i40* %artificial_flag91 to i64*, !dbg !7889
  %bf.load92 = load i64, i64* %27, align 8, !dbg !7889
  %bf.cast957 = and i64 %bf.load92, 4096, !dbg !7889
  %tobool96 = icmp eq i64 %bf.cast957, 0, !dbg !7889
  br i1 %tobool96, label %sw.epilog, label %if.then97, !dbg !7890

if.then97:                                        ; preds = %land.lhs.true89
  %bf.clear101 = and i64 %bf.load92, -1025, !dbg !7891
  store i64 %bf.clear101, i64* %27, align 8, !dbg !7891
  br label %sw.epilog, !dbg !7892

sw.bb104:                                         ; preds = %if.end4, %if.end4, %if.end4
  %values106 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7893
  %28 = bitcast i32* %values106 to %union.tree_node**, !dbg !7893
  br label %for.cond107, !dbg !7895

for.cond107:                                      ; preds = %for.inc121, %sw.bb104
  %field.0.in = phi %union.tree_node** [ %28, %sw.bb104 ], [ %chain, %for.inc121 ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !7896
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !7825, metadata !DIExpression()), !dbg !7827
  %tobool108 = icmp eq %union.tree_node* %field.0, null, !dbg !7897
  br i1 %tobool108, label %sw.epilog.loopexit11, label %for.body109, !dbg !7897

for.body109:                                      ; preds = %for.cond107
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7898
  %bf.load111 = load i64, i64* %29, align 8, !dbg !7898
  %bf.cast1132 = and i64 %bf.load111, 65535, !dbg !7901
  %cmp114 = icmp eq i64 %bf.cast1132, 31, !dbg !7901
  br i1 %cmp114, label %if.then115, label %for.inc121, !dbg !7902

if.then115:                                       ; preds = %for.body109
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7903
  %30 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !7903
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %30, %struct.gimple_seq_d** %list_p) #7, !dbg !7905
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7906
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %size, %struct.gimple_seq_d** %list_p) #7, !dbg !7907
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7908
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %size_unit, %struct.gimple_seq_d** %list_p) #7, !dbg !7909
  %type119 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7910
  %31 = load %union.tree_node*, %union.tree_node** %type119, align 8, !dbg !7910
  tail call void @gimplify_type_sizes(%union.tree_node* %31, %struct.gimple_seq_d** %list_p) #7, !dbg !7911
  br label %for.inc121, !dbg !7912

for.inc121:                                       ; preds = %for.body109, %if.then115
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7913
  br label %for.cond107, !dbg !7914, !llvm.loop !7915

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !7917

sw.epilog.loopexit11:                             ; preds = %for.cond107
  br label %sw.epilog, !dbg !7917

sw.epilog:                                        ; preds = %sw.epilog.loopexit11, %sw.epilog.loopexit, %land.lhs.true89, %if.end77, %sw.bb26, %if.end4, %lor.lhs.false47, %if.then97, %land.lhs.true83
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7917
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %32, %struct.gimple_seq_d** %list_p) #7, !dbg !7918
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7919
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %33, %struct.gimple_seq_d** %list_p) #7, !dbg !7920
  %34 = bitcast %union.tree_node** %32 to i64*, !dbg !7921
  %35 = bitcast %union.tree_node** %33 to i64*, !dbg !7921
  br label %for.cond131, !dbg !7925

for.cond131:                                      ; preds = %for.body133, %sw.epilog
  %.pn = phi %union.tree_node* [ %2, %sw.epilog ], [ %t.1, %for.body133 ]
  %t.1.in = getelementptr inbounds %union.tree_node, %union.tree_node* %.pn, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7926
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !7926
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !7826, metadata !DIExpression()), !dbg !7827
  %tobool132 = icmp eq %union.tree_node* %t.1, null, !dbg !7927
  br i1 %tobool132, label %cleanup.cont.loopexit, label %for.body133, !dbg !7927

for.body133:                                      ; preds = %for.cond131
  %36 = load i64, i64* %34, align 8, !dbg !7928
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7929
  %38 = bitcast %union.tree_node** %37 to i64*, !dbg !7930
  store i64 %36, i64* %38, align 8, !dbg !7930
  %39 = load i64, i64* %35, align 8, !dbg !7931
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7932
  %41 = bitcast %union.tree_node** %40 to i64*, !dbg !7933
  store i64 %39, i64* %41, align 8, !dbg !7933
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7934
  %bf.load143 = load i64, i64* %42, align 8, !dbg !7935
  %bf.set145 = or i64 %bf.load143, 131072, !dbg !7935
  store i64 %bf.set145, i64* %42, align 8, !dbg !7935
  br label %for.cond131, !dbg !7936, !llvm.loop !7937

cleanup.cont.loopexit:                            ; preds = %for.cond131
  br label %cleanup.cont, !dbg !7939

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end, %entry
  ret void, !dbg !7939
}

; Function Attrs: nounwind uwtable
define dso_local void @gimplify_one_sizepos(%union.tree_node** %expr_p, %struct.gimple_seq_d** %stmt_p) local_unnamed_addr #5 !dbg !7940 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7942, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmt_p, metadata !7943, metadata !DIExpression()), !dbg !7950
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7951
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7945, metadata !DIExpression()), !dbg !7950
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !7952
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !7954

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7955
  %bf.load = load i64, i64* %1, align 8, !dbg !7955
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !7955
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !7955
  br i1 %tobool, label %lor.lhs.false1, label %cleanup.cont, !dbg !7956

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %bf.cast52 = and i64 %bf.load, 65535, !dbg !7957
  %cmp6 = icmp eq i64 %bf.cast52, 32, !dbg !7957
  br i1 %cmp6, label %cleanup.cont, label %lor.lhs.false7, !dbg !7958

lor.lhs.false7:                                   ; preds = %lor.lhs.false1
  br i1 true, label %land.lhs.true15, label %lor.lhs.false7.if.end_crit_edge, !dbg !7959

lor.lhs.false7.if.end_crit_edge:                  ; preds = %lor.lhs.false7
  br label %if.end, !dbg !7959

land.lhs.true15:                                  ; preds = %lor.lhs.false7
  %call = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %0) #6, !dbg !7959
  %tobool16 = icmp eq i8 %call, 0, !dbg !7959
  br i1 %tobool16, label %if.end, label %cleanup.cont, !dbg !7960

if.end:                                           ; preds = %lor.lhs.false7.if.end_crit_edge, %land.lhs.true15
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7961
  %2 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !7961
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7944, metadata !DIExpression()), !dbg !7950
  %call18 = tail call %union.tree_node* @unshare_expr(%union.tree_node* nonnull %0) #7, !dbg !7962
  store %union.tree_node* %call18, %union.tree_node** %expr_p, align 8, !dbg !7963
  %call19 = tail call i32 @gimplify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %stmt_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !7964
  %3 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7965
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7945, metadata !DIExpression()), !dbg !7950
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7966
  %4 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !7966
  %cmp22 = icmp eq %union.tree_node* %4, %2, !dbg !7967
  br i1 %cmp22, label %cleanup.cont, label %land.lhs.true24, !dbg !7968

land.lhs.true24:                                  ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7969
  %bf.load26 = load i64, i64* %5, align 8, !dbg !7969
  %bf.cast283 = and i64 %bf.load26, 65535, !dbg !7970
  %cmp29 = icmp eq i64 %bf.cast283, 8, !dbg !7970
  br i1 %cmp29, label %land.lhs.true31, label %cleanup.cont, !dbg !7971

land.lhs.true31:                                  ; preds = %land.lhs.true24
  %type32 = bitcast %union.tree_node* %2 to %struct.tree_type*, !dbg !7972
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i64 0, i32 6, !dbg !7972
  %bf.load33 = load i32, i32* %no_force_blk_flag, align 4, !dbg !7972
  %bf.clear35 = and i32 %bf.load33, 1024, !dbg !7972
  %tobool36 = icmp eq i32 %bf.clear35, 0, !dbg !7972
  br i1 %tobool36, label %cleanup.cont, label %if.then37, !dbg !7973

if.then37:                                        ; preds = %land.lhs.true31
  %call38 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %2, i8* null) #7, !dbg !7974
  store %union.tree_node* %call38, %union.tree_node** %expr_p, align 8, !dbg !7975
  %call39 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %2, %union.tree_node* %3) #6, !dbg !7976
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !7946, metadata !DIExpression()), !dbg !7977
  %6 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !7978
  %call40 = tail call %union.gimple_statement_d* @gimplify_assign(%union.tree_node* %6, %union.tree_node* %call39, %struct.gimple_seq_d** %stmt_p) #6, !dbg !7979
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call40, metadata !7949, metadata !DIExpression()), !dbg !7977
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7980
  %bf.load42 = load i64, i64* %7, align 8, !dbg !7980
  %bf.cast44 = and i64 %bf.load42, 65535, !dbg !7980
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast44, !dbg !7980
  %8 = load i32, i32* %arrayidx, align 4, !dbg !7980
  %cmp45 = icmp ugt i32 %8, 3, !dbg !7980
  br i1 %cmp45, label %land.lhs.true47, label %cond.end, !dbg !7980

land.lhs.true47:                                  ; preds = %if.then37
  %cmp54 = icmp ult i32 %8, 11, !dbg !7980
  br i1 %cmp54, label %cond.true, label %cond.end, !dbg !7980

cond.true:                                        ; preds = %land.lhs.true47
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7980
  %10 = load i32, i32* %9, align 8, !dbg !7980
  %phitmp = icmp ne i32 %10, 0, !dbg !7980
  br label %cond.end, !dbg !7980

cond.end:                                         ; preds = %if.then37, %land.lhs.true47, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %land.lhs.true47 ], [ false, %if.then37 ]
  br i1 %cond, label %if.then58, label %if.else, !dbg !7982

if.then58:                                        ; preds = %cond.end
  br i1 %cmp45, label %land.lhs.true67, label %cond.end80, !dbg !7983

land.lhs.true67:                                  ; preds = %if.then58
  %cmp74 = icmp ult i32 %8, 11, !dbg !7983
  br i1 %cmp74, label %cond.true76, label %cond.end80, !dbg !7983

cond.true76:                                      ; preds = %land.lhs.true67
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7983
  %12 = load i32, i32* %11, align 8, !dbg !7983
  br label %cond.end80, !dbg !7983

cond.end80:                                       ; preds = %if.then58, %land.lhs.true67, %cond.true76
  %cond81 = phi i32 [ %12, %cond.true76 ], [ 0, %land.lhs.true67 ], [ 0, %if.then58 ], !dbg !7983
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call40, i32 %cond81) #7, !dbg !7984
  br label %cleanup.cont, !dbg !7984

if.else:                                          ; preds = %cond.end
  %13 = load i32, i32* @input_location, align 4, !dbg !7985
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call40, i32 %13) #7, !dbg !7986
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %land.lhs.true15, %land.lhs.true31, %if.end, %lor.lhs.false, %lor.lhs.false1, %entry, %cond.end80, %if.else, %land.lhs.true24
  ret void, !dbg !7987
}

declare dso_local zeroext i8 @contains_placeholder_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !7988 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %location, metadata !7991, metadata !DIExpression()), !dbg !7992
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !7993
  store i32 %location, i32* %location1, align 8, !dbg !7994
  ret void, !dbg !7995
}

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @gimplify_body(%union.tree_node** %body_p, %union.tree_node* %fndecl, i8 zeroext %do_parms) local_unnamed_addr #5 !dbg !7996 {
entry:
  %parm_stmts = alloca %struct.gimple_seq_d*, align 8
  %seq = alloca %struct.gimple_seq_d*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %body_p, metadata !8000, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8001, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i8 %do_parms, metadata !8002, metadata !DIExpression()), !dbg !8011
  %0 = load i32, i32* @input_location, align 4, !dbg !8012
  call void @llvm.dbg.value(metadata i32 %0, metadata !8003, metadata !DIExpression()), !dbg !8011
  %1 = bitcast %struct.gimple_seq_d** %parm_stmts to i8*, !dbg !8013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8013
  %2 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !8013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8013
  %3 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !8014
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #8, !dbg !8014
  %4 = load i8, i8* @timevar_enable, align 1, !dbg !8015
  %tobool = icmp eq i8 %4, 0, !dbg !8015
  br i1 %tobool, label %do.end, label %if.then, !dbg !8018

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 48) #6, !dbg !8015
  br label %do.end, !dbg !8015

do.end:                                           ; preds = %entry, %if.then
  tail call void @default_rtl_profile() #6, !dbg !8019
  %5 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !8020
  %cmp = icmp eq %struct.gimplify_ctx* %5, null, !dbg !8020
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8020

cond.true:                                        ; preds = %do.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8020
  br label %cond.end, !dbg !8020

cond.end:                                         ; preds = %do.end, %cond.true
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !8007, metadata !DIExpression(DW_OP_deref)), !dbg !8011
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !8021
  call fastcc void @unshare_body(%union.tree_node** %body_p, %union.tree_node* %fndecl) #7, !dbg !8022
  call fastcc void @unvisit_body(%union.tree_node** %body_p, %union.tree_node* %fndecl) #7, !dbg !8023
  %call = call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fndecl) #6, !dbg !8024
  %origin = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 5, !dbg !8026
  %6 = load %struct.cgraph_node*, %struct.cgraph_node** %origin, align 8, !dbg !8026
  %tobool1 = icmp eq %struct.cgraph_node* %6, null, !dbg !8024
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !8027

if.then2:                                         ; preds = %cond.end
  %call3 = call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !8028
  store %struct.pointer_set_t* %call3, %struct.pointer_set_t** @nonlocal_vlas, align 8, !dbg !8029
  br label %if.end4, !dbg !8030

if.end4:                                          ; preds = %cond.end, %if.then2
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8031
  %7 = load i32, i32* %locus, align 8, !dbg !8031
  store i32 %7, i32* @input_location, align 4, !dbg !8032
  %tobool5 = icmp eq i8 %do_parms, 0, !dbg !8033
  br i1 %tobool5, label %cond.end9, label %cond.true6, !dbg !8033

cond.true6:                                       ; preds = %if.end4
  %call7 = call %struct.gimple_seq_d* @gimplify_parameters() #6, !dbg !8034
  br label %cond.end9, !dbg !8033

cond.end9:                                        ; preds = %if.end4, %cond.true6
  %cond10 = phi %struct.gimple_seq_d* [ %call7, %cond.true6 ], [ null, %if.end4 ], !dbg !8033
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond10, metadata !8004, metadata !DIExpression()), !dbg !8011
  store %struct.gimple_seq_d* %cond10, %struct.gimple_seq_d** %parm_stmts, align 8, !dbg !8035
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !8005, metadata !DIExpression()), !dbg !8011
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %seq, align 8, !dbg !8036
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !8005, metadata !DIExpression(DW_OP_deref)), !dbg !8011
  %call11 = call zeroext i8 @gimplify_stmt(%union.tree_node** %body_p, %struct.gimple_seq_d** nonnull %seq) #7, !dbg !8037
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8038
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !8005, metadata !DIExpression()), !dbg !8011
  %call12 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %8) #7, !dbg !8039
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !8006, metadata !DIExpression()), !dbg !8011
  %tobool13 = icmp eq %union.gimple_statement_d* %call12, null, !dbg !8040
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8042

if.then14:                                        ; preds = %cond.end9
  %call15 = call %union.gimple_statement_d* @gimple_build_nop() #6, !dbg !8043
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !8006, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !8005, metadata !DIExpression(DW_OP_deref)), !dbg !8011
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call15) #7, !dbg !8045
  br label %if.end16, !dbg !8046

if.end16:                                         ; preds = %cond.end9, %if.then14
  %outer_bind.0 = phi %union.gimple_statement_d* [ %call12, %cond.end9 ], [ %call15, %if.then14 ], !dbg !8011
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %outer_bind.0, metadata !8006, metadata !DIExpression()), !dbg !8011
  %call17 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %outer_bind.0) #7, !dbg !8047
  %cmp18 = icmp eq i32 %call17, 10, !dbg !8049
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !8050

land.lhs.true:                                    ; preds = %if.end16
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8051
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !8005, metadata !DIExpression()), !dbg !8011
  %call20 = call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %9) #7, !dbg !8052
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8053
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !8005, metadata !DIExpression()), !dbg !8011
  %call21 = call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %10) #7, !dbg !8054
  %cmp22 = icmp eq %struct.gimple_seq_node_d* %call20, %call21, !dbg !8055
  br i1 %cmp22, label %if.end26, label %if.else, !dbg !8056

if.else:                                          ; preds = %land.lhs.true, %if.end16
  %11 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8057
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %11, metadata !8005, metadata !DIExpression()), !dbg !8011
  %call25 = call %union.gimple_statement_d* @gimple_build_bind(%union.tree_node* null, %struct.gimple_seq_d* %11, %union.tree_node* null) #6, !dbg !8058
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !8006, metadata !DIExpression()), !dbg !8011
  br label %if.end26

if.end26:                                         ; preds = %land.lhs.true, %if.else
  %outer_bind.1 = phi %union.gimple_statement_d* [ %call25, %if.else ], [ %outer_bind.0, %land.lhs.true ], !dbg !8011
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %outer_bind.1, metadata !8006, metadata !DIExpression()), !dbg !8011
  store %union.tree_node* null, %union.tree_node** %body_p, align 8, !dbg !8059
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %parm_stmts, align 8, !dbg !8060
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !8004, metadata !DIExpression()), !dbg !8011
  %call27 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %12) #7, !dbg !8061
  %tobool28 = icmp eq i8 %call27, 0, !dbg !8061
  br i1 %tobool28, label %if.then29, label %if.end42, !dbg !8062

if.then29:                                        ; preds = %if.end26
  %call30 = call fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %outer_bind.1) #7, !dbg !8063
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %parm_stmts, metadata !8004, metadata !DIExpression(DW_OP_deref)), !dbg !8011
  call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** nonnull %parm_stmts, %struct.gimple_seq_d* %call30) #7, !dbg !8064
  %13 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %parm_stmts, align 8, !dbg !8065
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %13, metadata !8004, metadata !DIExpression()), !dbg !8011
  call fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %outer_bind.1, %struct.gimple_seq_d* %13) #7, !dbg !8066
  %14 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !8067
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %14, i64 0, i32 2, !dbg !8067
  br label %for.cond, !dbg !8069

for.cond:                                         ; preds = %for.inc, %if.then29
  %parm.0.in = phi %union.tree_node** [ %arguments, %if.then29 ], [ %chain, %for.inc ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !8070
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !8008, metadata !DIExpression()), !dbg !8071
  %tobool31 = icmp eq %union.tree_node* %parm.0, null, !dbg !8072
  br i1 %tobool31, label %if.end42.loopexit, label %for.body, !dbg !8072

for.body:                                         ; preds = %for.cond
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8073
  %15 = bitcast i40* %decl_flag_2 to i64*, !dbg !8073
  %bf.load = load i64, i64* %15, align 8, !dbg !8073
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !8073
  %tobool32 = icmp eq i64 %bf.cast1, 0, !dbg !8073
  br i1 %tobool32, label %for.inc, label %if.then33, !dbg !8076

if.then33:                                        ; preds = %for.body
  %bf.clear40 = and i64 %bf.load, -67109889, !dbg !8077
  store i64 %bf.clear40, i64* %15, align 8, !dbg !8077
  br label %for.inc, !dbg !8079

for.inc:                                          ; preds = %for.body, %if.then33
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8080
  br label %for.cond, !dbg !8081, !llvm.loop !8082

if.end42.loopexit:                                ; preds = %for.cond
  br label %if.end42, !dbg !8084

if.end42:                                         ; preds = %if.end42.loopexit, %if.end26
  %16 = load %struct.pointer_set_t*, %struct.pointer_set_t** @nonlocal_vlas, align 8, !dbg !8084
  %tobool43 = icmp eq %struct.pointer_set_t* %16, null, !dbg !8084
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !8086

if.then44:                                        ; preds = %if.end42
  call void @pointer_set_destroy(%struct.pointer_set_t* nonnull %16) #6, !dbg !8087
  store %struct.pointer_set_t* null, %struct.pointer_set_t** @nonlocal_vlas, align 8, !dbg !8089
  br label %if.end45, !dbg !8090

if.end45:                                         ; preds = %if.end42, %if.then44
  call void @pop_gimplify_context(%union.gimple_statement_d* %outer_bind.1) #7, !dbg !8091
  %17 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !8092
  %cmp46 = icmp eq %struct.gimplify_ctx* %17, null, !dbg !8092
  br i1 %cmp46, label %do.body52, label %cond.true48, !dbg !8092

cond.true48:                                      ; preds = %if.end45
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7571, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8092
  br label %do.body52, !dbg !8092

do.body52:                                        ; preds = %cond.true48, %if.end45
  %18 = load i8, i8* @timevar_enable, align 1, !dbg !8093
  %tobool53 = icmp eq i8 %18, 0, !dbg !8093
  br i1 %tobool53, label %do.end57, label %if.then54, !dbg !8096

if.then54:                                        ; preds = %do.body52
  call void @timevar_pop_1(i32 48) #6, !dbg !8093
  br label %do.end57, !dbg !8093

do.end57:                                         ; preds = %do.body52, %if.then54
  store i32 %0, i32* @input_location, align 4, !dbg !8097
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #8, !dbg !8098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8098
  ret %union.gimple_statement_d* %outer_bind.1, !dbg !8099
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

declare dso_local void @default_rtl_profile() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @unshare_body(%union.tree_node** %body_p, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !8100 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %body_p, metadata !8104, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8105, metadata !DIExpression()), !dbg !8335
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fndecl) #6, !dbg !8336
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !8106, metadata !DIExpression()), !dbg !8335
  %call1 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %body_p, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @copy_if_shared_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !8337
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1, !dbg !8338
  %cmp = icmp eq %union.tree_node** %saved_tree, %body_p, !dbg !8340
  br i1 %cmp, label %if.then, label %if.end, !dbg !8341

if.then:                                          ; preds = %entry
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 6, !dbg !8342
  br label %for.cond, !dbg !8344

for.cond:                                         ; preds = %for.body, %if.then
  %cgn.0.in = phi %struct.cgraph_node** [ %nested, %if.then ], [ %next_nested, %for.body ]
  %cgn.0 = load %struct.cgraph_node*, %struct.cgraph_node** %cgn.0.in, align 8, !dbg !8345
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %cgn.0, metadata !8106, metadata !DIExpression()), !dbg !8335
  %tobool = icmp eq %struct.cgraph_node* %cgn.0, null, !dbg !8346
  br i1 %tobool, label %if.end.loopexit, label %for.body, !dbg !8346

for.body:                                         ; preds = %for.cond
  %0 = bitcast %struct.cgraph_node* %cgn.0 to %struct.tree_decl_non_common**, !dbg !8347
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %0, align 8, !dbg !8347
  %saved_tree3 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 1, !dbg !8347
  %.cast = bitcast %struct.tree_decl_non_common* %1 to %union.tree_node*, !dbg !8349
  tail call fastcc void @unshare_body(%union.tree_node** nonnull %saved_tree3, %union.tree_node* %.cast) #7, !dbg !8350
  %next_nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn.0, i64 0, i32 7, !dbg !8351
  br label %for.cond, !dbg !8352, !llvm.loop !8353

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !8355

if.end:                                           ; preds = %if.end.loopexit, %entry
  ret void, !dbg !8355
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unvisit_body(%union.tree_node** %body_p, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !8356 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %body_p, metadata !8358, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8359, metadata !DIExpression()), !dbg !8361
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fndecl) #6, !dbg !8362
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !8360, metadata !DIExpression()), !dbg !8361
  %call1 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %body_p, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @unmark_visited_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !8363
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1, !dbg !8364
  %cmp = icmp eq %union.tree_node** %saved_tree, %body_p, !dbg !8366
  br i1 %cmp, label %if.then, label %if.end, !dbg !8367

if.then:                                          ; preds = %entry
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 6, !dbg !8368
  br label %for.cond, !dbg !8370

for.cond:                                         ; preds = %for.body, %if.then
  %cgn.0.in = phi %struct.cgraph_node** [ %nested, %if.then ], [ %next_nested, %for.body ]
  %cgn.0 = load %struct.cgraph_node*, %struct.cgraph_node** %cgn.0.in, align 8, !dbg !8371
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %cgn.0, metadata !8360, metadata !DIExpression()), !dbg !8361
  %tobool = icmp eq %struct.cgraph_node* %cgn.0, null, !dbg !8372
  br i1 %tobool, label %if.end.loopexit, label %for.body, !dbg !8372

for.body:                                         ; preds = %for.cond
  %0 = bitcast %struct.cgraph_node* %cgn.0 to %struct.tree_decl_non_common**, !dbg !8373
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %0, align 8, !dbg !8373
  %saved_tree3 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 1, !dbg !8373
  %.cast = bitcast %struct.tree_decl_non_common* %1 to %union.tree_node*, !dbg !8375
  tail call fastcc void @unvisit_body(%union.tree_node** nonnull %saved_tree3, %union.tree_node* %.cast) #7, !dbg !8376
  %next_nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn.0, i64 0, i32 7, !dbg !8377
  br label %for.cond, !dbg !8378, !llvm.loop !8379

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !8381

if.end:                                           ; preds = %if.end.loopexit, %entry
  ret void, !dbg !8381
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimplify_parameters() local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !8382 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !8384, metadata !DIExpression()), !dbg !8385
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !8386
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8386

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !8387
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !8387
  br label %cond.end, !dbg !8386

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !8386
  ret %struct.gimple_seq_node_d* %cond, !dbg !8388
}

declare dso_local %union.gimple_statement_d* @gimple_build_bind(%union.tree_node*, %struct.gimple_seq_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8389 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8393, metadata !DIExpression()), !dbg !8394
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !8395
  %0 = bitcast [1 x %struct.phi_arg_d]* %body to %struct.gimple_seq_d**, !dbg !8395
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !8395
  ret %struct.gimple_seq_d* %1, !dbg !8396
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %gs, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !8397 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8401, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !8402, metadata !DIExpression()), !dbg !8403
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !8404
  %0 = bitcast [1 x %struct.phi_arg_d]* %body to %struct.gimple_seq_d**, !dbg !8404
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %0, align 8, !dbg !8405
  ret void, !dbg !8406
}

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gimplify_function_tree(%union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !8407 {
entry:
  %seq = alloca %struct.gimple_seq_d*, align 8
  %cleanup = alloca %struct.gimple_seq_d*, align 8
  %body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8409, metadata !DIExpression()), !dbg !8422
  %0 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !8423
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8423
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %fndecl) #6, !dbg !8424
  %tobool = icmp eq %struct.gimple_seq_d* %call, null, !dbg !8424
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8424

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8424
  br label %cond.end, !dbg !8424

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !8425
  store %union.tree_node* %fndecl, %union.tree_node** @current_function_decl, align 8, !dbg !8426
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 1, !dbg !8427
  %2 = load %struct.function*, %struct.function** %f, align 8, !dbg !8427
  %tobool1 = icmp eq %struct.function* %2, null, !dbg !8427
  br i1 %tobool1, label %if.else, label %if.then, !dbg !8429

if.then:                                          ; preds = %cond.end
  tail call void @push_cfun(%struct.function* nonnull %2) #6, !dbg !8430
  br label %if.end, !dbg !8430

if.else:                                          ; preds = %cond.end
  tail call void @push_struct_function(%union.tree_node* %fndecl) #6, !dbg !8431
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !8432
  br label %for.cond, !dbg !8434

for.cond:                                         ; preds = %for.inc, %if.end
  %parm.0.in = phi %union.tree_node** [ %arguments, %if.end ], [ %chain, %for.inc ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !8435
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !8411, metadata !DIExpression()), !dbg !8422
  %tobool4 = icmp eq %union.tree_node* %parm.0, null, !dbg !8436
  br i1 %tobool4, label %for.end, label %for.body, !dbg !8436

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8437
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !8437
  %4 = load i64*, i64** %3, align 8, !dbg !8437
  %bf.load = load i64, i64* %4, align 8, !dbg !8437
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !8441
  %cmp = icmp eq i64 %bf.cast3, 13, !dbg !8441
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8442

lor.lhs.false:                                    ; preds = %for.body
  %cmp11 = icmp eq i64 %bf.cast3, 14, !dbg !8443
  br i1 %cmp11, label %land.lhs.true, label %for.inc, !dbg !8444

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8445
  %bf.load13 = load i64, i64* %5, align 8, !dbg !8445
  %bf.cast155 = and i64 %bf.load13, 524288, !dbg !8445
  %tobool16 = icmp eq i64 %bf.cast155, 0, !dbg !8445
  br i1 %tobool16, label %land.lhs.true17, label %for.inc, !dbg !8446

land.lhs.true17:                                  ; preds = %land.lhs.true
  %call18 = tail call zeroext i8 @needs_to_live_in_memory(%union.tree_node* nonnull %parm.0) #6, !dbg !8447
  %tobool19 = icmp eq i8 %call18, 0, !dbg !8447
  br i1 %tobool19, label %if.then20, label %for.inc, !dbg !8448

if.then20:                                        ; preds = %land.lhs.true17
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8449
  %6 = bitcast i40* %gimple_reg_flag to i64*, !dbg !8449
  %bf.load21 = load i64, i64* %6, align 8, !dbg !8450
  %bf.set = or i64 %bf.load21, 134217728, !dbg !8450
  store i64 %bf.set, i64* %6, align 8, !dbg !8450
  br label %for.inc, !dbg !8449

for.inc:                                          ; preds = %land.lhs.true17, %land.lhs.true, %lor.lhs.false, %if.then20
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8451
  br label %for.cond, !dbg !8452, !llvm.loop !8453

for.end:                                          ; preds = %for.cond
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 3, !dbg !8455
  %7 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !8455
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8412, metadata !DIExpression()), !dbg !8422
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8456
  %8 = bitcast %union.tree_node** %type27 to i64**, !dbg !8456
  %9 = load i64*, i64** %8, align 8, !dbg !8456
  %bf.load29 = load i64, i64* %9, align 8, !dbg !8456
  %bf.cast311 = and i64 %bf.load29, 65535, !dbg !8458
  %cmp32 = icmp eq i64 %bf.cast311, 13, !dbg !8458
  br i1 %cmp32, label %land.lhs.true41, label %lor.lhs.false33, !dbg !8459

lor.lhs.false33:                                  ; preds = %for.end
  %cmp40 = icmp eq i64 %bf.cast311, 14, !dbg !8460
  br i1 %cmp40, label %land.lhs.true41, label %if.end50, !dbg !8461

land.lhs.true41:                                  ; preds = %lor.lhs.false33, %for.end
  %call42 = tail call zeroext i8 @needs_to_live_in_memory(%union.tree_node* %7) #6, !dbg !8462
  %tobool43 = icmp eq i8 %call42, 0, !dbg !8462
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !8463

if.then44:                                        ; preds = %land.lhs.true41
  %gimple_reg_flag46 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8464
  %10 = bitcast i40* %gimple_reg_flag46 to i64*, !dbg !8464
  %bf.load47 = load i64, i64* %10, align 8, !dbg !8465
  %bf.set49 = or i64 %bf.load47, 134217728, !dbg !8465
  store i64 %bf.set49, i64* %10, align 8, !dbg !8465
  br label %if.end50, !dbg !8464

if.end50:                                         ; preds = %land.lhs.true41, %if.then44, %lor.lhs.false33
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1, !dbg !8466
  %call52 = tail call %union.gimple_statement_d* @gimplify_body(%union.tree_node** nonnull %saved_tree, %union.tree_node* %fndecl, i8 zeroext 1) #7, !dbg !8467
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call52, metadata !8414, metadata !DIExpression()), !dbg !8422
  %call53 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !8468
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call53, metadata !8413, metadata !DIExpression()), !dbg !8422
  store %struct.gimple_seq_d* %call53, %struct.gimple_seq_d** %seq, align 8, !dbg !8469
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !8413, metadata !DIExpression(DW_OP_deref)), !dbg !8422
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call52) #6, !dbg !8470
  %11 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8471
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %11, metadata !8413, metadata !DIExpression()), !dbg !8422
  call void @gimple_set_body(%union.tree_node* %fndecl, %struct.gimple_seq_d* %11) #6, !dbg !8472
  %12 = load i32, i32* @flag_instrument_function_entry_exit, align 4, !dbg !8473
  %tobool54 = icmp eq i32 %12, 0, !dbg !8473
  br i1 %tobool54, label %if.end71, label %land.lhs.true55, !dbg !8474

land.lhs.true55:                                  ; preds = %if.end50
  %no_instrument_function_entry_exit = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8475
  %bf.load57 = load i32, i32* %no_instrument_function_entry_exit, align 8, !dbg !8475
  %bf.clear59 = and i32 %bf.load57, 16777216, !dbg !8475
  %tobool60 = icmp eq i32 %bf.clear59, 0, !dbg !8475
  br i1 %tobool60, label %land.lhs.true61, label %if.end71, !dbg !8476

land.lhs.true61:                                  ; preds = %land.lhs.true55
  %call62 = call zeroext i8 @flag_instrument_functions_exclude_p(%union.tree_node* %fndecl) #6, !dbg !8477
  %tobool63 = icmp eq i8 %call62, 0, !dbg !8477
  br i1 %tobool63, label %if.then64, label %if.end71, !dbg !8478

if.then64:                                        ; preds = %land.lhs.true61
  %13 = bitcast %struct.gimple_seq_d** %cleanup to i8*, !dbg !8479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !8420, metadata !DIExpression()), !dbg !8480
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %cleanup, align 8, !dbg !8481
  %14 = bitcast %struct.gimple_seq_d** %body to i8*, !dbg !8479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !8421, metadata !DIExpression()), !dbg !8480
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %body, align 8, !dbg !8482
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 547), align 8, !dbg !8483
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !8415, metadata !DIExpression()), !dbg !8480
  %call65 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %15, i32 0) #6, !dbg !8484
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup, metadata !8420, metadata !DIExpression(DW_OP_deref)), !dbg !8480
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %cleanup, %union.gimple_statement_d* %call65) #7, !dbg !8485
  %16 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %16, metadata !8413, metadata !DIExpression()), !dbg !8422
  %17 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup, align 8, !dbg !8487
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %17, metadata !8420, metadata !DIExpression()), !dbg !8480
  %call66 = call %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d* %16, %struct.gimple_seq_d* %17, i32 2) #6, !dbg !8488
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call66, metadata !8419, metadata !DIExpression()), !dbg !8480
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 546), align 16, !dbg !8489
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !8415, metadata !DIExpression()), !dbg !8480
  %call67 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %18, i32 0) #6, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !8421, metadata !DIExpression(DW_OP_deref)), !dbg !8480
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %body, %union.gimple_statement_d* %call67) #7, !dbg !8491
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %body, metadata !8421, metadata !DIExpression(DW_OP_deref)), !dbg !8480
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %body, %union.gimple_statement_d* %call66) #7, !dbg !8492
  %19 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %body, align 8, !dbg !8493
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %19, metadata !8421, metadata !DIExpression()), !dbg !8480
  %call68 = call fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %call52) #7, !dbg !8494
  %call69 = call %union.gimple_statement_d* @gimple_build_bind(%union.tree_node* null, %struct.gimple_seq_d* %19, %union.tree_node* %call68) #6, !dbg !8495
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call69, metadata !8418, metadata !DIExpression()), !dbg !8480
  call fastcc void @gimple_bind_set_block(%union.gimple_statement_d* %call52, %union.tree_node* null) #7, !dbg !8496
  %call70 = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !8497
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call70, metadata !8413, metadata !DIExpression()), !dbg !8422
  store %struct.gimple_seq_d* %call70, %struct.gimple_seq_d** %seq, align 8, !dbg !8498
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !8413, metadata !DIExpression(DW_OP_deref)), !dbg !8422
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %call69) #6, !dbg !8499
  %20 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8500
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %20, metadata !8413, metadata !DIExpression()), !dbg !8422
  call void @gimple_set_body(%union.tree_node* %fndecl, %struct.gimple_seq_d* %20) #6, !dbg !8501
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8, !dbg !8502
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !dbg !8502
  br label %if.end71, !dbg !8503

if.end71:                                         ; preds = %land.lhs.true61, %land.lhs.true55, %if.end50, %if.then64
  store %union.tree_node* null, %union.tree_node** %saved_tree, align 8, !dbg !8504
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8505
  %curr_properties = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 17, !dbg !8506
  store i32 1, i32* %curr_properties, align 8, !dbg !8507
  store i64 %1, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !8508
  call void @pop_cfun() #6, !dbg !8509
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8510
  ret void, !dbg !8510
}

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local void @push_struct_function(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @needs_to_live_in_memory(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_set_body(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @flag_instrument_functions_exclude_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_call(%union.tree_node*, i32, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_bind_set_block(%union.gimple_statement_d* %gs, %union.tree_node* %block) unnamed_addr #0 !dbg !8511 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8513, metadata !DIExpression()), !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8514, metadata !DIExpression()), !dbg !8515
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !8516
  store %union.tree_node* null, %union.tree_node** %0, align 8, !dbg !8517
  ret void, !dbg !8518
}

declare dso_local void @pop_cfun() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gimple_regimplify_operands(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi_p) local_unnamed_addr #5 !dbg !8519 {
entry:
  %pre = alloca %struct.gimple_seq_d*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  %constraint = alloca i8*, align 8
  %allows_mem = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %is_inout = alloca i8, align 1
  %op70 = alloca %union.tree_node*, align 8
  %i309 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8523, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_p, metadata !8524, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8527, metadata !DIExpression()), !dbg !8574
  %0 = bitcast %struct.gimple_seq_d** %pre to i8*, !dbg !8575
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8575
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !8530, metadata !DIExpression()), !dbg !8574
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %pre, align 8, !dbg !8576
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8531, metadata !DIExpression()), !dbg !8574
  %1 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !8577
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1) #8, !dbg !8577
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !8532, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !8578
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8579
  %call = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %2) #7, !dbg !8580
  %3 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !8581
  %into_ssa = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 10, !dbg !8582
  store i8 %call, i8* %into_ssa, align 1, !dbg !8583
  %call1 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !8584
  %4 = add i32 %call1, -1, !dbg !8585
  %5 = lshr i32 %4, 1, !dbg !8585
  %6 = shl i32 %4, 31, !dbg !8585
  %7 = or i32 %5, %6, !dbg !8585
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb6
    i32 9, label %sw.bb9
    i32 3, label %sw.bb12
  ], !dbg !8585

sw.bb:                                            ; preds = %entry
  %call2 = call fastcc %union.tree_node** @gimple_cond_lhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !8586
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call3 = call i32 @gimplify_expr(%union.tree_node** %call2, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8587
  %call4 = call fastcc %union.tree_node** @gimple_cond_rhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !8588
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call5 = call i32 @gimplify_expr(%union.tree_node** %call4, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8589
  br label %sw.epilog, !dbg !8590

sw.bb6:                                           ; preds = %entry
  %call7 = call fastcc %union.tree_node** @gimple_switch_index_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !8591
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call8 = call i32 @gimplify_expr(%union.tree_node** %call7, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8592
  br label %sw.epilog, !dbg !8593

sw.bb9:                                           ; preds = %entry
  %call10 = call fastcc %union.tree_node** @gimple_omp_atomic_load_rhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !8594
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call11 = call i32 @gimplify_expr(%union.tree_node** %call10, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8595
  br label %sw.epilog, !dbg !8596

sw.bb12:                                          ; preds = %entry
  %call14 = call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %stmt) #7, !dbg !8597
  %conv = zext i32 %call14 to i64, !dbg !8597
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8536, metadata !DIExpression()), !dbg !8598
  %8 = bitcast i8** %constraint to i8*, !dbg !8599
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !8599
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !8539, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !8600
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !8540, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !8600
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !8541, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !8600
  %9 = alloca i8*, i64 %conv, align 16, !dbg !8601
  call void @llvm.dbg.value(metadata i8** %9, metadata !8538, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i64 0, metadata !8533, metadata !DIExpression()), !dbg !8598
  br label %for.cond, !dbg !8602

for.cond:                                         ; preds = %for.body, %sw.bb12
  %i13.0 = phi i64 [ 0, %sw.bb12 ], [ %inc, %for.body ], !dbg !8603
  call void @llvm.dbg.value(metadata i64 %i13.0, metadata !8533, metadata !DIExpression()), !dbg !8598
  %exitcond = icmp eq i64 %i13.0, %conv, !dbg !8604
  br i1 %exitcond, label %for.cond25.preheader, label %for.body, !dbg !8605

for.cond25.preheader:                             ; preds = %for.cond
  br label %for.cond25, !dbg !8606

for.body:                                         ; preds = %for.cond
  %conv16 = trunc i64 %i13.0 to i32, !dbg !8607
  %call17 = call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %stmt, i32 %conv16) #7, !dbg !8608
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !8542, metadata !DIExpression()), !dbg !8609
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8610
  %10 = bitcast i32* %purpose to %struct.tree_list**, !dbg !8610
  %11 = load %struct.tree_list*, %struct.tree_list** %10, align 8, !dbg !8610
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %11, i64 0, i32 2, !dbg !8610
  %12 = bitcast %union.tree_node** %value to %struct.tree_string**, !dbg !8610
  %13 = load %struct.tree_string*, %struct.tree_string** %12, align 8, !dbg !8610
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %13, i64 0, i32 2, i64 0, !dbg !8610
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !8537, metadata !DIExpression()), !dbg !8598
  store i8* %arraydecay, i8** %constraint, align 8, !dbg !8611
  %.cast = ptrtoint i8* %arraydecay to i64, !dbg !8612
  %arrayidx = getelementptr inbounds i8*, i8** %9, i64 %i13.0, !dbg !8613
  %14 = bitcast i8** %arrayidx to i64*, !dbg !8614
  store i64 %.cast, i64* %14, align 8, !dbg !8614
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !8537, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !8539, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !8540, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !8541, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  %call20 = call zeroext i8 @parse_output_constraint(i8** nonnull %constraint, i32 %conv16, i32 0, i32 0, i8* nonnull %allows_mem, i8* nonnull %allows_reg, i8* nonnull %is_inout) #6, !dbg !8615
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8616
  %16 = load i8, i8* %is_inout, align 1, !dbg !8617
  call void @llvm.dbg.value(metadata i8 %16, metadata !8541, metadata !DIExpression()), !dbg !8598
  %tobool = icmp eq i8 %16, 0, !dbg !8617
  %cond = select i1 %tobool, i8 (%union.tree_node*)* @is_gimple_lvalue, i8 (%union.tree_node*)* @is_gimple_min_lval, !dbg !8617
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call24 = call i32 @gimplify_expr(%union.tree_node** nonnull %15, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull %cond, i32 6) #7, !dbg !8618
  %inc = add nuw nsw i64 %i13.0, 1, !dbg !8619
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8533, metadata !DIExpression()), !dbg !8598
  br label %for.cond, !dbg !8620, !llvm.loop !8621

for.cond25:                                       ; preds = %for.cond25.preheader, %for.inc60
  %i13.1 = phi i64 [ %inc61, %for.inc60 ], [ 0, %for.cond25.preheader ], !dbg !8623
  call void @llvm.dbg.value(metadata i64 %i13.1, metadata !8533, metadata !DIExpression()), !dbg !8598
  %call26 = call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %stmt) #7, !dbg !8624
  %conv27 = zext i32 %call26 to i64, !dbg !8624
  %cmp28 = icmp ult i64 %i13.1, %conv27, !dbg !8625
  br i1 %cmp28, label %for.body30, label %for.end62, !dbg !8606

for.body30:                                       ; preds = %for.cond25
  %conv32 = trunc i64 %i13.1 to i32, !dbg !8626
  %call33 = call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %stmt, i32 %conv32) #7, !dbg !8627
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !8546, metadata !DIExpression()), !dbg !8628
  %purpose35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8629
  %17 = bitcast i32* %purpose35 to %struct.tree_list**, !dbg !8629
  %18 = load %struct.tree_list*, %struct.tree_list** %17, align 8, !dbg !8629
  %value37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %18, i64 0, i32 2, !dbg !8629
  %19 = bitcast %union.tree_node** %value37 to %struct.tree_string**, !dbg !8629
  %20 = load %struct.tree_string*, %struct.tree_string** %19, align 8, !dbg !8629
  %arraydecay40 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %20, i64 0, i32 2, i64 0, !dbg !8629
  call void @llvm.dbg.value(metadata i8* %arraydecay40, metadata !8537, metadata !DIExpression()), !dbg !8598
  store i8* %arraydecay40, i8** %constraint, align 8, !dbg !8630
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !8537, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !8539, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !8540, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  %call42 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint, i32 0, i32 0, i32 %call14, i32 0, i8** nonnull %9, i8* nonnull %allows_mem, i8* nonnull %allows_reg) #6, !dbg !8631
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8632
  %22 = bitcast %union.tree_node** %21 to %struct.tree_common**, !dbg !8632
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !8632
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !8632
  %24 = bitcast %union.tree_node** %type to i64**, !dbg !8632
  %25 = load i64*, i64** %24, align 8, !dbg !8632
  %bf.load = load i64, i64* %25, align 8, !dbg !8632
  %bf.cast4 = and i64 %bf.load, 262144, !dbg !8632
  %tobool45 = icmp eq i64 %bf.cast4, 0, !dbg !8632
  br i1 %tobool45, label %if.end, label %land.lhs.true, !dbg !8634

land.lhs.true:                                    ; preds = %for.body30
  %26 = load i8, i8* %allows_mem, align 1, !dbg !8635
  call void @llvm.dbg.value(metadata i8 %26, metadata !8539, metadata !DIExpression()), !dbg !8598
  %tobool47 = icmp eq i8 %26, 0, !dbg !8635
  br i1 %tobool47, label %if.end, label %if.then, !dbg !8636

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i8 0, metadata !8540, metadata !DIExpression()), !dbg !8598
  store i8 0, i8* %allows_reg, align 1, !dbg !8637
  br label %if.end, !dbg !8638

if.end:                                           ; preds = %land.lhs.true, %for.body30, %if.then
  %27 = load i8, i8* %allows_reg, align 1, !dbg !8639
  call void @llvm.dbg.value(metadata i8 %27, metadata !8540, metadata !DIExpression()), !dbg !8598
  %tobool48 = icmp eq i8 %27, 0, !dbg !8639
  br i1 %tobool48, label %land.lhs.true49, label %if.else, !dbg !8641

land.lhs.true49:                                  ; preds = %if.end
  %28 = load i8, i8* %allows_mem, align 1, !dbg !8642
  call void @llvm.dbg.value(metadata i8 %28, metadata !8539, metadata !DIExpression()), !dbg !8598
  %tobool51 = icmp eq i8 %28, 0, !dbg !8642
  br i1 %tobool51, label %if.else, label %if.then52, !dbg !8643

if.then52:                                        ; preds = %land.lhs.true49
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call55 = call i32 @gimplify_expr(%union.tree_node** nonnull %21, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 6) #7, !dbg !8644
  br label %for.inc60, !dbg !8644

if.else:                                          ; preds = %land.lhs.true49, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call58 = call i32 @gimplify_expr(%union.tree_node** nonnull %21, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_asm_val, i32 1) #7, !dbg !8645
  br label %for.inc60

for.inc60:                                        ; preds = %if.then52, %if.else
  %inc61 = add nuw nsw i64 %i13.1, 1, !dbg !8646
  call void @llvm.dbg.value(metadata i64 %inc61, metadata !8533, metadata !DIExpression()), !dbg !8598
  br label %for.cond25, !dbg !8647, !llvm.loop !8648

for.end62:                                        ; preds = %for.cond25
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !8541, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !8650
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !8540, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !8650
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !8539, metadata !DIExpression(DW_OP_deref)), !dbg !8598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !8650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !8650
  br label %sw.epilog, !dbg !8651

sw.default:                                       ; preds = %entry
  %call63 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !8652
  %conv64 = zext i32 %call63 to i64, !dbg !8652
  call void @llvm.dbg.value(metadata i64 %conv64, metadata !8526, metadata !DIExpression()), !dbg !8574
  %call65 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !8653
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !8527, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i64 %conv64, metadata !8525, metadata !DIExpression()), !dbg !8574
  %29 = bitcast %union.tree_node** %op70 to i8*, !dbg !8654
  %cmp96 = icmp eq i32 %call63, 2, !dbg !8655
  %30 = bitcast %union.tree_node** %op70 to i64**, !dbg !8658
  br i1 %cmp96, label %sw.default.split.us, label %sw.default.sw.default.split_crit_edge, !dbg !8662

sw.default.sw.default.split_crit_edge:            ; preds = %sw.default
  br label %for.cond66, !dbg !8662

sw.default.split.us:                              ; preds = %sw.default
  br label %for.cond66.us, !dbg !8662

for.cond66.us:                                    ; preds = %cleanup.us, %sw.default.split.us
  %i.0.us = phi i64 [ %conv64, %sw.default.split.us ], [ %dec.us, %cleanup.us ], !dbg !8663
  call void @llvm.dbg.value(metadata i64 %i.0.us, metadata !8525, metadata !DIExpression()), !dbg !8574
  %cmp67.us = icmp eq i64 %i.0.us, 0, !dbg !8664
  br i1 %cmp67.us, label %for.end132.us-lcssa.us, label %for.body69.us, !dbg !8665

for.body69.us:                                    ; preds = %for.cond66.us
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8, !dbg !8666
  %31 = trunc i64 %i.0.us to i32, !dbg !8667
  %conv71.us = add i32 %31, -1, !dbg !8667
  %call72.us = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %conv71.us) #7, !dbg !8668
  call void @llvm.dbg.value(metadata %union.tree_node* %call72.us, metadata !8550, metadata !DIExpression()), !dbg !8654
  store %union.tree_node* %call72.us, %union.tree_node** %op70, align 8, !dbg !8669
  call void @llvm.dbg.value(metadata %union.tree_node* %call72.us, metadata !8550, metadata !DIExpression()), !dbg !8654
  %cmp73.us = icmp eq %union.tree_node* %call72.us, null, !dbg !8670
  br i1 %cmp73.us, label %cleanup.us, label %if.end76.us, !dbg !8672

if.end76.us:                                      ; preds = %for.body69.us
  switch i64 %i.0.us, label %if.else124.us [
    i64 1, label %land.lhs.true79.us
    i64 2, label %land.lhs.true91.us
  ], !dbg !8673

land.lhs.true79.us:                               ; preds = %if.end76.us
  %call80.us = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8674
  %tobool82.us = icmp eq i8 %call80.us, 0, !dbg !8674
  br i1 %tobool82.us, label %lor.lhs.false.us, label %if.then86.us, !dbg !8675

lor.lhs.false.us:                                 ; preds = %land.lhs.true79.us
  %call83.us = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !8676
  %tobool85.us = icmp eq i8 %call83.us, 0, !dbg !8676
  br i1 %tobool85.us, label %if.else88.us, label %if.then86.us, !dbg !8677

if.then86.us:                                     ; preds = %lor.lhs.false.us, %land.lhs.true79.us
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call87.us = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !8678
  br label %if.end128.us, !dbg !8678

if.else88.us:                                     ; preds = %lor.lhs.false.us
  br i1 false, label %if.else88.us.land.lhs.true91.us_crit_edge, label %if.else124.us, !dbg !8679

if.else88.us.land.lhs.true91.us_crit_edge:        ; preds = %if.else88.us
  br label %land.lhs.true91.us, !dbg !8679

land.lhs.true91.us:                               ; preds = %if.else88.us.land.lhs.true91.us_crit_edge, %if.end76.us
  %call92.us = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !8680
  %tobool94.us = icmp eq i8 %call92.us, 0, !dbg !8680
  br i1 %tobool94.us, label %if.else107.us, label %land.lhs.true98.us, !dbg !8681

land.lhs.true98.us:                               ; preds = %land.lhs.true91.us
  %call99.us = call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !8682
  %call100.us = call fastcc i32 @get_gimple_rhs_class(i32 %call99.us) #7, !dbg !8683
  %cmp101.us = icmp eq i32 %call100.us, 3, !dbg !8684
  br i1 %cmp101.us, label %if.then103.us, label %if.else107.us, !dbg !8685

if.else107.us:                                    ; preds = %land.lhs.true91.us, %land.lhs.true98.us
  %cmp108.us = icmp eq i64 %i.0.us, 2, !dbg !8686
  br i1 %cmp108.us, label %land.lhs.true110.us, label %if.else124.us, !dbg !8687

land.lhs.true110.us:                              ; preds = %if.else107.us
  %call111.us = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8688
  %tobool113.us = icmp eq i8 %call111.us, 0, !dbg !8688
  br i1 %tobool113.us, label %if.else124.us, label %if.then114.us, !dbg !8689

if.then114.us:                                    ; preds = %land.lhs.true110.us
  %32 = load i64*, i64** %30, align 8, !dbg !8690
  %bf.load116.us = load i64, i64* %32, align 8, !dbg !8690
  %bf.cast11813.us = and i64 %bf.load116.us, 65535, !dbg !8691
  %cmp119.us = icmp eq i64 %bf.cast11813.us, 29, !dbg !8691
  br i1 %cmp119.us, label %cleanup.us, label %if.end122.us, !dbg !8692

if.end122.us:                                     ; preds = %if.then114.us
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call123.us = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_call_addr, i32 1) #7, !dbg !8693
  br label %if.end128.us, !dbg !8694

if.then103.us:                                    ; preds = %land.lhs.true98.us
  %call104.us = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !8695
  %call105.us = call i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %call104.us) #7, !dbg !8696
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call106.us = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* %call105.us, i32 1) #7, !dbg !8697
  br label %if.end128.us, !dbg !8697

if.else124.us:                                    ; preds = %land.lhs.true110.us, %if.else107.us, %if.else88.us, %if.end76.us
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call125.us = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8698
  br label %if.end128.us

if.end128.us:                                     ; preds = %if.else124.us, %if.then103.us, %if.end122.us, %if.then86.us
  %33 = load %union.tree_node*, %union.tree_node** %op70, align 8, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !8550, metadata !DIExpression()), !dbg !8654
  call fastcc void @gimple_set_op(%union.gimple_statement_d* %stmt, i32 %conv71.us, %union.tree_node* %33) #7, !dbg !8700
  br label %cleanup.us, !dbg !8701

cleanup.us:                                       ; preds = %if.end128.us, %if.then114.us, %for.body69.us
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8, !dbg !8701
  %dec.us = add nsw i64 %i.0.us, -1, !dbg !8702
  call void @llvm.dbg.value(metadata i64 %dec.us, metadata !8525, metadata !DIExpression()), !dbg !8574
  br label %for.cond66.us, !dbg !8703, !llvm.loop !8704

for.end132.us-lcssa.us:                           ; preds = %for.cond66.us
  br label %for.end132, !dbg !8706

for.cond66:                                       ; preds = %cleanup, %sw.default.sw.default.split_crit_edge
  %i.0 = phi i64 [ %conv64, %sw.default.sw.default.split_crit_edge ], [ %dec, %cleanup ], !dbg !8663
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !8525, metadata !DIExpression()), !dbg !8574
  %cmp67 = icmp eq i64 %i.0, 0, !dbg !8664
  br i1 %cmp67, label %for.end132.us-lcssa, label %for.body69, !dbg !8665

for.body69:                                       ; preds = %for.cond66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8, !dbg !8666
  %34 = trunc i64 %i.0 to i32, !dbg !8667
  %conv71 = add i32 %34, -1, !dbg !8667
  %call72 = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %conv71) #7, !dbg !8668
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !8550, metadata !DIExpression()), !dbg !8654
  store %union.tree_node* %call72, %union.tree_node** %op70, align 8, !dbg !8669
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !8550, metadata !DIExpression()), !dbg !8654
  %cmp73 = icmp eq %union.tree_node* %call72, null, !dbg !8670
  br i1 %cmp73, label %cleanup, label %if.end76, !dbg !8672

if.end76:                                         ; preds = %for.body69
  switch i64 %i.0, label %if.else124 [
    i64 1, label %land.lhs.true79
    i64 2, label %land.lhs.true91
  ], !dbg !8673

land.lhs.true79:                                  ; preds = %if.end76
  %call80 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8674
  %tobool82 = icmp eq i8 %call80, 0, !dbg !8674
  br i1 %tobool82, label %lor.lhs.false, label %if.then86, !dbg !8675

lor.lhs.false:                                    ; preds = %land.lhs.true79
  %call83 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !8676
  %tobool85 = icmp eq i8 %call83, 0, !dbg !8676
  br i1 %tobool85, label %if.else88, label %if.then86, !dbg !8677

if.then86:                                        ; preds = %lor.lhs.false, %land.lhs.true79
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call87 = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !8678
  br label %if.end128, !dbg !8678

if.else88:                                        ; preds = %lor.lhs.false
  br i1 false, label %if.else88.land.lhs.true91_crit_edge, label %if.else124, !dbg !8679

if.else88.land.lhs.true91_crit_edge:              ; preds = %if.else88
  br label %land.lhs.true91, !dbg !8679

land.lhs.true91:                                  ; preds = %if.else88.land.lhs.true91_crit_edge, %if.end76
  %call92 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !8680
  %cmp108 = icmp eq i64 %i.0, 2, !dbg !8686
  br i1 %cmp108, label %land.lhs.true110, label %if.else124, !dbg !8687

land.lhs.true110:                                 ; preds = %land.lhs.true91
  %call111 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8688
  %tobool113 = icmp eq i8 %call111, 0, !dbg !8688
  br i1 %tobool113, label %if.else124, label %if.then114, !dbg !8689

if.then114:                                       ; preds = %land.lhs.true110
  %35 = load i64*, i64** %30, align 8, !dbg !8690
  %bf.load116 = load i64, i64* %35, align 8, !dbg !8690
  %bf.cast11813 = and i64 %bf.load116, 65535, !dbg !8691
  %cmp119 = icmp eq i64 %bf.cast11813, 29, !dbg !8691
  br i1 %cmp119, label %cleanup, label %if.end122, !dbg !8692

if.end122:                                        ; preds = %if.then114
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call123 = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_call_addr, i32 1) #7, !dbg !8693
  br label %if.end128, !dbg !8694

if.else124:                                       ; preds = %land.lhs.true110, %if.else88, %if.end76, %land.lhs.true91
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  call void @llvm.dbg.value(metadata %union.tree_node** %op70, metadata !8550, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %call125 = call i32 @gimplify_expr(%union.tree_node** nonnull %op70, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !8698
  br label %if.end128

if.end128:                                        ; preds = %if.else124, %if.end122, %if.then86
  %36 = load %union.tree_node*, %union.tree_node** %op70, align 8, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !8550, metadata !DIExpression()), !dbg !8654
  call fastcc void @gimple_set_op(%union.gimple_statement_d* %stmt, i32 %conv71, %union.tree_node* %36) #7, !dbg !8700
  br label %cleanup, !dbg !8701

cleanup:                                          ; preds = %if.then114, %for.body69, %if.end128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8, !dbg !8701
  %dec = add nsw i64 %i.0, -1, !dbg !8702
  call void @llvm.dbg.value(metadata i64 %dec, metadata !8525, metadata !DIExpression()), !dbg !8574
  br label %for.cond66, !dbg !8703, !llvm.loop !8704

for.end132.us-lcssa:                              ; preds = %for.cond66
  br label %for.end132, !dbg !8706

for.end132:                                       ; preds = %for.end132.us-lcssa.us, %for.end132.us-lcssa
  %call133 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !8706
  call void @llvm.dbg.value(metadata %union.tree_node* %call133, metadata !8528, metadata !DIExpression()), !dbg !8574
  %tobool134 = icmp eq %union.tree_node* %call133, null, !dbg !8707
  br i1 %tobool134, label %sw.epilog, label %land.lhs.true135, !dbg !8708

land.lhs.true135:                                 ; preds = %for.end132
  %call136 = call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %call133) #6, !dbg !8709
  %tobool137 = icmp eq i8 %call136, 0, !dbg !8709
  br i1 %tobool137, label %if.then138, label %sw.epilog, !dbg !8710

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.value(metadata i8 0, metadata !8554, metadata !DIExpression()), !dbg !8711
  %call139 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !8712
  %tobool141 = icmp ne i8 %call139, 0, !dbg !8712
  %or.cond1 = and i1 %tobool141, %cmp96, !dbg !8713
  br i1 %or.cond1, label %land.lhs.true145, label %if.else155, !dbg !8713

land.lhs.true145:                                 ; preds = %if.then138
  %call146 = call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !8714
  %call147 = call fastcc i32 @get_gimple_rhs_class(i32 %call146) #7, !dbg !8715
  %cmp148 = icmp eq i32 %call147, 3, !dbg !8716
  br i1 %cmp148, label %if.then150, label %if.else155, !dbg !8717

if.then150:                                       ; preds = %land.lhs.true145
  %call151 = call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !8718
  %call152 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !8719
  %call153 = call i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %call152) #7, !dbg !8720
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre, metadata !8530, metadata !DIExpression(DW_OP_deref)), !dbg !8574
  %call154 = call i32 @gimplify_expr(%union.tree_node** %call151, %struct.gimple_seq_d** nonnull %pre, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* %call153, i32 1) #7, !dbg !8721
  br label %if.end236, !dbg !8721

if.else155:                                       ; preds = %land.lhs.true145, %if.then138
  %call156 = call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %call133) #6, !dbg !8722
  %tobool157 = icmp eq i8 %call156, 0, !dbg !8722
  %type160 = getelementptr inbounds %union.tree_node, %union.tree_node* %call133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8723
  %37 = load %union.tree_node*, %union.tree_node** %type160, align 8, !dbg !8723
  %call161 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %37) #6, !dbg !8723
  %tobool162 = icmp ne i8 %call161, 0, !dbg !8723
  br i1 %tobool157, label %if.else181, label %if.then158, !dbg !8724

if.then158:                                       ; preds = %if.else155
  br i1 %tobool162, label %if.then163, label %if.end236, !dbg !8725

if.then163:                                       ; preds = %if.then158
  %call164 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8727
  %tobool165 = icmp eq i8 %call164, 0, !dbg !8727
  br i1 %tobool165, label %if.end175, label %if.then166, !dbg !8731

if.then166:                                       ; preds = %if.then163
  %call167 = call i32 @gimple_call_flags(%union.gimple_statement_d* %stmt) #6, !dbg !8732
  %conv168 = sext i32 %call167 to i64, !dbg !8732
  call void @llvm.dbg.value(metadata i64 %conv168, metadata !8525, metadata !DIExpression()), !dbg !8574
  %and171 = and i64 %conv168, 3, !dbg !8734
  %tobool172 = icmp eq i64 %and171, 0, !dbg !8734
  %tobool17214 = zext i1 %tobool172 to i8, !dbg !8736
  %and = lshr i64 %conv168, 2, !dbg !8736
  %38 = trunc i64 %and to i8, !dbg !8736
  %39 = and i8 %38, 1, !dbg !8736
  %need_temp.0 = or i8 %39, %tobool17214, !dbg !8736
  br label %if.end175, !dbg !8736

if.end175:                                        ; preds = %if.then163, %if.then166
  %need_temp.1 = phi i8 [ 0, %if.then163 ], [ %need_temp.0, %if.then166 ], !dbg !8711
  call void @llvm.dbg.value(metadata i8 %need_temp.1, metadata !8554, metadata !DIExpression()), !dbg !8711
  %call176 = call zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* %stmt) #6, !dbg !8737
  %40 = or i8 %call176, %need_temp.1, !dbg !8739
  %41 = icmp ne i8 %40, 0, !dbg !8739
  br label %if.end236, !dbg !8739

if.else181:                                       ; preds = %if.else155
  br i1 %tobool162, label %if.end236, label %if.else187, !dbg !8740

if.else187:                                       ; preds = %if.else181
  %42 = bitcast %union.tree_node** %type160 to i64**, !dbg !8741
  %43 = load i64*, i64** %42, align 8, !dbg !8741
  %bf.load191 = load i64, i64* %43, align 8, !dbg !8741
  %bf.cast1935 = and i64 %bf.load191, 65535, !dbg !8741
  %cmp194 = icmp eq i64 %bf.cast1935, 14, !dbg !8741
  br i1 %cmp194, label %cond.true, label %cond.false, !dbg !8741

cond.true:                                        ; preds = %if.else187
  %.cast6 = bitcast i64* %43 to %union.tree_node*, !dbg !8741
  %call198 = call i32 @vector_type_mode(%union.tree_node* %.cast6) #6, !dbg !8741
  br label %cond.end, !dbg !8741

cond.false:                                       ; preds = %if.else187
  %type201 = bitcast i64* %43 to %struct.tree_type*, !dbg !8741
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type201, i64 0, i32 6, !dbg !8741
  %bf.load202 = load i32, i32* %mode, align 4, !dbg !8741
  %bf.lshr203 = lshr i32 %bf.load202, 16, !dbg !8741
  %bf.clear204 = and i32 %bf.lshr203, 255, !dbg !8741
  br label %cond.end, !dbg !8741

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond205 = phi i32 [ %call198, %cond.true ], [ %bf.clear204, %cond.false ], !dbg !8741
  %cmp206 = icmp eq i32 %cond205, 1, !dbg !8742
  br i1 %cmp206, label %if.end236, label %if.then208, !dbg !8743

if.then208:                                       ; preds = %cond.end
  %call209 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !8744
  %tobool210 = icmp eq i8 %call209, 0, !dbg !8744
  br i1 %tobool210, label %if.end236, label %if.then211, !dbg !8745

if.then211:                                       ; preds = %if.then208
  %call212 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %call212, metadata !8557, metadata !DIExpression()), !dbg !8747
  %44 = load %union.tree_node*, %union.tree_node** %type160, align 8, !dbg !8748
  %call215 = call i32 @aggregate_value_p(%union.tree_node* %44, %union.tree_node* %call212) #6, !dbg !8750
  %tobool216 = icmp eq i32 %call215, 0, !dbg !8750
  br i1 %tobool216, label %land.lhs.true217, label %if.end236, !dbg !8751

land.lhs.true217:                                 ; preds = %if.then211
  %tobool218 = icmp eq %union.tree_node* %call212, null, !dbg !8752
  br i1 %tobool218, label %if.then229, label %land.lhs.true219, !dbg !8753

land.lhs.true219:                                 ; preds = %land.lhs.true217
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %call212, i64 0, i32 0, i32 0, i32 3, !dbg !8754
  %45 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !8754
  %tobool220 = icmp eq %union.tree_node* %45, null, !dbg !8754
  br i1 %tobool220, label %if.then229, label %land.lhs.true221, !dbg !8755

land.lhs.true221:                                 ; preds = %land.lhs.true219
  %decl_by_reference_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8756
  %46 = bitcast i40* %decl_by_reference_flag to i64*, !dbg !8756
  %bf.load224 = load i64, i64* %46, align 8, !dbg !8756
  %bf.cast22712 = and i64 %bf.load224, 268435456, !dbg !8756
  %tobool228 = icmp eq i64 %bf.cast22712, 0, !dbg !8756
  br i1 %tobool228, label %if.then229, label %if.end236, !dbg !8757

if.then229:                                       ; preds = %land.lhs.true221, %land.lhs.true219, %land.lhs.true217
  call void @llvm.dbg.value(metadata i8 1, metadata !8554, metadata !DIExpression()), !dbg !8711
  br label %if.end236, !dbg !8758

if.end236:                                        ; preds = %land.lhs.true221, %if.then211, %if.then208, %cond.end, %if.end175, %if.then158, %if.then229, %if.else181, %if.then150
  %need_temp.9 = phi i1 [ false, %if.then150 ], [ %41, %if.end175 ], [ false, %if.then158 ], [ true, %if.else181 ], [ false, %cond.end ], [ false, %if.then211 ], [ false, %land.lhs.true221 ], [ true, %if.then229 ], [ true, %if.then208 ]
  br i1 %need_temp.9, label %if.then238, label %sw.epilog, !dbg !8759

if.then238:                                       ; preds = %if.end236
  %type240 = getelementptr inbounds %union.tree_node, %union.tree_node* %call133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8760
  %47 = load %union.tree_node*, %union.tree_node** %type240, align 8, !dbg !8760
  %call241 = call %union.tree_node* @create_tmp_var(%union.tree_node* %47, i8* null) #7, !dbg !8761
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !8566, metadata !DIExpression()), !dbg !8762
  %48 = bitcast %union.tree_node** %type240 to i64**, !dbg !8763
  %49 = load i64*, i64** %48, align 8, !dbg !8763
  %bf.load245 = load i64, i64* %49, align 8, !dbg !8763
  %bf.cast2478 = and i64 %bf.load245, 65535, !dbg !8765
  %cmp248 = icmp eq i64 %bf.cast2478, 13, !dbg !8765
  br i1 %cmp248, label %if.then259, label %lor.lhs.false250, !dbg !8766

lor.lhs.false250:                                 ; preds = %if.then238
  %cmp257 = icmp eq i64 %bf.cast2478, 14, !dbg !8767
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !8768

if.then259:                                       ; preds = %lor.lhs.false250, %if.then238
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8769
  %50 = bitcast i40* %gimple_reg_flag to i64*, !dbg !8769
  %bf.load261 = load i64, i64* %50, align 8, !dbg !8770
  %bf.set = or i64 %bf.load261, 134217728, !dbg !8770
  store i64 %bf.set, i64* %50, align 8, !dbg !8770
  br label %if.end263, !dbg !8769

if.end263:                                        ; preds = %if.then259, %lor.lhs.false250
  br label %if.end271, !dbg !8771

if.then270:                                       ; No predecessors!
  br label %if.end271, !dbg !8772

if.end271:                                        ; preds = %if.end263, %if.then270
  %51 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8774
  %call273 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %51) #7, !dbg !8776
  %tobool274 = icmp eq i8 %call273, 0, !dbg !8776
  br i1 %tobool274, label %if.end277, label %if.then275, !dbg !8777

if.then275:                                       ; preds = %if.end271
  %call276 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call241, %union.gimple_statement_d* null) #7, !dbg !8778
  call void @llvm.dbg.value(metadata %union.tree_node* %call276, metadata !8566, metadata !DIExpression()), !dbg !8762
  br label %if.end277, !dbg !8779

if.end277:                                        ; preds = %if.end271, %if.then275
  %temp.0 = phi %union.tree_node* [ %call276, %if.then275 ], [ %call241, %if.end271 ], !dbg !8762
  call void @llvm.dbg.value(metadata %union.tree_node* %temp.0, metadata !8566, metadata !DIExpression()), !dbg !8762
  call void @gimple_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %temp.0) #6, !dbg !8780
  %call278 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* nonnull %call133, %union.tree_node* %temp.0) #6, !dbg !8781
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call278, metadata !8531, metadata !DIExpression()), !dbg !8574
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8782
  %bf.load280 = load i64, i64* %52, align 8, !dbg !8782
  %bf.cast28211 = and i64 %bf.load280, 65535, !dbg !8784
  %cmp283 = icmp eq i64 %bf.cast28211, 141, !dbg !8784
  br i1 %cmp283, label %if.then285, label %sw.epilog, !dbg !8785

if.then285:                                       ; preds = %if.end277
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8786
  %53 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !8786
  store %union.gimple_statement_d* %call278, %union.gimple_statement_d** %53, align 8, !dbg !8787
  br label %sw.epilog, !dbg !8786

sw.epilog:                                        ; preds = %land.lhs.true135, %for.end132, %if.end277, %if.then285, %if.end236, %for.end62, %sw.bb9, %sw.bb6, %sw.bb
  %post_stmt.2 = phi %union.gimple_statement_d* [ null, %for.end62 ], [ null, %sw.bb9 ], [ null, %sw.bb6 ], [ null, %sw.bb ], [ null, %land.lhs.true135 ], [ null, %for.end132 ], [ null, %if.end236 ], [ %call278, %if.then285 ], [ %call278, %if.end277 ], !dbg !8788
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %post_stmt.2, metadata !8531, metadata !DIExpression()), !dbg !8574
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8789
  %call291 = call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %54) #7, !dbg !8791
  %tobool292 = icmp eq %struct.htab* %call291, null, !dbg !8791
  br i1 %tobool292, label %if.end301, label %if.then293, !dbg !8792

if.then293:                                       ; preds = %sw.epilog
  %55 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !8793
  %temps = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %55, i64 0, i32 2, !dbg !8795
  br label %for.cond294, !dbg !8796

for.cond294:                                      ; preds = %for.body296, %if.then293
  %t.0.in = phi %union.tree_node** [ %temps, %if.then293 ], [ %chain, %for.body296 ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !8797
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !8529, metadata !DIExpression()), !dbg !8574
  %tobool295 = icmp eq %union.tree_node* %t.0, null, !dbg !8798
  br i1 %tobool295, label %if.end301.loopexit, label %for.body296, !dbg !8798

for.body296:                                      ; preds = %for.cond294
  %call297 = call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %t.0) #6, !dbg !8799
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8801
  br label %for.cond294, !dbg !8802, !llvm.loop !8803

if.end301.loopexit:                               ; preds = %for.cond294
  br label %if.end301, !dbg !8805

if.end301:                                        ; preds = %if.end301.loopexit, %sw.epilog
  %56 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %pre, align 8, !dbg !8805
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %56, metadata !8530, metadata !DIExpression()), !dbg !8574
  %call302 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %56) #7, !dbg !8806
  %tobool303 = icmp eq i8 %call302, 0, !dbg !8806
  br i1 %tobool303, label %if.then304, label %if.end318, !dbg !8807

if.then304:                                       ; preds = %if.end301
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8808
  %call306 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %57) #7, !dbg !8809
  %tobool307 = icmp eq i8 %call306, 0, !dbg !8809
  br i1 %tobool307, label %if.end317, label %if.then308, !dbg !8810

if.then308:                                       ; preds = %if.then304
  %58 = bitcast %struct.gimple_stmt_iterator* %i309 to i8*, !dbg !8811
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8, !dbg !8811
  %59 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8812
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #8, !dbg !8812
  %60 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %pre, align 8, !dbg !8814
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %60, metadata !8530, metadata !DIExpression()), !dbg !8574
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %60) #7, !dbg !8812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %59, i64 24, i1 false), !dbg !8812
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8, !dbg !8812
  br label %for.cond310, !dbg !8815

for.cond310:                                      ; preds = %for.body313, %if.then308
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i309, metadata !8569, metadata !DIExpression(DW_OP_deref)), !dbg !8816
  %call311 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i309) #7, !dbg !8817
  %tobool312 = icmp eq i8 %call311, 0, !dbg !8819
  br i1 %tobool312, label %for.body313, label %for.end316, !dbg !8820

for.body313:                                      ; preds = %for.cond310
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i309, metadata !8569, metadata !DIExpression(DW_OP_deref)), !dbg !8816
  %call314 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i309) #7, !dbg !8821
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call314) #6, !dbg !8822
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i309, metadata !8569, metadata !DIExpression(DW_OP_deref)), !dbg !8816
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i309) #7, !dbg !8823
  br label %for.cond310, !dbg !8824, !llvm.loop !8825

for.end316:                                       ; preds = %for.cond310
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8, !dbg !8827
  br label %if.end317, !dbg !8828

if.end317:                                        ; preds = %if.then304, %for.end316
  %61 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %pre, align 8, !dbg !8829
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %61, metadata !8530, metadata !DIExpression()), !dbg !8574
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* %gsi_p, %struct.gimple_seq_d* %61, i32 1) #6, !dbg !8830
  br label %if.end318, !dbg !8831

if.end318:                                        ; preds = %if.end301, %if.end317
  %tobool319 = icmp eq %union.gimple_statement_d* %post_stmt.2, null, !dbg !8832
  br i1 %tobool319, label %if.end321, label %if.then320, !dbg !8834

if.then320:                                       ; preds = %if.end318
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi_p, %union.gimple_statement_d* nonnull %post_stmt.2, i32 0) #6, !dbg !8835
  br label %if.end321, !dbg !8835

if.end321:                                        ; preds = %if.end318, %if.then320
  call void @pop_gimplify_context(%union.gimple_statement_d* null) #7, !dbg !8836
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1) #8, !dbg !8837
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8837
  ret void, !dbg !8837
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %fun) unnamed_addr #0 !dbg !8838 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !8845, metadata !DIExpression()), !dbg !8846
  %tobool = icmp eq %struct.function* %fun, null, !dbg !8847
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !8848

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !8849
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !8849
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !8850
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !8851

land.rhs:                                         ; preds = %land.lhs.true
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 10, !dbg !8852
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !8852
  %bf.clear = and i8 %bf.load, 1, !dbg !8852
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %1 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %bf.clear, %land.rhs ]
  ret i8 %1, !dbg !8853
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_cond_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8854 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8858, metadata !DIExpression()), !dbg !8859
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !8860
  ret %union.tree_node** %call, !dbg !8861
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_cond_rhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8862 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8864, metadata !DIExpression()), !dbg !8865
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !8866
  ret %union.tree_node** %call, !dbg !8867
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_switch_index_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8868 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8870, metadata !DIExpression()), !dbg !8871
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !8872
  ret %union.tree_node** %call, !dbg !8873
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_atomic_load_rhs_ptr(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8874 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8878, metadata !DIExpression()), !dbg !8879
  %rhs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !8880
  %0 = bitcast i32* %rhs to %union.tree_node**, !dbg !8880
  ret %union.tree_node** %0, !dbg !8881
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8882 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8886, metadata !DIExpression()), !dbg !8887
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !8888
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !8889
  %0 = load i8, i8* %no, align 1, !dbg !8889
  %conv = zext i8 %0 to i32, !dbg !8890
  ret i32 %conv, !dbg !8891
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !8892 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 %index, metadata !8897, metadata !DIExpression()), !dbg !8898
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !8899
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !8899
  %0 = load i8, i8* %no, align 1, !dbg !8899
  %conv = zext i8 %0 to i32, !dbg !8899
  %cmp = icmp ult i32 %conv, %index, !dbg !8899
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8899

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8899
  br label %cond.end, !dbg !8899

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !8900
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !8900
  %2 = load i8, i8* %1, align 8, !dbg !8900
  %conv3 = zext i8 %2 to i32, !dbg !8901
  %add = add i32 %conv3, %index, !dbg !8902
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !8903
  ret %union.tree_node* %call, !dbg !8904
}

declare dso_local zeroext i8 @parse_output_constraint(i8**, i32, i32, i32, i8*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8905 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8907, metadata !DIExpression()), !dbg !8908
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !8909
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !8909
  %1 = load i8, i8* %0, align 8, !dbg !8909
  %conv = zext i8 %1 to i32, !dbg !8910
  ret i32 %conv, !dbg !8911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !8912 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8914, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 %index, metadata !8915, metadata !DIExpression()), !dbg !8916
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !8917
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !8917
  %1 = load i8, i8* %0, align 8, !dbg !8917
  %conv = zext i8 %1 to i32, !dbg !8917
  %cmp = icmp ult i32 %conv, %index, !dbg !8917
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8917

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8917
  br label %cond.end, !dbg !8917

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %index) #7, !dbg !8918
  ret %union.tree_node* %call, !dbg !8919
}

declare dso_local zeroext i8 @parse_input_constraint(i8**, i32, i32, i32, i32, i8**, i8*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8922, metadata !DIExpression()), !dbg !8923
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !8924
  %0 = load i32, i32* %num_ops, align 4, !dbg !8924
  ret i32 %0, !dbg !8925
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !8926 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8928, metadata !DIExpression()), !dbg !8930
  call void @llvm.dbg.value(metadata i32 %i, metadata !8929, metadata !DIExpression()), !dbg !8930
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !8931
  %tobool = icmp eq i8 %call, 0, !dbg !8931
  br i1 %tobool, label %return, label %if.then, !dbg !8933

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !8934
  %idxprom = zext i32 %i to i64, !dbg !8934
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !8934
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8934
  br label %return, !dbg !8936

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !8937
  ret %union.tree_node* %retval.0, !dbg !8938
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8939 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8943, metadata !DIExpression()), !dbg !8944
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !8945
  %cmp = icmp eq i32 %call, 8, !dbg !8946
  %conv1 = zext i1 %cmp to i8, !dbg !8945
  ret i8 %conv1, !dbg !8947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8950, metadata !DIExpression()), !dbg !8951
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !8952
  %cmp = icmp eq i32 %call, 6, !dbg !8953
  %conv1 = zext i1 %cmp to i8, !dbg !8952
  ret i8 %conv1, !dbg !8954
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !8955 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !8959, metadata !DIExpression()), !dbg !8960
  %idxprom = sext i32 %code to i64, !dbg !8961
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !8961
  %0 = load i8, i8* %arrayidx, align 1, !dbg !8961
  %conv = zext i8 %0 to i32, !dbg !8962
  ret i32 %conv, !dbg !8963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !8964 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8968, metadata !DIExpression()), !dbg !8970
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !8971
  call void @llvm.dbg.value(metadata i32 %call, metadata !8969, metadata !DIExpression()), !dbg !8970
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !8972

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !8974
  %bf.load = load i32, i32* %0, align 8, !dbg !8974
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8974
  br label %cleanup, !dbg !8975

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8976
  br label %cleanup, !dbg !8978

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !8970
  ret i32 %retval.0, !dbg !8979
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8980 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8982, metadata !DIExpression()), !dbg !8983
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !8984
  ret %union.tree_node* %call, !dbg !8985
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !8986 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8990, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %i, metadata !8991, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !8992, metadata !DIExpression()), !dbg !8993
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !8994
  %tobool = icmp eq i8 %call, 0, !dbg !8994
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !8994

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !8994
  %cmp = icmp ugt i32 %call1, %i, !dbg !8994
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8994

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8994
  br label %cond.end, !dbg !8994

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !8995
  %idxprom = zext i32 %i to i64, !dbg !8995
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !8995
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !8996
  ret void, !dbg !8997
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8998 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9000, metadata !DIExpression()), !dbg !9001
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !9002
  ret %union.tree_node** %call, !dbg !9003
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9004 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9006, metadata !DIExpression()), !dbg !9008
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !9009
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9010
  %bf.load = load i64, i64* %0, align 8, !dbg !9010
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9012
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !9012
  br i1 %cmp, label %if.then, label %cleanup, !dbg !9013

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9014
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9014
  br label %cleanup, !dbg !9015

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !9008
  ret %union.tree_node* %retval.0, !dbg !9016
}

declare dso_local i32 @aggregate_value_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !9017 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !9021, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9022, metadata !DIExpression()), !dbg !9023
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9024
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !9025
  ret %union.tree_node* %call, !dbg !9026
}

declare dso_local void @gimple_set_lhs(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !9027 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !9031, metadata !DIExpression()), !dbg !9032
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !9033
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !9033
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !9035
  br i1 %tobool, label %return, label %if.end, !dbg !9036

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !9037
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !9037
  br label %return, !dbg !9038

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !9032
  ret %struct.htab* %retval.0, !dbg !9039
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @force_gimple_operand(%union.tree_node* %expr, %struct.gimple_seq_d** %stmts, i8 zeroext %simple, %union.tree_node* %var) local_unnamed_addr #5 !dbg !9040 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9044, metadata !DIExpression()), !dbg !9052
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9045, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 %simple, metadata !9046, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !9047, metadata !DIExpression()), !dbg !9052
  %0 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !9053
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #8, !dbg !9053
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !9054
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9044, metadata !DIExpression()), !dbg !9052
  %call = tail call zeroext i8 @is_gimple_val(%union.tree_node* %expr) #6, !dbg !9055
  %tobool = icmp eq i8 %call, 0, !dbg !9055
  br i1 %tobool, label %if.end, label %if.then, !dbg !9057

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !9058

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq i8 %simple, 0, !dbg !9059
  %cond = select i1 %tobool1, i8 (%union.tree_node*)* @is_gimple_reg_rhs, i8 (%union.tree_node*)* @is_gimple_val, !dbg !9059
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*)* %cond, metadata !9050, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !9051, metadata !DIExpression(DW_OP_deref)), !dbg !9052
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !9060
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9061
  %call2 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %1) #7, !dbg !9062
  %2 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9063
  %into_ssa = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %2, i64 0, i32 10, !dbg !9064
  store i8 %call2, i8* %into_ssa, align 1, !dbg !9065
  %allow_rhs_cond_expr = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %2, i64 0, i32 11, !dbg !9066
  store i8 1, i8* %allow_rhs_cond_expr, align 2, !dbg !9067
  %tobool3 = icmp eq %union.tree_node* %var, null, !dbg !9068
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !9070

if.then4:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9071
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9071
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9044, metadata !DIExpression()), !dbg !9052
  %call5 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %3, %union.tree_node* nonnull %var, %union.tree_node* %expr) #6, !dbg !9071
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !9044, metadata !DIExpression()), !dbg !9052
  store %union.tree_node* %call5, %union.tree_node** %expr.addr, align 8, !dbg !9072
  br label %if.end6, !dbg !9073

if.end6:                                          ; preds = %if.end, %if.then4
  %4 = phi %union.tree_node* [ %expr, %if.end ], [ %call5, %if.then4 ]
  %expr.pn = phi %union.tree_node* [ %expr, %if.end ], [ %call5, %if.then4 ]
  %expr.pn3 = phi %union.tree_node* [ %expr, %if.end ], [ %call5, %if.then4 ]
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.pn3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9074
  %bf.load = load i64, i64* %5, align 8, !dbg !9074
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9076
  %cmp = icmp eq i64 %bf.cast1, 53, !dbg !9076
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !9077

land.lhs.true:                                    ; preds = %if.end6
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9078
  %6 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !9078
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9079
  %cmp10 = icmp eq %union.tree_node* %6, %7, !dbg !9080
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !9081

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9044, metadata !DIExpression()), !dbg !9052
  call void @gimplify_and_add(%union.tree_node* %4, %struct.gimple_seq_d** %stmts) #7, !dbg !9082
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9044, metadata !DIExpression()), !dbg !9052
  store %union.tree_node* null, %union.tree_node** %expr.addr, align 8, !dbg !9084
  br label %if.end17, !dbg !9085

if.else:                                          ; preds = %if.end6, %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9044, metadata !DIExpression(DW_OP_deref)), !dbg !9052
  %call13 = call i32 @gimplify_expr(%union.tree_node** nonnull %expr.addr, %struct.gimple_seq_d** %stmts, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull %cond, i32 1) #7, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %call13, metadata !9049, metadata !DIExpression()), !dbg !9052
  %cmp14 = icmp eq i32 %call13, -2, !dbg !9088
  br i1 %cmp14, label %cond.true, label %if.end17, !dbg !9088

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 7901, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9088
  br label %if.end17, !dbg !9088

if.end17:                                         ; preds = %if.else, %cond.true, %if.then12
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9089
  %call19 = call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %8) #7, !dbg !9091
  %tobool20 = icmp eq %struct.htab* %call19, null, !dbg !9091
  br i1 %tobool20, label %if.end25, label %if.then21, !dbg !9092

if.then21:                                        ; preds = %if.end17
  %9 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9093
  %temps = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 2, !dbg !9095
  br label %for.cond, !dbg !9096

for.cond:                                         ; preds = %for.body, %if.then21
  %t.0.in = phi %union.tree_node** [ %temps, %if.then21 ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !9097
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9048, metadata !DIExpression()), !dbg !9052
  %tobool22 = icmp eq %union.tree_node* %t.0, null, !dbg !9098
  br i1 %tobool22, label %if.end25.loopexit, label %for.body, !dbg !9098

for.body:                                         ; preds = %for.cond
  %call23 = call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %t.0) #6, !dbg !9099
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9101
  br label %for.cond, !dbg !9102, !llvm.loop !9103

if.end25.loopexit:                                ; preds = %for.cond
  br label %if.end25, !dbg !9105

if.end25:                                         ; preds = %if.end25.loopexit, %if.end17
  call void @pop_gimplify_context(%union.gimple_statement_d* null) #7, !dbg !9105
  %retval.0.pre = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !9052
  br label %cleanup, !dbg !9106

cleanup:                                          ; preds = %if.end25, %if.then
  %retval.0 = phi %union.tree_node* [ %retval.0.pre, %if.end25 ], [ %expr, %if.then ], !dbg !9052
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8, !dbg !9107
  ret %union.tree_node* %retval.0, !dbg !9107
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %expr, i8 zeroext %simple_p, %union.tree_node* %var, i8 zeroext %before, i32 %m) local_unnamed_addr #5 !dbg !9108 {
entry:
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9112, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9113, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8 %simple_p, metadata !9114, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !9115, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8 %before, metadata !9116, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %m, metadata !9117, metadata !DIExpression()), !dbg !9124
  %0 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !9125
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9125
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9118, metadata !DIExpression(DW_OP_deref)), !dbg !9124
  %call = call %union.tree_node* @force_gimple_operand(%union.tree_node* %expr, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext %simple_p, %union.tree_node* %var) #7, !dbg !9126
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9113, metadata !DIExpression()), !dbg !9124
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9127
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %1, metadata !9118, metadata !DIExpression()), !dbg !9124
  %call1 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %1) #7, !dbg !9128
  %tobool = icmp eq i8 %call1, 0, !dbg !9128
  br i1 %tobool, label %if.then, label %if.end11, !dbg !9129

if.then:                                          ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9130
  %call2 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %2) #7, !dbg !9131
  %tobool3 = icmp eq i8 %call2, 0, !dbg !9131
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !9132

if.then4:                                         ; preds = %if.then
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !9133
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9133
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !9134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9134
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9136
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %5, metadata !9118, metadata !DIExpression()), !dbg !9124
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %5) #7, !dbg !9134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !9134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9134
  br label %for.cond, !dbg !9137

for.cond:                                         ; preds = %for.body, %if.then4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9119, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !9139
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9141
  br i1 %tobool6, label %for.body, label %for.end, !dbg !9142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9119, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !9143
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call7) #6, !dbg !9144
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9119, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !9145
  br label %for.cond, !dbg !9146, !llvm.loop !9147

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9149
  br label %if.end, !dbg !9150

if.end:                                           ; preds = %if.then, %for.end
  %tobool8 = icmp eq i8 %before, 0, !dbg !9151
  %6 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %6, metadata !9118, metadata !DIExpression()), !dbg !9124
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !9154

if.then9:                                         ; preds = %if.end
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* %gsi, %struct.gimple_seq_d* %6, i32 %m) #6, !dbg !9155
  br label %if.end11, !dbg !9155

if.else:                                          ; preds = %if.end
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* %gsi, %struct.gimple_seq_d* %6, i32 %m) #6, !dbg !9156
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then9, %if.else
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9157
  ret %union.tree_node* %call, !dbg !9158
}

declare dso_local void @gsi_insert_seq_after(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local void @free(i8*) #2

declare dso_local %union.tree_node* @alloc_stmt_list() local_unnamed_addr #2

declare dso_local void @tsi_link_after(%struct.tree_stmt_iterator*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_tmp_var(%union.tree_node* %val, i8 zeroext %is_formal) unnamed_addr #5 !dbg !9159 {
entry:
  %elt = alloca %struct.gimple_temp_hash_elt, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !9163, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i8 %is_formal, metadata !9164, metadata !DIExpression()), !dbg !9171
  %0 = load i32, i32* @optimize, align 4, !dbg !9172
  %tobool = icmp ne i32 %0, 0, !dbg !9172
  %tobool1 = icmp ne i8 %is_formal, 0, !dbg !9173
  %or.cond = and i1 %tobool, %tobool1, !dbg !9174
  br i1 %or.cond, label %lor.lhs.false2, label %if.then, !dbg !9174

lor.lhs.false2:                                   ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9175
  %bf.load = load i64, i64* %1, align 8, !dbg !9175
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !9175
  %tobool3 = icmp eq i64 %bf.cast1, 0, !dbg !9175
  br i1 %tobool3, label %if.else, label %if.then, !dbg !9176

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %call = tail call fastcc %union.tree_node* @create_tmp_from_val(%union.tree_node* %val) #7, !dbg !9177
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9165, metadata !DIExpression()), !dbg !9171
  br label %if.end18, !dbg !9178

if.else:                                          ; preds = %lor.lhs.false2
  %2 = bitcast %struct.gimple_temp_hash_elt* %elt to i8*, !dbg !9179
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !9179
  %val4 = getelementptr inbounds %struct.gimple_temp_hash_elt, %struct.gimple_temp_hash_elt* %elt, i64 0, i32 0, !dbg !9180
  store %union.tree_node* %val, %union.tree_node** %val4, align 8, !dbg !9181
  %3 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9182
  %temp_htab = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 7, !dbg !9184
  %4 = load %struct.htab*, %struct.htab** %temp_htab, align 8, !dbg !9184
  %cmp = icmp eq %struct.htab* %4, null, !dbg !9185
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9186

if.then5:                                         ; preds = %if.else
  %call6 = tail call %struct.htab* @htab_create(i64 1000, i32 (i8*)* nonnull @gimple_tree_hash, i32 (i8*, i8*)* nonnull @gimple_tree_eq, void (i8*)* nonnull @free) #6, !dbg !9187
  %5 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9188
  %temp_htab7 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %5, i64 0, i32 7, !dbg !9189
  store %struct.htab* %call6, %struct.htab** %temp_htab7, align 8, !dbg !9190
  br label %if.end, !dbg !9188

if.end:                                           ; preds = %if.then5, %if.else
  %6 = phi %struct.htab* [ %call6, %if.then5 ], [ %4, %if.else ], !dbg !9191
  %call9 = call i8** @htab_find_slot(%struct.htab* %6, i8* nonnull %2, i32 1) #6, !dbg !9192
  call void @llvm.dbg.value(metadata i8** %call9, metadata !9170, metadata !DIExpression()), !dbg !9193
  %7 = load i8*, i8** %call9, align 8, !dbg !9194
  %cmp10 = icmp eq i8* %7, null, !dbg !9196
  br i1 %cmp10, label %if.then11, label %if.else15, !dbg !9197

if.then11:                                        ; preds = %if.end
  %call12 = call i8* @xmalloc(i64 16) #6, !dbg !9198
  call void @llvm.dbg.value(metadata i8* %call12, metadata !9169, metadata !DIExpression()), !dbg !9193
  %val13 = bitcast i8* %call12 to %union.tree_node**, !dbg !9200
  store %union.tree_node* %val, %union.tree_node** %val13, align 8, !dbg !9201
  %call14 = call fastcc %union.tree_node* @create_tmp_from_val(%union.tree_node* %val) #7, !dbg !9202
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9165, metadata !DIExpression()), !dbg !9171
  %temp = getelementptr inbounds i8, i8* %call12, i64 8, !dbg !9203
  %8 = bitcast i8* %temp to %union.tree_node**, !dbg !9203
  store %union.tree_node* %call14, %union.tree_node** %8, align 8, !dbg !9204
  store i8* %call12, i8** %call9, align 8, !dbg !9205
  br label %if.end17, !dbg !9206

if.else15:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %7, metadata !9169, metadata !DIExpression()), !dbg !9193
  %temp16 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !9207
  %9 = bitcast i8* %temp16 to %union.tree_node**, !dbg !9207
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !9207
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !9165, metadata !DIExpression()), !dbg !9171
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then11
  %ret.0 = phi %union.tree_node* [ %call14, %if.then11 ], [ %10, %if.else15 ], !dbg !9209
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !9165, metadata !DIExpression()), !dbg !9171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !9210
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %ret.1 = phi %union.tree_node* [ %call, %if.then ], [ %ret.0, %if.end17 ], !dbg !9211
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !9165, metadata !DIExpression()), !dbg !9171
  ret %union.tree_node* %ret.1, !dbg !9212
}

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !9213 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !9215, metadata !DIExpression()), !dbg !9217
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) #7, !dbg !9218
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !9216, metadata !DIExpression()), !dbg !9217
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !9219
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9219

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !9220
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9220
  br label %cond.end, !dbg !9219

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !9219
  ret %union.gimple_statement_d* %cond, !dbg !9221
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @create_tmp_from_val(%union.tree_node* %val) unnamed_addr #0 !dbg !9222 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !9224, metadata !DIExpression()), !dbg !9225
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9226
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9226
  %call = tail call i8* @get_name(%union.tree_node* %val) #6, !dbg !9227
  %call1 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %0, i8* %call) #7, !dbg !9228
  ret %union.tree_node* %call1, !dbg !9229
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @gimple_tree_hash(i8* %p) #5 !dbg !9230 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9232, metadata !DIExpression()), !dbg !9234
  %val = bitcast i8* %p to %union.tree_node**, !dbg !9235
  %0 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !9235
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %0, i32 0) #6, !dbg !9236
  ret i32 %call, !dbg !9237
}

; Function Attrs: nounwind uwtable
define internal i32 @gimple_tree_eq(i8* %p1, i8* %p2) #5 !dbg !9238 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !9240, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* %p2, metadata !9241, metadata !DIExpression()), !dbg !9245
  %val = bitcast i8* %p1 to %union.tree_node**, !dbg !9246
  %0 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !9246
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9242, metadata !DIExpression()), !dbg !9245
  %val1 = bitcast i8* %p2 to %union.tree_node**, !dbg !9247
  %1 = load %union.tree_node*, %union.tree_node** %val1, align 8, !dbg !9247
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9243, metadata !DIExpression()), !dbg !9245
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9248
  %bf.load = load i64, i64* %2, align 8, !dbg !9248
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9249
  %bf.load3 = load i64, i64* %3, align 8, !dbg !9249
  %4 = xor i64 %bf.load3, %bf.load, !dbg !9251
  %5 = and i64 %4, 65535, !dbg !9251
  %cmp = icmp eq i64 %5, 0, !dbg !9251
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !9252

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9253
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9253
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9254
  %7 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !9254
  %cmp8 = icmp eq %union.tree_node* %6, %7, !dbg !9255
  br i1 %cmp8, label %if.end, label %cleanup, !dbg !9256

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @operand_equal_p(%union.tree_node* %0, %union.tree_node* %1, i32 0) #6, !dbg !9257
  %tobool = icmp eq i32 %call, 0, !dbg !9257
  br i1 %tobool, label %cleanup, label %if.end10, !dbg !9259

if.end10:                                         ; preds = %if.end
  %call11 = tail call i32 @gimple_tree_hash(i8* %p1) #7, !dbg !9260
  %call12 = tail call i32 @gimple_tree_hash(i8* %p2) #7, !dbg !9260
  %cmp13 = icmp eq i32 %call11, %call12, !dbg !9260
  br i1 %cmp13, label %cleanup, label %cond.true, !dbg !9260

cond.true:                                        ; preds = %if.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9260
  br label %cleanup, !dbg !9260

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %entry, %cond.true, %if.end10
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], [ 1, %if.end10 ], [ 1, %cond.true ], !dbg !9245
  ret i32 %retval.0, !dbg !9261
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @max_int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9262 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9266, metadata !DIExpression()), !dbg !9267
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !9268
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9268
  ret %struct.basic_block_def* %0, !dbg !9269
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9270 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9272, metadata !DIExpression()), !dbg !9273
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #7, !dbg !9274
  %cmp = icmp ne i32 %call, 0, !dbg !9275
  %conv1 = zext i1 %cmp to i8, !dbg !9274
  ret i8 %conv1, !dbg !9276
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_do_not_emit_location_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9277 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9281, metadata !DIExpression()), !dbg !9282
  %call = tail call fastcc i32 @gimple_plf(%union.gimple_statement_d* %g, i32 1) #7, !dbg !9283
  %conv = trunc i32 %call to i8, !dbg !9283
  ret i8 %conv, !dbg !9284
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @should_carry_location_p(%union.gimple_statement_d* %gs) unnamed_addr #5 !dbg !9285 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9287, metadata !DIExpression()), !dbg !9288
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !9289
  %cmp = icmp ne i32 %call, 4, !dbg !9291
  %. = zext i1 %cmp to i8, !dbg !9288
  ret i8 %., !dbg !9292
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9293 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9297, metadata !DIExpression()), !dbg !9298
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !9299
  %0 = load i32, i32* %location, align 8, !dbg !9299
  ret i32 %0, !dbg !9300
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_plf(%union.gimple_statement_d* %stmt, i32 %plf) unnamed_addr #0 !dbg !9301 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9305, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata i32 1, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !9308
  %bf.load = load i32, i32* %0, align 8, !dbg !9308
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !9308
  %and = and i32 %bf.lshr, 1, !dbg !9309
  ret i32 %and, !dbg !9310
}

declare dso_local %union.tree_node* @copy_tree_r(%union.tree_node**, i32*, i8*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %type) unnamed_addr #5 !dbg !9311 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx, metadata !9313, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9314, metadata !DIExpression()), !dbg !9318
  %cmp = icmp eq %union.tree_node* %type, null, !dbg !9319
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9321
  %cmp1 = icmp eq %union.tree_node* %0, %type, !dbg !9322
  %or.cond = or i1 %cmp, %cmp1, !dbg !9323
  br i1 %or.cond, label %return, label %if.end, !dbg !9323

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9324
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !9324
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9314, metadata !DIExpression()), !dbg !9318
  %privatized_types = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx, i64 0, i32 2, !dbg !9325
  %3 = load %struct.pointer_set_t*, %struct.pointer_set_t** %privatized_types, align 8, !dbg !9325
  %4 = bitcast %union.tree_node* %2 to i8*, !dbg !9327
  %call = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %3, i8* %4) #6, !dbg !9328
  %tobool = icmp eq i32 %call, 0, !dbg !9328
  br i1 %tobool, label %if.end4, label %return, !dbg !9329

if.end4:                                          ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9330
  %bf.load = load i64, i64* %5, align 8, !dbg !9330
  %6 = trunc i64 %bf.load to i16, !dbg !9330
  switch i16 %6, label %sw.epilog [
    i16 8, label %sw.bb
    i16 6, label %sw.bb
    i16 7, label %sw.bb
    i16 9, label %sw.bb
    i16 11, label %sw.bb
    i16 15, label %sw.bb7
    i16 16, label %sw.bb10
    i16 17, label %sw.bb10
    i16 18, label %sw.bb10
    i16 10, label %sw.bb24
    i16 12, label %sw.bb24
  ], !dbg !9331

sw.bb:                                            ; preds = %if.end4, %if.end4, %if.end4, %if.end4, %if.end4
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9332
  %7 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !9332
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !9332
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %8) #7, !dbg !9333
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9334
  %9 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !9334
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !9334
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %10) #7, !dbg !9335
  br label %sw.epilog, !dbg !9336

sw.bb7:                                           ; preds = %if.end4
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9337
  %11 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !9337
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %11) #7, !dbg !9338
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9339
  %12 = bitcast i32* %values to %union.tree_node**, !dbg !9339
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !9339
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %13) #7, !dbg !9340
  br label %sw.epilog, !dbg !9341

sw.bb10:                                          ; preds = %if.end4, %if.end4, %if.end4
  %values12 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9342
  %14 = bitcast i32* %values12 to %union.tree_node**, !dbg !9342
  br label %for.cond, !dbg !9344

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %field.0.in = phi %union.tree_node** [ %14, %sw.bb10 ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !9345
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !9315, metadata !DIExpression()), !dbg !9346
  %tobool13 = icmp eq %union.tree_node* %field.0, null, !dbg !9347
  br i1 %tobool13, label %sw.epilog.loopexit, label %for.body, !dbg !9347

for.body:                                         ; preds = %for.cond
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9348
  %bf.load15 = load i64, i64* %15, align 8, !dbg !9348
  %bf.cast171 = and i64 %bf.load15, 65535, !dbg !9351
  %cmp18 = icmp eq i64 %bf.cast171, 31, !dbg !9351
  br i1 %cmp18, label %if.then19, label %for.inc, !dbg !9352

if.then19:                                        ; preds = %for.body
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9353
  %16 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !9353
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !9353
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %17) #7, !dbg !9355
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9356
  %18 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !9356
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %18) #7, !dbg !9357
  br label %for.inc, !dbg !9358

for.inc:                                          ; preds = %for.body, %if.then19
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9359
  br label %for.cond, !dbg !9360, !llvm.loop !9361

sw.bb24:                                          ; preds = %if.end4, %if.end4
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9363
  %19 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !9363
  tail call fastcc void @omp_firstprivatize_type_sizes(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %19) #7, !dbg !9364
  br label %sw.epilog, !dbg !9365

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !9366

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end4, %sw.bb24, %sw.bb7, %sw.bb
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9366
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !9366
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %21) #7, !dbg !9367
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9368
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !9368
  tail call void @omp_firstprivatize_variable(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %23) #7, !dbg !9369
  %24 = load void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 10), align 8, !dbg !9370
  tail call void %24(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %2) #6, !dbg !9371
  br label %return, !dbg !9372

return:                                           ; preds = %if.end, %entry, %sw.epilog
  ret void, !dbg !9372
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !9373 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9377, metadata !DIExpression()), !dbg !9378
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !9379
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !9379
  ret %struct.VEC_tree_heap* %0, !dbg !9379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !9380 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !9385, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !9386, metadata !DIExpression()), !dbg !9387
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !9388
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !9388
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !9388
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9388

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !9388
  br label %cond.end, !dbg !9388

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9388
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !9388
  ret %union.tree_node** %call1, !dbg !9388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9389 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9393, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9394, metadata !DIExpression()), !dbg !9395
  br label %land.end, !dbg !9396

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9396
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9396
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9396
  ret %union.tree_node* %0, !dbg !9396
}

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_element_size(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @component_ref_field_offset(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !9397 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9401, metadata !DIExpression()), !dbg !9403
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9404
  %0 = load i32, i32* %num1, align 8, !dbg !9404
  %dec = add i32 %0, -1, !dbg !9404
  store i32 %dec, i32* %num1, align 8, !dbg !9404
  %idxprom = zext i32 %dec to i64, !dbg !9404
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9404
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9404
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9402, metadata !DIExpression()), !dbg !9403
  ret %union.tree_node* %1, !dbg !9404
}

; Function Attrs: nounwind uwtable
define internal fastcc void @canonicalize_component_ref(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !9405 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !9409, metadata !DIExpression()), !dbg !9415
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !9416
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9410, metadata !DIExpression()), !dbg !9415
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9417
  %bf.load = load i64, i64* %1, align 8, !dbg !9417
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9417
  %cmp = icmp eq i64 %bf.cast1, 41, !dbg !9417
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9417

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1654, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9417
  br label %cond.end, !dbg !9417

cond.end:                                         ; preds = %entry, %cond.true
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9418
  %2 = bitcast %union.tree_node** %type1 to i64**, !dbg !9418
  %3 = load i64*, i64** %2, align 8, !dbg !9418
  %bf.load3 = load i64, i64* %3, align 8, !dbg !9418
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !9418
  %cmp6 = icmp eq i64 %bf.cast52, 6, !dbg !9418
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !9418
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !9418

lor.lhs.false:                                    ; preds = %cond.end
  %cmp13 = icmp eq i64 %bf.cast52, 7, !dbg !9418
  br i1 %cmp13, label %if.then, label %lor.lhs.false14, !dbg !9418

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i64 %bf.cast52, 8, !dbg !9418
  br i1 %cmp21, label %if.then, label %if.else, !dbg !9420

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false, %cond.end
  %call = tail call %union.tree_node* @get_unwidened(%union.tree_node* %0, %union.tree_node* null) #6, !dbg !9421
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9421
  %.pre = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9422
  br label %if.end, !dbg !9423

if.else:                                          ; preds = %lor.lhs.false14
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9424
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9424
  %5 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !9424
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !9424
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !9424
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = phi %union.tree_node* [ %.pre, %if.then ], [ %4, %if.else ], !dbg !9422
  %type.0.in = phi %union.tree_node** [ %type23, %if.then ], [ %type25, %if.else ]
  %type.0 = load %union.tree_node*, %union.tree_node** %type.0.in, align 8, !dbg !9425
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !9411, metadata !DIExpression()), !dbg !9415
  %cmp28 = icmp eq %union.tree_node* %7, %type.0, !dbg !9426
  br i1 %cmp28, label %if.end133, label %if.then29, !dbg !9427

if.then29:                                        ; preds = %if.end
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9428
  %bf.load31 = load i64, i64* %8, align 8, !dbg !9428
  %bf.lshr = lshr i64 %bf.load31, 20, !dbg !9428
  %9 = trunc i64 %bf.lshr to i32, !dbg !9428
  %bf.cast33 = and i32 %9, 1, !dbg !9428
  %10 = lshr i64 %bf.load31, 18, !dbg !9428
  %11 = trunc i64 %10 to i32, !dbg !9428
  %mul39 = and i32 %11, 2, !dbg !9428
  %or = or i32 %bf.cast33, %mul39, !dbg !9428
  %type40 = bitcast %union.tree_node* %type.0 to %struct.tree_type*, !dbg !9428
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i64 0, i32 6, !dbg !9428
  %bf.load41 = load i32, i32* %restrict_flag, align 4, !dbg !9428
  %12 = lshr i32 %bf.load41, 11, !dbg !9428
  %mul44 = and i32 %12, 4, !dbg !9428
  %or45 = or i32 %or, %mul44, !dbg !9428
  %13 = lshr i64 %bf.load31, 48, !dbg !9428
  %14 = trunc i64 %13 to i32, !dbg !9428
  %shl = and i32 %14, 65280, !dbg !9428
  %or50 = or i32 %or45, %shl, !dbg !9428
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9429
  %15 = bitcast %union.tree_node** %operands52 to %struct.tree_common**, !dbg !9429
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !9429
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !9429
  %17 = bitcast %union.tree_node** %type55 to i64**, !dbg !9429
  %18 = load i64*, i64** %17, align 8, !dbg !9429
  %bf.load57 = load i64, i64* %18, align 8, !dbg !9429
  %bf.lshr58 = lshr i64 %bf.load57, 20, !dbg !9429
  %19 = trunc i64 %bf.lshr58 to i32, !dbg !9429
  %bf.cast60 = and i32 %19, 1, !dbg !9429
  %20 = lshr i64 %bf.load57, 18, !dbg !9429
  %21 = trunc i64 %20 to i32, !dbg !9429
  %mul72 = and i32 %21, 2, !dbg !9429
  %or73 = or i32 %bf.cast60, %mul72, !dbg !9429
  %22 = bitcast i64* %18 to %struct.tree_type*, !dbg !9429
  %restrict_flag80 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 6, !dbg !9429
  %bf.load81 = load i32, i32* %restrict_flag80, align 4, !dbg !9429
  %23 = lshr i32 %bf.load81, 11, !dbg !9429
  %mul84 = and i32 %23, 4, !dbg !9429
  %or85 = or i32 %or73, %mul84, !dbg !9429
  %24 = lshr i64 %bf.load57, 48, !dbg !9429
  %25 = trunc i64 %24 to i32, !dbg !9429
  %shl96 = and i32 %25, 65280, !dbg !9429
  %or97 = or i32 %or85, %shl96, !dbg !9429
  %or98 = or i32 %or50, %or97, !dbg !9430
  call void @llvm.dbg.value(metadata i32 %or98, metadata !9412, metadata !DIExpression()), !dbg !9431
  %cmp126 = icmp eq i32 %or50, %or98, !dbg !9432
  br i1 %cmp126, label %if.end130, label %if.then127, !dbg !9434

if.then127:                                       ; preds = %if.then29
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9435
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !9435
  %call129 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %27, i32 %or98) #6, !dbg !9436
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !9411, metadata !DIExpression()), !dbg !9415
  br label %if.end130, !dbg !9437

if.end130:                                        ; preds = %if.then29, %if.then127
  %type.1 = phi %union.tree_node* [ %call129, %if.then127 ], [ %type.0, %if.then29 ], !dbg !9415
  call void @llvm.dbg.value(metadata %union.tree_node* %type.1, metadata !9411, metadata !DIExpression()), !dbg !9415
  store %union.tree_node* %type.1, %union.tree_node** %type1, align 8, !dbg !9438
  br label %if.end133, !dbg !9439

if.end133:                                        ; preds = %if.end, %if.end130
  ret void, !dbg !9440
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !9441 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !9445, metadata !DIExpression()), !dbg !9446
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !9447
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !9447
  br i1 %tobool, label %if.end, label %if.then, !dbg !9449

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !9449
  tail call void @free(i8* nonnull %1) #6, !dbg !9447
  br label %if.end, !dbg !9447

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !9449
  ret void, !dbg !9449
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9450 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !9454, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 1, metadata !9455, metadata !DIExpression()), !dbg !9457
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !9458
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !9458
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9458

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !9458
  br label %cond.end, !dbg !9458

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9458
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !9458
  %tobool1 = icmp eq i32 %call, 0, !dbg !9458
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9456, metadata !DIExpression()), !dbg !9457
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9458

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !9459
  %2 = load i8*, i8** %1, align 8, !dbg !9459
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !9459
  store i8* %call3, i8** %1, align 8, !dbg !9459
  br label %if.end, !dbg !9459

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9458
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !9461 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9465, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !9466, metadata !DIExpression()), !dbg !9468
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9469
  %0 = load i32, i32* %num1, align 8, !dbg !9469
  %inc = add i32 %0, 1, !dbg !9469
  store i32 %inc, i32* %num1, align 8, !dbg !9469
  %idxprom = zext i32 %0 to i64, !dbg !9469
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9469
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !9467, metadata !DIExpression()), !dbg !9468
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !9469
  ret %union.tree_node** %arrayidx, !dbg !9469
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9470 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32 1, metadata !9475, metadata !DIExpression()), !dbg !9476
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !9477
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9477

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !9477
  %0 = load i32, i32* %alloc, align 4, !dbg !9477
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9477
  %1 = load i32, i32* %num, align 8, !dbg !9477
  %cmp1 = icmp ne i32 %0, %1, !dbg !9477
  %phitmp = zext i1 %cmp1 to i32, !dbg !9477
  br label %cond.end, !dbg !9477

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9477

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9477
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @generic_expr_could_trap_p(%union.tree_node* %expr) unnamed_addr #5 !dbg !9478 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9480, metadata !DIExpression()), !dbg !9483
  %tobool = icmp eq %union.tree_node* %expr, null, !dbg !9484
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !9486

lor.lhs.false:                                    ; preds = %entry
  %call = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %expr) #6, !dbg !9487
  %tobool1 = icmp eq i8 %call, 0, !dbg !9487
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !9488

if.end:                                           ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9489
  %bf.load = load i64, i64* %0, align 8, !dbg !9489
  %bf.cast = and i64 %bf.load, 65535, !dbg !9489
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !9489
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9489
  %cmp = icmp ugt i32 %1, 3, !dbg !9489
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !9489

land.lhs.true:                                    ; preds = %if.end
  %cmp9 = icmp ult i32 %1, 11, !dbg !9489
  br i1 %cmp9, label %lor.lhs.false11, label %cleanup, !dbg !9491

lor.lhs.false11:                                  ; preds = %land.lhs.true
  %call12 = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* nonnull %expr) #6, !dbg !9492
  %tobool14 = icmp eq i8 %call12, 0, !dbg !9492
  br i1 %tobool14, label %if.end16, label %cleanup, !dbg !9493

if.end16:                                         ; preds = %lor.lhs.false11
  %call17 = tail call fastcc i32 @tree_operand_length(%union.tree_node* nonnull %expr) #7, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %call17, metadata !9482, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32 0, metadata !9481, metadata !DIExpression()), !dbg !9483
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9495
  %wide.trip.count = zext i32 %call17 to i64, !dbg !9499
  br label %for.cond, !dbg !9500

for.cond:                                         ; preds = %for.inc, %if.end16
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end16 ], !dbg !9501
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9481, metadata !DIExpression()), !dbg !9483
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !9499
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !9502

for.body:                                         ; preds = %for.cond
  %arrayidx21 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !9495
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx21, align 8, !dbg !9495
  %call22 = tail call fastcc zeroext i8 @generic_expr_could_trap_p(%union.tree_node* %2) #7, !dbg !9503
  %tobool23 = icmp eq i8 %call22, 0, !dbg !9503
  br i1 %tobool23, label %for.inc, label %cleanup.loopexit, !dbg !9504

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9505
  br label %for.cond, !dbg !9506, !llvm.loop !9507

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !9509

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false11, %lor.lhs.false, %entry, %if.end, %land.lhs.true
  %retval.0 = phi i8 [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %lor.lhs.false11 ], [ 1, %land.lhs.true ], [ 1, %if.end ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !9483
  ret i8 %retval.0, !dbg !9509
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_pure_cond_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !9510 {
entry:
  %cond = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !9512, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !9513, metadata !DIExpression()), !dbg !9519
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !9520
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9514, metadata !DIExpression()), !dbg !9519
  %1 = bitcast %union.tree_node** %cond to i8*, !dbg !9521
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9521
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9522
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9522
  %call = tail call %union.tree_node* @gimple_boolify(%union.tree_node* %2) #7, !dbg !9523
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9515, metadata !DIExpression()), !dbg !9519
  store %union.tree_node* %call, %union.tree_node** %cond, align 8, !dbg !9524
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9525
  %bf.load = load i64, i64* %.cast, align 8, !dbg !9525
  %3 = trunc i64 %bf.load to i16, !dbg !9525
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9526
  switch i16 %3, label %if.end10 [
    i16 91, label %if.then
    i16 92, label %if.then5
  ], !dbg !9526

if.then:                                          ; preds = %entry
  %bf.clear3 = and i64 %bf.load, -65536, !dbg !9527
  %bf.set = or i64 %bf.clear3, 93, !dbg !9527
  store i64 %bf.set, i64* %4, align 8, !dbg !9527
  br label %if.end10, !dbg !9527

if.then5:                                         ; preds = %entry
  %bf.clear8 = and i64 %bf.load, -65536, !dbg !9529
  %bf.set9 = or i64 %bf.clear8, 94, !dbg !9529
  store i64 %bf.set9, i64* %4, align 8, !dbg !9529
  br label %if.end10, !dbg !9529

if.end10:                                         ; preds = %if.then5, %entry, %if.then
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !9515, metadata !DIExpression(DW_OP_deref)), !dbg !9519
  %call11 = call i32 @gimplify_expr(%union.tree_node** nonnull %cond, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_condexpr, i32 1) #7, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %call11, metadata !9516, metadata !DIExpression()), !dbg !9519
  %5 = bitcast %union.tree_node** %cond to i64*, !dbg !9532
  %6 = load i64, i64* %5, align 8, !dbg !9532
  %7 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !9533
  %8 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !9533
  %operands13 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i64 0, i32 3, !dbg !9533
  %9 = bitcast [1 x %union.tree_node*]* %operands13 to i64*, !dbg !9534
  store i64 %6, i64* %9, align 8, !dbg !9534
  %arrayidx17 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9535
  %call18 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx17, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !9536
  call void @llvm.dbg.value(metadata i32 %call18, metadata !9517, metadata !DIExpression()), !dbg !9519
  %cmp19 = icmp slt i32 %call11, %call18, !dbg !9537
  %call11.call18 = select i1 %cmp19, i32 %call11, i32 %call18, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %call11.call18, metadata !9516, metadata !DIExpression()), !dbg !9519
  %arrayidx23 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !9538
  %call24 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx23, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !9539
  call void @llvm.dbg.value(metadata i32 %call24, metadata !9517, metadata !DIExpression()), !dbg !9519
  %cmp25 = icmp slt i32 %call11.call18, %call24, !dbg !9540
  %cond29 = select i1 %cmp25, i32 %call11.call18, i32 %call24, !dbg !9540
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9541
  ret i32 %cond29, !dbg !9542
}

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @shortcut_cond_expr(%union.tree_node* %expr) unnamed_addr #5 !dbg !9543 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %true_label = alloca %union.tree_node*, align 8
  %false_label = alloca %union.tree_node*, align 8
  %end_label = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9545, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9574
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9574
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9546, metadata !DIExpression()), !dbg !9573
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9575
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !9575
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9547, metadata !DIExpression()), !dbg !9573
  %2 = bitcast %union.tree_node* %expr to %struct.tree_exp*, !dbg !9576
  %arrayidx6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9576
  %3 = bitcast i40* %arrayidx6 to %union.tree_node**, !dbg !9576
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !9576
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9548, metadata !DIExpression()), !dbg !9573
  %5 = bitcast %union.tree_node** %true_label to i8*, !dbg !9577
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9577
  %6 = bitcast %union.tree_node** %false_label to i8*, !dbg !9577
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9577
  %7 = bitcast %union.tree_node** %end_label to i8*, !dbg !9577
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !9577
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !9578
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9579
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !9579

land.rhs:                                         ; preds = %entry
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9580
  %bf.load = load i64, i64* %9, align 8, !dbg !9580
  %bf.cast17 = and i64 %bf.load, 65536, !dbg !9579
  %tobool7 = icmp ne i64 %bf.cast17, 0, !dbg !9579
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %10 = phi i1 [ false, %entry ], [ %tobool7, %land.rhs ], !dbg !9573
  %conv = zext i1 %10 to i8, !dbg !9578
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9558, metadata !DIExpression()), !dbg !9573
  %tobool8 = icmp eq %union.tree_node* %4, null, !dbg !9581
  br i1 %tobool8, label %land.end16, label %land.rhs9, !dbg !9582

land.rhs9:                                        ; preds = %land.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9583
  %bf.load11 = load i64, i64* %11, align 8, !dbg !9583
  %bf.cast1416 = and i64 %bf.load11, 65536, !dbg !9582
  %tobool15 = icmp ne i64 %bf.cast1416, 0, !dbg !9582
  br label %land.end16

land.end16:                                       ; preds = %land.end, %land.rhs9
  %12 = phi i1 [ false, %land.end ], [ %tobool15, %land.rhs9 ], !dbg !9573
  %conv18 = zext i1 %12 to i8, !dbg !9581
  call void @llvm.dbg.value(metadata i8 %conv18, metadata !9559, metadata !DIExpression()), !dbg !9573
  br i1 %12, label %if.end145, label %while.cond.preheader, !dbg !9584

while.cond.preheader:                             ; preds = %land.end16
  br label %while.cond, !dbg !9585

while.cond:                                       ; preds = %while.cond.preheader, %land.end136
  %13 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %14 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %15 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %16 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %17 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %18 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %19 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %20 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %21 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %22 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %23 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %24 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %25 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %26 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %27 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %28 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %29 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %30 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %31 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %32 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %33 = phi %union.tree_node* [ %call142, %land.end136 ], [ %expr, %while.cond.preheader ]
  %34 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %35 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %36 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %37 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %38 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %39 = phi %struct.tree_exp* [ %64, %land.end136 ], [ %2, %while.cond.preheader ]
  %40 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %41 = phi i64* [ %63, %land.end136 ], [ %8, %while.cond.preheader ]
  %then_se.0 = phi i8 [ %conv138, %land.end136 ], [ %conv, %while.cond.preheader ], !dbg !9573
  %then_.0 = phi %union.tree_node* [ %call, %land.end136 ], [ %1, %while.cond.preheader ], !dbg !9573
  %pred.0 = phi %union.tree_node* [ %60, %land.end136 ], [ %0, %while.cond.preheader ], !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.0, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.0, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.0, metadata !9558, metadata !DIExpression()), !dbg !9573
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9586
  %bf.load21 = load i64, i64* %42, align 8, !dbg !9586
  %bf.cast233 = and i64 %bf.load21, 65535, !dbg !9587
  %cmp = icmp eq i64 %bf.cast233, 91, !dbg !9587
  br i1 %cmp, label %while.body, label %if.end145.loopexit, !dbg !9585

while.body:                                       ; preds = %while.cond
  %bf.load26 = load i64, i64* %41, align 8, !dbg !9588
  %bf.cast28 = and i64 %bf.load26, 65535, !dbg !9588
  %arrayidx29 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast28, !dbg !9588
  %43 = load i32, i32* %arrayidx29, align 4, !dbg !9588
  %cmp30 = icmp ugt i32 %43, 3, !dbg !9588
  br i1 %cmp30, label %land.lhs.true, label %cond.end, !dbg !9588

land.lhs.true:                                    ; preds = %while.body
  %bf.load33 = load i64, i64* %40, align 8, !dbg !9588
  %bf.cast35 = and i64 %bf.load33, 65535, !dbg !9588
  %arrayidx37 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast35, !dbg !9588
  %44 = load i32, i32* %arrayidx37, align 4, !dbg !9588
  %cmp38 = icmp ult i32 %44, 11, !dbg !9588
  br i1 %cmp38, label %cond.true, label %cond.end, !dbg !9588

cond.true:                                        ; preds = %land.lhs.true
  %locus41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %39, i64 0, i32 1, !dbg !9588
  %45 = load i32, i32* %locus41, align 8, !dbg !9588
  br label %cond.end, !dbg !9588

cond.end:                                         ; preds = %while.body, %land.lhs.true, %cond.true
  %cond = phi i32 [ %45, %cond.true ], [ 0, %land.lhs.true ], [ 0, %while.body ], !dbg !9588
  %cmp42 = icmp eq i32 %cond, 0, !dbg !9588
  br i1 %cmp42, label %cond.false68, label %cond.true44, !dbg !9588

cond.true44:                                      ; preds = %cond.end
  %bf.load46 = load i64, i64* %38, align 8, !dbg !9589
  %bf.cast48 = and i64 %bf.load46, 65535, !dbg !9589
  %arrayidx50 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast48, !dbg !9589
  %46 = load i32, i32* %arrayidx50, align 4, !dbg !9589
  %cmp51 = icmp ugt i32 %46, 3, !dbg !9589
  br i1 %cmp51, label %land.lhs.true53, label %cond.end69, !dbg !9589

land.lhs.true53:                                  ; preds = %cond.true44
  %bf.load55 = load i64, i64* %37, align 8, !dbg !9589
  %bf.cast57 = and i64 %bf.load55, 65535, !dbg !9589
  %arrayidx59 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast57, !dbg !9589
  %47 = load i32, i32* %arrayidx59, align 4, !dbg !9589
  %cmp60 = icmp ult i32 %47, 11, !dbg !9589
  br i1 %cmp60, label %cond.true62, label %cond.end69, !dbg !9589

cond.true62:                                      ; preds = %land.lhs.true53
  %locus64 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %36, i64 0, i32 1, !dbg !9589
  %48 = load i32, i32* %locus64, align 8, !dbg !9589
  br label %cond.end69, !dbg !9589

cond.false68:                                     ; preds = %cond.end
  %49 = load i32, i32* @input_location, align 4, !dbg !9590
  br label %cond.end69, !dbg !9588

cond.end69:                                       ; preds = %cond.true62, %land.lhs.true53, %cond.true44, %cond.false68
  %cond70 = phi i32 [ %49, %cond.false68 ], [ %48, %cond.true62 ], [ 0, %land.lhs.true53 ], [ 0, %cond.true44 ], !dbg !9588
  call void @llvm.dbg.value(metadata i32 %cond70, metadata !9560, metadata !DIExpression()), !dbg !9591
  %operands72 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9592
  %arrayidx73 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands72, i64 1, !dbg !9592
  %50 = bitcast %union.tree_node** %arrayidx73 to i64*, !dbg !9592
  %51 = load i64, i64* %50, align 8, !dbg !9592
  %operands75 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %35, i64 0, i32 3, !dbg !9593
  %52 = bitcast [1 x %union.tree_node*]* %operands75 to i64*, !dbg !9594
  store i64 %51, i64* %52, align 8, !dbg !9594
  %bf.load78 = load i64, i64* %42, align 8, !dbg !9595
  %bf.cast80 = and i64 %bf.load78, 65535, !dbg !9595
  %arrayidx82 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast80, !dbg !9595
  %53 = load i32, i32* %arrayidx82, align 4, !dbg !9595
  %cmp83 = icmp ugt i32 %53, 3, !dbg !9595
  br i1 %cmp83, label %land.lhs.true85, label %cond.end98, !dbg !9595

land.lhs.true85:                                  ; preds = %cond.end69
  %cmp92 = icmp ult i32 %53, 11, !dbg !9595
  br i1 %cmp92, label %cond.true94, label %cond.end98, !dbg !9595

cond.true94:                                      ; preds = %land.lhs.true85
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9595
  %55 = load i32, i32* %54, align 8, !dbg !9595
  br label %cond.end98, !dbg !9595

cond.end98:                                       ; preds = %cond.end69, %land.lhs.true85, %cond.true94
  %cond99 = phi i32 [ %55, %cond.true94 ], [ 0, %land.lhs.true85 ], [ 0, %cond.end69 ], !dbg !9595
  %cmp100 = icmp eq i32 %cond99, 0, !dbg !9595
  br i1 %cmp100, label %if.end, label %if.then102, !dbg !9597

if.then102:                                       ; preds = %cond.end98
  br i1 %cmp83, label %land.lhs.true111, label %cond.end124, !dbg !9598

land.lhs.true111:                                 ; preds = %if.then102
  %cmp118 = icmp ult i32 %53, 11, !dbg !9598
  br i1 %cmp118, label %cond.true120, label %cond.end124, !dbg !9598

cond.true120:                                     ; preds = %land.lhs.true111
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9598
  %57 = load i32, i32* %56, align 8, !dbg !9598
  br label %cond.end124, !dbg !9598

cond.end124:                                      ; preds = %if.then102, %land.lhs.true111, %cond.true120
  %cond125 = phi i32 [ %57, %cond.true120 ], [ 0, %land.lhs.true111 ], [ 0, %if.then102 ], !dbg !9598
  %locus127 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %34, i64 0, i32 1, !dbg !9598
  store i32 %cond125, i32* %locus127, align 8, !dbg !9598
  br label %if.end, !dbg !9598

if.end:                                           ; preds = %cond.end98, %cond.end124
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !9545, metadata !DIExpression()), !dbg !9573
  %call = tail call fastcc %union.tree_node* @shortcut_cond_expr(%union.tree_node* %33) #7, !dbg !9599
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9547, metadata !DIExpression()), !dbg !9573
  %tobool128 = icmp eq %union.tree_node* %call, null, !dbg !9600
  br i1 %tobool128, label %land.end136, label %land.rhs129, !dbg !9601

land.rhs129:                                      ; preds = %if.end
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9602
  %bf.load131 = load i64, i64* %58, align 8, !dbg !9602
  %bf.cast13415 = and i64 %bf.load131, 65536, !dbg !9601
  %tobool135 = icmp ne i64 %bf.cast13415, 0, !dbg !9601
  br label %land.end136

land.end136:                                      ; preds = %if.end, %land.rhs129
  %59 = phi i1 [ false, %if.end ], [ %tobool135, %land.rhs129 ], !dbg !9591
  %conv138 = zext i1 %59 to i8, !dbg !9600
  call void @llvm.dbg.value(metadata i8 %conv138, metadata !9558, metadata !DIExpression()), !dbg !9573
  %60 = load %union.tree_node*, %union.tree_node** %operands72, align 8, !dbg !9603
  call void @llvm.dbg.value(metadata %union.tree_node* %60, metadata !9546, metadata !DIExpression()), !dbg !9573
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9604
  %call142 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %61, %union.tree_node* %60, %union.tree_node* %call, %union.tree_node* null) #6, !dbg !9604
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !9545, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* %call142, %union.tree_node** %expr.addr, align 8, !dbg !9605
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %call142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9606
  store i32 %cond70, i32* %62, align 8, !dbg !9606
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9585
  %64 = bitcast %union.tree_node* %call142 to %struct.tree_exp*, !dbg !9585
  br label %while.cond, !dbg !9585, !llvm.loop !9607

if.end145.loopexit:                               ; preds = %while.cond
  %.lcssa86 = phi %struct.tree_exp* [ %13, %while.cond ]
  %.lcssa85 = phi %struct.tree_exp* [ %14, %while.cond ]
  %.lcssa84 = phi %struct.tree_exp* [ %15, %while.cond ]
  %.lcssa83 = phi i64* [ %16, %while.cond ]
  %.lcssa82 = phi i64* [ %17, %while.cond ]
  %.lcssa81 = phi %struct.tree_exp* [ %18, %while.cond ]
  %.lcssa80 = phi i64* [ %19, %while.cond ]
  %.lcssa79 = phi i64* [ %20, %while.cond ]
  %.lcssa78 = phi %struct.tree_exp* [ %21, %while.cond ]
  %.lcssa77 = phi i64* [ %22, %while.cond ]
  %.lcssa76 = phi i64* [ %23, %while.cond ]
  %.lcssa75 = phi %struct.tree_exp* [ %24, %while.cond ]
  %.lcssa74 = phi i64* [ %25, %while.cond ]
  %.lcssa73 = phi i64* [ %26, %while.cond ]
  %.lcssa72 = phi %struct.tree_exp* [ %27, %while.cond ]
  %.lcssa71 = phi i64* [ %28, %while.cond ]
  %.lcssa70 = phi i64* [ %29, %while.cond ]
  %.lcssa69 = phi %struct.tree_exp* [ %30, %while.cond ]
  %.lcssa68 = phi i64* [ %31, %while.cond ]
  %.lcssa67 = phi i64* [ %32, %while.cond ]
  %.lcssa66 = phi %union.tree_node* [ %33, %while.cond ]
  %then_se.0.lcssa = phi i8 [ %then_se.0, %while.cond ], !dbg !9573
  %then_.0.lcssa = phi %union.tree_node* [ %then_.0, %while.cond ], !dbg !9573
  %pred.0.lcssa = phi %union.tree_node* [ %pred.0, %while.cond ], !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.0.lcssa, metadata !9558, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.0.lcssa, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.0.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.0.lcssa, metadata !9558, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.0.lcssa, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.0.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.0.lcssa, metadata !9558, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.0.lcssa, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.0.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  br label %if.end145, !dbg !9609

if.end145:                                        ; preds = %if.end145.loopexit, %land.end16
  %65 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa86, %if.end145.loopexit ]
  %66 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa85, %if.end145.loopexit ]
  %67 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa84, %if.end145.loopexit ]
  %68 = phi i64* [ %8, %land.end16 ], [ %.lcssa83, %if.end145.loopexit ]
  %69 = phi i64* [ %8, %land.end16 ], [ %.lcssa82, %if.end145.loopexit ]
  %70 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa81, %if.end145.loopexit ]
  %71 = phi i64* [ %8, %land.end16 ], [ %.lcssa80, %if.end145.loopexit ]
  %72 = phi i64* [ %8, %land.end16 ], [ %.lcssa79, %if.end145.loopexit ]
  %73 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa78, %if.end145.loopexit ]
  %74 = phi i64* [ %8, %land.end16 ], [ %.lcssa77, %if.end145.loopexit ]
  %75 = phi i64* [ %8, %land.end16 ], [ %.lcssa76, %if.end145.loopexit ]
  %76 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa75, %if.end145.loopexit ]
  %77 = phi i64* [ %8, %land.end16 ], [ %.lcssa74, %if.end145.loopexit ]
  %78 = phi i64* [ %8, %land.end16 ], [ %.lcssa73, %if.end145.loopexit ]
  %79 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa72, %if.end145.loopexit ]
  %80 = phi i64* [ %8, %land.end16 ], [ %.lcssa71, %if.end145.loopexit ]
  %81 = phi i64* [ %8, %land.end16 ], [ %.lcssa70, %if.end145.loopexit ]
  %82 = phi %struct.tree_exp* [ %2, %land.end16 ], [ %.lcssa69, %if.end145.loopexit ]
  %83 = phi i64* [ %8, %land.end16 ], [ %.lcssa68, %if.end145.loopexit ]
  %84 = phi i64* [ %8, %land.end16 ], [ %.lcssa67, %if.end145.loopexit ]
  %85 = phi %union.tree_node* [ %expr, %land.end16 ], [ %.lcssa66, %if.end145.loopexit ]
  %then_se.1 = phi i8 [ %conv, %land.end16 ], [ %then_se.0.lcssa, %if.end145.loopexit ], !dbg !9610
  %then_.1 = phi %union.tree_node* [ %1, %land.end16 ], [ %then_.0.lcssa, %if.end145.loopexit ], !dbg !9611
  %pred.1 = phi %union.tree_node* [ %0, %land.end16 ], [ %pred.0.lcssa, %if.end145.loopexit ], !dbg !9612
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.1, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.1, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.1, metadata !9558, metadata !DIExpression()), !dbg !9573
  %tobool146 = icmp eq i8 %then_se.1, 0, !dbg !9609
  br i1 %tobool146, label %while.cond148.preheader, label %if.end145.if.end286_crit_edge, !dbg !9613

if.end145.if.end286_crit_edge:                    ; preds = %if.end145
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9614
  %bf.load288.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !9616
  %.pre = and i64 %bf.load288.pre, 65535, !dbg !9617
  br label %if.end286, !dbg !9613

while.cond148.preheader:                          ; preds = %if.end145
  br label %while.cond148, !dbg !9618

while.cond148:                                    ; preds = %while.cond148.preheader, %land.end276
  %86 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %65, %while.cond148.preheader ]
  %87 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %66, %while.cond148.preheader ]
  %88 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %67, %while.cond148.preheader ]
  %89 = phi i64* [ %128, %land.end276 ], [ %68, %while.cond148.preheader ]
  %90 = phi i64* [ %128, %land.end276 ], [ %69, %while.cond148.preheader ]
  %91 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %70, %while.cond148.preheader ]
  %92 = phi i64* [ %128, %land.end276 ], [ %71, %while.cond148.preheader ]
  %93 = phi i64* [ %128, %land.end276 ], [ %72, %while.cond148.preheader ]
  %94 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %73, %while.cond148.preheader ]
  %95 = phi i64* [ %128, %land.end276 ], [ %74, %while.cond148.preheader ]
  %96 = phi i64* [ %128, %land.end276 ], [ %75, %while.cond148.preheader ]
  %97 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %76, %while.cond148.preheader ]
  %98 = phi i64* [ %128, %land.end276 ], [ %77, %while.cond148.preheader ]
  %99 = phi i64* [ %128, %land.end276 ], [ %78, %while.cond148.preheader ]
  %100 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %79, %while.cond148.preheader ]
  %101 = phi i64* [ %128, %land.end276 ], [ %80, %while.cond148.preheader ]
  %102 = phi i64* [ %128, %land.end276 ], [ %81, %while.cond148.preheader ]
  %103 = phi %struct.tree_exp* [ %129, %land.end276 ], [ %82, %while.cond148.preheader ]
  %104 = phi i64* [ %128, %land.end276 ], [ %83, %while.cond148.preheader ]
  %105 = phi i64* [ %128, %land.end276 ], [ %84, %while.cond148.preheader ]
  %106 = phi %union.tree_node* [ %call282, %land.end276 ], [ %85, %while.cond148.preheader ]
  %else_se.0 = phi i8 [ %conv278, %land.end276 ], [ %conv18, %while.cond148.preheader ], !dbg !9573
  %else_.0 = phi %union.tree_node* [ %call267, %land.end276 ], [ %4, %while.cond148.preheader ], !dbg !9573
  %pred.2 = phi %union.tree_node* [ %125, %land.end276 ], [ %pred.1, %while.cond148.preheader ], !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.2, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.0, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %else_se.0, metadata !9559, metadata !DIExpression()), !dbg !9573
  %107 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9619
  %bf.load150 = load i64, i64* %107, align 8, !dbg !9619
  %bf.cast1524 = and i64 %bf.load150, 65535, !dbg !9620
  %cmp153 = icmp eq i64 %bf.cast1524, 92, !dbg !9620
  br i1 %cmp153, label %while.body155, label %if.end286.loopexit, !dbg !9618

while.body155:                                    ; preds = %while.cond148
  %bf.load158 = load i64, i64* %93, align 8, !dbg !9621
  %bf.cast160 = and i64 %bf.load158, 65535, !dbg !9621
  %arrayidx162 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast160, !dbg !9621
  %108 = load i32, i32* %arrayidx162, align 4, !dbg !9621
  %cmp163 = icmp ugt i32 %108, 3, !dbg !9621
  br i1 %cmp163, label %land.lhs.true165, label %cond.end178, !dbg !9621

land.lhs.true165:                                 ; preds = %while.body155
  %bf.load167 = load i64, i64* %92, align 8, !dbg !9621
  %bf.cast169 = and i64 %bf.load167, 65535, !dbg !9621
  %arrayidx171 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast169, !dbg !9621
  %109 = load i32, i32* %arrayidx171, align 4, !dbg !9621
  %cmp172 = icmp ult i32 %109, 11, !dbg !9621
  br i1 %cmp172, label %cond.true174, label %cond.end178, !dbg !9621

cond.true174:                                     ; preds = %land.lhs.true165
  %locus176 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %91, i64 0, i32 1, !dbg !9621
  %110 = load i32, i32* %locus176, align 8, !dbg !9621
  br label %cond.end178, !dbg !9621

cond.end178:                                      ; preds = %while.body155, %land.lhs.true165, %cond.true174
  %cond179 = phi i32 [ %110, %cond.true174 ], [ 0, %land.lhs.true165 ], [ 0, %while.body155 ], !dbg !9621
  %cmp180 = icmp eq i32 %cond179, 0, !dbg !9621
  br i1 %cmp180, label %cond.false206, label %cond.true182, !dbg !9621

cond.true182:                                     ; preds = %cond.end178
  %bf.load184 = load i64, i64* %90, align 8, !dbg !9622
  %bf.cast186 = and i64 %bf.load184, 65535, !dbg !9622
  %arrayidx188 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast186, !dbg !9622
  %111 = load i32, i32* %arrayidx188, align 4, !dbg !9622
  %cmp189 = icmp ugt i32 %111, 3, !dbg !9622
  br i1 %cmp189, label %land.lhs.true191, label %cond.end207, !dbg !9622

land.lhs.true191:                                 ; preds = %cond.true182
  %bf.load193 = load i64, i64* %89, align 8, !dbg !9622
  %bf.cast195 = and i64 %bf.load193, 65535, !dbg !9622
  %arrayidx197 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast195, !dbg !9622
  %112 = load i32, i32* %arrayidx197, align 4, !dbg !9622
  %cmp198 = icmp ult i32 %112, 11, !dbg !9622
  br i1 %cmp198, label %cond.true200, label %cond.end207, !dbg !9622

cond.true200:                                     ; preds = %land.lhs.true191
  %locus202 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %88, i64 0, i32 1, !dbg !9622
  %113 = load i32, i32* %locus202, align 8, !dbg !9622
  br label %cond.end207, !dbg !9622

cond.false206:                                    ; preds = %cond.end178
  %114 = load i32, i32* @input_location, align 4, !dbg !9623
  br label %cond.end207, !dbg !9621

cond.end207:                                      ; preds = %cond.true200, %land.lhs.true191, %cond.true182, %cond.false206
  %cond208 = phi i32 [ %114, %cond.false206 ], [ %113, %cond.true200 ], [ 0, %land.lhs.true191 ], [ 0, %cond.true182 ], !dbg !9621
  call void @llvm.dbg.value(metadata i32 %cond208, metadata !9564, metadata !DIExpression()), !dbg !9624
  %operands210 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9625
  %arrayidx211 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands210, i64 1, !dbg !9625
  %115 = bitcast %union.tree_node** %arrayidx211 to i64*, !dbg !9625
  %116 = load i64, i64* %115, align 8, !dbg !9625
  %operands213 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %87, i64 0, i32 3, !dbg !9626
  %117 = bitcast [1 x %union.tree_node*]* %operands213 to i64*, !dbg !9627
  store i64 %116, i64* %117, align 8, !dbg !9627
  %bf.load216 = load i64, i64* %107, align 8, !dbg !9628
  %bf.cast218 = and i64 %bf.load216, 65535, !dbg !9628
  %arrayidx220 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast218, !dbg !9628
  %118 = load i32, i32* %arrayidx220, align 4, !dbg !9628
  %cmp221 = icmp ugt i32 %118, 3, !dbg !9628
  br i1 %cmp221, label %land.lhs.true223, label %cond.end236, !dbg !9628

land.lhs.true223:                                 ; preds = %cond.end207
  %cmp230 = icmp ult i32 %118, 11, !dbg !9628
  br i1 %cmp230, label %cond.true232, label %cond.end236, !dbg !9628

cond.true232:                                     ; preds = %land.lhs.true223
  %119 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9628
  %120 = load i32, i32* %119, align 8, !dbg !9628
  br label %cond.end236, !dbg !9628

cond.end236:                                      ; preds = %cond.end207, %land.lhs.true223, %cond.true232
  %cond237 = phi i32 [ %120, %cond.true232 ], [ 0, %land.lhs.true223 ], [ 0, %cond.end207 ], !dbg !9628
  %cmp238 = icmp eq i32 %cond237, 0, !dbg !9628
  br i1 %cmp238, label %if.end266, label %if.then240, !dbg !9630

if.then240:                                       ; preds = %cond.end236
  br i1 %cmp221, label %land.lhs.true249, label %cond.end262, !dbg !9631

land.lhs.true249:                                 ; preds = %if.then240
  %cmp256 = icmp ult i32 %118, 11, !dbg !9631
  br i1 %cmp256, label %cond.true258, label %cond.end262, !dbg !9631

cond.true258:                                     ; preds = %land.lhs.true249
  %121 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9631
  %122 = load i32, i32* %121, align 8, !dbg !9631
  br label %cond.end262, !dbg !9631

cond.end262:                                      ; preds = %if.then240, %land.lhs.true249, %cond.true258
  %cond263 = phi i32 [ %122, %cond.true258 ], [ 0, %land.lhs.true249 ], [ 0, %if.then240 ], !dbg !9631
  %locus265 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %86, i64 0, i32 1, !dbg !9631
  store i32 %cond263, i32* %locus265, align 8, !dbg !9631
  br label %if.end266, !dbg !9631

if.end266:                                        ; preds = %cond.end236, %cond.end262
  call void @llvm.dbg.value(metadata %union.tree_node* %106, metadata !9545, metadata !DIExpression()), !dbg !9573
  %call267 = tail call fastcc %union.tree_node* @shortcut_cond_expr(%union.tree_node* %106) #7, !dbg !9632
  call void @llvm.dbg.value(metadata %union.tree_node* %call267, metadata !9548, metadata !DIExpression()), !dbg !9573
  %tobool268 = icmp eq %union.tree_node* %call267, null, !dbg !9633
  br i1 %tobool268, label %land.end276, label %land.rhs269, !dbg !9634

land.rhs269:                                      ; preds = %if.end266
  %123 = getelementptr inbounds %union.tree_node, %union.tree_node* %call267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9635
  %bf.load271 = load i64, i64* %123, align 8, !dbg !9635
  %bf.cast27414 = and i64 %bf.load271, 65536, !dbg !9634
  %tobool275 = icmp ne i64 %bf.cast27414, 0, !dbg !9634
  br label %land.end276

land.end276:                                      ; preds = %if.end266, %land.rhs269
  %124 = phi i1 [ false, %if.end266 ], [ %tobool275, %land.rhs269 ], !dbg !9624
  %conv278 = zext i1 %124 to i8, !dbg !9633
  call void @llvm.dbg.value(metadata i8 %conv278, metadata !9559, metadata !DIExpression()), !dbg !9573
  %125 = load %union.tree_node*, %union.tree_node** %operands210, align 8, !dbg !9636
  call void @llvm.dbg.value(metadata %union.tree_node* %125, metadata !9546, metadata !DIExpression()), !dbg !9573
  %126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9637
  %call282 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %126, %union.tree_node* %125, %union.tree_node* null, %union.tree_node* %call267) #6, !dbg !9637
  call void @llvm.dbg.value(metadata %union.tree_node* %call282, metadata !9545, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* %call282, %union.tree_node** %expr.addr, align 8, !dbg !9638
  %127 = getelementptr inbounds %union.tree_node, %union.tree_node* %call282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9639
  store i32 %cond208, i32* %127, align 8, !dbg !9639
  %128 = getelementptr inbounds %union.tree_node, %union.tree_node* %call282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9618
  %129 = bitcast %union.tree_node* %call282 to %struct.tree_exp*, !dbg !9618
  br label %while.cond148, !dbg !9618, !llvm.loop !9640

if.end286.loopexit:                               ; preds = %while.cond148
  %.lcssa65 = phi %struct.tree_exp* [ %94, %while.cond148 ]
  %.lcssa64 = phi i64* [ %95, %while.cond148 ]
  %.lcssa63 = phi i64* [ %96, %while.cond148 ]
  %.lcssa62 = phi %struct.tree_exp* [ %97, %while.cond148 ]
  %.lcssa61 = phi i64* [ %98, %while.cond148 ]
  %.lcssa60 = phi i64* [ %99, %while.cond148 ]
  %.lcssa59 = phi %struct.tree_exp* [ %100, %while.cond148 ]
  %.lcssa58 = phi i64* [ %101, %while.cond148 ]
  %.lcssa57 = phi i64* [ %102, %while.cond148 ]
  %.lcssa56 = phi %struct.tree_exp* [ %103, %while.cond148 ]
  %.lcssa55 = phi i64* [ %104, %while.cond148 ]
  %.lcssa54 = phi i64* [ %105, %while.cond148 ]
  %.lcssa = phi %union.tree_node* [ %106, %while.cond148 ]
  %else_se.0.lcssa = phi i8 [ %else_se.0, %while.cond148 ], !dbg !9573
  %else_.0.lcssa = phi %union.tree_node* [ %else_.0, %while.cond148 ], !dbg !9573
  %pred.2.lcssa = phi %union.tree_node* [ %pred.2, %while.cond148 ], !dbg !9573
  %bf.cast1524.lcssa = phi i64 [ %bf.cast1524, %while.cond148 ], !dbg !9620
  call void @llvm.dbg.value(metadata i8 %else_se.0.lcssa, metadata !9559, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.0.lcssa, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.2.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %else_se.0.lcssa, metadata !9559, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.0.lcssa, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.2.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %else_se.0.lcssa, metadata !9559, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.0.lcssa, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.2.lcssa, metadata !9546, metadata !DIExpression()), !dbg !9573
  br label %if.end286, !dbg !9616

if.end286:                                        ; preds = %if.end145.if.end286_crit_edge, %if.end286.loopexit
  %bf.cast2905.pre-phi = phi i64 [ %.pre, %if.end145.if.end286_crit_edge ], [ %bf.cast1524.lcssa, %if.end286.loopexit ], !dbg !9617
  %130 = phi %struct.tree_exp* [ %73, %if.end145.if.end286_crit_edge ], [ %.lcssa65, %if.end286.loopexit ]
  %131 = phi i64* [ %74, %if.end145.if.end286_crit_edge ], [ %.lcssa64, %if.end286.loopexit ]
  %132 = phi i64* [ %75, %if.end145.if.end286_crit_edge ], [ %.lcssa63, %if.end286.loopexit ]
  %133 = phi %struct.tree_exp* [ %76, %if.end145.if.end286_crit_edge ], [ %.lcssa62, %if.end286.loopexit ]
  %134 = phi i64* [ %77, %if.end145.if.end286_crit_edge ], [ %.lcssa61, %if.end286.loopexit ]
  %135 = phi i64* [ %78, %if.end145.if.end286_crit_edge ], [ %.lcssa60, %if.end286.loopexit ]
  %136 = phi %struct.tree_exp* [ %79, %if.end145.if.end286_crit_edge ], [ %.lcssa59, %if.end286.loopexit ]
  %137 = phi i64* [ %80, %if.end145.if.end286_crit_edge ], [ %.lcssa58, %if.end286.loopexit ]
  %138 = phi i64* [ %81, %if.end145.if.end286_crit_edge ], [ %.lcssa57, %if.end286.loopexit ]
  %139 = phi %struct.tree_exp* [ %82, %if.end145.if.end286_crit_edge ], [ %.lcssa56, %if.end286.loopexit ]
  %140 = phi i64* [ %83, %if.end145.if.end286_crit_edge ], [ %.lcssa55, %if.end286.loopexit ]
  %141 = phi i64* [ %84, %if.end145.if.end286_crit_edge ], [ %.lcssa54, %if.end286.loopexit ]
  %142 = phi %union.tree_node* [ %85, %if.end145.if.end286_crit_edge ], [ %.lcssa, %if.end286.loopexit ]
  %else_se.1 = phi i8 [ %conv18, %if.end145.if.end286_crit_edge ], [ %else_se.0.lcssa, %if.end286.loopexit ], !dbg !9642
  %else_.1 = phi %union.tree_node* [ %4, %if.end145.if.end286_crit_edge ], [ %else_.0.lcssa, %if.end286.loopexit ], !dbg !9643
  %pred.3 = phi %union.tree_node* [ %pred.1, %if.end145.if.end286_crit_edge ], [ %pred.2.lcssa, %if.end286.loopexit ], !dbg !9612
  call void @llvm.dbg.value(metadata %union.tree_node* %pred.3, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.1, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %else_se.1, metadata !9559, metadata !DIExpression()), !dbg !9573
  %cmp291 = icmp eq i64 %bf.cast2905.pre-phi, 91, !dbg !9617
  br i1 %cmp291, label %if.end301, label %land.lhs.true293, !dbg !9644

land.lhs.true293:                                 ; preds = %if.end286
  %cmp298 = icmp eq i64 %bf.cast2905.pre-phi, 92, !dbg !9645
  br i1 %cmp298, label %if.end301, label %if.then300, !dbg !9646

if.then300:                                       ; preds = %land.lhs.true293
  call void @llvm.dbg.value(metadata %union.tree_node* %142, metadata !9545, metadata !DIExpression()), !dbg !9573
  br label %cleanup, !dbg !9647

if.end301:                                        ; preds = %land.lhs.true293, %if.end286
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9551, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* null, %union.tree_node** %end_label, align 8, !dbg !9648
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9550, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* null, %union.tree_node** %false_label, align 8, !dbg !9649
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9549, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* null, %union.tree_node** %true_label, align 8, !dbg !9650
  %tobool302 = icmp eq %union.tree_node* %then_.1, null, !dbg !9651
  br i1 %tobool302, label %if.end324, label %land.lhs.true303, !dbg !9653

land.lhs.true303:                                 ; preds = %if.end301
  %143 = getelementptr inbounds %union.tree_node, %union.tree_node* %then_.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9654
  %bf.load305 = load i64, i64* %143, align 8, !dbg !9654
  %bf.cast30711 = and i64 %bf.load305, 65535, !dbg !9655
  %cmp308 = icmp eq i64 %bf.cast30711, 134, !dbg !9655
  br i1 %cmp308, label %land.lhs.true310, label %if.end324, !dbg !9656

land.lhs.true310:                                 ; preds = %land.lhs.true303
  %operands312 = getelementptr inbounds %union.tree_node, %union.tree_node* %then_.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9657
  %144 = bitcast %union.tree_node** %operands312 to i64**, !dbg !9657
  %145 = load i64*, i64** %144, align 8, !dbg !9657
  %bf.load315 = load i64, i64* %145, align 8, !dbg !9657
  %bf.cast31712 = and i64 %bf.load315, 65535, !dbg !9658
  %cmp318 = icmp eq i64 %bf.cast31712, 30, !dbg !9658
  br i1 %cmp318, label %if.then320, label %if.end324, !dbg !9659

if.then320:                                       ; preds = %land.lhs.true310
  %146 = ptrtoint i64* %145 to i64, !dbg !9659
  %147 = bitcast %union.tree_node** %true_label to i64*, !dbg !9660
  store i64 %146, i64* %147, align 8, !dbg !9660
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 0, metadata !9558, metadata !DIExpression()), !dbg !9573
  %148 = bitcast i64* %145 to %union.tree_node*, !dbg !9662
  br label %if.end324, !dbg !9662

if.end324:                                        ; preds = %if.end301, %if.then320, %land.lhs.true310, %land.lhs.true303
  %149 = phi %union.tree_node* [ %148, %if.then320 ], [ null, %land.lhs.true310 ], [ null, %land.lhs.true303 ], [ null, %if.end301 ]
  %then_se.2 = phi i8 [ 0, %if.then320 ], [ %then_se.1, %land.lhs.true310 ], [ %then_se.1, %land.lhs.true303 ], [ %then_se.1, %if.end301 ], !dbg !9573
  %then_.2 = phi %union.tree_node* [ null, %if.then320 ], [ %then_.1, %land.lhs.true310 ], [ %then_.1, %land.lhs.true303 ], [ null, %if.end301 ], !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %then_.2, metadata !9547, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %then_se.2, metadata !9558, metadata !DIExpression()), !dbg !9573
  %tobool325 = icmp eq %union.tree_node* %else_.1, null, !dbg !9663
  br i1 %tobool325, label %if.end347, label %land.lhs.true326, !dbg !9665

land.lhs.true326:                                 ; preds = %if.end324
  %150 = getelementptr inbounds %union.tree_node, %union.tree_node* %else_.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9666
  %bf.load328 = load i64, i64* %150, align 8, !dbg !9666
  %bf.cast3309 = and i64 %bf.load328, 65535, !dbg !9667
  %cmp331 = icmp eq i64 %bf.cast3309, 134, !dbg !9667
  br i1 %cmp331, label %land.lhs.true333, label %if.end347, !dbg !9668

land.lhs.true333:                                 ; preds = %land.lhs.true326
  %operands335 = getelementptr inbounds %union.tree_node, %union.tree_node* %else_.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9669
  %151 = bitcast %union.tree_node** %operands335 to i64**, !dbg !9669
  %152 = load i64*, i64** %151, align 8, !dbg !9669
  %bf.load338 = load i64, i64* %152, align 8, !dbg !9669
  %bf.cast34010 = and i64 %bf.load338, 65535, !dbg !9670
  %cmp341 = icmp eq i64 %bf.cast34010, 30, !dbg !9670
  br i1 %cmp341, label %if.then343, label %if.end347, !dbg !9671

if.then343:                                       ; preds = %land.lhs.true333
  %153 = ptrtoint i64* %152 to i64, !dbg !9671
  %154 = bitcast %union.tree_node** %false_label to i64*, !dbg !9672
  store i64 %153, i64* %154, align 8, !dbg !9672
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 0, metadata !9559, metadata !DIExpression()), !dbg !9573
  %155 = bitcast i64* %152 to %union.tree_node*, !dbg !9674
  br label %if.end347, !dbg !9674

if.end347:                                        ; preds = %if.end324, %if.then343, %land.lhs.true333, %land.lhs.true326
  %156 = phi %union.tree_node* [ %155, %if.then343 ], [ null, %land.lhs.true333 ], [ null, %land.lhs.true326 ], [ null, %if.end324 ]
  %157 = phi %union.tree_node* [ %155, %if.then343 ], [ null, %land.lhs.true333 ], [ null, %land.lhs.true326 ], [ null, %if.end324 ], !dbg !9675
  %else_se.2 = phi i8 [ 0, %if.then343 ], [ %else_se.1, %land.lhs.true333 ], [ %else_se.1, %land.lhs.true326 ], [ %else_se.1, %if.end324 ], !dbg !9573
  %else_.2 = phi %union.tree_node* [ null, %if.then343 ], [ %else_.1, %land.lhs.true333 ], [ %else_.1, %land.lhs.true326 ], [ null, %if.end324 ], !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %else_.2, metadata !9548, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i8 %else_se.2, metadata !9559, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %149, metadata !9549, metadata !DIExpression()), !dbg !9573
  %tobool348 = icmp eq %union.tree_node* %149, null, !dbg !9677
  %true_label. = select i1 %tobool348, %union.tree_node** null, %union.tree_node** %true_label
  call void @llvm.dbg.value(metadata %union.tree_node** %true_label., metadata !9553, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %157, metadata !9550, metadata !DIExpression()), !dbg !9573
  %tobool351 = icmp ne %union.tree_node* %157, null, !dbg !9675
  %tobool353 = icmp ne i8 %else_se.2, 0, !dbg !9679
  %or.cond = or i1 %tobool351, %tobool353, !dbg !9680
  %false_label_p.0 = select i1 %or.cond, %union.tree_node** %false_label, %union.tree_node** null, !dbg !9680
  call void @llvm.dbg.value(metadata %union.tree_node** %false_label_p.0, metadata !9554, metadata !DIExpression()), !dbg !9573
  %158 = or i8 %then_se.2, %else_se.2, !dbg !9681
  %159 = icmp eq i8 %158, 0, !dbg !9681
  br i1 %159, label %if.then360, label %if.end414, !dbg !9681

if.then360:                                       ; preds = %if.end347
  %bf.load362 = load i64, i64* %135, align 8, !dbg !9683
  %bf.cast364 = and i64 %bf.load362, 65535, !dbg !9683
  %arrayidx366 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast364, !dbg !9683
  %160 = load i32, i32* %arrayidx366, align 4, !dbg !9683
  %cmp367 = icmp ugt i32 %160, 3, !dbg !9683
  br i1 %cmp367, label %land.lhs.true369, label %cond.end382, !dbg !9683

land.lhs.true369:                                 ; preds = %if.then360
  %bf.load371 = load i64, i64* %134, align 8, !dbg !9683
  %bf.cast373 = and i64 %bf.load371, 65535, !dbg !9683
  %arrayidx375 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast373, !dbg !9683
  %161 = load i32, i32* %arrayidx375, align 4, !dbg !9683
  %cmp376 = icmp ult i32 %161, 11, !dbg !9683
  br i1 %cmp376, label %cond.true378, label %cond.end382, !dbg !9683

cond.true378:                                     ; preds = %land.lhs.true369
  %locus380 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %133, i64 0, i32 1, !dbg !9683
  %162 = load i32, i32* %locus380, align 8, !dbg !9683
  %phitmp = icmp ne i32 %162, 0, !dbg !9683
  br label %cond.end382, !dbg !9683

cond.end382:                                      ; preds = %if.then360, %land.lhs.true369, %cond.true378
  %cond383 = phi i1 [ %phitmp, %cond.true378 ], [ false, %land.lhs.true369 ], [ false, %if.then360 ]
  br i1 %cond383, label %cond.true386, label %cond.false410, !dbg !9683

cond.true386:                                     ; preds = %cond.end382
  %bf.load388 = load i64, i64* %132, align 8, !dbg !9684
  %bf.cast390 = and i64 %bf.load388, 65535, !dbg !9684
  %arrayidx392 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast390, !dbg !9684
  %163 = load i32, i32* %arrayidx392, align 4, !dbg !9684
  %cmp393 = icmp ugt i32 %163, 3, !dbg !9684
  br i1 %cmp393, label %land.lhs.true395, label %cond.end411, !dbg !9684

land.lhs.true395:                                 ; preds = %cond.true386
  %bf.load397 = load i64, i64* %131, align 8, !dbg !9684
  %bf.cast399 = and i64 %bf.load397, 65535, !dbg !9684
  %arrayidx401 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast399, !dbg !9684
  %164 = load i32, i32* %arrayidx401, align 4, !dbg !9684
  %cmp402 = icmp ult i32 %164, 11, !dbg !9684
  br i1 %cmp402, label %cond.true404, label %cond.end411, !dbg !9684

cond.true404:                                     ; preds = %land.lhs.true395
  %locus406 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %130, i64 0, i32 1, !dbg !9684
  %165 = load i32, i32* %locus406, align 8, !dbg !9684
  br label %cond.end411, !dbg !9684

cond.false410:                                    ; preds = %cond.end382
  %166 = load i32, i32* @input_location, align 4, !dbg !9685
  br label %cond.end411, !dbg !9683

cond.end411:                                      ; preds = %cond.true404, %land.lhs.true395, %cond.true386, %cond.false410
  %cond412 = phi i32 [ %166, %cond.false410 ], [ %165, %cond.true404 ], [ 0, %land.lhs.true395 ], [ 0, %cond.true386 ], !dbg !9683
  %call413 = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %pred.3, %union.tree_node** %true_label., %union.tree_node** %false_label_p.0, i32 %cond412) #7, !dbg !9686
  br label %cleanup, !dbg !9687

if.end414:                                        ; preds = %if.end347
  %tobool415 = icmp eq i8 %else_se.2, 0, !dbg !9688
  br i1 %tobool415, label %if.else418, label %if.then416, !dbg !9690

if.then416:                                       ; preds = %if.end414
  %call417 = tail call %union.tree_node* @expr_last(%union.tree_node* %else_.2) #6, !dbg !9691
  call void @llvm.dbg.value(metadata %union.tree_node* %call417, metadata !9552, metadata !DIExpression()), !dbg !9573
  br label %if.end424, !dbg !9692

if.else418:                                       ; preds = %if.end414
  %tobool419 = icmp eq i8 %then_se.2, 0, !dbg !9693
  br i1 %tobool419, label %if.end424, label %if.then420, !dbg !9695

if.then420:                                       ; preds = %if.else418
  %call421 = tail call %union.tree_node* @expr_last(%union.tree_node* %then_.2) #6, !dbg !9696
  call void @llvm.dbg.value(metadata %union.tree_node* %call421, metadata !9552, metadata !DIExpression()), !dbg !9573
  br label %if.end424, !dbg !9697

if.end424:                                        ; preds = %if.else418, %if.then420, %if.then416
  %t.1 = phi %union.tree_node* [ %call417, %if.then416 ], [ %call421, %if.then420 ], [ null, %if.else418 ], !dbg !9698
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !9552, metadata !DIExpression()), !dbg !9573
  %tobool425 = icmp eq %union.tree_node* %t.1, null, !dbg !9699
  br i1 %tobool425, label %if.end437, label %land.lhs.true426, !dbg !9701

land.lhs.true426:                                 ; preds = %if.end424
  %167 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9702
  %bf.load428 = load i64, i64* %167, align 8, !dbg !9702
  %bf.cast4308 = and i64 %bf.load428, 65535, !dbg !9703
  %cmp431 = icmp eq i64 %bf.cast4308, 133, !dbg !9703
  br i1 %cmp431, label %if.then433, label %if.end437, !dbg !9704

if.then433:                                       ; preds = %land.lhs.true426
  %operands435 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9705
  %168 = bitcast %union.tree_node** %operands435 to i64*, !dbg !9705
  %169 = load i64, i64* %168, align 8, !dbg !9705
  %170 = bitcast %union.tree_node** %end_label to i64*, !dbg !9706
  store i64 %169, i64* %170, align 8, !dbg !9706
  %phitmp53 = icmp eq i64 %169, 0, !dbg !9707
  br label %if.end437, !dbg !9707

if.end437:                                        ; preds = %if.end424, %if.then433, %land.lhs.true426
  %171 = phi i1 [ true, %if.end424 ], [ %phitmp53, %if.then433 ], [ true, %land.lhs.true426 ]
  %spec.select = select i1 %or.cond, %union.tree_node** %false_label, %union.tree_node** %end_label, !dbg !9708
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select, metadata !9554, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i1 %171, metadata !9555, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %156, metadata !9550, metadata !DIExpression()), !dbg !9573
  %cmp444 = icmp eq %union.tree_node* %156, null, !dbg !9709
  call void @llvm.dbg.value(metadata i1 %cmp444, metadata !9556, metadata !DIExpression()), !dbg !9573
  %call447 = tail call zeroext i8 @block_may_fallthru(%union.tree_node* %then_.2) #6, !dbg !9710
  call void @llvm.dbg.value(metadata i8 %call447, metadata !9557, metadata !DIExpression()), !dbg !9573
  %bf.load449 = load i64, i64* %141, align 8, !dbg !9711
  %bf.cast451 = and i64 %bf.load449, 65535, !dbg !9711
  %arrayidx453 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast451, !dbg !9711
  %172 = load i32, i32* %arrayidx453, align 4, !dbg !9711
  %cmp454 = icmp ugt i32 %172, 3, !dbg !9711
  br i1 %cmp454, label %land.lhs.true456, label %cond.end469, !dbg !9711

land.lhs.true456:                                 ; preds = %if.end437
  %bf.load458 = load i64, i64* %140, align 8, !dbg !9711
  %bf.cast460 = and i64 %bf.load458, 65535, !dbg !9711
  %arrayidx462 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast460, !dbg !9711
  %173 = load i32, i32* %arrayidx462, align 4, !dbg !9711
  %cmp463 = icmp ult i32 %173, 11, !dbg !9711
  br i1 %cmp463, label %cond.true465, label %cond.end469, !dbg !9711

cond.true465:                                     ; preds = %land.lhs.true456
  %locus467 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %139, i64 0, i32 1, !dbg !9711
  %174 = load i32, i32* %locus467, align 8, !dbg !9711
  %phitmp6 = icmp ne i32 %174, 0, !dbg !9711
  br label %cond.end469, !dbg !9711

cond.end469:                                      ; preds = %if.end437, %land.lhs.true456, %cond.true465
  %cond470 = phi i1 [ %phitmp6, %cond.true465 ], [ false, %land.lhs.true456 ], [ false, %if.end437 ]
  br i1 %cond470, label %cond.true473, label %cond.false497, !dbg !9711

cond.true473:                                     ; preds = %cond.end469
  %bf.load475 = load i64, i64* %138, align 8, !dbg !9712
  %bf.cast477 = and i64 %bf.load475, 65535, !dbg !9712
  %arrayidx479 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast477, !dbg !9712
  %175 = load i32, i32* %arrayidx479, align 4, !dbg !9712
  %cmp480 = icmp ugt i32 %175, 3, !dbg !9712
  br i1 %cmp480, label %land.lhs.true482, label %cond.end498, !dbg !9712

land.lhs.true482:                                 ; preds = %cond.true473
  %bf.load484 = load i64, i64* %137, align 8, !dbg !9712
  %bf.cast486 = and i64 %bf.load484, 65535, !dbg !9712
  %arrayidx488 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast486, !dbg !9712
  %176 = load i32, i32* %arrayidx488, align 4, !dbg !9712
  %cmp489 = icmp ult i32 %176, 11, !dbg !9712
  br i1 %cmp489, label %cond.true491, label %cond.end498, !dbg !9712

cond.true491:                                     ; preds = %land.lhs.true482
  %locus493 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %136, i64 0, i32 1, !dbg !9712
  %177 = load i32, i32* %locus493, align 8, !dbg !9712
  br label %cond.end498, !dbg !9712

cond.false497:                                    ; preds = %cond.end469
  %178 = load i32, i32* @input_location, align 4, !dbg !9713
  br label %cond.end498, !dbg !9711

cond.end498:                                      ; preds = %cond.true491, %land.lhs.true482, %cond.true473, %cond.false497
  %cond499 = phi i32 [ %178, %cond.false497 ], [ %177, %cond.true491 ], [ 0, %land.lhs.true482 ], [ 0, %cond.true473 ], !dbg !9711
  %call500 = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %pred.3, %union.tree_node** %true_label., %union.tree_node** nonnull %spec.select, i32 %cond499) #7, !dbg !9714
  call void @llvm.dbg.value(metadata %union.tree_node* %call500, metadata !9546, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9545, metadata !DIExpression()), !dbg !9573
  store %union.tree_node* null, %union.tree_node** %expr.addr, align 8, !dbg !9715
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %call500, %union.tree_node** nonnull %expr.addr) #7, !dbg !9716
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %then_.2, %union.tree_node** nonnull %expr.addr) #7, !dbg !9717
  br i1 %tobool415, label %if.end564, label %if.then502, !dbg !9718

if.then502:                                       ; preds = %cond.end498
  %tobool503 = icmp eq i8 %call447, 0, !dbg !9719
  br i1 %tobool503, label %if.end559, label %if.then504, !dbg !9720

if.then504:                                       ; preds = %if.then502
  %179 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !9721
  call void @llvm.dbg.value(metadata %union.tree_node* %179, metadata !9545, metadata !DIExpression()), !dbg !9573
  %call505 = call %union.tree_node* @expr_last(%union.tree_node* %179) #6, !dbg !9722
  call void @llvm.dbg.value(metadata %union.tree_node* %call505, metadata !9568, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata %union.tree_node** %end_label, metadata !9551, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  %call506 = call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %end_label) #7, !dbg !9724
  call void @llvm.dbg.value(metadata %union.tree_node* %call506, metadata !9552, metadata !DIExpression()), !dbg !9573
  %180 = getelementptr inbounds %union.tree_node, %union.tree_node* %call505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9725
  %bf.load508 = load i64, i64* %180, align 8, !dbg !9725
  %bf.cast510 = and i64 %bf.load508, 65535, !dbg !9725
  %arrayidx512 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast510, !dbg !9725
  %181 = load i32, i32* %arrayidx512, align 4, !dbg !9725
  %cmp513 = icmp ugt i32 %181, 3, !dbg !9725
  br i1 %cmp513, label %land.lhs.true515, label %cond.end528, !dbg !9725

land.lhs.true515:                                 ; preds = %if.then504
  %cmp522 = icmp ult i32 %181, 11, !dbg !9725
  br i1 %cmp522, label %cond.true524, label %cond.end528, !dbg !9725

cond.true524:                                     ; preds = %land.lhs.true515
  %182 = getelementptr inbounds %union.tree_node, %union.tree_node* %call505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9725
  %183 = load i32, i32* %182, align 8, !dbg !9725
  %phitmp7 = icmp ne i32 %183, 0, !dbg !9725
  br label %cond.end528, !dbg !9725

cond.end528:                                      ; preds = %if.then504, %land.lhs.true515, %cond.true524
  %cond529 = phi i1 [ %phitmp7, %cond.true524 ], [ false, %land.lhs.true515 ], [ false, %if.then504 ]
  br i1 %cond529, label %if.then532, label %if.end558, !dbg !9727

if.then532:                                       ; preds = %cond.end528
  br i1 %cmp513, label %land.lhs.true541, label %cond.end554, !dbg !9728

land.lhs.true541:                                 ; preds = %if.then532
  %cmp548 = icmp ult i32 %181, 11, !dbg !9728
  br i1 %cmp548, label %cond.true550, label %cond.end554, !dbg !9728

cond.true550:                                     ; preds = %land.lhs.true541
  %184 = getelementptr inbounds %union.tree_node, %union.tree_node* %call505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9728
  %185 = load i32, i32* %184, align 8, !dbg !9728
  br label %cond.end554, !dbg !9728

cond.end554:                                      ; preds = %if.then532, %land.lhs.true541, %cond.true550
  %cond555 = phi i32 [ %185, %cond.true550 ], [ 0, %land.lhs.true541 ], [ 0, %if.then532 ], !dbg !9728
  %186 = getelementptr inbounds %union.tree_node, %union.tree_node* %call506, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9728
  store i32 %cond555, i32* %186, align 8, !dbg !9728
  br label %if.end558, !dbg !9728

if.end558:                                        ; preds = %cond.end554, %cond.end528
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %call506, %union.tree_node** nonnull %expr.addr) #7, !dbg !9729
  br label %if.end559, !dbg !9730

if.end559:                                        ; preds = %if.then502, %if.end558
  br i1 %cmp444, label %if.then561, label %if.end563, !dbg !9731

if.then561:                                       ; preds = %if.end559
  %187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9732
  %188 = load %union.tree_node*, %union.tree_node** %false_label, align 8, !dbg !9732
  call void @llvm.dbg.value(metadata %union.tree_node* %188, metadata !9550, metadata !DIExpression()), !dbg !9573
  %call562 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %187, %union.tree_node* %188) #6, !dbg !9732
  call void @llvm.dbg.value(metadata %union.tree_node* %call562, metadata !9552, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %call562, %union.tree_node** nonnull %expr.addr) #7, !dbg !9735
  br label %if.end563, !dbg !9736

if.end563:                                        ; preds = %if.then561, %if.end559
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %else_.2, %union.tree_node** nonnull %expr.addr) #7, !dbg !9737
  br label %if.end564, !dbg !9738

if.end564:                                        ; preds = %cond.end498, %if.end563
  %189 = load %union.tree_node*, %union.tree_node** %end_label, align 8, !dbg !9739
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !9551, metadata !DIExpression()), !dbg !9573
  %tobool568 = icmp ne %union.tree_node* %189, null, !dbg !9739
  %or.cond2 = and i1 %171, %tobool568, !dbg !9741
  br i1 %or.cond2, label %if.then569, label %if.end571, !dbg !9741

if.then569:                                       ; preds = %if.end564
  %190 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9742
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !9551, metadata !DIExpression()), !dbg !9573
  %call570 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %190, %union.tree_node* nonnull %189) #6, !dbg !9742
  call void @llvm.dbg.value(metadata %union.tree_node* %call570, metadata !9552, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !9545, metadata !DIExpression(DW_OP_deref)), !dbg !9573
  call void @append_to_statement_list(%union.tree_node* %call570, %union.tree_node** nonnull %expr.addr) #7, !dbg !9744
  br label %if.end571, !dbg !9745

if.end571:                                        ; preds = %if.then569, %if.end564
  %191 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !9746
  call void @llvm.dbg.value(metadata %union.tree_node* %191, metadata !9545, metadata !DIExpression()), !dbg !9573
  br label %cleanup, !dbg !9747

cleanup:                                          ; preds = %if.end571, %cond.end411, %if.then300
  %retval.0 = phi %union.tree_node* [ %142, %if.then300 ], [ %191, %if.end571 ], [ %call413, %cond.end411 ], !dbg !9573
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !9748
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9748
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9748
  ret %union.tree_node* %retval.0, !dbg !9748
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_push_condition() unnamed_addr #5 !dbg !9749 {
entry:
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9750
  %conditions = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 8, !dbg !9751
  %1 = load i32, i32* %conditions, align 8, !dbg !9752
  %inc = add nsw i32 %1, 1, !dbg !9752
  store i32 %inc, i32* %conditions, align 8, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_pop_condition(%struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !9754 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !9758, metadata !DIExpression()), !dbg !9760
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9761
  %conditions = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 8, !dbg !9762
  %1 = load i32, i32* %conditions, align 8, !dbg !9763
  %dec = add nsw i32 %1, -1, !dbg !9763
  store i32 %dec, i32* %conditions, align 8, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %dec, metadata !9759, metadata !DIExpression()), !dbg !9760
  %cmp = icmp sgt i32 %1, 0, !dbg !9764
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9764

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 290, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9764
  br label %cond.end, !dbg !9764

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp eq i32 %dec, 0, !dbg !9765
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9767

if.then:                                          ; preds = %cond.end
  %2 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9768
  %conditional_cleanups = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %2, i64 0, i32 3, !dbg !9770
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %conditional_cleanups, align 8, !dbg !9770
  tail call fastcc void @gimplify_seq_add_seq(%struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d* %3) #7, !dbg !9771
  %4 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !9772
  %conditional_cleanups2 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %4, i64 0, i32 3, !dbg !9773
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %conditional_cleanups2, align 8, !dbg !9774
  br label %if.end, !dbg !9775

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9776
}

declare dso_local void @gimple_cond_get_ops_from_tree(%union.tree_node*, i32*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_do_not_emit_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9777 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9779, metadata !DIExpression()), !dbg !9780
  tail call fastcc void @gimple_set_plf(%union.gimple_statement_d* %g, i32 1, i8 zeroext 1) #7, !dbg !9781
  ret void, !dbg !9782
}

declare dso_local zeroext i8 @tree_could_trap_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !9783 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9789
  %bf.load = load i64, i64* %0, align 8, !dbg !9789
  %bf.cast = and i64 %bf.load, 65535, !dbg !9789
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !9789
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9789
  %cmp = icmp eq i32 %1, 9, !dbg !9789
  br i1 %cmp, label %if.then, label %if.else, !dbg !9791

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9792
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !9792
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !9792
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !9792
  %4 = load i64, i64* %low, align 8, !dbg !9792
  %conv = trunc i64 %4 to i32, !dbg !9792
  br label %return, !dbg !9793

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !9794
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !9794
  %conv9 = zext i8 %5 to i32, !dbg !9794
  br label %return, !dbg !9795

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !9796
  ret i32 %retval.0, !dbg !9797
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %pred, %union.tree_node** %true_label_p, %union.tree_node** %false_label_p, i32 %locus) unnamed_addr #5 !dbg !9798 {
entry:
  %local_label = alloca %union.tree_node*, align 8
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %pred, metadata !9802, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %true_label_p, metadata !9803, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %false_label_p, metadata !9804, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %locus, metadata !9805, metadata !DIExpression()), !dbg !9818
  %0 = bitcast %union.tree_node** %local_label to i8*, !dbg !9819
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9819
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9806, metadata !DIExpression()), !dbg !9818
  store %union.tree_node* null, %union.tree_node** %local_label, align 8, !dbg !9820
  %1 = bitcast %union.tree_node** %expr to i8*, !dbg !9821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9821
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9808, metadata !DIExpression()), !dbg !9818
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !9822
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9823
  %bf.load = load i64, i64* %2, align 8, !dbg !9823
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9824
  %cmp = icmp eq i64 %bf.cast2, 91, !dbg !9824
  br i1 %cmp, label %if.then, label %if.else, !dbg !9825

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq %union.tree_node** %false_label_p, null, !dbg !9826
  %spec.select = select i1 %cmp1, %union.tree_node** %local_label, %union.tree_node** %false_label_p, !dbg !9828
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select, metadata !9804, metadata !DIExpression()), !dbg !9818
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9829
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9829
  %call = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %3, %union.tree_node** null, %union.tree_node** %spec.select, i32 %locus) #7, !dbg !9830
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9807, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9808, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  call void @append_to_statement_list(%union.tree_node* %call, %union.tree_node** nonnull %expr) #7, !dbg !9831
  %bf.load4 = load i64, i64* %2, align 8, !dbg !9832
  %bf.cast6 = and i64 %bf.load4, 65535, !dbg !9832
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast6, !dbg !9832
  %4 = load i32, i32* %arrayidx7, align 4, !dbg !9832
  %cmp8 = icmp ugt i32 %4, 3, !dbg !9832
  br i1 %cmp8, label %land.lhs.true, label %cond.end, !dbg !9832

land.lhs.true:                                    ; preds = %if.then
  %cmp15 = icmp ult i32 %4, 11, !dbg !9832
  br i1 %cmp15, label %cond.true, label %cond.end, !dbg !9832

cond.true:                                        ; preds = %land.lhs.true
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9832
  %6 = load i32, i32* %5, align 8, !dbg !9832
  %phitmp6 = icmp ne i32 %6, 0, !dbg !9832
  br label %cond.end, !dbg !9832

cond.end:                                         ; preds = %if.then, %land.lhs.true, %cond.true
  %cond = phi i1 [ %phitmp6, %cond.true ], [ false, %land.lhs.true ], [ false, %if.then ]
  br i1 %cond, label %cond.true19, label %cond.end42, !dbg !9832

cond.true19:                                      ; preds = %cond.end
  br i1 %cmp8, label %land.lhs.true27, label %cond.end42, !dbg !9833

land.lhs.true27:                                  ; preds = %cond.true19
  %cmp34 = icmp ult i32 %4, 11, !dbg !9833
  br i1 %cmp34, label %cond.true35, label %cond.end42, !dbg !9833

cond.true35:                                      ; preds = %land.lhs.true27
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9833
  %8 = load i32, i32* %7, align 8, !dbg !9833
  br label %cond.end42, !dbg !9833

cond.end42:                                       ; preds = %cond.end, %cond.true35, %land.lhs.true27, %cond.true19
  %cond43 = phi i32 [ %8, %cond.true35 ], [ 0, %land.lhs.true27 ], [ 0, %cond.true19 ], [ %locus, %cond.end ], !dbg !9832
  call void @llvm.dbg.value(metadata i32 %cond43, metadata !9809, metadata !DIExpression()), !dbg !9834
  %arrayidx46 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9835
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8, !dbg !9835
  %call47 = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %9, %union.tree_node** %true_label_p, %union.tree_node** %spec.select, i32 %cond43) #7, !dbg !9836
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !9807, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9808, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  call void @append_to_statement_list(%union.tree_node* %call47, %union.tree_node** nonnull %expr) #7, !dbg !9837
  br label %if.end188, !dbg !9838

if.else:                                          ; preds = %entry
  %cmp52 = icmp eq i64 %bf.cast2, 92, !dbg !9839
  br i1 %cmp52, label %if.then53, label %if.else113, !dbg !9840

if.then53:                                        ; preds = %if.else
  %cmp55 = icmp eq %union.tree_node** %true_label_p, null, !dbg !9841
  %spec.select1 = select i1 %cmp55, %union.tree_node** %local_label, %union.tree_node** %true_label_p, !dbg !9843
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select1, metadata !9803, metadata !DIExpression()), !dbg !9818
  %operands59 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9844
  %10 = load %union.tree_node*, %union.tree_node** %operands59, align 8, !dbg !9844
  %call61 = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %10, %union.tree_node** %spec.select1, %union.tree_node** null, i32 %locus) #7, !dbg !9845
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !9807, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9808, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  call void @append_to_statement_list(%union.tree_node* %call61, %union.tree_node** nonnull %expr) #7, !dbg !9846
  %bf.load63 = load i64, i64* %2, align 8, !dbg !9847
  %bf.cast65 = and i64 %bf.load63, 65535, !dbg !9847
  %arrayidx67 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast65, !dbg !9847
  %11 = load i32, i32* %arrayidx67, align 4, !dbg !9847
  %cmp68 = icmp ugt i32 %11, 3, !dbg !9847
  br i1 %cmp68, label %land.lhs.true69, label %cond.end81, !dbg !9847

land.lhs.true69:                                  ; preds = %if.then53
  %cmp76 = icmp ult i32 %11, 11, !dbg !9847
  br i1 %cmp76, label %cond.true77, label %cond.end81, !dbg !9847

cond.true77:                                      ; preds = %land.lhs.true69
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9847
  %13 = load i32, i32* %12, align 8, !dbg !9847
  %phitmp5 = icmp ne i32 %13, 0, !dbg !9847
  br label %cond.end81, !dbg !9847

cond.end81:                                       ; preds = %if.then53, %land.lhs.true69, %cond.true77
  %cond82 = phi i1 [ %phitmp5, %cond.true77 ], [ false, %land.lhs.true69 ], [ false, %if.then53 ]
  br i1 %cond82, label %cond.true84, label %cond.end107, !dbg !9847

cond.true84:                                      ; preds = %cond.end81
  br i1 %cmp68, label %land.lhs.true92, label %cond.end107, !dbg !9848

land.lhs.true92:                                  ; preds = %cond.true84
  %cmp99 = icmp ult i32 %11, 11, !dbg !9848
  br i1 %cmp99, label %cond.true100, label %cond.end107, !dbg !9848

cond.true100:                                     ; preds = %land.lhs.true92
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9848
  %15 = load i32, i32* %14, align 8, !dbg !9848
  br label %cond.end107, !dbg !9848

cond.end107:                                      ; preds = %cond.end81, %cond.true100, %land.lhs.true92, %cond.true84
  %cond108 = phi i32 [ %15, %cond.true100 ], [ 0, %land.lhs.true92 ], [ 0, %cond.true84 ], [ %locus, %cond.end81 ], !dbg !9847
  call void @llvm.dbg.value(metadata i32 %cond108, metadata !9812, metadata !DIExpression()), !dbg !9849
  %arrayidx111 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands59, i64 1, !dbg !9850
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx111, align 8, !dbg !9850
  %call112 = call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %16, %union.tree_node** %spec.select1, %union.tree_node** %false_label_p, i32 %cond108) #7, !dbg !9851
  call void @llvm.dbg.value(metadata %union.tree_node* %call112, metadata !9807, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9808, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  call void @append_to_statement_list(%union.tree_node* %call112, %union.tree_node** nonnull %expr) #7, !dbg !9852
  br label %if.end188, !dbg !9853

if.else113:                                       ; preds = %if.else
  %cmp118 = icmp eq i64 %bf.cast2, 56, !dbg !9854
  br i1 %cmp118, label %if.then119, label %if.else180, !dbg !9855

if.then119:                                       ; preds = %if.else113
  %17 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 56), align 4, !dbg !9856
  %cmp127 = icmp ugt i32 %17, 3, !dbg !9856
  br i1 %cmp127, label %land.lhs.true128, label %cond.end140, !dbg !9856

land.lhs.true128:                                 ; preds = %if.then119
  %cmp135 = icmp ult i32 %17, 11, !dbg !9856
  br i1 %cmp135, label %cond.true136, label %cond.end140, !dbg !9856

cond.true136:                                     ; preds = %land.lhs.true128
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9856
  %19 = load i32, i32* %18, align 8, !dbg !9856
  %phitmp = icmp ne i32 %19, 0, !dbg !9856
  br label %cond.end140, !dbg !9856

cond.end140:                                      ; preds = %if.then119, %land.lhs.true128, %cond.true136
  %cond141 = phi i1 [ %phitmp, %cond.true136 ], [ false, %land.lhs.true128 ], [ false, %if.then119 ]
  br i1 %cond141, label %cond.true143, label %cond.end166, !dbg !9856

cond.true143:                                     ; preds = %cond.end140
  br i1 %cmp127, label %land.lhs.true151, label %cond.end166, !dbg !9857

land.lhs.true151:                                 ; preds = %cond.true143
  %cmp158 = icmp ult i32 %17, 11, !dbg !9857
  br i1 %cmp158, label %cond.true159, label %cond.end166, !dbg !9857

cond.true159:                                     ; preds = %land.lhs.true151
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9857
  %21 = load i32, i32* %20, align 8, !dbg !9857
  br label %cond.end166, !dbg !9857

cond.end166:                                      ; preds = %cond.end140, %cond.true159, %land.lhs.true151, %cond.true143
  %cond167 = phi i32 [ %21, %cond.true159 ], [ 0, %land.lhs.true151 ], [ 0, %cond.true143 ], [ %locus, %cond.end140 ], !dbg !9856
  call void @llvm.dbg.value(metadata i32 %cond167, metadata !9815, metadata !DIExpression()), !dbg !9858
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9859
  %operands169 = getelementptr inbounds %union.tree_node, %union.tree_node* %pred, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9859
  %23 = load %union.tree_node*, %union.tree_node** %operands169, align 8, !dbg !9859
  %arrayidx173 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands169, i64 1, !dbg !9859
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx173, align 8, !dbg !9859
  %call174 = tail call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %24, %union.tree_node** %true_label_p, %union.tree_node** %false_label_p, i32 %locus) #7, !dbg !9859
  %arrayidx177 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands169, i64 2, !dbg !9859
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx177, align 8, !dbg !9859
  %call178 = tail call fastcc %union.tree_node* @shortcut_cond_r(%union.tree_node* %25, %union.tree_node** %true_label_p, %union.tree_node** %false_label_p, i32 %cond167) #7, !dbg !9859
  %call179 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %22, %union.tree_node* %23, %union.tree_node* %call174, %union.tree_node* %call178) #6, !dbg !9859
  call void @llvm.dbg.value(metadata %union.tree_node* %call179, metadata !9808, metadata !DIExpression()), !dbg !9818
  store %union.tree_node* %call179, %union.tree_node** %expr, align 8, !dbg !9860
  br label %if.end188, !dbg !9861

if.else180:                                       ; preds = %if.else113
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9862
  %call181 = tail call %union.tree_node* @build_and_jump(%union.tree_node** %true_label_p) #7, !dbg !9862
  %call182 = tail call %union.tree_node* @build_and_jump(%union.tree_node** %false_label_p) #7, !dbg !9862
  %call183 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %26, %union.tree_node* %pred, %union.tree_node* %call181, %union.tree_node* %call182) #6, !dbg !9862
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !9808, metadata !DIExpression()), !dbg !9818
  store %union.tree_node* %call183, %union.tree_node** %expr, align 8, !dbg !9864
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9865
  store i32 %locus, i32* %27, align 8, !dbg !9865
  br label %if.end188

if.end188:                                        ; preds = %cond.end107, %if.else180, %cond.end166, %cond.end42
  %28 = load %union.tree_node*, %union.tree_node** %local_label, align 8, !dbg !9866
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !9806, metadata !DIExpression()), !dbg !9818
  %tobool = icmp eq %union.tree_node* %28, null, !dbg !9866
  br i1 %tobool, label %if.end191, label %if.then189, !dbg !9868

if.then189:                                       ; preds = %if.end188
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9869
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !9806, metadata !DIExpression()), !dbg !9818
  %call190 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %29, %union.tree_node* nonnull %28) #6, !dbg !9869
  call void @llvm.dbg.value(metadata %union.tree_node* %call190, metadata !9807, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9808, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  call void @append_to_statement_list(%union.tree_node* %call190, %union.tree_node** nonnull %expr) #7, !dbg !9871
  br label %if.end191, !dbg !9872

if.end191:                                        ; preds = %if.end188, %if.then189
  %30 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !9873
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !9808, metadata !DIExpression()), !dbg !9818
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9874
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9874
  ret %union.tree_node* %30, !dbg !9875
}

declare dso_local %union.tree_node* @expr_last(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @block_may_fallthru(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_plf(%union.gimple_statement_d* %stmt, i32 %plf, i8 zeroext %val_p) unnamed_addr #0 !dbg !9876 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9880, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata i32 1, metadata !9881, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata i8 1, metadata !9882, metadata !DIExpression()), !dbg !9883
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !9884
  %bf.load = load i32, i32* %0, align 8, !dbg !9886
  %bf.set = or i32 %bf.load, 2048, !dbg !9886
  store i32 %bf.set, i32* %0, align 8, !dbg !9886
  ret void, !dbg !9887
}

declare dso_local %union.tree_node* @fold_call_expr(i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_empty_stmt(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @fold_builtin_next_arg(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_arg(%union.tree_node** %arg_p, %struct.gimple_seq_d** %pre_p, i32 %call_location) unnamed_addr #5 !dbg !9888 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %arg_p, metadata !9892, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %call_location, metadata !9894, metadata !DIExpression()), !dbg !9897
  %0 = bitcast %union.tree_node** %arg_p to %struct.tree_common**, !dbg !9898
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !9898
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !9898
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9898
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %2) #6, !dbg !9900
  %tobool = icmp ne i8 %call, 0, !dbg !9900
  %is_gimple_val.is_gimple_lvalue = select i1 %tobool, i8 (%union.tree_node*)* @is_gimple_val, i8 (%union.tree_node*)* @is_gimple_lvalue
  %. = select i1 %tobool, i32 1, i32 3
  call void @llvm.dbg.value(metadata i32 %., metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*)* %is_gimple_val.is_gimple_lvalue, metadata !9895, metadata !DIExpression()), !dbg !9897
  tail call fastcc void @maybe_with_size_expr(%union.tree_node** %arg_p) #7, !dbg !9901
  %3 = load %union.tree_node*, %union.tree_node** %arg_p, align 8, !dbg !9902
  tail call void @protected_set_expr_location(%union.tree_node* %3, i32 %call_location) #6, !dbg !9903
  %call1 = tail call i32 @gimplify_expr(%union.tree_node** %arg_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull %is_gimple_val.is_gimple_lvalue, i32 %.) #7, !dbg !9904
  ret i32 %call1, !dbg !9905
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @call_expr_flags(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_call_from_tree(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_with_size_expr(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !9906 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !9908, metadata !DIExpression()), !dbg !9912
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !9913
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9909, metadata !DIExpression()), !dbg !9912
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9914
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9914
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9910, metadata !DIExpression()), !dbg !9912
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9915
  %bf.load = load i64, i64* %2, align 8, !dbg !9915
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9917
  %cmp = icmp eq i64 %bf.cast1, 150, !dbg !9917
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9918
  %cmp2 = icmp eq %union.tree_node* %1, %3, !dbg !9919
  %or.cond = or i1 %cmp, %cmp2, !dbg !9920
  br i1 %or.cond, label %cleanup.cont, label %if.end, !dbg !9920

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9921
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9921
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9911, metadata !DIExpression()), !dbg !9912
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !9922
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false4, !dbg !9924

lor.lhs.false4:                                   ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9925
  %bf.load6 = load i64, i64* %6, align 8, !dbg !9925
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !9926
  %cmp9 = icmp eq i64 %bf.cast82, 23, !dbg !9926
  br i1 %cmp9, label %cleanup.cont, label %if.end11, !dbg !9927

if.end11:                                         ; preds = %lor.lhs.false4
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* nonnull %5) #7, !dbg !9928
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9911, metadata !DIExpression()), !dbg !9912
  %cmp12 = icmp eq %union.tree_node* %call, null, !dbg !9929
  br i1 %cmp12, label %cond.end, label %lor.lhs.false13, !dbg !9929

lor.lhs.false13:                                  ; preds = %if.end11
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9929
  %bf.load15 = load i64, i64* %7, align 8, !dbg !9929
  %bf.cast173 = and i64 %bf.load15, 131072, !dbg !9929
  %tobool18 = icmp eq i64 %bf.cast173, 0, !dbg !9929
  br i1 %tobool18, label %cond.false, label %cond.end, !dbg !9929

cond.false:                                       ; preds = %lor.lhs.false13
  %call19 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %call, %union.tree_node* %0) #6, !dbg !9929
  br label %cond.end, !dbg !9929

cond.end:                                         ; preds = %lor.lhs.false13, %if.end11, %cond.false
  %cond = phi %union.tree_node* [ %call19, %cond.false ], [ %call, %lor.lhs.false13 ], [ null, %if.end11 ], !dbg !9929
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !9911, metadata !DIExpression()), !dbg !9912
  %call20 = tail call %union.tree_node* @build2_stat(i32 150, %union.tree_node* %1, %union.tree_node* %0, %union.tree_node* %cond) #6, !dbg !9930
  store %union.tree_node* %call20, %union.tree_node** %expr_p, align 8, !dbg !9931
  br label %cleanup.cont, !dbg !9932

cleanup.cont:                                     ; preds = %if.end, %cond.end, %entry, %lor.lhs.false4
  ret void, !dbg !9932
}

declare dso_local void @protected_set_expr_location(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_modify_expr_rhs(%union.tree_node** %expr_p, %union.tree_node** %from_p, %union.tree_node** %to_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !9933 {
entry:
  %result = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !9937, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %union.tree_node** %from_p, metadata !9938, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %union.tree_node** %to_p, metadata !9939, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !9940, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !9941, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !9942, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9968
  %0 = bitcast %union.tree_node** %from_p to i64**, !dbg !9968
  %1 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !9969
  %2 = bitcast %union.tree_node** %to_p to i64**, !dbg !9970
  %3 = bitcast %union.tree_node** %to_p to %struct.tree_common**, !dbg !9973
  %4 = bitcast %union.tree_node** %expr_p to i64**, !dbg !9975
  %5 = bitcast %union.tree_node** %from_p to i64*, !dbg !9977
  br label %while.cond, !dbg !9978

while.cond:                                       ; preds = %sw.epilog, %entry
  %ret.0 = phi i32 [ 0, %entry ], [ %ret.5, %sw.epilog ], !dbg !9968
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !9943, metadata !DIExpression()), !dbg !9968
  %cmp = icmp eq i32 %ret.0, -1, !dbg !9979
  br i1 %cmp, label %cleanup247.loopexit, label %while.body, !dbg !9978

while.body:                                       ; preds = %while.cond
  %6 = load i64*, i64** %0, align 8, !dbg !9980
  %bf.load = load i64, i64* %6, align 8, !dbg !9980
  %7 = trunc i64 %bf.load to i16, !dbg !9980
  %8 = bitcast i64* %6 to %union.tree_node*, !dbg !9981
  %9 = ptrtoint i64* %6 to i64, !dbg !9981
  switch i16 %7, label %sw.epilog [
    i16 32, label %sw.bb
    i16 47, label %sw.bb34
    i16 55, label %sw.bb41
    i16 52, label %sw.bb55
    i16 51, label %sw.bb57
    i16 56, label %sw.bb59
    i16 59, label %sw.bb116
    i16 61, label %sw.bb189
    i16 58, label %sw.bb189
    i16 147, label %sw.bb189
    i16 119, label %sw.bb207
  ], !dbg !9981

sw.bb:                                            ; preds = %while.body
  %initial = getelementptr inbounds i64, i64* %6, i64 10, !dbg !9982
  %10 = bitcast i64* %initial to %union.tree_node**, !dbg !9982
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !9982
  %tobool = icmp eq %union.tree_node* %11, null, !dbg !9982
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9983
  br i1 %tobool, label %if.end33, label %land.lhs.true, !dbg !9983

land.lhs.true:                                    ; preds = %sw.bb
  %bf.cast48 = and i64 %bf.load, 1048576, !dbg !9984
  %tobool5 = icmp eq i64 %bf.cast48, 0, !dbg !9984
  br i1 %tobool5, label %if.end33, label %land.lhs.true6, !dbg !9985

land.lhs.true6:                                   ; preds = %land.lhs.true
  %bf.cast119 = and i64 %bf.load, 524288, !dbg !9986
  %tobool12 = icmp eq i64 %bf.cast119, 0, !dbg !9986
  br i1 %tobool12, label %land.lhs.true13, label %if.end33, !dbg !9987

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %13 = load i64*, i64** %2, align 8, !dbg !9988
  %bf.load15 = load i64, i64* %13, align 8, !dbg !9988
  %bf.cast1810 = and i64 %bf.load15, 524288, !dbg !9988
  %tobool19 = icmp eq i64 %bf.cast1810, 0, !dbg !9988
  br i1 %tobool19, label %land.lhs.true20, label %if.end33, !dbg !9989

land.lhs.true20:                                  ; preds = %land.lhs.true13
  %bf.load24 = load i64, i64* %12, align 8, !dbg !9990
  %bf.cast2611 = and i64 %bf.load24, 65535, !dbg !9991
  %cmp27 = icmp eq i64 %bf.cast2611, 51, !dbg !9991
  br i1 %cmp27, label %if.then, label %if.end33, !dbg !9992

if.then:                                          ; preds = %land.lhs.true20
  %initial29 = getelementptr inbounds i64, i64* %6, i64 10, !dbg !9993
  %14 = bitcast i64* %initial29 to %union.tree_node**, !dbg !9993
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !9993
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %15) #7, !dbg !9994
  store %union.tree_node* %call, %union.tree_node** %from_p, align 8, !dbg !9995
  %call30 = tail call fastcc i32 @gimplify_init_constructor(%union.tree_node** %expr_p, %struct.gimple_seq_d** null, %struct.gimple_seq_d** null, i8 zeroext 0, i8 zeroext 1) #7, !dbg !9996
  call void @llvm.dbg.value(metadata i32 %call30, metadata !9943, metadata !DIExpression()), !dbg !9968
  %cmp31 = icmp eq i32 %call30, -2, !dbg !9997
  br i1 %cmp31, label %if.then32, label %cleanup, !dbg !9999

if.then32:                                        ; preds = %if.then
  store i64 %9, i64* %5, align 8, !dbg !10000
  br label %cleanup, !dbg !10002

cleanup:                                          ; preds = %if.then, %if.then32
  %ret.1 = phi i32 [ -2, %if.then32 ], [ 0, %if.then ], !dbg !9977
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then32 ], [ false, %if.then ]
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !9943, metadata !DIExpression()), !dbg !9968
  br i1 %cleanup.dest.slot.0, label %if.end33, label %sw.epilog

if.end33:                                         ; preds = %land.lhs.true13, %land.lhs.true6, %land.lhs.true, %sw.bb, %cleanup, %land.lhs.true20
  call void @llvm.dbg.value(metadata i32 -1, metadata !9943, metadata !DIExpression()), !dbg !9968
  br label %sw.epilog, !dbg !10003

sw.bb34:                                          ; preds = %while.body
  %arrayidx = getelementptr inbounds i64, i64* %6, i64 5, !dbg !10004
  %16 = bitcast i64* %arrayidx to %union.tree_node**, !dbg !10004
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !10004
  %call35 = tail call fastcc %union.tree_node* @gimple_fold_indirect_ref_rhs(%union.tree_node* %17) #7, !dbg !10005
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !9948, metadata !DIExpression()), !dbg !10006
  %tobool36 = icmp eq %union.tree_node* %call35, null, !dbg !10007
  br i1 %tobool36, label %sw.epilog, label %if.then37, !dbg !10009

if.then37:                                        ; preds = %sw.bb34
  store %union.tree_node* %call35, %union.tree_node** %from_p, align 8, !dbg !10010
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9968
  br label %sw.epilog, !dbg !10012

sw.bb41:                                          ; preds = %while.body
  %arrayidx44 = getelementptr inbounds i64, i64* %6, i64 6, !dbg !10013
  %18 = bitcast i64* %arrayidx44 to %union.tree_node**, !dbg !10013
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !10013
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !9950, metadata !DIExpression()), !dbg !10014
  %tobool45 = icmp eq %union.tree_node* %19, null, !dbg !10015
  br i1 %tobool45, label %sw.epilog, label %land.lhs.true46, !dbg !10017

land.lhs.true46:                                  ; preds = %sw.bb41
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10018
  %20 = bitcast %union.tree_node** %type to i64**, !dbg !10018
  %21 = load i64*, i64** %20, align 8, !dbg !10018
  %bf.load48 = load i64, i64* %21, align 8, !dbg !10018
  %bf.cast507 = and i64 %bf.load48, 65535, !dbg !10018
  %cmp51 = icmp eq i64 %bf.cast507, 19, !dbg !10018
  br i1 %cmp51, label %sw.epilog, label %if.then52, !dbg !10019

if.then52:                                        ; preds = %land.lhs.true46
  store %union.tree_node* %19, %union.tree_node** %from_p, align 8, !dbg !10020
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9968
  br label %sw.epilog, !dbg !10022

sw.bb55:                                          ; preds = %while.body
  %call56 = tail call fastcc i32 @gimplify_compound_expr(%union.tree_node** %from_p, %struct.gimple_seq_d** %pre_p, i8 zeroext 1) #7, !dbg !10023
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9968
  br label %sw.epilog, !dbg !10024

sw.bb57:                                          ; preds = %while.body
  %call58 = tail call fastcc i32 @gimplify_init_constructor(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value, i8 zeroext 0) #7, !dbg !10025
  br label %cleanup247, !dbg !10026

sw.bb59:                                          ; preds = %while.body
  %type61 = getelementptr inbounds i64, i64* %6, i64 2, !dbg !10027
  %22 = bitcast i64* %type61 to %union.tree_node**, !dbg !10027
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !10027
  %call62 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %23) #6, !dbg !10028
  %tobool63 = icmp eq i8 %call62, 0, !dbg !10028
  br i1 %tobool63, label %if.then64, label %sw.epilog, !dbg !10029

if.then64:                                        ; preds = %sw.bb59
  %24 = load i64*, i64** %4, align 8, !dbg !10030
  %bf.load66 = load i64, i64* %24, align 8, !dbg !10030
  %25 = trunc i64 %bf.load66 to i32, !dbg !10030
  %bf.cast68 = and i32 %25, 65535, !dbg !10030
  call void @llvm.dbg.value(metadata i32 %bf.cast68, metadata !9952, metadata !DIExpression()), !dbg !10031
  %26 = load %union.tree_node*, %union.tree_node** %from_p, align 8, !dbg !10032
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !9955, metadata !DIExpression()), !dbg !10031
  %27 = bitcast %union.tree_node** %result to i8*, !dbg !10033
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8, !dbg !10033
  %28 = bitcast %union.tree_node** %to_p to i64*, !dbg !10034
  %29 = load i64, i64* %28, align 8, !dbg !10034
  %30 = bitcast %union.tree_node** %result to i64*, !dbg !10035
  store i64 %29, i64* %30, align 8, !dbg !10035
  call void @llvm.dbg.value(metadata %union.tree_node** %result, metadata !9956, metadata !DIExpression(DW_OP_deref)), !dbg !10031
  %call69 = call i32 @gimplify_expr(%union.tree_node** nonnull %result, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %call69, metadata !9943, metadata !DIExpression()), !dbg !9968
  %cmp70 = icmp eq i32 %call69, -2, !dbg !10037
  %spec.select = select i1 %cmp70, i32 -2, i32 0, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9943, metadata !DIExpression()), !dbg !9968
  %operands74 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10040
  %arrayidx75 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands74, i64 1, !dbg !10040
  %31 = bitcast %union.tree_node** %arrayidx75 to %struct.tree_common**, !dbg !10040
  %32 = load %struct.tree_common*, %struct.tree_common** %31, align 8, !dbg !10040
  %type77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %32, i64 0, i32 2, !dbg !10040
  %33 = load %union.tree_node*, %union.tree_node** %type77, align 8, !dbg !10040
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10042
  %cmp78 = icmp eq %union.tree_node* %33, %34, !dbg !10043
  br i1 %cmp78, label %if.end87, label %if.then79, !dbg !10044

if.then79:                                        ; preds = %if.then64
  %35 = bitcast %struct.tree_common* %32 to %union.tree_node*, !dbg !10044
  %36 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !9956, metadata !DIExpression()), !dbg !10031
  %call83 = call %union.tree_node* @build2_stat(i32 %bf.cast68, %union.tree_node* %34, %union.tree_node* %36, %union.tree_node* %35) #6, !dbg !10045
  store %union.tree_node* %call83, %union.tree_node** %arrayidx75, align 8, !dbg !10046
  %.pre13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10047
  br label %if.end87, !dbg !10049

if.end87:                                         ; preds = %if.then64, %if.then79
  %.in = phi %union.tree_node* [ %34, %if.then64 ], [ %.pre13, %if.then79 ]
  %37 = phi %union.tree_node* [ %33, %if.then64 ], [ %.pre13, %if.then79 ], !dbg !10047
  %38 = ptrtoint %union.tree_node* %.in to i64, !dbg !10031
  %arrayidx90 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands74, i64 2, !dbg !10050
  %39 = bitcast %union.tree_node** %arrayidx90 to %struct.tree_common**, !dbg !10050
  %40 = load %struct.tree_common*, %struct.tree_common** %39, align 8, !dbg !10050
  %type92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i64 0, i32 2, !dbg !10050
  %41 = load %union.tree_node*, %union.tree_node** %type92, align 8, !dbg !10050
  %cmp93 = icmp eq %union.tree_node* %41, %37, !dbg !10051
  br i1 %cmp93, label %if.end103, label %if.then94, !dbg !10052

if.then94:                                        ; preds = %if.end87
  %42 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !10053
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !9956, metadata !DIExpression()), !dbg !10031
  %call95 = call %union.tree_node* @unshare_expr(%union.tree_node* %42) #7, !dbg !10053
  %43 = load %union.tree_node*, %union.tree_node** %arrayidx90, align 8, !dbg !10053
  %call99 = call %union.tree_node* @build2_stat(i32 %bf.cast68, %union.tree_node* %37, %union.tree_node* %call95, %union.tree_node* %43) #6, !dbg !10053
  store %union.tree_node* %call99, %union.tree_node** %arrayidx90, align 8, !dbg !10054
  %.pre14 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !10055
  br label %if.end103, !dbg !10056

if.end103:                                        ; preds = %if.end87, %if.then94
  %44 = phi i64 [ %38, %if.end87 ], [ %.pre14, %if.then94 ], !dbg !10055
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10057
  %45 = bitcast %union.tree_node** %type105 to i64*, !dbg !10058
  store i64 %44, i64* %45, align 8, !dbg !10058
  call void @recalculate_side_effects(%union.tree_node* %26) #6, !dbg !10059
  %tobool106 = icmp eq i8 %want_value, 0, !dbg !10060
  br i1 %tobool106, label %if.else109, label %if.then107, !dbg !10062

if.then107:                                       ; preds = %if.end103
  call void @gimplify_and_add(%union.tree_node* %26, %struct.gimple_seq_d** %pre_p) #7, !dbg !10063
  %46 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !10065
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !9956, metadata !DIExpression()), !dbg !10031
  %call108 = call %union.tree_node* @unshare_expr(%union.tree_node* %46) #7, !dbg !10066
  br label %if.end110, !dbg !10067

if.else109:                                       ; preds = %if.end103
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then107
  %storemerge = phi %union.tree_node* [ %26, %if.else109 ], [ %call108, %if.then107 ], !dbg !10068
  store %union.tree_node* %storemerge, %union.tree_node** %expr_p, align 8, !dbg !10068
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8, !dbg !10069
  br label %cleanup247

sw.bb116:                                         ; preds = %while.body
  %bf.cast1213 = and i64 %bf.load, 268435456, !dbg !10070
  %tobool122 = icmp eq i64 %bf.cast1213, 0, !dbg !10070
  br i1 %tobool122, label %land.lhs.true123, label %sw.epilog, !dbg !10071

land.lhs.true123:                                 ; preds = %sw.bb116
  %call124 = tail call i32 @aggregate_value_p(%union.tree_node* %8, %union.tree_node* %8) #6, !dbg !10072
  %tobool125 = icmp eq i32 %call124, 0, !dbg !10072
  br i1 %tobool125, label %sw.epilog, label %if.then126, !dbg !10073

if.then126:                                       ; preds = %land.lhs.true123
  %47 = load %union.tree_node*, %union.tree_node** %to_p, align 8, !dbg !10074
  %call127 = tail call i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %47) #7, !dbg !10075
  %48 = load %union.tree_node*, %union.tree_node** %from_p, align 8, !dbg !10076
  %call128 = tail call zeroext i8 %call127(%union.tree_node* %48) #6, !dbg !10077
  %tobool129 = icmp eq i8 %call128, 0, !dbg !10077
  br i1 %tobool129, label %if.end181, label %if.else131, !dbg !10078

if.else131:                                       ; preds = %if.then126
  %49 = load i64*, i64** %2, align 8, !dbg !10079
  %bf.load133 = load i64, i64* %49, align 8, !dbg !10079
  %bf.cast1354 = and i64 %bf.load133, 65535, !dbg !10080
  %cmp136 = icmp eq i64 %bf.cast1354, 36, !dbg !10080
  %50 = bitcast i64* %49 to %union.tree_node*, !dbg !10081
  %51 = bitcast i64* %49 to %struct.tree_common*, !dbg !10081
  br i1 %cmp136, label %land.lhs.true137, label %if.else143, !dbg !10081

land.lhs.true137:                                 ; preds = %if.else131
  %name = getelementptr inbounds i64, i64* %49, i64 4, !dbg !10082
  %52 = bitcast i64* %name to %union.tree_node**, !dbg !10082
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !10082
  %cmp138 = icmp eq %union.tree_node* %53, null, !dbg !10083
  br i1 %cmp138, label %land.lhs.true139, label %if.else143, !dbg !10084

land.lhs.true139:                                 ; preds = %land.lhs.true137
  %call140 = tail call zeroext i8 @needs_to_live_in_memory(%union.tree_node* %50) #6, !dbg !10085
  %tobool141 = icmp eq i8 %call140, 0, !dbg !10085
  br i1 %tobool141, label %land.lhs.true139.if.else143_crit_edge, label %if.end181, !dbg !10086

land.lhs.true139.if.else143_crit_edge:            ; preds = %land.lhs.true139
  %.pre = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !10087
  br label %if.else143, !dbg !10086

if.else143:                                       ; preds = %land.lhs.true139.if.else143_crit_edge, %land.lhs.true137, %if.else131
  %54 = phi %struct.tree_common* [ %.pre, %land.lhs.true139.if.else143_crit_edge ], [ %51, %land.lhs.true137 ], [ %51, %if.else131 ], !dbg !10087
  %type145 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %54, i64 0, i32 2, !dbg !10087
  %55 = load %union.tree_node*, %union.tree_node** %type145, align 8, !dbg !10087
  %call146 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %55) #6, !dbg !10088
  %tobool148 = icmp eq i8 %call146, 0, !dbg !10088
  br i1 %tobool148, label %lor.lhs.false, label %if.end181, !dbg !10089

lor.lhs.false:                                    ; preds = %if.else143
  %56 = load i64*, i64** %2, align 8, !dbg !10090
  %bf.load150 = load i64, i64* %56, align 8, !dbg !10090
  %bf.cast152 = and i64 %bf.load150, 65535, !dbg !10090
  %arrayidx153 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast152, !dbg !10090
  %57 = load i32, i32* %arrayidx153, align 4, !dbg !10090
  %cmp154 = icmp eq i32 %57, 3, !dbg !10090
  %58 = bitcast i64* %56 to %union.tree_node*, !dbg !10091
  br i1 %cmp154, label %land.lhs.true156, label %if.else164, !dbg !10091

land.lhs.true156:                                 ; preds = %lor.lhs.false
  %decl_flag_0 = getelementptr inbounds i64, i64* %56, i64 7, !dbg !10092
  %bf.load158 = load i64, i64* %decl_flag_0, align 8, !dbg !10092
  %bf.cast1616 = and i64 %bf.load158, 16777216, !dbg !10092
  %tobool162 = icmp eq i64 %bf.cast1616, 0, !dbg !10092
  br i1 %tobool162, label %if.else164, label %if.end181, !dbg !10093

if.else164:                                       ; preds = %land.lhs.true156, %lor.lhs.false
  %59 = load i64*, i64** %4, align 8, !dbg !10094
  %bf.load166 = load i64, i64* %59, align 8, !dbg !10094
  %bf.cast1685 = and i64 %bf.load166, 65535, !dbg !10095
  %cmp169 = icmp eq i64 %bf.cast1685, 54, !dbg !10095
  br i1 %cmp169, label %if.end181, label %if.else172, !dbg !10096

if.else172:                                       ; preds = %if.else164
  %call173 = tail call zeroext i8 @is_gimple_non_addressable(%union.tree_node* %58) #6, !dbg !10097
  %tobool174 = icmp ne i8 %call173, 0, !dbg !10097
  %. = zext i1 %tobool174 to i8
  call void @llvm.dbg.value(metadata i8 %., metadata !9957, metadata !DIExpression()), !dbg !10099
  br label %if.end181

if.end181:                                        ; preds = %land.lhs.true139, %land.lhs.true156, %if.else143, %if.then126, %if.else172, %if.else164
  %use_target.4 = phi i8 [ 0, %if.then126 ], [ 1, %land.lhs.true139 ], [ 0, %land.lhs.true156 ], [ 0, %if.else143 ], [ %., %if.else172 ], [ 1, %if.else164 ], !dbg !10100
  call void @llvm.dbg.value(metadata i8 %use_target.4, metadata !9957, metadata !DIExpression()), !dbg !10099
  %tobool182 = icmp eq i8 %use_target.4, 0, !dbg !10101
  br i1 %tobool182, label %sw.epilog, label %if.then183, !dbg !10103

if.then183:                                       ; preds = %if.end181
  %60 = load i64*, i64** %0, align 8, !dbg !10104
  %bf.load185 = load i64, i64* %60, align 8, !dbg !10106
  %bf.set = or i64 %bf.load185, 268435456, !dbg !10106
  store i64 %bf.set, i64* %60, align 8, !dbg !10106
  %61 = load %union.tree_node*, %union.tree_node** %to_p, align 8, !dbg !10107
  tail call void @mark_addressable(%union.tree_node* %61) #7, !dbg !10108
  br label %sw.epilog, !dbg !10109

sw.bb189:                                         ; preds = %while.body, %while.body, %while.body
  %.lcssa20 = phi i64* [ %6, %while.body ], [ %6, %while.body ], [ %6, %while.body ], !dbg !9980
  %.lcssa17 = phi %union.tree_node* [ %8, %while.body ], [ %8, %while.body ], [ %8, %while.body ], !dbg !9981
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa17, metadata !9960, metadata !DIExpression()), !dbg !10110
  %call191 = tail call i32 @gimplify_expr(%union.tree_node** %to_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_min_lval, i32 2) #7, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %call191, metadata !9943, metadata !DIExpression()), !dbg !9968
  %62 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !10112
  %call196 = tail call %union.tree_node* @voidify_wrapper_expr(%union.tree_node* %.lcssa17, %union.tree_node* %62) #7, !dbg !10113
  call void @llvm.dbg.value(metadata %union.tree_node* %call196, metadata !9962, metadata !DIExpression()), !dbg !10110
  %63 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !10114
  %cmp197 = icmp eq %union.tree_node* %call196, %63, !dbg !10114
  br i1 %cmp197, label %cond.end, label %cond.true, !dbg !10114

cond.true:                                        ; preds = %sw.bb189
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4301, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10114
  br label %cond.end, !dbg !10114

cond.end:                                         ; preds = %sw.bb189, %cond.true
  %tobool200 = icmp eq i8 %want_value, 0, !dbg !10115
  br i1 %tobool200, label %if.else203, label %if.then201, !dbg !10117

if.then201:                                       ; preds = %cond.end
  tail call void @gimplify_and_add(%union.tree_node* %.lcssa17, %struct.gimple_seq_d** %pre_p) #7, !dbg !10118
  %64 = load %union.tree_node*, %union.tree_node** %to_p, align 8, !dbg !10120
  %call202 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %64) #7, !dbg !10121
  store %union.tree_node* %call202, %union.tree_node** %expr_p, align 8, !dbg !10122
  br label %cleanup247, !dbg !10123

if.else203:                                       ; preds = %cond.end
  %65 = bitcast %union.tree_node** %expr_p to i64**, !dbg !10124
  store i64* %.lcssa20, i64** %65, align 8, !dbg !10124
  br label %cleanup247

sw.bb207:                                         ; preds = %while.body
  %66 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !10125
  %arrayidx210 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %66, i64 0, i32 3, i64 1, !dbg !10125
  %67 = load %union.tree_node*, %union.tree_node** %arrayidx210, align 8, !dbg !10125
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !9963, metadata !DIExpression()), !dbg !9969
  %operands212 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10126
  %68 = bitcast %union.tree_node** %operands212 to %struct.tree_exp**, !dbg !10126
  %69 = load %struct.tree_exp*, %struct.tree_exp** %68, align 8, !dbg !10126
  %arrayidx216 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %69, i64 0, i32 3, i64 0, !dbg !10127
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx216, align 8, !dbg !10127
  call void @llvm.dbg.value(metadata %union.tree_node* %70, metadata !9966, metadata !DIExpression()), !dbg !9969
  %initial219 = getelementptr inbounds %union.tree_node, %union.tree_node* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10128
  %71 = load %union.tree_node*, %union.tree_node** %initial219, align 8, !dbg !10128
  call void @llvm.dbg.value(metadata %union.tree_node* %71, metadata !9967, metadata !DIExpression()), !dbg !9969
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10129
  %bf.load221 = load i64, i64* %72, align 8, !dbg !10129
  %bf.cast2241 = and i64 %bf.load221, 262144, !dbg !10129
  %tobool225 = icmp eq i64 %bf.cast2241, 0, !dbg !10129
  %73 = bitcast %struct.tree_exp* %66 to %union.tree_node*, !dbg !10131
  br i1 %tobool225, label %land.lhs.true226, label %cleanup241, !dbg !10131

land.lhs.true226:                                 ; preds = %sw.bb207
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10132
  %bf.load228 = load i64, i64* %74, align 8, !dbg !10132
  %bf.cast2312 = and i64 %bf.load228, 262144, !dbg !10132
  %tobool232 = icmp eq i64 %bf.cast2312, 0, !dbg !10132
  %tobool234 = icmp ne %union.tree_node* %71, null, !dbg !10133
  %or.cond = and i1 %tobool232, %tobool234, !dbg !10134
  br i1 %or.cond, label %if.then235, label %cleanup241, !dbg !10134

if.then235:                                       ; preds = %land.lhs.true226
  %call236 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %73) #6, !dbg !10135
  store %union.tree_node* %call236, %union.tree_node** %expr_p, align 8, !dbg !10137
  %operands238 = getelementptr inbounds %union.tree_node, %union.tree_node* %call236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10138
  %arrayidx239 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands238, i64 1, !dbg !10138
  store %union.tree_node* %71, %union.tree_node** %arrayidx239, align 8, !dbg !10139
  br label %cleanup241, !dbg !10140

cleanup241:                                       ; preds = %sw.bb207, %land.lhs.true226, %if.then235
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then235 ], [ true, %land.lhs.true226 ], [ true, %sw.bb207 ]
  br i1 %cleanup.dest.slot.1, label %sw.epilog, label %cleanup247.loopexit

sw.epilog:                                        ; preds = %sw.bb34, %sw.bb41, %sw.bb59, %if.end181, %land.lhs.true123, %sw.bb116, %while.body, %cleanup241, %if.then183, %if.then52, %land.lhs.true46, %if.then37, %cleanup, %sw.bb55, %if.end33
  %ret.5 = phi i32 [ 0, %sw.bb55 ], [ -1, %if.end33 ], [ %ret.1, %cleanup ], [ 0, %if.then37 ], [ -1, %sw.bb34 ], [ 0, %if.then52 ], [ -1, %land.lhs.true46 ], [ -1, %sw.bb41 ], [ -1, %sw.bb59 ], [ -1, %if.end181 ], [ -1, %if.then183 ], [ -1, %land.lhs.true123 ], [ -1, %sw.bb116 ], [ -1, %cleanup241 ], [ -1, %while.body ], !dbg !10141
  call void @llvm.dbg.value(metadata i32 %ret.5, metadata !9943, metadata !DIExpression()), !dbg !9968
  br label %while.cond, !dbg !9978, !llvm.loop !10142

cleanup247.loopexit:                              ; preds = %cleanup241, %while.cond
  %retval.4.ph = phi i32 [ -1, %while.cond ], [ 0, %cleanup241 ]
  br label %cleanup247, !dbg !10144

cleanup247:                                       ; preds = %cleanup247.loopexit, %if.then201, %if.else203, %if.end110, %sw.bb57
  %retval.4 = phi i32 [ %spec.select, %if.end110 ], [ %call58, %sw.bb57 ], [ 0, %if.else203 ], [ 0, %if.then201 ], [ %retval.4.ph, %cleanup247.loopexit ]
  ret i32 %retval.4, !dbg !10144
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @zero_sized_type(%union.tree_node* %type) unnamed_addr #5 !dbg !10145 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10147, metadata !DIExpression()), !dbg !10148
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10149
  %bf.load = load i64, i64* %0, align 8, !dbg !10149
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10149
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !10149
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !10149

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 16, !dbg !10149
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !10149

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 17, !dbg !10149
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !10149

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 18, !dbg !10149
  br i1 %cmp17, label %land.lhs.true, label %if.end, !dbg !10151

land.lhs.true:                                    ; preds = %lor.lhs.false12, %lor.lhs.false6, %lor.lhs.false, %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10152
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !10152
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !10152
  br i1 %tobool, label %if.end, label %land.lhs.true19, !dbg !10153

land.lhs.true19:                                  ; preds = %land.lhs.true
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %2) #6, !dbg !10154
  %tobool22 = icmp eq i32 %call, 0, !dbg !10154
  br i1 %tobool22, label %if.end, label %return, !dbg !10155

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true, %lor.lhs.false12
  br label %return, !dbg !10156

return:                                           ; preds = %land.lhs.true19, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true19 ], !dbg !10148
  ret i8 %retval.0, !dbg !10157
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_modify_expr_to_memset(%union.tree_node** %expr_p, %union.tree_node* %size, i8 zeroext %want_value, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !10158 {
entry:
  %to_ptr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !10162, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !10163, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !10164, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !10165, metadata !DIExpression()), !dbg !10172
  %0 = bitcast %union.tree_node** %to_ptr to i8*, !dbg !10173
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10173
  %1 = bitcast %union.tree_node** %expr_p to i64**, !dbg !10174
  %2 = load i64*, i64** %1, align 8, !dbg !10174
  %bf.load = load i64, i64* %2, align 8, !dbg !10174
  %bf.cast = and i64 %bf.load, 65535, !dbg !10174
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10174
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10174
  %cmp = icmp ugt i32 %3, 3, !dbg !10174
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !10174

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %3, 11, !dbg !10174
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !10174

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %2, i64 3, !dbg !10174
  %4 = bitcast i64* %locus to i32*, !dbg !10174
  %5 = load i32, i32* %4, align 8, !dbg !10174
  br label %cond.end, !dbg !10174

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10174
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10171, metadata !DIExpression()), !dbg !10172
  %6 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !10175
  %arrayidx9 = getelementptr inbounds i64, i64* %2, i64 6, !dbg !10175
  %7 = bitcast i64* %arrayidx9 to %union.tree_node**, !dbg !10175
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !10175
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !10167, metadata !DIExpression()), !dbg !10172
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10176
  %bf.load11 = load i64, i64* %9, align 8, !dbg !10176
  %bf.cast131 = and i64 %bf.load11, 65535, !dbg !10178
  %cmp14 = icmp eq i64 %bf.cast131, 150, !dbg !10178
  br i1 %cmp14, label %if.then, label %if.end, !dbg !10179

if.then:                                          ; preds = %cond.end
  %operands16 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10180
  %10 = load %union.tree_node*, %union.tree_node** %operands16, align 8, !dbg !10180
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !10167, metadata !DIExpression()), !dbg !10172
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10172
  %bf.load19.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !10181
  br label %if.end, !dbg !10182

if.end:                                           ; preds = %if.then, %cond.end
  %bf.load19 = phi i64 [ %bf.load19.pre, %if.then ], [ %bf.load11, %cond.end ], !dbg !10181
  %from.0 = phi %union.tree_node* [ %10, %if.then ], [ %8, %cond.end ], !dbg !10172
  call void @llvm.dbg.value(metadata %union.tree_node* %from.0, metadata !10167, metadata !DIExpression()), !dbg !10172
  %bf.cast212 = and i64 %bf.load19, 65535, !dbg !10181
  %cmp22 = icmp eq i64 %bf.cast212, 51, !dbg !10181
  br i1 %cmp22, label %land.lhs.true23, label %cond.true32, !dbg !10181

land.lhs.true23:                                  ; preds = %if.end
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %from.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10181
  %11 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !10181
  %12 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %11, align 8, !dbg !10181
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %12, null, !dbg !10181
  br i1 %tobool, label %cond.end29, label %cond.true24, !dbg !10181

cond.true24:                                      ; preds = %land.lhs.true23
  %base27 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %12, i64 0, i32 0, !dbg !10181
  br label %cond.end29, !dbg !10181

cond.end29:                                       ; preds = %land.lhs.true23, %cond.true24
  %cond30 = phi %struct.VEC_constructor_elt_base* [ %base27, %cond.true24 ], [ null, %land.lhs.true23 ], !dbg !10181
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond30) #7, !dbg !10181
  %cmp31 = icmp eq i32 %call, 0, !dbg !10181
  br i1 %cmp31, label %cond.end34, label %cond.true32, !dbg !10181

cond.true32:                                      ; preds = %cond.end29, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10181
  br label %cond.end34, !dbg !10181

cond.end34:                                       ; preds = %cond.end29, %cond.true32
  %13 = load %struct.tree_exp*, %struct.tree_exp** %6, align 8, !dbg !10183
  %arrayidx38 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %13, i64 0, i32 3, i64 0, !dbg !10183
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !10183
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10168, metadata !DIExpression()), !dbg !10172
  %call39 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %14) #6, !dbg !10184
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !10169, metadata !DIExpression()), !dbg !10172
  store %union.tree_node* %call39, %union.tree_node** %to_ptr, align 8, !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node** %to_ptr, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10172
  %call40 = call fastcc i32 @gimplify_arg(%union.tree_node** nonnull %to_ptr, %struct.gimple_seq_d** %seq_p, i32 %cond) #7, !dbg !10186
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 333), align 8, !dbg !10187
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !10166, metadata !DIExpression()), !dbg !10172
  %16 = load %union.tree_node*, %union.tree_node** %to_ptr, align 8, !dbg !10188
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !10169, metadata !DIExpression()), !dbg !10172
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10189
  %call41 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %15, i32 3, %union.tree_node* %16, %union.tree_node* %17, %union.tree_node* %size) #6, !dbg !10190
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call41, metadata !10170, metadata !DIExpression()), !dbg !10172
  %tobool42 = icmp eq i8 %want_value, 0, !dbg !10191
  br i1 %tobool42, label %if.end48, label %if.then43, !dbg !10193

if.then43:                                        ; preds = %cond.end34
  %18 = bitcast %union.tree_node** %to_ptr to %struct.tree_common**, !dbg !10194
  %19 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !10194
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !10194
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10194
  %call44 = call %union.tree_node* @create_tmp_var(%union.tree_node* %20, i8* null) #7, !dbg !10196
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !10166, metadata !DIExpression()), !dbg !10172
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call41, %union.tree_node* %call44) #7, !dbg !10197
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %seq_p, %union.gimple_statement_d* %call41) #7, !dbg !10198
  %type46 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10199
  %21 = load %union.tree_node*, %union.tree_node** %type46, align 8, !dbg !10199
  %call47 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %21, %union.tree_node* %call44) #6, !dbg !10199
  br label %cleanup, !dbg !10200

if.end48:                                         ; preds = %cond.end34
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %seq_p, %union.gimple_statement_d* %call41) #7, !dbg !10201
  br label %cleanup, !dbg !10202

cleanup:                                          ; preds = %if.end48, %if.then43
  %storemerge = phi %union.tree_node* [ null, %if.end48 ], [ %call47, %if.then43 ], !dbg !10172
  store %union.tree_node* %storemerge, %union.tree_node** %expr_p, align 8, !dbg !10172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10203
  ret i32 undef, !dbg !10203
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_modify_expr_to_memcpy(%union.tree_node** %expr_p, %union.tree_node* %size, i8 zeroext %want_value, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !10204 {
entry:
  %to_ptr = alloca %union.tree_node*, align 8
  %from = alloca %union.tree_node*, align 8
  %from_ptr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !10206, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !10207, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !10208, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !10209, metadata !DIExpression()), !dbg !10217
  %0 = bitcast %union.tree_node** %to_ptr to i8*, !dbg !10218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10218
  %1 = bitcast %union.tree_node** %from to i8*, !dbg !10218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10218
  %2 = bitcast %union.tree_node** %from_ptr to i8*, !dbg !10218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10218
  %3 = bitcast %union.tree_node** %expr_p to i64**, !dbg !10219
  %4 = load i64*, i64** %3, align 8, !dbg !10219
  %bf.load = load i64, i64* %4, align 8, !dbg !10219
  %bf.cast = and i64 %bf.load, 65535, !dbg !10219
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10219
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10219
  %cmp = icmp ugt i32 %5, 3, !dbg !10219
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !10219

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %5, 11, !dbg !10219
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !10219

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %4, i64 3, !dbg !10219
  %6 = bitcast i64* %locus to i32*, !dbg !10219
  %7 = load i32, i32* %6, align 8, !dbg !10219
  br label %cond.end, !dbg !10219

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10219
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10216, metadata !DIExpression()), !dbg !10217
  %arrayidx9 = getelementptr inbounds i64, i64* %4, i64 5, !dbg !10220
  %8 = bitcast i64* %arrayidx9 to %union.tree_node**, !dbg !10220
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !10220
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10211, metadata !DIExpression()), !dbg !10217
  %arrayidx12 = getelementptr inbounds i64, i64* %4, i64 6, !dbg !10221
  %10 = load i64, i64* %arrayidx12, align 8, !dbg !10221
  %11 = bitcast %union.tree_node** %from to i64*, !dbg !10222
  store i64 %10, i64* %11, align 8, !dbg !10222
  call void @llvm.dbg.value(metadata %union.tree_node** %from, metadata !10213, metadata !DIExpression(DW_OP_deref)), !dbg !10217
  call fastcc void @prepare_gimple_addressable(%union.tree_node** nonnull %from, %struct.gimple_seq_d** %seq_p) #7, !dbg !10223
  %12 = load %union.tree_node*, %union.tree_node** %from, align 8, !dbg !10224
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !10213, metadata !DIExpression()), !dbg !10217
  call void @mark_addressable(%union.tree_node* %12) #7, !dbg !10225
  %13 = load %union.tree_node*, %union.tree_node** %from, align 8, !dbg !10226
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !10213, metadata !DIExpression()), !dbg !10217
  %call = call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %13) #6, !dbg !10227
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10214, metadata !DIExpression()), !dbg !10217
  store %union.tree_node* %call, %union.tree_node** %from_ptr, align 8, !dbg !10228
  call void @llvm.dbg.value(metadata %union.tree_node** %from_ptr, metadata !10214, metadata !DIExpression(DW_OP_deref)), !dbg !10217
  %call13 = call fastcc i32 @gimplify_arg(%union.tree_node** nonnull %from_ptr, %struct.gimple_seq_d** %seq_p, i32 %cond) #7, !dbg !10229
  call void @mark_addressable(%union.tree_node* %9) #7, !dbg !10230
  %call14 = call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %9) #6, !dbg !10231
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !10212, metadata !DIExpression()), !dbg !10217
  store %union.tree_node* %call14, %union.tree_node** %to_ptr, align 8, !dbg !10232
  call void @llvm.dbg.value(metadata %union.tree_node** %to_ptr, metadata !10212, metadata !DIExpression(DW_OP_deref)), !dbg !10217
  %call15 = call fastcc i32 @gimplify_arg(%union.tree_node** nonnull %to_ptr, %struct.gimple_seq_d** %seq_p, i32 %cond) #7, !dbg !10233
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !10234
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10210, metadata !DIExpression()), !dbg !10217
  %15 = load %union.tree_node*, %union.tree_node** %to_ptr, align 8, !dbg !10235
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !10212, metadata !DIExpression()), !dbg !10217
  %16 = load %union.tree_node*, %union.tree_node** %from_ptr, align 8, !dbg !10236
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !10214, metadata !DIExpression()), !dbg !10217
  %call16 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %14, i32 3, %union.tree_node* %15, %union.tree_node* %16, %union.tree_node* %size) #6, !dbg !10237
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !10215, metadata !DIExpression()), !dbg !10217
  %tobool = icmp eq i8 %want_value, 0, !dbg !10238
  br i1 %tobool, label %if.end, label %if.then, !dbg !10240

if.then:                                          ; preds = %cond.end
  %17 = bitcast %union.tree_node** %to_ptr to %struct.tree_common**, !dbg !10241
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !10241
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !10241
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10241
  %call17 = call %union.tree_node* @create_tmp_var(%union.tree_node* %19, i8* null) #7, !dbg !10243
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !10210, metadata !DIExpression()), !dbg !10217
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call16, %union.tree_node* %call17) #7, !dbg !10244
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %seq_p, %union.gimple_statement_d* %call16) #7, !dbg !10245
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10246
  %20 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !10246
  %call20 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %20, %union.tree_node* %call17) #6, !dbg !10246
  br label %cleanup, !dbg !10247

if.end:                                           ; preds = %cond.end
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %seq_p, %union.gimple_statement_d* %call16) #7, !dbg !10248
  br label %cleanup, !dbg !10249

cleanup:                                          ; preds = %if.end, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.end ], [ %call20, %if.then ], !dbg !10217
  store %union.tree_node* %storemerge, %union.tree_node** %expr_p, align 8, !dbg !10217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10250
  ret i32 undef, !dbg !10250
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_modify_expr_complex_part(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, i8 zeroext %want_value) unnamed_addr #5 !dbg !10251 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !10253, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !10254, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !10255, metadata !DIExpression()), !dbg !10264
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !10265
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10265
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !10265
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10265
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10258, metadata !DIExpression()), !dbg !10264
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 1, !dbg !10266
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !10266
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !10259, metadata !DIExpression()), !dbg !10264
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10267
  %bf.load = load i64, i64* %4, align 8, !dbg !10267
  %operands5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10268
  %5 = load %union.tree_node*, %union.tree_node** %operands5, align 8, !dbg !10268
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !10258, metadata !DIExpression()), !dbg !10264
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !10269
  %cmp = icmp eq i64 %bf.cast3, 43, !dbg !10269
  %cond = select i1 %cmp, i32 44, i32 43, !dbg !10270
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10257, metadata !DIExpression()), !dbg !10264
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10271
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10271
  %call = tail call %union.tree_node* @build1_stat(i32 %cond, %union.tree_node* %6, %union.tree_node* %5) #6, !dbg !10271
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10261, metadata !DIExpression()), !dbg !10264
  %call7 = tail call %union.tree_node* @get_formal_tmp_var(%union.tree_node* %call, %struct.gimple_seq_d** %pre_p) #7, !dbg !10272
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !10261, metadata !DIExpression()), !dbg !10264
  %.call7 = select i1 %cmp, %union.tree_node* %3, %union.tree_node* %call7, !dbg !10273
  call void @llvm.dbg.value(metadata %union.tree_node* %.call7, metadata !10262, metadata !DIExpression()), !dbg !10264
  %cond14 = select i1 %cmp, %union.tree_node* %call7, %union.tree_node* %3, !dbg !10274
  call void @llvm.dbg.value(metadata %union.tree_node* %cond14, metadata !10263, metadata !DIExpression()), !dbg !10264
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %.call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10275
  %bf.load16 = load i64, i64* %7, align 8, !dbg !10275
  %bf.cast181 = and i64 %bf.load16, 131072, !dbg !10275
  %tobool = icmp eq i64 %bf.cast181, 0, !dbg !10275
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10277

land.lhs.true:                                    ; preds = %entry
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10278
  %bf.load20 = load i64, i64* %8, align 8, !dbg !10278
  %bf.cast232 = and i64 %bf.load20, 131072, !dbg !10278
  %tobool24 = icmp eq i64 %bf.cast232, 0, !dbg !10278
  br i1 %tobool24, label %if.else, label %if.then, !dbg !10279

if.then:                                          ; preds = %land.lhs.true
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10280
  %9 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !10280
  %call27 = tail call %union.tree_node* @build_complex(%union.tree_node* %9, %union.tree_node* %.call7, %union.tree_node* %cond14) #6, !dbg !10281
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !10260, metadata !DIExpression()), !dbg !10264
  br label %if.end, !dbg !10282

if.else:                                          ; preds = %land.lhs.true, %entry
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10283
  %10 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !10283
  %call30 = tail call %union.tree_node* @build2_stat(i32 123, %union.tree_node* %10, %union.tree_node* %.call7, %union.tree_node* %cond14) #6, !dbg !10283
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !10260, metadata !DIExpression()), !dbg !10264
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %new_rhs.0 = phi %union.tree_node* [ %call27, %if.then ], [ %call30, %if.else ], !dbg !10284
  call void @llvm.dbg.value(metadata %union.tree_node* %new_rhs.0, metadata !10260, metadata !DIExpression()), !dbg !10264
  %call31 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %5, %union.tree_node* %new_rhs.0) #6, !dbg !10285
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call31) #7, !dbg !10286
  %tobool32 = icmp eq i8 %want_value, 0, !dbg !10287
  %. = select i1 %tobool32, %union.tree_node* null, %union.tree_node* %3, !dbg !10287
  store %union.tree_node* %., %union.tree_node** %expr_p, align 8, !dbg !10288
  ret i32 undef, !dbg !10289
}

declare dso_local void @decl_debug_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_noreturn_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !10290 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !10292, metadata !DIExpression()), !dbg !10293
  %call = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %s) #6, !dbg !10294
  %and = lshr i32 %call, 3, !dbg !10295
  %0 = trunc i32 %and to i8, !dbg !10295
  %1 = and i8 %0, 1, !dbg !10295
  ret i8 %1, !dbg !10296
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !10297 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10299, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !10300, metadata !DIExpression()), !dbg !10301
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !10302
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !10303
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10305

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10306
  %bf.load = load i64, i64* %0, align 8, !dbg !10306
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10307
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !10307
  br i1 %cmp, label %if.then, label %if.end, !dbg !10308

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10309
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !10309
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !10310
  br label %if.end, !dbg !10309

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !10311
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gimplify_init_constructor(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 zeroext %want_value, i8 zeroext %notify_temp_creation) unnamed_addr #5 !dbg !10312 {
entry:
  %preeval_data = alloca %struct.gimplify_init_ctor_preeval_data, align 8
  %num_ctor_elements = alloca i64, align 8
  %num_nonzero_elements = alloca i64, align 8
  %cleared = alloca i8, align 1
  %ce = alloca %struct.constructor_elt_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !10316, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !10317, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !10318, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8 %want_value, metadata !10319, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8 %notify_temp_creation, metadata !10320, metadata !DIExpression()), !dbg !10369
  %0 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !10370
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10370
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 1, !dbg !10370
  %2 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !10370
  %3 = load i64*, i64** %2, align 8, !dbg !10370
  %bf.load = load i64, i64* %3, align 8, !dbg !10370
  %bf.cast11 = and i64 %bf.load, 65535, !dbg !10370
  %cmp = icmp eq i64 %bf.cast11, 51, !dbg !10370
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10370

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3616, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10370
  br label %cond.end, !dbg !10370

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq i8 %notify_temp_creation, 0, !dbg !10371
  br i1 %tobool, label %if.then, label %if.end6, !dbg !10373

if.then:                                          ; preds = %cond.end
  %4 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10374
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 0, !dbg !10374
  %call = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx3, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_lvalue, i32 2) #7, !dbg !10376
  call void @llvm.dbg.value(metadata i32 %call, metadata !10324, metadata !DIExpression()), !dbg !10369
  %cmp4 = icmp eq i32 %call, -2, !dbg !10377
  br i1 %cmp4, label %cleanup486, label %if.end6, !dbg !10379

if.end6:                                          ; preds = %cond.end, %if.then
  %5 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10380
  %arrayidx9 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 3, i64 0, !dbg !10380
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !10380
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10321, metadata !DIExpression()), !dbg !10369
  %arrayidx12 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 3, i64 1, !dbg !10381
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !10381
  %call13 = tail call fastcc %union.tree_node* @optimize_compound_literals_in_ctor(%union.tree_node* %7) #7, !dbg !10382
  %8 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10383
  %arrayidx16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i64 0, i32 3, i64 1, !dbg !10383
  store %union.tree_node* %call13, %union.tree_node** %arrayidx16, align 8, !dbg !10384
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !10322, metadata !DIExpression()), !dbg !10369
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10385
  %9 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !10385
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10323, metadata !DIExpression()), !dbg !10369
  %elts18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10386
  %10 = bitcast i32* %elts18 to %struct.VEC_constructor_elt_gc**, !dbg !10386
  %11 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %10, align 8, !dbg !10386
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %11, metadata !10325, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 1, metadata !10324, metadata !DIExpression()), !dbg !10369
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10387
  %bf.load20 = load i64, i64* %12, align 8, !dbg !10387
  %13 = trunc i64 %bf.load20 to i16, !dbg !10387
  switch i16 %13, label %sw.default [
    i16 16, label %sw.bb
    i16 17, label %sw.bb
    i16 18, label %sw.bb
    i16 15, label %sw.bb
    i16 13, label %sw.bb283
    i16 14, label %sw.bb369
  ], !dbg !10388

sw.bb:                                            ; preds = %if.end6, %if.end6, %if.end6, %if.end6
  %14 = bitcast %struct.gimplify_init_ctor_preeval_data* %preeval_data to i8*, !dbg !10389
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !10389
  %15 = bitcast i64* %num_ctor_elements to i8*, !dbg !10390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !10390
  %16 = bitcast i64* %num_nonzero_elements to i8*, !dbg !10391
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8, !dbg !10391
  call void @llvm.dbg.value(metadata i8* %cleared, metadata !10332, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %cleared) #8, !dbg !10393
  %base25 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !10394
  %call29 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base25) #7, !dbg !10394
  %cmp30 = icmp eq i32 %call29, 0, !dbg !10394
  br i1 %cmp30, label %if.then31, label %if.end35, !dbg !10396

if.then31:                                        ; preds = %sw.bb
  %. = select i1 %tobool, i32 2, i32 1, !dbg !10397
  br label %cleanup275, !dbg !10397

if.end35:                                         ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i64* %num_ctor_elements, metadata !10330, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  call void @llvm.dbg.value(metadata i64* %num_nonzero_elements, metadata !10331, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  call void @llvm.dbg.value(metadata i8* %cleared, metadata !10332, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  %call36 = call zeroext i8 @categorize_ctor_elements(%union.tree_node* %call13, i64* nonnull %num_nonzero_elements, i64* nonnull %num_ctor_elements, i8* nonnull %cleared) #6, !dbg !10399
  call void @llvm.dbg.value(metadata i8 %call36, metadata !10333, metadata !DIExpression()), !dbg !10392
  %tobool37 = icmp ne i8 %call36, 0, !dbg !10400
  %17 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10402
  call void @llvm.dbg.value(metadata i64 %17, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp38 = icmp sgt i64 %17, 1, !dbg !10403
  %or.cond = and i1 %tobool37, %cmp38, !dbg !10404
  br i1 %or.cond, label %land.lhs.true40, label %if.end78, !dbg !10404

land.lhs.true40:                                  ; preds = %if.end35
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10405
  %bf.load42 = load i64, i64* %18, align 8, !dbg !10405
  %bf.cast4419 = and i64 %bf.load42, 1048576, !dbg !10405
  %tobool45 = icmp eq i64 %bf.cast4419, 0, !dbg !10405
  br i1 %tobool45, label %if.end78, label %land.lhs.true46, !dbg !10406

land.lhs.true46:                                  ; preds = %land.lhs.true40
  %bf.cast5020 = and i64 %bf.load42, 65535, !dbg !10407
  %cmp51 = icmp eq i64 %bf.cast5020, 32, !dbg !10407
  br i1 %cmp51, label %land.lhs.true53, label %if.end78, !dbg !10408

land.lhs.true53:                                  ; preds = %land.lhs.true46
  %19 = load i32, i32* @flag_merge_constants, align 4, !dbg !10409
  %cmp54 = icmp sgt i32 %19, 1, !dbg !10410
  br i1 %cmp54, label %if.then62, label %lor.lhs.false, !dbg !10411

lor.lhs.false:                                    ; preds = %land.lhs.true53
  %bf.cast6021 = and i64 %bf.load42, 262144, !dbg !10412
  %tobool61 = icmp eq i64 %bf.cast6021, 0, !dbg !10412
  br i1 %tobool61, label %if.then62, label %if.end78, !dbg !10413

if.then62:                                        ; preds = %lor.lhs.false, %land.lhs.true53
  br i1 %tobool, label %if.end65, label %cleanup275, !dbg !10414

if.end65:                                         ; preds = %if.then62
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10416
  store %union.tree_node* %call13, %union.tree_node** %initial, align 8, !dbg !10417
  %bf.set = or i64 %bf.load42, 67108864, !dbg !10418
  store i64 %bf.set, i64* %18, align 8, !dbg !10418
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10419
  %20 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !10419
  %tobool69 = icmp eq %union.tree_node* %20, null, !dbg !10419
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !10421

if.then70:                                        ; preds = %if.end65
  %call71 = call %union.tree_node* @create_tmp_var_name(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10422
  store %union.tree_node* %call71, %union.tree_node** %name, align 8, !dbg !10423
  br label %if.end74, !dbg !10424

if.end74:                                         ; preds = %if.end65, %if.then70
  %call77 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %initial, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @force_labels_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !10425
  call void @lhd_set_decl_assembler_name(%union.tree_node* %6) #6, !dbg !10426
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !10427
  br label %cleanup275, !dbg !10428

if.end78:                                         ; preds = %lor.lhs.false, %land.lhs.true40, %land.lhs.true46, %if.end35
  %call79 = call i64 @count_type_elements(%union.tree_node* %9, i8 zeroext 1) #6, !dbg !10429
  call void @llvm.dbg.value(metadata i64 %call79, metadata !10329, metadata !DIExpression()), !dbg !10392
  %cmp80 = icmp slt i64 %call79, 0, !dbg !10430
  br i1 %cmp80, label %land.lhs.true82, label %if.else, !dbg !10432

land.lhs.true82:                                  ; preds = %if.end78
  %call83 = call i64 @int_size_in_bytes(%union.tree_node* %9) #6, !dbg !10433
  %cmp84 = icmp sgt i64 %call83, -1, !dbg !10434
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !10435

if.then86:                                        ; preds = %land.lhs.true82
  call void @llvm.dbg.value(metadata i8 1, metadata !10332, metadata !DIExpression()), !dbg !10392
  store i8 1, i8* %cleared, align 1, !dbg !10436
  br label %if.end114, !dbg !10437

if.else:                                          ; preds = %land.lhs.true82, %if.end78
  %21 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10438
  call void @llvm.dbg.value(metadata i64 %21, metadata !10331, metadata !DIExpression()), !dbg !10392
  %sub = sub nsw i64 %call79, %21, !dbg !10440
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10441
  %call87 = call zeroext i8 @optimize_function_for_speed_p(%struct.function* %22) #6, !dbg !10441
  %tobool89 = icmp eq i8 %call87, 0, !dbg !10441
  br i1 %tobool89, label %cond.end99, label %cond.true90, !dbg !10441

cond.true90:                                      ; preds = %if.else
  %23 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !10441
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %23, i64 0, i32 10, !dbg !10441
  %24 = load i32, i32* %move_ratio, align 4, !dbg !10441
  %cmp91 = icmp sgt i32 %24, 6, !dbg !10441
  br i1 %cmp91, label %cond.end99, label %cond.false94, !dbg !10441

cond.false94:                                     ; preds = %cond.true90
  br label %cond.end99, !dbg !10441

cond.end99:                                       ; preds = %if.else, %cond.false94, %cond.true90
  %cond100 = phi i32 [ %24, %cond.false94 ], [ 6, %cond.true90 ], [ 2, %if.else ], !dbg !10441
  %conv101 = sext i32 %cond100 to i64, !dbg !10441
  %cmp102 = icmp sgt i64 %sub, %conv101, !dbg !10442
  br i1 %cmp102, label %land.lhs.true104, label %if.else108, !dbg !10443

land.lhs.true104:                                 ; preds = %cond.end99
  %25 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10444
  call void @llvm.dbg.value(metadata i64 %25, metadata !10331, metadata !DIExpression()), !dbg !10392
  %div = sdiv i64 %call79, 4, !dbg !10445
  %cmp105 = icmp slt i64 %25, %div, !dbg !10446
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !10447

if.then107:                                       ; preds = %land.lhs.true104
  call void @llvm.dbg.value(metadata i8 1, metadata !10332, metadata !DIExpression()), !dbg !10392
  store i8 1, i8* %cleared, align 1, !dbg !10448
  br label %if.end114, !dbg !10449

if.else108:                                       ; preds = %land.lhs.true104, %cond.end99
  %26 = load i64, i64* %num_ctor_elements, align 8, !dbg !10450
  call void @llvm.dbg.value(metadata i64 %26, metadata !10330, metadata !DIExpression()), !dbg !10392
  %cmp109 = icmp slt i64 %26, %call79, !dbg !10452
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !10453

if.then111:                                       ; preds = %if.else108
  call void @llvm.dbg.value(metadata i8 1, metadata !10332, metadata !DIExpression()), !dbg !10392
  store i8 1, i8* %cleared, align 1, !dbg !10454
  br label %if.end114, !dbg !10455

if.end114:                                        ; preds = %if.then107, %if.then111, %if.else108, %if.then86
  %tobool116 = icmp eq i8 %call36, 0, !dbg !10456
  br i1 %tobool116, label %if.end206, label %land.lhs.true117, !dbg !10457

land.lhs.true117:                                 ; preds = %if.end114
  %27 = load i8, i8* %cleared, align 1, !dbg !10458
  call void @llvm.dbg.value(metadata i8 %27, metadata !10332, metadata !DIExpression()), !dbg !10392
  %tobool119 = icmp ne i8 %27, 0, !dbg !10458
  %28 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10459
  call void @llvm.dbg.value(metadata i64 %28, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp121 = icmp eq i64 %28, 0, !dbg !10460
  %or.cond5 = or i1 %tobool119, %cmp121, !dbg !10461
  br i1 %or.cond5, label %if.end206, label %land.lhs.true123, !dbg !10461

land.lhs.true123:                                 ; preds = %land.lhs.true117
  %bf.load125 = load i64, i64* %12, align 8, !dbg !10462
  %bf.cast12818 = and i64 %bf.load125, 262144, !dbg !10462
  %tobool129 = icmp eq i64 %bf.cast12818, 0, !dbg !10462
  br i1 %tobool129, label %if.then130, label %if.end206, !dbg !10463

if.then130:                                       ; preds = %land.lhs.true123
  %call131 = call i64 @int_size_in_bytes(%union.tree_node* %9) #6, !dbg !10464
  call void @llvm.dbg.value(metadata i64 %call131, metadata !10334, metadata !DIExpression()), !dbg !10465
  %cmp132 = icmp slt i64 %call131, 0, !dbg !10466
  br i1 %cmp132, label %if.then134, label %if.end146, !dbg !10468

if.then134:                                       ; preds = %if.then130
  %type136 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10469
  %29 = load %union.tree_node*, %union.tree_node** %type136, align 8, !dbg !10469
  %call137 = call i64 @int_size_in_bytes(%union.tree_node* %29) #6, !dbg !10471
  call void @llvm.dbg.value(metadata i64 %call137, metadata !10334, metadata !DIExpression()), !dbg !10465
  %cmp138 = icmp sgt i64 %call137, -1, !dbg !10472
  br i1 %cmp138, label %if.then140, label %if.end146, !dbg !10474

if.then140:                                       ; preds = %if.then134
  %30 = load %union.tree_node*, %union.tree_node** %type136, align 8, !dbg !10475
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !10323, metadata !DIExpression()), !dbg !10369
  store %union.tree_node* %30, %union.tree_node** %type17, align 8, !dbg !10476
  br label %if.end146, !dbg !10477

if.end146:                                        ; preds = %if.then134, %if.then140, %if.then130
  %size.0 = phi i64 [ %call131, %if.then130 ], [ %call137, %if.then140 ], [ %call137, %if.then134 ], !dbg !10465
  %type.1 = phi %union.tree_node* [ %9, %if.then130 ], [ %30, %if.then140 ], [ %9, %if.then134 ], !dbg !10369
  call void @llvm.dbg.value(metadata %union.tree_node* %type.1, metadata !10323, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !10334, metadata !DIExpression()), !dbg !10465
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10478
  %bf.load148 = load i64, i64* %31, align 8, !dbg !10478
  %bf.cast150 = and i64 %bf.load148, 65535, !dbg !10478
  %arrayidx151 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast150, !dbg !10478
  %32 = load i32, i32* %arrayidx151, align 4, !dbg !10478
  %cmp152 = icmp eq i32 %32, 3, !dbg !10478
  br i1 %cmp152, label %if.then154, label %if.else157, !dbg !10480

if.then154:                                       ; preds = %if.end146
  br label %if.end160, !dbg !10481

if.else157:                                       ; preds = %if.end146
  br label %if.end160

if.end160:                                        ; preds = %if.else157, %if.then154
  %.pn = phi %union.tree_node* [ %6, %if.then154 ], [ %type.1, %if.else157 ]
  %align.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10482
  %align.0 = load i32, i32* %align.0.in, align 8, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !10337, metadata !DIExpression()), !dbg !10465
  %cmp161 = icmp sgt i64 %size.0, 0, !dbg !10483
  %33 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10484
  call void @llvm.dbg.value(metadata i64 %33, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp164 = icmp sgt i64 %33, 1, !dbg !10485
  %or.cond6 = and i1 %cmp161, %cmp164, !dbg !10486
  br i1 %or.cond6, label %land.lhs.true166, label %cleanup204, !dbg !10486

land.lhs.true166:                                 ; preds = %if.end160
  %call167 = call i32 @can_move_by_pieces(i64 %size.0, i32 %align.0) #6, !dbg !10487
  %tobool168 = icmp eq i32 %call167, 0, !dbg !10487
  br i1 %tobool168, label %if.then169, label %cleanup204, !dbg !10488

if.then169:                                       ; preds = %land.lhs.true166
  br i1 %tobool, label %if.end172, label %cleanup204, !dbg !10489

if.end172:                                        ; preds = %if.then169
  %call173 = call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %type.1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10490
  call void @llvm.dbg.value(metadata %union.tree_node* %call173, metadata !10338, metadata !DIExpression()), !dbg !10491
  call void @gimple_add_tmp_var(%union.tree_node* %call173) #7, !dbg !10492
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10493
  %bf.load175 = load i64, i64* %34, align 8, !dbg !10494
  %bf.set181 = or i64 %bf.load175, 68157440, !dbg !10495
  store i64 %bf.set181, i64* %34, align 8, !dbg !10495
  %initial183 = getelementptr inbounds %union.tree_node, %union.tree_node* %call173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10496
  store %union.tree_node* %call13, %union.tree_node** %initial183, align 8, !dbg !10497
  %align185 = getelementptr inbounds %union.tree_node, %union.tree_node* %call173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10498
  %35 = load i32, i32* %align185, align 8, !dbg !10498
  %cmp186 = icmp ugt i32 %align.0, %35, !dbg !10500
  br i1 %cmp186, label %if.then188, label %if.end196, !dbg !10501

if.then188:                                       ; preds = %if.end172
  store i32 %align.0, i32* %align185, align 8, !dbg !10502
  %bf.set195 = or i64 %bf.load175, 4398114668544, !dbg !10504
  store i64 %bf.set195, i64* %34, align 8, !dbg !10504
  br label %if.end196, !dbg !10505

if.end196:                                        ; preds = %if.then188, %if.end172
  %call199 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %initial183, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @force_labels_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !10506
  %36 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10507
  %arrayidx202 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %36, i64 0, i32 3, i64 1, !dbg !10507
  store %union.tree_node* %call173, %union.tree_node** %arrayidx202, align 8, !dbg !10508
  br label %cleanup204, !dbg !10509

cleanup204:                                       ; preds = %if.then169, %land.lhs.true166, %if.end160, %if.end196
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then169 ], [ 1, %if.end196 ], [ 0, %land.lhs.true166 ], [ 0, %if.end160 ]
  %retval.1 = phi i32 [ -2, %if.then169 ], [ -1, %if.end196 ], [ undef, %land.lhs.true166 ], [ undef, %if.end160 ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond3, label %if.end206, label %cleanup275

if.end206:                                        ; preds = %land.lhs.true123, %if.end114, %cleanup204, %land.lhs.true117
  %type.2 = phi %union.tree_node* [ %9, %land.lhs.true117 ], [ %9, %land.lhs.true123 ], [ %9, %if.end114 ], [ %type.1, %cleanup204 ], !dbg !10369
  %retval.2 = phi i32 [ undef, %land.lhs.true117 ], [ undef, %land.lhs.true123 ], [ undef, %if.end114 ], [ %retval.1, %cleanup204 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.2, metadata !10323, metadata !DIExpression()), !dbg !10369
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10510
  %bf.load208 = load i64, i64* %37, align 8, !dbg !10510
  %bf.cast21115 = and i64 %bf.load208, 524288, !dbg !10510
  %tobool212 = icmp eq i64 %bf.cast21115, 0, !dbg !10510
  br i1 %tobool212, label %if.end234, label %land.lhs.true213, !dbg !10511

land.lhs.true213:                                 ; preds = %if.end206
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10512
  %bf.load215 = load i64, i64* %38, align 8, !dbg !10512
  %bf.cast21816 = and i64 %bf.load215, 262144, !dbg !10512
  %tobool219 = icmp eq i64 %bf.cast21816, 0, !dbg !10512
  %39 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10513
  call void @llvm.dbg.value(metadata i64 %39, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp221 = icmp sgt i64 %39, 0, !dbg !10514
  %or.cond7 = and i1 %tobool219, %cmp221, !dbg !10515
  br i1 %or.cond7, label %if.then223, label %if.end234, !dbg !10515

if.then223:                                       ; preds = %land.lhs.true213
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10516
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8, !dbg !10516
  %call225 = call %union.tree_node* @create_tmp_var(%union.tree_node* %41, i8* null) #7, !dbg !10517
  call void @llvm.dbg.value(metadata %union.tree_node* %call225, metadata !10341, metadata !DIExpression()), !dbg !10518
  %42 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10519
  %arrayidx228 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %42, i64 0, i32 3, i64 0, !dbg !10519
  store %union.tree_node* %call225, %union.tree_node** %arrayidx228, align 8, !dbg !10520
  %43 = bitcast %union.tree_node** %expr_p to %struct.tree_common**, !dbg !10521
  %44 = load %struct.tree_common*, %struct.tree_common** %43, align 8, !dbg !10521
  %type230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %44, i64 0, i32 2, !dbg !10521
  %45 = load %union.tree_node*, %union.tree_node** %type230, align 8, !dbg !10521
  %.cast17 = bitcast %struct.tree_common* %44 to %union.tree_node*, !dbg !10521
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10521
  %call231 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %46, %union.tree_node* %6, %union.tree_node* %call225) #6, !dbg !10521
  %call232 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %45, %union.tree_node* %.cast17, %union.tree_node* %call231) #6, !dbg !10521
  store %union.tree_node* %call232, %union.tree_node** %expr_p, align 8, !dbg !10522
  br label %cleanup275

if.end234:                                        ; preds = %if.end206, %land.lhs.true213
  br i1 %tobool, label %if.end237, label %cleanup275, !dbg !10523

if.end237:                                        ; preds = %if.end234
  %47 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10524
  call void @llvm.dbg.value(metadata i64 %47, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp238 = icmp sgt i64 %47, 0, !dbg !10526
  br i1 %cmp238, label %if.then240, label %if.end258, !dbg !10527

if.then240:                                       ; preds = %if.end237
  %call241 = call %union.tree_node* @get_base_address(%union.tree_node* %6) #6, !dbg !10528
  %lhs_base_decl = getelementptr inbounds %struct.gimplify_init_ctor_preeval_data, %struct.gimplify_init_ctor_preeval_data* %preeval_data, i64 0, i32 0, !dbg !10530
  store %union.tree_node* %call241, %union.tree_node** %lhs_base_decl, align 8, !dbg !10531
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10532
  %bf.load244 = load i64, i64* %.cast, align 8, !dbg !10532
  %bf.cast246 = and i64 %bf.load244, 65535, !dbg !10532
  %arrayidx248 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast246, !dbg !10532
  %48 = load i32, i32* %arrayidx248, align 4, !dbg !10532
  %cmp249 = icmp eq i32 %48, 3, !dbg !10532
  br i1 %cmp249, label %if.end253, label %if.then251, !dbg !10534

if.then251:                                       ; preds = %if.then240
  store %union.tree_node* null, %union.tree_node** %lhs_base_decl, align 8, !dbg !10535
  br label %if.end253, !dbg !10536

if.end253:                                        ; preds = %if.then251, %if.then240
  %call254 = call i32 @get_alias_set(%union.tree_node* %6) #6, !dbg !10537
  %lhs_alias_set = getelementptr inbounds %struct.gimplify_init_ctor_preeval_data, %struct.gimplify_init_ctor_preeval_data* %preeval_data, i64 0, i32 1, !dbg !10538
  store i32 %call254, i32* %lhs_alias_set, align 8, !dbg !10539
  %49 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10540
  %arrayidx257 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %49, i64 0, i32 3, i64 1, !dbg !10540
  call void @llvm.dbg.value(metadata %struct.gimplify_init_ctor_preeval_data* %preeval_data, metadata !10326, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  call fastcc void @gimplify_init_ctor_preeval(%union.tree_node** nonnull %arrayidx257, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, %struct.gimplify_init_ctor_preeval_data* nonnull %preeval_data) #7, !dbg !10541
  br label %if.end258, !dbg !10542

if.end258:                                        ; preds = %if.end253, %if.end237
  %50 = load i8, i8* %cleared, align 1, !dbg !10543
  call void @llvm.dbg.value(metadata i8 %50, metadata !10332, metadata !DIExpression()), !dbg !10392
  %tobool259 = icmp eq i8 %50, 0, !dbg !10543
  br i1 %tobool259, label %if.end268, label %if.then260, !dbg !10545

if.then260:                                       ; preds = %if.end258
  store %struct.VEC_constructor_elt_gc* null, %struct.VEC_constructor_elt_gc** %10, align 8, !dbg !10546
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10548
  %bf.load264 = load i64, i64* %51, align 8, !dbg !10549
  %bf.clear265 = and i64 %bf.load264, -65537, !dbg !10549
  store i64 %bf.clear265, i64* %51, align 8, !dbg !10549
  %call266 = call %union.tree_node* @unshare_expr(%union.tree_node* %6) #7, !dbg !10550
  call void @llvm.dbg.value(metadata %union.tree_node* %call266, metadata !10321, metadata !DIExpression()), !dbg !10369
  %call267 = call zeroext i8 @gimplify_stmt(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p) #7, !dbg !10551
  %.pre = load i8, i8* %cleared, align 1, !dbg !10552
  br label %if.end268, !dbg !10554

if.end268:                                        ; preds = %if.end258, %if.then260
  %52 = phi i8 [ %.pre, %if.then260 ], [ 0, %if.end258 ], !dbg !10552
  %object.0 = phi %union.tree_node* [ %call266, %if.then260 ], [ %6, %if.end258 ], !dbg !10369
  call void @llvm.dbg.value(metadata %union.tree_node* %object.0, metadata !10321, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8 %52, metadata !10332, metadata !DIExpression()), !dbg !10392
  %tobool269 = icmp eq i8 %52, 0, !dbg !10552
  %53 = load i64, i64* %num_nonzero_elements, align 8, !dbg !10555
  call void @llvm.dbg.value(metadata i64 %53, metadata !10331, metadata !DIExpression()), !dbg !10392
  %cmp271 = icmp sgt i64 %53, 0, !dbg !10556
  %or.cond8 = or i1 %tobool269, %cmp271, !dbg !10557
  br i1 %or.cond8, label %if.then273, label %if.end274, !dbg !10557

if.then273:                                       ; preds = %if.end268
  call void @llvm.dbg.value(metadata i8 %52, metadata !10332, metadata !DIExpression()), !dbg !10392
  call fastcc void @gimplify_init_ctor_eval(%union.tree_node* %object.0, %struct.VEC_constructor_elt_gc* %11, %struct.gimple_seq_d** %pre_p, i8 zeroext %52) #7, !dbg !10558
  br label %if.end274, !dbg !10558

if.end274:                                        ; preds = %if.end268, %if.then273
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !10559
  br label %cleanup275, !dbg !10560

cleanup275:                                       ; preds = %if.then62, %if.end234, %if.then31, %cleanup204, %if.end274, %if.then223, %if.end74
  %cleanup.dest.slot.2 = phi i32 [ 2, %if.end74 ], [ 0, %if.end274 ], [ 1, %if.then223 ], [ %cleanup.dest.slot.1, %cleanup204 ], [ %., %if.then31 ], [ 1, %if.then62 ], [ 1, %if.end234 ]
  %object.1 = phi %union.tree_node* [ %6, %if.end74 ], [ %object.0, %if.end274 ], [ %6, %if.then223 ], [ %6, %cleanup204 ], [ %6, %if.then31 ], [ %6, %if.then62 ], [ %6, %if.end234 ], !dbg !10369
  %retval.3 = phi i32 [ undef, %if.end74 ], [ %retval.2, %if.end274 ], [ 0, %if.then223 ], [ %retval.1, %cleanup204 ], [ 0, %if.then31 ], [ -2, %if.then62 ], [ 0, %if.end234 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %object.1, metadata !10321, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8* %cleared, metadata !10332, metadata !DIExpression(DW_OP_deref)), !dbg !10392
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %cleared) #8, !dbg !10560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8, !dbg !10560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !10560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !10560
  switch i32 %cleanup.dest.slot.2, label %cleanup486 [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
  ]

sw.bb283:                                         ; preds = %if.end6
  br i1 %tobool, label %if.end286, label %cleanup365, !dbg !10561

if.end286:                                        ; preds = %sw.bb283
  %base289 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !10562
  %call293 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base289) #7, !dbg !10562
  %cmp294 = icmp eq i32 %call293, 2, !dbg !10562
  br i1 %cmp294, label %cond.end298, label %cond.true296, !dbg !10562

cond.true296:                                     ; preds = %if.end286
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3844, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10562
  br label %cond.end298, !dbg !10562

cond.end298:                                      ; preds = %if.end286, %cond.true296
  %call306 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base289, i32 0) #7, !dbg !10563
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call306, i64 0, i32 1, !dbg !10564
  %54 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !10564
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !10344, metadata !DIExpression()), !dbg !10565
  %call313 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base289, i32 1) #7, !dbg !10566
  %value314 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call313, i64 0, i32 1, !dbg !10567
  %55 = load %union.tree_node*, %union.tree_node** %value314, align 8, !dbg !10567
  call void @llvm.dbg.value(metadata %union.tree_node* %55, metadata !10346, metadata !DIExpression()), !dbg !10565
  %cmp315 = icmp eq %union.tree_node* %54, null, !dbg !10568
  %cmp318 = icmp eq %union.tree_node* %55, null, !dbg !10569
  %or.cond9 = or i1 %cmp315, %cmp318, !dbg !10570
  br i1 %or.cond9, label %if.then320, label %if.end332, !dbg !10570

if.then320:                                       ; preds = %cond.end298
  %type322 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10571
  %56 = load %union.tree_node*, %union.tree_node** %type322, align 8, !dbg !10571
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10571
  %call323 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %56, %union.tree_node* %57) #6, !dbg !10571
  call void @llvm.dbg.value(metadata %union.tree_node* %call323, metadata !10347, metadata !DIExpression()), !dbg !10572
  %spec.select = select i1 %cmp315, %union.tree_node* %call323, %union.tree_node* %54, !dbg !10573
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !10344, metadata !DIExpression()), !dbg !10565
  %i.0 = select i1 %cmp318, %union.tree_node* %call323, %union.tree_node* %55, !dbg !10574
  br label %if.end332, !dbg !10574

if.end332:                                        ; preds = %if.then320, %cond.end298
  %r.1 = phi %union.tree_node* [ %54, %cond.end298 ], [ %spec.select, %if.then320 ], !dbg !10565
  %i.1 = phi %union.tree_node* [ %55, %cond.end298 ], [ %i.0, %if.then320 ], !dbg !10565
  call void @llvm.dbg.value(metadata %union.tree_node* %i.1, metadata !10346, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %union.tree_node* %r.1, metadata !10344, metadata !DIExpression()), !dbg !10565
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %r.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10575
  %bf.load334 = load i64, i64* %58, align 8, !dbg !10575
  %bf.cast33713 = and i64 %bf.load334, 131072, !dbg !10575
  %tobool338 = icmp eq i64 %bf.cast33713, 0, !dbg !10575
  br i1 %tobool338, label %if.else351, label %land.lhs.true339, !dbg !10577

land.lhs.true339:                                 ; preds = %if.end332
  %59 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10578
  %bf.load341 = load i64, i64* %59, align 8, !dbg !10578
  %bf.cast34414 = and i64 %bf.load341, 131072, !dbg !10578
  %tobool345 = icmp eq i64 %bf.cast34414, 0, !dbg !10578
  br i1 %tobool345, label %if.else351, label %if.then346, !dbg !10579

if.then346:                                       ; preds = %land.lhs.true339
  %call347 = tail call %union.tree_node* @build_complex(%union.tree_node* %9, %union.tree_node* %r.1, %union.tree_node* %i.1) #6, !dbg !10580
  call void @llvm.dbg.value(metadata %union.tree_node* %call347, metadata !10322, metadata !DIExpression()), !dbg !10369
  %60 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10582
  %arrayidx350 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %60, i64 0, i32 3, i64 1, !dbg !10582
  store %union.tree_node* %call347, %union.tree_node** %arrayidx350, align 8, !dbg !10583
  br label %cleanup365, !dbg !10584

if.else351:                                       ; preds = %land.lhs.true339, %if.end332
  %call352 = tail call %union.tree_node* @build2_stat(i32 123, %union.tree_node* %9, %union.tree_node* %r.1, %union.tree_node* %i.1) #6, !dbg !10585
  call void @llvm.dbg.value(metadata %union.tree_node* %call352, metadata !10322, metadata !DIExpression()), !dbg !10369
  %61 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10587
  %arrayidx355 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %61, i64 0, i32 3, i64 1, !dbg !10587
  store %union.tree_node* %call352, %union.tree_node** %arrayidx355, align 8, !dbg !10588
  %62 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10589
  %arrayidx358 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %62, i64 0, i32 3, i64 1, !dbg !10589
  %arrayidx361 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %62, i64 0, i32 3, i64 0, !dbg !10590
  %63 = load %union.tree_node*, %union.tree_node** %arrayidx361, align 8, !dbg !10590
  %call362 = tail call i8 (%union.tree_node*)* @rhs_predicate_for(%union.tree_node* %63) #7, !dbg !10591
  %call363 = tail call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx358, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* %call362, i32 1) #7, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %call363, metadata !10324, metadata !DIExpression()), !dbg !10369
  br label %cleanup365

cleanup365:                                       ; preds = %sw.bb283, %if.then346, %if.else351
  %cleanup.dest.slot.3 = phi i1 [ false, %sw.bb283 ], [ true, %if.else351 ], [ true, %if.then346 ]
  %ret.1 = phi i32 [ 1, %sw.bb283 ], [ %call363, %if.else351 ], [ 1, %if.then346 ], !dbg !10593
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !10324, metadata !DIExpression()), !dbg !10369
  br i1 %cleanup.dest.slot.3, label %sw.epilog, label %cleanup486

sw.bb369:                                         ; preds = %if.end6
  %64 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !10594
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8, !dbg !10594
  br i1 %tobool, label %if.end372, label %cleanup465, !dbg !10595

if.end372:                                        ; preds = %sw.bb369
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10596
  %bf.load374 = load i64, i64* %65, align 8, !dbg !10596
  %bf.cast37712 = and i64 %bf.load374, 131072, !dbg !10596
  %tobool378 = icmp eq i64 %bf.cast37712, 0, !dbg !10596
  br i1 %tobool378, label %if.end433, label %for.cond.preheader, !dbg !10597

for.cond.preheader:                               ; preds = %if.end372
  %base383 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !10598
  br label %for.cond, !dbg !10601

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %ix.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !10602
  %value380.0 = phi %union.tree_node* [ %value380.1, %for.inc ], [ undef, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value380.0, metadata !10356, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !10350, metadata !DIExpression()), !dbg !10604
  %call387 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base383) #7, !dbg !10605
  %conv388 = zext i32 %call387 to i64, !dbg !10605
  %cmp389 = icmp ult i64 %ix.0, %conv388, !dbg !10605
  br i1 %cmp389, label %cond.false392, label %cond.end402, !dbg !10605

cond.false392:                                    ; preds = %for.cond
  %conv399 = trunc i64 %ix.0 to i32, !dbg !10605
  %call400 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base383, i32 %conv399) #7, !dbg !10605
  %value401 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call400, i64 0, i32 1, !dbg !10605
  %66 = load %union.tree_node*, %union.tree_node** %value401, align 8, !dbg !10605
  call void @llvm.dbg.value(metadata %union.tree_node* %66, metadata !10356, metadata !DIExpression()), !dbg !10603
  br label %cond.end402, !dbg !10605

cond.end402:                                      ; preds = %for.cond, %cond.false392
  %value380.1 = phi %union.tree_node* [ %66, %cond.false392 ], [ %value380.0, %for.cond ]
  %cond403 = phi i1 [ true, %cond.false392 ], [ false, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value380.1, metadata !10356, metadata !DIExpression()), !dbg !10603
  br i1 %cond403, label %for.body, label %for.end, !dbg !10601

for.body:                                         ; preds = %cond.end402
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %value380.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10606
  %bf.load406 = load i64, i64* %67, align 8, !dbg !10606
  %bf.cast408 = and i64 %bf.load406, 65535, !dbg !10606
  %arrayidx410 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast408, !dbg !10606
  %68 = load i32, i32* %arrayidx410, align 4, !dbg !10606
  %cmp411 = icmp eq i32 %68, 1, !dbg !10606
  br i1 %cmp411, label %for.inc, label %for.end, !dbg !10608

for.inc:                                          ; preds = %for.body
  %inc = add i64 %ix.0, 1, !dbg !10605
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10350, metadata !DIExpression()), !dbg !10604
  br label %for.cond, !dbg !10605, !llvm.loop !10609

for.end:                                          ; preds = %for.body, %cond.end402
  %constant_p.0 = phi i1 [ true, %cond.end402 ], [ false, %for.body ]
  br i1 %constant_p.0, label %if.then416, label %if.end421, !dbg !10611

if.then416:                                       ; preds = %for.end
  %call417 = tail call %union.tree_node* @build_vector_from_ctor(%union.tree_node* %9, %struct.VEC_constructor_elt_gc* %11) #6, !dbg !10612
  %69 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10615
  %arrayidx420 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %69, i64 0, i32 3, i64 1, !dbg !10615
  store %union.tree_node* %call417, %union.tree_node** %arrayidx420, align 8, !dbg !10616
  br label %cleanup429, !dbg !10617

if.end421:                                        ; preds = %for.end
  %call422 = tail call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %call13, %union.tree_node* %9) #6, !dbg !10618
  %tobool423 = icmp eq %union.tree_node* %call422, null, !dbg !10618
  br i1 %tobool423, label %if.end425, label %cleanup429, !dbg !10620

if.end425:                                        ; preds = %if.end421
  %bf.load427 = load i64, i64* %65, align 8, !dbg !10621
  %bf.clear428 = and i64 %bf.load427, -131073, !dbg !10621
  store i64 %bf.clear428, i64* %65, align 8, !dbg !10621
  br label %cleanup429, !dbg !10622

cleanup429:                                       ; preds = %if.end421, %if.end425, %if.then416
  %cleanup.dest.slot.4 = phi i32 [ 2, %if.then416 ], [ 0, %if.end425 ], [ 2, %if.end421 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond1, label %if.end433, label %cleanup465

if.end433:                                        ; preds = %if.end372, %cleanup429
  call void @llvm.dbg.value(metadata i64 0, metadata !10350, metadata !DIExpression()), !dbg !10604
  %base437 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !10623
  br label %for.cond434, !dbg !10624

for.cond434:                                      ; preds = %for.body444, %if.end433
  %ret.2 = phi i32 [ 1, %if.end433 ], [ %spec.select10, %for.body444 ], !dbg !10369
  %ix.1 = phi i64 [ 0, %if.end433 ], [ %inc452, %for.body444 ], !dbg !10625
  call void @llvm.dbg.value(metadata i64 %ix.1, metadata !10350, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %ret.2, metadata !10324, metadata !DIExpression()), !dbg !10369
  %conv441 = trunc i64 %ix.1 to i32, !dbg !10626
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !10352, metadata !DIExpression(DW_OP_deref)), !dbg !10604
  %call442 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %base437, i32 %conv441, %struct.constructor_elt_d** nonnull %ce) #7, !dbg !10626
  %tobool443 = icmp eq i32 %call442, 0, !dbg !10627
  br i1 %tobool443, label %for.end453, label %for.body444, !dbg !10627

for.body444:                                      ; preds = %for.cond434
  %70 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !10628
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %70, metadata !10352, metadata !DIExpression()), !dbg !10604
  %value445 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %70, i64 0, i32 1, !dbg !10629
  %call446 = call i32 @gimplify_expr(%union.tree_node** nonnull %value445, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %call446, metadata !10357, metadata !DIExpression()), !dbg !10631
  %cmp447 = icmp eq i32 %call446, -2, !dbg !10632
  %spec.select10 = select i1 %cmp447, i32 -2, i32 %ret.2, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %spec.select10, metadata !10324, metadata !DIExpression()), !dbg !10369
  %inc452 = add i64 %ix.1, 1, !dbg !10635
  call void @llvm.dbg.value(metadata i64 %inc452, metadata !10350, metadata !DIExpression()), !dbg !10604
  br label %for.cond434, !dbg !10636, !llvm.loop !10637

for.end453:                                       ; preds = %for.cond434
  %ret.2.lcssa = phi i32 [ %ret.2, %for.cond434 ], !dbg !10369
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !10324, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !10324, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !10324, metadata !DIExpression()), !dbg !10369
  %71 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10639
  %arrayidx456 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %71, i64 0, i32 3, i64 0, !dbg !10639
  %72 = load %union.tree_node*, %union.tree_node** %arrayidx456, align 8, !dbg !10639
  %call457 = call zeroext i8 @is_gimple_reg(%union.tree_node* %72) #6, !dbg !10641
  %tobool458 = icmp eq i8 %call457, 0, !dbg !10641
  br i1 %tobool458, label %if.then459, label %cleanup465, !dbg !10642

if.then459:                                       ; preds = %for.end453
  %call460 = call %union.tree_node* @get_formal_tmp_var(%union.tree_node* %call13, %struct.gimple_seq_d** %pre_p) #7, !dbg !10643
  %73 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !10644
  %arrayidx463 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %73, i64 0, i32 3, i64 1, !dbg !10644
  store %union.tree_node* %call460, %union.tree_node** %arrayidx463, align 8, !dbg !10645
  br label %cleanup465, !dbg !10644

cleanup465:                                       ; preds = %for.end453, %sw.bb369, %if.then459, %cleanup429
  %cleanup.dest.slot.5 = phi i32 [ %cleanup.dest.slot.4, %cleanup429 ], [ 1, %sw.bb369 ], [ 0, %if.then459 ], [ 0, %for.end453 ]
  %ret.4 = phi i32 [ 1, %cleanup429 ], [ 1, %sw.bb369 ], [ %ret.2.lcssa, %if.then459 ], [ %ret.2.lcssa, %for.end453 ], !dbg !10593
  call void @llvm.dbg.value(metadata i32 %ret.4, metadata !10324, metadata !DIExpression()), !dbg !10369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8, !dbg !10646
  switch i32 %cleanup.dest.slot.5, label %cleanup486 [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
  ]

sw.default:                                       ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3933, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10647
  br label %sw.epilog, !dbg !10648

sw.epilog:                                        ; preds = %cleanup465, %cleanup365, %cleanup275, %sw.default, %cleanup465, %cleanup275
  %ret.5 = phi i32 [ 1, %sw.default ], [ %ret.4, %cleanup465 ], [ 1, %cleanup275 ], [ 1, %cleanup275 ], [ %ret.1, %cleanup365 ], [ %ret.4, %cleanup465 ], !dbg !10593
  %object.2 = phi %union.tree_node* [ %6, %sw.default ], [ %6, %cleanup465 ], [ %object.1, %cleanup275 ], [ %object.1, %cleanup275 ], [ %6, %cleanup365 ], [ %6, %cleanup465 ], !dbg !10649
  call void @llvm.dbg.value(metadata %union.tree_node* %object.2, metadata !10321, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 %ret.5, metadata !10324, metadata !DIExpression()), !dbg !10369
  %cmp469 = icmp eq i32 %ret.5, -2, !dbg !10650
  br i1 %cmp469, label %cleanup486, label %if.else472, !dbg !10651

if.else472:                                       ; preds = %sw.epilog
  %tobool473 = icmp eq i8 %want_value, 0, !dbg !10652
  br i1 %tobool473, label %if.else475, label %if.then474, !dbg !10653

if.then474:                                       ; preds = %if.else472
  store %union.tree_node* %object.2, %union.tree_node** %expr_p, align 8, !dbg !10654
  br label %cleanup486, !dbg !10656

if.else475:                                       ; preds = %if.else472
  %74 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !10657
  %tobool476 = icmp eq %union.tree_node* %74, null, !dbg !10657
  br i1 %tobool476, label %cleanup486, label %if.then477, !dbg !10658

if.then477:                                       ; preds = %if.else475
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10659
  %76 = load %union.tree_node*, %union.tree_node** %75, align 8, !dbg !10659
  call void @llvm.dbg.value(metadata %union.tree_node* %76, metadata !10361, metadata !DIExpression()), !dbg !10660
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10661
  %78 = load %union.tree_node*, %union.tree_node** %77, align 8, !dbg !10661
  call void @llvm.dbg.value(metadata %union.tree_node* %78, metadata !10367, metadata !DIExpression()), !dbg !10660
  %call484 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %76, %union.tree_node* %78) #6, !dbg !10662
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call484, metadata !10368, metadata !DIExpression()), !dbg !10660
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call484) #7, !dbg !10663
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !10664
  br label %cleanup486, !dbg !10665

cleanup486:                                       ; preds = %if.else475, %if.then477, %sw.epilog, %if.then, %cleanup365, %if.then474, %cleanup465, %cleanup275
  %retval.6 = phi i32 [ 0, %if.then474 ], [ 0, %cleanup465 ], [ 0, %cleanup365 ], [ %retval.3, %cleanup275 ], [ -2, %if.then ], [ -2, %sw.epilog ], [ 1, %if.then477 ], [ 1, %if.else475 ], !dbg !10369
  ret i32 %retval.6, !dbg !10666
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gimple_fold_indirect_ref_rhs(%union.tree_node* %t) unnamed_addr #5 !dbg !10667 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !10669, metadata !DIExpression()), !dbg !10670
  %call = tail call %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node* %t) #7, !dbg !10671
  ret %union.tree_node* %call, !dbg !10672
}

declare dso_local zeroext i8 @is_gimple_non_addressable(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @optimize_compound_literals_in_ctor(%union.tree_node* %orig_ctor) unnamed_addr #5 !dbg !10673 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_ctor, metadata !10675, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_ctor, metadata !10676, metadata !DIExpression()), !dbg !10691
  %elts1 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10692
  %0 = bitcast i32* %elts1 to %struct.VEC_constructor_elt_gc**, !dbg !10692
  %1 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !10692
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %1, metadata !10677, metadata !DIExpression()), !dbg !10691
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %1, i64 0, i32 0, !dbg !10693
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base) #7, !dbg !10693
  call void @llvm.dbg.value(metadata i32 %call, metadata !10679, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 0, metadata !10678, metadata !DIExpression()), !dbg !10691
  br label %for.cond, !dbg !10694

for.cond:                                         ; preds = %cleanup, %entry
  %idx.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !10695
  %elts.0 = phi %struct.VEC_constructor_elt_gc* [ %1, %entry ], [ %elts.2, %cleanup ], !dbg !10696
  %ctor.0 = phi %union.tree_node* [ %orig_ctor, %entry ], [ %ctor.2, %cleanup ], !dbg !10697
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.0, metadata !10676, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %elts.0, metadata !10677, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 %idx.0, metadata !10678, metadata !DIExpression()), !dbg !10691
  %exitcond = icmp eq i32 %idx.0, %call, !dbg !10698
  br i1 %exitcond, label %for.end, label %for.body, !dbg !10699

for.body:                                         ; preds = %for.cond
  %base4 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %elts.0, i64 0, i32 0, !dbg !10700
  %call8 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base4, i32 %idx.0) #7, !dbg !10700
  %value9 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call8, i64 0, i32 1, !dbg !10701
  %2 = load %union.tree_node*, %union.tree_node** %value9, align 8, !dbg !10701
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10680, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10684, metadata !DIExpression()), !dbg !10702
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10703
  %bf.load = load i64, i64* %3, align 8, !dbg !10703
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10704
  %cmp11 = icmp eq i64 %bf.cast1, 51, !dbg !10704
  br i1 %cmp11, label %if.then, label %if.else, !dbg !10705

if.then:                                          ; preds = %for.body
  %call12 = tail call fastcc %union.tree_node* @optimize_compound_literals_in_ctor(%union.tree_node* %2) #7, !dbg !10706
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !10684, metadata !DIExpression()), !dbg !10702
  br label %if.end38, !dbg !10707

if.else:                                          ; preds = %for.body
  %cmp17 = icmp eq i64 %bf.cast1, 119, !dbg !10708
  br i1 %cmp17, label %if.then18, label %if.end38, !dbg !10709

if.then18:                                        ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10710
  %4 = bitcast %union.tree_node** %operands to %struct.tree_exp**, !dbg !10710
  %5 = load %struct.tree_exp*, %struct.tree_exp** %4, align 8, !dbg !10710
  %arrayidx21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 3, i64 0, !dbg !10711
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx21, align 8, !dbg !10711
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10689, metadata !DIExpression()), !dbg !10712
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10713
  %7 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !10713
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !10690, metadata !DIExpression()), !dbg !10712
  %bf.cast253 = and i64 %bf.load, 262144, !dbg !10714
  %tobool26 = icmp eq i64 %bf.cast253, 0, !dbg !10714
  br i1 %tobool26, label %land.lhs.true, label %if.end38, !dbg !10716

land.lhs.true:                                    ; preds = %if.then18
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10717
  %bf.load28 = load i64, i64* %8, align 8, !dbg !10717
  %bf.cast314 = and i64 %bf.load28, 262144, !dbg !10717
  %tobool32 = icmp eq i64 %bf.cast314, 0, !dbg !10717
  %tobool34 = icmp ne %union.tree_node* %7, null, !dbg !10718
  %or.cond = and i1 %tobool32, %tobool34, !dbg !10719
  br i1 %or.cond, label %if.then35, label %if.end38, !dbg !10719

if.then35:                                        ; preds = %land.lhs.true
  %call36 = tail call fastcc %union.tree_node* @optimize_compound_literals_in_ctor(%union.tree_node* nonnull %7) #7, !dbg !10720
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !10684, metadata !DIExpression()), !dbg !10702
  br label %if.end38, !dbg !10721

if.end38:                                         ; preds = %if.then18, %if.else, %land.lhs.true, %if.then35, %if.then
  %newval.2 = phi %union.tree_node* [ %call12, %if.then ], [ %2, %if.else ], [ %2, %if.then18 ], [ %2, %land.lhs.true ], [ %call36, %if.then35 ], !dbg !10702
  call void @llvm.dbg.value(metadata %union.tree_node* %newval.2, metadata !10684, metadata !DIExpression()), !dbg !10702
  %cmp39 = icmp eq %union.tree_node* %newval.2, %2, !dbg !10722
  br i1 %cmp39, label %cleanup, label %if.end41, !dbg !10724

if.end41:                                         ; preds = %if.end38
  %cmp42 = icmp eq %union.tree_node* %ctor.0, %orig_ctor, !dbg !10725
  br i1 %cmp42, label %if.then43, label %if.end56, !dbg !10727

if.then43:                                        ; preds = %if.end41
  %call44 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %orig_ctor) #6, !dbg !10728
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !10676, metadata !DIExpression()), !dbg !10691
  %call51 = tail call fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_copy(%struct.VEC_constructor_elt_base* %base4) #7, !dbg !10730
  %elts53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10731
  %9 = bitcast i32* %elts53 to %struct.VEC_constructor_elt_gc**, !dbg !10731
  store %struct.VEC_constructor_elt_gc* %call51, %struct.VEC_constructor_elt_gc** %9, align 8, !dbg !10732
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %call51, metadata !10677, metadata !DIExpression()), !dbg !10691
  br label %if.end56, !dbg !10733

if.end56:                                         ; preds = %if.then43, %if.end41
  %elts.1 = phi %struct.VEC_constructor_elt_gc* [ %call51, %if.then43 ], [ %elts.0, %if.end41 ], !dbg !10691
  %ctor.1 = phi %union.tree_node* [ %call44, %if.then43 ], [ %ctor.0, %if.end41 ], !dbg !10691
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.1, metadata !10676, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %elts.1, metadata !10677, metadata !DIExpression()), !dbg !10691
  %base59 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %elts.1, i64 0, i32 0, !dbg !10734
  %call63 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base59, i32 %idx.0) #7, !dbg !10734
  %value64 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call63, i64 0, i32 1, !dbg !10735
  store %union.tree_node* %newval.2, %union.tree_node** %value64, align 8, !dbg !10736
  br label %cleanup, !dbg !10737

cleanup:                                          ; preds = %if.end38, %if.end56
  %elts.2 = phi %struct.VEC_constructor_elt_gc* [ %elts.1, %if.end56 ], [ %elts.0, %if.end38 ], !dbg !10691
  %ctor.2 = phi %union.tree_node* [ %ctor.1, %if.end56 ], [ %ctor.0, %if.end38 ], !dbg !10691
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.2, metadata !10676, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %elts.2, metadata !10677, metadata !DIExpression()), !dbg !10691
  %inc = add i32 %idx.0, 1, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10678, metadata !DIExpression()), !dbg !10691
  br label %for.cond, !dbg !10739, !llvm.loop !10740

for.end:                                          ; preds = %for.cond
  %ctor.0.lcssa = phi %union.tree_node* [ %ctor.0, %for.cond ], !dbg !10697
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.0.lcssa, metadata !10676, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.0.lcssa, metadata !10676, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.0.lcssa, metadata !10676, metadata !DIExpression()), !dbg !10691
  ret %union.tree_node* %ctor.0.lcssa, !dbg !10742
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !10743 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !10749, metadata !DIExpression()), !dbg !10750
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !10751
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10751

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !10751
  %0 = load i32, i32* %num, align 8, !dbg !10751
  br label %cond.end, !dbg !10751

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10751
  ret i32 %cond, !dbg !10751
}

declare dso_local zeroext i8 @categorize_ctor_elements(%union.tree_node*, i64*, i64*, i8*) local_unnamed_addr #2

declare dso_local void @lhd_set_decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @count_type_elements(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #2

declare dso_local i32 @can_move_by_pieces(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_init_ctor_preeval(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, %struct.gimplify_init_ctor_preeval_data* %data) unnamed_addr #5 !dbg !10752 {
entry:
  %ce = alloca %struct.constructor_elt_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !10756, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !10757, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !10758, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata %struct.gimplify_init_ctor_preeval_data* %data, metadata !10759, metadata !DIExpression()), !dbg !10766
  %0 = bitcast %union.tree_node** %expr_p to i64**, !dbg !10767
  %1 = load i64*, i64** %0, align 8, !dbg !10767
  %bf.load = load i64, i64* %1, align 8, !dbg !10767
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !10767
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !10767
  br i1 %tobool, label %if.end, label %if.then, !dbg !10769

if.then:                                          ; preds = %entry
  %bf.cast55 = and i64 %bf.load, 65536, !dbg !10770
  %tobool6 = icmp eq i64 %bf.cast55, 0, !dbg !10770
  br i1 %tobool6, label %cleanup.cont, label %cond.true, !dbg !10770

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3263, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10770
  br label %cleanup.cont, !dbg !10770

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds i64, i64* %1, i64 2, !dbg !10772
  %2 = bitcast i64* %type to i64**, !dbg !10772
  %3 = load i64*, i64** %2, align 8, !dbg !10772
  %bf.load8 = load i64, i64* %3, align 8, !dbg !10772
  %bf.cast112 = and i64 %bf.load8, 262144, !dbg !10772
  %tobool12 = icmp eq i64 %bf.cast112, 0, !dbg !10772
  br i1 %tobool12, label %if.end14, label %cleanup.cont, !dbg !10774

if.end14:                                         ; preds = %if.end
  %bf.cast183 = and i64 %bf.load, 65535, !dbg !10775
  %cmp = icmp eq i64 %bf.cast183, 51, !dbg !10775
  br i1 %cmp, label %if.then19, label %if.end27, !dbg !10776

if.then19:                                        ; preds = %if.end14
  %4 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !10777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !10777
  %elts = getelementptr inbounds i64, i64* %1, i64 3, !dbg !10778
  %5 = bitcast i64* %elts to %struct.VEC_constructor_elt_gc**, !dbg !10778
  %6 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %5, align 8, !dbg !10778
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %6, metadata !10765, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i64 0, metadata !10761, metadata !DIExpression()), !dbg !10779
  %base22 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %6, i64 0, i32 0, !dbg !10780
  br label %for.cond, !dbg !10783

for.cond:                                         ; preds = %for.body, %if.then19
  %ix.0 = phi i64 [ 0, %if.then19 ], [ %inc, %for.body ], !dbg !10784
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !10761, metadata !DIExpression()), !dbg !10779
  %conv = trunc i64 %ix.0 to i32, !dbg !10785
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !10764, metadata !DIExpression(DW_OP_deref)), !dbg !10779
  %call = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %base22, i32 %conv, %struct.constructor_elt_d** nonnull %ce) #7, !dbg !10785
  %tobool26 = icmp eq i32 %call, 0, !dbg !10786
  br i1 %tobool26, label %for.end, label %for.body, !dbg !10786

for.body:                                         ; preds = %for.cond
  %7 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !10787
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %7, metadata !10764, metadata !DIExpression()), !dbg !10779
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %7, i64 0, i32 1, !dbg !10788
  call fastcc void @gimplify_init_ctor_preeval(%union.tree_node** nonnull %value, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, %struct.gimplify_init_ctor_preeval_data* %data) #7, !dbg !10789
  %inc = add i64 %ix.0, 1, !dbg !10790
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10761, metadata !DIExpression()), !dbg !10779
  br label %for.cond, !dbg !10791, !llvm.loop !10792

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !10794
  br label %cleanup.cont

if.end27:                                         ; preds = %if.end14
  tail call fastcc void @maybe_with_size_expr(%union.tree_node** %expr_p) #7, !dbg !10795
  %call28 = tail call i32 @gimplify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_mem_rhs, i32 1) #7, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %call28, metadata !10760, metadata !DIExpression()), !dbg !10766
  %cmp29 = icmp eq i32 %call28, -2, !dbg !10797
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !10799

if.then31:                                        ; preds = %if.end27
  store %union.tree_node* null, %union.tree_node** %expr_p, align 8, !dbg !10800
  br label %cleanup.cont, !dbg !10802

if.end32:                                         ; preds = %if.end27
  %8 = load i64*, i64** %0, align 8, !dbg !10803
  %bf.load34 = load i64, i64* %8, align 8, !dbg !10803
  %bf.cast36 = and i64 %bf.load34, 65535, !dbg !10803
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast36, !dbg !10803
  %9 = load i32, i32* %arrayidx, align 4, !dbg !10803
  %cmp37 = icmp eq i32 %9, 3, !dbg !10803
  br i1 %cmp37, label %cleanup.cont, label %if.end40, !dbg !10805

if.end40:                                         ; preds = %if.end32
  %type42 = getelementptr inbounds i64, i64* %8, i64 2, !dbg !10806
  %10 = bitcast i64* %type42 to %struct.tree_type**, !dbg !10806
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !10806
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 2, !dbg !10806
  %12 = bitcast %union.tree_node** %size to i64**, !dbg !10806
  %13 = load i64*, i64** %12, align 8, !dbg !10806
  %bf.load45 = load i64, i64* %13, align 8, !dbg !10806
  %bf.cast474 = and i64 %bf.load45, 65535, !dbg !10808
  %cmp48 = icmp eq i64 %bf.cast474, 23, !dbg !10808
  br i1 %cmp48, label %if.end51, label %cleanup.cont, !dbg !10809

if.end51:                                         ; preds = %if.end40
  %14 = bitcast %struct.gimplify_init_ctor_preeval_data* %data to i8*, !dbg !10810
  %call52 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %expr_p, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @gimplify_init_ctor_preeval_1, i8* %14, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !10810
  %tobool53 = icmp eq %union.tree_node* %call52, null, !dbg !10810
  br i1 %tobool53, label %cleanup.cont, label %if.end55, !dbg !10812

if.end55:                                         ; preds = %if.end51
  %15 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !10813
  %call56 = tail call %union.tree_node* @get_formal_tmp_var(%union.tree_node* %15, %struct.gimple_seq_d** %pre_p) #7, !dbg !10814
  store %union.tree_node* %call56, %union.tree_node** %expr_p, align 8, !dbg !10815
  br label %cleanup.cont, !dbg !10816

cleanup.cont:                                     ; preds = %if.then, %if.end51, %if.end40, %if.end, %for.end, %if.then31, %if.end55, %cond.true, %if.end32
  ret void, !dbg !10816
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_init_ctor_eval(%union.tree_node* %object, %struct.VEC_constructor_elt_gc* %elts, %struct.gimple_seq_d** %pre_p, i8 zeroext %cleared) unnamed_addr #5 !dbg !10817 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %object, metadata !10821, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %elts, metadata !10822, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !10823, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i8 %cleared, metadata !10824, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10825, metadata !DIExpression()), !dbg !10840
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %object, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10841
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !10841
  %1 = load i64*, i64** %0, align 8, !dbg !10841
  %bf.load = load i64, i64* %1, align 8, !dbg !10841
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !10843
  %cmp = icmp eq i64 %bf.cast2, 15, !dbg !10843
  br i1 %cmp, label %if.then, label %if.end, !dbg !10844

if.then:                                          ; preds = %entry
  %type4 = getelementptr inbounds i64, i64* %1, i64 2, !dbg !10845
  %2 = bitcast i64* %type4 to %struct.tree_type**, !dbg !10845
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !10845
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 16, !dbg !10845
  %4 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !10845
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10825, metadata !DIExpression()), !dbg !10840
  br label %if.end, !dbg !10846

if.end:                                           ; preds = %if.then, %entry
  %array_elt_type.0 = phi %union.tree_node* [ %4, %if.then ], [ null, %entry ], !dbg !10840
  call void @llvm.dbg.value(metadata %union.tree_node* %array_elt_type.0, metadata !10825, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i64 0, metadata !10826, metadata !DIExpression()), !dbg !10840
  %base6 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %elts, i64 0, i32 0, !dbg !10847
  %tobool36 = icmp eq i8 %cleared, 0, !dbg !10848
  %tobool74 = icmp eq %union.tree_node* %array_elt_type.0, null, !dbg !10850
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10852
  br label %for.cond, !dbg !10855

for.cond:                                         ; preds = %cleanup129, %if.end
  %ix.0 = phi i64 [ 0, %if.end ], [ %inc, %cleanup129 ], !dbg !10856
  %purpose.0 = phi %union.tree_node* [ undef, %if.end ], [ %purpose.6, %cleanup129 ]
  %6 = phi %struct.tree_constructor* [ undef, %if.end ], [ %10, %cleanup129 ]
  %value.0 = phi %union.tree_node* [ undef, %if.end ], [ %value.1, %cleanup129 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !10828, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0, metadata !10827, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !10826, metadata !DIExpression()), !dbg !10840
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base6) #7, !dbg !10857
  %conv = zext i32 %call to i64, !dbg !10857
  %cmp7 = icmp ult i64 %ix.0, %conv, !dbg !10857
  br i1 %cmp7, label %cond.false10, label %cond.end28, !dbg !10857

cond.false10:                                     ; preds = %for.cond
  %conv17 = trunc i64 %ix.0 to i32, !dbg !10857
  %call18 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base6, i32 %conv17) #7, !dbg !10857
  %value19 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call18, i64 0, i32 1, !dbg !10857
  %7 = load %union.tree_node*, %union.tree_node** %value19, align 8, !dbg !10857
  %8 = bitcast %union.tree_node* %7 to %struct.tree_constructor*, !dbg !10840
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !10828, metadata !DIExpression()), !dbg !10840
  %call27 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base6, i32 %conv17) #7, !dbg !10857
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 0, !dbg !10857
  %9 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !10857
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10827, metadata !DIExpression()), !dbg !10840
  br label %cond.end28, !dbg !10857

cond.end28:                                       ; preds = %for.cond, %cond.false10
  %purpose.1 = phi %union.tree_node* [ %9, %cond.false10 ], [ %purpose.0, %for.cond ]
  %10 = phi %struct.tree_constructor* [ %8, %cond.false10 ], [ %6, %for.cond ]
  %value.1 = phi %union.tree_node* [ %7, %cond.false10 ], [ %value.0, %for.cond ]
  %cond29 = phi i1 [ true, %cond.false10 ], [ false, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !10828, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.1, metadata !10827, metadata !DIExpression()), !dbg !10840
  br i1 %cond29, label %for.body, label %for.end, !dbg !10855

for.body:                                         ; preds = %cond.end28
  %cmp31 = icmp eq %union.tree_node* %value.1, null, !dbg !10858
  br i1 %cmp31, label %cleanup129, label %if.end34, !dbg !10860

if.end34:                                         ; preds = %for.body
  br i1 %tobool36, label %if.end41, label %land.lhs.true, !dbg !10861

land.lhs.true:                                    ; preds = %if.end34
  %call37 = tail call zeroext i8 @initializer_zerop(%union.tree_node* nonnull %value.1) #6, !dbg !10862
  %tobool39 = icmp eq i8 %call37, 0, !dbg !10862
  br i1 %tobool39, label %if.end41, label %cleanup129, !dbg !10863

if.end41:                                         ; preds = %land.lhs.true, %if.end34
  %tobool42 = icmp eq %union.tree_node* %purpose.1, null, !dbg !10864
  br i1 %tobool42, label %cond.true43, label %cond.end45, !dbg !10864

cond.true43:                                      ; preds = %if.end41
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10864
  br label %cond.end45, !dbg !10864

cond.end45:                                       ; preds = %if.end41, %cond.true43
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10865
  %bf.load48 = load i64, i64* %11, align 8, !dbg !10865
  %bf.cast503 = and i64 %bf.load48, 65536, !dbg !10865
  %tobool51 = icmp eq i64 %bf.cast503, 0, !dbg !10865
  br i1 %tobool51, label %land.lhs.true52, label %if.end57, !dbg !10867

land.lhs.true52:                                  ; preds = %cond.end45
  %call53 = tail call fastcc zeroext i8 @zero_sized_field_decl(%union.tree_node* %purpose.1) #7, !dbg !10868
  %tobool55 = icmp eq i8 %call53, 0, !dbg !10868
  br i1 %tobool55, label %if.end57, label %cleanup129, !dbg !10869

if.end57:                                         ; preds = %land.lhs.true52, %cond.end45
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %purpose.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10870
  %bf.load59 = load i64, i64* %12, align 8, !dbg !10870
  %bf.cast614 = and i64 %bf.load59, 65535, !dbg !10871
  %cmp62 = icmp eq i64 %bf.cast614, 111, !dbg !10871
  br i1 %cmp62, label %if.then64, label %if.end73, !dbg !10872

if.then64:                                        ; preds = %if.end57
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %purpose.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10873
  %13 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10873
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !10833, metadata !DIExpression()), !dbg !10874
  %arrayidx67 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10875
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8, !dbg !10875
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10836, metadata !DIExpression()), !dbg !10874
  %call68 = tail call i32 @simple_cst_equal(%union.tree_node* %13, %union.tree_node* %14) #6, !dbg !10876
  %tobool69 = icmp eq i32 %call68, 0, !dbg !10876
  br i1 %tobool69, label %if.else, label %cleanup, !dbg !10878

if.else:                                          ; preds = %if.then64
  tail call fastcc void @gimplify_init_ctor_eval_range(%union.tree_node* %object, %union.tree_node* %13, %union.tree_node* %14, %union.tree_node* nonnull %value.1, %union.tree_node* %array_elt_type.0, %struct.gimple_seq_d** %pre_p, i8 zeroext %cleared) #7, !dbg !10879
  br label %cleanup, !dbg !10881

cleanup:                                          ; preds = %if.then64, %if.else
  %purpose.2 = phi %union.tree_node* [ %purpose.1, %if.else ], [ %14, %if.then64 ]
  %cleanup.dest.slot.0 = phi i1 [ false, %if.else ], [ true, %if.then64 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.2, metadata !10827, metadata !DIExpression()), !dbg !10840
  br i1 %cleanup.dest.slot.0, label %if.end73, label %cleanup129

if.end73:                                         ; preds = %cleanup, %if.end57
  %purpose.3 = phi %union.tree_node* [ %purpose.1, %if.end57 ], [ %purpose.2, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.3, metadata !10827, metadata !DIExpression()), !dbg !10840
  br i1 %tobool74, label %if.else91, label %if.then75, !dbg !10882

if.then75:                                        ; preds = %if.end73
  %15 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !10883
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 1, !dbg !10883
  %16 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !10883
  %tobool79 = icmp eq %union.tree_node* %16, null, !dbg !10883
  br i1 %tobool79, label %if.end88, label %if.then80, !dbg !10884

if.then80:                                        ; preds = %if.then75
  %type86 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10885
  %17 = load %union.tree_node*, %union.tree_node** %type86, align 8, !dbg !10885
  %call87 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %17, %union.tree_node* %purpose.3) #6, !dbg !10885
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !10827, metadata !DIExpression()), !dbg !10840
  br label %if.end88, !dbg !10886

if.end88:                                         ; preds = %if.then75, %if.then80
  %purpose.4 = phi %union.tree_node* [ %call87, %if.then80 ], [ %purpose.3, %if.then75 ], !dbg !10887
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.4, metadata !10827, metadata !DIExpression()), !dbg !10840
  %call89 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %object) #7, !dbg !10888
  %call90 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* nonnull %array_elt_type.0, %union.tree_node* %call89, %union.tree_node* %purpose.4, %union.tree_node* null, %union.tree_node* null) #6, !dbg !10888
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !10829, metadata !DIExpression()), !dbg !10887
  br label %if.end106, !dbg !10889

if.else91:                                        ; preds = %if.end73
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %purpose.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10890
  %bf.load93 = load i64, i64* %18, align 8, !dbg !10890
  %bf.cast955 = and i64 %bf.load93, 65535, !dbg !10890
  %cmp96 = icmp eq i64 %bf.cast955, 31, !dbg !10890
  br i1 %cmp96, label %cond.end100, label %cond.true98, !dbg !10890

cond.true98:                                      ; preds = %if.else91
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10890
  br label %cond.end100, !dbg !10890

cond.end100:                                      ; preds = %if.else91, %cond.true98
  %type103 = getelementptr inbounds %union.tree_node, %union.tree_node* %purpose.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10892
  %19 = load %union.tree_node*, %union.tree_node** %type103, align 8, !dbg !10892
  %call104 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %object) #7, !dbg !10892
  %call105 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %19, %union.tree_node* %call104, %union.tree_node* %purpose.3, %union.tree_node* null) #6, !dbg !10892
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !10829, metadata !DIExpression()), !dbg !10887
  br label %if.end106

if.end106:                                        ; preds = %cond.end100, %if.end88
  %purpose.5 = phi %union.tree_node* [ %purpose.4, %if.end88 ], [ %purpose.3, %cond.end100 ], !dbg !10887
  %cref.0 = phi %union.tree_node* [ %call90, %if.end88 ], [ %call105, %cond.end100 ], !dbg !10850
  call void @llvm.dbg.value(metadata %union.tree_node* %cref.0, metadata !10829, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.5, metadata !10827, metadata !DIExpression()), !dbg !10840
  %bf.load108 = load i64, i64* %11, align 8, !dbg !10893
  %bf.cast1106 = and i64 %bf.load108, 65535, !dbg !10894
  %cmp111 = icmp eq i64 %bf.cast1106, 51, !dbg !10894
  br i1 %cmp111, label %land.lhs.true113, label %if.else124, !dbg !10895

land.lhs.true113:                                 ; preds = %if.end106
  %type115 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10896
  %20 = bitcast %union.tree_node** %type115 to i64**, !dbg !10896
  %21 = load i64*, i64** %20, align 8, !dbg !10896
  %bf.load117 = load i64, i64* %21, align 8, !dbg !10896
  %bf.cast1197 = and i64 %bf.load117, 65535, !dbg !10897
  %cmp120 = icmp eq i64 %bf.cast1197, 14, !dbg !10897
  br i1 %cmp120, label %if.else124, label %if.then122, !dbg !10898

if.then122:                                       ; preds = %land.lhs.true113
  %elts123 = getelementptr inbounds %struct.tree_constructor, %struct.tree_constructor* %10, i64 0, i32 1, !dbg !10899
  %22 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %elts123, align 8, !dbg !10899
  tail call fastcc void @gimplify_init_ctor_eval(%union.tree_node* %cref.0, %struct.VEC_constructor_elt_gc* %22, %struct.gimple_seq_d** %pre_p, i8 zeroext %cleared) #7, !dbg !10900
  br label %cleanup129, !dbg !10900

if.else124:                                       ; preds = %land.lhs.true113, %if.end106
  %type126 = getelementptr inbounds %union.tree_node, %union.tree_node* %cref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10901
  %23 = load %union.tree_node*, %union.tree_node** %type126, align 8, !dbg !10901
  %call127 = tail call %union.tree_node* @build2_stat(i32 54, %union.tree_node* %23, %union.tree_node* %cref.0, %union.tree_node* nonnull %value.1) #6, !dbg !10901
  call void @llvm.dbg.value(metadata %union.tree_node* %call127, metadata !10837, metadata !DIExpression()), !dbg !10902
  tail call void @gimplify_and_add(%union.tree_node* %call127, %struct.gimple_seq_d** %pre_p) #7, !dbg !10903
  %24 = bitcast %union.tree_node* %call127 to i8*, !dbg !10904
  tail call void @ggc_free(i8* %24) #6, !dbg !10905
  br label %cleanup129

cleanup129:                                       ; preds = %land.lhs.true, %land.lhs.true52, %if.then122, %if.else124, %for.body, %cleanup
  %purpose.6 = phi %union.tree_node* [ %purpose.2, %cleanup ], [ %purpose.1, %for.body ], [ %purpose.1, %land.lhs.true ], [ %purpose.1, %land.lhs.true52 ], [ %purpose.5, %if.else124 ], [ %purpose.5, %if.then122 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.6, metadata !10827, metadata !DIExpression()), !dbg !10840
  %inc = add i64 %ix.0, 1, !dbg !10857
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10826, metadata !DIExpression()), !dbg !10840
  br label %for.cond, !dbg !10857, !llvm.loop !10906

for.end:                                          ; preds = %cond.end28
  ret void, !dbg !10908
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !10909 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !10913, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10914, metadata !DIExpression()), !dbg !10915
  br label %land.end, !dbg !10916

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !10916
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10916
  ret %struct.constructor_elt_d* %arrayidx, !dbg !10916
}

declare dso_local %union.tree_node* @build_complex(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_from_ctor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

declare dso_local %union.tree_node* @initializer_constant_valid_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_copy(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !10917 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !10921, metadata !DIExpression()), !dbg !10924
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !10925
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10925

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !10925
  %0 = load i32, i32* %num, align 8, !dbg !10925
  %phitmp = zext i32 %0 to i64, !dbg !10925
  br label %cond.end, !dbg !10925

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !10922, metadata !DIExpression()), !dbg !10924
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* null, metadata !10923, metadata !DIExpression()), !dbg !10924
  %tobool1 = icmp eq i64 %cond, 0, !dbg !10926
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10925

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !10928
  %call = tail call i8* @vec_gc_o_reserve_exact(i8* null, i32 %conv2, i64 8, i64 16) #6, !dbg !10928
  %1 = bitcast i8* %call to %struct.VEC_constructor_elt_gc*, !dbg !10928
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %1, metadata !10923, metadata !DIExpression()), !dbg !10924
  %num4 = bitcast i8* %call to i32*, !dbg !10928
  store i32 %conv2, i32* %num4, align 8, !dbg !10928
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !10928
  %arraydecay7 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 0, !dbg !10928
  %2 = bitcast %struct.constructor_elt_d* %arraydecay7 to i8*, !dbg !10928
  %mul = shl nuw nsw i64 %cond, 4, !dbg !10928
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !10928
  br label %if.end, !dbg !10928

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_constructor_elt_gc* [ %1, %if.then ], [ null, %cond.end ], !dbg !10924
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %new_vec_.0, metadata !10923, metadata !DIExpression()), !dbg !10924
  ret %struct.VEC_constructor_elt_gc* %new_vec_.0, !dbg !10925
}

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @gimplify_init_ctor_preeval_1(%union.tree_node** %tp, i32* %walk_subtrees, i8* %xdata) #5 !dbg !10930 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !10932, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !10933, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i8* %xdata, metadata !10934, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i8* %xdata, metadata !10935, metadata !DIExpression()), !dbg !10941
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !10942
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10936, metadata !DIExpression()), !dbg !10941
  %lhs_base_decl = bitcast i8* %xdata to %union.tree_node**, !dbg !10943
  %1 = load %union.tree_node*, %union.tree_node** %lhs_base_decl, align 8, !dbg !10943
  %cmp = icmp eq %union.tree_node* %1, %0, !dbg !10945
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10946
  br i1 %cmp, label %cleanup79, label %if.end, !dbg !10946

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10947
  %bf.load = load i64, i64* %3, align 8, !dbg !10947
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10949
  %cmp1 = icmp eq i64 %bf.cast1, 47, !dbg !10949
  br i1 %cmp1, label %land.lhs.true, label %if.end13, !dbg !10950

land.lhs.true:                                    ; preds = %if.end
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !10951
  br i1 %tobool, label %land.lhs.true9, label %lor.lhs.false, !dbg !10952

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.load5 = load i64, i64* %2, align 8, !dbg !10953
  %bf.cast76 = and i64 %bf.load5, 262144, !dbg !10953
  %tobool8 = icmp eq i64 %bf.cast76, 0, !dbg !10953
  br i1 %tobool8, label %if.end13, label %land.lhs.true9, !dbg !10954

land.lhs.true9:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %lhs_alias_set = getelementptr inbounds i8, i8* %xdata, i64 8, !dbg !10955
  %4 = bitcast i8* %lhs_alias_set to i32*, !dbg !10955
  %5 = load i32, i32* %4, align 8, !dbg !10955
  %call = tail call i32 @get_alias_set(%union.tree_node* %0) #6, !dbg !10956
  %call10 = tail call i32 @alias_sets_conflict_p(i32 %5, i32 %call) #6, !dbg !10957
  %tobool11 = icmp eq i32 %call10, 0, !dbg !10957
  br i1 %tobool11, label %land.lhs.true9.if.end13_crit_edge, label %cleanup79, !dbg !10958

land.lhs.true9.if.end13_crit_edge:                ; preds = %land.lhs.true9
  %bf.load15.pre = load i64, i64* %3, align 8, !dbg !10959
  br label %if.end13, !dbg !10958

if.end13:                                         ; preds = %land.lhs.true9.if.end13_crit_edge, %lor.lhs.false, %if.end
  %bf.load15 = phi i64 [ %bf.load15.pre, %land.lhs.true9.if.end13_crit_edge ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %if.end ], !dbg !10959
  %bf.cast172 = and i64 %bf.load15, 65535, !dbg !10960
  %cmp18 = icmp eq i64 %bf.cast172, 59, !dbg !10960
  br i1 %cmp18, label %if.then19, label %if.end62, !dbg !10961

if.then19:                                        ; preds = %if.end13
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10962
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10962
  %6 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !10962
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !10962
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !10962
  %8 = bitcast %union.tree_node** %type20 to %struct.tree_common**, !dbg !10962
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !10962
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !10962
  %10 = bitcast %union.tree_node** %type22 to %struct.tree_type**, !dbg !10962
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !10962
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 1, !dbg !10963
  %lhs_alias_set50 = getelementptr inbounds i8, i8* %xdata, i64 8, !dbg !10965
  %12 = bitcast i8* %lhs_alias_set50 to i32*, !dbg !10965
  br label %for.cond, !dbg !10968

for.cond:                                         ; preds = %for.inc, %if.then19
  %type.0.in = phi %union.tree_node** [ %values, %if.then19 ], [ %chain, %for.inc ]
  %type.0 = load %union.tree_node*, %union.tree_node** %type.0.in, align 8, !dbg !10969
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !10937, metadata !DIExpression()), !dbg !10970
  %tobool24 = icmp eq %union.tree_node* %type.0, null, !dbg !10971
  br i1 %tobool24, label %cleanup, label %for.body, !dbg !10971

for.body:                                         ; preds = %for.cond
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10972
  %14 = bitcast %union.tree_node** %13 to i64**, !dbg !10972
  %15 = load i64*, i64** %14, align 8, !dbg !10972
  %bf.load26 = load i64, i64* %15, align 8, !dbg !10972
  %bf.cast283 = and i64 %bf.load26, 65535, !dbg !10972
  %cmp29 = icmp eq i64 %bf.cast283, 10, !dbg !10972
  br i1 %cmp29, label %land.lhs.true38, label %lor.lhs.false30, !dbg !10972

lor.lhs.false30:                                  ; preds = %for.body
  %cmp37 = icmp eq i64 %bf.cast283, 12, !dbg !10972
  br i1 %cmp37, label %land.lhs.true38, label %for.inc, !dbg !10973

land.lhs.true38:                                  ; preds = %lor.lhs.false30, %for.body
  %16 = load %union.tree_node*, %union.tree_node** %lhs_base_decl, align 8, !dbg !10974
  %tobool40 = icmp eq %union.tree_node* %16, null, !dbg !10975
  br i1 %tobool40, label %land.lhs.true49, label %lor.lhs.false41, !dbg !10976

lor.lhs.false41:                                  ; preds = %land.lhs.true38
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10976
  %bf.load44 = load i64, i64* %17, align 8, !dbg !10977
  %bf.cast475 = and i64 %bf.load44, 262144, !dbg !10977
  %tobool48 = icmp eq i64 %bf.cast475, 0, !dbg !10977
  br i1 %tobool48, label %for.inc, label %land.lhs.true49, !dbg !10978

land.lhs.true49:                                  ; preds = %lor.lhs.false41, %land.lhs.true38
  %18 = load i32, i32* %12, align 8, !dbg !10979
  %type54 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !10980
  %19 = bitcast i64* %type54 to %union.tree_node**, !dbg !10980
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !10980
  %call55 = tail call i32 @get_alias_set(%union.tree_node* %20) #6, !dbg !10981
  %call56 = tail call i32 @alias_sets_conflict_p(i32 %18, i32 %call55) #6, !dbg !10982
  %tobool57 = icmp eq i32 %call56, 0, !dbg !10982
  br i1 %tobool57, label %for.inc, label %cleanup, !dbg !10983

for.inc:                                          ; preds = %lor.lhs.false41, %land.lhs.true49, %lor.lhs.false30
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10984
  br label %for.cond, !dbg !10985, !llvm.loop !10986

cleanup:                                          ; preds = %land.lhs.true49, %for.cond
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true49 ], [ true, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end62_crit_edge, label %cleanup79

cleanup.if.end62_crit_edge:                       ; preds = %cleanup
  %bf.load64.pre = load i64, i64* %3, align 8, !dbg !10988
  %.pre = and i64 %bf.load64.pre, 65535, !dbg !10988
  br label %if.end62

if.end62:                                         ; preds = %cleanup.if.end62_crit_edge, %if.end13
  %bf.cast66.pre-phi = phi i64 [ %.pre, %cleanup.if.end62_crit_edge ], [ %bf.cast172, %if.end13 ], !dbg !10988
  %arrayidx67 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast66.pre-phi, !dbg !10988
  %21 = load i32, i32* %arrayidx67, align 4, !dbg !10988
  %cmp68 = icmp eq i32 %21, 2, !dbg !10988
  br i1 %cmp68, label %if.then77, label %lor.lhs.false69, !dbg !10988

lor.lhs.false69:                                  ; preds = %if.end62
  %cmp76 = icmp eq i32 %21, 3, !dbg !10988
  br i1 %cmp76, label %if.then77, label %cleanup79, !dbg !10990

if.then77:                                        ; preds = %lor.lhs.false69, %if.end62
  store i32 0, i32* %walk_subtrees, align 4, !dbg !10991
  br label %cleanup79, !dbg !10992

cleanup79:                                        ; preds = %land.lhs.true9, %lor.lhs.false69, %if.then77, %entry, %cleanup
  %retval.1 = phi %union.tree_node* [ %0, %cleanup ], [ %0, %entry ], [ %0, %land.lhs.true9 ], [ null, %if.then77 ], [ null, %lor.lhs.false69 ], !dbg !10941
  ret %union.tree_node* %retval.1, !dbg !10993
}

declare dso_local i32 @alias_sets_conflict_p(i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @initializer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @zero_sized_field_decl(%union.tree_node* %fdecl) unnamed_addr #5 !dbg !10994 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fdecl, metadata !10996, metadata !DIExpression()), !dbg !10997
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %fdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10998
  %bf.load = load i64, i64* %0, align 8, !dbg !10998
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11000
  %cmp = icmp eq i64 %bf.cast1, 31, !dbg !11000
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11001

land.lhs.true:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %fdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11002
  %1 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !11002
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !11002
  br i1 %tobool, label %if.end, label %land.lhs.true1, !dbg !11003

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %1) #6, !dbg !11004
  %tobool4 = icmp eq i32 %call, 0, !dbg !11004
  br i1 %tobool4, label %if.end, label %return, !dbg !11005

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  br label %return, !dbg !11006

return:                                           ; preds = %land.lhs.true1, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true1 ], !dbg !10997
  ret i8 %retval.0, !dbg !11007
}

declare dso_local i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_init_ctor_eval_range(%union.tree_node* %object, %union.tree_node* %lower, %union.tree_node* %upper, %union.tree_node* %value, %union.tree_node* %array_elt_type, %struct.gimple_seq_d** %pre_p, i8 zeroext %cleared) unnamed_addr #5 !dbg !11008 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %object, metadata !11012, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %union.tree_node* %lower, metadata !11013, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %union.tree_node* %upper, metadata !11014, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !11015, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %union.tree_node* %array_elt_type, metadata !11016, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !11017, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i8 %cleared, metadata !11018, metadata !DIExpression()), !dbg !11026
  %call = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !11027
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11019, metadata !DIExpression()), !dbg !11026
  %call1 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !11028
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11020, metadata !DIExpression()), !dbg !11026
  %call2 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !11029
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11021, metadata !DIExpression()), !dbg !11026
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %upper, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11030
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11030
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  %call3 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %0, i8* null) #7, !dbg !11031
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !11022, metadata !DIExpression()), !dbg !11026
  %call4 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call3, %union.tree_node* %lower) #6, !dbg !11032
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call4) #7, !dbg !11033
  %call5 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call) #6, !dbg !11034
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call5) #7, !dbg !11035
  %call6 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %object) #7, !dbg !11036
  %call7 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %array_elt_type, %union.tree_node* %call6, %union.tree_node* %call3, %union.tree_node* null, %union.tree_node* null) #6, !dbg !11036
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !11024, metadata !DIExpression()), !dbg !11026
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11037
  %bf.load = load i64, i64* %1, align 8, !dbg !11037
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11039
  %cmp = icmp eq i64 %bf.cast1, 51, !dbg !11039
  br i1 %cmp, label %if.then, label %if.else, !dbg !11040

if.then:                                          ; preds = %entry
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11041
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !11041
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !11041
  tail call fastcc void @gimplify_init_ctor_eval(%union.tree_node* %call7, %struct.VEC_constructor_elt_gc* %3, %struct.gimple_seq_d** %pre_p, i8 zeroext %cleared) #7, !dbg !11042
  br label %if.end, !dbg !11042

if.else:                                          ; preds = %entry
  %call8 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call7, %union.tree_node* %value) #6, !dbg !11043
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call8) #7, !dbg !11044
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call9 = tail call %union.gimple_statement_d* @gimple_build_cond(i32 101, %union.tree_node* %call3, %union.tree_node* %upper, %union.tree_node* %call1, %union.tree_node* %call2) #6, !dbg !11045
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call9) #7, !dbg !11046
  %call10 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call2) #6, !dbg !11047
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call10) #7, !dbg !11048
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !11049
  %call11 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %4) #6, !dbg !11049
  %call12 = tail call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %0, %union.tree_node* %call3, %union.tree_node* %call11) #6, !dbg !11049
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !11025, metadata !DIExpression()), !dbg !11026
  %call13 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call3, %union.tree_node* %call12) #6, !dbg !11050
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call13) #7, !dbg !11051
  %call14 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call) #6, !dbg !11052
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call14) #7, !dbg !11053
  %call15 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call1) #6, !dbg !11054
  tail call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call15) #7, !dbg !11055
  ret void, !dbg !11056
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_gimple_addressable(%union.tree_node** %expr_p, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !11057 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !11059, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !11060, metadata !DIExpression()), !dbg !11061
  br label %while.cond, !dbg !11062

while.cond:                                       ; preds = %while.body, %entry
  %expr_p.addr.0 = phi %union.tree_node** [ %expr_p, %entry ], [ %operands, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p.addr.0, metadata !11059, metadata !DIExpression()), !dbg !11061
  %0 = load %union.tree_node*, %union.tree_node** %expr_p.addr.0, align 8, !dbg !11063
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %0) #7, !dbg !11064
  %tobool = icmp eq i8 %call, 0, !dbg !11062
  %1 = load %union.tree_node*, %union.tree_node** %expr_p.addr.0, align 8, !dbg !11061
  br i1 %tobool, label %while.end, label %while.body, !dbg !11062

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11065
  call void @llvm.dbg.value(metadata %union.tree_node** %operands, metadata !11059, metadata !DIExpression()), !dbg !11061
  br label %while.cond, !dbg !11062, !llvm.loop !11066

while.end:                                        ; preds = %while.cond
  %expr_p.addr.0.lcssa = phi %union.tree_node** [ %expr_p.addr.0, %while.cond ]
  %.lcssa = phi %union.tree_node* [ %1, %while.cond ], !dbg !11061
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p.addr.0.lcssa, metadata !11059, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p.addr.0.lcssa, metadata !11059, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p.addr.0.lcssa, metadata !11059, metadata !DIExpression()), !dbg !11061
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %.lcssa) #6, !dbg !11067
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11067
  br i1 %tobool2, label %if.end, label %if.then, !dbg !11069

if.then:                                          ; preds = %while.end
  %2 = load %union.tree_node*, %union.tree_node** %expr_p.addr.0.lcssa, align 8, !dbg !11070
  %call3 = tail call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %2, %struct.gimple_seq_d** %seq_p, %struct.gimple_seq_d** null) #7, !dbg !11071
  store %union.tree_node* %call3, %union.tree_node** %expr_p.addr.0.lcssa, align 8, !dbg !11072
  br label %if.end, !dbg !11073

if.end:                                           ; preds = %while.end, %if.then
  ret void, !dbg !11074
}

declare dso_local zeroext i8 @tree_ssa_useless_type_conversion(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_sign_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @canonicalize_addr_expr(%union.tree_node** %expr_p) unnamed_addr #5 !dbg !11075 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !11077, metadata !DIExpression()), !dbg !11083
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !11084
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11078, metadata !DIExpression()), !dbg !11083
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11085
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11085
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11079, metadata !DIExpression()), !dbg !11083
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11086
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !11086
  %3 = load i64*, i64** %2, align 8, !dbg !11086
  %bf.load = load i64, i64* %3, align 8, !dbg !11086
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11086
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !11086
  br i1 %cmp, label %lor.lhs.false8, label %lor.lhs.false, !dbg !11086

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 12, !dbg !11086
  br i1 %cmp7, label %lor.lhs.false8, label %cleanup.cont, !dbg !11088

lor.lhs.false8:                                   ; preds = %lor.lhs.false, %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11089
  %bf.load10 = load i64, i64* %4, align 8, !dbg !11089
  %bf.cast123 = and i64 %bf.load10, 65535, !dbg !11090
  %cmp13 = icmp eq i64 %bf.cast123, 121, !dbg !11090
  br i1 %cmp13, label %if.end, label %cleanup.cont, !dbg !11091

if.end:                                           ; preds = %lor.lhs.false8
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11092
  %5 = bitcast %union.tree_node** %type15 to %struct.tree_common**, !dbg !11092
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !11092
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !11092
  %7 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !11092
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11080, metadata !DIExpression()), !dbg !11083
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11093
  %bf.load19 = load i64, i64* %8, align 8, !dbg !11093
  %bf.cast214 = and i64 %bf.load19, 65535, !dbg !11095
  %cmp22 = icmp eq i64 %bf.cast214, 15, !dbg !11095
  br i1 %cmp22, label %if.end24, label %cleanup.cont, !dbg !11096

if.end24:                                         ; preds = %if.end
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11097
  %9 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !11097
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !11081, metadata !DIExpression()), !dbg !11083
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %9) #6, !dbg !11098
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11082, metadata !DIExpression()), !dbg !11083
  %10 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !11099
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !11099
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 16, !dbg !11099
  %12 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !11099
  %call30 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %12, %union.tree_node* %call) #6, !dbg !11101
  %tobool = icmp eq i8 %call30, 0, !dbg !11101
  br i1 %tobool, label %cleanup.cont, label %if.end32, !dbg !11102

if.end32:                                         ; preds = %if.end24
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11103
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !11103
  %tobool34 = icmp eq %union.tree_node* %14, null, !dbg !11103
  br i1 %tobool34, label %cleanup.cont, label %lor.lhs.false35, !dbg !11105

lor.lhs.false35:                                  ; preds = %if.end32
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11105
  %bf.load39 = load i64, i64* %15, align 8, !dbg !11106
  %bf.cast415 = and i64 %bf.load39, 65535, !dbg !11107
  %cmp42 = icmp eq i64 %bf.cast415, 23, !dbg !11107
  br i1 %cmp42, label %lor.lhs.false43, label %cleanup.cont, !dbg !11108

lor.lhs.false43:                                  ; preds = %lor.lhs.false35
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11109
  %16 = bitcast i32* %values to %union.tree_node**, !dbg !11109
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !11109
  %tobool45 = icmp eq %union.tree_node* %17, null, !dbg !11109
  br i1 %tobool45, label %cleanup.cont, label %lor.lhs.false46, !dbg !11110

lor.lhs.false46:                                  ; preds = %lor.lhs.false43
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !11111
  %18 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !11111
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !11111
  %tobool50 = icmp eq %union.tree_node* %19, null, !dbg !11111
  br i1 %tobool50, label %cleanup.cont, label %lor.lhs.false51, !dbg !11112

lor.lhs.false51:                                  ; preds = %lor.lhs.false46
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11112
  %bf.load57 = load i64, i64* %20, align 8, !dbg !11113
  %bf.cast596 = and i64 %bf.load57, 65535, !dbg !11114
  %cmp60 = icmp eq i64 %bf.cast596, 23, !dbg !11114
  br i1 %cmp60, label %if.end62, label %cleanup.cont, !dbg !11115

if.end62:                                         ; preds = %lor.lhs.false51
  %operands64 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11116
  %21 = load %union.tree_node*, %union.tree_node** %operands64, align 8, !dbg !11116
  %call70 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %9, %union.tree_node* %21, %union.tree_node* nonnull %19, %union.tree_node* null, %union.tree_node* null) #6, !dbg !11116
  store %union.tree_node* %call70, %union.tree_node** %expr_p, align 8, !dbg !11117
  %call71 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call, %union.tree_node* %call70) #6, !dbg !11118
  store %union.tree_node* %call71, %union.tree_node** %expr_p, align 8, !dbg !11119
  %22 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11120
  %type75 = getelementptr inbounds %union.tree_node, %union.tree_node* %call71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11122
  %23 = load %union.tree_node*, %union.tree_node** %type75, align 8, !dbg !11122
  %call76 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %22, %union.tree_node* %23) #6, !dbg !11123
  %tobool77 = icmp eq i8 %call76, 0, !dbg !11123
  br i1 %tobool77, label %if.then78, label %cleanup.cont, !dbg !11124

if.then78:                                        ; preds = %if.end62
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11125
  %25 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !11125
  %call81 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %24, %union.tree_node* %25) #6, !dbg !11125
  store %union.tree_node* %call81, %union.tree_node** %expr_p, align 8, !dbg !11126
  br label %cleanup.cont, !dbg !11127

cleanup.cont:                                     ; preds = %if.end62, %lor.lhs.false51, %lor.lhs.false46, %lor.lhs.false43, %lor.lhs.false35, %if.end32, %if.end24, %if.end, %lor.lhs.false8, %lor.lhs.false, %if.then78
  ret void, !dbg !11128
}

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_vla_decl(%union.tree_node* %decl, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !11129 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11131, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !11132, metadata !DIExpression()), !dbg !11136
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11137
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %size, %struct.gimple_seq_d** %seq_p) #7, !dbg !11138
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11139
  tail call void @gimplify_one_sizepos(%union.tree_node** nonnull %size_unit, %struct.gimple_seq_d** %seq_p) #7, !dbg !11140
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11141
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11141
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %0) #6, !dbg !11142
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11135, metadata !DIExpression()), !dbg !11136
  %call2 = tail call i8* @get_name(%union.tree_node* %decl) #6, !dbg !11143
  %call3 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %call, i8* %call2) #7, !dbg !11144
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !11134, metadata !DIExpression()), !dbg !11136
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11145
  %1 = bitcast i40* %ignored_flag to i64*, !dbg !11145
  %bf.load = load i64, i64* %1, align 8, !dbg !11146
  %bf.clear = and i64 %bf.load, -1025, !dbg !11146
  store i64 %bf.clear, i64* %1, align 8, !dbg !11146
  %call5 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 0, %union.tree_node* %call3) #6, !dbg !11147
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11133, metadata !DIExpression()), !dbg !11136
  tail call void @decl_value_expr_insert(%union.tree_node* %decl, %union.tree_node* %call5) #6, !dbg !11148
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11149
  %2 = bitcast i40* %decl_flag_2 to i64*, !dbg !11149
  %bf.load7 = load i64, i64* %2, align 8, !dbg !11150
  %bf.set = or i64 %bf.load7, 67108864, !dbg !11150
  store i64 %bf.set, i64* %2, align 8, !dbg !11150
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 415), align 8, !dbg !11151
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11133, metadata !DIExpression()), !dbg !11136
  %4 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !11152
  %call11 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %3, i32 1, %union.tree_node* %4) #6, !dbg !11152
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !11133, metadata !DIExpression()), !dbg !11136
  %call12 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call, %union.tree_node* %call11) #6, !dbg !11153
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !11133, metadata !DIExpression()), !dbg !11136
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11154
  %5 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !11154
  %call15 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %5, %union.tree_node* %call3, %union.tree_node* %call12) #6, !dbg !11154
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !11133, metadata !DIExpression()), !dbg !11136
  tail call void @gimplify_and_add(%union.tree_node* %call15, %struct.gimple_seq_d** %seq_p) #7, !dbg !11155
  %6 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11156
  %save_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %6, i64 0, i32 9, !dbg !11157
  store i8 1, i8* %save_stack, align 4, !dbg !11158
  ret void, !dbg !11159
}

declare dso_local void @decl_value_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_call_expr_loc(i32, %union.tree_node*, i32, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !11160 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11162, metadata !DIExpression()), !dbg !11163
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11164
  %bf.load = load i64, i64* %0, align 8, !dbg !11164
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !11164
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !11164
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !11165

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11166
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !11166
  %bf.load1 = load i64, i64* %1, align 8, !dbg !11166
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !11165
  %2 = trunc i64 %bf.cast42 to i8, !dbg !11165
  %3 = and i8 %2, 1, !dbg !11165
  br label %lor.end, !dbg !11165

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !11167
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_push_bind_expr(%union.gimple_statement_d* %gimple_bind) unnamed_addr #5 !dbg !11168 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gimple_bind, metadata !11170, metadata !DIExpression()), !dbg !11171
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11172
  %bind_expr_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !11174
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %bind_expr_stack, align 8, !dbg !11174
  %cmp = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !11175
  br i1 %cmp, label %if.then, label %if.end, !dbg !11176

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 8) #7, !dbg !11177
  %2 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11178
  %bind_expr_stack1 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %2, i64 0, i32 1, !dbg !11179
  store %struct.VEC_gimple_heap* %call, %struct.VEC_gimple_heap** %bind_expr_stack1, align 8, !dbg !11180
  br label %if.end, !dbg !11178

if.end:                                           ; preds = %if.then, %entry
  %3 = phi %struct.gimplify_ctx* [ %2, %if.then ], [ %0, %entry ], !dbg !11181
  %bind_expr_stack2 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %3, i64 0, i32 1, !dbg !11181
  %call3 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull %bind_expr_stack2, %union.gimple_statement_d* %gimple_bind) #7, !dbg !11181
  ret void, !dbg !11182
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_stack_save_restore(%union.gimple_statement_d** %save, %union.gimple_statement_d** %restore) unnamed_addr #5 !dbg !11183 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %save, metadata !11187, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %restore, metadata !11188, metadata !DIExpression()), !dbg !11190
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 526), align 16, !dbg !11191
  %call = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %0, i32 0) #6, !dbg !11192
  store %union.gimple_statement_d* %call, %union.gimple_statement_d** %save, align 8, !dbg !11193
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11194
  %call1 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #7, !dbg !11195
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11189, metadata !DIExpression()), !dbg !11190
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %save, align 8, !dbg !11196
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %2, %union.tree_node* %call1) #7, !dbg !11197
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 527), align 8, !dbg !11198
  %call2 = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %3, i32 1, %union.tree_node* %call1) #6, !dbg !11199
  store %union.gimple_statement_d* %call2, %union.gimple_statement_d** %restore, align 8, !dbg !11200
  ret void, !dbg !11201
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_pop_bind_expr() unnamed_addr #5 !dbg !11202 {
entry:
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11203
  %bind_expr_stack = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 1, !dbg !11203
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %bind_expr_stack, align 8, !dbg !11203
  %tobool = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !11203
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11203

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !11203
  br label %cond.end, !dbg !11203

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11203
  %call = tail call fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %cond) #7, !dbg !11203
  ret void, !dbg !11204
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !11205 {
entry:
  call void @llvm.dbg.value(metadata i32 8, metadata !11209, metadata !DIExpression()), !dbg !11210
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 8) #6, !dbg !11211
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !11211
  ret %struct.VEC_gimple_heap* %0, !dbg !11211
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !11212 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !11217, metadata !DIExpression()), !dbg !11218
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #7, !dbg !11219
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !11219
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !11219
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11219

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !11219
  br label %cond.end, !dbg !11219

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11219
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #7, !dbg !11219
  ret %union.gimple_statement_d** %call1, !dbg !11219
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11220 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !11224, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.value(metadata i32 1, metadata !11225, metadata !DIExpression()), !dbg !11227
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !11228
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !11228
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11228

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !11228
  br label %cond.end, !dbg !11228

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11228
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #7, !dbg !11228
  %tobool1 = icmp eq i32 %call, 0, !dbg !11228
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11226, metadata !DIExpression()), !dbg !11227
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11228

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !11229
  %2 = load i8*, i8** %1, align 8, !dbg !11229
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !11229
  store i8* %call3, i8** %1, align 8, !dbg !11229
  br label %if.end, !dbg !11229

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !11228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !11231 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !11236, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !11237, metadata !DIExpression()), !dbg !11239
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !11240
  %0 = load i32, i32* %num1, align 8, !dbg !11240
  %inc = add i32 %0, 1, !dbg !11240
  store i32 %inc, i32* %num1, align 8, !dbg !11240
  %idxprom = zext i32 %0 to i64, !dbg !11240
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11240
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !11238, metadata !DIExpression()), !dbg !11239
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !11240
  ret %union.gimple_statement_d** %arrayidx, !dbg !11240
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11241 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !11245, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.value(metadata i32 1, metadata !11246, metadata !DIExpression()), !dbg !11247
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !11248
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11248

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !11248
  %0 = load i32, i32* %alloc, align 4, !dbg !11248
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !11248
  %1 = load i32, i32* %num, align 8, !dbg !11248
  %cmp1 = icmp ne i32 %0, %1, !dbg !11248
  %phitmp = zext i1 %cmp1 to i32, !dbg !11248
  br label %cond.end, !dbg !11248

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !11248
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !11249 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !11253, metadata !DIExpression()), !dbg !11255
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !11256
  %0 = load i32, i32* %num1, align 8, !dbg !11256
  %dec = add i32 %0, -1, !dbg !11256
  store i32 %dec, i32* %num1, align 8, !dbg !11256
  %idxprom = zext i32 %dec to i64, !dbg !11256
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11256
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !11256
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !11254, metadata !DIExpression()), !dbg !11255
  ret %union.gimple_statement_d* %1, !dbg !11256
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_ordered_remove(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !11257 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !11261, metadata !DIExpression()), !dbg !11265
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11262, metadata !DIExpression()), !dbg !11265
  %idxprom = zext i32 %ix_ to i64, !dbg !11266
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11266
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !11263, metadata !DIExpression()), !dbg !11265
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11266
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11264, metadata !DIExpression()), !dbg !11265
  %1 = bitcast %union.tree_node** %arrayidx to i8*, !dbg !11266
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %arrayidx, i64 1, !dbg !11266
  %2 = bitcast %union.tree_node** %add.ptr to i8*, !dbg !11266
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !11266
  %3 = load i32, i32* %num1, align 8, !dbg !11266
  %dec = add i32 %3, -1, !dbg !11266
  store i32 %dec, i32* %num1, align 8, !dbg !11266
  %sub = sub i32 %dec, %ix_, !dbg !11266
  %conv2 = zext i32 %sub to i64, !dbg !11266
  %mul = shl nuw nsw i64 %conv2, 3, !dbg !11266
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !11266
  ret %union.tree_node* %0, !dbg !11266
}

declare dso_local %union.gimple_statement_d* @gimple_build_switch_vec(%union.tree_node*, %union.tree_node*, %struct.VEC_tree_heap*) local_unnamed_addr #2

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @gsi_insert_after_without_update(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_return(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !11267 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !11272, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !11273, metadata !DIExpression()), !dbg !11274
  %call = tail call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 1) #7, !dbg !11275
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !11275
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !11275
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11275

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !11275
  br label %cond.end, !dbg !11275

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11275
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !11275
  ret %union.tree_node** %call1, !dbg !11275
}

declare dso_local i8* @xstrdup(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_asm_vec(i8*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_asm_set_volatile(%union.gimple_statement_d* %gs, i8 zeroext %volatile_p) unnamed_addr #0 !dbg !11276 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11278, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.value(metadata i8 %volatile_p, metadata !11279, metadata !DIExpression()), !dbg !11280
  %tobool = icmp eq i8 %volatile_p, 0, !dbg !11281
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11283
  %bf.load = load i32, i32* %0, align 8, !dbg !11283
  br i1 %tobool, label %if.else, label %if.then, !dbg !11284

if.then:                                          ; preds = %entry
  %bf.lshr = and i32 %bf.load, -196608, !dbg !11285
  %or = or i32 %bf.lshr, 131072, !dbg !11285
  %bf.clear = and i32 %bf.load, 65535, !dbg !11285
  %bf.set = or i32 %bf.clear, %or, !dbg !11285
  br label %if.end, !dbg !11286

if.else:                                          ; preds = %entry
  %bf.set9 = and i32 %bf.load, -131073, !dbg !11287
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %bf.set9, %if.else ], [ %bf.set, %if.then ], !dbg !11283
  store i32 %storemerge, i32* %0, align 8, !dbg !11283
  ret void, !dbg !11288
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_asm_set_input(%union.gimple_statement_d* %gs, i8 zeroext %input_p) unnamed_addr #0 !dbg !11289 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11291, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata i8 %input_p, metadata !11292, metadata !DIExpression()), !dbg !11293
  %tobool = icmp eq i8 %input_p, 0, !dbg !11294
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11296
  %bf.load = load i32, i32* %0, align 8, !dbg !11296
  br i1 %tobool, label %if.else, label %if.then, !dbg !11297

if.then:                                          ; preds = %entry
  %bf.lshr = and i32 %bf.load, -131072, !dbg !11298
  %or = or i32 %bf.lshr, 65536, !dbg !11298
  %bf.clear = and i32 %bf.load, 65535, !dbg !11298
  %bf.set = or i32 %bf.clear, %or, !dbg !11298
  br label %if.end, !dbg !11299

if.else:                                          ; preds = %entry
  %bf.set9 = and i32 %bf.load, -65537, !dbg !11300
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %bf.set9, %if.else ], [ %bf.set, %if.then ], !dbg !11296
  store i32 %storemerge, i32* %0, align 8, !dbg !11296
  ret void, !dbg !11301
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11302 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !11306, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.value(metadata i32 1, metadata !11307, metadata !DIExpression()), !dbg !11309
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !11310
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !11310
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11310

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !11310
  br label %cond.end, !dbg !11310

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11310
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !11310
  %tobool1 = icmp eq i32 %call, 0, !dbg !11310
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11308, metadata !DIExpression()), !dbg !11309
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11310

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !11311
  %2 = load i8*, i8** %1, align 8, !dbg !11311
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !11311
  store i8* %call3, i8** %1, align 8, !dbg !11311
  br label %if.end, !dbg !11311

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !11310
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11313 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11319
  %bf.load = load i32, i32* %0, align 8, !dbg !11319
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11319
  %and = and i32 %bf.lshr, 3, !dbg !11320
  ret i32 %and, !dbg !11321
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !11322 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !11324, metadata !DIExpression()), !dbg !11325
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !11326
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !11326
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !11327
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !11328

land.rhs:                                         ; preds = %entry
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !11329
  %1 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %next, align 8, !dbg !11329
  %cmp2 = icmp eq %struct.gimple_seq_node_d* %1, null, !dbg !11330
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !11331
}

declare dso_local void @gsi_insert_seq_before_without_update(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_wce_cleanup(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11332 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11334, metadata !DIExpression()), !dbg !11335
  %cleanup = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !11336
  %0 = bitcast i32* %cleanup to %struct.gimple_seq_d**, !dbg !11336
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !11336
  ret %struct.gimple_seq_d* %1, !dbg !11337
}

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_wce_cleanup_eh_only(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11338 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11340, metadata !DIExpression()), !dbg !11341
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11342
  %bf.load = load i32, i32* %0, align 8, !dbg !11342
  %cmp = icmp ugt i32 %bf.load, 65535, !dbg !11343
  %conv1 = zext i1 %cmp to i8, !dbg !11344
  ret i8 %conv1, !dbg !11345
}

declare dso_local %struct.gimple_seq_d* @gsi_split_seq_after(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @gsi_stmt_ptr(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !11346 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !11350, metadata !DIExpression()), !dbg !11351
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !11352
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !11352
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !11353
  ret %union.gimple_statement_d** %stmt, !dbg !11354
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_push_cleanup(%union.tree_node* %var, %union.tree_node* %cleanup, i8 zeroext %eh_only, %struct.gimple_seq_d** %pre_p) unnamed_addr #5 !dbg !11355 {
entry:
  %cleanup.addr = alloca %union.tree_node*, align 8
  %cleanup_stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !11359, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata %union.tree_node* %cleanup, metadata !11360, metadata !DIExpression()), !dbg !11370
  store %union.tree_node* %cleanup, %union.tree_node** %cleanup.addr, align 8
  call void @llvm.dbg.value(metadata i8 %eh_only, metadata !11361, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !11362, metadata !DIExpression()), !dbg !11370
  %0 = bitcast %struct.gimple_seq_d** %cleanup_stmts to i8*, !dbg !11371
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11371
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !11364, metadata !DIExpression()), !dbg !11370
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %cleanup_stmts, align 8, !dbg !11372
  %1 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !11373
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %1, i64 0, i32 1, i64 4, !dbg !11373
  %2 = load i32, i32* %arrayidx, align 8, !dbg !11373
  %tobool = icmp eq i32 %2, 0, !dbg !11373
  br i1 %tobool, label %lor.lhs.false, label %cleanup16, !dbg !11375

lor.lhs.false:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %1, i64 0, i32 1, i64 5, !dbg !11376
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !11376
  %tobool3 = icmp eq i32 %3, 0, !dbg !11376
  br i1 %tobool3, label %if.end, label %cleanup16, !dbg !11377

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call fastcc zeroext i8 @gimple_conditional_context() #7, !dbg !11378
  %tobool4 = icmp eq i8 %call, 0, !dbg !11378
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !11379

if.then5:                                         ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !11380
  %call6 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0)) #7, !dbg !11381
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !11365, metadata !DIExpression()), !dbg !11382
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !11383
  %call7 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call6, %union.tree_node* %5) #6, !dbg !11383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !11368, metadata !DIExpression()), !dbg !11382
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !11384
  %call8 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call6, %union.tree_node* %6) #6, !dbg !11384
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !11369, metadata !DIExpression()), !dbg !11382
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11385
  call void @llvm.dbg.value(metadata %union.tree_node* %cleanup, metadata !11360, metadata !DIExpression()), !dbg !11370
  %call9 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %7, %union.tree_node* %call6, %union.tree_node* %cleanup, %union.tree_node* null) #6, !dbg !11385
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !11360, metadata !DIExpression()), !dbg !11370
  store %union.tree_node* %call9, %union.tree_node** %cleanup.addr, align 8, !dbg !11386
  call void @llvm.dbg.value(metadata %union.tree_node** %cleanup.addr, metadata !11360, metadata !DIExpression(DW_OP_deref)), !dbg !11370
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup_stmts, metadata !11364, metadata !DIExpression(DW_OP_deref)), !dbg !11370
  %call10 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %cleanup.addr, %struct.gimple_seq_d** nonnull %cleanup_stmts) #7, !dbg !11387
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup_stmts, align 8, !dbg !11388
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !11364, metadata !DIExpression()), !dbg !11370
  %call11 = call %union.gimple_statement_d* @gimple_build_wce(%struct.gimple_seq_d* %8) #6, !dbg !11389
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !11363, metadata !DIExpression()), !dbg !11370
  %9 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11390
  %conditional_cleanups = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %9, i64 0, i32 3, !dbg !11391
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %conditional_cleanups, %union.gimple_statement_d* %call7) #7, !dbg !11392
  %10 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11393
  %conditional_cleanups12 = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %10, i64 0, i32 3, !dbg !11394
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** nonnull %conditional_cleanups12, %union.gimple_statement_d* %call11) #7, !dbg !11395
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call8) #7, !dbg !11396
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11397
  %bf.load = load i64, i64* %11, align 8, !dbg !11398
  %bf.set = or i64 %bf.load, 8388608, !dbg !11398
  store i64 %bf.set, i64* %11, align 8, !dbg !11398
  br label %cleanup16, !dbg !11399

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node** %cleanup.addr, metadata !11360, metadata !DIExpression(DW_OP_deref)), !dbg !11370
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup_stmts, metadata !11364, metadata !DIExpression(DW_OP_deref)), !dbg !11370
  %call13 = call zeroext i8 @gimplify_stmt(%union.tree_node** nonnull %cleanup.addr, %struct.gimple_seq_d** nonnull %cleanup_stmts) #7, !dbg !11400
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup_stmts, align 8, !dbg !11402
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !11364, metadata !DIExpression()), !dbg !11370
  %call14 = call %union.gimple_statement_d* @gimple_build_wce(%struct.gimple_seq_d* %12) #6, !dbg !11403
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !11363, metadata !DIExpression()), !dbg !11370
  call fastcc void @gimple_wce_set_cleanup_eh_only(%union.gimple_statement_d* %call14, i8 zeroext %eh_only) #7, !dbg !11404
  call fastcc void @gimplify_seq_add_stmt(%struct.gimple_seq_d** %pre_p, %union.gimple_statement_d* %call14) #7, !dbg !11405
  br label %cleanup16

cleanup16:                                        ; preds = %lor.lhs.false, %entry, %if.then5, %if.else
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11406
  ret void, !dbg !11406
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @gimple_conditional_context() unnamed_addr #5 !dbg !11407 {
entry:
  %0 = load %struct.gimplify_ctx*, %struct.gimplify_ctx** @gimplify_ctxp, align 8, !dbg !11408
  %conditions = getelementptr inbounds %struct.gimplify_ctx, %struct.gimplify_ctx* %0, i64 0, i32 8, !dbg !11409
  %1 = load i32, i32* %conditions, align 8, !dbg !11409
  %cmp = icmp sgt i32 %1, 0, !dbg !11410
  %conv1 = zext i1 %cmp to i8, !dbg !11408
  ret i8 %conv1, !dbg !11411
}

declare dso_local %union.gimple_statement_d* @gimple_build_wce(%struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_wce_set_cleanup_eh_only(%union.gimple_statement_d* %gs, i8 zeroext %eh_only_p) unnamed_addr #0 !dbg !11412 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11414, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i8 %eh_only_p, metadata !11415, metadata !DIExpression()), !dbg !11416
  %conv = zext i8 %eh_only_p to i32, !dbg !11417
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11418
  %bf.load = load i32, i32* %0, align 8, !dbg !11419
  %bf.shl = shl nuw nsw i32 %conv, 16, !dbg !11419
  %bf.clear = and i32 %bf.load, 65535, !dbg !11419
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !11419
  store i32 %bf.set, i32* %0, align 8, !dbg !11419
  ret void, !dbg !11420
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %t) unnamed_addr #0 !dbg !11421 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11423, metadata !DIExpression()), !dbg !11425
  %head = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11426
  %0 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !11426
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !11426
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !11427
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !11427
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !11427
}

declare dso_local void @tsi_delink(%struct.tree_stmt_iterator*) local_unnamed_addr #2

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_scan_omp_clauses(%union.tree_node** %list_p, %struct.gimple_seq_d** %pre_p, i32 %region_type) unnamed_addr #5 !dbg !11428 {
entry:
  %gctx = alloca %struct.gimplify_ctx, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p, metadata !11432, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !11433, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata i32 %region_type, metadata !11434, metadata !DIExpression()), !dbg !11454
  %0 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !11455
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #8, !dbg !11455
  %call = tail call fastcc %struct.gimplify_omp_ctx* @new_omp_context(i32 %region_type) #7, !dbg !11456
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %call, metadata !11435, metadata !DIExpression()), !dbg !11454
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %call, i64 0, i32 0, !dbg !11457
  %1 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !11457
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %1, metadata !11436, metadata !DIExpression()), !dbg !11454
  %default_kind141 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %call, i64 0, i32 4, !dbg !11458
  %tobool109 = icmp eq %struct.gimplify_omp_ctx* %1, null, !dbg !11459
  %cmp115 = icmp eq i32 %region_type, 0, !dbg !11461
  br label %while.cond, !dbg !11463

while.cond:                                       ; preds = %if.end148, %entry
  %list_p.addr.0 = phi %union.tree_node** [ %list_p, %entry ], [ %list_p.addr.1, %if.end148 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.0, metadata !11432, metadata !DIExpression()), !dbg !11454
  %2 = load %union.tree_node*, %union.tree_node** %list_p.addr.0, align 8, !dbg !11464
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11438, metadata !DIExpression()), !dbg !11454
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !11465
  br i1 %cmp, label %while.end, label %while.body, !dbg !11463

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !11439, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8 1, metadata !11441, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* null, metadata !11442, metadata !DIExpression()), !dbg !11466
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11467
  %4 = load i32, i32* %3, align 4, !dbg !11467
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %do_add
    i32 3, label %sw.bb4
    i32 4, label %sw.bb5
    i32 5, label %sw.bb6
    i32 6, label %sw.bb98
    i32 7, label %sw.bb98
    i32 8, label %sw.bb121
    i32 10, label %sw.bb129
    i32 9, label %sw.bb129
    i32 11, label %sw.epilog
    i32 12, label %sw.epilog
    i32 15, label %sw.epilog
    i32 14, label %sw.epilog
    i32 13, label %sw.bb139
  ], !dbg !11468

sw.bb:                                            ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 10, metadata !11443, metadata !DIExpression()), !dbg !11466
  %5 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 14), align 8, !dbg !11469
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11471
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !11471
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11471
  %call2 = call zeroext i8 %5(%union.tree_node* %6) #6, !dbg !11472
  %tobool = icmp eq i8 %call2, 0, !dbg !11472
  br i1 %tobool, label %do_add, label %if.then, !dbg !11473

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i32 522, metadata !11443, metadata !DIExpression()), !dbg !11466
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11474
  %bf.load = load i64, i64* %7, align 8, !dbg !11476
  %bf.set = or i64 %bf.load, 268435456, !dbg !11476
  store i64 %bf.set, i64* %7, align 8, !dbg !11476
  br label %do_add, !dbg !11477

sw.bb4:                                           ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 18, metadata !11443, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), metadata !11442, metadata !DIExpression()), !dbg !11466
  br label %do_add, !dbg !11478

sw.bb5:                                           ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 35, metadata !11443, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), metadata !11442, metadata !DIExpression()), !dbg !11466
  br label %do_add, !dbg !11479

sw.bb6:                                           ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 67, metadata !11443, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), metadata !11442, metadata !DIExpression()), !dbg !11466
  br label %do_add, !dbg !11480

do_add:                                           ; preds = %sw.bb, %while.body, %if.then, %sw.bb6, %sw.bb5, %sw.bb4
  %notice_outer.1 = phi i8 [ 1, %sw.bb6 ], [ 1, %sw.bb5 ], [ 1, %sw.bb4 ], [ 1, %if.then ], [ 0, %sw.bb ], [ 1, %while.body ], !dbg !11481
  %check_non_private.0 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), %sw.bb6 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), %sw.bb5 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), %sw.bb4 ], [ null, %if.then ], [ null, %sw.bb ], [ null, %while.body ], !dbg !11466
  %flags.1 = phi i32 [ 67, %sw.bb6 ], [ 35, %sw.bb5 ], [ 18, %sw.bb4 ], [ 522, %if.then ], [ 10, %sw.bb ], [ 6, %while.body ], !dbg !11458
  call void @llvm.dbg.value(metadata i32 %flags.1, metadata !11443, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* %check_non_private.0, metadata !11442, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8 %notice_outer.1, metadata !11441, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.label(metadata !11452), !dbg !11482
  %ops8 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11483
  %arrayidx9 = bitcast i40* %ops8 to %union.tree_node**, !dbg !11483
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !11483
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11444, metadata !DIExpression()), !dbg !11466
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11484
  %cmp10 = icmp eq %union.tree_node* %8, %9, !dbg !11486
  br i1 %cmp10, label %sw.epilog, label %lor.lhs.false, !dbg !11487

lor.lhs.false:                                    ; preds = %do_add
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11488
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11488
  %cmp11 = icmp eq %union.tree_node* %10, %9, !dbg !11489
  br i1 %cmp11, label %sw.epilog, label %if.end13, !dbg !11490

if.end13:                                         ; preds = %lor.lhs.false
  call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %call, %union.tree_node* %8, i32 %flags.1) #7, !dbg !11491
  %11 = load i32, i32* %3, align 4, !dbg !11492
  %cmp16 = icmp eq i32 %11, 5, !dbg !11493
  br i1 %cmp16, label %land.lhs.true, label %if.else51, !dbg !11494

land.lhs.true:                                    ; preds = %if.end13
  %arrayidx19 = getelementptr inbounds i40, i40* %ops8, i64 3, !dbg !11495
  %12 = bitcast i40* %arrayidx19 to %union.tree_node**, !dbg !11495
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !11495
  %tobool20 = icmp eq %union.tree_node* %13, null, !dbg !11495
  br i1 %tobool20, label %if.else51, label %if.then21, !dbg !11496

if.then21:                                        ; preds = %land.lhs.true
  call fastcc void @omp_add_variable(%struct.gimplify_omp_ctx* %call, %union.tree_node* nonnull %13, i32 129) #7, !dbg !11497
  store %struct.gimplify_omp_ctx* %call, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !11437, metadata !DIExpression(DW_OP_deref)), !dbg !11454
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !11500
  %call25 = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !11501
  %gimple_reduction_init = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11502
  %14 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !11502
  store %struct.gimple_seq_d* %call25, %struct.gimple_seq_d** %14, align 8, !dbg !11503
  %call27 = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !11504
  %gimple_reduction_merge = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11505
  %15 = bitcast %union.tree_node** %gimple_reduction_merge to %struct.gimple_seq_d**, !dbg !11505
  store %struct.gimple_seq_d* %call27, %struct.gimple_seq_d** %15, align 8, !dbg !11506
  %arrayidx31 = getelementptr inbounds i40, i40* %ops8, i64 1, !dbg !11507
  %16 = bitcast i40* %arrayidx31 to %union.tree_node**, !dbg !11507
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !11507
  call void @gimplify_and_add(%union.tree_node* %17, %struct.gimple_seq_d** nonnull %14) #7, !dbg !11508
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %14, align 8, !dbg !11509
  %call36 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %18) #7, !dbg !11510
  call void @pop_gimplify_context(%union.gimple_statement_d* %call36) #7, !dbg !11511
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !11437, metadata !DIExpression(DW_OP_deref)), !dbg !11454
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !11512
  %arrayidx39 = getelementptr inbounds i40, i40* %ops8, i64 2, !dbg !11513
  %19 = bitcast i40* %arrayidx39 to %union.tree_node**, !dbg !11513
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !11513
  call void @gimplify_and_add(%union.tree_node* %20, %struct.gimple_seq_d** nonnull %15) #7, !dbg !11514
  %21 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %15, align 8, !dbg !11515
  %call44 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %21) #7, !dbg !11516
  call void @pop_gimplify_context(%union.gimple_statement_d* %call44) #7, !dbg !11517
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !11518
  store %union.tree_node* null, %union.tree_node** %19, align 8, !dbg !11519
  store %struct.gimplify_omp_ctx* %1, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11520
  br label %if.end94, !dbg !11521

if.else51:                                        ; preds = %land.lhs.true, %if.end13
  %cmp54 = icmp eq i32 %11, 4, !dbg !11522
  br i1 %cmp54, label %land.lhs.true55, label %if.end94, !dbg !11523

land.lhs.true55:                                  ; preds = %if.else51
  %arrayidx58 = getelementptr inbounds i40, i40* %ops8, i64 1, !dbg !11524
  %22 = bitcast i40* %arrayidx58 to %union.tree_node**, !dbg !11524
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !11524
  %tobool59 = icmp eq %union.tree_node* %23, null, !dbg !11524
  br i1 %tobool59, label %if.end94, label %if.then60, !dbg !11525

if.then60:                                        ; preds = %land.lhs.true55
  store %struct.gimplify_omp_ctx* %call, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11526
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !11437, metadata !DIExpression(DW_OP_deref)), !dbg !11454
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #7, !dbg !11527
  %24 = bitcast i40* %arrayidx58 to i64**, !dbg !11528
  %25 = load i64*, i64** %24, align 8, !dbg !11528
  %bf.load65 = load i64, i64* %25, align 8, !dbg !11528
  %bf.cast1 = and i64 %bf.load65, 65535, !dbg !11529
  %cmp67 = icmp eq i64 %bf.cast1, 58, !dbg !11529
  %26 = bitcast i64* %25 to %union.tree_node*, !dbg !11530
  br i1 %cmp67, label %if.end81, label %if.then68, !dbg !11530

if.then68:                                        ; preds = %if.then60
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11531
  %call69 = call %union.tree_node* @build3_stat(i32 58, %union.tree_node* %27, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #6, !dbg !11531
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !11445, metadata !DIExpression()), !dbg !11532
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11533
  %bf.load71 = load i64, i64* %28, align 8, !dbg !11534
  %bf.set73 = or i64 %bf.load71, 65536, !dbg !11534
  store i64 %bf.set73, i64* %28, align 8, !dbg !11534
  %29 = bitcast i40* %arrayidx58 to i64*, !dbg !11535
  %30 = load i64, i64* %29, align 8, !dbg !11535
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11536
  %arrayidx77 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !11536
  %31 = bitcast %union.tree_node** %arrayidx77 to i64*, !dbg !11537
  store i64 %30, i64* %31, align 8, !dbg !11537
  store %union.tree_node* %call69, %union.tree_node** %22, align 8, !dbg !11538
  br label %if.end81, !dbg !11539

if.end81:                                         ; preds = %if.then60, %if.then68
  %32 = phi %union.tree_node* [ %26, %if.then60 ], [ %call69, %if.then68 ], !dbg !11540
  %gimple_reduction_init86 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11541
  %33 = bitcast %union.tree_node** %gimple_reduction_init86 to %struct.gimple_seq_d**, !dbg !11541
  call void @gimplify_and_add(%union.tree_node* %32, %struct.gimple_seq_d** nonnull %33) #7, !dbg !11542
  %34 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %33, align 8, !dbg !11543
  %call89 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %34) #7, !dbg !11544
  call void @pop_gimplify_context(%union.gimple_statement_d* %call89) #7, !dbg !11545
  store %union.tree_node* null, %union.tree_node** %22, align 8, !dbg !11546
  store %struct.gimplify_omp_ctx* %1, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11547
  br label %if.end94, !dbg !11548

if.end94:                                         ; preds = %land.lhs.true55, %if.else51, %if.end81, %if.then21
  %tobool95 = icmp eq i8 %notice_outer.1, 0, !dbg !11549
  br i1 %tobool95, label %sw.epilog, label %do_notice, !dbg !11551

sw.bb98:                                          ; preds = %while.body, %while.body
  %ops100 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11552
  %arrayidx101 = bitcast i40* %ops100 to %union.tree_node**, !dbg !11552
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx101, align 8, !dbg !11552
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !11444, metadata !DIExpression()), !dbg !11466
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11553
  %cmp102 = icmp eq %union.tree_node* %35, %36, !dbg !11555
  br i1 %cmp102, label %sw.epilog, label %lor.lhs.false103, !dbg !11556

lor.lhs.false103:                                 ; preds = %sw.bb98
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11557
  %37 = load %union.tree_node*, %union.tree_node** %type105, align 8, !dbg !11557
  %cmp106 = icmp eq %union.tree_node* %37, %36, !dbg !11558
  br i1 %cmp106, label %sw.epilog, label %do_notice, !dbg !11559

do_notice:                                        ; preds = %if.end94, %lor.lhs.false103
  %check_non_private.1 = phi i8* [ %check_non_private.0, %if.end94 ], [ null, %lor.lhs.false103 ], !dbg !11466
  %decl.0 = phi %union.tree_node* [ %8, %if.end94 ], [ %35, %lor.lhs.false103 ], !dbg !11458
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !11444, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i8* %check_non_private.1, metadata !11442, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.label(metadata !11453), !dbg !11560
  br i1 %tobool109, label %if.end112, label %if.then110, !dbg !11561

if.then110:                                       ; preds = %do_notice
  %call111 = call fastcc zeroext i8 @omp_notice_variable(%struct.gimplify_omp_ctx* nonnull %1, %union.tree_node* %decl.0, i8 zeroext 1) #7, !dbg !11562
  br label %if.end112, !dbg !11562

if.end112:                                        ; preds = %do_notice, %if.then110
  %tobool113 = icmp ne i8* %check_non_private.1, null, !dbg !11563
  %or.cond = and i1 %tobool113, %cmp115, !dbg !11564
  br i1 %or.cond, label %land.lhs.true116, label %sw.epilog, !dbg !11564

land.lhs.true116:                                 ; preds = %if.end112
  %call117 = call fastcc zeroext i8 @omp_check_private(%struct.gimplify_omp_ctx* %call, %union.tree_node* %decl.0) #7, !dbg !11565
  %tobool118 = icmp eq i8 %call117, 0, !dbg !11565
  br i1 %tobool118, label %sw.epilog, label %if.then119, !dbg !11566

if.then119:                                       ; preds = %land.lhs.true116
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11567
  %38 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11567
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* nonnull %check_non_private.1, %union.tree_node* %38) #6, !dbg !11569
  call void @llvm.dbg.value(metadata i8 1, metadata !11439, metadata !DIExpression()), !dbg !11466
  br label %sw.epilog, !dbg !11570

sw.bb121:                                         ; preds = %while.body
  %ops123 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11571
  %arrayidx124 = bitcast i40* %ops123 to %union.tree_node**, !dbg !11571
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx124, align 8, !dbg !11571
  %call125 = call %union.tree_node* @gimple_boolify(%union.tree_node* %39) #7, !dbg !11572
  store %union.tree_node* %call125, %union.tree_node** %arrayidx124, align 8, !dbg !11573
  br label %sw.bb129, !dbg !11574

sw.bb129:                                         ; preds = %while.body, %while.body, %sw.bb121
  %ops131 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11575
  %arrayidx132 = bitcast i40* %ops131 to %union.tree_node**, !dbg !11575
  %call133 = call i32 @gimplify_expr(%union.tree_node** nonnull %arrayidx132, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !11577
  %cmp134 = icmp eq i32 %call133, -2, !dbg !11578
  %spec.select = zext i1 %cmp134 to i8, !dbg !11579
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !11439, metadata !DIExpression()), !dbg !11466
  br label %sw.epilog, !dbg !11580

sw.bb139:                                         ; preds = %while.body
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11581
  %default_kind = bitcast %union.tree_node** %subcode to i32*, !dbg !11581
  %40 = load i32, i32* %default_kind, align 8, !dbg !11581
  store i32 %40, i32* %default_kind141, align 4, !dbg !11582
  br label %sw.epilog, !dbg !11583

sw.default:                                       ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5821, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11584
  br label %sw.epilog, !dbg !11585

sw.epilog:                                        ; preds = %if.end94, %land.lhs.true116, %while.body, %while.body, %while.body, %while.body, %if.end112, %if.then119, %sw.bb98, %lor.lhs.false103, %do_add, %lor.lhs.false, %sw.default, %sw.bb139, %sw.bb129
  %remove.2 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb139 ], [ %spec.select, %sw.bb129 ], [ 1, %lor.lhs.false ], [ 1, %do_add ], [ 0, %if.end94 ], [ 1, %lor.lhs.false103 ], [ 1, %sw.bb98 ], [ 1, %if.then119 ], [ 0, %land.lhs.true116 ], [ 0, %if.end112 ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], !dbg !11466
  call void @llvm.dbg.value(metadata i8 %remove.2, metadata !11439, metadata !DIExpression()), !dbg !11466
  %tobool142 = icmp eq i8 %remove.2, 0, !dbg !11586
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11588
  br i1 %tobool142, label %if.end148, label %if.then143, !dbg !11589

if.then143:                                       ; preds = %sw.epilog
  %41 = bitcast %union.tree_node** %chain to i64*, !dbg !11590
  %42 = load i64, i64* %41, align 8, !dbg !11590
  %43 = bitcast %union.tree_node** %list_p.addr.0 to i64*, !dbg !11591
  store i64 %42, i64* %43, align 8, !dbg !11591
  br label %if.end148, !dbg !11592

if.end148:                                        ; preds = %sw.epilog, %if.then143
  %list_p.addr.1 = phi %union.tree_node** [ %list_p.addr.0, %if.then143 ], [ %chain, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.1, metadata !11432, metadata !DIExpression()), !dbg !11454
  br label %while.cond, !dbg !11463, !llvm.loop !11593

while.end:                                        ; preds = %while.cond
  store %struct.gimplify_omp_ctx* %call, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11595
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8, !dbg !11596
  ret void, !dbg !11596
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimplify_and_return_first(%union.tree_node* %t, %struct.gimple_seq_d** %seq_p) unnamed_addr #5 !dbg !11597 {
entry:
  %last = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11601, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq_p, metadata !11602, metadata !DIExpression()), !dbg !11604
  %0 = bitcast %struct.gimple_stmt_iterator* %last to i8*, !dbg !11605
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11605
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq_p, align 8, !dbg !11606
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !11603, metadata !DIExpression(DW_OP_deref)), !dbg !11604
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %last, %struct.gimple_seq_d* %1) #7, !dbg !11607
  call void @gimplify_and_add(%union.tree_node* %t, %struct.gimple_seq_d** %seq_p) #7, !dbg !11608
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !11603, metadata !DIExpression(DW_OP_deref)), !dbg !11604
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %last) #7, !dbg !11609
  %tobool = icmp eq i8 %call, 0, !dbg !11609
  br i1 %tobool, label %if.then, label %if.else, !dbg !11611

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !11603, metadata !DIExpression(DW_OP_deref)), !dbg !11604
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %last) #7, !dbg !11612
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !11603, metadata !DIExpression(DW_OP_deref)), !dbg !11604
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %last) #7, !dbg !11614
  br label %cleanup, !dbg !11615

if.else:                                          ; preds = %entry
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq_p, align 8, !dbg !11616
  %call2 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %2) #7, !dbg !11617
  br label %cleanup, !dbg !11618

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %union.gimple_statement_d* [ %call2, %if.else ], [ %call1, %if.then ], !dbg !11619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11620
  ret %union.gimple_statement_d* %retval.0, !dbg !11620
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_adjust_omp_clauses(%union.tree_node** %list_p) unnamed_addr #5 !dbg !11621 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p, metadata !11623, metadata !DIExpression()), !dbg !11634
  %0 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11635
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %0, metadata !11624, metadata !DIExpression()), !dbg !11634
  %variables31 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %0, i64 0, i32 1, !dbg !11636
  br label %while.cond, !dbg !11637

while.cond:                                       ; preds = %if.end46, %entry
  %list_p.addr.0 = phi %union.tree_node** [ %list_p, %entry ], [ %list_p.addr.1, %if.end46 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.0, metadata !11623, metadata !DIExpression()), !dbg !11634
  %1 = load %union.tree_node*, %union.tree_node** %list_p.addr.0, align 8, !dbg !11638
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11625, metadata !DIExpression()), !dbg !11634
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !11639
  br i1 %cmp, label %while.end, label %while.body, !dbg !11637

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !11629, metadata !DIExpression()), !dbg !11640
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11641
  %3 = load i32, i32* %2, align 4, !dbg !11641
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb27
    i32 5, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
    i32 8, label %sw.epilog
    i32 9, label %sw.epilog
    i32 10, label %sw.epilog
    i32 11, label %sw.epilog
    i32 12, label %sw.epilog
    i32 13, label %sw.epilog
    i32 15, label %sw.epilog
    i32 14, label %sw.epilog
  ], !dbg !11642

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11643
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !11643
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11643
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11626, metadata !DIExpression()), !dbg !11634
  %5 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables31, align 8, !dbg !11644
  %6 = ptrtoint %union.tree_node* %4 to i64, !dbg !11645
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %5, i64 %6) #6, !dbg !11646
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call, metadata !11627, metadata !DIExpression()), !dbg !11640
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call, i64 0, i32 1, !dbg !11647
  %7 = load i64, i64* %value, align 8, !dbg !11647
  %8 = trunc i64 %7 to i8, !dbg !11648
  %9 = and i8 %8, 1, !dbg !11648
  %10 = xor i8 %9, 1, !dbg !11648
  call void @llvm.dbg.value(metadata i8 %10, metadata !11629, metadata !DIExpression()), !dbg !11640
  %tobool2 = icmp eq i8 %10, 0, !dbg !11649
  br i1 %tobool2, label %if.then, label %sw.epilog, !dbg !11650

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i8 undef, metadata !11630, metadata !DIExpression()), !dbg !11651
  %and9 = and i64 %7, 256, !dbg !11652
  %tobool10 = icmp eq i64 %and9, 0, !dbg !11652
  br i1 %tobool10, label %lor.lhs.false, label %if.then14, !dbg !11654

lor.lhs.false:                                    ; preds = %if.then
  %11 = load i32, i32* %2, align 4, !dbg !11655
  %cmp5 = icmp eq i32 %11, 2, !dbg !11656
  %conv7 = zext i1 %cmp5 to i8, !dbg !11655
  call void @llvm.dbg.value(metadata i8 %conv7, metadata !11630, metadata !DIExpression()), !dbg !11651
  %12 = load i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 13), align 8, !dbg !11657
  %call11 = tail call zeroext i8 %12(%union.tree_node* %4, i8 zeroext %conv7) #6, !dbg !11658
  %tobool13 = icmp eq i8 %call11, 0, !dbg !11658
  br i1 %tobool13, label %sw.epilog, label %lor.lhs.false.if.then14_crit_edge, !dbg !11659

lor.lhs.false.if.then14_crit_edge:                ; preds = %lor.lhs.false
  %.pre = load i64, i64* %value, align 8, !dbg !11660
  %.pre2 = and i64 %.pre, 256, !dbg !11660
  br label %if.then14, !dbg !11659

if.then14:                                        ; preds = %lor.lhs.false.if.then14_crit_edge, %if.then
  %and16.pre-phi = phi i64 [ %.pre2, %lor.lhs.false.if.then14_crit_edge ], [ %and9, %if.then ], !dbg !11660
  %13 = phi i64 [ %.pre, %lor.lhs.false.if.then14_crit_edge ], [ %7, %if.then ], !dbg !11660
  %cmp17 = icmp eq i64 %and16.pre-phi, 0, !dbg !11660
  br i1 %cmp17, label %cond.end, label %lor.lhs.false19, !dbg !11660

lor.lhs.false19:                                  ; preds = %if.then14
  %and21 = and i64 %13, 252, !dbg !11660
  %cmp22 = icmp eq i64 %and21, 8, !dbg !11660
  br i1 %cmp22, label %cond.end, label %cond.true, !dbg !11660

cond.true:                                        ; preds = %lor.lhs.false19
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11660
  br label %cond.end, !dbg !11660

cond.end:                                         ; preds = %if.then14, %lor.lhs.false19, %cond.true
  store i32 1, i32* %2, align 4, !dbg !11662
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11663
  %bf.load = load i64, i64* %14, align 8, !dbg !11664
  %bf.set = or i64 %bf.load, 134217728, !dbg !11664
  store i64 %bf.set, i64* %14, align 8, !dbg !11664
  br label %sw.epilog, !dbg !11665

sw.bb27:                                          ; preds = %while.body
  %ops29 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11666
  %15 = bitcast i40* %ops29 to i64*, !dbg !11666
  %16 = load i64, i64* %15, align 8, !dbg !11666
  %17 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables31, align 8, !dbg !11667
  %call32 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %17, i64 %16) #6, !dbg !11668
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call32, metadata !11627, metadata !DIExpression()), !dbg !11640
  %value33 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call32, i64 0, i32 1, !dbg !11669
  %18 = load i64, i64* %value33, align 8, !dbg !11669
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11670
  %bf.load38 = load i64, i64* %19, align 8, !dbg !11671
  %20 = shl i64 %18, 23, !dbg !11671
  %bf.shl = and i64 %20, 134217728, !dbg !11671
  %bf.clear39 = and i64 %bf.load38, -134217729, !dbg !11671
  %bf.set40 = or i64 %bf.clear39, %bf.shl, !dbg !11671
  store i64 %bf.set40, i64* %19, align 8, !dbg !11671
  br label %sw.epilog, !dbg !11672

sw.default:                                       ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11673
  br label %sw.epilog, !dbg !11674

sw.epilog:                                        ; preds = %lor.lhs.false, %sw.bb, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %cond.end, %sw.default, %sw.bb27
  %remove.0 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb27 ], [ 0, %lor.lhs.false ], [ 0, %cond.end ], [ %10, %sw.bb ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], [ 0, %while.body ], !dbg !11640
  call void @llvm.dbg.value(metadata i8 %remove.0, metadata !11629, metadata !DIExpression()), !dbg !11640
  %tobool42 = icmp eq i8 %remove.0, 0, !dbg !11675
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11677
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !11678

if.then43:                                        ; preds = %sw.epilog
  %21 = bitcast %union.tree_node** %chain to i64*, !dbg !11679
  %22 = load i64, i64* %21, align 8, !dbg !11679
  %23 = bitcast %union.tree_node** %list_p.addr.0 to i64*, !dbg !11680
  store i64 %22, i64* %23, align 8, !dbg !11680
  br label %if.end46, !dbg !11681

if.end46:                                         ; preds = %sw.epilog, %if.then43
  %list_p.addr.1 = phi %union.tree_node** [ %list_p.addr.0, %if.then43 ], [ %chain, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.1, metadata !11623, metadata !DIExpression()), !dbg !11634
  br label %while.cond, !dbg !11637, !llvm.loop !11682

while.end:                                        ; preds = %while.cond
  %list_p.addr.0.lcssa = phi %union.tree_node** [ %list_p.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.0.lcssa, metadata !11623, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.0.lcssa, metadata !11623, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata %union.tree_node** %list_p.addr.0.lcssa, metadata !11623, metadata !DIExpression()), !dbg !11634
  %24 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables31, align 8, !dbg !11684
  %25 = bitcast %union.tree_node** %list_p.addr.0.lcssa to i8*, !dbg !11685
  %call48 = tail call i32 @splay_tree_foreach(%struct.splay_tree_s* %24, i32 (%struct.splay_tree_node_s*, i8*)* nonnull @gimplify_adjust_omp_clauses_1, i8* %25) #6, !dbg !11686
  %26 = bitcast %struct.gimplify_omp_ctx* %0 to i64*, !dbg !11687
  %27 = load i64, i64* %26, align 8, !dbg !11687
  store i64 %27, i64* bitcast (%struct.gimplify_omp_ctx** @gimplify_omp_ctxp to i64*), align 8, !dbg !11688
  tail call fastcc void @delete_omp_context(%struct.gimplify_omp_ctx* %0) #7, !dbg !11689
  ret void, !dbg !11690
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_parallel(%struct.gimple_seq_d*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_set_subcode(%union.gimple_statement_d* %s, i32 %subcode) unnamed_addr #0 !dbg !11691 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !11695, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 1, metadata !11696, metadata !DIExpression()), !dbg !11697
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !11698
  %bf.load = load i32, i32* %0, align 8, !dbg !11699
  %bf.clear = and i32 %bf.load, 65535, !dbg !11699
  %bf.set = or i32 %bf.clear, 65536, !dbg !11699
  store i32 %bf.set, i32* %0, align 8, !dbg !11699
  ret void, !dbg !11700
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimplify_omp_ctx* @new_omp_context(i32 %region_type) unnamed_addr #5 !dbg !11701 {
entry:
  call void @llvm.dbg.value(metadata i32 %region_type, metadata !11705, metadata !DIExpression()), !dbg !11707
  %call = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !11708
  %0 = bitcast i8* %call to %struct.gimplify_omp_ctx*, !dbg !11708
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %0, metadata !11706, metadata !DIExpression()), !dbg !11707
  %1 = load i64, i64* bitcast (%struct.gimplify_omp_ctx** @gimplify_omp_ctxp to i64*), align 8, !dbg !11709
  %2 = bitcast i8* %call to i64*, !dbg !11710
  store i64 %1, i64* %2, align 8, !dbg !11710
  %call1 = tail call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* nonnull @splay_tree_compare_decl_uid, void (i64)* null, void (i64)* null) #6, !dbg !11711
  %variables = getelementptr inbounds i8, i8* %call, i64 8, !dbg !11712
  %3 = bitcast i8* %variables to %struct.splay_tree_s**, !dbg !11712
  store %struct.splay_tree_s* %call1, %struct.splay_tree_s** %3, align 8, !dbg !11713
  %call2 = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !11714
  %privatized_types = getelementptr inbounds i8, i8* %call, i64 16, !dbg !11715
  %4 = bitcast i8* %privatized_types to %struct.pointer_set_t**, !dbg !11715
  store %struct.pointer_set_t* %call2, %struct.pointer_set_t** %4, align 8, !dbg !11716
  %5 = load i32, i32* @input_location, align 4, !dbg !11717
  %location = getelementptr inbounds i8, i8* %call, i64 24, !dbg !11718
  %6 = bitcast i8* %location to i32*, !dbg !11718
  store i32 %5, i32* %6, align 8, !dbg !11719
  %region_type3 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !11720
  %7 = bitcast i8* %region_type3 to i32*, !dbg !11720
  store i32 %region_type, i32* %7, align 8, !dbg !11721
  %cmp = icmp eq i32 %region_type, 1, !dbg !11722
  %default_kind = getelementptr inbounds i8, i8* %call, i64 28, !dbg !11724
  %8 = bitcast i8* %default_kind to i32*, !dbg !11724
  br i1 %cmp, label %if.else, label %if.then, !dbg !11725

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11726

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11724
  store i32 %storemerge, i32* %8, align 4, !dbg !11724
  ret %struct.gimplify_omp_ctx* %0, !dbg !11727
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @omp_check_private(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl) unnamed_addr #5 !dbg !11728 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx, metadata !11732, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11733, metadata !DIExpression()), !dbg !11735
  %0 = ptrtoint %union.tree_node* %decl to i64, !dbg !11736
  br label %do.body, !dbg !11738

do.body:                                          ; preds = %do.cond, %entry
  %ctx.addr.0 = phi %struct.gimplify_omp_ctx* [ %ctx, %entry ], [ %1, %do.cond ]
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.addr.0, metadata !11732, metadata !DIExpression()), !dbg !11735
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.addr.0, i64 0, i32 0, !dbg !11739
  %1 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !11739
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %1, metadata !11732, metadata !DIExpression()), !dbg !11735
  %cmp = icmp eq %struct.gimplify_omp_ctx* %1, null, !dbg !11740
  br i1 %cmp, label %if.then, label %if.end, !dbg !11742

if.then:                                          ; preds = %do.body
  %call = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %decl) #7, !dbg !11743
  %tobool = icmp eq i8 %call, 0, !dbg !11743
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !11744

lor.rhs:                                          ; preds = %if.then
  %2 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 10), align 8, !dbg !11745
  %call1 = tail call zeroext i8 %2(%union.tree_node* %decl) #6, !dbg !11746
  %tobool3 = icmp eq i8 %call1, 0, !dbg !11744
  %phitmp = zext i1 %tobool3 to i8, !dbg !11744
  br label %lor.end, !dbg !11744

lor.end:                                          ; preds = %if.then, %lor.rhs
  %3 = phi i8 [ 0, %if.then ], [ %phitmp, %lor.rhs ]
  br label %cleanup, !dbg !11747

if.end:                                           ; preds = %do.body
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %1, i64 0, i32 1, !dbg !11748
  %4 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !11748
  %call5 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %4, i64 %0) #6, !dbg !11749
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call5, metadata !11734, metadata !DIExpression()), !dbg !11735
  %cmp6 = icmp eq %struct.splay_tree_node_s* %call5, null, !dbg !11750
  br i1 %cmp6, label %do.cond, label %if.then8, !dbg !11752

if.then8:                                         ; preds = %if.end
  %call5.lcssa = phi %struct.splay_tree_node_s* [ %call5, %if.end ], !dbg !11749
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call5.lcssa, i64 0, i32 1, !dbg !11753
  %5 = load i64, i64* %value, align 8, !dbg !11753
  %and = lshr i64 %5, 2, !dbg !11754
  %6 = trunc i64 %and to i8, !dbg !11754
  %7 = and i8 %6, 1, !dbg !11754
  %8 = xor i8 %7, 1, !dbg !11754
  br label %cleanup, !dbg !11755

do.cond:                                          ; preds = %if.end
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %1, i64 0, i32 5, !dbg !11756
  %9 = load i32, i32* %region_type, align 8, !dbg !11756
  %cmp13 = icmp eq i32 %9, 0, !dbg !11757
  br i1 %cmp13, label %do.body, label %cleanup.loopexit, !dbg !11758, !llvm.loop !11759

cleanup.loopexit:                                 ; preds = %do.cond
  br label %cleanup, !dbg !11761

cleanup:                                          ; preds = %cleanup.loopexit, %if.then8, %lor.end
  %retval.0 = phi i8 [ %3, %lor.end ], [ %8, %if.then8 ], [ 0, %cleanup.loopexit ], !dbg !11735
  ret i8 %retval.0, !dbg !11761
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @splay_tree_compare_decl_uid(i64 %xa, i64 %xb) #5 !dbg !11762 {
entry:
  call void @llvm.dbg.value(metadata i64 %xa, metadata !11764, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i64 %xb, metadata !11765, metadata !DIExpression()), !dbg !11768
  %0 = inttoptr i64 %xa to %union.tree_node*, !dbg !11769
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11766, metadata !DIExpression()), !dbg !11768
  %1 = inttoptr i64 %xb to %union.tree_node*, !dbg !11770
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11767, metadata !DIExpression()), !dbg !11768
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11771
  %2 = load i32, i32* %uid, align 4, !dbg !11771
  %uid2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11772
  %3 = load i32, i32* %uid2, align 4, !dbg !11772
  %sub = sub i32 %2, %3, !dbg !11773
  ret i32 %sub, !dbg !11774
}

declare dso_local i32 @splay_tree_foreach(%struct.splay_tree_s*, i32 (%struct.splay_tree_node_s*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @gimplify_adjust_omp_clauses_1(%struct.splay_tree_node_s* %n, i8* %data) #5 !dbg !11775 {
entry:
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %n, metadata !11779, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i8* %data, metadata !11780, metadata !DIExpression()), !dbg !11795
  %0 = bitcast i8* %data to %union.tree_node**, !dbg !11796
  call void @llvm.dbg.value(metadata %union.tree_node** %0, metadata !11781, metadata !DIExpression()), !dbg !11795
  %1 = bitcast %struct.splay_tree_node_s* %n to %union.tree_node**, !dbg !11797
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !11797
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11782, metadata !DIExpression()), !dbg !11795
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %n, i64 0, i32 1, !dbg !11798
  %3 = load i64, i64* %value, align 8, !dbg !11798
  %conv = trunc i64 %3 to i32, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11783, metadata !DIExpression()), !dbg !11795
  %4 = and i32 %conv, 131, !dbg !11800
  %5 = icmp eq i32 %4, 1, !dbg !11800
  br i1 %5, label %if.end4, label %cleanup73, !dbg !11800

if.end4:                                          ; preds = %entry
  %and5 = and i32 %conv, 256, !dbg !11801
  %tobool6 = icmp eq i32 %and5, 0, !dbg !11801
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !11803

if.then7:                                         ; preds = %if.end4
  %and8 = and i32 %conv, 252, !dbg !11804
  %cmp9 = icmp eq i32 %and8, 8, !dbg !11804
  br i1 %cmp9, label %if.end15, label %cond.true, !dbg !11804

cond.true:                                        ; preds = %if.then7
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5852, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11804
  br label %if.end15, !dbg !11804

if.else:                                          ; preds = %if.end4
  %6 = load i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 13), align 8, !dbg !11806
  %and11 = lshr i32 %conv, 2, !dbg !11807
  %7 = trunc i32 %and11 to i8, !dbg !11807
  %8 = and i8 %7, 1, !dbg !11807
  %call = tail call zeroext i8 %6(%union.tree_node* %2, i8 zeroext %8) #6, !dbg !11808
  call void @llvm.dbg.value(metadata i8 %call, metadata !11786, metadata !DIExpression()), !dbg !11795
  %phitmp = icmp ne i8 %call, 0
  br label %if.end15

if.end15:                                         ; preds = %cond.true, %if.then7, %if.else
  %private_debug.0 = phi i1 [ %phitmp, %if.else ], [ true, %if.then7 ], [ true, %cond.true ]
  br i1 %private_debug.0, label %if.end56, label %if.else18, !dbg !11809

if.else18:                                        ; preds = %if.end15
  %and19 = and i32 %conv, 4, !dbg !11810
  %tobool20 = icmp eq i32 %and19, 0, !dbg !11810
  br i1 %tobool20, label %if.else44, label %if.then21, !dbg !11811

if.then21:                                        ; preds = %if.else18
  %call22 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %2) #7, !dbg !11812
  %tobool23 = icmp eq i8 %call22, 0, !dbg !11812
  br i1 %tobool23, label %if.end56, label %if.then24, !dbg !11813

if.then24:                                        ; preds = %if.then21
  %9 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11814
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %9, i64 0, i32 0, !dbg !11815
  %10 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !11815
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %10, metadata !11787, metadata !DIExpression()), !dbg !11816
  %11 = ptrtoint %union.tree_node* %2 to i64, !dbg !11817
  br label %while.cond, !dbg !11818

while.cond:                                       ; preds = %cleanup, %if.then24
  %ctx.0 = phi %struct.gimplify_omp_ctx* [ %10, %if.then24 ], [ %ctx.1, %cleanup ], !dbg !11819
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.0, metadata !11787, metadata !DIExpression()), !dbg !11816
  %cmp25 = icmp eq %struct.gimplify_omp_ctx* %ctx.0, null, !dbg !11820
  br i1 %cmp25, label %while.end, label %while.body, !dbg !11818

while.body:                                       ; preds = %while.cond
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 1, !dbg !11821
  %12 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !11821
  %call27 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %12, i64 %11) #6, !dbg !11822
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call27, metadata !11793, metadata !DIExpression()), !dbg !11817
  %tobool28 = icmp eq %struct.splay_tree_node_s* %call27, null, !dbg !11823
  br i1 %tobool28, label %if.end34, label %land.lhs.true, !dbg !11825

land.lhs.true:                                    ; preds = %while.body
  %value29 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call27, i64 0, i32 1, !dbg !11826
  %13 = load i64, i64* %value29, align 8, !dbg !11826
  %and30 = and i64 %13, 120, !dbg !11827
  %cmp31 = icmp eq i64 %and30, 0, !dbg !11828
  br i1 %cmp31, label %if.end34, label %cleanup, !dbg !11829

if.end34:                                         ; preds = %land.lhs.true, %while.body
  %outer_context35 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.0, i64 0, i32 0, !dbg !11830
  %14 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context35, align 8, !dbg !11830
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %14, metadata !11787, metadata !DIExpression()), !dbg !11816
  br label %cleanup, !dbg !11831

cleanup:                                          ; preds = %land.lhs.true, %if.end34
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end34 ], [ false, %land.lhs.true ]
  %ctx.1 = phi %struct.gimplify_omp_ctx* [ %14, %if.end34 ], [ %ctx.0, %land.lhs.true ], !dbg !11816
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.1, metadata !11787, metadata !DIExpression()), !dbg !11816
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !11832

while.end:                                        ; preds = %while.cond, %cleanup
  %ctx.2 = phi %struct.gimplify_omp_ctx* [ %ctx.1, %cleanup ], [ null, %while.cond ], !dbg !11819
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.2, metadata !11787, metadata !DIExpression()), !dbg !11816
  %cmp36 = icmp eq %struct.gimplify_omp_ctx* %ctx.2, null, !dbg !11833
  br i1 %cmp36, label %cleanup73, label %if.end56

if.else44:                                        ; preds = %if.else18
  %and45 = and i32 %conv, 8, !dbg !11835
  %tobool46 = icmp eq i32 %and45, 0, !dbg !11835
  br i1 %tobool46, label %if.else48, label %if.end56, !dbg !11837

if.else48:                                        ; preds = %if.else44
  %and49 = and i32 %conv, 16, !dbg !11838
  %tobool50 = icmp eq i32 %and49, 0, !dbg !11838
  br i1 %tobool50, label %if.else52, label %if.end56, !dbg !11840

if.else52:                                        ; preds = %if.else48
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5885, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11841
  br label %if.end56

if.end56:                                         ; preds = %while.end, %if.then21, %if.else48, %if.else44, %if.else52, %if.end15
  %code.3 = phi i32 [ 1, %if.end15 ], [ 2, %while.end ], [ 2, %if.then21 ], [ 1, %if.else44 ], [ 3, %if.else48 ], [ 3, %if.else52 ], !dbg !11842
  call void @llvm.dbg.value(metadata i32 %code.3, metadata !11784, metadata !DIExpression()), !dbg !11795
  %15 = load i32, i32* @input_location, align 4, !dbg !11843
  %call57 = tail call %union.tree_node* @build_omp_clause(i32 %15, i32 %code.3) #6, !dbg !11844
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !11785, metadata !DIExpression()), !dbg !11795
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11845
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !11845
  store %union.tree_node* %2, %union.tree_node** %arrayidx, align 8, !dbg !11846
  %16 = bitcast i8* %data to i64*, !dbg !11847
  %17 = load i64, i64* %16, align 8, !dbg !11847
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11848
  %18 = bitcast %union.tree_node** %chain to i64*, !dbg !11849
  store i64 %17, i64* %18, align 8, !dbg !11849
  br i1 %private_debug.0, label %if.then59, label %if.else60, !dbg !11850

if.then59:                                        ; preds = %if.end56
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11851
  %bf.load = load i64, i64* %19, align 8, !dbg !11853
  %bf.set = or i64 %bf.load, 134217728, !dbg !11853
  store i64 %bf.set, i64* %19, align 8, !dbg !11853
  br label %if.end72, !dbg !11851

if.else60:                                        ; preds = %if.end56
  %cmp61 = icmp eq i32 %code.3, 1, !dbg !11854
  %and64 = and i32 %conv, 512, !dbg !11856
  %tobool65 = icmp ne i32 %and64, 0, !dbg !11856
  %or.cond = and i1 %cmp61, %tobool65, !dbg !11857
  br i1 %or.cond, label %if.then66, label %if.end72, !dbg !11857

if.then66:                                        ; preds = %if.else60
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11858
  %bf.load68 = load i64, i64* %20, align 8, !dbg !11859
  %bf.set70 = or i64 %bf.load68, 268435456, !dbg !11859
  store i64 %bf.set70, i64* %20, align 8, !dbg !11859
  br label %if.end72, !dbg !11858

if.end72:                                         ; preds = %if.else60, %if.then66, %if.then59
  store %union.tree_node* %call57, %union.tree_node** %0, align 8, !dbg !11860
  %21 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 19), align 8, !dbg !11861
  tail call void %21(%union.tree_node* %call57) #6, !dbg !11862
  br label %cleanup73, !dbg !11863

cleanup73:                                        ; preds = %while.end, %entry, %if.end72
  ret i32 0, !dbg !11864
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_omp_context(%struct.gimplify_omp_ctx* %c) unnamed_addr #5 !dbg !11865 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %c, metadata !11869, metadata !DIExpression()), !dbg !11870
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %c, i64 0, i32 1, !dbg !11871
  %0 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !11871
  tail call void @splay_tree_delete(%struct.splay_tree_s* %0) #6, !dbg !11872
  %privatized_types = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %c, i64 0, i32 2, !dbg !11873
  %1 = load %struct.pointer_set_t*, %struct.pointer_set_t** %privatized_types, align 8, !dbg !11873
  tail call void @pointer_set_destroy(%struct.pointer_set_t* %1) #6, !dbg !11874
  %2 = bitcast %struct.gimplify_omp_ctx* %c to i8*, !dbg !11875
  tail call void @free(i8* %2) #6, !dbg !11875
  ret void, !dbg !11876
}

declare dso_local %union.tree_node* @build_omp_clause(i32, i32) local_unnamed_addr #2

declare dso_local void @splay_tree_delete(%struct.splay_tree_s*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_task(%struct.gimple_seq_d*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @omp_is_private(%struct.gimplify_omp_ctx* %ctx, %union.tree_node* %decl) unnamed_addr #5 !dbg !11877 {
entry:
  %0 = ptrtoint %union.tree_node* %decl to i64, !dbg !11882
  br label %tailrecurse, !dbg !11883

tailrecurse:                                      ; preds = %if.then43, %entry
  %ctx.tr = phi %struct.gimplify_omp_ctx* [ %ctx, %entry ], [ %15, %if.then43 ]
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.tr, metadata !11879, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11880, metadata !DIExpression()), !dbg !11882
  %variables = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.tr, i64 0, i32 1, !dbg !11886
  %1 = load %struct.splay_tree_s*, %struct.splay_tree_s** %variables, align 8, !dbg !11886
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %1, i64 %0) #6, !dbg !11887
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call, metadata !11881, metadata !DIExpression()), !dbg !11882
  %cmp = icmp eq %struct.splay_tree_node_s* %call, null, !dbg !11888
  br i1 %cmp, label %if.end35, label %if.then, !dbg !11890

if.then:                                          ; preds = %tailrecurse
  %ctx.tr.lcssa = phi %struct.gimplify_omp_ctx* [ %ctx.tr, %tailrecurse ]
  %call.lcssa = phi %struct.splay_tree_node_s* [ %call, %tailrecurse ], !dbg !11887
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.tr.lcssa, metadata !11879, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.tr.lcssa, metadata !11879, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.gimplify_omp_ctx* %ctx.tr.lcssa, metadata !11879, metadata !DIExpression()), !dbg !11882
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call.lcssa, i64 0, i32 1, !dbg !11891
  %2 = load i64, i64* %value, align 8, !dbg !11891
  %and = and i64 %2, 4, !dbg !11894
  %tobool = icmp eq i64 %and, 0, !dbg !11894
  br i1 %tobool, label %if.else5, label %if.then1, !dbg !11895

if.then1:                                         ; preds = %if.then
  %3 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11896
  %cmp2 = icmp eq %struct.gimplify_omp_ctx* %3, %ctx.tr.lcssa, !dbg !11899
  br i1 %cmp2, label %if.then3, label %cleanup, !dbg !11900

if.then3:                                         ; preds = %if.then1
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11901
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11901
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0), %union.tree_node* %4) #6, !dbg !11903
  store i64 8, i64* %value, align 8, !dbg !11904
  br label %cleanup, !dbg !11905

if.else5:                                         ; preds = %if.then
  %and7 = and i64 %2, 2, !dbg !11906
  %cmp8 = icmp eq i64 %and7, 0, !dbg !11908
  br i1 %cmp8, label %if.end29, label %land.lhs.true, !dbg !11909

land.lhs.true:                                    ; preds = %if.else5
  %5 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11910
  %cmp9 = icmp eq %struct.gimplify_omp_ctx* %5, %ctx.tr.lcssa, !dbg !11911
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !11912

lor.lhs.false:                                    ; preds = %land.lhs.true
  %region_type = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.tr.lcssa, i64 0, i32 5, !dbg !11913
  %6 = load i32, i32* %region_type, align 8, !dbg !11913
  %cmp10 = icmp eq i32 %6, 3, !dbg !11914
  br i1 %cmp10, label %land.lhs.true11, label %if.end29, !dbg !11915

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %outer_context = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %5, i64 0, i32 0, !dbg !11916
  %7 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context, align 8, !dbg !11916
  %cmp12 = icmp eq %struct.gimplify_omp_ctx* %7, %ctx.tr.lcssa, !dbg !11917
  br i1 %cmp12, label %if.then13, label %if.end29, !dbg !11918

if.then13:                                        ; preds = %land.lhs.true11, %land.lhs.true
  %and15 = and i64 %2, 16, !dbg !11919
  %cmp16 = icmp eq i64 %and15, 0, !dbg !11922
  br i1 %cmp16, label %if.else20, label %if.then17, !dbg !11923

if.then17:                                        ; preds = %if.then13
  %name19 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11924
  %8 = load %union.tree_node*, %union.tree_node** %name19, align 8, !dbg !11924
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0), %union.tree_node* %8) #6, !dbg !11925
  br label %if.end29, !dbg !11925

if.else20:                                        ; preds = %if.then13
  %and22 = and i64 %2, 64, !dbg !11926
  %cmp23 = icmp eq i64 %and22, 0, !dbg !11928
  br i1 %cmp23, label %if.end29, label %if.then24, !dbg !11929

if.then24:                                        ; preds = %if.else20
  %name26 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11930
  %9 = load %union.tree_node*, %union.tree_node** %name26, align 8, !dbg !11930
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26, i64 0, i64 0), %union.tree_node* %9) #6, !dbg !11931
  br label %if.end29, !dbg !11931

if.end29:                                         ; preds = %if.else20, %if.else5, %lor.lhs.false, %land.lhs.true11, %if.then24, %if.then17
  %10 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** @gimplify_omp_ctxp, align 8, !dbg !11932
  %cmp30 = icmp eq %struct.gimplify_omp_ctx* %10, %ctx.tr.lcssa, !dbg !11933
  br i1 %cmp30, label %lor.end, label %lor.rhs, !dbg !11934

lor.rhs:                                          ; preds = %if.end29
  %region_type31 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.tr.lcssa, i64 0, i32 5, !dbg !11935
  %11 = load i32, i32* %region_type31, align 8, !dbg !11935
  %cmp32 = icmp eq i32 %11, 3, !dbg !11936
  br i1 %cmp32, label %land.rhs, label %lor.end, !dbg !11937

land.rhs:                                         ; preds = %lor.rhs
  %outer_context33 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %10, i64 0, i32 0, !dbg !11938
  %12 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context33, align 8, !dbg !11938
  %cmp34 = icmp eq %struct.gimplify_omp_ctx* %12, %ctx.tr.lcssa, !dbg !11939
  %phitmp = zext i1 %cmp34 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %if.end29
  %13 = phi i8 [ 1, %if.end29 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !11940

if.end35:                                         ; preds = %tailrecurse
  %region_type36 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.tr, i64 0, i32 5, !dbg !11941
  %14 = load i32, i32* %region_type36, align 8, !dbg !11941
  %cmp37 = icmp eq i32 %14, 0, !dbg !11942
  br i1 %cmp37, label %if.else40, label %cleanup.loopexit, !dbg !11943

if.else40:                                        ; preds = %if.end35
  %outer_context41 = getelementptr inbounds %struct.gimplify_omp_ctx, %struct.gimplify_omp_ctx* %ctx.tr, i64 0, i32 0, !dbg !11944
  %15 = load %struct.gimplify_omp_ctx*, %struct.gimplify_omp_ctx** %outer_context41, align 8, !dbg !11944
  %tobool42 = icmp eq %struct.gimplify_omp_ctx* %15, null, !dbg !11945
  br i1 %tobool42, label %cleanup.loopexit, label %if.then43, !dbg !11946

if.then43:                                        ; preds = %if.else40
  br label %tailrecurse, !dbg !11883

cleanup.loopexit:                                 ; preds = %if.end35, %if.else40
  br label %cleanup, !dbg !11947

cleanup:                                          ; preds = %cleanup.loopexit, %if.then1, %lor.end, %if.then3
  %retval.0 = phi i8 [ 1, %if.then3 ], [ %13, %lor.end ], [ 0, %if.then1 ], [ 0, %cleanup.loopexit ], !dbg !11882
  ret i8 %retval.0, !dbg !11947
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_for(%struct.gimple_seq_d*, %union.tree_node*, i64, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_index(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %index) unnamed_addr #0 !dbg !11948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11952, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i64 %i, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !11954, metadata !DIExpression()), !dbg !11955
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !11956
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !11956
  %1 = load i64, i64* %0, align 8, !dbg !11956
  %cmp = icmp ugt i64 %1, %i, !dbg !11956
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11956

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3475, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11956
  br label %cond.end, !dbg !11956

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !11957
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !11957
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !11957
  %index2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 1, !dbg !11958
  store %union.tree_node* %index, %union.tree_node** %index2, align 8, !dbg !11959
  ret void, !dbg !11960
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_initial(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %initial) unnamed_addr #0 !dbg !11961 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11963, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i64 %i, metadata !11964, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata %union.tree_node* %initial, metadata !11965, metadata !DIExpression()), !dbg !11966
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !11967
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !11967
  %1 = load i64, i64* %0, align 8, !dbg !11967
  %cmp = icmp ugt i64 %1, %i, !dbg !11967
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11967

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11967
  br label %cond.end, !dbg !11967

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !11968
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !11968
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !11968
  %initial2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 2, !dbg !11969
  store %union.tree_node* %initial, %union.tree_node** %initial2, align 8, !dbg !11970
  ret void, !dbg !11971
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_cond(%union.gimple_statement_d* %gs, i64 %i, i32 %cond) unnamed_addr #0 !dbg !11972 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11976, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i64 %i, metadata !11977, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11978, metadata !DIExpression()), !dbg !11979
  %idxprom = sext i32 %cond to i64, !dbg !11980
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !11980
  %0 = load i32, i32* %arrayidx, align 4, !dbg !11980
  %cmp = icmp eq i32 %0, 5, !dbg !11980
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11980

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 4076, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11980
  br label %cond.end, !dbg !11980

cond.end:                                         ; preds = %entry, %cond.true
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !11981
  %1 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !11981
  %2 = load i64, i64* %1, align 8, !dbg !11981
  %cmp2 = icmp ugt i64 %2, %i, !dbg !11981
  br i1 %cmp2, label %cond.end5, label %cond.true3, !dbg !11981

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 4077, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11981
  br label %cond.end5, !dbg !11981

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !11982
  %3 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !11982
  %4 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %3, align 8, !dbg !11982
  %cond9 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %4, i64 %i, i32 0, !dbg !11983
  store i32 %cond, i32* %cond9, align 8, !dbg !11984
  ret void, !dbg !11985
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_final(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %final) unnamed_addr #0 !dbg !11986 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11988, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i64 %i, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata %union.tree_node* %final, metadata !11990, metadata !DIExpression()), !dbg !11991
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !11992
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !11992
  %1 = load i64, i64* %0, align 8, !dbg !11992
  %cmp = icmp ugt i64 %1, %i, !dbg !11992
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11992

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3541, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11992
  br label %cond.end, !dbg !11992

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !11993
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !11993
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !11993
  %final2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 3, !dbg !11994
  store %union.tree_node* %final, %union.tree_node** %final2, align 8, !dbg !11995
  ret void, !dbg !11996
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_incr(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %incr) unnamed_addr #0 !dbg !11997 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11999, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata i64 %i, metadata !12000, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata %union.tree_node* %incr, metadata !12001, metadata !DIExpression()), !dbg !12002
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !12003
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !12003
  %1 = load i64, i64* %0, align 8, !dbg !12003
  %cmp = icmp ugt i64 %1, %i, !dbg !12003
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !12003

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12003
  br label %cond.end, !dbg !12003

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !12004
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !12004
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !12004
  %incr2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 4, !dbg !12005
  store %union.tree_node* %incr, %union.tree_node** %incr2, align 8, !dbg !12006
  ret void, !dbg !12007
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_sections(%struct.gimple_seq_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_single(%struct.gimple_seq_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @goa_stabilize_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %union.tree_node* %lhs_addr, %union.tree_node* %lhs_var) unnamed_addr #5 !dbg !12008 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !12012, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !12013, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs_addr, metadata !12014, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs_var, metadata !12015, metadata !DIExpression()), !dbg !12021
  %0 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !12022
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12016, metadata !DIExpression()), !dbg !12021
  %call = tail call fastcc zeroext i8 @goa_lhs_expr_p(%union.tree_node* %0, %union.tree_node* %lhs_addr) #7, !dbg !12023
  %tobool = icmp eq i8 %call, 0, !dbg !12023
  br i1 %tobool, label %if.end, label %if.then, !dbg !12025

if.then:                                          ; preds = %entry
  store %union.tree_node* %lhs_var, %union.tree_node** %expr_p, align 8, !dbg !12026
  br label %cleanup, !dbg !12028

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %0) #6, !dbg !12029
  %tobool2 = icmp eq i8 %call1, 0, !dbg !12029
  br i1 %tobool2, label %if.end4, label %cleanup, !dbg !12031

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !12017, metadata !DIExpression()), !dbg !12021
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12032
  %bf.load = load i64, i64* %1, align 8, !dbg !12032
  %bf.cast = and i64 %bf.load, 65535, !dbg !12032
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !12032
  %2 = load i32, i32* %arrayidx, align 4, !dbg !12032
  switch i32 %2, label %sw.epilog30 [
    i32 7, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb7
    i32 10, label %sw.bb13
  ], !dbg !12033

sw.bb:                                            ; preds = %if.end4, %if.end4
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12034
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12034
  %call6 = tail call fastcc i32 @goa_stabilize_expr(%union.tree_node** nonnull %arrayidx5, %struct.gimple_seq_d** %pre_p, %union.tree_node* %lhs_addr, %union.tree_node* %lhs_var) #7, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %call6, metadata !12017, metadata !DIExpression()), !dbg !12021
  br label %sw.bb7, !dbg !12037

sw.bb7:                                           ; preds = %if.end4, %sw.bb
  %saw_lhs.0 = phi i32 [ 0, %if.end4 ], [ %call6, %sw.bb ], !dbg !12021
  call void @llvm.dbg.value(metadata i32 %saw_lhs.0, metadata !12017, metadata !DIExpression()), !dbg !12021
  %operands9 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12038
  %call11 = tail call fastcc i32 @goa_stabilize_expr(%union.tree_node** nonnull %operands9, %struct.gimple_seq_d** %pre_p, %union.tree_node* %lhs_addr, %union.tree_node* %lhs_var) #7, !dbg !12039
  %or12 = or i32 %saw_lhs.0, %call11, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %or12, metadata !12017, metadata !DIExpression()), !dbg !12021
  br label %sw.epilog30, !dbg !12041

sw.bb13:                                          ; preds = %if.end4
  %3 = trunc i64 %bf.load to i32, !dbg !12042
  %bf.cast17 = and i32 %3, 65535, !dbg !12042
  %bf.cast17.off = add nsw i32 %bf.cast17, -91, !dbg !12043
  %switch = icmp ult i32 %bf.cast17.off, 2, !dbg !12043
  br i1 %switch, label %sw.bb18, label %sw.epilog30, !dbg !12043

sw.bb18:                                          ; preds = %sw.bb13
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12044
  %arrayidx21 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 1, !dbg !12044
  %call22 = tail call fastcc i32 @goa_stabilize_expr(%union.tree_node** nonnull %arrayidx21, %struct.gimple_seq_d** %pre_p, %union.tree_node* %lhs_addr, %union.tree_node* %lhs_var) #7, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %call22, metadata !12017, metadata !DIExpression()), !dbg !12021
  %call27 = tail call fastcc i32 @goa_stabilize_expr(%union.tree_node** nonnull %operands20, %struct.gimple_seq_d** %pre_p, %union.tree_node* %lhs_addr, %union.tree_node* %lhs_var) #7, !dbg !12047
  %or28 = or i32 %call22, %call27, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %or28, metadata !12017, metadata !DIExpression()), !dbg !12021
  br label %sw.epilog30, !dbg !12049

sw.epilog30:                                      ; preds = %if.end4, %sw.bb18, %sw.bb13, %sw.bb7
  %saw_lhs.2 = phi i32 [ %or12, %sw.bb7 ], [ %or28, %sw.bb18 ], [ 0, %sw.bb13 ], [ 0, %if.end4 ], !dbg !12021
  call void @llvm.dbg.value(metadata i32 %saw_lhs.2, metadata !12017, metadata !DIExpression()), !dbg !12021
  %cmp = icmp eq i32 %saw_lhs.2, 0, !dbg !12050
  br i1 %cmp, label %if.then31, label %cleanup, !dbg !12051

if.then31:                                        ; preds = %sw.epilog30
  %call32 = tail call i32 @gimplify_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %call32, metadata !12018, metadata !DIExpression()), !dbg !12053
  %cmp33 = icmp ne i32 %call32, 1, !dbg !12054
  %spec.select = sext i1 %cmp33 to i32, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !12017, metadata !DIExpression()), !dbg !12021
  br label %cleanup, !dbg !12057

cleanup:                                          ; preds = %if.end, %sw.epilog30, %if.then31, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end ], [ %spec.select, %if.then31 ], [ %saw_lhs.2, %sw.epilog30 ], !dbg !12021
  ret i32 %retval.0, !dbg !12058
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_atomic_load(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_atomic_store(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @goa_lhs_expr_p(%union.tree_node* %expr, %union.tree_node* %addr) unnamed_addr #5 !dbg !12059 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12063, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !12064, metadata !DIExpression()), !dbg !12065
  %call = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %expr) #6, !dbg !12066
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12063, metadata !DIExpression()), !dbg !12065
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12067
  %bf.load = load i64, i64* %0, align 8, !dbg !12067
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !12069
  %cmp = icmp eq i64 %bf.cast3, 47, !dbg !12069
  br i1 %cmp, label %if.then, label %if.end64, !dbg !12070

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !12071

while.cond:                                       ; preds = %while.body, %if.then
  %addr.addr.0 = phi %union.tree_node* [ %addr, %if.then ], [ %9, %while.body ]
  %call.pn = phi %union.tree_node* [ %call, %if.then ], [ %expr.addr.0, %while.body ]
  %expr.addr.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %call.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12073
  %expr.addr.0 = load %union.tree_node*, %union.tree_node** %expr.addr.0.in, align 8, !dbg !12073
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !12063, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0, metadata !12064, metadata !DIExpression()), !dbg !12065
  %cmp1 = icmp eq %union.tree_node* %expr.addr.0, %addr.addr.0, !dbg !12074
  br i1 %cmp1, label %while.end, label %land.lhs.true, !dbg !12075

land.lhs.true:                                    ; preds = %while.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12076
  %bf.load3 = load i64, i64* %1, align 8, !dbg !12076
  %bf.cast57 = and i64 %bf.load3, 65535, !dbg !12076
  %cmp6 = icmp eq i64 %bf.cast57, 116, !dbg !12076
  br i1 %cmp6, label %land.lhs.true18, label %lor.lhs.false, !dbg !12076

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = or i64 %bf.cast57, 4, !dbg !12077
  %3 = icmp eq i64 %2, 117, !dbg !12077
  br i1 %3, label %land.lhs.true18, label %while.end, !dbg !12077

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12078
  %bf.load24 = load i64, i64* %4, align 8, !dbg !12078
  %5 = xor i64 %bf.load3, %bf.load24, !dbg !12079
  %6 = and i64 %5, 65535, !dbg !12079
  %cmp27 = icmp eq i64 %6, 0, !dbg !12079
  br i1 %cmp27, label %land.rhs, label %while.end, !dbg !12080

land.rhs:                                         ; preds = %land.lhs.true18
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12081
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12081
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12082
  %8 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !12082
  %call30 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %7, %union.tree_node* %8) #6, !dbg !12083
  %tobool = icmp eq i8 %call30, 0, !dbg !12080
  br i1 %tobool, label %while.end, label %while.body, !dbg !12071

while.body:                                       ; preds = %land.rhs
  %operands35 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12084
  %9 = load %union.tree_node*, %union.tree_node** %operands35, align 8, !dbg !12084
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !12064, metadata !DIExpression()), !dbg !12065
  br label %while.cond, !dbg !12071, !llvm.loop !12086

while.end:                                        ; preds = %lor.lhs.false, %land.rhs, %while.cond, %land.lhs.true18
  %addr.addr.0.lcssa = phi %union.tree_node* [ %addr.addr.0, %lor.lhs.false ], [ %addr.addr.0, %land.rhs ], [ %addr.addr.0, %while.cond ], [ %addr.addr.0, %land.lhs.true18 ]
  %expr.addr.0.lcssa = phi %union.tree_node* [ %expr.addr.0, %lor.lhs.false ], [ %expr.addr.0, %land.rhs ], [ %expr.addr.0, %while.cond ], [ %expr.addr.0, %land.lhs.true18 ], !dbg !12073
  %cmp1.lcssa = phi i1 [ %cmp1, %lor.lhs.false ], [ %cmp1, %land.rhs ], [ %cmp1, %while.cond ], [ %cmp1, %land.lhs.true18 ], !dbg !12074
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.addr.0.lcssa, metadata !12064, metadata !DIExpression()), !dbg !12065
  br i1 %cmp1.lcssa, label %return, label %if.end, !dbg !12088

if.end:                                           ; preds = %while.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12089
  %bf.load41 = load i64, i64* %10, align 8, !dbg !12089
  %bf.cast435 = and i64 %bf.load41, 65535, !dbg !12090
  %cmp44 = icmp eq i64 %bf.cast435, 121, !dbg !12090
  br i1 %cmp44, label %land.lhs.true46, label %land.end62, !dbg !12091

land.lhs.true46:                                  ; preds = %if.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12092
  %bf.load48 = load i64, i64* %11, align 8, !dbg !12092
  %bf.cast506 = and i64 %bf.load48, 65535, !dbg !12093
  %cmp51 = icmp eq i64 %bf.cast506, 121, !dbg !12093
  br i1 %cmp51, label %land.rhs53, label %land.end62, !dbg !12094

land.rhs53:                                       ; preds = %land.lhs.true46
  %operands55 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12095
  %12 = load %union.tree_node*, %union.tree_node** %operands55, align 8, !dbg !12095
  %operands58 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12096
  %13 = load %union.tree_node*, %union.tree_node** %operands58, align 8, !dbg !12096
  %cmp60 = icmp eq %union.tree_node* %12, %13, !dbg !12097
  %phitmp = zext i1 %cmp60 to i8
  br label %land.end62

land.end62:                                       ; preds = %land.rhs53, %land.lhs.true46, %if.end
  %14 = phi i8 [ 0, %land.lhs.true46 ], [ 0, %if.end ], [ %phitmp, %land.rhs53 ]
  br label %return, !dbg !12098

if.end64:                                         ; preds = %entry
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12099
  %bf.load66 = load i64, i64* %15, align 8, !dbg !12099
  %bf.cast684 = and i64 %bf.load66, 65535, !dbg !12101
  %cmp69 = icmp eq i64 %bf.cast684, 121, !dbg !12101
  br i1 %cmp69, label %land.lhs.true71, label %if.end78, !dbg !12102

land.lhs.true71:                                  ; preds = %if.end64
  %operands73 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12103
  %16 = load %union.tree_node*, %union.tree_node** %operands73, align 8, !dbg !12103
  %cmp75 = icmp eq %union.tree_node* %call, %16, !dbg !12104
  br i1 %cmp75, label %return, label %if.end78, !dbg !12105

if.end78:                                         ; preds = %land.lhs.true71, %if.end64
  br label %return, !dbg !12106

return:                                           ; preds = %land.lhs.true71, %while.end, %if.end78, %land.end62
  %retval.0 = phi i8 [ %14, %land.end62 ], [ 0, %if.end78 ], [ 1, %while.end ], [ 1, %land.lhs.true71 ], !dbg !12065
  ret i8 %retval.0, !dbg !12107
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_after_without_update(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @copy_if_shared_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !12108 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !12110, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !12111, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.value(metadata i8* %data, metadata !12112, metadata !DIExpression()), !dbg !12115
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12113, metadata !DIExpression()), !dbg !12115
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12117
  %bf.load = load i64, i64* %1, align 8, !dbg !12117
  %bf.cast = and i64 %bf.load, 65535, !dbg !12117
  call void @llvm.dbg.value(metadata i64 %bf.cast, metadata !12114, metadata !DIExpression()), !dbg !12115
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !12118
  %2 = load i32, i32* %arrayidx, align 4, !dbg !12118
  %cmp = icmp eq i32 %2, 2, !dbg !12120
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12121

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %2, 3, !dbg !12122
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !12123

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %2, 1, !dbg !12124
  br i1 %cmp7, label %if.then, label %if.else16, !dbg !12125

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %bf.cast112 = and i64 %bf.load, 1099511627776, !dbg !12126
  %tobool = icmp eq i64 %bf.cast112, 0, !dbg !12126
  br i1 %tobool, label %if.else, label %if.then12, !dbg !12129

if.then12:                                        ; preds = %if.then
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12130
  br label %if.end30, !dbg !12131

if.else:                                          ; preds = %if.then
  %bf.set = or i64 %bf.load, 1099511627776, !dbg !12132
  store i64 %bf.set, i64* %1, align 8, !dbg !12132
  br label %if.end30

if.else16:                                        ; preds = %lor.lhs.false4
  %bf.cast211 = and i64 %bf.load, 1099511627776, !dbg !12133
  %tobool22 = icmp eq i64 %bf.cast211, 0, !dbg !12133
  br i1 %tobool22, label %if.else24, label %if.then23, !dbg !12135

if.then23:                                        ; preds = %if.else16
  %call = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %tp, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @mostly_copy_tree_r, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !12136
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12138
  br label %if.end30, !dbg !12139

if.else24:                                        ; preds = %if.else16
  %bf.set28 = or i64 %bf.load, 1099511627776, !dbg !12140
  store i64 %bf.set28, i64* %1, align 8, !dbg !12140
  br label %if.end30

if.end30:                                         ; preds = %if.then23, %if.else24, %if.then12, %if.else
  ret %union.tree_node* null, !dbg !12141
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @unmark_visited_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !12142 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !12144, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !12145, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i8* %data, metadata !12146, metadata !DIExpression()), !dbg !12147
  %0 = bitcast %union.tree_node** %tp to i64**, !dbg !12148
  %1 = load i64*, i64** %0, align 8, !dbg !12148
  %bf.load = load i64, i64* %1, align 8, !dbg !12148
  %bf.cast1 = and i64 %bf.load, 1099511627776, !dbg !12148
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12148
  br i1 %tobool, label %if.else, label %if.then, !dbg !12150

if.then:                                          ; preds = %entry
  %bf.clear3 = and i64 %bf.load, -1099511627777, !dbg !12151
  store i64 %bf.clear3, i64* %1, align 8, !dbg !12151
  br label %if.end, !dbg !12152

if.else:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12153
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !12154
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !12155 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12159, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i32 %i, metadata !12160, metadata !DIExpression()), !dbg !12161
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !12162
  %tobool = icmp eq i8 %call, 0, !dbg !12162
  br i1 %tobool, label %return, label %if.then, !dbg !12164

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !12165
  %idx.ext = zext i32 %i to i64, !dbg !12167
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !12167
  br label %return, !dbg !12168

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !12169
  ret %union.tree_node** %retval.0, !dbg !12170
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !12171 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !12173, metadata !DIExpression()), !dbg !12174
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !12175
  %cmp = icmp eq i32 %call, 0, !dbg !12176
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !12177

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !12178
  %cmp2 = icmp ult i32 %call1, 10, !dbg !12179
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !12180
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12181 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12183, metadata !DIExpression()), !dbg !12185
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !12186
  %idxprom = zext i32 %call to i64, !dbg !12187
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !12187
  %0 = load i64, i64* %arrayidx, align 8, !dbg !12187
  call void @llvm.dbg.value(metadata i64 %0, metadata !12184, metadata !DIExpression()), !dbg !12185
  %cmp = icmp eq i64 %0, 0, !dbg !12188
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !12188

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12188
  br label %cond.end, !dbg !12188

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !12189
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !12190
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !12191
  ret %union.tree_node** %2, !dbg !12192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12193 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12197, metadata !DIExpression()), !dbg !12198
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !12199
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !12200
  ret i32 %call1, !dbg !12201
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !12202 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !12206, metadata !DIExpression()), !dbg !12207
  %idxprom = zext i32 %code to i64, !dbg !12208
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !12208
  %0 = load i32, i32* %arrayidx, align 4, !dbg !12208
  ret i32 %0, !dbg !12209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12210 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12212, metadata !DIExpression()), !dbg !12213
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !12214
  ret %union.tree_node* %call, !dbg !12215
}

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2280, !2281, !2282}
!llvm.ident = !{!2283}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gimplify_ctxp", scope: !2, file: !3, line: 93, type: !2265, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !725, globals: !2241, nameTableKind: None)
!3 = !DIFile(filename: "gimplify.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !336, !342, !347, !352, !370, !377, !384, !390, !398, !430, !434, !439, !477, !481, !487, !510, !517, !693, !719}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !330, line: 30, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335}
!332 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_region_type", file: !3, line: 75, baseType: !7, size: 32, elements: !385)
!385 = !{!386, !387, !388, !389}
!386 = !DIEnumerator(name: "ORT_WORKSHARE", value: 0, isUnsigned: true)
!387 = !DIEnumerator(name: "ORT_TASK", value: 1, isUnsigned: true)
!388 = !DIEnumerator(name: "ORT_PARALLEL", value: 2, isUnsigned: true)
!389 = !DIEnumerator(name: "ORT_COMBINED_PARALLEL", value: 3, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimplify_status", file: !391, line: 973, baseType: !392, size: 32, elements: !393)
!391 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!393 = !{!394, !395, !396, !397}
!394 = !DIEnumerator(name: "GS_ERROR", value: -2)
!395 = !DIEnumerator(name: "GS_UNHANDLED", value: -1)
!396 = !DIEnumerator(name: "GS_OK", value: 0)
!397 = !DIEnumerator(name: "GS_ALL_DONE", value: 1)
!398 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "br_predictor", file: !399, line: 24, baseType: !7, size: 32, elements: !400)
!399 = !DIFile(filename: "./predict.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!401 = !DIEnumerator(name: "PRED_COMBINED", value: 0, isUnsigned: true)
!402 = !DIEnumerator(name: "PRED_DS_THEORY", value: 1, isUnsigned: true)
!403 = !DIEnumerator(name: "PRED_FIRST_MATCH", value: 2, isUnsigned: true)
!404 = !DIEnumerator(name: "PRED_NO_PREDICTION", value: 3, isUnsigned: true)
!405 = !DIEnumerator(name: "PRED_UNCONDITIONAL", value: 4, isUnsigned: true)
!406 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS", value: 5, isUnsigned: true)
!407 = !DIEnumerator(name: "PRED_BUILTIN_EXPECT", value: 6, isUnsigned: true)
!408 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS_GUESSED", value: 7, isUnsigned: true)
!409 = !DIEnumerator(name: "PRED_CONTINUE", value: 8, isUnsigned: true)
!410 = !DIEnumerator(name: "PRED_NORETURN", value: 9, isUnsigned: true)
!411 = !DIEnumerator(name: "PRED_COLD_FUNCTION", value: 10, isUnsigned: true)
!412 = !DIEnumerator(name: "PRED_LOOP_BRANCH", value: 11, isUnsigned: true)
!413 = !DIEnumerator(name: "PRED_LOOP_EXIT", value: 12, isUnsigned: true)
!414 = !DIEnumerator(name: "PRED_POINTER", value: 13, isUnsigned: true)
!415 = !DIEnumerator(name: "PRED_TREE_POINTER", value: 14, isUnsigned: true)
!416 = !DIEnumerator(name: "PRED_OPCODE_POSITIVE", value: 15, isUnsigned: true)
!417 = !DIEnumerator(name: "PRED_OPCODE_NONEQUAL", value: 16, isUnsigned: true)
!418 = !DIEnumerator(name: "PRED_FPOPCODE", value: 17, isUnsigned: true)
!419 = !DIEnumerator(name: "PRED_TREE_OPCODE_POSITIVE", value: 18, isUnsigned: true)
!420 = !DIEnumerator(name: "PRED_TREE_OPCODE_NONEQUAL", value: 19, isUnsigned: true)
!421 = !DIEnumerator(name: "PRED_TREE_FPOPCODE", value: 20, isUnsigned: true)
!422 = !DIEnumerator(name: "PRED_CALL", value: 21, isUnsigned: true)
!423 = !DIEnumerator(name: "PRED_TREE_EARLY_RETURN", value: 22, isUnsigned: true)
!424 = !DIEnumerator(name: "PRED_GOTO", value: 23, isUnsigned: true)
!425 = !DIEnumerator(name: "PRED_CONST_RETURN", value: 24, isUnsigned: true)
!426 = !DIEnumerator(name: "PRED_NEGATIVE_RETURN", value: 25, isUnsigned: true)
!427 = !DIEnumerator(name: "PRED_NULL_RETURN", value: 26, isUnsigned: true)
!428 = !DIEnumerator(name: "PRED_MUDFLAP", value: 27, isUnsigned: true)
!429 = !DIEnumerator(name: "END_PREDICTORS", value: 28, isUnsigned: true)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "prediction", file: !399, line: 32, baseType: !7, size: 32, elements: !431)
!431 = !{!432, !433}
!432 = !DIEnumerator(name: "NOT_TAKEN", value: 0, isUnsigned: true)
!433 = !DIEnumerator(name: "TAKEN", value: 1, isUnsigned: true)
!434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gsi_iterator_update", file: !391, line: 4603, baseType: !7, size: 32, elements: !435)
!435 = !{!436, !437, !438}
!436 = !DIEnumerator(name: "GSI_NEW_STMT", value: 0, isUnsigned: true)
!437 = !DIEnumerator(name: "GSI_SAME_STMT", value: 1, isUnsigned: true)
!438 = !DIEnumerator(name: "GSI_CONTINUE_LINKING", value: 2, isUnsigned: true)
!439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !391, line: 51, baseType: !7, size: 32, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476}
!441 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!442 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!443 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!444 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!445 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!446 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!447 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!448 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!449 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!450 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!451 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!452 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!453 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!454 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!455 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!456 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!457 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!458 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!459 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!460 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!461 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!462 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!463 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!464 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!465 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!466 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!467 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!468 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!469 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!470 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!471 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!472 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!473 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!474 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!475 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!476 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "plf_mask", file: !391, line: 130, baseType: !7, size: 32, elements: !478)
!478 = !{!479, !480}
!479 = !DIEnumerator(name: "GF_PLF_1", value: 1, isUnsigned: true)
!480 = !DIEnumerator(name: "GF_PLF_2", value: 2, isUnsigned: true)
!481 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_try_flags", file: !391, line: 514, baseType: !7, size: 32, elements: !482)
!482 = !{!483, !484, !485, !486}
!483 = !DIEnumerator(name: "GIMPLE_TRY_CATCH", value: 1, isUnsigned: true)
!484 = !DIEnumerator(name: "GIMPLE_TRY_FINALLY", value: 2, isUnsigned: true)
!485 = !DIEnumerator(name: "GIMPLE_TRY_KIND", value: 3, isUnsigned: true)
!486 = !DIEnumerator(name: "GIMPLE_TRY_CATCH_IS_CLEANUP", value: 4, isUnsigned: true)
!487 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 309, baseType: !7, size: 32, elements: !489)
!488 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!490 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!491 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!492 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!493 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!494 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!495 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!496 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!497 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!498 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!499 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!500 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!501 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!502 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!503 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!504 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!505 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!506 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!507 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!508 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!509 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !511, line: 104, baseType: !7, size: 32, elements: !512)
!511 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!512 = !{!513, !514, !515, !516}
!513 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!514 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!515 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!516 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!517 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !518, line: 74, baseType: !7, size: 32, elements: !519)
!518 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!519 = !{!520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!520 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!692 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !391, line: 727, baseType: !7, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718}
!695 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!696 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!697 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!698 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!699 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!700 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!701 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!702 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!703 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!704 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!705 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!706 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!707 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!708 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!709 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!710 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!711 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!712 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!713 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!714 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!715 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!716 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!717 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!718 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!719 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !391, line: 80, baseType: !7, size: 32, elements: !720)
!720 = !{!721, !722, !723, !724}
!721 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!722 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!723 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!724 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!725 = !{!726, !727, !392, !728, !731, !732, !134, !734, !729, !788, !861, !736, !2159, !2161, !390, !398, !430, !2164, !2165, !2171, !7, !2173, !2176, !1937, !2181, !2186, !1204, !1613, !481, !909, !2191, !1093, !1059, !2239, !719}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !735, line: 56, baseType: !736)
!735 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !738)
!738 = !{!739, !772, !778, !791, !810, !821, !826, !835, !841, !854, !866, !904, !1396, !1424, !1441, !1442, !1447, !1456, !1462, !1467, !1471, !1475, !1810, !1857, !1863, !1869, !1876, !1889, !1903, !1920, !1932, !1954, !1969, !2141}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !737, file: !135, line: 3372, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !741)
!741 = !{!742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !740, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !740, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !740, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !740, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !740, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !740, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !740, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !740, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !740, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !740, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !740, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !740, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !740, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !740, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !740, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !740, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !740, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !740, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !740, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !740, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !740, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !740, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !740, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !740, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !740, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !740, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !740, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !740, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !740, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !740, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !737, file: !135, line: 3373, baseType: !773, size: 192)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !774)
!774 = !{!775, !776, !777}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !773, file: !135, line: 403, baseType: !740, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !773, file: !135, line: 404, baseType: !734, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !773, file: !135, line: 405, baseType: !734, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !737, file: !135, line: 3374, baseType: !779, size: 320)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !780)
!780 = !{!781, !782}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !779, file: !135, line: 1385, baseType: !773, size: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !779, file: !135, line: 1386, baseType: !783, size: 128, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !784, line: 58, baseType: !785)
!784 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !784, line: 54, size: 128, elements: !786)
!786 = !{!787, !789}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !785, file: !784, line: 56, baseType: !788, size: 64)
!788 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !785, file: !784, line: 57, baseType: !790, size: 64, offset: 64)
!790 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !737, file: !135, line: 3375, baseType: !792, size: 256)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !793)
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !792, file: !135, line: 1398, baseType: !773, size: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !792, file: !135, line: 1399, baseType: !796, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !798, line: 52, size: 256, elements: !799)
!798 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!799 = !{!800, !801, !802, !803, !804, !805, !806}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !797, file: !798, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !797, file: !798, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !797, file: !798, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !797, file: !798, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !797, file: !798, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !797, file: !798, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !797, file: !798, line: 62, baseType: !807, size: 192, offset: 64)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 192, elements: !808)
!808 = !{!809}
!809 = !DISubrange(count: 3)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !737, file: !135, line: 3376, baseType: !811, size: 256)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !812)
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !811, file: !135, line: 1409, baseType: !773, size: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !811, file: !135, line: 1410, baseType: !815, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !817, line: 27, size: 192, elements: !818)
!817 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !820}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !816, file: !817, line: 29, baseType: !783, size: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !816, file: !817, line: 30, baseType: !5, size: 32, offset: 128)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !737, file: !135, line: 3377, baseType: !822, size: 256)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !822, file: !135, line: 1438, baseType: !773, size: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !822, file: !135, line: 1439, baseType: !734, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !737, file: !135, line: 3378, baseType: !827, size: 256)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !828)
!828 = !{!829, !830, !831}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !827, file: !135, line: 1419, baseType: !773, size: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !827, file: !135, line: 1420, baseType: !392, size: 32, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !827, file: !135, line: 1421, baseType: !832, size: 8, offset: 224)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 8, elements: !833)
!833 = !{!834}
!834 = !DISubrange(count: 1)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !737, file: !135, line: 3379, baseType: !836, size: 320)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !837)
!837 = !{!838, !839, !840}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !836, file: !135, line: 1429, baseType: !773, size: 192)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !836, file: !135, line: 1430, baseType: !734, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !836, file: !135, line: 1431, baseType: !734, size: 64, offset: 256)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !737, file: !135, line: 3380, baseType: !842, size: 320)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !843)
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !842, file: !135, line: 1461, baseType: !773, size: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !842, file: !135, line: 1462, baseType: !846, size: 128, offset: 192)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !847, line: 31, size: 128, elements: !848)
!847 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!848 = !{!849, !852, !853}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !846, file: !847, line: 32, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !846, file: !847, line: 33, baseType: !7, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !846, file: !847, line: 34, baseType: !7, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !737, file: !135, line: 3381, baseType: !855, size: 384)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !856)
!856 = !{!857, !858, !863, !864, !865}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !855, file: !135, line: 2508, baseType: !773, size: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !855, file: !135, line: 2509, baseType: !859, size: 32, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !860, line: 58, baseType: !861)
!860 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !862, line: 44, baseType: !7)
!862 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!863 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !855, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !855, file: !135, line: 2511, baseType: !734, size: 64, offset: 256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !855, file: !135, line: 2512, baseType: !734, size: 64, offset: 320)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !737, file: !135, line: 3382, baseType: !867, size: 896)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !868)
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !867, file: !135, line: 2653, baseType: !855, size: 384)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !867, file: !135, line: 2654, baseType: !734, size: 64, offset: 384)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !867, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !867, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !867, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !867, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !867, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !867, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !867, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !867, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !867, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !867, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !867, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !867, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !867, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !867, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !867, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !867, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !867, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !867, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !867, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !867, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !867, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !867, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !867, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !867, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !867, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !867, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !867, file: !135, line: 2705, baseType: !734, size: 64, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !867, file: !135, line: 2706, baseType: !734, size: 64, offset: 640)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !867, file: !135, line: 2707, baseType: !734, size: 64, offset: 704)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !867, file: !135, line: 2708, baseType: !734, size: 64, offset: 768)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !867, file: !135, line: 2711, baseType: !902, size: 64, offset: 832)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !737, file: !135, line: 3383, baseType: !905, size: 960)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !905, file: !135, line: 2757, baseType: !867, size: 896)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !905, file: !135, line: 2758, baseType: !909, size: 64, offset: 896)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !735, line: 50, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !912, line: 240, size: 384, elements: !913)
!912 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !911, file: !912, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !911, file: !912, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !911, file: !912, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !911, file: !912, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !911, file: !912, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !911, file: !912, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !911, file: !912, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !911, file: !912, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !911, file: !912, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !911, file: !912, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !911, file: !912, line: 321, baseType: !925, size: 320, offset: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !912, line: 315, size: 320, elements: !926)
!926 = !{!927, !1329, !1331, !1394, !1395}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !925, file: !912, line: 316, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 64, elements: !833)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !912, line: 183, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !912, line: 166, size: 64, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !944, !945, !957, !960, !1020, !1021, !1306, !1319, !1326}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !930, file: !912, line: 168, baseType: !392, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !930, file: !912, line: 169, baseType: !7, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !930, file: !912, line: 170, baseType: !732, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !930, file: !912, line: 171, baseType: !909, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !930, file: !912, line: 172, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !735, line: 53, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !912, line: 359, size: 128, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !939, file: !912, line: 360, baseType: !392, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !939, file: !912, line: 361, baseType: !943, size: 64, offset: 64)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 64, elements: !833)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !930, file: !912, line: 173, baseType: !5, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !930, file: !912, line: 174, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !912, line: 133, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !912, line: 115, size: 32, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !947, file: !912, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !947, file: !912, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !947, file: !912, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !947, file: !912, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !947, file: !912, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !947, file: !912, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !947, file: !912, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !947, file: !912, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !930, file: !912, line: 175, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !912, line: 175, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !930, file: !912, line: 176, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !963, line: 75, size: 256, elements: !964)
!963 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!964 = !{!965, !979, !980, !981}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !962, file: !963, line: 76, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !963, line: 68, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !963, line: 63, size: 320, elements: !969)
!969 = !{!970, !972, !973, !974}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !968, file: !963, line: 64, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !968, file: !963, line: 65, baseType: !971, size: 64, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !968, file: !963, line: 66, baseType: !7, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !968, file: !963, line: 67, baseType: !975, size: 128, offset: 192)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 128, elements: !977)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !963, line: 29, baseType: !788)
!977 = !{!978}
!978 = !DISubrange(count: 2)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !962, file: !963, line: 77, baseType: !966, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !962, file: !963, line: 78, baseType: !7, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !962, file: !963, line: 79, baseType: !982, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !963, line: 49, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !963, line: 45, size: 832, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !984, file: !963, line: 46, baseType: !971, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !984, file: !963, line: 47, baseType: !961, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !984, file: !963, line: 48, baseType: !989, size: 704, offset: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !990, line: 164, size: 704, elements: !991)
!990 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!991 = !{!992, !993, !1003, !1004, !1005, !1006, !1007, !1008, !1012, !1016, !1017, !1018, !1019}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !989, file: !990, line: 166, baseType: !790, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !989, file: !990, line: 167, baseType: !994, size: 64, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !990, line: 157, size: 192, elements: !996)
!996 = !{!997, !998, !999}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !995, file: !990, line: 159, baseType: !729, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !995, file: !990, line: 160, baseType: !994, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !995, file: !990, line: 161, baseType: !1000, size: 32, offset: 128)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 32, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 4)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !989, file: !990, line: 168, baseType: !729, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !989, file: !990, line: 169, baseType: !729, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !989, file: !990, line: 170, baseType: !729, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !989, file: !990, line: 171, baseType: !790, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !989, file: !990, line: 172, baseType: !392, size: 32, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !989, file: !990, line: 176, baseType: !1009, size: 64, offset: 448)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!994, !731, !790}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !989, file: !990, line: 177, baseType: !1013, size: 64, offset: 512)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !731, !994}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !989, file: !990, line: 178, baseType: !731, size: 64, offset: 576)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !989, file: !990, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !989, file: !990, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !989, file: !990, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !930, file: !912, line: 177, baseType: !734, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !930, file: !912, line: 178, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !1024)
!1024 = !{!1025, !1271, !1272, !1273, !1276, !1280, !1281, !1282, !1300, !1301, !1302, !1303, !1304, !1305}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1023, file: !337, line: 219, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !1029)
!1029 = !{!1030}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1028, file: !337, line: 151, baseType: !1031, size: 128)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !1033)
!1033 = !{!1034, !1035, !1036}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1032, file: !337, line: 150, baseType: !7, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1032, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1032, file: !337, line: 150, baseType: !1037, size: 64, offset: 64)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 64, elements: !833)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !735, line: 108, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1263, !1264, !1265, !1266, !1267, !1268, !1269}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1040, file: !337, line: 124, baseType: !1022, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1040, file: !337, line: 125, baseType: !1022, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1040, file: !337, line: 131, baseType: !1045, size: 64, offset: 128)
!1045 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !1046)
!1046 = !{!1047, !1262}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1045, file: !337, line: 129, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !735, line: 66, baseType: !1049)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !391, line: 143, size: 192, elements: !1051)
!1051 = !{!1052, !1260, !1261}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1050, file: !391, line: 145, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !735, line: 69, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !391, line: 136, size: 192, elements: !1056)
!1056 = !{!1057, !1258, !1259}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1055, file: !391, line: 137, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !735, line: 58, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !391, line: 737, size: 768, elements: !1061)
!1061 = !{!1062, !1079, !1113, !1119, !1124, !1129, !1136, !1142, !1148, !1153, !1167, !1172, !1178, !1183, !1193, !1198, !1216, !1223, !1230, !1236, !1241, !1247, !1253}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1060, file: !391, line: 738, baseType: !1063, size: 256)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !391, line: 271, size: 256, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1063, file: !391, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1063, file: !391, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1063, file: !391, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1063, file: !391, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1063, file: !391, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1063, file: !391, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1063, file: !391, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1063, file: !391, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1063, file: !391, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1063, file: !391, line: 312, baseType: !7, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1063, file: !391, line: 316, baseType: !859, size: 32, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1063, file: !391, line: 319, baseType: !7, size: 32, offset: 96)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1063, file: !391, line: 323, baseType: !1022, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1063, file: !391, line: 327, baseType: !734, size: 64, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1060, file: !391, line: 739, baseType: !1080, size: 448)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !391, line: 350, size: 448, elements: !1081)
!1081 = !{!1082, !1111}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1080, file: !391, line: 353, baseType: !1083, size: 384)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !391, line: 333, size: 384, elements: !1084)
!1084 = !{!1085, !1086, !1094}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1083, file: !391, line: 336, baseType: !1063, size: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1083, file: !391, line: 343, baseType: !1087, size: 64, offset: 256)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1089, line: 37, size: 128, elements: !1090)
!1089 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !1089, line: 39, baseType: !1087, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1088, file: !1089, line: 40, baseType: !1093, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1083, file: !391, line: 344, baseType: !1095, size: 64, offset: 320)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1089, line: 45, size: 320, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1096, file: !1089, line: 47, baseType: !1095, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1096, file: !1089, line: 48, baseType: !1100, size: 256, offset: 64)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1101)
!1101 = !{!1102, !1104, !1105, !1110}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1100, file: !135, line: 1884, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1100, file: !135, line: 1885, baseType: !1103, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1100, file: !135, line: 1891, baseType: !1106, size: 64, offset: 128)
!1106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1100, file: !135, line: 1891, size: 64, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1106, file: !135, line: 1891, baseType: !1058, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1106, file: !135, line: 1891, baseType: !734, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1100, file: !135, line: 1892, baseType: !1093, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1080, file: !391, line: 359, baseType: !1112, size: 64, offset: 384)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, size: 64, elements: !833)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1060, file: !391, line: 740, baseType: !1114, size: 512)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !391, line: 365, size: 512, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1114, file: !391, line: 368, baseType: !1083, size: 384)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1114, file: !391, line: 373, baseType: !734, size: 64, offset: 384)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1114, file: !391, line: 374, baseType: !734, size: 64, offset: 448)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1060, file: !391, line: 741, baseType: !1120, size: 576)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !391, line: 380, size: 576, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1120, file: !391, line: 383, baseType: !1114, size: 512)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1120, file: !391, line: 389, baseType: !1112, size: 64, offset: 512)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1060, file: !391, line: 742, baseType: !1125, size: 320)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !391, line: 395, size: 320, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1125, file: !391, line: 397, baseType: !1063, size: 256)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1125, file: !391, line: 400, baseType: !1048, size: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1060, file: !391, line: 743, baseType: !1130, size: 448)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !391, line: 406, size: 448, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1130, file: !391, line: 408, baseType: !1063, size: 256)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1130, file: !391, line: 412, baseType: !734, size: 64, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1130, file: !391, line: 420, baseType: !734, size: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1130, file: !391, line: 423, baseType: !1048, size: 64, offset: 384)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1060, file: !391, line: 744, baseType: !1137, size: 384)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !391, line: 429, size: 384, elements: !1138)
!1138 = !{!1139, !1140, !1141}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1137, file: !391, line: 431, baseType: !1063, size: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1137, file: !391, line: 434, baseType: !734, size: 64, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1137, file: !391, line: 437, baseType: !1048, size: 64, offset: 320)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1060, file: !391, line: 745, baseType: !1143, size: 384)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !391, line: 443, size: 384, elements: !1144)
!1144 = !{!1145, !1146, !1147}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1143, file: !391, line: 445, baseType: !1063, size: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1143, file: !391, line: 449, baseType: !734, size: 64, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1143, file: !391, line: 453, baseType: !1048, size: 64, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1060, file: !391, line: 746, baseType: !1149, size: 320)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !391, line: 459, size: 320, elements: !1150)
!1150 = !{!1151, !1152}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1149, file: !391, line: 461, baseType: !1063, size: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1149, file: !391, line: 464, baseType: !734, size: 64, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1060, file: !391, line: 747, baseType: !1154, size: 768)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !391, line: 469, size: 768, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1160}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1154, file: !391, line: 471, baseType: !1063, size: 256)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1154, file: !391, line: 474, baseType: !7, size: 32, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1154, file: !391, line: 475, baseType: !7, size: 32, offset: 288)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1154, file: !391, line: 478, baseType: !734, size: 64, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1154, file: !391, line: 481, baseType: !1161, size: 384, offset: 384)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 384, elements: !833)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1163)
!1163 = !{!1164, !1165, !1166}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1162, file: !135, line: 1920, baseType: !1100, size: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1162, file: !135, line: 1921, baseType: !734, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1162, file: !135, line: 1922, baseType: !859, size: 32, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1060, file: !391, line: 748, baseType: !1168, size: 320)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !391, line: 487, size: 320, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1168, file: !391, line: 490, baseType: !1063, size: 256)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1168, file: !391, line: 494, baseType: !392, size: 32, offset: 256)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1060, file: !391, line: 749, baseType: !1173, size: 384)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !391, line: 500, size: 384, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1173, file: !391, line: 502, baseType: !1063, size: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1173, file: !391, line: 506, baseType: !1048, size: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1173, file: !391, line: 510, baseType: !1048, size: 64, offset: 320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1060, file: !391, line: 750, baseType: !1179, size: 320)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !391, line: 529, size: 320, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1179, file: !391, line: 531, baseType: !1063, size: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1179, file: !391, line: 540, baseType: !1048, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1060, file: !391, line: 751, baseType: !1184, size: 704)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !391, line: 546, size: 704, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1191, !1192}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1184, file: !391, line: 549, baseType: !1114, size: 512)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1184, file: !391, line: 553, baseType: !732, size: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1184, file: !391, line: 557, baseType: !727, size: 8, offset: 576)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1184, file: !391, line: 558, baseType: !727, size: 8, offset: 584)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1184, file: !391, line: 559, baseType: !727, size: 8, offset: 592)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1184, file: !391, line: 560, baseType: !727, size: 8, offset: 600)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1184, file: !391, line: 566, baseType: !1112, size: 64, offset: 640)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1060, file: !391, line: 752, baseType: !1194, size: 384)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !391, line: 571, size: 384, elements: !1195)
!1195 = !{!1196, !1197}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1194, file: !391, line: 573, baseType: !1125, size: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1194, file: !391, line: 577, baseType: !734, size: 64, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1060, file: !391, line: 753, baseType: !1199, size: 576)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !391, line: 600, size: 576, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1206, !1215}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1199, file: !391, line: 602, baseType: !1125, size: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1199, file: !391, line: 605, baseType: !734, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1199, file: !391, line: 609, baseType: !1204, size: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1205, line: 46, baseType: !788)
!1205 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1199, file: !391, line: 612, baseType: !1207, size: 64, offset: 448)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !391, line: 581, size: 320, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1208, file: !391, line: 583, baseType: !134, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1208, file: !391, line: 586, baseType: !734, size: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1208, file: !391, line: 589, baseType: !734, size: 64, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1208, file: !391, line: 592, baseType: !734, size: 64, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1208, file: !391, line: 595, baseType: !734, size: 64, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1199, file: !391, line: 616, baseType: !1048, size: 64, offset: 512)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1060, file: !391, line: 754, baseType: !1217, size: 512)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !391, line: 622, size: 512, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1217, file: !391, line: 624, baseType: !1125, size: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1217, file: !391, line: 628, baseType: !734, size: 64, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1217, file: !391, line: 632, baseType: !734, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1217, file: !391, line: 636, baseType: !734, size: 64, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1060, file: !391, line: 755, baseType: !1224, size: 704)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !391, line: 642, size: 704, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1224, file: !391, line: 644, baseType: !1217, size: 512)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1224, file: !391, line: 648, baseType: !734, size: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1224, file: !391, line: 652, baseType: !734, size: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1224, file: !391, line: 653, baseType: !734, size: 64, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1060, file: !391, line: 756, baseType: !1231, size: 448)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !391, line: 663, size: 448, elements: !1232)
!1232 = !{!1233, !1234, !1235}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1231, file: !391, line: 665, baseType: !1125, size: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1231, file: !391, line: 668, baseType: !734, size: 64, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1231, file: !391, line: 673, baseType: !734, size: 64, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1060, file: !391, line: 757, baseType: !1237, size: 384)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !391, line: 694, size: 384, elements: !1238)
!1238 = !{!1239, !1240}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1237, file: !391, line: 696, baseType: !1125, size: 320)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1237, file: !391, line: 699, baseType: !734, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1060, file: !391, line: 758, baseType: !1242, size: 384)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !391, line: 681, size: 384, elements: !1243)
!1243 = !{!1244, !1245, !1246}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1242, file: !391, line: 683, baseType: !1063, size: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1242, file: !391, line: 686, baseType: !734, size: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1242, file: !391, line: 689, baseType: !734, size: 64, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1060, file: !391, line: 759, baseType: !1248, size: 384)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !391, line: 707, size: 384, elements: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1248, file: !391, line: 709, baseType: !1063, size: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1248, file: !391, line: 712, baseType: !734, size: 64, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1248, file: !391, line: 712, baseType: !734, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1060, file: !391, line: 760, baseType: !1254, size: 320)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !391, line: 718, size: 320, elements: !1255)
!1255 = !{!1256, !1257}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1254, file: !391, line: 720, baseType: !1063, size: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1254, file: !391, line: 723, baseType: !734, size: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1055, file: !391, line: 138, baseType: !1054, size: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !391, line: 139, baseType: !1054, size: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1050, file: !391, line: 146, baseType: !1053, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1050, file: !391, line: 152, baseType: !1048, size: 64, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1045, file: !337, line: 130, baseType: !909, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1040, file: !337, line: 134, baseType: !731, size: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1040, file: !337, line: 137, baseType: !734, size: 64, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1040, file: !337, line: 138, baseType: !859, size: 32, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1040, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1040, file: !337, line: 144, baseType: !392, size: 32, offset: 384)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1040, file: !337, line: 145, baseType: !392, size: 32, offset: 416)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1040, file: !337, line: 146, baseType: !1270, size: 64, offset: 448)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !790)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1023, file: !337, line: 220, baseType: !1026, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1023, file: !337, line: 223, baseType: !731, size: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1023, file: !337, line: 226, baseType: !1274, size: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1023, file: !337, line: 229, baseType: !1277, size: 128, offset: 256)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 128, elements: !977)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1023, file: !337, line: 232, baseType: !1022, size: 64, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1023, file: !337, line: 233, baseType: !1022, size: 64, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1023, file: !337, line: 238, baseType: !1283, size: 64, offset: 512)
!1283 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !1284)
!1284 = !{!1285, !1291}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1283, file: !337, line: 236, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1287, file: !337, line: 275, baseType: !1048, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1287, file: !337, line: 278, baseType: !1048, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1283, file: !337, line: 237, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1293, file: !337, line: 261, baseType: !909, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1293, file: !337, line: 262, baseType: !909, size: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1293, file: !337, line: 266, baseType: !909, size: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1293, file: !337, line: 267, baseType: !909, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1293, file: !337, line: 270, baseType: !392, size: 32, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1023, file: !337, line: 241, baseType: !1270, size: 64, offset: 576)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1023, file: !337, line: 244, baseType: !392, size: 32, offset: 640)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1023, file: !337, line: 247, baseType: !392, size: 32, offset: 672)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1023, file: !337, line: 250, baseType: !392, size: 32, offset: 704)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1023, file: !337, line: 253, baseType: !392, size: 32, offset: 736)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1023, file: !337, line: 256, baseType: !392, size: 32, offset: 768)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !930, file: !912, line: 179, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !912, line: 150, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !912, line: 142, size: 320, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1314, !1317, !1318}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1309, file: !912, line: 144, baseType: !734, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1309, file: !912, line: 145, baseType: !909, size: 64, offset: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1309, file: !912, line: 146, baseType: !909, size: 64, offset: 128)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1309, file: !912, line: 147, baseType: !1315, size: 32, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1316, line: 31, baseType: !392)
!1316 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1309, file: !912, line: 148, baseType: !7, size: 32, offset: 224)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1309, file: !912, line: 149, baseType: !727, size: 8, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !930, file: !912, line: 180, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !912, line: 162, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !912, line: 159, size: 128, elements: !1323)
!1323 = !{!1324, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1322, file: !912, line: 160, baseType: !734, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1322, file: !912, line: 161, baseType: !790, size: 64, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !930, file: !912, line: 181, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !912, line: 181, flags: DIFlagFwdDecl)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !925, file: !912, line: 317, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !790, size: 64, elements: !833)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !925, file: !912, line: 318, baseType: !1332, size: 320)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !912, line: 188, size: 320, elements: !1333)
!1333 = !{!1334, !1336, !1393}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1332, file: !912, line: 190, baseType: !1335, size: 192)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 192, elements: !808)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1332, file: !912, line: 193, baseType: !1337, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !912, line: 206, size: 320, elements: !1339)
!1339 = !{!1340, !1378, !1379, !1380, !1392}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1338, file: !912, line: 208, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !735, line: 62, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1344, line: 538, size: 256, elements: !1345)
!1344 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1345 = !{!1346, !1350, !1356, !1369}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1343, file: !1344, line: 539, baseType: !1347, size: 32)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1344, line: 482, size: 32, elements: !1348)
!1348 = !{!1349}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1347, file: !1344, line: 484, baseType: !7, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1343, file: !1344, line: 540, baseType: !1351, size: 192)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1344, line: 488, size: 192, elements: !1352)
!1352 = !{!1353, !1354, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1351, file: !1344, line: 489, baseType: !1347, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1351, file: !1344, line: 492, baseType: !732, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1351, file: !1344, line: 496, baseType: !734, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1343, file: !1344, line: 541, baseType: !1357, size: 256)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1344, line: 504, size: 256, elements: !1358)
!1358 = !{!1359, !1360, !1367, !1368}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1357, file: !1344, line: 505, baseType: !1347, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1357, file: !1344, line: 509, baseType: !1361, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1344, line: 501, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !1365}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !1344, line: 510, baseType: !1365, size: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1357, file: !1344, line: 513, baseType: !1341, size: 64, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1343, file: !1344, line: 542, baseType: !1370, size: 128)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1344, line: 530, size: 128, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1370, file: !1344, line: 531, baseType: !1347, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1370, file: !1344, line: 534, baseType: !1374, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1344, line: 525, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!727, !734, !732, !788, !788}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1338, file: !912, line: 211, baseType: !7, size: 32, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1338, file: !912, line: 214, baseType: !790, size: 64, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1338, file: !912, line: 224, baseType: !1381, size: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !912, line: 202, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !912, line: 202, size: 128, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1383, file: !912, line: 202, baseType: !1386, size: 128)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !912, line: 200, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !912, line: 200, size: 128, elements: !1388)
!1388 = !{!1389, !1390, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1387, file: !912, line: 200, baseType: !7, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1387, file: !912, line: 200, baseType: !7, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1387, file: !912, line: 200, baseType: !943, size: 64, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1338, file: !912, line: 234, baseType: !1381, size: 64, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1332, file: !912, line: 197, baseType: !790, size: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !925, file: !912, line: 319, baseType: !797, size: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !925, file: !912, line: 320, baseType: !816, size: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !737, file: !135, line: 3384, baseType: !1397, size: 1472)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1398)
!1398 = !{!1399, !1420, !1421, !1422, !1423}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1397, file: !135, line: 3115, baseType: !1400, size: 1216)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1400, file: !135, line: 2985, baseType: !905, size: 960)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1400, file: !135, line: 2986, baseType: !734, size: 64, offset: 960)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1400, file: !135, line: 2987, baseType: !734, size: 64, offset: 1024)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1400, file: !135, line: 2988, baseType: !734, size: 64, offset: 1088)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1400, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1400, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1400, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1400, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1400, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1400, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1400, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1400, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1400, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1400, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1400, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1400, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1400, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1400, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1397, file: !135, line: 3117, baseType: !734, size: 64, offset: 1216)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1397, file: !135, line: 3119, baseType: !734, size: 64, offset: 1280)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1397, file: !135, line: 3121, baseType: !734, size: 64, offset: 1344)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1397, file: !135, line: 3123, baseType: !734, size: 64, offset: 1408)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !737, file: !135, line: 3385, baseType: !1425, size: 1088)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1426)
!1426 = !{!1427, !1428, !1429}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1425, file: !135, line: 2875, baseType: !905, size: 960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1425, file: !135, line: 2876, baseType: !909, size: 64, offset: 960)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1425, file: !135, line: 2877, baseType: !1430, size: 64, offset: 1024)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1432, line: 172, size: 128, elements: !1433)
!1432 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1431, file: !1432, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1431, file: !1432, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1431, file: !1432, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1431, file: !1432, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1431, file: !1432, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1431, file: !1432, line: 195, baseType: !7, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1431, file: !1432, line: 199, baseType: !734, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !737, file: !135, line: 3386, baseType: !1400, size: 1216)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !737, file: !135, line: 3387, baseType: !1443, size: 1280)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1443, file: !135, line: 3094, baseType: !1400, size: 1216)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1443, file: !135, line: 3095, baseType: !1430, size: 64, offset: 1216)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !737, file: !135, line: 3388, baseType: !1448, size: 1216)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1448, file: !135, line: 2825, baseType: !867, size: 896)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1448, file: !135, line: 2827, baseType: !734, size: 64, offset: 896)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1448, file: !135, line: 2828, baseType: !734, size: 64, offset: 960)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1448, file: !135, line: 2829, baseType: !734, size: 64, offset: 1024)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1448, file: !135, line: 2830, baseType: !734, size: 64, offset: 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1448, file: !135, line: 2831, baseType: !734, size: 64, offset: 1152)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !737, file: !135, line: 3389, baseType: !1457, size: 1024)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1458)
!1458 = !{!1459, !1460, !1461}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !135, line: 2851, baseType: !905, size: 960)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1457, file: !135, line: 2852, baseType: !392, size: 32, offset: 960)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1457, file: !135, line: 2853, baseType: !392, size: 32, offset: 992)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !737, file: !135, line: 3390, baseType: !1463, size: 1024)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1463, file: !135, line: 2858, baseType: !905, size: 960)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1463, file: !135, line: 2859, baseType: !1430, size: 64, offset: 960)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !737, file: !135, line: 3391, baseType: !1468, size: 960)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1469)
!1469 = !{!1470}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1468, file: !135, line: 2863, baseType: !905, size: 960)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !737, file: !135, line: 3392, baseType: !1472, size: 1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1473)
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1472, file: !135, line: 3305, baseType: !1397, size: 1472)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !737, file: !135, line: 3393, baseType: !1476, size: 1792)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1477)
!1477 = !{!1478, !1479, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1476, file: !135, line: 3249, baseType: !1397, size: 1472)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1476, file: !135, line: 3251, baseType: !1480, size: 64, offset: 1472)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1482, line: 463, size: 1152, elements: !1483)
!1482 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1483 = !{!1484, !1643, !1674, !1675, !1730, !1733, !1734, !1735, !1736, !1737, !1738, !1762, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1481, file: !1482, line: 464, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !330, line: 194, size: 384, elements: !1487)
!1487 = !{!1488, !1537, !1550, !1564, !1612, !1624}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1486, file: !330, line: 197, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !330, line: 182, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !330, line: 116, size: 704, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1525, !1534, !1535, !1536}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1491, file: !330, line: 119, baseType: !1490, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1491, file: !330, line: 122, baseType: !1490, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1491, file: !330, line: 123, baseType: !1490, size: 64, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1491, file: !330, line: 126, baseType: !392, size: 32, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1491, file: !330, line: 129, baseType: !329, size: 32, offset: 224)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1491, file: !330, line: 165, baseType: !1499, size: 192, offset: 256)
!1499 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !330, line: 132, size: 192, elements: !1500)
!1500 = !{!1501, !1514, !1520}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1499, file: !330, line: 137, baseType: !1502, size: 128)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !330, line: 133, size: 128, elements: !1503)
!1503 = !{!1504, !1513}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1502, file: !330, line: 135, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !330, line: 93, size: 320, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1506, file: !330, line: 96, baseType: !1505, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1506, file: !330, line: 97, baseType: !1505, size: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1506, file: !330, line: 101, baseType: !734, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1506, file: !330, line: 106, baseType: !734, size: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1506, file: !330, line: 111, baseType: !734, size: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1502, file: !330, line: 136, baseType: !1505, size: 64, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1499, file: !330, line: 151, baseType: !1515, size: 192)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !330, line: 139, size: 192, elements: !1516)
!1516 = !{!1517, !1518, !1519}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1515, file: !330, line: 141, baseType: !734, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1515, file: !330, line: 145, baseType: !734, size: 64, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1515, file: !330, line: 150, baseType: !392, size: 32, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1499, file: !330, line: 164, baseType: !1521, size: 128)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !330, line: 153, size: 128, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1521, file: !330, line: 161, baseType: !734, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1521, file: !330, line: 163, baseType: !859, size: 32, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1491, file: !330, line: 168, baseType: !1526, size: 64, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !330, line: 67, size: 320, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1527, file: !330, line: 70, baseType: !1526, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1527, file: !330, line: 73, baseType: !1490, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1527, file: !330, line: 78, baseType: !734, size: 64, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1527, file: !330, line: 85, baseType: !909, size: 64, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1527, file: !330, line: 88, baseType: !392, size: 32, offset: 256)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1491, file: !330, line: 173, baseType: !909, size: 64, offset: 512)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1491, file: !330, line: 173, baseType: !909, size: 64, offset: 576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1491, file: !330, line: 177, baseType: !727, size: 8, offset: 640)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1486, file: !330, line: 200, baseType: !1538, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !330, line: 185, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !330, line: 185, size: 128, elements: !1541)
!1541 = !{!1542}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1540, file: !330, line: 185, baseType: !1543, size: 128)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !330, line: 184, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !330, line: 184, size: 128, elements: !1545)
!1545 = !{!1546, !1547, !1548}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1544, file: !330, line: 184, baseType: !7, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1544, file: !330, line: 184, baseType: !7, size: 32, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1544, file: !330, line: 184, baseType: !1549, size: 64, offset: 64)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 64, elements: !833)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1486, file: !330, line: 203, baseType: !1551, size: 64, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, size: 128, elements: !1554)
!1554 = !{!1555}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1553, file: !330, line: 189, baseType: !1556, size: 128)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !330, line: 188, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !330, line: 188, size: 128, elements: !1558)
!1558 = !{!1559, !1560, !1561}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1557, file: !330, line: 188, baseType: !7, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1557, file: !330, line: 188, baseType: !7, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1557, file: !330, line: 188, baseType: !1562, size: 64, offset: 64)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1563, size: 64, elements: !833)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !330, line: 180, baseType: !1526)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1486, file: !330, line: 207, baseType: !1565, size: 64, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1566, line: 144, baseType: !1567)
!1566 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1566, line: 100, size: 896, elements: !1569)
!1569 = !{!1570, !1576, !1581, !1586, !1588, !1589, !1590, !1591, !1592, !1593, !1598, !1600, !1601, !1606, !1611}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1568, file: !1566, line: 102, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1566, line: 52, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!1575, !1365}
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1566, line: 47, baseType: !7)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1568, file: !1566, line: 105, baseType: !1577, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1566, line: 59, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!392, !1365, !1365}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1568, file: !1566, line: 108, baseType: !1582, size: 64, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1566, line: 63, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !731}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1568, file: !1566, line: 111, baseType: !1587, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1568, file: !1566, line: 114, baseType: !1204, size: 64, offset: 256)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1568, file: !1566, line: 117, baseType: !1204, size: 64, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1568, file: !1566, line: 120, baseType: !1204, size: 64, offset: 384)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1568, file: !1566, line: 124, baseType: !7, size: 32, offset: 448)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1568, file: !1566, line: 128, baseType: !7, size: 32, offset: 480)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1568, file: !1566, line: 131, baseType: !1594, size: 64, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1566, line: 75, baseType: !1595)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!731, !1204, !1204}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1568, file: !1566, line: 132, baseType: !1599, size: 64, offset: 576)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1566, line: 78, baseType: !1583)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1568, file: !1566, line: 135, baseType: !731, size: 64, offset: 640)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1568, file: !1566, line: 136, baseType: !1602, size: 64, offset: 704)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1566, line: 82, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!731, !731, !1204, !1204}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1568, file: !1566, line: 137, baseType: !1607, size: 64, offset: 768)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1566, line: 83, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{null, !731, !731}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1568, file: !1566, line: 141, baseType: !7, size: 32, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1486, file: !330, line: 211, baseType: !1613, size: 64, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1615, file: !135, line: 183, baseType: !1618, size: 128)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1620)
!1620 = !{!1621, !1622, !1623}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1619, file: !135, line: 182, baseType: !7, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1619, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1619, file: !135, line: 182, baseType: !1112, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1486, file: !330, line: 220, baseType: !1625, size: 64, offset: 320)
!1625 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !330, line: 217, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1625, file: !330, line: 218, baseType: !1613, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1625, file: !330, line: 219, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1631, line: 29, baseType: !1632)
!1631 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1631, line: 29, size: 96, elements: !1633)
!1633 = !{!1634}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1632, file: !1631, line: 29, baseType: !1635, size: 96)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1631, line: 27, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1631, line: 27, size: 96, elements: !1637)
!1637 = !{!1638, !1639, !1640}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1636, file: !1631, line: 27, baseType: !7, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1636, file: !1631, line: 27, baseType: !7, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1636, file: !1631, line: 27, baseType: !1641, size: 8, offset: 64)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 8, elements: !833)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1631, line: 26, baseType: !727)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1481, file: !1482, line: 467, baseType: !1644, size: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !1646)
!1646 = !{!1647, !1649, !1650, !1663, !1664, !1665, !1666, !1667, !1668, !1670, !1672, !1673}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1645, file: !337, line: 377, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !735, line: 111, baseType: !1022)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1645, file: !337, line: 378, baseType: !1648, size: 64, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1645, file: !337, line: 381, baseType: !1651, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !1654)
!1654 = !{!1655}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1653, file: !337, line: 282, baseType: !1656, size: 128)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !1658)
!1658 = !{!1659, !1660, !1661}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1657, file: !337, line: 281, baseType: !7, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1657, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1657, file: !337, line: 281, baseType: !1662, size: 64, offset: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 64, elements: !833)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1645, file: !337, line: 384, baseType: !392, size: 32, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1645, file: !337, line: 387, baseType: !392, size: 32, offset: 224)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1645, file: !337, line: 390, baseType: !392, size: 32, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1645, file: !337, line: 394, baseType: !1651, size: 64, offset: 320)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1645, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1645, file: !337, line: 399, baseType: !1669, size: 64, offset: 416)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !977)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1645, file: !337, line: 402, baseType: !1671, size: 64, offset: 480)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !977)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1645, file: !337, line: 406, baseType: !392, size: 32, offset: 544)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1645, file: !337, line: 409, baseType: !392, size: 32, offset: 576)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1481, file: !1482, line: 470, baseType: !1049, size: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1481, file: !1482, line: 473, baseType: !1676, size: 64, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1432, line: 39, size: 1152, elements: !1678)
!1678 = !{!1679, !1680, !1693, !1694, !1695, !1707, !1708, !1712, !1713, !1714, !1715, !1716}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1677, file: !1432, line: 41, baseType: !1565, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1677, file: !1432, line: 48, baseType: !1681, size: 64, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !391, line: 35, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !391, line: 35, size: 128, elements: !1684)
!1684 = !{!1685}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1683, file: !391, line: 35, baseType: !1686, size: 128)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !391, line: 33, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !391, line: 33, size: 128, elements: !1688)
!1688 = !{!1689, !1690, !1691}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1687, file: !391, line: 33, baseType: !7, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1687, file: !391, line: 33, baseType: !7, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1687, file: !391, line: 33, baseType: !1692, size: 64, offset: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 64, elements: !833)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1677, file: !1432, line: 51, baseType: !1613, size: 64, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1677, file: !1432, line: 54, baseType: !734, size: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1677, file: !1432, line: 57, baseType: !1696, size: 128, offset: 256)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1697, line: 31, size: 128, elements: !1698)
!1697 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1698 = !{!1699, !1700, !1701, !1702, !1703, !1704, !1705}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1696, file: !1697, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1696, file: !1697, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1696, file: !1697, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1696, file: !1697, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1696, file: !1697, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1696, file: !1697, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1696, file: !1697, line: 56, baseType: !1706, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !735, line: 47, baseType: !961)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1677, file: !1432, line: 60, baseType: !1696, size: 128, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1677, file: !1432, line: 64, baseType: !1709, size: 64, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1711, line: 33, flags: DIFlagFwdDecl)
!1711 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1677, file: !1432, line: 67, baseType: !734, size: 64, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1677, file: !1432, line: 73, baseType: !1565, size: 64, offset: 640)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1677, file: !1432, line: 77, baseType: !1706, size: 64, offset: 704)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1677, file: !1432, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1677, file: !1432, line: 82, baseType: !1717, size: 320, offset: 832)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1089, line: 62, size: 320, elements: !1718)
!1718 = !{!1719, !1725, !1726, !1727, !1728, !1729}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1717, file: !1089, line: 63, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1089, line: 56, size: 128, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1721, file: !1089, line: 57, baseType: !1720, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1721, file: !1089, line: 58, baseType: !832, size: 8, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1717, file: !1089, line: 64, baseType: !7, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1717, file: !1089, line: 66, baseType: !7, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1717, file: !1089, line: 68, baseType: !727, size: 8, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1717, file: !1089, line: 70, baseType: !1087, size: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1717, file: !1089, line: 71, baseType: !1095, size: 64, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1481, file: !1482, line: 476, baseType: !1731, size: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1482, line: 476, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1481, file: !1482, line: 479, baseType: !1565, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1481, file: !1482, line: 484, baseType: !734, size: 64, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1481, file: !1482, line: 488, baseType: !734, size: 64, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1481, file: !1482, line: 493, baseType: !734, size: 64, offset: 512)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1481, file: !1482, line: 496, baseType: !734, size: 64, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1481, file: !1482, line: 501, baseType: !1739, size: 64, offset: 640)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !1741)
!1741 = !{!1742, !1745, !1746, !1747, !1748, !1750, !1751, !1756, !1757, !1758, !1759, !1760, !1761}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1740, file: !348, line: 2356, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1740, file: !348, line: 2357, baseType: !732, size: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1740, file: !348, line: 2358, baseType: !392, size: 32, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1740, file: !348, line: 2359, baseType: !392, size: 32, offset: 160)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1740, file: !348, line: 2360, baseType: !1749, size: 128, offset: 192)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 128, elements: !1001)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1740, file: !348, line: 2364, baseType: !392, size: 32, offset: 320)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1740, file: !348, line: 2367, baseType: !1752, size: 128, offset: 384)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !1753)
!1753 = !{!1754, !1755}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1752, file: !348, line: 2351, baseType: !909, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1752, file: !348, line: 2352, baseType: !790, size: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1740, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1740, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1740, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1740, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1740, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1740, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1481, file: !1482, line: 504, baseType: !1763, size: 64, offset: 704)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1482, line: 504, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1481, file: !1482, line: 507, baseType: !1565, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1481, file: !1482, line: 510, baseType: !392, size: 32, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1481, file: !1482, line: 513, baseType: !392, size: 32, offset: 864)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1481, file: !1482, line: 516, baseType: !859, size: 32, offset: 896)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1481, file: !1482, line: 519, baseType: !859, size: 32, offset: 928)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1481, file: !1482, line: 522, baseType: !7, size: 32, offset: 960)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1481, file: !1482, line: 523, baseType: !7, size: 32, offset: 992)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1481, file: !1482, line: 528, baseType: !732, size: 64, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1481, file: !1482, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1481, file: !1482, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1481, file: !1482, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1481, file: !1482, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1481, file: !1482, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1481, file: !1482, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1481, file: !1482, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1481, file: !1482, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1481, file: !1482, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1481, file: !1482, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1481, file: !1482, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1481, file: !1482, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1481, file: !1482, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1481, file: !1482, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1481, file: !1482, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1481, file: !1482, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1476, file: !135, line: 3254, baseType: !734, size: 64, offset: 1536)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1476, file: !135, line: 3257, baseType: !734, size: 64, offset: 1600)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1476, file: !135, line: 3258, baseType: !734, size: 64, offset: 1664)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1476, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1476, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1476, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1476, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1476, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1476, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1476, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1476, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1476, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1476, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1476, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1476, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1476, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1476, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1476, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1476, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1476, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1476, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !737, file: !135, line: 3394, baseType: !1811, size: 1344)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1811, file: !135, line: 2280, baseType: !773, size: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1811, file: !135, line: 2281, baseType: !734, size: 64, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1811, file: !135, line: 2282, baseType: !734, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1811, file: !135, line: 2283, baseType: !734, size: 64, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1811, file: !135, line: 2284, baseType: !734, size: 64, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1811, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1811, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1811, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1811, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1811, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1811, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1811, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1811, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1811, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1811, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1811, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1811, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1811, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1811, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1811, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1811, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1811, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1811, file: !135, line: 2306, baseType: !1315, size: 32, offset: 544)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1811, file: !135, line: 2307, baseType: !734, size: 64, offset: 576)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1811, file: !135, line: 2308, baseType: !734, size: 64, offset: 640)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1811, file: !135, line: 2314, baseType: !1839, size: 64, offset: 704)
!1839 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1840)
!1840 = !{!1841, !1842, !1843}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1839, file: !135, line: 2310, baseType: !392, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1839, file: !135, line: 2311, baseType: !732, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1839, file: !135, line: 2312, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1811, file: !135, line: 2315, baseType: !734, size: 64, offset: 768)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1811, file: !135, line: 2316, baseType: !734, size: 64, offset: 832)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1811, file: !135, line: 2317, baseType: !734, size: 64, offset: 896)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1811, file: !135, line: 2318, baseType: !734, size: 64, offset: 960)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1811, file: !135, line: 2319, baseType: !734, size: 64, offset: 1024)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1811, file: !135, line: 2320, baseType: !734, size: 64, offset: 1088)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1811, file: !135, line: 2321, baseType: !734, size: 64, offset: 1152)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1811, file: !135, line: 2322, baseType: !734, size: 64, offset: 1216)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1811, file: !135, line: 2324, baseType: !1855, size: 64, offset: 1280)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !737, file: !135, line: 3395, baseType: !1858, size: 320)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1859)
!1859 = !{!1860, !1861, !1862}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1858, file: !135, line: 1470, baseType: !773, size: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1858, file: !135, line: 1471, baseType: !734, size: 64, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1858, file: !135, line: 1472, baseType: !734, size: 64, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !737, file: !135, line: 3396, baseType: !1864, size: 320)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1865)
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1864, file: !135, line: 1483, baseType: !773, size: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1864, file: !135, line: 1484, baseType: !392, size: 32, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1864, file: !135, line: 1485, baseType: !1112, size: 64, offset: 256)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !737, file: !135, line: 3397, baseType: !1870, size: 384)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1870, file: !135, line: 1830, baseType: !773, size: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1870, file: !135, line: 1831, baseType: !859, size: 32, offset: 192)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1870, file: !135, line: 1832, baseType: !734, size: 64, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1870, file: !135, line: 1835, baseType: !1112, size: 64, offset: 320)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !737, file: !135, line: 3398, baseType: !1877, size: 704)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1888}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1877, file: !135, line: 1899, baseType: !773, size: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1877, file: !135, line: 1902, baseType: !734, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1877, file: !135, line: 1905, baseType: !1058, size: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1877, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1877, file: !135, line: 1911, baseType: !1884, size: 64, offset: 384)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1432, line: 117, size: 128, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1885, file: !1432, line: 120, baseType: !1696, size: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1877, file: !135, line: 1914, baseType: !1100, size: 256, offset: 448)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !737, file: !135, line: 3399, baseType: !1890, size: 704)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1890, file: !135, line: 2009, baseType: !773, size: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1890, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1890, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1890, file: !135, line: 2014, baseType: !859, size: 32, offset: 224)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1890, file: !135, line: 2016, baseType: !734, size: 64, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1890, file: !135, line: 2017, baseType: !1613, size: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1890, file: !135, line: 2019, baseType: !734, size: 64, offset: 384)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1890, file: !135, line: 2020, baseType: !734, size: 64, offset: 448)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1890, file: !135, line: 2021, baseType: !734, size: 64, offset: 512)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1890, file: !135, line: 2022, baseType: !734, size: 64, offset: 576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1890, file: !135, line: 2023, baseType: !734, size: 64, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !737, file: !135, line: 3400, baseType: !1904, size: 832)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1904, file: !135, line: 2431, baseType: !773, size: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1904, file: !135, line: 2433, baseType: !734, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1904, file: !135, line: 2434, baseType: !734, size: 64, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1904, file: !135, line: 2435, baseType: !734, size: 64, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1904, file: !135, line: 2436, baseType: !734, size: 64, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1904, file: !135, line: 2437, baseType: !1613, size: 64, offset: 448)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1904, file: !135, line: 2438, baseType: !734, size: 64, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1904, file: !135, line: 2440, baseType: !734, size: 64, offset: 576)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1904, file: !135, line: 2441, baseType: !734, size: 64, offset: 640)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1904, file: !135, line: 2443, baseType: !1916, size: 128, offset: 704)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1917, file: !135, line: 182, baseType: !1618, size: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !737, file: !135, line: 3401, baseType: !1921, size: 320)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1922)
!1922 = !{!1923, !1924, !1931}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1921, file: !135, line: 3329, baseType: !773, size: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1921, file: !135, line: 3330, baseType: !1925, size: 64, offset: 192)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1927)
!1927 = !{!1928, !1929, !1930}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1926, file: !135, line: 3322, baseType: !1925, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1926, file: !135, line: 3323, baseType: !1925, size: 64, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1926, file: !135, line: 3324, baseType: !734, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1921, file: !135, line: 3331, baseType: !1925, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !737, file: !135, line: 3402, baseType: !1933, size: 256)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1933, file: !135, line: 1541, baseType: !773, size: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1933, file: !135, line: 1542, baseType: !1937, size: 64, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1940)
!1940 = !{!1941}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1939, file: !135, line: 1538, baseType: !1942, size: 192)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1944)
!1944 = !{!1945, !1946, !1947}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1943, file: !135, line: 1537, baseType: !7, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1943, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1943, file: !135, line: 1537, baseType: !1948, size: 128, offset: 64)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1949, size: 128, elements: !833)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1950, file: !135, line: 1533, baseType: !734, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1950, file: !135, line: 1534, baseType: !734, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !737, file: !135, line: 3403, baseType: !1955, size: 512)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960, !1966, !1967, !1968}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1955, file: !135, line: 1939, baseType: !773, size: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1955, file: !135, line: 1940, baseType: !859, size: 32, offset: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1955, file: !135, line: 1941, baseType: !352, size: 32, offset: 224)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1955, file: !135, line: 1946, baseType: !1961, size: 32, offset: 256)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1962)
!1962 = !{!1963, !1964, !1965}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1961, file: !135, line: 1943, baseType: !370, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1961, file: !135, line: 1944, baseType: !377, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1961, file: !135, line: 1945, baseType: !134, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1955, file: !135, line: 1950, baseType: !1048, size: 64, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1955, file: !135, line: 1951, baseType: !1048, size: 64, offset: 384)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1955, file: !135, line: 1953, baseType: !1112, size: 64, offset: 448)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !737, file: !135, line: 3404, baseType: !1970, size: 1664)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1970, file: !135, line: 3338, baseType: !773, size: 192)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1970, file: !135, line: 3341, baseType: !1974, size: 1472, offset: 192)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1975, line: 410, size: 1472, elements: !1976)
!1975 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1974, file: !1975, line: 412, baseType: !392, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1974, file: !1975, line: 413, baseType: !392, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1974, file: !1975, line: 414, baseType: !392, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1974, file: !1975, line: 415, baseType: !392, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1974, file: !1975, line: 416, baseType: !392, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1974, file: !1975, line: 417, baseType: !392, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1974, file: !1975, line: 418, baseType: !727, size: 8, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1974, file: !1975, line: 419, baseType: !727, size: 8, offset: 200)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1974, file: !1975, line: 420, baseType: !1986, size: 8, offset: 208)
!1986 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1974, file: !1975, line: 421, baseType: !1986, size: 8, offset: 216)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1974, file: !1975, line: 422, baseType: !1986, size: 8, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1974, file: !1975, line: 423, baseType: !1986, size: 8, offset: 232)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1974, file: !1975, line: 424, baseType: !1986, size: 8, offset: 240)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1974, file: !1975, line: 425, baseType: !1986, size: 8, offset: 248)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1974, file: !1975, line: 426, baseType: !1986, size: 8, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1974, file: !1975, line: 427, baseType: !1986, size: 8, offset: 264)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1974, file: !1975, line: 428, baseType: !1986, size: 8, offset: 272)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1974, file: !1975, line: 429, baseType: !1986, size: 8, offset: 280)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1974, file: !1975, line: 430, baseType: !1986, size: 8, offset: 288)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1974, file: !1975, line: 431, baseType: !1986, size: 8, offset: 296)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1974, file: !1975, line: 432, baseType: !1986, size: 8, offset: 304)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1974, file: !1975, line: 433, baseType: !1986, size: 8, offset: 312)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1974, file: !1975, line: 434, baseType: !1986, size: 8, offset: 320)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1974, file: !1975, line: 435, baseType: !1986, size: 8, offset: 328)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1974, file: !1975, line: 436, baseType: !1986, size: 8, offset: 336)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1974, file: !1975, line: 437, baseType: !1986, size: 8, offset: 344)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1974, file: !1975, line: 438, baseType: !1986, size: 8, offset: 352)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1974, file: !1975, line: 439, baseType: !1986, size: 8, offset: 360)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1974, file: !1975, line: 440, baseType: !1986, size: 8, offset: 368)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1974, file: !1975, line: 441, baseType: !1986, size: 8, offset: 376)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1974, file: !1975, line: 442, baseType: !1986, size: 8, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1974, file: !1975, line: 443, baseType: !1986, size: 8, offset: 392)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1974, file: !1975, line: 444, baseType: !1986, size: 8, offset: 400)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1974, file: !1975, line: 445, baseType: !1986, size: 8, offset: 408)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1974, file: !1975, line: 446, baseType: !1986, size: 8, offset: 416)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1974, file: !1975, line: 447, baseType: !1986, size: 8, offset: 424)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1974, file: !1975, line: 448, baseType: !1986, size: 8, offset: 432)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1974, file: !1975, line: 449, baseType: !1986, size: 8, offset: 440)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1974, file: !1975, line: 450, baseType: !1986, size: 8, offset: 448)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1974, file: !1975, line: 451, baseType: !1986, size: 8, offset: 456)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1974, file: !1975, line: 452, baseType: !1986, size: 8, offset: 464)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1974, file: !1975, line: 453, baseType: !1986, size: 8, offset: 472)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1974, file: !1975, line: 454, baseType: !1986, size: 8, offset: 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1974, file: !1975, line: 455, baseType: !1986, size: 8, offset: 488)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1974, file: !1975, line: 456, baseType: !1986, size: 8, offset: 496)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1974, file: !1975, line: 457, baseType: !1986, size: 8, offset: 504)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1974, file: !1975, line: 458, baseType: !1986, size: 8, offset: 512)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1974, file: !1975, line: 459, baseType: !1986, size: 8, offset: 520)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1974, file: !1975, line: 460, baseType: !1986, size: 8, offset: 528)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1974, file: !1975, line: 461, baseType: !1986, size: 8, offset: 536)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1974, file: !1975, line: 462, baseType: !1986, size: 8, offset: 544)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1974, file: !1975, line: 463, baseType: !1986, size: 8, offset: 552)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1974, file: !1975, line: 464, baseType: !1986, size: 8, offset: 560)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1974, file: !1975, line: 465, baseType: !1986, size: 8, offset: 568)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1974, file: !1975, line: 466, baseType: !1986, size: 8, offset: 576)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1974, file: !1975, line: 467, baseType: !1986, size: 8, offset: 584)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1974, file: !1975, line: 468, baseType: !1986, size: 8, offset: 592)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1974, file: !1975, line: 469, baseType: !1986, size: 8, offset: 600)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1974, file: !1975, line: 470, baseType: !1986, size: 8, offset: 608)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1974, file: !1975, line: 471, baseType: !1986, size: 8, offset: 616)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1974, file: !1975, line: 472, baseType: !1986, size: 8, offset: 624)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1974, file: !1975, line: 473, baseType: !1986, size: 8, offset: 632)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1974, file: !1975, line: 474, baseType: !1986, size: 8, offset: 640)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1974, file: !1975, line: 475, baseType: !1986, size: 8, offset: 648)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1974, file: !1975, line: 476, baseType: !1986, size: 8, offset: 656)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1974, file: !1975, line: 477, baseType: !1986, size: 8, offset: 664)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1974, file: !1975, line: 478, baseType: !1986, size: 8, offset: 672)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1974, file: !1975, line: 479, baseType: !1986, size: 8, offset: 680)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1974, file: !1975, line: 480, baseType: !1986, size: 8, offset: 688)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1974, file: !1975, line: 481, baseType: !1986, size: 8, offset: 696)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1974, file: !1975, line: 482, baseType: !1986, size: 8, offset: 704)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1974, file: !1975, line: 483, baseType: !1986, size: 8, offset: 712)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1974, file: !1975, line: 484, baseType: !1986, size: 8, offset: 720)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1974, file: !1975, line: 485, baseType: !1986, size: 8, offset: 728)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1974, file: !1975, line: 486, baseType: !1986, size: 8, offset: 736)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1974, file: !1975, line: 487, baseType: !1986, size: 8, offset: 744)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1974, file: !1975, line: 488, baseType: !1986, size: 8, offset: 752)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1974, file: !1975, line: 489, baseType: !1986, size: 8, offset: 760)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1974, file: !1975, line: 490, baseType: !1986, size: 8, offset: 768)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1974, file: !1975, line: 491, baseType: !1986, size: 8, offset: 776)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1974, file: !1975, line: 492, baseType: !1986, size: 8, offset: 784)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1974, file: !1975, line: 493, baseType: !1986, size: 8, offset: 792)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1974, file: !1975, line: 494, baseType: !1986, size: 8, offset: 800)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1974, file: !1975, line: 495, baseType: !1986, size: 8, offset: 808)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1974, file: !1975, line: 496, baseType: !1986, size: 8, offset: 816)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1974, file: !1975, line: 497, baseType: !1986, size: 8, offset: 824)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1974, file: !1975, line: 498, baseType: !1986, size: 8, offset: 832)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1974, file: !1975, line: 499, baseType: !1986, size: 8, offset: 840)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1974, file: !1975, line: 500, baseType: !1986, size: 8, offset: 848)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1974, file: !1975, line: 501, baseType: !1986, size: 8, offset: 856)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1974, file: !1975, line: 502, baseType: !1986, size: 8, offset: 864)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1974, file: !1975, line: 503, baseType: !1986, size: 8, offset: 872)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1974, file: !1975, line: 504, baseType: !1986, size: 8, offset: 880)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1974, file: !1975, line: 505, baseType: !1986, size: 8, offset: 888)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1974, file: !1975, line: 506, baseType: !1986, size: 8, offset: 896)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1974, file: !1975, line: 507, baseType: !1986, size: 8, offset: 904)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1974, file: !1975, line: 508, baseType: !1986, size: 8, offset: 912)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1974, file: !1975, line: 509, baseType: !1986, size: 8, offset: 920)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1974, file: !1975, line: 510, baseType: !1986, size: 8, offset: 928)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1974, file: !1975, line: 511, baseType: !1986, size: 8, offset: 936)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1974, file: !1975, line: 512, baseType: !1986, size: 8, offset: 944)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1974, file: !1975, line: 513, baseType: !1986, size: 8, offset: 952)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1974, file: !1975, line: 514, baseType: !1986, size: 8, offset: 960)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1974, file: !1975, line: 515, baseType: !1986, size: 8, offset: 968)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1974, file: !1975, line: 516, baseType: !1986, size: 8, offset: 976)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1974, file: !1975, line: 517, baseType: !1986, size: 8, offset: 984)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1974, file: !1975, line: 518, baseType: !1986, size: 8, offset: 992)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1974, file: !1975, line: 519, baseType: !1986, size: 8, offset: 1000)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1974, file: !1975, line: 520, baseType: !1986, size: 8, offset: 1008)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1974, file: !1975, line: 521, baseType: !1986, size: 8, offset: 1016)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1974, file: !1975, line: 522, baseType: !1986, size: 8, offset: 1024)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1974, file: !1975, line: 523, baseType: !1986, size: 8, offset: 1032)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1974, file: !1975, line: 524, baseType: !1986, size: 8, offset: 1040)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1974, file: !1975, line: 525, baseType: !1986, size: 8, offset: 1048)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1974, file: !1975, line: 526, baseType: !1986, size: 8, offset: 1056)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1974, file: !1975, line: 527, baseType: !1986, size: 8, offset: 1064)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1974, file: !1975, line: 528, baseType: !1986, size: 8, offset: 1072)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1974, file: !1975, line: 529, baseType: !1986, size: 8, offset: 1080)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1974, file: !1975, line: 530, baseType: !1986, size: 8, offset: 1088)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1974, file: !1975, line: 531, baseType: !1986, size: 8, offset: 1096)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1974, file: !1975, line: 532, baseType: !1986, size: 8, offset: 1104)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1974, file: !1975, line: 533, baseType: !1986, size: 8, offset: 1112)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1974, file: !1975, line: 534, baseType: !1986, size: 8, offset: 1120)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1974, file: !1975, line: 535, baseType: !1986, size: 8, offset: 1128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1974, file: !1975, line: 536, baseType: !1986, size: 8, offset: 1136)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1974, file: !1975, line: 537, baseType: !1986, size: 8, offset: 1144)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1974, file: !1975, line: 538, baseType: !1986, size: 8, offset: 1152)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1974, file: !1975, line: 539, baseType: !1986, size: 8, offset: 1160)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1974, file: !1975, line: 540, baseType: !1986, size: 8, offset: 1168)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1974, file: !1975, line: 541, baseType: !1986, size: 8, offset: 1176)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1974, file: !1975, line: 542, baseType: !1986, size: 8, offset: 1184)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1974, file: !1975, line: 543, baseType: !1986, size: 8, offset: 1192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1974, file: !1975, line: 544, baseType: !1986, size: 8, offset: 1200)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1974, file: !1975, line: 545, baseType: !1986, size: 8, offset: 1208)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1974, file: !1975, line: 546, baseType: !1986, size: 8, offset: 1216)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1974, file: !1975, line: 547, baseType: !1986, size: 8, offset: 1224)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1974, file: !1975, line: 548, baseType: !1986, size: 8, offset: 1232)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1974, file: !1975, line: 549, baseType: !1986, size: 8, offset: 1240)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1974, file: !1975, line: 550, baseType: !1986, size: 8, offset: 1248)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1974, file: !1975, line: 551, baseType: !1986, size: 8, offset: 1256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1974, file: !1975, line: 552, baseType: !1986, size: 8, offset: 1264)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1974, file: !1975, line: 553, baseType: !1986, size: 8, offset: 1272)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1974, file: !1975, line: 554, baseType: !1986, size: 8, offset: 1280)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1974, file: !1975, line: 555, baseType: !1986, size: 8, offset: 1288)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1974, file: !1975, line: 556, baseType: !1986, size: 8, offset: 1296)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1974, file: !1975, line: 557, baseType: !1986, size: 8, offset: 1304)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1974, file: !1975, line: 558, baseType: !1986, size: 8, offset: 1312)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1974, file: !1975, line: 559, baseType: !1986, size: 8, offset: 1320)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1974, file: !1975, line: 560, baseType: !1986, size: 8, offset: 1328)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1974, file: !1975, line: 561, baseType: !1986, size: 8, offset: 1336)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1974, file: !1975, line: 562, baseType: !1986, size: 8, offset: 1344)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1974, file: !1975, line: 563, baseType: !1986, size: 8, offset: 1352)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1974, file: !1975, line: 564, baseType: !1986, size: 8, offset: 1360)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1974, file: !1975, line: 565, baseType: !1986, size: 8, offset: 1368)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1974, file: !1975, line: 566, baseType: !1986, size: 8, offset: 1376)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1974, file: !1975, line: 567, baseType: !1986, size: 8, offset: 1384)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1974, file: !1975, line: 568, baseType: !1986, size: 8, offset: 1392)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1974, file: !1975, line: 569, baseType: !1986, size: 8, offset: 1400)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1974, file: !1975, line: 570, baseType: !1986, size: 8, offset: 1408)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1974, file: !1975, line: 571, baseType: !1986, size: 8, offset: 1416)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1974, file: !1975, line: 572, baseType: !1986, size: 8, offset: 1424)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1974, file: !1975, line: 573, baseType: !1986, size: 8, offset: 1432)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1974, file: !1975, line: 574, baseType: !1986, size: 8, offset: 1440)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !737, file: !135, line: 3405, baseType: !2142, size: 384)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !2143)
!2143 = !{!2144, !2145}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2142, file: !135, line: 3353, baseType: !773, size: 192)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2142, file: !135, line: 3356, baseType: !2146, size: 192, offset: 192)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1975, line: 578, size: 192, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2146, file: !1975, line: 580, baseType: !392, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2146, file: !1975, line: 581, baseType: !392, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2146, file: !1975, line: 582, baseType: !392, size: 32, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2146, file: !1975, line: 583, baseType: !392, size: 32, offset: 96)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2146, file: !1975, line: 584, baseType: !727, size: 8, offset: 128)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2146, file: !1975, line: 585, baseType: !727, size: 8, offset: 136)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2146, file: !1975, line: 586, baseType: !727, size: 8, offset: 144)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2146, file: !1975, line: 587, baseType: !727, size: 8, offset: 152)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2146, file: !1975, line: 588, baseType: !727, size: 8, offset: 160)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2146, file: !1975, line: 589, baseType: !727, size: 8, offset: 168)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2146, file: !1975, line: 590, baseType: !727, size: 8, offset: 176)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !2162, line: 62, baseType: !2163)
!2162 = !DIFile(filename: "./include/splay-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !2162, line: 41, baseType: !788)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "elt_t", file: !3, line: 104, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_temp_hash_elt", file: !3, line: 100, size: 128, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2167, file: !3, line: 102, baseType: !734, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2167, file: !3, line: 103, baseType: !734, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !735, line: 59, baseType: !2159)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !2179)
!2179 = !{!2180}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2178, file: !135, line: 184, baseType: !1618, size: 128)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimplify_init_ctor_preeval_data", file: !3, line: 3199, size: 128, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "lhs_base_decl", scope: !2182, file: !3, line: 3203, baseType: !734, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "lhs_alias_set", scope: !2182, file: !3, line: 3206, baseType: !1315, size: 32, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !391, line: 34, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !391, line: 34, size: 128, elements: !2189)
!2189 = !{!2190}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2188, file: !391, line: 34, baseType: !1686, size: 128)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimplify_omp_ctx", file: !3, line: 83, size: 320, elements: !2193)
!2193 = !{!2194, !2195, !2233, !2236, !2237, !2238}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "outer_context", scope: !2192, file: !3, line: 85, baseType: !2191, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !2192, file: !3, line: 86, baseType: !2196, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !2162, line: 128, baseType: !2197)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !2162, line: 109, size: 448, elements: !2199)
!2199 = !{!2200, !2210, !2215, !2220, !2225, !2230, !2232}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2198, file: !2162, line: 111, baseType: !2201, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !2162, line: 66, baseType: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !2162, line: 96, size: 256, elements: !2204)
!2204 = !{!2205, !2206, !2208, !2209}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2203, file: !2162, line: 98, baseType: !2161, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2203, file: !2162, line: 101, baseType: !2207, size: 64, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !2162, line: 63, baseType: !2163)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2203, file: !2162, line: 104, baseType: !2201, size: 64, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2203, file: !2162, line: 105, baseType: !2201, size: 64, offset: 192)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !2198, file: !2162, line: 114, baseType: !2211, size: 64, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !2162, line: 70, baseType: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!392, !2161, !2161}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !2198, file: !2162, line: 117, baseType: !2216, size: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !2162, line: 74, baseType: !2217)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{null, !2161}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !2198, file: !2162, line: 120, baseType: !2221, size: 64, offset: 192)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !2162, line: 78, baseType: !2222)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !2207}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !2198, file: !2162, line: 123, baseType: !2226, size: 64, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !2162, line: 87, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{!731, !392, !731}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !2198, file: !2162, line: 124, baseType: !2231, size: 64, offset: 320)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !2162, line: 93, baseType: !1608)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !2198, file: !2162, line: 125, baseType: !731, size: 64, offset: 384)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "privatized_types", scope: !2192, file: !3, line: 87, baseType: !2234, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !135, line: 5199, flags: DIFlagFwdDecl)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2192, file: !3, line: 88, baseType: !859, size: 32, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2192, file: !3, line: 89, baseType: !370, size: 32, offset: 224)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !2192, file: !3, line: 90, baseType: !384, size: 32, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1060)
!2241 = !{!2242, !2256, !0, !2259, !2261, !2263}
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_gimplify_h", scope: !2, file: !2244, line: 24, type: !2245, isLocal: false, isDefinition: true)
!2244 = !DIFile(filename: "./gt-gimplify.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2246, size: 320, elements: !833)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2248, line: 69, size: 320, elements: !2249)
!2248 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2249 = !{!2250, !2251, !2252, !2253, !2255}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2247, file: !2248, line: 70, baseType: !731, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2247, file: !2248, line: 71, baseType: !1204, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2247, file: !2248, line: 72, baseType: !1204, size: 64, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2247, file: !2248, line: 73, baseType: !2254, size: 64, offset: 192)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2248, line: 65, baseType: !1583)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2247, file: !2248, line: 74, baseType: !2254, size: 64, offset: 256)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_gimplify_h", scope: !2, file: !2244, line: 28, type: !2258, isLocal: false, isDefinition: true)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2246, size: 640, elements: !977)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "gimplify_omp_ctxp", scope: !2, file: !3, line: 94, type: !2191, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "tmp_var_id_num", scope: !2, file: !3, line: 436, type: !7, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "nonlocal_vlas", scope: !2, file: !3, line: 1799, type: !2234, isLocal: true, isDefinition: true)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimplify_ctx", file: !391, line: 980, size: 576, elements: !2267)
!2267 = !{!2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "prev_context", scope: !2266, file: !391, line: 982, baseType: !2265, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "bind_expr_stack", scope: !2266, file: !391, line: 984, baseType: !2186, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "temps", scope: !2266, file: !391, line: 985, baseType: !734, size: 64, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "conditional_cleanups", scope: !2266, file: !391, line: 986, baseType: !1048, size: 64, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "exit_label", scope: !2266, file: !391, line: 987, baseType: !734, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "return_temp", scope: !2266, file: !391, line: 988, baseType: !734, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "case_labels", scope: !2266, file: !391, line: 990, baseType: !2176, size: 64, offset: 384)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "temp_htab", scope: !2266, file: !391, line: 992, baseType: !1565, size: 64, offset: 448)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !2266, file: !391, line: 994, baseType: !392, size: 32, offset: 512)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "save_stack", scope: !2266, file: !391, line: 995, baseType: !727, size: 8, offset: 544)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "into_ssa", scope: !2266, file: !391, line: 996, baseType: !727, size: 8, offset: 552)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rhs_cond_expr", scope: !2266, file: !391, line: 997, baseType: !727, size: 8, offset: 560)
!2280 = !{i32 2, !"Dwarf Version", i32 4}
!2281 = !{i32 2, !"Debug Info Version", i32 3}
!2282 = !{i32 1, !"wchar_size", i32 4}
!2283 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2284 = distinct !DISubprogram(name: "vprintf", scope: !2285, file: !2285, line: 39, type: !2286, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2285 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!392, !2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !732)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2290, file: !3, baseType: !7, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2290, file: !3, baseType: !7, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2290, file: !3, baseType: !731, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2290, file: !3, baseType: !731, size: 64, offset: 128)
!2296 = !{!2297, !2298}
!2297 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2284, file: !2285, line: 39, type: !2288)
!2298 = !DILocalVariable(name: "__arg", arg: 2, scope: !2284, file: !2285, line: 39, type: !2289)
!2299 = !DILocation(line: 0, scope: !2284)
!2300 = !DILocation(line: 41, column: 20, scope: !2284)
!2301 = !DILocation(line: 41, column: 10, scope: !2284)
!2302 = !DILocation(line: 41, column: 3, scope: !2284)
!2303 = distinct !DISubprogram(name: "getchar", scope: !2285, file: !2285, line: 47, type: !2304, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{!392}
!2306 = !{}
!2307 = !DILocation(line: 49, column: 16, scope: !2303)
!2308 = !DILocation(line: 49, column: 10, scope: !2303)
!2309 = !DILocation(line: 49, column: 3, scope: !2303)
!2310 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2285, file: !2285, line: 56, type: !2311, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2364)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!392, !2313}
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2315, line: 7, baseType: !2316)
!2315 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2317, line: 49, size: 1728, elements: !2318)
!2317 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2334, !2336, !2337, !2338, !2341, !2343, !2344, !2345, !2348, !2350, !2353, !2356, !2357, !2358, !2359, !2360}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2316, file: !2317, line: 51, baseType: !392, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2316, file: !2317, line: 54, baseType: !729, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2316, file: !2317, line: 55, baseType: !729, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2316, file: !2317, line: 56, baseType: !729, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2316, file: !2317, line: 57, baseType: !729, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2316, file: !2317, line: 58, baseType: !729, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2316, file: !2317, line: 59, baseType: !729, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2316, file: !2317, line: 60, baseType: !729, size: 64, offset: 448)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2316, file: !2317, line: 61, baseType: !729, size: 64, offset: 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2316, file: !2317, line: 64, baseType: !729, size: 64, offset: 576)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2316, file: !2317, line: 65, baseType: !729, size: 64, offset: 640)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2316, file: !2317, line: 66, baseType: !729, size: 64, offset: 704)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2316, file: !2317, line: 68, baseType: !2332, size: 64, offset: 768)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2317, line: 36, flags: DIFlagFwdDecl)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2316, file: !2317, line: 70, baseType: !2335, size: 64, offset: 832)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2316, file: !2317, line: 72, baseType: !392, size: 32, offset: 896)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2316, file: !2317, line: 73, baseType: !392, size: 32, offset: 928)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2316, file: !2317, line: 74, baseType: !2339, size: 64, offset: 960)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2340, line: 152, baseType: !790)
!2340 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2316, file: !2317, line: 77, baseType: !2342, size: 16, offset: 1024)
!2342 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2316, file: !2317, line: 78, baseType: !1986, size: 8, offset: 1040)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2316, file: !2317, line: 79, baseType: !832, size: 8, offset: 1048)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2316, file: !2317, line: 81, baseType: !2346, size: 64, offset: 1088)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2317, line: 43, baseType: null)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2316, file: !2317, line: 89, baseType: !2349, size: 64, offset: 1152)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2340, line: 153, baseType: !790)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2316, file: !2317, line: 91, baseType: !2351, size: 64, offset: 1216)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2317, line: 37, flags: DIFlagFwdDecl)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2316, file: !2317, line: 92, baseType: !2354, size: 64, offset: 1280)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2317, line: 38, flags: DIFlagFwdDecl)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2316, file: !2317, line: 93, baseType: !2335, size: 64, offset: 1344)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2316, file: !2317, line: 94, baseType: !731, size: 64, offset: 1408)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2316, file: !2317, line: 95, baseType: !1204, size: 64, offset: 1472)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2316, file: !2317, line: 96, baseType: !392, size: 32, offset: 1536)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2316, file: !2317, line: 98, baseType: !2361, size: 160, offset: 1568)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 160, elements: !2362)
!2362 = !{!2363}
!2363 = !DISubrange(count: 20)
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "__fp", arg: 1, scope: !2310, file: !2285, line: 56, type: !2313)
!2366 = !DILocation(line: 0, scope: !2310)
!2367 = !DILocation(line: 58, column: 10, scope: !2310)
!2368 = !DILocation(line: 58, column: 3, scope: !2310)
!2369 = distinct !DISubprogram(name: "getc_unlocked", scope: !2285, file: !2285, line: 66, type: !2311, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2370)
!2370 = !{!2371}
!2371 = !DILocalVariable(name: "__fp", arg: 1, scope: !2369, file: !2285, line: 66, type: !2313)
!2372 = !DILocation(line: 0, scope: !2369)
!2373 = !DILocation(line: 68, column: 10, scope: !2369)
!2374 = !DILocation(line: 68, column: 3, scope: !2369)
!2375 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2285, file: !2285, line: 73, type: !2304, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2376 = !DILocation(line: 75, column: 10, scope: !2375)
!2377 = !DILocation(line: 75, column: 3, scope: !2375)
!2378 = distinct !DISubprogram(name: "putchar", scope: !2285, file: !2285, line: 82, type: !2379, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!392, !392}
!2381 = !{!2382}
!2382 = !DILocalVariable(name: "__c", arg: 1, scope: !2378, file: !2285, line: 82, type: !392)
!2383 = !DILocation(line: 0, scope: !2378)
!2384 = !DILocation(line: 84, column: 21, scope: !2378)
!2385 = !DILocation(line: 84, column: 10, scope: !2378)
!2386 = !DILocation(line: 84, column: 3, scope: !2378)
!2387 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2285, file: !2285, line: 91, type: !2388, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2390)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!392, !392, !2313}
!2390 = !{!2391, !2392}
!2391 = !DILocalVariable(name: "__c", arg: 1, scope: !2387, file: !2285, line: 91, type: !392)
!2392 = !DILocalVariable(name: "__stream", arg: 2, scope: !2387, file: !2285, line: 91, type: !2313)
!2393 = !DILocation(line: 0, scope: !2387)
!2394 = !DILocation(line: 93, column: 10, scope: !2387)
!2395 = !DILocation(line: 93, column: 3, scope: !2387)
!2396 = distinct !DISubprogram(name: "putc_unlocked", scope: !2285, file: !2285, line: 101, type: !2388, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2397)
!2397 = !{!2398, !2399}
!2398 = !DILocalVariable(name: "__c", arg: 1, scope: !2396, file: !2285, line: 101, type: !392)
!2399 = !DILocalVariable(name: "__stream", arg: 2, scope: !2396, file: !2285, line: 101, type: !2313)
!2400 = !DILocation(line: 0, scope: !2396)
!2401 = !DILocation(line: 103, column: 10, scope: !2396)
!2402 = !DILocation(line: 103, column: 3, scope: !2396)
!2403 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2285, file: !2285, line: 108, type: !2379, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2404)
!2404 = !{!2405}
!2405 = !DILocalVariable(name: "__c", arg: 1, scope: !2403, file: !2285, line: 108, type: !392)
!2406 = !DILocation(line: 0, scope: !2403)
!2407 = !DILocation(line: 110, column: 10, scope: !2403)
!2408 = !DILocation(line: 110, column: 3, scope: !2403)
!2409 = distinct !DISubprogram(name: "getline", scope: !2285, file: !2285, line: 118, type: !2410, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2414)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!2412, !728, !2413, !2313}
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2340, line: 193, baseType: !790)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!2414 = !{!2415, !2416, !2417}
!2415 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2409, file: !2285, line: 118, type: !728)
!2416 = !DILocalVariable(name: "__n", arg: 2, scope: !2409, file: !2285, line: 118, type: !2413)
!2417 = !DILocalVariable(name: "__stream", arg: 3, scope: !2409, file: !2285, line: 118, type: !2313)
!2418 = !DILocation(line: 0, scope: !2409)
!2419 = !DILocation(line: 120, column: 10, scope: !2409)
!2420 = !DILocation(line: 120, column: 3, scope: !2409)
!2421 = distinct !DISubprogram(name: "feof_unlocked", scope: !2285, file: !2285, line: 128, type: !2311, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2422 = !{!2423}
!2423 = !DILocalVariable(name: "__stream", arg: 1, scope: !2421, file: !2285, line: 128, type: !2313)
!2424 = !DILocation(line: 0, scope: !2421)
!2425 = !DILocation(line: 130, column: 10, scope: !2421)
!2426 = !DILocation(line: 130, column: 3, scope: !2421)
!2427 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2285, file: !2285, line: 135, type: !2311, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2428)
!2428 = !{!2429}
!2429 = !DILocalVariable(name: "__stream", arg: 1, scope: !2427, file: !2285, line: 135, type: !2313)
!2430 = !DILocation(line: 0, scope: !2427)
!2431 = !DILocation(line: 137, column: 10, scope: !2427)
!2432 = !DILocation(line: 137, column: 3, scope: !2427)
!2433 = distinct !DISubprogram(name: "tolower", scope: !2434, file: !2434, line: 207, type: !2379, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2435)
!2434 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2435 = !{!2436}
!2436 = !DILocalVariable(name: "__c", arg: 1, scope: !2433, file: !2434, line: 207, type: !392)
!2437 = !DILocation(line: 0, scope: !2433)
!2438 = !DILocation(line: 209, column: 22, scope: !2433)
!2439 = !DILocation(line: 209, column: 39, scope: !2433)
!2440 = !DILocation(line: 209, column: 38, scope: !2433)
!2441 = !DILocation(line: 209, column: 37, scope: !2433)
!2442 = !DILocation(line: 209, column: 10, scope: !2433)
!2443 = !DILocation(line: 209, column: 3, scope: !2433)
!2444 = distinct !DISubprogram(name: "toupper", scope: !2434, file: !2434, line: 213, type: !2379, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2445)
!2445 = !{!2446}
!2446 = !DILocalVariable(name: "__c", arg: 1, scope: !2444, file: !2434, line: 213, type: !392)
!2447 = !DILocation(line: 0, scope: !2444)
!2448 = !DILocation(line: 215, column: 22, scope: !2444)
!2449 = !DILocation(line: 215, column: 39, scope: !2444)
!2450 = !DILocation(line: 215, column: 38, scope: !2444)
!2451 = !DILocation(line: 215, column: 37, scope: !2444)
!2452 = !DILocation(line: 215, column: 10, scope: !2444)
!2453 = !DILocation(line: 215, column: 3, scope: !2444)
!2454 = distinct !DISubprogram(name: "atoi", scope: !2455, file: !2455, line: 361, type: !2456, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2455 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!392, !732}
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2454, file: !2455, line: 361, type: !732)
!2460 = !DILocation(line: 0, scope: !2454)
!2461 = !DILocation(line: 363, column: 16, scope: !2454)
!2462 = !DILocation(line: 363, column: 10, scope: !2454)
!2463 = !DILocation(line: 363, column: 3, scope: !2454)
!2464 = distinct !DISubprogram(name: "atol", scope: !2455, file: !2455, line: 366, type: !2465, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2467)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!790, !732}
!2467 = !{!2468}
!2468 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2464, file: !2455, line: 366, type: !732)
!2469 = !DILocation(line: 0, scope: !2464)
!2470 = !DILocation(line: 368, column: 10, scope: !2464)
!2471 = !DILocation(line: 368, column: 3, scope: !2464)
!2472 = distinct !DISubprogram(name: "atoll", scope: !2455, file: !2455, line: 373, type: !2473, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2476)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!2475, !732}
!2475 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2476 = !{!2477}
!2477 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2472, file: !2455, line: 373, type: !732)
!2478 = !DILocation(line: 0, scope: !2472)
!2479 = !DILocation(line: 375, column: 10, scope: !2472)
!2480 = !DILocation(line: 375, column: 3, scope: !2472)
!2481 = distinct !DISubprogram(name: "bsearch", scope: !2482, file: !2482, line: 20, type: !2483, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2486)
!2482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!731, !1365, !1365, !1204, !1204, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2455, line: 808, baseType: !1578)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496}
!2487 = !DILocalVariable(name: "__key", arg: 1, scope: !2481, file: !2482, line: 20, type: !1365)
!2488 = !DILocalVariable(name: "__base", arg: 2, scope: !2481, file: !2482, line: 20, type: !1365)
!2489 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2481, file: !2482, line: 20, type: !1204)
!2490 = !DILocalVariable(name: "__size", arg: 4, scope: !2481, file: !2482, line: 20, type: !1204)
!2491 = !DILocalVariable(name: "__compar", arg: 5, scope: !2481, file: !2482, line: 21, type: !2485)
!2492 = !DILocalVariable(name: "__l", scope: !2481, file: !2482, line: 23, type: !1204)
!2493 = !DILocalVariable(name: "__u", scope: !2481, file: !2482, line: 23, type: !1204)
!2494 = !DILocalVariable(name: "__idx", scope: !2481, file: !2482, line: 23, type: !1204)
!2495 = !DILocalVariable(name: "__p", scope: !2481, file: !2482, line: 24, type: !1365)
!2496 = !DILocalVariable(name: "__comparison", scope: !2481, file: !2482, line: 25, type: !392)
!2497 = !DILocation(line: 0, scope: !2481)
!2498 = !DILocation(line: 29, column: 3, scope: !2481)
!2499 = !DILocation(line: 27, column: 7, scope: !2481)
!2500 = !DILocation(line: 29, column: 14, scope: !2481)
!2501 = !DILocation(line: 31, column: 20, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2481, file: !2482, line: 30, column: 5)
!2503 = !DILocation(line: 31, column: 27, scope: !2502)
!2504 = !DILocation(line: 32, column: 56, scope: !2502)
!2505 = !DILocation(line: 32, column: 47, scope: !2502)
!2506 = !DILocation(line: 33, column: 22, scope: !2502)
!2507 = !DILocation(line: 34, column: 24, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2502, file: !2482, line: 34, column: 11)
!2509 = !DILocation(line: 34, column: 11, scope: !2502)
!2510 = !DILocation(line: 36, column: 29, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2508, file: !2482, line: 36, column: 16)
!2512 = !DILocation(line: 36, column: 16, scope: !2508)
!2513 = !DILocation(line: 37, column: 14, scope: !2511)
!2514 = distinct !{!2514, !2498, !2515}
!2515 = !DILocation(line: 40, column: 5, scope: !2481)
!2516 = !DILocation(line: 43, column: 1, scope: !2481)
!2517 = distinct !DISubprogram(name: "atof", scope: !2518, file: !2518, line: 25, type: !2519, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2518 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!2521, !732}
!2521 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2522 = !{!2523}
!2523 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2517, file: !2518, line: 25, type: !732)
!2524 = !DILocation(line: 0, scope: !2517)
!2525 = !DILocation(line: 27, column: 10, scope: !2517)
!2526 = !DILocation(line: 27, column: 3, scope: !2517)
!2527 = distinct !DISubprogram(name: "strtoimax", scope: !2528, file: !2528, line: 324, type: !2529, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2535)
!2528 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2531, !2288, !2534, !392}
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2532, line: 101, baseType: !2533)
!2532 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2340, line: 72, baseType: !790)
!2534 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !728)
!2535 = !{!2536, !2537, !2538}
!2536 = !DILocalVariable(name: "nptr", arg: 1, scope: !2527, file: !2528, line: 324, type: !2288)
!2537 = !DILocalVariable(name: "endptr", arg: 2, scope: !2527, file: !2528, line: 324, type: !2534)
!2538 = !DILocalVariable(name: "base", arg: 3, scope: !2527, file: !2528, line: 324, type: !392)
!2539 = !DILocation(line: 0, scope: !2527)
!2540 = !DILocation(line: 327, column: 10, scope: !2527)
!2541 = !DILocation(line: 327, column: 3, scope: !2527)
!2542 = distinct !DISubprogram(name: "strtoumax", scope: !2528, file: !2528, line: 336, type: !2543, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2547)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!2545, !2288, !2534, !392}
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2532, line: 102, baseType: !2546)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2340, line: 73, baseType: !788)
!2547 = !{!2548, !2549, !2550}
!2548 = !DILocalVariable(name: "nptr", arg: 1, scope: !2542, file: !2528, line: 336, type: !2288)
!2549 = !DILocalVariable(name: "endptr", arg: 2, scope: !2542, file: !2528, line: 336, type: !2534)
!2550 = !DILocalVariable(name: "base", arg: 3, scope: !2542, file: !2528, line: 336, type: !392)
!2551 = !DILocation(line: 0, scope: !2542)
!2552 = !DILocation(line: 339, column: 10, scope: !2542)
!2553 = !DILocation(line: 339, column: 3, scope: !2542)
!2554 = distinct !DISubprogram(name: "wcstoimax", scope: !2528, file: !2528, line: 348, type: !2555, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!2531, !2557, !2561, !392}
!2557 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2558)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2528, line: 34, baseType: !392)
!2561 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2562)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2564 = !{!2565, !2566, !2567}
!2565 = !DILocalVariable(name: "nptr", arg: 1, scope: !2554, file: !2528, line: 348, type: !2557)
!2566 = !DILocalVariable(name: "endptr", arg: 2, scope: !2554, file: !2528, line: 348, type: !2561)
!2567 = !DILocalVariable(name: "base", arg: 3, scope: !2554, file: !2528, line: 348, type: !392)
!2568 = !DILocation(line: 0, scope: !2554)
!2569 = !DILocation(line: 351, column: 10, scope: !2554)
!2570 = !DILocation(line: 351, column: 3, scope: !2554)
!2571 = distinct !DISubprogram(name: "wcstoumax", scope: !2528, file: !2528, line: 362, type: !2572, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2574)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!2545, !2557, !2561, !392}
!2574 = !{!2575, !2576, !2577}
!2575 = !DILocalVariable(name: "nptr", arg: 1, scope: !2571, file: !2528, line: 362, type: !2557)
!2576 = !DILocalVariable(name: "endptr", arg: 2, scope: !2571, file: !2528, line: 362, type: !2561)
!2577 = !DILocalVariable(name: "base", arg: 3, scope: !2571, file: !2528, line: 362, type: !392)
!2578 = !DILocation(line: 0, scope: !2571)
!2579 = !DILocation(line: 365, column: 10, scope: !2571)
!2580 = !DILocation(line: 365, column: 3, scope: !2571)
!2581 = distinct !DISubprogram(name: "stat", scope: !2582, file: !2582, line: 453, type: !2583, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2620)
!2582 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!392, !732, !2585}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2587, line: 46, size: 1152, elements: !2588)
!2587 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2588 = !{!2589, !2591, !2593, !2595, !2597, !2599, !2601, !2602, !2603, !2604, !2606, !2608, !2616, !2617, !2618}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2586, file: !2587, line: 48, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2340, line: 145, baseType: !788)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2586, file: !2587, line: 53, baseType: !2592, size: 64, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2340, line: 148, baseType: !788)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2586, file: !2587, line: 61, baseType: !2594, size: 64, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2340, line: 151, baseType: !788)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2586, file: !2587, line: 62, baseType: !2596, size: 32, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2340, line: 150, baseType: !7)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2586, file: !2587, line: 64, baseType: !2598, size: 32, offset: 224)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2340, line: 146, baseType: !7)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2586, file: !2587, line: 65, baseType: !2600, size: 32, offset: 256)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2340, line: 147, baseType: !7)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2586, file: !2587, line: 67, baseType: !392, size: 32, offset: 288)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2586, file: !2587, line: 69, baseType: !2590, size: 64, offset: 320)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2586, file: !2587, line: 74, baseType: !2339, size: 64, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2586, file: !2587, line: 78, baseType: !2605, size: 64, offset: 448)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2340, line: 174, baseType: !790)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2586, file: !2587, line: 80, baseType: !2607, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2340, line: 179, baseType: !790)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2586, file: !2587, line: 91, baseType: !2609, size: 128, offset: 576)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2610, line: 10, size: 128, elements: !2611)
!2610 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2611 = !{!2612, !2614}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2609, file: !2610, line: 12, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2340, line: 160, baseType: !790)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2609, file: !2610, line: 16, baseType: !2615, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2340, line: 196, baseType: !790)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2586, file: !2587, line: 92, baseType: !2609, size: 128, offset: 704)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2586, file: !2587, line: 93, baseType: !2609, size: 128, offset: 832)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2586, file: !2587, line: 106, baseType: !2619, size: 192, offset: 960)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2615, size: 192, elements: !808)
!2620 = !{!2621, !2622}
!2621 = !DILocalVariable(name: "__path", arg: 1, scope: !2581, file: !2582, line: 453, type: !732)
!2622 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2581, file: !2582, line: 453, type: !2585)
!2623 = !DILocation(line: 0, scope: !2581)
!2624 = !DILocation(line: 455, column: 10, scope: !2581)
!2625 = !DILocation(line: 455, column: 3, scope: !2581)
!2626 = distinct !DISubprogram(name: "lstat", scope: !2582, file: !2582, line: 460, type: !2583, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2627)
!2627 = !{!2628, !2629}
!2628 = !DILocalVariable(name: "__path", arg: 1, scope: !2626, file: !2582, line: 460, type: !732)
!2629 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2626, file: !2582, line: 460, type: !2585)
!2630 = !DILocation(line: 0, scope: !2626)
!2631 = !DILocation(line: 462, column: 10, scope: !2626)
!2632 = !DILocation(line: 462, column: 3, scope: !2626)
!2633 = distinct !DISubprogram(name: "fstat", scope: !2582, file: !2582, line: 467, type: !2634, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2636)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!392, !392, !2585}
!2636 = !{!2637, !2638}
!2637 = !DILocalVariable(name: "__fd", arg: 1, scope: !2633, file: !2582, line: 467, type: !392)
!2638 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2633, file: !2582, line: 467, type: !2585)
!2639 = !DILocation(line: 0, scope: !2633)
!2640 = !DILocation(line: 469, column: 10, scope: !2633)
!2641 = !DILocation(line: 469, column: 3, scope: !2633)
!2642 = distinct !DISubprogram(name: "fstatat", scope: !2582, file: !2582, line: 474, type: !2643, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!392, !392, !732, !2585, !392}
!2645 = !{!2646, !2647, !2648, !2649}
!2646 = !DILocalVariable(name: "__fd", arg: 1, scope: !2642, file: !2582, line: 474, type: !392)
!2647 = !DILocalVariable(name: "__filename", arg: 2, scope: !2642, file: !2582, line: 474, type: !732)
!2648 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2642, file: !2582, line: 474, type: !2585)
!2649 = !DILocalVariable(name: "__flag", arg: 4, scope: !2642, file: !2582, line: 474, type: !392)
!2650 = !DILocation(line: 0, scope: !2642)
!2651 = !DILocation(line: 477, column: 10, scope: !2642)
!2652 = !DILocation(line: 477, column: 3, scope: !2642)
!2653 = distinct !DISubprogram(name: "mknod", scope: !2582, file: !2582, line: 483, type: !2654, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2656)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!392, !732, !2596, !2590}
!2656 = !{!2657, !2658, !2659}
!2657 = !DILocalVariable(name: "__path", arg: 1, scope: !2653, file: !2582, line: 483, type: !732)
!2658 = !DILocalVariable(name: "__mode", arg: 2, scope: !2653, file: !2582, line: 483, type: !2596)
!2659 = !DILocalVariable(name: "__dev", arg: 3, scope: !2653, file: !2582, line: 483, type: !2590)
!2660 = !DILocation(line: 0, scope: !2653)
!2661 = !DILocation(line: 485, column: 10, scope: !2653)
!2662 = !DILocation(line: 485, column: 3, scope: !2653)
!2663 = distinct !DISubprogram(name: "mknodat", scope: !2582, file: !2582, line: 491, type: !2664, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2666)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!392, !392, !732, !2596, !2590}
!2666 = !{!2667, !2668, !2669, !2670}
!2667 = !DILocalVariable(name: "__fd", arg: 1, scope: !2663, file: !2582, line: 491, type: !392)
!2668 = !DILocalVariable(name: "__path", arg: 2, scope: !2663, file: !2582, line: 491, type: !732)
!2669 = !DILocalVariable(name: "__mode", arg: 3, scope: !2663, file: !2582, line: 491, type: !2596)
!2670 = !DILocalVariable(name: "__dev", arg: 4, scope: !2663, file: !2582, line: 491, type: !2590)
!2671 = !DILocation(line: 0, scope: !2663)
!2672 = !DILocation(line: 494, column: 10, scope: !2663)
!2673 = !DILocation(line: 494, column: 3, scope: !2663)
!2674 = distinct !DISubprogram(name: "stat64", scope: !2582, file: !2582, line: 502, type: !2675, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2697)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!392, !732, !2677}
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2587, line: 119, size: 1152, elements: !2679)
!2679 = !{!2680, !2681, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2693, !2694, !2695, !2696}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2678, file: !2587, line: 121, baseType: !2590, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2678, file: !2587, line: 123, baseType: !2682, size: 64, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2340, line: 149, baseType: !788)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2678, file: !2587, line: 124, baseType: !2594, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2678, file: !2587, line: 125, baseType: !2596, size: 32, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2678, file: !2587, line: 132, baseType: !2598, size: 32, offset: 224)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2678, file: !2587, line: 133, baseType: !2600, size: 32, offset: 256)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2678, file: !2587, line: 135, baseType: !392, size: 32, offset: 288)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2678, file: !2587, line: 136, baseType: !2590, size: 64, offset: 320)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2678, file: !2587, line: 137, baseType: !2339, size: 64, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2678, file: !2587, line: 143, baseType: !2605, size: 64, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2678, file: !2587, line: 144, baseType: !2692, size: 64, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2340, line: 180, baseType: !790)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2678, file: !2587, line: 152, baseType: !2609, size: 128, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2678, file: !2587, line: 153, baseType: !2609, size: 128, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2678, file: !2587, line: 154, baseType: !2609, size: 128, offset: 832)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2678, file: !2587, line: 164, baseType: !2619, size: 192, offset: 960)
!2697 = !{!2698, !2699}
!2698 = !DILocalVariable(name: "__path", arg: 1, scope: !2674, file: !2582, line: 502, type: !732)
!2699 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2674, file: !2582, line: 502, type: !2677)
!2700 = !DILocation(line: 0, scope: !2674)
!2701 = !DILocation(line: 504, column: 10, scope: !2674)
!2702 = !DILocation(line: 504, column: 3, scope: !2674)
!2703 = distinct !DISubprogram(name: "lstat64", scope: !2582, file: !2582, line: 509, type: !2675, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2704 = !{!2705, !2706}
!2705 = !DILocalVariable(name: "__path", arg: 1, scope: !2703, file: !2582, line: 509, type: !732)
!2706 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2703, file: !2582, line: 509, type: !2677)
!2707 = !DILocation(line: 0, scope: !2703)
!2708 = !DILocation(line: 511, column: 10, scope: !2703)
!2709 = !DILocation(line: 511, column: 3, scope: !2703)
!2710 = distinct !DISubprogram(name: "fstat64", scope: !2582, file: !2582, line: 516, type: !2711, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2713)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!392, !392, !2677}
!2713 = !{!2714, !2715}
!2714 = !DILocalVariable(name: "__fd", arg: 1, scope: !2710, file: !2582, line: 516, type: !392)
!2715 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2710, file: !2582, line: 516, type: !2677)
!2716 = !DILocation(line: 0, scope: !2710)
!2717 = !DILocation(line: 518, column: 10, scope: !2710)
!2718 = !DILocation(line: 518, column: 3, scope: !2710)
!2719 = distinct !DISubprogram(name: "fstatat64", scope: !2582, file: !2582, line: 523, type: !2720, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2722)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!392, !392, !732, !2677, !392}
!2722 = !{!2723, !2724, !2725, !2726}
!2723 = !DILocalVariable(name: "__fd", arg: 1, scope: !2719, file: !2582, line: 523, type: !392)
!2724 = !DILocalVariable(name: "__filename", arg: 2, scope: !2719, file: !2582, line: 523, type: !732)
!2725 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2719, file: !2582, line: 523, type: !2677)
!2726 = !DILocalVariable(name: "__flag", arg: 4, scope: !2719, file: !2582, line: 523, type: !392)
!2727 = !DILocation(line: 0, scope: !2719)
!2728 = !DILocation(line: 526, column: 10, scope: !2719)
!2729 = !DILocation(line: 526, column: 3, scope: !2719)
!2730 = distinct !DISubprogram(name: "mark_addressable", scope: !3, file: !3, line: 112, type: !2731, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2733)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{null, !734}
!2733 = !{!2734}
!2734 = !DILocalVariable(name: "x", arg: 1, scope: !2730, file: !3, line: 112, type: !734)
!2735 = !DILocation(line: 0, scope: !2730)
!2736 = !DILocation(line: 114, column: 3, scope: !2730)
!2737 = !DILocation(line: 114, column: 10, scope: !2730)
!2738 = !DILocation(line: 115, column: 9, scope: !2730)
!2739 = distinct !{!2739, !2736, !2738}
!2740 = !DILocation(line: 116, column: 7, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 116, column: 7)
!2742 = !DILocation(line: 116, column: 21, scope: !2741)
!2743 = !DILocation(line: 117, column: 7, scope: !2741)
!2744 = !DILocation(line: 117, column: 24, scope: !2741)
!2745 = !DILocation(line: 118, column: 7, scope: !2741)
!2746 = !DILocation(line: 118, column: 24, scope: !2741)
!2747 = !DILocation(line: 116, column: 7, scope: !2730)
!2748 = !DILocation(line: 120, column: 24, scope: !2730)
!2749 = !DILocation(line: 121, column: 1, scope: !2730)
!2750 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !2751, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2753)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!727, !2175}
!2753 = !{!2754}
!2754 = !DILocalVariable(name: "t", arg: 1, scope: !2750, file: !135, line: 4551, type: !2175)
!2755 = !DILocation(line: 0, scope: !2750)
!2756 = !DILocation(line: 4553, column: 11, scope: !2750)
!2757 = !DILocation(line: 4553, column: 3, scope: !2750)
!2758 = !DILocation(line: 4565, column: 7, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2750, file: !135, line: 4554, column: 5)
!2760 = !DILocation(line: 0, scope: !2759)
!2761 = !DILocation(line: 4567, column: 1, scope: !2750)
!2762 = distinct !DISubprogram(name: "push_gimplify_context", scope: !3, file: !3, line: 201, type: !2763, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2765)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{null, !2265}
!2765 = !{!2766}
!2766 = !DILocalVariable(name: "c", arg: 1, scope: !2762, file: !3, line: 201, type: !2265)
!2767 = !DILocation(line: 0, scope: !2762)
!2768 = !DILocation(line: 203, column: 11, scope: !2762)
!2769 = !DILocation(line: 203, column: 3, scope: !2762)
!2770 = !DILocation(line: 204, column: 21, scope: !2762)
!2771 = !DILocation(line: 204, column: 19, scope: !2762)
!2772 = !DILocation(line: 205, column: 17, scope: !2762)
!2773 = !DILocation(line: 206, column: 1, scope: !2762)
!2774 = distinct !DISubprogram(name: "pop_gimplify_context", scope: !3, file: !3, line: 215, type: !2775, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2777)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !1058}
!2777 = !{!2778, !2779}
!2778 = !DILocalVariable(name: "body", arg: 1, scope: !2774, file: !3, line: 215, type: !1058)
!2779 = !DILocalVariable(name: "c", scope: !2774, file: !3, line: 217, type: !2265)
!2780 = !DILocation(line: 0, scope: !2774)
!2781 = !DILocation(line: 217, column: 28, scope: !2774)
!2782 = !DILocation(line: 219, column: 3, scope: !2774)
!2783 = !DILocation(line: 221, column: 3, scope: !2774)
!2784 = !DILocation(line: 222, column: 22, scope: !2774)
!2785 = !DILocation(line: 222, column: 17, scope: !2774)
!2786 = !DILocation(line: 224, column: 7, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 224, column: 7)
!2788 = !DILocation(line: 0, scope: !2787)
!2789 = !DILocation(line: 224, column: 7, scope: !2774)
!2790 = !DILocation(line: 225, column: 5, scope: !2787)
!2791 = !DILocation(line: 227, column: 5, scope: !2787)
!2792 = !DILocation(line: 229, column: 10, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 229, column: 7)
!2794 = !DILocation(line: 229, column: 7, scope: !2793)
!2795 = !DILocation(line: 229, column: 7, scope: !2774)
!2796 = !DILocation(line: 230, column: 5, scope: !2793)
!2797 = !DILocation(line: 231, column: 1, scope: !2774)
!2798 = distinct !DISubprogram(name: "VEC_gimple_base_length", scope: !391, file: !391, line: 33, type: !2799, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2803)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!7, !2801}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!2803 = !{!2804}
!2804 = !DILocalVariable(name: "vec_", arg: 1, scope: !2798, file: !391, line: 33, type: !2801)
!2805 = !DILocation(line: 0, scope: !2798)
!2806 = !DILocation(line: 33, column: 1, scope: !2798)
!2807 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !391, file: !391, line: 34, type: !2808, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2811)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{null, !2810}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2811 = !{!2812}
!2812 = !DILocalVariable(name: "vec_", arg: 1, scope: !2807, file: !391, line: 34, type: !2810)
!2813 = !DILocation(line: 0, scope: !2807)
!2814 = !DILocation(line: 34, column: 1, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2807, file: !391, line: 34, column: 1)
!2816 = !DILocation(line: 34, column: 1, scope: !2807)
!2817 = distinct !DISubprogram(name: "declare_vars", scope: !3, file: !3, line: 664, type: !2818, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2820)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{null, !734, !1058, !727}
!2820 = !{!2821, !2822, !2823, !2824, !2825, !2828}
!2821 = !DILocalVariable(name: "vars", arg: 1, scope: !2817, file: !3, line: 664, type: !734)
!2822 = !DILocalVariable(name: "scope", arg: 2, scope: !2817, file: !3, line: 664, type: !1058)
!2823 = !DILocalVariable(name: "debug_info", arg: 3, scope: !2817, file: !3, line: 664, type: !727)
!2824 = !DILocalVariable(name: "last", scope: !2817, file: !3, line: 666, type: !734)
!2825 = !DILocalVariable(name: "temps", scope: !2826, file: !3, line: 669, type: !734)
!2826 = distinct !DILexicalBlock(scope: !2827, file: !3, line: 668, column: 5)
!2827 = distinct !DILexicalBlock(scope: !2817, file: !3, line: 667, column: 7)
!2828 = !DILocalVariable(name: "block", scope: !2826, file: !3, line: 669, type: !734)
!2829 = !DILocation(line: 0, scope: !2817)
!2830 = !DILocation(line: 667, column: 7, scope: !2827)
!2831 = !DILocation(line: 667, column: 7, scope: !2817)
!2832 = !DILocation(line: 671, column: 7, scope: !2826)
!2833 = !DILocation(line: 673, column: 15, scope: !2826)
!2834 = !DILocation(line: 0, scope: !2826)
!2835 = !DILocation(line: 675, column: 15, scope: !2826)
!2836 = !DILocation(line: 676, column: 7, scope: !2826)
!2837 = !DILocation(line: 677, column: 12, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 677, column: 11)
!2839 = !DILocation(line: 677, column: 22, scope: !2838)
!2840 = !DILocation(line: 677, column: 18, scope: !2838)
!2841 = !DILocation(line: 679, column: 24, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 678, column: 2)
!2843 = !DILocation(line: 679, column: 4, scope: !2842)
!2844 = !DILocation(line: 679, column: 22, scope: !2842)
!2845 = !DILocation(line: 680, column: 4, scope: !2842)
!2846 = !DILocation(line: 681, column: 2, scope: !2842)
!2847 = !DILocation(line: 688, column: 8, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 688, column: 8)
!2849 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 683, column: 2)
!2850 = !DILocation(line: 688, column: 8, scope: !2849)
!2851 = !DILocation(line: 689, column: 27, scope: !2848)
!2852 = !DILocation(line: 689, column: 25, scope: !2848)
!2853 = !DILocation(line: 689, column: 6, scope: !2848)
!2854 = !DILocation(line: 693, column: 24, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2848, file: !3, line: 691, column: 6)
!2856 = !DILocation(line: 693, column: 15, scope: !2855)
!2857 = !DILocation(line: 692, column: 8, scope: !2855)
!2858 = !DILocation(line: 694, column: 27, scope: !2855)
!2859 = !DILocation(line: 698, column: 1, scope: !2817)
!2860 = distinct !DISubprogram(name: "gimple_current_bind_expr", scope: !3, file: !3, line: 248, type: !2861, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!1058}
!2863 = !DILocation(line: 250, column: 10, scope: !2860)
!2864 = !DILocation(line: 250, column: 3, scope: !2860)
!2865 = distinct !DISubprogram(name: "VEC_gimple_base_last", scope: !391, file: !391, line: 33, type: !2866, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2868)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!1058, !2801}
!2868 = !{!2869}
!2869 = !DILocalVariable(name: "vec_", arg: 1, scope: !2865, file: !391, line: 33, type: !2801)
!2870 = !DILocation(line: 0, scope: !2865)
!2871 = !DILocation(line: 33, column: 1, scope: !2865)
!2872 = distinct !DISubprogram(name: "gimple_bind_expr_stack", scope: !3, file: !3, line: 256, type: !2873, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!2186}
!2875 = !DILocation(line: 258, column: 10, scope: !2872)
!2876 = !DILocation(line: 258, column: 25, scope: !2872)
!2877 = !DILocation(line: 258, column: 3, scope: !2872)
!2878 = distinct !DISubprogram(name: "append_to_statement_list", scope: !3, file: !3, line: 369, type: !2879, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2881)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{null, !734, !1093}
!2881 = !{!2882, !2883}
!2882 = !DILocalVariable(name: "t", arg: 1, scope: !2878, file: !3, line: 369, type: !734)
!2883 = !DILocalVariable(name: "list_p", arg: 2, scope: !2878, file: !3, line: 369, type: !1093)
!2884 = !DILocation(line: 0, scope: !2878)
!2885 = !DILocation(line: 371, column: 7, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 371, column: 7)
!2887 = !DILocation(line: 371, column: 9, scope: !2886)
!2888 = !DILocation(line: 371, column: 12, scope: !2886)
!2889 = !DILocation(line: 371, column: 7, scope: !2878)
!2890 = !DILocation(line: 372, column: 5, scope: !2886)
!2891 = !DILocation(line: 373, column: 1, scope: !2878)
!2892 = distinct !DISubprogram(name: "append_to_statement_list_1", scope: !3, file: !3, line: 346, type: !2879, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2893)
!2893 = !{!2894, !2895, !2896, !2897}
!2894 = !DILocalVariable(name: "t", arg: 1, scope: !2892, file: !3, line: 346, type: !734)
!2895 = !DILocalVariable(name: "list_p", arg: 2, scope: !2892, file: !3, line: 346, type: !1093)
!2896 = !DILocalVariable(name: "list", scope: !2892, file: !3, line: 348, type: !734)
!2897 = !DILocalVariable(name: "i", scope: !2892, file: !3, line: 349, type: !2898)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_stmt_iterator", file: !2899, line: 35, baseType: !2900)
!2899 = !DIFile(filename: "./tree-iterator.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2899, line: 32, size: 128, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2900, file: !2899, line: 33, baseType: !1925, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2900, file: !2899, line: 34, baseType: !734, size: 64, offset: 64)
!2904 = !DILocation(line: 0, scope: !2892)
!2905 = !DILocation(line: 348, column: 15, scope: !2892)
!2906 = !DILocation(line: 349, column: 3, scope: !2892)
!2907 = !DILocation(line: 351, column: 8, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 351, column: 7)
!2909 = !DILocation(line: 351, column: 7, scope: !2892)
!2910 = !DILocation(line: 353, column: 11, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 353, column: 11)
!2912 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 352, column: 5)
!2913 = !DILocation(line: 353, column: 13, scope: !2911)
!2914 = !DILocation(line: 353, column: 16, scope: !2911)
!2915 = !DILocation(line: 353, column: 30, scope: !2911)
!2916 = !DILocation(line: 353, column: 11, scope: !2912)
!2917 = !DILocation(line: 355, column: 12, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 354, column: 2)
!2919 = !DILocation(line: 356, column: 4, scope: !2918)
!2920 = !DILocation(line: 358, column: 24, scope: !2912)
!2921 = !DILocation(line: 358, column: 15, scope: !2912)
!2922 = !DILocation(line: 359, column: 5, scope: !2912)
!2923 = !DILocation(line: 361, column: 7, scope: !2892)
!2924 = !DILocation(line: 362, column: 3, scope: !2892)
!2925 = !DILocation(line: 363, column: 1, scope: !2892)
!2926 = distinct !DISubprogram(name: "append_to_statement_list_force", scope: !3, file: !3, line: 378, type: !2879, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2927)
!2927 = !{!2928, !2929}
!2928 = !DILocalVariable(name: "t", arg: 1, scope: !2926, file: !3, line: 378, type: !734)
!2929 = !DILocalVariable(name: "list_p", arg: 2, scope: !2926, file: !3, line: 378, type: !1093)
!2930 = !DILocation(line: 0, scope: !2926)
!2931 = !DILocation(line: 380, column: 9, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 380, column: 7)
!2933 = !DILocation(line: 380, column: 7, scope: !2926)
!2934 = !DILocation(line: 381, column: 5, scope: !2932)
!2935 = !DILocation(line: 382, column: 1, scope: !2926)
!2936 = distinct !DISubprogram(name: "gimplify_and_add", scope: !3, file: !3, line: 389, type: !2937, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2940)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !734, !2939}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "t", arg: 1, scope: !2936, file: !3, line: 389, type: !734)
!2942 = !DILocalVariable(name: "seq_p", arg: 2, scope: !2936, file: !3, line: 389, type: !2939)
!2943 = !DILocation(line: 0, scope: !2936)
!2944 = !DILocation(line: 391, column: 3, scope: !2936)
!2945 = !DILocation(line: 392, column: 1, scope: !2936)
!2946 = distinct !DISubprogram(name: "gimplify_stmt", scope: !3, file: !3, line: 5261, type: !2947, scopeLine: 5262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2949)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!727, !1093, !2939}
!2949 = !{!2950, !2951, !2952}
!2950 = !DILocalVariable(name: "stmt_p", arg: 1, scope: !2946, file: !3, line: 5261, type: !1093)
!2951 = !DILocalVariable(name: "seq_p", arg: 2, scope: !2946, file: !3, line: 5261, type: !2939)
!2952 = !DILocalVariable(name: "last", scope: !2946, file: !3, line: 5263, type: !1053)
!2953 = !DILocation(line: 0, scope: !2946)
!2954 = !DILocation(line: 5265, column: 8, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 5265, column: 7)
!2956 = !DILocation(line: 5265, column: 7, scope: !2946)
!2957 = !DILocation(line: 5266, column: 14, scope: !2955)
!2958 = !DILocation(line: 5266, column: 12, scope: !2955)
!2959 = !DILocation(line: 5266, column: 5, scope: !2955)
!2960 = !DILocation(line: 5268, column: 27, scope: !2946)
!2961 = !DILocation(line: 5268, column: 10, scope: !2946)
!2962 = !DILocation(line: 5269, column: 3, scope: !2946)
!2963 = !DILocation(line: 5270, column: 35, scope: !2946)
!2964 = !DILocation(line: 5270, column: 18, scope: !2946)
!2965 = !DILocation(line: 5270, column: 15, scope: !2946)
!2966 = !DILocation(line: 5270, column: 10, scope: !2946)
!2967 = !DILocation(line: 5270, column: 3, scope: !2946)
!2968 = distinct !DISubprogram(name: "create_tmp_var_name", scope: !3, file: !3, line: 439, type: !2969, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2971)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!734, !732}
!2971 = !{!2972, !2973, !2974, !2977, !2980}
!2972 = !DILocalVariable(name: "prefix", arg: 1, scope: !2968, file: !3, line: 439, type: !732)
!2973 = !DILocalVariable(name: "tmp_name", scope: !2968, file: !3, line: 441, type: !729)
!2974 = !DILocalVariable(name: "preftmp", scope: !2975, file: !3, line: 445, type: !729)
!2975 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 444, column: 5)
!2976 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 443, column: 7)
!2977 = !DILocalVariable(name: "name_", scope: !2978, file: !3, line: 451, type: !2979)
!2978 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 451, column: 3)
!2979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !732)
!2980 = !DILocalVariable(name: "output_", scope: !2978, file: !3, line: 451, type: !2981)
!2981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!2982 = !DILocation(line: 0, scope: !2968)
!2983 = !DILocation(line: 443, column: 7, scope: !2976)
!2984 = !DILocation(line: 443, column: 7, scope: !2968)
!2985 = !DILocation(line: 445, column: 23, scope: !2975)
!2986 = !DILocation(line: 0, scope: !2975)
!2987 = !DILocation(line: 447, column: 31, scope: !2975)
!2988 = !DILocation(line: 447, column: 7, scope: !2975)
!2989 = !DILocation(line: 449, column: 5, scope: !2975)
!2990 = !DILocation(line: 451, column: 3, scope: !2978)
!2991 = !DILocation(line: 0, scope: !2978)
!2992 = !DILocation(line: 452, column: 10, scope: !2968)
!2993 = !DILocation(line: 452, column: 3, scope: !2968)
!2994 = distinct !DISubprogram(name: "remove_suffix", scope: !3, file: !3, line: 420, type: !2995, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2997)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{null, !729, !392}
!2997 = !{!2998, !2999, !3000}
!2998 = !DILocalVariable(name: "name", arg: 1, scope: !2994, file: !3, line: 420, type: !729)
!2999 = !DILocalVariable(name: "len", arg: 2, scope: !2994, file: !3, line: 420, type: !392)
!3000 = !DILocalVariable(name: "i", scope: !2994, file: !3, line: 422, type: !392)
!3001 = !DILocation(line: 0, scope: !2994)
!3002 = !DILocation(line: 424, column: 8, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 424, column: 3)
!3004 = !DILocation(line: 0, scope: !3003)
!3005 = !DILocation(line: 424, column: 18, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 424, column: 3)
!3007 = !DILocation(line: 424, column: 29, scope: !3006)
!3008 = !DILocation(line: 424, column: 22, scope: !3006)
!3009 = !DILocation(line: 424, column: 3, scope: !3003)
!3010 = !DILocation(line: 426, column: 20, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 426, column: 11)
!3012 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 425, column: 5)
!3013 = !DILocation(line: 426, column: 11, scope: !3011)
!3014 = !DILocation(line: 426, column: 25, scope: !3011)
!3015 = !DILocation(line: 426, column: 11, scope: !3012)
!3016 = !DILocation(line: 428, column: 18, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 427, column: 2)
!3018 = !DILocation(line: 429, column: 4, scope: !3017)
!3019 = !DILocation(line: 424, column: 36, scope: !3006)
!3020 = !DILocation(line: 424, column: 3, scope: !3006)
!3021 = distinct !{!3021, !3009, !3022}
!3022 = !DILocation(line: 431, column: 5, scope: !3003)
!3023 = !DILocation(line: 432, column: 1, scope: !2994)
!3024 = distinct !DISubprogram(name: "create_tmp_var_raw", scope: !3, file: !3, line: 460, type: !3025, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3027)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!734, !734, !732}
!3027 = !{!3028, !3029, !3030, !3031}
!3028 = !DILocalVariable(name: "type", arg: 1, scope: !3024, file: !3, line: 460, type: !734)
!3029 = !DILocalVariable(name: "prefix", arg: 2, scope: !3024, file: !3, line: 460, type: !732)
!3030 = !DILocalVariable(name: "tmp_var", scope: !3024, file: !3, line: 462, type: !734)
!3031 = !DILocalVariable(name: "new_type", scope: !3024, file: !3, line: 463, type: !734)
!3032 = !DILocation(line: 0, scope: !3024)
!3033 = !DILocation(line: 466, column: 14, scope: !3024)
!3034 = !DILocation(line: 467, column: 32, scope: !3024)
!3035 = !DILocation(line: 467, column: 3, scope: !3024)
!3036 = !DILocation(line: 467, column: 30, scope: !3024)
!3037 = !DILocation(line: 469, column: 13, scope: !3024)
!3038 = !DILocation(line: 474, column: 3, scope: !3024)
!3039 = !DILocation(line: 474, column: 29, scope: !3024)
!3040 = !DILocation(line: 479, column: 3, scope: !3024)
!3041 = !DILocation(line: 479, column: 27, scope: !3024)
!3042 = !DILocation(line: 481, column: 27, scope: !3024)
!3043 = !DILocation(line: 483, column: 23, scope: !3024)
!3044 = !DILocation(line: 485, column: 3, scope: !3024)
!3045 = distinct !DISubprogram(name: "create_tmp_var", scope: !3, file: !3, line: 494, type: !3025, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3046)
!3046 = !{!3047, !3048, !3049}
!3047 = !DILocalVariable(name: "type", arg: 1, scope: !3045, file: !3, line: 494, type: !734)
!3048 = !DILocalVariable(name: "prefix", arg: 2, scope: !3045, file: !3, line: 494, type: !732)
!3049 = !DILocalVariable(name: "tmp_var", scope: !3045, file: !3, line: 496, type: !734)
!3050 = !DILocation(line: 0, scope: !3045)
!3051 = !DILocation(line: 504, column: 3, scope: !3045)
!3052 = !DILocation(line: 506, column: 13, scope: !3045)
!3053 = !DILocation(line: 507, column: 3, scope: !3045)
!3054 = !DILocation(line: 508, column: 3, scope: !3045)
!3055 = distinct !DISubprogram(name: "gimple_add_tmp_var", scope: !3, file: !3, line: 725, type: !2731, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3056)
!3056 = !{!3057, !3058, !3063}
!3057 = !DILocalVariable(name: "tmp", arg: 1, scope: !3055, file: !3, line: 725, type: !734)
!3058 = !DILocalVariable(name: "ctx", scope: !3059, file: !3, line: 746, type: !2191)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 745, column: 2)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 744, column: 11)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 739, column: 5)
!3062 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 738, column: 7)
!3063 = !DILocalVariable(name: "body_seq", scope: !3064, file: !3, line: 757, type: !1048)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 756, column: 5)
!3065 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 753, column: 12)
!3066 = !DILocation(line: 0, scope: !3055)
!3067 = !DILocation(line: 727, column: 3, scope: !3055)
!3068 = !DILocation(line: 732, column: 23, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 732, column: 7)
!3070 = !DILocation(line: 732, column: 8, scope: !3069)
!3071 = !DILocation(line: 732, column: 7, scope: !3055)
!3072 = !DILocation(line: 733, column: 5, scope: !3069)
!3073 = !DILocation(line: 735, column: 24, scope: !3055)
!3074 = !DILocation(line: 735, column: 3, scope: !3055)
!3075 = !DILocation(line: 735, column: 22, scope: !3055)
!3076 = !DILocation(line: 736, column: 3, scope: !3055)
!3077 = !DILocation(line: 736, column: 34, scope: !3055)
!3078 = !DILocation(line: 738, column: 7, scope: !3062)
!3079 = !DILocation(line: 738, column: 7, scope: !3055)
!3080 = !DILocation(line: 740, column: 41, scope: !3061)
!3081 = !DILocation(line: 740, column: 24, scope: !3061)
!3082 = !DILocation(line: 741, column: 28, scope: !3061)
!3083 = !DILocation(line: 744, column: 11, scope: !3060)
!3084 = !DILocation(line: 744, column: 11, scope: !3061)
!3085 = !DILocation(line: 747, column: 4, scope: !3059)
!3086 = !DILocation(line: 0, scope: !3059)
!3087 = !DILocation(line: 747, column: 15, scope: !3059)
!3088 = !DILocation(line: 747, column: 23, scope: !3059)
!3089 = !DILocation(line: 747, column: 35, scope: !3059)
!3090 = !DILocation(line: 748, column: 17, scope: !3059)
!3091 = distinct !{!3091, !3085, !3090}
!3092 = !DILocation(line: 750, column: 6, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 749, column: 8)
!3094 = !DILocation(line: 753, column: 12, scope: !3065)
!3095 = !DILocation(line: 753, column: 12, scope: !3062)
!3096 = !DILocation(line: 754, column: 5, scope: !3065)
!3097 = !DILocation(line: 761, column: 18, scope: !3064)
!3098 = !DILocation(line: 0, scope: !3064)
!3099 = !DILocation(line: 762, column: 26, scope: !3064)
!3100 = !DILocation(line: 762, column: 7, scope: !3064)
!3101 = !DILocation(line: 764, column: 1, scope: !3055)
!3102 = distinct !DISubprogram(name: "get_formal_tmp_var", scope: !3, file: !3, line: 646, type: !3103, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!734, !734, !2939}
!3105 = !{!3106, !3107}
!3106 = !DILocalVariable(name: "val", arg: 1, scope: !3102, file: !3, line: 646, type: !734)
!3107 = !DILocalVariable(name: "pre_p", arg: 2, scope: !3102, file: !3, line: 646, type: !2939)
!3108 = !DILocation(line: 0, scope: !3102)
!3109 = !DILocation(line: 648, column: 10, scope: !3102)
!3110 = !DILocation(line: 648, column: 3, scope: !3102)
!3111 = distinct !DISubprogram(name: "internal_get_tmp_var", scope: !3, file: !3, line: 594, type: !3112, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3114)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!734, !734, !2939, !2939, !727}
!3114 = !{!3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3115 = !DILocalVariable(name: "val", arg: 1, scope: !3111, file: !3, line: 594, type: !734)
!3116 = !DILocalVariable(name: "pre_p", arg: 2, scope: !3111, file: !3, line: 594, type: !2939)
!3117 = !DILocalVariable(name: "post_p", arg: 3, scope: !3111, file: !3, line: 594, type: !2939)
!3118 = !DILocalVariable(name: "is_formal", arg: 4, scope: !3111, file: !3, line: 595, type: !727)
!3119 = !DILocalVariable(name: "t", scope: !3111, file: !3, line: 597, type: !734)
!3120 = !DILocalVariable(name: "mod", scope: !3111, file: !3, line: 597, type: !734)
!3121 = !DILocalVariable(name: "last", scope: !3122, file: !3, line: 626, type: !1058)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 625, column: 5)
!3123 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 624, column: 7)
!3124 = !DILocation(line: 0, scope: !3111)
!3125 = !DILocation(line: 601, column: 3, scope: !3111)
!3126 = !DILocation(line: 604, column: 23, scope: !3111)
!3127 = !DILocation(line: 604, column: 7, scope: !3111)
!3128 = !DILocation(line: 606, column: 7, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 606, column: 7)
!3130 = !DILocation(line: 607, column: 7, scope: !3129)
!3131 = !DILocation(line: 611, column: 9, scope: !3111)
!3132 = !DILocation(line: 607, column: 11, scope: !3129)
!3133 = !DILocation(line: 607, column: 37, scope: !3129)
!3134 = !DILocation(line: 608, column: 4, scope: !3129)
!3135 = !DILocation(line: 608, column: 33, scope: !3129)
!3136 = !DILocation(line: 606, column: 7, scope: !3111)
!3137 = !DILocation(line: 609, column: 5, scope: !3129)
!3138 = !DILocation(line: 609, column: 27, scope: !3129)
!3139 = !DILocation(line: 613, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 613, column: 7)
!3141 = !DILocation(line: 613, column: 7, scope: !3111)
!3142 = !DILocation(line: 614, column: 5, scope: !3140)
!3143 = !DILocation(line: 616, column: 5, scope: !3140)
!3144 = !DILocation(line: 619, column: 3, scope: !3111)
!3145 = !DILocation(line: 620, column: 13, scope: !3111)
!3146 = !DILocation(line: 620, column: 3, scope: !3111)
!3147 = !DILocation(line: 624, column: 7, scope: !3123)
!3148 = !DILocation(line: 624, column: 22, scope: !3123)
!3149 = !DILocation(line: 624, column: 7, scope: !3111)
!3150 = !DILocation(line: 626, column: 43, scope: !3122)
!3151 = !DILocation(line: 626, column: 21, scope: !3122)
!3152 = !DILocation(line: 0, scope: !3122)
!3153 = !DILocation(line: 627, column: 11, scope: !3122)
!3154 = !DILocation(line: 628, column: 5, scope: !3122)
!3155 = !DILocation(line: 630, column: 3, scope: !3111)
!3156 = distinct !DISubprogram(name: "get_initialized_tmp_var", scope: !3, file: !3, line: 655, type: !3157, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!734, !734, !2939, !2939}
!3159 = !{!3160, !3161, !3162}
!3160 = !DILocalVariable(name: "val", arg: 1, scope: !3156, file: !3, line: 655, type: !734)
!3161 = !DILocalVariable(name: "pre_p", arg: 2, scope: !3156, file: !3, line: 655, type: !2939)
!3162 = !DILocalVariable(name: "post_p", arg: 3, scope: !3156, file: !3, line: 655, type: !2939)
!3163 = !DILocation(line: 0, scope: !3156)
!3164 = !DILocation(line: 657, column: 10, scope: !3156)
!3165 = !DILocation(line: 657, column: 3, scope: !3156)
!3166 = distinct !DISubprogram(name: "gimple_code", scope: !391, file: !391, line: 1052, type: !3167, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3170)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!439, !3169}
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !735, line: 60, baseType: !2239)
!3170 = !{!3171}
!3171 = !DILocalVariable(name: "g", arg: 1, scope: !3166, file: !391, line: 1052, type: !3169)
!3172 = !DILocation(line: 0, scope: !3166)
!3173 = !DILocation(line: 1054, column: 20, scope: !3166)
!3174 = !DILocation(line: 1054, column: 3, scope: !3166)
!3175 = distinct !DISubprogram(name: "gimple_bind_block", scope: !391, file: !391, line: 2559, type: !3176, scopeLine: 2560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3178)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!734, !3169}
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "gs", arg: 1, scope: !3175, file: !391, line: 2559, type: !3169)
!3180 = !DILocation(line: 0, scope: !3175)
!3181 = !DILocation(line: 2562, column: 26, scope: !3175)
!3182 = !DILocation(line: 2562, column: 3, scope: !3175)
!3183 = distinct !DISubprogram(name: "gimple_bind_vars", scope: !391, file: !391, line: 2485, type: !3176, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3184)
!3184 = !{!3185}
!3185 = !DILocalVariable(name: "gs", arg: 1, scope: !3183, file: !391, line: 2485, type: !3169)
!3186 = !DILocation(line: 0, scope: !3183)
!3187 = !DILocation(line: 2488, column: 26, scope: !3183)
!3188 = !DILocation(line: 2488, column: 3, scope: !3183)
!3189 = distinct !DISubprogram(name: "gimple_bind_set_vars", scope: !391, file: !391, line: 2496, type: !3190, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3192)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !1058, !734}
!3192 = !{!3193, !3194}
!3193 = !DILocalVariable(name: "gs", arg: 1, scope: !3189, file: !391, line: 2496, type: !1058)
!3194 = !DILocalVariable(name: "vars", arg: 2, scope: !3189, file: !391, line: 2496, type: !734)
!3195 = !DILocation(line: 0, scope: !3189)
!3196 = !DILocation(line: 2499, column: 19, scope: !3189)
!3197 = !DILocation(line: 2499, column: 24, scope: !3189)
!3198 = !DILocation(line: 2500, column: 1, scope: !3189)
!3199 = distinct !DISubprogram(name: "force_constant_size", scope: !3, file: !3, line: 705, type: !2731, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3200)
!3200 = !{!3201, !3202}
!3201 = !DILocalVariable(name: "var", arg: 1, scope: !3199, file: !3, line: 705, type: !734)
!3202 = !DILocalVariable(name: "max_size", scope: !3199, file: !3, line: 710, type: !790)
!3203 = !DILocation(line: 0, scope: !3199)
!3204 = !DILocation(line: 712, column: 3, scope: !3199)
!3205 = !DILocation(line: 714, column: 37, scope: !3199)
!3206 = !DILocation(line: 714, column: 14, scope: !3199)
!3207 = !DILocation(line: 716, column: 3, scope: !3199)
!3208 = !DILocation(line: 719, column: 22, scope: !3199)
!3209 = !DILocation(line: 719, column: 7, scope: !3199)
!3210 = !DILocation(line: 719, column: 5, scope: !3199)
!3211 = !DILocation(line: 721, column: 22, scope: !3199)
!3212 = !DILocation(line: 721, column: 60, scope: !3199)
!3213 = !DILocation(line: 721, column: 7, scope: !3199)
!3214 = !DILocation(line: 721, column: 5, scope: !3199)
!3215 = !DILocation(line: 722, column: 1, scope: !3199)
!3216 = distinct !DISubprogram(name: "omp_add_variable", scope: !3, file: !3, line: 5363, type: !3217, scopeLine: 5364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3219)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !2191, !734, !7}
!3219 = !{!3220, !3221, !3222, !3223, !3224, !3225}
!3220 = !DILocalVariable(name: "ctx", arg: 1, scope: !3216, file: !3, line: 5363, type: !2191)
!3221 = !DILocalVariable(name: "decl", arg: 2, scope: !3216, file: !3, line: 5363, type: !734)
!3222 = !DILocalVariable(name: "flags", arg: 3, scope: !3216, file: !3, line: 5363, type: !7)
!3223 = !DILocalVariable(name: "n", scope: !3216, file: !3, line: 5365, type: !2201)
!3224 = !DILocalVariable(name: "nflags", scope: !3216, file: !3, line: 5366, type: !7)
!3225 = !DILocalVariable(name: "t", scope: !3216, file: !3, line: 5367, type: !734)
!3226 = !DILocation(line: 0, scope: !3216)
!3227 = !DILocation(line: 5369, column: 15, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 5369, column: 7)
!3229 = !DILocation(line: 5369, column: 12, scope: !3228)
!3230 = !DILocation(line: 5369, column: 31, scope: !3228)
!3231 = !DILocation(line: 5369, column: 34, scope: !3228)
!3232 = !DILocation(line: 5369, column: 51, scope: !3228)
!3233 = !DILocation(line: 5369, column: 7, scope: !3216)
!3234 = !DILocation(line: 5374, column: 7, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 5374, column: 7)
!3236 = !DILocation(line: 5375, column: 7, scope: !3235)
!3237 = !DILocation(line: 5375, column: 10, scope: !3235)
!3238 = !DILocation(line: 5374, column: 7, scope: !3216)
!3239 = !DILocation(line: 5376, column: 11, scope: !3235)
!3240 = !DILocation(line: 5376, column: 5, scope: !3235)
!3241 = !DILocation(line: 5378, column: 31, scope: !3216)
!3242 = !DILocation(line: 5378, column: 42, scope: !3216)
!3243 = !DILocation(line: 5378, column: 7, scope: !3216)
!3244 = !DILocation(line: 5379, column: 9, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 5379, column: 7)
!3246 = !DILocation(line: 5379, column: 7, scope: !3216)
!3247 = !DILocation(line: 5383, column: 7, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 5380, column: 5)
!3249 = !DILocation(line: 5386, column: 19, scope: !3248)
!3250 = !DILocation(line: 5386, column: 16, scope: !3248)
!3251 = !DILocation(line: 5387, column: 7, scope: !3248)
!3252 = !DILocation(line: 5389, column: 18, scope: !3248)
!3253 = !DILocation(line: 5389, column: 16, scope: !3248)
!3254 = !DILocation(line: 5390, column: 7, scope: !3248)
!3255 = !DILocation(line: 5396, column: 7, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 5396, column: 7)
!3257 = !DILocation(line: 5396, column: 24, scope: !3256)
!3258 = !DILocation(line: 5396, column: 27, scope: !3256)
!3259 = !DILocation(line: 5396, column: 56, scope: !3256)
!3260 = !DILocation(line: 5396, column: 7, scope: !3216)
!3261 = !DILocation(line: 5402, column: 19, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 5402, column: 11)
!3263 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 5397, column: 5)
!3264 = !DILocation(line: 5402, column: 11, scope: !3263)
!3265 = !DILocation(line: 5404, column: 19, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 5403, column: 2)
!3267 = !DILocation(line: 5404, column: 13, scope: !3266)
!3268 = !DILocation(line: 5405, column: 20, scope: !3266)
!3269 = !DILocation(line: 5405, column: 11, scope: !3266)
!3270 = !DILocation(line: 5406, column: 8, scope: !3266)
!3271 = !DILocation(line: 5407, column: 4, scope: !3266)
!3272 = !DILocation(line: 5408, column: 8, scope: !3266)
!3273 = !DILocation(line: 5409, column: 4, scope: !3266)
!3274 = !DILocation(line: 5410, column: 4, scope: !3266)
!3275 = !DILocation(line: 5411, column: 2, scope: !3266)
!3276 = !DILocation(line: 5415, column: 41, scope: !3263)
!3277 = !DILocation(line: 5415, column: 7, scope: !3263)
!3278 = !DILocation(line: 5416, column: 41, scope: !3263)
!3279 = !DILocation(line: 5416, column: 7, scope: !3263)
!3280 = !DILocation(line: 5417, column: 43, scope: !3263)
!3281 = !DILocation(line: 5417, column: 7, scope: !3263)
!3282 = !DILocation(line: 5422, column: 17, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 5422, column: 11)
!3284 = !DILocation(line: 5422, column: 11, scope: !3263)
!3285 = !DILocation(line: 5424, column: 12, scope: !3283)
!3286 = !DILocation(line: 5424, column: 3, scope: !3283)
!3287 = !DILocation(line: 5423, column: 2, scope: !3283)
!3288 = !DILocation(line: 5433, column: 16, scope: !3283)
!3289 = !DILocation(line: 5434, column: 28, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 5433, column: 16)
!3291 = !DILocation(line: 5434, column: 2, scope: !3290)
!3292 = !DILocation(line: 5436, column: 29, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 5436, column: 12)
!3294 = !DILocation(line: 5436, column: 12, scope: !3293)
!3295 = !DILocation(line: 5436, column: 12, scope: !3256)
!3296 = !DILocation(line: 5438, column: 7, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 5437, column: 5)
!3298 = !DILocation(line: 5439, column: 43, scope: !3297)
!3299 = !DILocation(line: 5439, column: 7, scope: !3297)
!3300 = !DILocation(line: 5443, column: 18, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 5443, column: 11)
!3302 = !DILocation(line: 5443, column: 33, scope: !3301)
!3303 = !DILocation(line: 5443, column: 11, scope: !3297)
!3304 = !DILocation(line: 5445, column: 8, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 5444, column: 2)
!3306 = !DILocation(line: 5446, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 5446, column: 8)
!3308 = !DILocation(line: 5446, column: 22, scope: !3307)
!3309 = !DILocation(line: 5446, column: 8, scope: !3305)
!3310 = !DILocation(line: 5447, column: 6, scope: !3307)
!3311 = !DILocation(line: 5451, column: 27, scope: !3216)
!3312 = !DILocation(line: 5451, column: 60, scope: !3216)
!3313 = !DILocation(line: 5451, column: 3, scope: !3216)
!3314 = !DILocation(line: 5452, column: 1, scope: !3216)
!3315 = distinct !DISubprogram(name: "gimple_seq_first_stmt", scope: !391, file: !391, line: 168, type: !3316, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3321)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!1058, !3318}
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !735, line: 67, baseType: !3319)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!3321 = !{!3322, !3323}
!3322 = !DILocalVariable(name: "s", arg: 1, scope: !3315, file: !391, line: 168, type: !3318)
!3323 = !DILocalVariable(name: "n", scope: !3315, file: !391, line: 170, type: !1053)
!3324 = !DILocation(line: 0, scope: !3315)
!3325 = !DILocation(line: 170, column: 23, scope: !3315)
!3326 = !DILocation(line: 171, column: 10, scope: !3315)
!3327 = !DILocation(line: 171, column: 19, scope: !3315)
!3328 = !DILocation(line: 171, column: 3, scope: !3315)
!3329 = distinct !DISubprogram(name: "annotate_all_with_location", scope: !3, file: !3, line: 834, type: !3330, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3332)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !1048, !859}
!3332 = !{!3333, !3334, !3335, !3342}
!3333 = !DILocalVariable(name: "stmt_p", arg: 1, scope: !3329, file: !3, line: 834, type: !1048)
!3334 = !DILocalVariable(name: "location", arg: 2, scope: !3329, file: !3, line: 834, type: !859)
!3335 = !DILocalVariable(name: "i", scope: !3329, file: !3, line: 836, type: !3336)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !391, line: 265, baseType: !3337)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 254, size: 192, elements: !3338)
!3338 = !{!3339, !3340, !3341}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3337, file: !391, line: 257, baseType: !1053, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3337, file: !391, line: 263, baseType: !1048, size: 64, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3337, file: !391, line: 264, baseType: !1648, size: 64, offset: 128)
!3342 = !DILocalVariable(name: "gs", scope: !3343, file: !3, line: 843, type: !1058)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 842, column: 5)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 841, column: 3)
!3345 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 841, column: 3)
!3346 = !DILocation(line: 0, scope: !3329)
!3347 = !DILocation(line: 836, column: 3, scope: !3329)
!3348 = !DILocation(line: 838, column: 7, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 838, column: 7)
!3350 = !DILocation(line: 838, column: 7, scope: !3329)
!3351 = !DILocation(line: 841, column: 12, scope: !3345)
!3352 = !DILocation(line: 841, column: 8, scope: !3345)
!3353 = !DILocation(line: 841, column: 33, scope: !3344)
!3354 = !DILocation(line: 841, column: 32, scope: !3344)
!3355 = !DILocation(line: 841, column: 3, scope: !3345)
!3356 = !DILocation(line: 843, column: 19, scope: !3343)
!3357 = !DILocation(line: 0, scope: !3343)
!3358 = !DILocation(line: 844, column: 7, scope: !3343)
!3359 = !DILocation(line: 841, column: 48, scope: !3344)
!3360 = !DILocation(line: 841, column: 3, scope: !3344)
!3361 = distinct !{!3361, !3355, !3362}
!3362 = !DILocation(line: 845, column: 5, scope: !3345)
!3363 = !DILocation(line: 846, column: 1, scope: !3329)
!3364 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !391, file: !391, line: 215, type: !3365, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3367)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!727, !3318}
!3367 = !{!3368}
!3368 = !DILocalVariable(name: "s", arg: 1, scope: !3364, file: !391, line: 215, type: !3318)
!3369 = !DILocation(line: 0, scope: !3364)
!3370 = !DILocation(line: 217, column: 12, scope: !3364)
!3371 = !DILocation(line: 217, column: 20, scope: !3364)
!3372 = !DILocation(line: 217, column: 26, scope: !3364)
!3373 = !DILocation(line: 217, column: 32, scope: !3364)
!3374 = !DILocation(line: 217, column: 3, scope: !3364)
!3375 = distinct !DISubprogram(name: "gsi_start", scope: !391, file: !391, line: 4403, type: !3376, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3378)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!3336, !1048}
!3378 = !{!3379, !3380}
!3379 = !DILocalVariable(name: "seq", arg: 1, scope: !3375, file: !391, line: 4403, type: !1048)
!3380 = !DILocalVariable(name: "i", scope: !3375, file: !391, line: 4405, type: !3336)
!3381 = !DILocation(line: 0, scope: !3375)
!3382 = !DILocation(line: 4405, column: 24, scope: !3375)
!3383 = !DILocation(line: 4407, column: 11, scope: !3375)
!3384 = !DILocation(line: 4407, column: 5, scope: !3375)
!3385 = !DILocation(line: 4407, column: 9, scope: !3375)
!3386 = !DILocation(line: 4408, column: 5, scope: !3375)
!3387 = !DILocation(line: 4408, column: 9, scope: !3375)
!3388 = !DILocation(line: 4409, column: 11, scope: !3375)
!3389 = !DILocation(line: 4409, column: 17, scope: !3375)
!3390 = !DILocation(line: 4409, column: 27, scope: !3375)
!3391 = !DILocation(line: 4409, column: 20, scope: !3375)
!3392 = !DILocation(line: 4409, column: 10, scope: !3375)
!3393 = !DILocation(line: 4409, column: 35, scope: !3375)
!3394 = !DILocation(line: 4409, column: 5, scope: !3375)
!3395 = !DILocation(line: 4409, column: 8, scope: !3375)
!3396 = !DILocation(line: 4411, column: 3, scope: !3375)
!3397 = distinct !DISubprogram(name: "gsi_end_p", scope: !391, file: !391, line: 4467, type: !3398, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!727, !3336}
!3400 = !{!3401}
!3401 = !DILocalVariable(name: "i", arg: 1, scope: !3397, file: !391, line: 4467, type: !3336)
!3402 = !DILocation(line: 4467, column: 33, scope: !3397)
!3403 = !DILocation(line: 4469, column: 12, scope: !3397)
!3404 = !DILocation(line: 4469, column: 16, scope: !3397)
!3405 = !DILocation(line: 4469, column: 10, scope: !3397)
!3406 = !DILocation(line: 4469, column: 3, scope: !3397)
!3407 = distinct !DISubprogram(name: "gsi_stmt", scope: !391, file: !391, line: 4501, type: !3408, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!1058, !3336}
!3410 = !{!3411}
!3411 = !DILocalVariable(name: "i", arg: 1, scope: !3407, file: !391, line: 4501, type: !3336)
!3412 = !DILocation(line: 4501, column: 32, scope: !3407)
!3413 = !DILocation(line: 4503, column: 12, scope: !3407)
!3414 = !DILocation(line: 4503, column: 17, scope: !3407)
!3415 = !DILocation(line: 4503, column: 3, scope: !3407)
!3416 = distinct !DISubprogram(name: "annotate_one_with_location", scope: !3, file: !3, line: 804, type: !3417, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3419)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !1058, !859}
!3419 = !{!3420, !3421}
!3420 = !DILocalVariable(name: "gs", arg: 1, scope: !3416, file: !3, line: 804, type: !1058)
!3421 = !DILocalVariable(name: "location", arg: 2, scope: !3416, file: !3, line: 804, type: !859)
!3422 = !DILocation(line: 0, scope: !3416)
!3423 = !DILocation(line: 806, column: 8, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 806, column: 7)
!3425 = !DILocation(line: 807, column: 7, scope: !3424)
!3426 = !DILocation(line: 807, column: 11, scope: !3424)
!3427 = !DILocation(line: 808, column: 7, scope: !3424)
!3428 = !DILocation(line: 808, column: 10, scope: !3424)
!3429 = !DILocation(line: 806, column: 7, scope: !3416)
!3430 = !DILocation(line: 809, column: 5, scope: !3424)
!3431 = !DILocation(line: 810, column: 1, scope: !3416)
!3432 = distinct !DISubprogram(name: "gsi_next", scope: !391, file: !391, line: 4485, type: !3433, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3436)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !3435}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3436 = !{!3437}
!3437 = !DILocalVariable(name: "i", arg: 1, scope: !3432, file: !391, line: 4485, type: !3435)
!3438 = !DILocation(line: 0, scope: !3432)
!3439 = !DILocation(line: 4487, column: 15, scope: !3432)
!3440 = !DILocation(line: 4487, column: 20, scope: !3432)
!3441 = !DILocation(line: 4487, column: 10, scope: !3432)
!3442 = !DILocation(line: 4488, column: 1, scope: !3432)
!3443 = distinct !DISubprogram(name: "unshare_expr", scope: !3, file: !3, line: 967, type: !3444, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3446)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!734, !734}
!3446 = !{!3447}
!3447 = !DILocalVariable(name: "expr", arg: 1, scope: !3443, file: !3, line: 967, type: !734)
!3448 = !DILocation(line: 0, scope: !3443)
!3449 = !DILocation(line: 969, column: 3, scope: !3443)
!3450 = !DILocation(line: 970, column: 10, scope: !3443)
!3451 = !DILocation(line: 970, column: 3, scope: !3443)
!3452 = distinct !DISubprogram(name: "mostly_copy_tree_r", scope: !3, file: !3, line: 855, type: !3453, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3456)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!734, !1093, !3455, !731}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!3456 = !{!3457, !3458, !3459, !3460}
!3457 = !DILocalVariable(name: "tp", arg: 1, scope: !3452, file: !3, line: 855, type: !1093)
!3458 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !3452, file: !3, line: 855, type: !3455)
!3459 = !DILocalVariable(name: "data", arg: 3, scope: !3452, file: !3, line: 855, type: !731)
!3460 = !DILocalVariable(name: "code", scope: !3452, file: !3, line: 857, type: !134)
!3461 = !DILocation(line: 0, scope: !3452)
!3462 = !DILocation(line: 857, column: 25, scope: !3452)
!3463 = !DILocation(line: 859, column: 7, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 859, column: 7)
!3465 = !DILocation(line: 859, column: 30, scope: !3464)
!3466 = !DILocation(line: 860, column: 7, scope: !3464)
!3467 = !DILocation(line: 860, column: 33, scope: !3464)
!3468 = !DILocation(line: 861, column: 7, scope: !3464)
!3469 = !DILocation(line: 861, column: 33, scope: !3464)
!3470 = !DILocation(line: 862, column: 15, scope: !3464)
!3471 = !DILocation(line: 862, column: 7, scope: !3464)
!3472 = !DILocation(line: 862, column: 36, scope: !3464)
!3473 = !DILocation(line: 866, column: 15, scope: !3464)
!3474 = !DILocation(line: 867, column: 20, scope: !3464)
!3475 = !DILocation(line: 867, column: 5, scope: !3464)
!3476 = !DILocation(line: 870, column: 7, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 869, column: 5)
!3478 = !DILocation(line: 871, column: 7, scope: !3477)
!3479 = !DILocation(line: 874, column: 3, scope: !3452)
!3480 = distinct !DISubprogram(name: "voidify_wrapper_expr", scope: !3, file: !3, line: 979, type: !3481, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3483)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!734, !734, !734}
!3483 = !{!3484, !3485, !3486, !3487, !3490, !3496}
!3484 = !DILocalVariable(name: "wrapper", arg: 1, scope: !3480, file: !3, line: 979, type: !734)
!3485 = !DILocalVariable(name: "temp", arg: 2, scope: !3480, file: !3, line: 979, type: !734)
!3486 = !DILocalVariable(name: "type", scope: !3480, file: !3, line: 981, type: !734)
!3487 = !DILocalVariable(name: "p", scope: !3488, file: !3, line: 984, type: !1093)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 983, column: 5)
!3489 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 982, column: 7)
!3490 = !DILocalVariable(name: "i", scope: !3491, file: !3, line: 1009, type: !2898)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 1008, column: 8)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 991, column: 6)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 989, column: 2)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 988, column: 7)
!3495 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 988, column: 7)
!3496 = !DILabel(scope: !3488, name: "out", file: !3, line: 1030)
!3497 = !DILocation(line: 0, scope: !3480)
!3498 = !DILocation(line: 981, column: 15, scope: !3480)
!3499 = !DILocation(line: 982, column: 7, scope: !3489)
!3500 = !DILocation(line: 982, column: 12, scope: !3489)
!3501 = !DILocation(line: 982, column: 16, scope: !3489)
!3502 = !DILocation(line: 982, column: 7, scope: !3480)
!3503 = !DILocation(line: 988, column: 7, scope: !3495)
!3504 = !DILocation(line: 988, column: 14, scope: !3495)
!3505 = !DILocation(line: 0, scope: !3488)
!3506 = !DILocation(line: 988, column: 28, scope: !3494)
!3507 = !DILocation(line: 988, column: 31, scope: !3494)
!3508 = !DILocation(line: 1031, column: 24, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 1031, column: 11)
!3510 = !DILocation(line: 990, column: 12, scope: !3493)
!3511 = !DILocation(line: 990, column: 4, scope: !3493)
!3512 = !DILocation(line: 1018, column: 8, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 1018, column: 8)
!3514 = !DILocation(line: 993, column: 31, scope: !3492)
!3515 = !DILocation(line: 994, column: 25, scope: !3492)
!3516 = !DILocation(line: 994, column: 8, scope: !3492)
!3517 = !DILocation(line: 994, column: 23, scope: !3492)
!3518 = !DILocation(line: 996, column: 13, scope: !3492)
!3519 = !DILocation(line: 997, column: 8, scope: !3492)
!3520 = !DILocation(line: 1002, column: 31, scope: !3492)
!3521 = !DILocation(line: 1003, column: 25, scope: !3492)
!3522 = !DILocation(line: 1003, column: 8, scope: !3492)
!3523 = !DILocation(line: 1003, column: 23, scope: !3492)
!3524 = !DILocation(line: 1004, column: 13, scope: !3492)
!3525 = !DILocation(line: 1005, column: 8, scope: !3492)
!3526 = !DILocation(line: 1009, column: 26, scope: !3491)
!3527 = !DILocation(line: 1010, column: 3, scope: !3491)
!3528 = !DILocation(line: 1010, column: 26, scope: !3491)
!3529 = !DILocation(line: 1011, column: 20, scope: !3491)
!3530 = !DILocation(line: 1011, column: 3, scope: !3491)
!3531 = !DILocation(line: 1011, column: 18, scope: !3491)
!3532 = !DILocation(line: 1012, column: 7, scope: !3491)
!3533 = !DILocation(line: 1012, column: 30, scope: !3491)
!3534 = !DILocation(line: 1014, column: 8, scope: !3492)
!3535 = !DILocation(line: 1018, column: 15, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1018, column: 8)
!3537 = !DILocation(line: 0, scope: !3495)
!3538 = !DILocation(line: 1018, column: 30, scope: !3536)
!3539 = !DILocation(line: 1020, column: 28, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1019, column: 3)
!3541 = !DILocation(line: 1021, column: 22, scope: !3540)
!3542 = !DILocation(line: 1021, column: 5, scope: !3540)
!3543 = !DILocation(line: 1021, column: 20, scope: !3540)
!3544 = !DILocation(line: 1018, column: 53, scope: !3536)
!3545 = !DILocation(line: 0, scope: !3536)
!3546 = !DILocation(line: 1018, column: 8, scope: !3536)
!3547 = distinct !{!3547, !3512, !3548}
!3548 = !DILocation(line: 1022, column: 3, scope: !3513)
!3549 = !DILocation(line: 988, column: 7, scope: !3494)
!3550 = distinct !{!3550, !3503, !3551}
!3551 = !DILocation(line: 1028, column: 2, scope: !3495)
!3552 = !DILocation(line: 1030, column: 5, scope: !3488)
!3553 = !DILocation(line: 1031, column: 11, scope: !3488)
!3554 = !DILocation(line: 1033, column: 16, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 1033, column: 16)
!3556 = !DILocation(line: 1033, column: 16, scope: !3509)
!3557 = !DILocation(line: 1037, column: 4, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1034, column: 2)
!3559 = !DILocation(line: 1039, column: 29, scope: !3558)
!3560 = !DILocation(line: 1039, column: 4, scope: !3558)
!3561 = !DILocation(line: 1039, column: 27, scope: !3558)
!3562 = !DILocation(line: 1040, column: 7, scope: !3558)
!3563 = !DILocation(line: 1041, column: 2, scope: !3558)
!3564 = !DILocation(line: 1044, column: 11, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1043, column: 2)
!3566 = !DILocation(line: 1045, column: 9, scope: !3565)
!3567 = !DILocation(line: 1045, column: 7, scope: !3565)
!3568 = !DILocation(line: 1052, column: 1, scope: !3480)
!3569 = distinct !DISubprogram(name: "tsi_last", scope: !2899, file: !2899, line: 49, type: !3570, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3572)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!2898, !734}
!3572 = !{!3573, !3574}
!3573 = !DILocalVariable(name: "t", arg: 1, scope: !3569, file: !2899, line: 49, type: !734)
!3574 = !DILocalVariable(name: "i", scope: !3569, file: !2899, line: 51, type: !2898)
!3575 = !DILocation(line: 0, scope: !3569)
!3576 = !DILocation(line: 53, column: 11, scope: !3569)
!3577 = !DILocation(line: 56, column: 3, scope: !3569)
!3578 = distinct !DISubprogram(name: "tsi_end_p", scope: !2899, file: !2899, line: 60, type: !3579, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!727, !2898}
!3581 = !{!3582}
!3582 = !DILocalVariable(name: "i", arg: 1, scope: !3578, file: !2899, line: 60, type: !2898)
!3583 = !DILocation(line: 62, column: 16, scope: !3578)
!3584 = !DILocation(line: 62, column: 10, scope: !3578)
!3585 = !DILocation(line: 62, column: 3, scope: !3578)
!3586 = distinct !DISubprogram(name: "tsi_stmt_ptr", scope: !2899, file: !2899, line: 84, type: !3587, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!1093, !2898}
!3589 = !{!3590}
!3590 = !DILocalVariable(name: "i", arg: 1, scope: !3586, file: !2899, line: 84, type: !2898)
!3591 = !DILocation(line: 86, column: 18, scope: !3586)
!3592 = !DILocation(line: 86, column: 3, scope: !3586)
!3593 = distinct !DISubprogram(name: "sort_case_labels", scope: !3, file: !3, line: 1418, type: !3594, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !2176}
!3596 = !{!3597, !3598}
!3597 = !DILocalVariable(name: "label_vec", arg: 1, scope: !3593, file: !3, line: 1418, type: !2176)
!3598 = !DILocalVariable(name: "len", scope: !3593, file: !3, line: 1420, type: !1204)
!3599 = !DILocation(line: 0, scope: !3593)
!3600 = !DILocation(line: 1420, column: 16, scope: !3593)
!3601 = !DILocation(line: 1422, column: 15, scope: !3593)
!3602 = !DILocation(line: 1422, column: 3, scope: !3593)
!3603 = !DILocation(line: 1428, column: 1, scope: !3593)
!3604 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !3605, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3609)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!7, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!3609 = !{!3610}
!3610 = !DILocalVariable(name: "vec_", arg: 1, scope: !3604, file: !135, line: 182, type: !3607)
!3611 = !DILocation(line: 0, scope: !3604)
!3612 = !DILocation(line: 182, column: 1, scope: !3604)
!3613 = distinct !DISubprogram(name: "VEC_tree_base_address", scope: !135, file: !135, line: 182, type: !3614, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3617)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!1093, !3616}
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!3617 = !{!3618}
!3618 = !DILocalVariable(name: "vec_", arg: 1, scope: !3613, file: !135, line: 182, type: !3616)
!3619 = !DILocation(line: 0, scope: !3613)
!3620 = !DILocation(line: 182, column: 1, scope: !3613)
!3621 = distinct !DISubprogram(name: "compare_case_labels", scope: !3, file: !3, line: 1400, type: !1579, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3622)
!3622 = !{!3623, !3624, !3625, !3626}
!3623 = !DILocalVariable(name: "p1", arg: 1, scope: !3621, file: !3, line: 1400, type: !1365)
!3624 = !DILocalVariable(name: "p2", arg: 2, scope: !3621, file: !3, line: 1400, type: !1365)
!3625 = !DILocalVariable(name: "case1", scope: !3621, file: !3, line: 1402, type: !2174)
!3626 = !DILocalVariable(name: "case2", scope: !3621, file: !3, line: 1403, type: !2174)
!3627 = !DILocation(line: 0, scope: !3621)
!3628 = !DILocation(line: 1402, column: 29, scope: !3621)
!3629 = !DILocation(line: 1402, column: 28, scope: !3621)
!3630 = !DILocation(line: 1406, column: 8, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1406, column: 7)
!3632 = !DILocation(line: 1406, column: 7, scope: !3621)
!3633 = !DILocation(line: 1403, column: 29, scope: !3621)
!3634 = !DILocation(line: 1403, column: 28, scope: !3621)
!3635 = !DILocation(line: 1408, column: 13, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1408, column: 12)
!3637 = !DILocation(line: 1408, column: 12, scope: !3631)
!3638 = !DILocation(line: 1411, column: 12, scope: !3636)
!3639 = !DILocation(line: 1411, column: 5, scope: !3636)
!3640 = !DILocation(line: 0, scope: !3631)
!3641 = !DILocation(line: 1412, column: 1, scope: !3621)
!3642 = distinct !DISubprogram(name: "build_and_jump", scope: !3, file: !3, line: 1592, type: !3643, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3645)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!734, !1093}
!3645 = !{!3646, !3647}
!3646 = !DILocalVariable(name: "label_p", arg: 1, scope: !3642, file: !3, line: 1592, type: !1093)
!3647 = !DILocalVariable(name: "label", scope: !3648, file: !3, line: 1600, type: !734)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1599, column: 5)
!3649 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 1598, column: 7)
!3650 = !DILocation(line: 0, scope: !3642)
!3651 = !DILocation(line: 1594, column: 15, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 1594, column: 7)
!3653 = !DILocation(line: 1594, column: 7, scope: !3642)
!3654 = !DILocation(line: 1598, column: 7, scope: !3649)
!3655 = !DILocation(line: 1598, column: 16, scope: !3649)
!3656 = !DILocation(line: 1598, column: 7, scope: !3642)
!3657 = !DILocation(line: 1600, column: 20, scope: !3648)
!3658 = !DILocation(line: 0, scope: !3648)
!3659 = !DILocation(line: 1601, column: 16, scope: !3648)
!3660 = !DILocation(line: 1602, column: 5, scope: !3648)
!3661 = !DILocation(line: 1604, column: 10, scope: !3642)
!3662 = !DILocation(line: 1604, column: 3, scope: !3642)
!3663 = !DILocation(line: 1605, column: 1, scope: !3642)
!3664 = distinct !DISubprogram(name: "force_labels_r", scope: !3, file: !3, line: 1628, type: !3453, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3665)
!3665 = !{!3666, !3667, !3668}
!3666 = !DILocalVariable(name: "tp", arg: 1, scope: !3664, file: !3, line: 1628, type: !1093)
!3667 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !3664, file: !3, line: 1628, type: !3455)
!3668 = !DILocalVariable(name: "data", arg: 3, scope: !3664, file: !3, line: 1628, type: !731)
!3669 = !DILocation(line: 0, scope: !3664)
!3670 = !DILocation(line: 1630, column: 7, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1630, column: 7)
!3672 = !DILocation(line: 1630, column: 7, scope: !3664)
!3673 = !DILocation(line: 1631, column: 20, scope: !3671)
!3674 = !DILocation(line: 1632, column: 7, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1632, column: 7)
!3676 = !DILocation(line: 1631, column: 5, scope: !3671)
!3677 = !DILocation(line: 1632, column: 23, scope: !3675)
!3678 = !DILocation(line: 1632, column: 7, scope: !3664)
!3679 = !DILocation(line: 1633, column: 24, scope: !3675)
!3680 = !DILocation(line: 1633, column: 5, scope: !3675)
!3681 = !DILocation(line: 1635, column: 3, scope: !3664)
!3682 = distinct !DISubprogram(name: "gimple_boolify", scope: !3, file: !3, line: 2723, type: !3444, scopeLine: 2724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3683)
!3683 = !{!3684, !3685, !3686, !3687, !3690, !3691}
!3684 = !DILocalVariable(name: "expr", arg: 1, scope: !3682, file: !3, line: 2723, type: !734)
!3685 = !DILocalVariable(name: "type", scope: !3682, file: !3, line: 2725, type: !734)
!3686 = !DILocalVariable(name: "loc", scope: !3682, file: !3, line: 2726, type: !859)
!3687 = !DILocalVariable(name: "call", scope: !3688, file: !3, line: 2732, type: !734)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 2731, column: 5)
!3689 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 2728, column: 7)
!3690 = !DILocalVariable(name: "fn", scope: !3688, file: !3, line: 2733, type: !734)
!3691 = !DILocalVariable(name: "arg", scope: !3692, file: !3, line: 2742, type: !734)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 2741, column: 2)
!3693 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 2737, column: 11)
!3694 = !DILocation(line: 0, scope: !3682)
!3695 = !DILocation(line: 2725, column: 15, scope: !3682)
!3696 = !DILocation(line: 2726, column: 20, scope: !3682)
!3697 = !DILocation(line: 2728, column: 24, scope: !3689)
!3698 = !DILocation(line: 2729, column: 7, scope: !3689)
!3699 = !DILocation(line: 2729, column: 10, scope: !3689)
!3700 = !DILocation(line: 2729, column: 45, scope: !3689)
!3701 = !DILocation(line: 2730, column: 7, scope: !3689)
!3702 = !DILocation(line: 2730, column: 25, scope: !3689)
!3703 = !DILocation(line: 2730, column: 10, scope: !3689)
!3704 = !DILocation(line: 2728, column: 7, scope: !3682)
!3705 = !DILocation(line: 2732, column: 19, scope: !3688)
!3706 = !DILocation(line: 0, scope: !3688)
!3707 = !DILocation(line: 2733, column: 17, scope: !3688)
!3708 = !DILocation(line: 2737, column: 11, scope: !3693)
!3709 = !DILocation(line: 2738, column: 4, scope: !3693)
!3710 = !DILocation(line: 2738, column: 7, scope: !3693)
!3711 = !DILocation(line: 2738, column: 32, scope: !3693)
!3712 = !DILocation(line: 2739, column: 4, scope: !3693)
!3713 = !DILocation(line: 2739, column: 7, scope: !3693)
!3714 = !DILocation(line: 2739, column: 31, scope: !3693)
!3715 = !DILocation(line: 2740, column: 4, scope: !3693)
!3716 = !DILocation(line: 2740, column: 7, scope: !3693)
!3717 = !DILocation(line: 2740, column: 30, scope: !3693)
!3718 = !DILocation(line: 2737, column: 11, scope: !3688)
!3719 = !DILocation(line: 2742, column: 15, scope: !3692)
!3720 = !DILocation(line: 0, scope: !3692)
!3721 = !DILocation(line: 2743, column: 8, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 2743, column: 8)
!3723 = !DILocation(line: 2743, column: 8, scope: !3692)
!3724 = !DILocation(line: 2745, column: 12, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 2745, column: 12)
!3726 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 2744, column: 6)
!3727 = !DILocation(line: 2745, column: 28, scope: !3725)
!3728 = !DILocation(line: 2746, column: 5, scope: !3725)
!3729 = !DILocation(line: 2746, column: 8, scope: !3725)
!3730 = !DILocation(line: 2746, column: 27, scope: !3725)
!3731 = !DILocation(line: 2746, column: 24, scope: !3725)
!3732 = !DILocation(line: 2745, column: 12, scope: !3726)
!3733 = !DILocation(line: 2747, column: 9, scope: !3725)
!3734 = !DILocation(line: 0, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 2748, column: 12)
!3736 = !DILocation(line: 2748, column: 27, scope: !3735)
!3737 = !DILocation(line: 2747, column: 3, scope: !3725)
!3738 = !DILocation(line: 2748, column: 12, scope: !3735)
!3739 = !DILocation(line: 2748, column: 12, scope: !3726)
!3740 = !DILocation(line: 2750, column: 11, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 2749, column: 3)
!3742 = !DILocation(line: 2752, column: 32, scope: !3741)
!3743 = !DILocation(line: 2752, column: 9, scope: !3741)
!3744 = !DILocation(line: 2752, column: 7, scope: !3741)
!3745 = !DILocation(line: 2753, column: 3, scope: !3741)
!3746 = !DILocation(line: 2758, column: 7, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 2758, column: 7)
!3748 = !DILocation(line: 2758, column: 24, scope: !3747)
!3749 = !DILocation(line: 2758, column: 7, scope: !3682)
!3750 = !DILocation(line: 2761, column: 11, scope: !3682)
!3751 = !DILocation(line: 2761, column: 3, scope: !3682)
!3752 = !DILocation(line: 2769, column: 48, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 2762, column: 5)
!3754 = !DILocation(line: 2769, column: 32, scope: !3753)
!3755 = !DILocation(line: 2769, column: 30, scope: !3753)
!3756 = !DILocation(line: 2769, column: 7, scope: !3753)
!3757 = !DILocation(line: 2773, column: 48, scope: !3753)
!3758 = !DILocation(line: 2773, column: 32, scope: !3753)
!3759 = !DILocation(line: 2773, column: 30, scope: !3753)
!3760 = !DILocation(line: 2773, column: 7, scope: !3753)
!3761 = !DILocation(line: 2779, column: 26, scope: !3753)
!3762 = !DILocation(line: 2779, column: 24, scope: !3753)
!3763 = !DILocation(line: 2780, column: 7, scope: !3753)
!3764 = !DILocation(line: 2785, column: 37, scope: !3753)
!3765 = !DILocation(line: 2785, column: 14, scope: !3753)
!3766 = !DILocation(line: 2785, column: 7, scope: !3753)
!3767 = !DILocation(line: 2787, column: 1, scope: !3682)
!3768 = distinct !DISubprogram(name: "truth_value_p", scope: !135, file: !135, line: 4919, type: !3769, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!727, !134}
!3771 = !{!3772}
!3772 = !DILocalVariable(name: "code", arg: 1, scope: !3768, file: !135, line: 4919, type: !134)
!3773 = !DILocation(line: 0, scope: !3768)
!3774 = !DILocation(line: 4921, column: 11, scope: !3768)
!3775 = !DILocation(line: 4921, column: 34, scope: !3768)
!3776 = !DILocation(line: 4922, column: 12, scope: !3768)
!3777 = !DILocation(line: 4922, column: 4, scope: !3768)
!3778 = !DILocation(line: 4922, column: 38, scope: !3768)
!3779 = !DILocation(line: 4921, column: 10, scope: !3768)
!3780 = !DILocation(line: 4921, column: 3, scope: !3768)
!3781 = distinct !DISubprogram(name: "rhs_predicate_for", scope: !3, file: !3, line: 3509, type: !3782, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3788)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!3784, !734}
!3784 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_predicate", file: !391, line: 953, baseType: !3785)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!727, !734}
!3788 = !{!3789}
!3789 = !DILocalVariable(name: "lhs", arg: 1, scope: !3781, file: !3, line: 3509, type: !734)
!3790 = !DILocation(line: 0, scope: !3781)
!3791 = !DILocation(line: 3511, column: 7, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 3511, column: 7)
!3793 = !DILocation(line: 0, scope: !3792)
!3794 = !DILocation(line: 3515, column: 1, scope: !3781)
!3795 = distinct !DISubprogram(name: "is_gimple_reg_rhs_or_call", scope: !3, file: !3, line: 569, type: !3786, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3796)
!3796 = !{!3797}
!3797 = !DILocalVariable(name: "t", arg: 1, scope: !3795, file: !3, line: 569, type: !734)
!3798 = !DILocation(line: 0, scope: !3795)
!3799 = !DILocation(line: 571, column: 33, scope: !3795)
!3800 = !DILocation(line: 571, column: 11, scope: !3795)
!3801 = !DILocation(line: 571, column: 48, scope: !3795)
!3802 = !DILocation(line: 572, column: 4, scope: !3795)
!3803 = !DILocation(line: 572, column: 7, scope: !3795)
!3804 = !DILocation(line: 572, column: 21, scope: !3795)
!3805 = !DILocation(line: 571, column: 3, scope: !3795)
!3806 = distinct !DISubprogram(name: "is_gimple_mem_rhs_or_call", scope: !3, file: !3, line: 580, type: !3786, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3807)
!3807 = !{!3808}
!3808 = !DILocalVariable(name: "t", arg: 1, scope: !3806, file: !3, line: 580, type: !734)
!3809 = !DILocation(line: 0, scope: !3806)
!3810 = !DILocation(line: 584, column: 27, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 584, column: 7)
!3812 = !DILocation(line: 584, column: 7, scope: !3811)
!3813 = !DILocation(line: 0, scope: !3811)
!3814 = !DILocation(line: 584, column: 7, scope: !3806)
!3815 = !DILocation(line: 587, column: 13, scope: !3811)
!3816 = !DILocation(line: 587, column: 31, scope: !3811)
!3817 = !DILocation(line: 587, column: 34, scope: !3811)
!3818 = !DILocation(line: 588, column: 6, scope: !3811)
!3819 = !DILocation(line: 588, column: 9, scope: !3811)
!3820 = !DILocation(line: 588, column: 23, scope: !3811)
!3821 = !DILocation(line: 587, column: 5, scope: !3811)
!3822 = !DILocation(line: 589, column: 1, scope: !3806)
!3823 = distinct !DISubprogram(name: "gimple_fold_indirect_ref", scope: !3, file: !3, line: 3967, type: !3444, scopeLine: 3968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3824)
!3824 = !{!3825, !3826, !3827, !3828, !3829, !3832, !3833, !3836, !3837, !3841, !3842, !3845, !3846, !3847, !3850, !3851, !3852, !3853, !3854, !3857, !3858, !3859, !3862, !3865, !3866}
!3825 = !DILocalVariable(name: "t", arg: 1, scope: !3823, file: !3, line: 3967, type: !734)
!3826 = !DILocalVariable(name: "type", scope: !3823, file: !3, line: 3969, type: !734)
!3827 = !DILocalVariable(name: "sub", scope: !3823, file: !3, line: 3970, type: !734)
!3828 = !DILocalVariable(name: "subtype", scope: !3823, file: !3, line: 3971, type: !734)
!3829 = !DILocalVariable(name: "op", scope: !3830, file: !3, line: 3980, type: !734)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 3979, column: 5)
!3831 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 3978, column: 7)
!3832 = !DILocalVariable(name: "optype", scope: !3830, file: !3, line: 3981, type: !734)
!3833 = !DILocalVariable(name: "type_domain", scope: !3834, file: !3, line: 3991, type: !734)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 3990, column: 8)
!3835 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 3987, column: 11)
!3836 = !DILocalVariable(name: "min_val", scope: !3834, file: !3, line: 3992, type: !734)
!3837 = !DILocalVariable(name: "part_width", scope: !3838, file: !3, line: 4006, type: !734)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 4005, column: 9)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 4003, column: 16)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 3999, column: 16)
!3841 = !DILocalVariable(name: "index", scope: !3838, file: !3, line: 4007, type: !734)
!3842 = !DILocalVariable(name: "op00", scope: !3843, file: !3, line: 4016, type: !734)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 4015, column: 5)
!3844 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 4013, column: 7)
!3845 = !DILocalVariable(name: "op01", scope: !3843, file: !3, line: 4017, type: !734)
!3846 = !DILocalVariable(name: "op00type", scope: !3843, file: !3, line: 4018, type: !734)
!3847 = !DILocalVariable(name: "offset", scope: !3848, file: !3, line: 4026, type: !790)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 4025, column: 2)
!3849 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 4022, column: 11)
!3850 = !DILocalVariable(name: "part_width", scope: !3848, file: !3, line: 4027, type: !734)
!3851 = !DILocalVariable(name: "part_widthi", scope: !3848, file: !3, line: 4028, type: !788)
!3852 = !DILocalVariable(name: "indexi", scope: !3848, file: !3, line: 4030, type: !788)
!3853 = !DILocalVariable(name: "index", scope: !3848, file: !3, line: 4031, type: !734)
!3854 = !DILocalVariable(name: "op00", scope: !3855, file: !3, line: 4043, type: !734)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 4042, column: 5)
!3856 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 4040, column: 7)
!3857 = !DILocalVariable(name: "op01", scope: !3855, file: !3, line: 4044, type: !734)
!3858 = !DILocalVariable(name: "op00type", scope: !3855, file: !3, line: 4045, type: !734)
!3859 = !DILocalVariable(name: "size", scope: !3860, file: !3, line: 4053, type: !734)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 4052, column: 2)
!3861 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 4049, column: 11)
!3862 = !DILocalVariable(name: "type_domain", scope: !3863, file: !3, line: 4064, type: !734)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 4063, column: 5)
!3864 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 4060, column: 7)
!3865 = !DILocalVariable(name: "min_val", scope: !3863, file: !3, line: 4065, type: !734)
!3866 = !DILocalVariable(name: "osub", scope: !3863, file: !3, line: 4066, type: !734)
!3867 = !DILocation(line: 0, scope: !3823)
!3868 = !DILocation(line: 3969, column: 15, scope: !3823)
!3869 = !DILocation(line: 3973, column: 3, scope: !3823)
!3870 = !DILocation(line: 3974, column: 13, scope: !3823)
!3871 = !DILocation(line: 3975, column: 8, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 3975, column: 7)
!3873 = !DILocation(line: 3975, column: 7, scope: !3823)
!3874 = !DILocation(line: 3978, column: 7, scope: !3831)
!3875 = !DILocation(line: 3978, column: 23, scope: !3831)
!3876 = !DILocation(line: 3978, column: 7, scope: !3823)
!3877 = !DILocation(line: 3980, column: 17, scope: !3830)
!3878 = !DILocation(line: 0, scope: !3830)
!3879 = !DILocation(line: 3981, column: 21, scope: !3830)
!3880 = !DILocation(line: 3983, column: 11, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 3983, column: 11)
!3882 = !DILocation(line: 3983, column: 11, scope: !3830)
!3883 = !DILocation(line: 3987, column: 11, scope: !3835)
!3884 = !DILocation(line: 3987, column: 30, scope: !3835)
!3885 = !DILocation(line: 3988, column: 4, scope: !3835)
!3886 = !DILocation(line: 3988, column: 7, scope: !3835)
!3887 = !DILocation(line: 3988, column: 50, scope: !3835)
!3888 = !DILocation(line: 3989, column: 4, scope: !3835)
!3889 = !DILocation(line: 3989, column: 7, scope: !3835)
!3890 = !DILocation(line: 3987, column: 11, scope: !3830)
!3891 = !DILocation(line: 3999, column: 16, scope: !3840)
!3892 = !DILocation(line: 3991, column: 29, scope: !3834)
!3893 = !DILocation(line: 0, scope: !3834)
!3894 = !DILocation(line: 3992, column: 25, scope: !3834)
!3895 = !DILocation(line: 3993, column: 14, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 3993, column: 14)
!3897 = !DILocation(line: 3993, column: 26, scope: !3896)
!3898 = !DILocation(line: 3993, column: 29, scope: !3896)
!3899 = !DILocation(line: 3993, column: 14, scope: !3834)
!3900 = !DILocation(line: 3994, column: 12, scope: !3896)
!3901 = !DILocation(line: 3995, column: 7, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 3995, column: 7)
!3903 = !DILocation(line: 3995, column: 27, scope: !3902)
!3904 = !DILocation(line: 3995, column: 7, scope: !3834)
!3905 = !DILocation(line: 3996, column: 12, scope: !3902)
!3906 = !DILocation(line: 3996, column: 5, scope: !3902)
!3907 = !DILocation(line: 3999, column: 35, scope: !3840)
!3908 = !DILocation(line: 4000, column: 16, scope: !3840)
!3909 = !DILocation(line: 4000, column: 52, scope: !3840)
!3910 = !DILocation(line: 4000, column: 19, scope: !3840)
!3911 = !DILocation(line: 3999, column: 16, scope: !3835)
!3912 = !DILocation(line: 4003, column: 16, scope: !3839)
!3913 = !DILocation(line: 4001, column: 16, scope: !3840)
!3914 = !DILocation(line: 4001, column: 9, scope: !3840)
!3915 = !DILocation(line: 4003, column: 35, scope: !3839)
!3916 = !DILocation(line: 4004, column: 16, scope: !3839)
!3917 = !DILocation(line: 4004, column: 52, scope: !3839)
!3918 = !DILocation(line: 4004, column: 19, scope: !3839)
!3919 = !DILocation(line: 4003, column: 16, scope: !3840)
!3920 = !DILocation(line: 4006, column: 29, scope: !3838)
!3921 = !DILocation(line: 0, scope: !3838)
!3922 = !DILocation(line: 4007, column: 24, scope: !3838)
!3923 = !DILocation(line: 4008, column: 18, scope: !3838)
!3924 = !DILocation(line: 4010, column: 5, scope: !3831)
!3925 = !DILocation(line: 4013, column: 7, scope: !3844)
!3926 = !DILocation(line: 4013, column: 23, scope: !3844)
!3927 = !DILocation(line: 4014, column: 7, scope: !3844)
!3928 = !DILocation(line: 4014, column: 10, scope: !3844)
!3929 = !DILocation(line: 4014, column: 44, scope: !3844)
!3930 = !DILocation(line: 4013, column: 7, scope: !3823)
!3931 = !DILocation(line: 4016, column: 19, scope: !3843)
!3932 = !DILocation(line: 0, scope: !3843)
!3933 = !DILocation(line: 4020, column: 7, scope: !3843)
!3934 = !DILocation(line: 4022, column: 11, scope: !3849)
!3935 = !DILocation(line: 4022, column: 28, scope: !3849)
!3936 = !DILocation(line: 4023, column: 4, scope: !3849)
!3937 = !DILocation(line: 4021, column: 18, scope: !3843)
!3938 = !DILocation(line: 4023, column: 7, scope: !3849)
!3939 = !DILocation(line: 4023, column: 40, scope: !3849)
!3940 = !DILocation(line: 4024, column: 4, scope: !3849)
!3941 = !DILocation(line: 4024, column: 40, scope: !3849)
!3942 = !DILocation(line: 4024, column: 7, scope: !3849)
!3943 = !DILocation(line: 4022, column: 11, scope: !3843)
!3944 = !DILocation(line: 4026, column: 27, scope: !3848)
!3945 = !DILocation(line: 0, scope: !3848)
!3946 = !DILocation(line: 4027, column: 22, scope: !3848)
!3947 = !DILocation(line: 4029, column: 8, scope: !3848)
!3948 = !DILocation(line: 4029, column: 37, scope: !3848)
!3949 = !DILocation(line: 4030, column: 43, scope: !3848)
!3950 = !DILocation(line: 4031, column: 17, scope: !3848)
!3951 = !DILocation(line: 4032, column: 15, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 4032, column: 8)
!3953 = !DILocation(line: 4033, column: 11, scope: !3952)
!3954 = !DILocation(line: 4033, column: 8, scope: !3952)
!3955 = !DILocation(line: 4032, column: 8, scope: !3848)
!3956 = !DILocation(line: 4034, column: 13, scope: !3952)
!3957 = !DILocation(line: 4034, column: 6, scope: !3952)
!3958 = !DILocation(line: 4037, column: 5, scope: !3844)
!3959 = !DILocation(line: 4040, column: 7, scope: !3856)
!3960 = !DILocation(line: 4040, column: 23, scope: !3856)
!3961 = !DILocation(line: 4041, column: 7, scope: !3856)
!3962 = !DILocation(line: 4041, column: 10, scope: !3856)
!3963 = !DILocation(line: 4041, column: 44, scope: !3856)
!3964 = !DILocation(line: 4040, column: 7, scope: !3823)
!3965 = !DILocation(line: 4043, column: 19, scope: !3855)
!3966 = !DILocation(line: 0, scope: !3855)
!3967 = !DILocation(line: 4047, column: 7, scope: !3855)
!3968 = !DILocation(line: 4049, column: 11, scope: !3861)
!3969 = !DILocation(line: 4049, column: 28, scope: !3861)
!3970 = !DILocation(line: 4050, column: 4, scope: !3861)
!3971 = !DILocation(line: 4048, column: 18, scope: !3855)
!3972 = !DILocation(line: 4050, column: 7, scope: !3861)
!3973 = !DILocation(line: 4050, column: 40, scope: !3861)
!3974 = !DILocation(line: 4051, column: 4, scope: !3861)
!3975 = !DILocation(line: 4051, column: 40, scope: !3861)
!3976 = !DILocation(line: 4051, column: 7, scope: !3861)
!3977 = !DILocation(line: 4049, column: 11, scope: !3855)
!3978 = !DILocation(line: 4053, column: 16, scope: !3860)
!3979 = !DILocation(line: 0, scope: !3860)
!3980 = !DILocation(line: 4054, column: 8, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 4054, column: 8)
!3982 = !DILocation(line: 4054, column: 8, scope: !3860)
!3983 = !DILocation(line: 4055, column: 13, scope: !3981)
!3984 = !DILocation(line: 4055, column: 6, scope: !3981)
!3985 = !DILocation(line: 4057, column: 5, scope: !3856)
!3986 = !DILocation(line: 4060, column: 7, scope: !3864)
!3987 = !DILocation(line: 4060, column: 39, scope: !3864)
!3988 = !DILocation(line: 4061, column: 7, scope: !3864)
!3989 = !DILocation(line: 4061, column: 10, scope: !3864)
!3990 = !DILocation(line: 4061, column: 66, scope: !3864)
!3991 = !DILocation(line: 4062, column: 7, scope: !3864)
!3992 = !DILocation(line: 4062, column: 10, scope: !3864)
!3993 = !DILocation(line: 4060, column: 7, scope: !3823)
!3994 = !DILocation(line: 4065, column: 22, scope: !3863)
!3995 = !DILocation(line: 0, scope: !3863)
!3996 = !DILocation(line: 4067, column: 13, scope: !3863)
!3997 = !DILocation(line: 4068, column: 13, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 4068, column: 11)
!3999 = !DILocation(line: 4068, column: 11, scope: !3863)
!4000 = !DILocation(line: 4069, column: 8, scope: !3998)
!4001 = !DILocation(line: 4069, column: 2, scope: !3998)
!4002 = !DILocation(line: 4070, column: 21, scope: !3863)
!4003 = !DILocation(line: 4071, column: 11, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 4071, column: 11)
!4005 = !DILocation(line: 4071, column: 23, scope: !4004)
!4006 = !DILocation(line: 4071, column: 26, scope: !4004)
!4007 = !DILocation(line: 4071, column: 11, scope: !3863)
!4008 = !DILocation(line: 4072, column: 9, scope: !4004)
!4009 = !DILocation(line: 4073, column: 11, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 4073, column: 11)
!4011 = !DILocation(line: 4073, column: 31, scope: !4010)
!4012 = !DILocation(line: 4073, column: 11, scope: !3863)
!4013 = !DILocation(line: 4074, column: 9, scope: !4010)
!4014 = !DILocation(line: 4074, column: 2, scope: !4010)
!4015 = !DILocation(line: 4077, column: 3, scope: !3823)
!4016 = !DILocation(line: 4078, column: 1, scope: !3823)
!4017 = distinct !DISubprogram(name: "gimple_seq_last", scope: !391, file: !391, line: 178, type: !4018, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4020)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!1053, !3318}
!4020 = !{!4021}
!4021 = !DILocalVariable(name: "s", arg: 1, scope: !4017, file: !391, line: 178, type: !3318)
!4022 = !DILocation(line: 0, scope: !4017)
!4023 = !DILocation(line: 180, column: 10, scope: !4017)
!4024 = !DILocation(line: 180, column: 17, scope: !4017)
!4025 = !DILocation(line: 180, column: 3, scope: !4017)
!4026 = distinct !DISubprogram(name: "gimplify_expr", scope: !3, file: !3, line: 6448, type: !4027, scopeLine: 6450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4030)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!390, !1093, !2939, !2939, !3785, !4029}
!4029 = !DIDerivedType(tag: DW_TAG_typedef, name: "fallback_t", file: !391, line: 971, baseType: !392)
!4030 = !{!4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4050, !4053, !4055, !4056, !4058, !4059, !4060, !4062, !4063, !4065, !4066, !4067, !4069, !4070, !4072, !4073, !4075, !4076, !4078, !4079, !4082, !4084, !4085, !4091, !4094, !4095, !4096, !4097}
!4031 = !DILocalVariable(name: "expr_p", arg: 1, scope: !4026, file: !3, line: 6448, type: !1093)
!4032 = !DILocalVariable(name: "pre_p", arg: 2, scope: !4026, file: !3, line: 6448, type: !2939)
!4033 = !DILocalVariable(name: "post_p", arg: 3, scope: !4026, file: !3, line: 6448, type: !2939)
!4034 = !DILocalVariable(name: "gimple_test_f", arg: 4, scope: !4026, file: !3, line: 6449, type: !3785)
!4035 = !DILocalVariable(name: "fallback", arg: 5, scope: !4026, file: !3, line: 6449, type: !4029)
!4036 = !DILocalVariable(name: "tmp", scope: !4026, file: !3, line: 6451, type: !734)
!4037 = !DILocalVariable(name: "internal_pre", scope: !4026, file: !3, line: 6452, type: !1048)
!4038 = !DILocalVariable(name: "internal_post", scope: !4026, file: !3, line: 6453, type: !1048)
!4039 = !DILocalVariable(name: "save_expr", scope: !4026, file: !3, line: 6454, type: !734)
!4040 = !DILocalVariable(name: "is_statement", scope: !4026, file: !3, line: 6455, type: !727)
!4041 = !DILocalVariable(name: "saved_location", scope: !4026, file: !3, line: 6456, type: !859)
!4042 = !DILocalVariable(name: "ret", scope: !4026, file: !3, line: 6457, type: !390)
!4043 = !DILocalVariable(name: "pre_last_gsi", scope: !4026, file: !3, line: 6458, type: !3336)
!4044 = !DILocalVariable(name: "post_last_gsi", scope: !4026, file: !3, line: 6458, type: !3336)
!4045 = !DILocalVariable(name: "type", scope: !4046, file: !3, line: 6632, type: !734)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 6631, column: 6)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6630, column: 8)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 6557, column: 2)
!4049 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6525, column: 5)
!4050 = !DILocalVariable(name: "ix", scope: !4051, file: !3, line: 6777, type: !788)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 6776, column: 6)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6775, column: 8)
!4053 = !DILocalVariable(name: "ce", scope: !4051, file: !3, line: 6778, type: !4054)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!4055 = !DILocalVariable(name: "temp", scope: !4051, file: !3, line: 6779, type: !734)
!4056 = !DILocalVariable(name: "r0", scope: !4057, file: !3, line: 6814, type: !390)
!4057 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6813, column: 4)
!4058 = !DILocalVariable(name: "r1", scope: !4057, file: !3, line: 6814, type: !390)
!4059 = !DILocalVariable(name: "r2", scope: !4057, file: !3, line: 6814, type: !390)
!4060 = !DILocalVariable(name: "r0", scope: !4061, file: !3, line: 6830, type: !390)
!4061 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6829, column: 4)
!4062 = !DILocalVariable(name: "r1", scope: !4061, file: !3, line: 6830, type: !390)
!4063 = !DILocalVariable(name: "eval", scope: !4064, file: !3, line: 6857, type: !1048)
!4064 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6856, column: 4)
!4065 = !DILocalVariable(name: "cleanup", scope: !4064, file: !3, line: 6857, type: !1048)
!4066 = !DILocalVariable(name: "try_", scope: !4064, file: !3, line: 6858, type: !1058)
!4067 = !DILocalVariable(name: "c", scope: !4068, file: !3, line: 6892, type: !1058)
!4068 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6891, column: 4)
!4069 = !DILocalVariable(name: "handler", scope: !4068, file: !3, line: 6893, type: !1048)
!4070 = !DILocalVariable(name: "ehf", scope: !4071, file: !3, line: 6903, type: !1058)
!4071 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6902, column: 4)
!4072 = !DILocalVariable(name: "failure", scope: !4071, file: !3, line: 6904, type: !1048)
!4073 = !DILocalVariable(name: "r0", scope: !4074, file: !3, line: 6916, type: !390)
!4074 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6915, column: 4)
!4075 = !DILocalVariable(name: "r1", scope: !4074, file: !3, line: 6916, type: !390)
!4076 = !DILocalVariable(name: "body", scope: !4077, file: !3, line: 6990, type: !1048)
!4077 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6989, column: 4)
!4078 = !DILocalVariable(name: "g", scope: !4077, file: !3, line: 6991, type: !1058)
!4079 = !DILocalVariable(name: "type", scope: !4080, file: !3, line: 7065, type: !734)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 7064, column: 3)
!4081 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 7053, column: 6)
!4082 = !DILocalVariable(name: "r0", scope: !4083, file: !3, line: 7087, type: !390)
!4083 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 7086, column: 8)
!4084 = !DILocalVariable(name: "r1", scope: !4083, file: !3, line: 7087, type: !390)
!4085 = !DILocalVariable(name: "code", scope: !4086, file: !3, line: 7145, type: !134)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 7142, column: 2)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 7141, column: 16)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 7139, column: 11)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 7136, column: 5)
!4090 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7135, column: 7)
!4091 = !DILocalVariable(name: "type", scope: !4092, file: !3, line: 7178, type: !734)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 7175, column: 2)
!4093 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 7173, column: 16)
!4094 = !DILocalVariable(name: "tmp", scope: !4092, file: !3, line: 7187, type: !734)
!4095 = !DILabel(scope: !4081, name: "expr_2", file: !3, line: 7085)
!4096 = !DILabel(scope: !4048, name: "dont_recalculate", file: !3, line: 7112)
!4097 = !DILabel(scope: !4026, name: "out", file: !3, line: 7333)
!4098 = !DILocation(line: 0, scope: !4026)
!4099 = !DILocation(line: 6451, column: 3, scope: !4026)
!4100 = !DILocation(line: 6452, column: 3, scope: !4026)
!4101 = !DILocation(line: 6452, column: 14, scope: !4026)
!4102 = !DILocation(line: 6453, column: 3, scope: !4026)
!4103 = !DILocation(line: 6453, column: 14, scope: !4026)
!4104 = !DILocation(line: 6458, column: 3, scope: !4026)
!4105 = !DILocation(line: 6460, column: 15, scope: !4026)
!4106 = !DILocation(line: 6461, column: 17, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6461, column: 7)
!4108 = !DILocation(line: 6461, column: 7, scope: !4026)
!4109 = !DILocation(line: 6465, column: 32, scope: !4026)
!4110 = !DILocation(line: 6466, column: 7, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6466, column: 7)
!4112 = !DILocation(line: 6467, column: 5, scope: !4111)
!4113 = !DILocation(line: 6466, column: 7, scope: !4026)
!4114 = !DILocation(line: 6470, column: 21, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6470, column: 7)
!4116 = !DILocation(line: 6470, column: 7, scope: !4026)
!4117 = !DILocation(line: 6471, column: 5, scope: !4115)
!4118 = !DILocation(line: 6472, column: 26, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 6472, column: 12)
!4120 = !DILocation(line: 6473, column: 29, scope: !4119)
!4121 = !DILocation(line: 6473, column: 12, scope: !4119)
!4122 = !DILocation(line: 6474, column: 29, scope: !4119)
!4123 = !DILocation(line: 6475, column: 29, scope: !4119)
!4124 = !DILocation(line: 6476, column: 29, scope: !4119)
!4125 = !DILocation(line: 6477, column: 29, scope: !4119)
!4126 = !DILocation(line: 6478, column: 29, scope: !4119)
!4127 = !DILocation(line: 6479, column: 29, scope: !4119)
!4128 = !DILocation(line: 6480, column: 5, scope: !4119)
!4129 = !DILocation(line: 6481, column: 26, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 6481, column: 12)
!4131 = !DILocation(line: 6482, column: 22, scope: !4130)
!4132 = !DILocation(line: 6482, column: 5, scope: !4130)
!4133 = !DILocation(line: 6483, column: 5, scope: !4130)
!4134 = !DILocation(line: 6484, column: 26, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 6484, column: 12)
!4136 = !DILocation(line: 6484, column: 12, scope: !4130)
!4137 = !DILocation(line: 6485, column: 5, scope: !4135)
!4138 = !DILocation(line: 6486, column: 12, scope: !4135)
!4139 = !DILocation(line: 6487, column: 5, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 6486, column: 12)
!4141 = !DILocation(line: 6493, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 6489, column: 5)
!4143 = !DILocation(line: 6500, column: 13, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6500, column: 7)
!4145 = !DILocation(line: 6500, column: 7, scope: !4026)
!4146 = !DILocation(line: 6503, column: 14, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6503, column: 7)
!4148 = !DILocation(line: 6503, column: 7, scope: !4026)
!4149 = !DILocation(line: 6514, column: 18, scope: !4026)
!4150 = !DILocation(line: 6514, column: 28, scope: !4026)
!4151 = !DILocation(line: 6515, column: 19, scope: !4026)
!4152 = !DILocation(line: 6515, column: 29, scope: !4026)
!4153 = !DILocation(line: 6517, column: 20, scope: !4026)
!4154 = !DILocation(line: 6518, column: 20, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 6518, column: 7)
!4156 = !DILocation(line: 6518, column: 17, scope: !4155)
!4157 = !DILocation(line: 6519, column: 7, scope: !4155)
!4158 = !DILocation(line: 0, scope: !4049)
!4159 = !DILocation(line: 6519, column: 10, scope: !4155)
!4160 = !DILocation(line: 6518, column: 7, scope: !4026)
!4161 = !DILocation(line: 6520, column: 22, scope: !4155)
!4162 = !DILocation(line: 6520, column: 20, scope: !4155)
!4163 = !DILocation(line: 6520, column: 5, scope: !4155)
!4164 = !DILocation(line: 0, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 7025, column: 8)
!4166 = !DILocation(line: 0, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 7030, column: 6)
!4168 = !DILocation(line: 0, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 7045, column: 7)
!4170 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 7035, column: 8)
!4171 = !DILocation(line: 0, scope: !4077)
!4172 = !DILocation(line: 0, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6939, column: 4)
!4174 = !DILocation(line: 0, scope: !4071)
!4175 = !DILocation(line: 0, scope: !4068)
!4176 = !DILocation(line: 0, scope: !4064)
!4177 = !DILocation(line: 0, scope: !4051)
!4178 = !DILocation(line: 0, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 6780, column: 8)
!4180 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 6780, column: 8)
!4181 = !DILocation(line: 0, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6708, column: 8)
!4183 = !DILocation(line: 0, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6658, column: 8)
!4185 = !DILocation(line: 0, scope: !4048)
!4186 = !DILocation(line: 0, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6599, column: 8)
!4188 = !DILocation(line: 6524, column: 3, scope: !4026)
!4189 = !DILocation(line: 6528, column: 7, scope: !4049)
!4190 = !DILocation(line: 6534, column: 24, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 6534, column: 11)
!4192 = !DILocation(line: 6534, column: 21, scope: !4191)
!4193 = !DILocation(line: 6535, column: 4, scope: !4191)
!4194 = !DILocation(line: 6535, column: 8, scope: !4191)
!4195 = !DILocation(line: 6536, column: 8, scope: !4191)
!4196 = !DILocation(line: 6536, column: 33, scope: !4191)
!4197 = !DILocation(line: 6534, column: 11, scope: !4049)
!4198 = !DILocation(line: 6544, column: 18, scope: !4049)
!4199 = !DILocation(line: 6544, column: 7, scope: !4049)
!4200 = !DILocation(line: 6545, column: 11, scope: !4049)
!4201 = !DILocation(line: 6556, column: 15, scope: !4049)
!4202 = !DILocation(line: 6547, column: 8, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 6547, column: 8)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 6546, column: 2)
!4205 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 6545, column: 11)
!4206 = !DILocation(line: 6547, column: 16, scope: !4203)
!4207 = !DILocation(line: 6547, column: 8, scope: !4204)
!4208 = !DILocation(line: 6549, column: 16, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 6549, column: 8)
!4210 = !DILocation(line: 6549, column: 8, scope: !4204)
!4211 = !DILocation(line: 6556, column: 7, scope: !4049)
!4212 = !DILocation(line: 6564, column: 10, scope: !4048)
!4213 = !DILocation(line: 6566, column: 4, scope: !4048)
!4214 = !DILocation(line: 6574, column: 10, scope: !4048)
!4215 = !DILocation(line: 6576, column: 4, scope: !4048)
!4216 = !DILocation(line: 6579, column: 10, scope: !4048)
!4217 = !DILocation(line: 6585, column: 8, scope: !4048)
!4218 = !DILocation(line: 6587, column: 43, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 6586, column: 6)
!4220 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6585, column: 8)
!4221 = !DILocation(line: 6587, column: 18, scope: !4219)
!4222 = !DILocation(line: 6587, column: 16, scope: !4219)
!4223 = !DILocation(line: 6588, column: 8, scope: !4219)
!4224 = !DILocation(line: 6589, column: 6, scope: !4219)
!4225 = !DILocation(line: 6593, column: 10, scope: !4048)
!4226 = !DILocation(line: 6599, column: 8, scope: !4048)
!4227 = !DILocation(line: 6601, column: 43, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 6600, column: 6)
!4229 = !DILocation(line: 6601, column: 18, scope: !4228)
!4230 = !DILocation(line: 6601, column: 16, scope: !4228)
!4231 = !DILocation(line: 6602, column: 8, scope: !4228)
!4232 = !DILocation(line: 6603, column: 6, scope: !4228)
!4233 = !DILocation(line: 6607, column: 4, scope: !4048)
!4234 = !DILocation(line: 6610, column: 10, scope: !4048)
!4235 = !DILocation(line: 6611, column: 4, scope: !4048)
!4236 = !DILocation(line: 6614, column: 10, scope: !4048)
!4237 = !DILocation(line: 6615, column: 4, scope: !4048)
!4238 = !DILocation(line: 6619, column: 10, scope: !4048)
!4239 = !DILocation(line: 6621, column: 4, scope: !4048)
!4240 = !DILocation(line: 6626, column: 10, scope: !4048)
!4241 = !DILocation(line: 6627, column: 4, scope: !4048)
!4242 = !DILocation(line: 6630, column: 8, scope: !4047)
!4243 = !DILocation(line: 6630, column: 40, scope: !4047)
!4244 = !DILocation(line: 6630, column: 8, scope: !4048)
!4245 = !DILocation(line: 6632, column: 20, scope: !4046)
!4246 = !DILocation(line: 0, scope: !4046)
!4247 = !DILocation(line: 6633, column: 18, scope: !4046)
!4248 = !DILocation(line: 6633, column: 16, scope: !4046)
!4249 = !DILocation(line: 6638, column: 26, scope: !4048)
!4250 = !DILocation(line: 6638, column: 10, scope: !4048)
!4251 = !DILocation(line: 6640, column: 30, scope: !4048)
!4252 = !DILocation(line: 6640, column: 4, scope: !4048)
!4253 = !DILocation(line: 6641, column: 4, scope: !4048)
!4254 = !DILocation(line: 6644, column: 10, scope: !4048)
!4255 = !DILocation(line: 6645, column: 4, scope: !4048)
!4256 = !DILocation(line: 6648, column: 10, scope: !4048)
!4257 = !DILocation(line: 6649, column: 4, scope: !4048)
!4258 = !DILocation(line: 6652, column: 8, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6652, column: 8)
!4260 = !DILocation(line: 6652, column: 8, scope: !4048)
!4261 = !DILocation(line: 6658, column: 8, scope: !4184)
!4262 = !DILocation(line: 6659, column: 8, scope: !4184)
!4263 = !DILocation(line: 6663, column: 18, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 6660, column: 6)
!4265 = !DILocation(line: 6663, column: 16, scope: !4264)
!4266 = !DILocation(line: 6664, column: 8, scope: !4264)
!4267 = !DILocation(line: 6667, column: 10, scope: !4048)
!4268 = !DILocation(line: 6668, column: 8, scope: !4048)
!4269 = !DILocation(line: 6670, column: 8, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6670, column: 8)
!4271 = !DILocation(line: 6670, column: 16, scope: !4270)
!4272 = !DILocation(line: 6670, column: 8, scope: !4048)
!4273 = !DILocation(line: 6676, column: 26, scope: !4048)
!4274 = !DILocation(line: 6676, column: 10, scope: !4048)
!4275 = !DILocation(line: 6678, column: 30, scope: !4048)
!4276 = !DILocation(line: 6678, column: 4, scope: !4048)
!4277 = !DILocation(line: 6679, column: 4, scope: !4048)
!4278 = !DILocation(line: 6682, column: 37, scope: !4048)
!4279 = !DILocation(line: 6682, column: 14, scope: !4048)
!4280 = !DILocation(line: 6682, column: 12, scope: !4048)
!4281 = !DILocation(line: 6683, column: 16, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6683, column: 8)
!4283 = !DILocation(line: 6683, column: 8, scope: !4048)
!4284 = !DILocation(line: 6688, column: 26, scope: !4048)
!4285 = !DILocation(line: 6688, column: 10, scope: !4048)
!4286 = !DILocation(line: 6690, column: 30, scope: !4048)
!4287 = !DILocation(line: 6690, column: 4, scope: !4048)
!4288 = !DILocation(line: 6691, column: 4, scope: !4048)
!4289 = !DILocation(line: 6708, column: 8, scope: !4048)
!4290 = !DILocation(line: 6711, column: 16, scope: !4182)
!4291 = !DILocation(line: 6711, column: 14, scope: !4182)
!4292 = !DILocation(line: 6715, column: 10, scope: !4048)
!4293 = !DILocation(line: 6716, column: 4, scope: !4048)
!4294 = !DILocation(line: 6719, column: 10, scope: !4048)
!4295 = !DILocation(line: 6720, column: 4, scope: !4048)
!4296 = !DILocation(line: 6723, column: 10, scope: !4048)
!4297 = !DILocation(line: 6724, column: 4, scope: !4048)
!4298 = !DILocation(line: 6727, column: 10, scope: !4048)
!4299 = !DILocation(line: 6728, column: 4, scope: !4048)
!4300 = !DILocation(line: 6731, column: 10, scope: !4048)
!4301 = !DILocation(line: 6732, column: 4, scope: !4048)
!4302 = !DILocation(line: 6737, column: 8, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6737, column: 8)
!4304 = !DILocation(line: 6737, column: 47, scope: !4303)
!4305 = !DILocation(line: 6737, column: 8, scope: !4048)
!4306 = !DILocation(line: 6739, column: 30, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 6738, column: 6)
!4308 = !DILocation(line: 6739, column: 14, scope: !4307)
!4309 = !DILocation(line: 6741, column: 16, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 6741, column: 12)
!4311 = !DILocation(line: 6741, column: 12, scope: !4307)
!4312 = !DILocation(line: 6745, column: 25, scope: !4048)
!4313 = !DILocation(line: 6745, column: 6, scope: !4048)
!4314 = !DILocation(line: 6744, column: 4, scope: !4048)
!4315 = !DILocation(line: 6746, column: 4, scope: !4048)
!4316 = !DILocation(line: 6750, column: 26, scope: !4048)
!4317 = !DILocation(line: 6751, column: 12, scope: !4048)
!4318 = !DILocation(line: 6750, column: 4, scope: !4048)
!4319 = !DILocation(line: 6749, column: 4, scope: !4048)
!4320 = !DILocation(line: 6753, column: 4, scope: !4048)
!4321 = !DILocation(line: 6757, column: 4, scope: !4048)
!4322 = !DILocation(line: 6760, column: 26, scope: !4048)
!4323 = !DILocation(line: 6760, column: 6, scope: !4048)
!4324 = !DILocation(line: 6759, column: 4, scope: !4048)
!4325 = !DILocation(line: 6761, column: 4, scope: !4048)
!4326 = !DILocation(line: 6764, column: 10, scope: !4048)
!4327 = !DILocation(line: 6765, column: 4, scope: !4048)
!4328 = !DILocation(line: 6768, column: 10, scope: !4048)
!4329 = !DILocation(line: 6769, column: 4, scope: !4048)
!4330 = !DILocation(line: 6775, column: 8, scope: !4048)
!4331 = !DILocation(line: 6778, column: 8, scope: !4051)
!4332 = !DILocation(line: 6779, column: 8, scope: !4051)
!4333 = !DILocation(line: 6779, column: 13, scope: !4051)
!4334 = !DILocation(line: 6780, column: 13, scope: !4180)
!4335 = !DILocation(line: 6781, column: 6, scope: !4179)
!4336 = !DILocation(line: 0, scope: !4180)
!4337 = !DILocation(line: 6780, column: 8, scope: !4180)
!4338 = !DILocation(line: 6784, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 6784, column: 7)
!4340 = !DILocation(line: 6784, column: 7, scope: !4179)
!4341 = !DILocation(line: 6785, column: 5, scope: !4339)
!4342 = !DILocation(line: 6783, column: 8, scope: !4179)
!4343 = !DILocation(line: 6780, column: 8, scope: !4179)
!4344 = distinct !{!4344, !4337, !4345}
!4345 = !DILocation(line: 6785, column: 47, scope: !4180)
!4346 = !DILocation(line: 6787, column: 18, scope: !4051)
!4347 = !DILocation(line: 6787, column: 16, scope: !4051)
!4348 = !DILocation(line: 6789, column: 6, scope: !4052)
!4349 = !DILocation(line: 6789, column: 6, scope: !4051)
!4350 = !DILocation(line: 6796, column: 18, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 6795, column: 6)
!4352 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 6794, column: 13)
!4353 = !DILocation(line: 6796, column: 16, scope: !4351)
!4354 = !DILocation(line: 6797, column: 8, scope: !4351)
!4355 = !DILocation(line: 6798, column: 6, scope: !4351)
!4356 = !DILocation(line: 6809, column: 10, scope: !4048)
!4357 = !DILocation(line: 6810, column: 4, scope: !4048)
!4358 = !DILocation(line: 6816, column: 27, scope: !4057)
!4359 = !DILocation(line: 6816, column: 11, scope: !4057)
!4360 = !DILocation(line: 0, scope: !4057)
!4361 = !DILocation(line: 6818, column: 27, scope: !4057)
!4362 = !DILocation(line: 6818, column: 11, scope: !4057)
!4363 = !DILocation(line: 6820, column: 27, scope: !4057)
!4364 = !DILocation(line: 6820, column: 11, scope: !4057)
!4365 = !DILocation(line: 6822, column: 32, scope: !4057)
!4366 = !DILocation(line: 6822, column: 6, scope: !4057)
!4367 = !DILocation(line: 6824, column: 12, scope: !4057)
!4368 = !DILocation(line: 0, scope: !4061)
!4369 = !DILocation(line: 6832, column: 10, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 6832, column: 10)
!4371 = !DILocation(line: 6832, column: 10, scope: !4061)
!4372 = !DILocation(line: 6833, column: 13, scope: !4370)
!4373 = !DILocation(line: 6833, column: 8, scope: !4370)
!4374 = !DILocation(line: 6835, column: 15, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 6835, column: 15)
!4376 = !DILocation(line: 6835, column: 15, scope: !4370)
!4377 = !DILocation(line: 6836, column: 29, scope: !4375)
!4378 = !DILocation(line: 6836, column: 13, scope: !4375)
!4379 = !DILocation(line: 6836, column: 8, scope: !4375)
!4380 = !DILocation(line: 0, scope: !4370)
!4381 = !DILocation(line: 6838, column: 10, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 6838, column: 10)
!4383 = !DILocation(line: 6838, column: 10, scope: !4061)
!4384 = !DILocation(line: 6839, column: 13, scope: !4382)
!4385 = !DILocation(line: 6839, column: 8, scope: !4382)
!4386 = !DILocation(line: 6842, column: 12, scope: !4061)
!4387 = !DILocation(line: 6844, column: 4, scope: !4048)
!4388 = !DILocation(line: 6848, column: 4, scope: !4048)
!4389 = !DILocation(line: 6851, column: 10, scope: !4048)
!4390 = !DILocation(line: 6852, column: 4, scope: !4048)
!4391 = !DILocation(line: 6857, column: 6, scope: !4064)
!4392 = !DILocation(line: 6860, column: 21, scope: !4064)
!4393 = !DILocation(line: 6860, column: 11, scope: !4064)
!4394 = !DILocation(line: 6861, column: 24, scope: !4064)
!4395 = !DILocation(line: 6861, column: 6, scope: !4064)
!4396 = !DILocation(line: 6862, column: 24, scope: !4064)
!4397 = !DILocation(line: 6862, column: 6, scope: !4064)
!4398 = !DILocation(line: 6864, column: 30, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 6864, column: 10)
!4400 = !DILocation(line: 6864, column: 10, scope: !4399)
!4401 = !DILocation(line: 6864, column: 10, scope: !4064)
!4402 = !DILocation(line: 6866, column: 3, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 6865, column: 8)
!4404 = !DILocation(line: 6868, column: 3, scope: !4403)
!4405 = !DILocation(line: 6870, column: 37, scope: !4064)
!4406 = !DILocation(line: 6871, column: 10, scope: !4064)
!4407 = !DILocation(line: 6871, column: 30, scope: !4064)
!4408 = !DILocation(line: 6870, column: 13, scope: !4064)
!4409 = !DILocation(line: 6874, column: 10, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 6874, column: 10)
!4411 = !DILocation(line: 6874, column: 30, scope: !4410)
!4412 = !DILocation(line: 6874, column: 10, scope: !4064)
!4413 = !DILocation(line: 6876, column: 13, scope: !4410)
!4414 = !DILocation(line: 6875, column: 8, scope: !4410)
!4415 = !DILocation(line: 6877, column: 6, scope: !4064)
!4416 = !DILocation(line: 6879, column: 6, scope: !4064)
!4417 = !DILocation(line: 6880, column: 4, scope: !4048)
!4418 = !DILocation(line: 6883, column: 10, scope: !4048)
!4419 = !DILocation(line: 6884, column: 4, scope: !4048)
!4420 = !DILocation(line: 6887, column: 10, scope: !4048)
!4421 = !DILocation(line: 6888, column: 4, scope: !4048)
!4422 = !DILocation(line: 6893, column: 6, scope: !4068)
!4423 = !DILocation(line: 6893, column: 17, scope: !4068)
!4424 = !DILocation(line: 6894, column: 24, scope: !4068)
!4425 = !DILocation(line: 6894, column: 6, scope: !4068)
!4426 = !DILocation(line: 6895, column: 30, scope: !4068)
!4427 = !DILocation(line: 6895, column: 53, scope: !4068)
!4428 = !DILocation(line: 6895, column: 10, scope: !4068)
!4429 = !DILocation(line: 6896, column: 6, scope: !4068)
!4430 = !DILocation(line: 6899, column: 4, scope: !4048)
!4431 = !DILocation(line: 6904, column: 6, scope: !4071)
!4432 = !DILocation(line: 6904, column: 17, scope: !4071)
!4433 = !DILocation(line: 6906, column: 24, scope: !4071)
!4434 = !DILocation(line: 6906, column: 6, scope: !4071)
!4435 = !DILocation(line: 6907, column: 36, scope: !4071)
!4436 = !DILocation(line: 6907, column: 63, scope: !4071)
!4437 = !DILocation(line: 6907, column: 12, scope: !4071)
!4438 = !DILocation(line: 6908, column: 34, scope: !4071)
!4439 = !DILocation(line: 6908, column: 6, scope: !4071)
!4440 = !DILocation(line: 6909, column: 6, scope: !4071)
!4441 = !DILocation(line: 6912, column: 4, scope: !4048)
!4442 = !DILocation(line: 6917, column: 27, scope: !4074)
!4443 = !DILocation(line: 6917, column: 11, scope: !4074)
!4444 = !DILocation(line: 0, scope: !4074)
!4445 = !DILocation(line: 6919, column: 27, scope: !4074)
!4446 = !DILocation(line: 6919, column: 11, scope: !4074)
!4447 = !DILocation(line: 6921, column: 6, scope: !4074)
!4448 = !DILocation(line: 6921, column: 34, scope: !4074)
!4449 = !DILocation(line: 6922, column: 12, scope: !4074)
!4450 = !DILocation(line: 6924, column: 4, scope: !4048)
!4451 = !DILocation(line: 6930, column: 27, scope: !4048)
!4452 = !DILocation(line: 6932, column: 4, scope: !4048)
!4453 = !DILocation(line: 6935, column: 10, scope: !4048)
!4454 = !DILocation(line: 6936, column: 4, scope: !4048)
!4455 = !DILocation(line: 6940, column: 22, scope: !4173)
!4456 = !DILocation(line: 6940, column: 6, scope: !4173)
!4457 = !DILocation(line: 6943, column: 22, scope: !4173)
!4458 = !DILocation(line: 6943, column: 6, scope: !4173)
!4459 = !DILocation(line: 6946, column: 4, scope: !4048)
!4460 = !DILocation(line: 6950, column: 10, scope: !4048)
!4461 = !DILocation(line: 6951, column: 4, scope: !4048)
!4462 = !DILocation(line: 6955, column: 8, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 6955, column: 8)
!4464 = !DILocation(line: 6955, column: 8, scope: !4048)
!4465 = !DILocation(line: 6956, column: 6, scope: !4463)
!4466 = !DILocation(line: 6966, column: 4, scope: !4048)
!4467 = !DILocation(line: 6968, column: 4, scope: !4048)
!4468 = !DILocation(line: 6971, column: 4, scope: !4048)
!4469 = !DILocation(line: 6973, column: 4, scope: !4048)
!4470 = !DILocation(line: 6976, column: 10, scope: !4048)
!4471 = !DILocation(line: 6977, column: 4, scope: !4048)
!4472 = !DILocation(line: 6981, column: 4, scope: !4048)
!4473 = !DILocation(line: 6983, column: 4, scope: !4048)
!4474 = !DILocation(line: 6990, column: 6, scope: !4077)
!4475 = !DILocation(line: 6990, column: 17, scope: !4077)
!4476 = !DILocation(line: 6993, column: 24, scope: !4077)
!4477 = !DILocation(line: 6993, column: 6, scope: !4077)
!4478 = !DILocation(line: 6994, column: 14, scope: !4077)
!4479 = !DILocation(line: 6994, column: 6, scope: !4077)
!4480 = !DILocation(line: 6997, column: 40, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 6995, column: 8)
!4482 = !DILocation(line: 6997, column: 14, scope: !4481)
!4483 = !DILocation(line: 6998, column: 10, scope: !4481)
!4484 = !DILocation(line: 7000, column: 39, scope: !4481)
!4485 = !DILocation(line: 7000, column: 14, scope: !4481)
!4486 = !DILocation(line: 7001, column: 3, scope: !4481)
!4487 = !DILocation(line: 7003, column: 33, scope: !4481)
!4488 = !DILocation(line: 7003, column: 7, scope: !4481)
!4489 = !DILocation(line: 7004, column: 3, scope: !4481)
!4490 = !DILocation(line: 7006, column: 34, scope: !4481)
!4491 = !DILocation(line: 7007, column: 17, scope: !4481)
!4492 = !DILocation(line: 7006, column: 7, scope: !4481)
!4493 = !DILocation(line: 7008, column: 3, scope: !4481)
!4494 = !DILocation(line: 7010, column: 3, scope: !4481)
!4495 = !DILocation(line: 7011, column: 8, scope: !4481)
!4496 = !DILocation(line: 7012, column: 6, scope: !4077)
!4497 = !DILocation(line: 7015, column: 4, scope: !4048)
!4498 = !DILocation(line: 7018, column: 10, scope: !4048)
!4499 = !DILocation(line: 7019, column: 4, scope: !4048)
!4500 = !DILocation(line: 7025, column: 8, scope: !4165)
!4501 = !DILocation(line: 7025, column: 46, scope: !4165)
!4502 = !DILocation(line: 7026, column: 8, scope: !4165)
!4503 = !DILocation(line: 7027, column: 6, scope: !4165)
!4504 = !DILocation(line: 7028, column: 6, scope: !4165)
!4505 = !DILocation(line: 7028, column: 33, scope: !4165)
!4506 = !DILocation(line: 7029, column: 6, scope: !4165)
!4507 = !DILocation(line: 7026, column: 18, scope: !4165)
!4508 = !DILocation(line: 7026, column: 16, scope: !4165)
!4509 = !DILocation(line: 7025, column: 8, scope: !4048)
!4510 = !DILocation(line: 7035, column: 8, scope: !4170)
!4511 = !DILocation(line: 7031, column: 16, scope: !4167)
!4512 = !DILocation(line: 7032, column: 8, scope: !4167)
!4513 = !DILocation(line: 7035, column: 46, scope: !4170)
!4514 = !DILocation(line: 7036, column: 8, scope: !4170)
!4515 = !DILocation(line: 7036, column: 11, scope: !4170)
!4516 = !DILocation(line: 7036, column: 49, scope: !4170)
!4517 = !DILocation(line: 7037, column: 8, scope: !4170)
!4518 = !DILocation(line: 7037, column: 11, scope: !4170)
!4519 = !DILocation(line: 7039, column: 8, scope: !4170)
!4520 = !DILocation(line: 7040, column: 6, scope: !4170)
!4521 = !DILocation(line: 7041, column: 6, scope: !4170)
!4522 = !DILocation(line: 7042, column: 6, scope: !4170)
!4523 = !DILocation(line: 7043, column: 6, scope: !4170)
!4524 = !DILocation(line: 7039, column: 18, scope: !4170)
!4525 = !DILocation(line: 7039, column: 16, scope: !4170)
!4526 = !DILocation(line: 7035, column: 8, scope: !4048)
!4527 = !DILocation(line: 7052, column: 12, scope: !4048)
!4528 = !DILocation(line: 7046, column: 26, scope: !4169)
!4529 = !DILocation(line: 7046, column: 24, scope: !4169)
!4530 = !DILocation(line: 7047, column: 9, scope: !4169)
!4531 = !DILocation(line: 7052, column: 4, scope: !4048)
!4532 = !DILocation(line: 7065, column: 17, scope: !4080)
!4533 = !DILocation(line: 0, scope: !4080)
!4534 = !DILocation(line: 7067, column: 10, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 7067, column: 9)
!4536 = !DILocation(line: 7067, column: 9, scope: !4080)
!4537 = !DILocation(line: 7069, column: 14, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 7069, column: 14)
!4539 = !DILocation(line: 7069, column: 31, scope: !4538)
!4540 = !DILocation(line: 7069, column: 14, scope: !4535)
!4541 = !DILocation(line: 7070, column: 13, scope: !4538)
!4542 = !DILocation(line: 7070, column: 7, scope: !4538)
!4543 = !DILocation(line: 7072, column: 13, scope: !4538)
!4544 = !DILocation(line: 7080, column: 30, scope: !4081)
!4545 = !DILocation(line: 7080, column: 14, scope: !4081)
!4546 = !DILocation(line: 7082, column: 8, scope: !4081)
!4547 = !DILocation(line: 7085, column: 6, scope: !4081)
!4548 = !DILocation(line: 7089, column: 24, scope: !4083)
!4549 = !DILocation(line: 7089, column: 8, scope: !4083)
!4550 = !DILocation(line: 0, scope: !4083)
!4551 = !DILocation(line: 7091, column: 24, scope: !4083)
!4552 = !DILocation(line: 7091, column: 8, scope: !4083)
!4553 = !DILocation(line: 7094, column: 9, scope: !4083)
!4554 = !DILocation(line: 7104, column: 8, scope: !4081)
!4555 = !DILocation(line: 0, scope: !4081)
!4556 = !DILocation(line: 7110, column: 30, scope: !4048)
!4557 = !DILocation(line: 7110, column: 4, scope: !4048)
!4558 = !DILocation(line: 7117, column: 15, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 7117, column: 11)
!4560 = !DILocation(line: 7117, column: 24, scope: !4559)
!4561 = !DILocation(line: 7117, column: 28, scope: !4559)
!4562 = !DILocation(line: 7117, column: 36, scope: !4559)
!4563 = !DILocation(line: 7117, column: 44, scope: !4559)
!4564 = !DILocation(line: 7117, column: 55, scope: !4559)
!4565 = !DILocation(line: 7117, column: 11, scope: !4049)
!4566 = !DILocation(line: 7118, column: 2, scope: !4559)
!4567 = !DILocation(line: 7120, column: 14, scope: !4026)
!4568 = !DILocation(line: 7119, column: 5, scope: !4049)
!4569 = distinct !{!4569, !4188, !4570}
!4570 = !DILocation(line: 7120, column: 22, scope: !4026)
!4571 = !DILocation(line: 7124, column: 7, scope: !4026)
!4572 = !DILocation(line: 7126, column: 11, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 7125, column: 5)
!4574 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7124, column: 7)
!4575 = !DILocation(line: 7127, column: 10, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 7126, column: 11)
!4577 = !DILocation(line: 7127, column: 2, scope: !4576)
!4578 = !DILocation(line: 7133, column: 3, scope: !4026)
!4579 = !DILocation(line: 7135, column: 27, scope: !4090)
!4580 = !DILocation(line: 7135, column: 30, scope: !4090)
!4581 = !DILocation(line: 7135, column: 38, scope: !4090)
!4582 = !DILocation(line: 7135, column: 42, scope: !4090)
!4583 = !DILocation(line: 7135, column: 7, scope: !4026)
!4584 = !DILocation(line: 7139, column: 12, scope: !4088)
!4585 = !DILocation(line: 7139, column: 11, scope: !4089)
!4586 = !DILocation(line: 7140, column: 10, scope: !4088)
!4587 = !DILocation(line: 7140, column: 2, scope: !4088)
!4588 = !DILocation(line: 7141, column: 17, scope: !4087)
!4589 = !DILocation(line: 7141, column: 16, scope: !4088)
!4590 = !DILocation(line: 7145, column: 26, scope: !4086)
!4591 = !DILocation(line: 7147, column: 4, scope: !4086)
!4592 = !DILocation(line: 7153, column: 24, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 7148, column: 6)
!4594 = !DILocation(line: 7153, column: 8, scope: !4593)
!4595 = !DILocation(line: 7155, column: 8, scope: !4593)
!4596 = !DILocation(line: 7159, column: 24, scope: !4593)
!4597 = !DILocation(line: 7159, column: 8, scope: !4593)
!4598 = !DILocation(line: 7161, column: 24, scope: !4593)
!4599 = !DILocation(line: 7161, column: 8, scope: !4593)
!4600 = !DILocation(line: 7163, column: 8, scope: !4593)
!4601 = !DILocation(line: 7168, column: 8, scope: !4593)
!4602 = !DILocation(line: 7169, column: 6, scope: !4593)
!4603 = !DILocation(line: 7171, column: 12, scope: !4086)
!4604 = !DILocation(line: 7172, column: 2, scope: !4086)
!4605 = !DILocation(line: 7173, column: 16, scope: !4093)
!4606 = !DILocation(line: 7174, column: 9, scope: !4093)
!4607 = !DILocation(line: 7174, column: 12, scope: !4093)
!4608 = !DILocation(line: 7174, column: 44, scope: !4093)
!4609 = !DILocation(line: 7173, column: 16, scope: !4087)
!4610 = !DILocation(line: 7178, column: 16, scope: !4092)
!4611 = !DILocation(line: 0, scope: !4092)
!4612 = !DILocation(line: 7187, column: 15, scope: !4092)
!4613 = !DILocation(line: 7188, column: 4, scope: !4092)
!4614 = !DILocation(line: 7189, column: 26, scope: !4092)
!4615 = !DILocation(line: 7189, column: 4, scope: !4092)
!4616 = !DILocation(line: 7190, column: 12, scope: !4092)
!4617 = !DILocation(line: 7191, column: 2, scope: !4092)
!4618 = !DILocation(line: 7198, column: 10, scope: !4093)
!4619 = !DILocation(line: 7203, column: 27, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7203, column: 7)
!4621 = !DILocation(line: 7203, column: 7, scope: !4026)
!4622 = !DILocation(line: 7207, column: 15, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 7204, column: 5)
!4624 = !DILocation(line: 7209, column: 32, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 7209, column: 11)
!4626 = !DILocation(line: 7209, column: 12, scope: !4625)
!4627 = !DILocation(line: 7210, column: 4, scope: !4625)
!4628 = !DILocation(line: 7210, column: 28, scope: !4625)
!4629 = !DILocation(line: 7210, column: 8, scope: !4625)
!4630 = !DILocation(line: 7209, column: 11, scope: !4623)
!4631 = !DILocation(line: 7212, column: 41, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 7211, column: 2)
!4633 = !DILocation(line: 7212, column: 4, scope: !4632)
!4634 = !DILocation(line: 7213, column: 33, scope: !4632)
!4635 = !DILocation(line: 7213, column: 4, scope: !4632)
!4636 = !DILocation(line: 7214, column: 2, scope: !4632)
!4637 = !DILocation(line: 7220, column: 32, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 7220, column: 11)
!4639 = !DILocation(line: 7220, column: 12, scope: !4638)
!4640 = !DILocation(line: 7220, column: 11, scope: !4623)
!4641 = !DILocation(line: 7221, column: 36, scope: !4638)
!4642 = !DILocation(line: 7221, column: 58, scope: !4638)
!4643 = !DILocation(line: 7221, column: 2, scope: !4638)
!4644 = !DILocation(line: 7223, column: 32, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 7223, column: 11)
!4646 = !DILocation(line: 7223, column: 12, scope: !4645)
!4647 = !DILocation(line: 7223, column: 11, scope: !4623)
!4648 = !DILocation(line: 7224, column: 36, scope: !4645)
!4649 = !DILocation(line: 7225, column: 8, scope: !4645)
!4650 = !DILocation(line: 7224, column: 2, scope: !4645)
!4651 = !DILocation(line: 7262, column: 27, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7262, column: 7)
!4653 = !DILocation(line: 7262, column: 7, scope: !4652)
!4654 = !DILocation(line: 7262, column: 42, scope: !4652)
!4655 = !DILocation(line: 7262, column: 63, scope: !4652)
!4656 = !DILocation(line: 7262, column: 45, scope: !4652)
!4657 = !DILocation(line: 7262, column: 7, scope: !4026)
!4658 = !DILocation(line: 7273, column: 7, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7272, column: 7)
!4660 = !DILocation(line: 7273, column: 30, scope: !4659)
!4661 = !DILocation(line: 7273, column: 10, scope: !4659)
!4662 = !DILocation(line: 7274, column: 7, scope: !4659)
!4663 = !DILocation(line: 7274, column: 33, scope: !4659)
!4664 = !DILocation(line: 7274, column: 10, scope: !4659)
!4665 = !DILocation(line: 7272, column: 7, scope: !4026)
!4666 = !DILocation(line: 7279, column: 39, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 7275, column: 5)
!4668 = !DILocation(line: 7279, column: 55, scope: !4667)
!4669 = !DILocation(line: 7279, column: 13, scope: !4667)
!4670 = !DILocation(line: 7279, column: 11, scope: !4667)
!4671 = !DILocation(line: 7280, column: 7, scope: !4667)
!4672 = !DILocation(line: 7281, column: 17, scope: !4667)
!4673 = !DILocation(line: 7281, column: 15, scope: !4667)
!4674 = !DILocation(line: 7282, column: 5, scope: !4667)
!4675 = !DILocation(line: 7283, column: 22, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 7283, column: 12)
!4677 = !DILocation(line: 7283, column: 35, scope: !4676)
!4678 = !DILocation(line: 7283, column: 65, scope: !4676)
!4679 = !DILocation(line: 7283, column: 38, scope: !4676)
!4680 = !DILocation(line: 7283, column: 12, scope: !4659)
!4681 = !DILocation(line: 7289, column: 7, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 7284, column: 5)
!4683 = !DILocation(line: 7291, column: 32, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 7291, column: 11)
!4685 = !DILocation(line: 7291, column: 12, scope: !4684)
!4686 = !DILocation(line: 7291, column: 60, scope: !4684)
!4687 = !DILocation(line: 7291, column: 47, scope: !4684)
!4688 = !DILocation(line: 0, scope: !4684)
!4689 = !DILocation(line: 7296, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 7295, column: 2)
!4691 = !DILocation(line: 7296, column: 12, scope: !4690)
!4692 = !DILocation(line: 7297, column: 8, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 7297, column: 8)
!4694 = !DILocation(line: 7297, column: 40, scope: !4693)
!4695 = !DILocation(line: 7298, column: 8, scope: !4693)
!4696 = !DILocation(line: 7298, column: 43, scope: !4693)
!4697 = !DILocation(line: 7297, column: 8, scope: !4690)
!4698 = !DILocation(line: 7299, column: 6, scope: !4693)
!4699 = !DILocation(line: 7299, column: 34, scope: !4693)
!4700 = !DILocation(line: 7325, column: 3, scope: !4026)
!4701 = !DILocation(line: 7302, column: 12, scope: !4684)
!4702 = !DILocation(line: 7302, column: 10, scope: !4684)
!4703 = !DILocation(line: 7315, column: 7, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 7305, column: 5)
!4705 = !DILocation(line: 7327, column: 28, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 7327, column: 7)
!4707 = !DILocation(line: 7327, column: 8, scope: !4706)
!4708 = !DILocation(line: 7327, column: 7, scope: !4026)
!4709 = !DILocation(line: 7329, column: 35, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 7328, column: 5)
!4711 = !DILocation(line: 7329, column: 50, scope: !4710)
!4712 = !DILocation(line: 7329, column: 7, scope: !4710)
!4713 = !DILocation(line: 7330, column: 36, scope: !4710)
!4714 = !DILocation(line: 7330, column: 7, scope: !4710)
!4715 = !DILocation(line: 7331, column: 5, scope: !4710)
!4716 = !DILocation(line: 7333, column: 2, scope: !4026)
!4717 = !DILocation(line: 7334, column: 18, scope: !4026)
!4718 = !DILocation(line: 7335, column: 3, scope: !4026)
!4719 = !DILocation(line: 7336, column: 1, scope: !4026)
!4720 = distinct !DISubprogram(name: "omp_firstprivatize_variable", scope: !3, file: !3, line: 5279, type: !4721, scopeLine: 5280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4723)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{null, !2191, !734}
!4723 = !{!4724, !4725, !4726}
!4724 = !DILocalVariable(name: "ctx", arg: 1, scope: !4720, file: !3, line: 5279, type: !2191)
!4725 = !DILocalVariable(name: "decl", arg: 2, scope: !4720, file: !3, line: 5279, type: !734)
!4726 = !DILocalVariable(name: "n", scope: !4720, file: !3, line: 5281, type: !2201)
!4727 = !DILocation(line: 0, scope: !4720)
!4728 = !DILocation(line: 5283, column: 12, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 5283, column: 7)
!4730 = !DILocation(line: 5283, column: 20, scope: !4729)
!4731 = !DILocation(line: 5283, column: 24, scope: !4729)
!4732 = !DILocation(line: 5283, column: 7, scope: !4720)
!4733 = !DILocation(line: 0, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 5287, column: 5)
!4735 = !DILocation(line: 5286, column: 3, scope: !4720)
!4736 = !DILocation(line: 5288, column: 35, scope: !4734)
!4737 = !DILocation(line: 5288, column: 11, scope: !4734)
!4738 = !DILocation(line: 5289, column: 13, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 5289, column: 11)
!4740 = !DILocation(line: 5289, column: 11, scope: !4734)
!4741 = !DILocation(line: 5291, column: 11, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 5291, column: 8)
!4743 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 5290, column: 2)
!4744 = !DILocation(line: 5291, column: 17, scope: !4742)
!4745 = !DILocation(line: 5291, column: 8, scope: !4743)
!4746 = !DILocation(line: 5292, column: 47, scope: !4742)
!4747 = !DILocation(line: 5292, column: 35, scope: !4742)
!4748 = !DILocation(line: 5292, column: 15, scope: !4742)
!4749 = !DILocation(line: 5295, column: 2, scope: !4743)
!4750 = !DILocation(line: 5296, column: 21, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 5296, column: 16)
!4752 = !DILocation(line: 5296, column: 33, scope: !4751)
!4753 = !DILocation(line: 5296, column: 16, scope: !4739)
!4754 = !DILocation(line: 5297, column: 2, scope: !4751)
!4755 = !DILocation(line: 5299, column: 18, scope: !4734)
!4756 = !DILocation(line: 5300, column: 5, scope: !4734)
!4757 = distinct !{!4757, !4735, !4758}
!4758 = !DILocation(line: 5301, column: 13, scope: !4720)
!4759 = !DILocation(line: 5302, column: 1, scope: !4720)
!4760 = distinct !DISubprogram(name: "gsi_last", scope: !391, file: !391, line: 4435, type: !3376, scopeLine: 4436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4761)
!4761 = !{!4762, !4763}
!4762 = !DILocalVariable(name: "seq", arg: 1, scope: !4760, file: !391, line: 4435, type: !1048)
!4763 = !DILocalVariable(name: "i", scope: !4760, file: !391, line: 4437, type: !3336)
!4764 = !DILocation(line: 0, scope: !4760)
!4765 = !DILocation(line: 4437, column: 24, scope: !4760)
!4766 = !DILocation(line: 4439, column: 11, scope: !4760)
!4767 = !DILocation(line: 4439, column: 5, scope: !4760)
!4768 = !DILocation(line: 4439, column: 9, scope: !4760)
!4769 = !DILocation(line: 4440, column: 5, scope: !4760)
!4770 = !DILocation(line: 4440, column: 9, scope: !4760)
!4771 = !DILocation(line: 4441, column: 11, scope: !4760)
!4772 = !DILocation(line: 4441, column: 17, scope: !4760)
!4773 = !DILocation(line: 4441, column: 27, scope: !4760)
!4774 = !DILocation(line: 4441, column: 20, scope: !4760)
!4775 = !DILocation(line: 4441, column: 10, scope: !4760)
!4776 = !DILocation(line: 4441, column: 35, scope: !4760)
!4777 = !DILocation(line: 4441, column: 5, scope: !4760)
!4778 = !DILocation(line: 4441, column: 8, scope: !4760)
!4779 = !DILocation(line: 4443, column: 3, scope: !4760)
!4780 = distinct !DISubprogram(name: "gimplify_self_mod_expr", scope: !3, file: !3, line: 2073, type: !4781, scopeLine: 2075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4783)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!390, !1093, !2939, !2939, !727}
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798}
!4784 = !DILocalVariable(name: "expr_p", arg: 1, scope: !4780, file: !3, line: 2073, type: !1093)
!4785 = !DILocalVariable(name: "pre_p", arg: 2, scope: !4780, file: !3, line: 2073, type: !2939)
!4786 = !DILocalVariable(name: "post_p", arg: 3, scope: !4780, file: !3, line: 2073, type: !2939)
!4787 = !DILocalVariable(name: "want_value", arg: 4, scope: !4780, file: !3, line: 2074, type: !727)
!4788 = !DILocalVariable(name: "code", scope: !4780, file: !3, line: 2076, type: !134)
!4789 = !DILocalVariable(name: "lhs", scope: !4780, file: !3, line: 2077, type: !734)
!4790 = !DILocalVariable(name: "lvalue", scope: !4780, file: !3, line: 2077, type: !734)
!4791 = !DILocalVariable(name: "rhs", scope: !4780, file: !3, line: 2077, type: !734)
!4792 = !DILocalVariable(name: "t1", scope: !4780, file: !3, line: 2077, type: !734)
!4793 = !DILocalVariable(name: "post", scope: !4780, file: !3, line: 2078, type: !1048)
!4794 = !DILocalVariable(name: "orig_post_p", scope: !4780, file: !3, line: 2078, type: !2939)
!4795 = !DILocalVariable(name: "postfix", scope: !4780, file: !3, line: 2079, type: !727)
!4796 = !DILocalVariable(name: "arith_code", scope: !4780, file: !3, line: 2080, type: !134)
!4797 = !DILocalVariable(name: "ret", scope: !4780, file: !3, line: 2081, type: !390)
!4798 = !DILocalVariable(name: "loc", scope: !4780, file: !3, line: 2082, type: !859)
!4799 = !DILocation(line: 0, scope: !4780)
!4800 = !DILocation(line: 2077, column: 3, scope: !4780)
!4801 = !DILocation(line: 2078, column: 3, scope: !4780)
!4802 = !DILocation(line: 2078, column: 14, scope: !4780)
!4803 = !DILocation(line: 2082, column: 20, scope: !4780)
!4804 = !DILocation(line: 2084, column: 10, scope: !4780)
!4805 = !DILocation(line: 2086, column: 3, scope: !4780)
!4806 = !DILocation(line: 2090, column: 34, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2090, column: 7)
!4808 = !DILocation(line: 2098, column: 7, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2098, column: 7)
!4810 = !DILocation(line: 2098, column: 7, scope: !4780)
!4811 = !DILocation(line: 2102, column: 33, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2102, column: 7)
!4813 = !DILocation(line: 0, scope: !4812)
!4814 = !DILocation(line: 2108, column: 12, scope: !4780)
!4815 = !DILocation(line: 2108, column: 10, scope: !4780)
!4816 = !DILocation(line: 2109, column: 9, scope: !4780)
!4817 = !DILocation(line: 2110, column: 11, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2110, column: 7)
!4819 = !DILocation(line: 2110, column: 7, scope: !4780)
!4820 = !DILocation(line: 2114, column: 9, scope: !4780)
!4821 = !DILocation(line: 2114, column: 7, scope: !4780)
!4822 = !DILocation(line: 2115, column: 9, scope: !4780)
!4823 = !DILocation(line: 2121, column: 7, scope: !4780)
!4824 = !DILocation(line: 2123, column: 12, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 2123, column: 11)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2122, column: 5)
!4827 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2121, column: 7)
!4828 = !DILocation(line: 2123, column: 11, scope: !4826)
!4829 = !DILocation(line: 2125, column: 22, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 2124, column: 2)
!4831 = !DILocation(line: 2125, column: 4, scope: !4830)
!4832 = !DILocation(line: 2126, column: 39, scope: !4830)
!4833 = !DILocation(line: 2126, column: 55, scope: !4830)
!4834 = !DILocation(line: 2126, column: 13, scope: !4830)
!4835 = !DILocation(line: 2126, column: 11, scope: !4830)
!4836 = !DILocation(line: 2127, column: 4, scope: !4830)
!4837 = !DILocation(line: 2128, column: 42, scope: !4830)
!4838 = !DILocation(line: 2128, column: 58, scope: !4830)
!4839 = !DILocation(line: 2128, column: 13, scope: !4830)
!4840 = !DILocation(line: 2128, column: 11, scope: !4830)
!4841 = !DILocation(line: 2129, column: 2, scope: !4830)
!4842 = !DILocation(line: 2130, column: 13, scope: !4826)
!4843 = !DILocation(line: 2131, column: 15, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 2131, column: 11)
!4845 = !DILocation(line: 2131, column: 11, scope: !4826)
!4846 = !DILocation(line: 0, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2136, column: 7)
!4848 = !DILocation(line: 2136, column: 7, scope: !4847)
!4849 = !DILocation(line: 2136, column: 7, scope: !4780)
!4850 = !DILocation(line: 2138, column: 36, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2137, column: 5)
!4852 = !DILocation(line: 2138, column: 13, scope: !4851)
!4853 = !DILocation(line: 2139, column: 22, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2139, column: 11)
!4855 = !DILocation(line: 2139, column: 11, scope: !4851)
!4856 = !DILocation(line: 2140, column: 8, scope: !4854)
!4857 = !DILocation(line: 2140, column: 2, scope: !4854)
!4858 = !DILocation(line: 2144, column: 8, scope: !4780)
!4859 = !DILocation(line: 0, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2146, column: 7)
!4861 = !DILocation(line: 2146, column: 7, scope: !4780)
!4862 = !DILocation(line: 2148, column: 7, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 2147, column: 5)
!4864 = !DILocation(line: 2149, column: 42, scope: !4863)
!4865 = !DILocation(line: 2149, column: 7, scope: !4863)
!4866 = !DILocation(line: 2150, column: 17, scope: !4863)
!4867 = !DILocation(line: 2150, column: 15, scope: !4863)
!4868 = !DILocation(line: 2151, column: 7, scope: !4863)
!4869 = !DILocation(line: 2155, column: 17, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 2154, column: 5)
!4871 = !DILocation(line: 2155, column: 15, scope: !4870)
!4872 = !DILocation(line: 2156, column: 7, scope: !4870)
!4873 = !DILocation(line: 2158, column: 1, scope: !4780)
!4874 = distinct !DISubprogram(name: "gimplify_compound_lval", scope: !3, file: !3, line: 1891, type: !4875, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4877)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!390, !1093, !2939, !2939, !4029}
!4877 = !{!4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4892, !4897, !4900, !4901, !4902, !4907, !4908, !4909, !4913}
!4878 = !DILocalVariable(name: "expr_p", arg: 1, scope: !4874, file: !3, line: 1891, type: !1093)
!4879 = !DILocalVariable(name: "pre_p", arg: 2, scope: !4874, file: !3, line: 1891, type: !2939)
!4880 = !DILocalVariable(name: "post_p", arg: 3, scope: !4874, file: !3, line: 1891, type: !2939)
!4881 = !DILocalVariable(name: "fallback", arg: 4, scope: !4874, file: !3, line: 1892, type: !4029)
!4882 = !DILocalVariable(name: "p", scope: !4874, file: !3, line: 1894, type: !1093)
!4883 = !DILocalVariable(name: "stack", scope: !4874, file: !3, line: 1895, type: !2176)
!4884 = !DILocalVariable(name: "ret", scope: !4874, file: !3, line: 1896, type: !390)
!4885 = !DILocalVariable(name: "tret", scope: !4874, file: !3, line: 1896, type: !390)
!4886 = !DILocalVariable(name: "i", scope: !4874, file: !3, line: 1897, type: !392)
!4887 = !DILocalVariable(name: "loc", scope: !4874, file: !3, line: 1898, type: !859)
!4888 = !DILocalVariable(name: "t", scope: !4889, file: !3, line: 1941, type: !734)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1940, column: 5)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 1939, column: 3)
!4891 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1939, column: 3)
!4892 = !DILocalVariable(name: "low", scope: !4893, file: !3, line: 1950, type: !734)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 1949, column: 6)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1948, column: 8)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 1944, column: 2)
!4896 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1943, column: 11)
!4897 = !DILocalVariable(name: "elmt_type", scope: !4898, file: !3, line: 1963, type: !734)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 1962, column: 6)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1961, column: 8)
!4900 = !DILocalVariable(name: "elmt_size", scope: !4898, file: !3, line: 1964, type: !734)
!4901 = !DILocalVariable(name: "factor", scope: !4898, file: !3, line: 1965, type: !734)
!4902 = !DILocalVariable(name: "offset", scope: !4903, file: !3, line: 1986, type: !734)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 1985, column: 6)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 1984, column: 8)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 1982, column: 2)
!4906 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 1981, column: 16)
!4907 = !DILocalVariable(name: "field", scope: !4903, file: !3, line: 1987, type: !734)
!4908 = !DILocalVariable(name: "factor", scope: !4903, file: !3, line: 1988, type: !734)
!4909 = !DILocalVariable(name: "t", scope: !4910, file: !3, line: 2017, type: !734)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2016, column: 5)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2015, column: 3)
!4912 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 2015, column: 3)
!4913 = !DILabel(scope: !4914, name: "restart", file: !3, line: 1907)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1906, column: 5)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 1905, column: 3)
!4916 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1905, column: 3)
!4917 = !DILocation(line: 0, scope: !4874)
!4918 = !DILocation(line: 1895, column: 3, scope: !4874)
!4919 = !DILocation(line: 1898, column: 20, scope: !4874)
!4920 = !DILocation(line: 1902, column: 11, scope: !4874)
!4921 = !DILocation(line: 1902, column: 9, scope: !4874)
!4922 = !DILocation(line: 1905, column: 8, scope: !4916)
!4923 = !DILocation(line: 0, scope: !4916)
!4924 = !DILocation(line: 0, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 1909, column: 11)
!4926 = !DILocation(line: 1906, column: 5, scope: !4915)
!4927 = !DILocation(line: 1907, column: 5, scope: !4914)
!4928 = !DILocation(line: 1909, column: 11, scope: !4925)
!4929 = !DILocation(line: 1909, column: 26, scope: !4925)
!4930 = !DILocation(line: 1909, column: 11, scope: !4914)
!4931 = !DILocation(line: 1910, column: 7, scope: !4925)
!4932 = !DILocation(line: 1910, column: 5, scope: !4925)
!4933 = !DILocation(line: 1910, column: 2, scope: !4925)
!4934 = !DILocation(line: 1912, column: 32, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 1912, column: 11)
!4936 = !DILocation(line: 1912, column: 11, scope: !4935)
!4937 = !DILocation(line: 0, scope: !4914)
!4938 = !DILocation(line: 1912, column: 11, scope: !4914)
!4939 = !DILocation(line: 1916, column: 17, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1916, column: 16)
!4941 = !DILocation(line: 1916, column: 32, scope: !4940)
!4942 = !DILocation(line: 1916, column: 44, scope: !4940)
!4943 = !DILocation(line: 1917, column: 12, scope: !4940)
!4944 = !DILocation(line: 1917, column: 42, scope: !4940)
!4945 = !DILocation(line: 1916, column: 16, scope: !4935)
!4946 = !DILocation(line: 1922, column: 7, scope: !4914)
!4947 = !DILocation(line: 1905, column: 27, scope: !4915)
!4948 = !DILocation(line: 1905, column: 3, scope: !4915)
!4949 = distinct !{!4949, !4950, !4951}
!4950 = !DILocation(line: 1905, column: 3, scope: !4916)
!4951 = !DILocation(line: 1923, column: 5, scope: !4916)
!4952 = !DILocation(line: 1925, column: 3, scope: !4874)
!4953 = !DILocation(line: 1939, column: 12, scope: !4891)
!4954 = !DILocation(line: 1939, column: 8, scope: !4891)
!4955 = !DILocation(line: 1896, column: 24, scope: !4874)
!4956 = !DILocation(line: 0, scope: !4891)
!4957 = !DILocation(line: 1939, column: 44, scope: !4890)
!4958 = !DILocation(line: 1939, column: 3, scope: !4891)
!4959 = !DILocation(line: 1941, column: 16, scope: !4889)
!4960 = !DILocation(line: 0, scope: !4889)
!4961 = !DILocation(line: 1943, column: 11, scope: !4896)
!4962 = !DILocation(line: 1943, column: 25, scope: !4896)
!4963 = !DILocation(line: 1943, column: 38, scope: !4896)
!4964 = !DILocation(line: 1943, column: 55, scope: !4896)
!4965 = !DILocation(line: 1943, column: 11, scope: !4889)
!4966 = !DILocation(line: 1948, column: 8, scope: !4894)
!4967 = !DILocation(line: 1948, column: 28, scope: !4894)
!4968 = !DILocation(line: 1948, column: 8, scope: !4895)
!4969 = !DILocation(line: 1950, column: 33, scope: !4893)
!4970 = !DILocation(line: 1950, column: 19, scope: !4893)
!4971 = !DILocation(line: 0, scope: !4893)
!4972 = !DILocation(line: 1951, column: 13, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 1951, column: 12)
!4974 = !DILocation(line: 1951, column: 12, scope: !4893)
!4975 = !DILocation(line: 1953, column: 25, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 1952, column: 3)
!4977 = !DILocation(line: 1954, column: 12, scope: !4976)
!4978 = !DILocation(line: 1957, column: 11, scope: !4976)
!4979 = !DILocation(line: 1958, column: 3, scope: !4976)
!4980 = !DILocation(line: 1961, column: 9, scope: !4899)
!4981 = !DILocation(line: 1961, column: 8, scope: !4895)
!4982 = !DILocation(line: 1963, column: 25, scope: !4898)
!4983 = !DILocation(line: 1964, column: 39, scope: !4898)
!4984 = !DILocation(line: 1964, column: 25, scope: !4898)
!4985 = !DILocation(line: 0, scope: !4898)
!4986 = !DILocation(line: 1965, column: 22, scope: !4898)
!4987 = !DILocation(line: 1969, column: 20, scope: !4898)
!4988 = !DILocation(line: 1971, column: 13, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 1971, column: 12)
!4990 = !DILocation(line: 1971, column: 12, scope: !4898)
!4991 = !DILocation(line: 1973, column: 25, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1972, column: 3)
!4993 = !DILocation(line: 1974, column: 12, scope: !4992)
!4994 = !DILocation(line: 1977, column: 11, scope: !4992)
!4995 = !DILocation(line: 1978, column: 3, scope: !4992)
!4996 = !DILocation(line: 1981, column: 30, scope: !4906)
!4997 = !DILocation(line: 1981, column: 16, scope: !4896)
!4998 = !DILocation(line: 1984, column: 9, scope: !4904)
!4999 = !DILocation(line: 1984, column: 8, scope: !4905)
!5000 = !DILocation(line: 1986, column: 36, scope: !4903)
!5001 = !DILocation(line: 1986, column: 22, scope: !4903)
!5002 = !DILocation(line: 0, scope: !4903)
!5003 = !DILocation(line: 1987, column: 21, scope: !4903)
!5004 = !DILocation(line: 1989, column: 5, scope: !4903)
!5005 = !DILocation(line: 1992, column: 17, scope: !4903)
!5006 = !DILocation(line: 1994, column: 13, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1994, column: 12)
!5008 = !DILocation(line: 1994, column: 12, scope: !4903)
!5009 = !DILocation(line: 1996, column: 25, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1995, column: 3)
!5011 = !DILocation(line: 1997, column: 12, scope: !5010)
!5012 = !DILocation(line: 2000, column: 11, scope: !5010)
!5013 = !DILocation(line: 2001, column: 3, scope: !5010)
!5014 = !DILocation(line: 1939, column: 3, scope: !4890)
!5015 = distinct !{!5015, !4958, !5016}
!5016 = !DILocation(line: 2004, column: 5, scope: !4891)
!5017 = !DILocation(line: 2010, column: 13, scope: !4874)
!5018 = !DILocation(line: 2009, column: 10, scope: !4874)
!5019 = !DILocation(line: 2011, column: 9, scope: !4874)
!5020 = !DILocation(line: 2015, column: 3, scope: !4874)
!5021 = !DILocation(line: 2011, column: 7, scope: !4874)
!5022 = !DILocation(line: 2015, column: 10, scope: !4911)
!5023 = !DILocation(line: 2015, column: 35, scope: !4911)
!5024 = !DILocation(line: 2015, column: 3, scope: !4912)
!5025 = !DILocation(line: 2017, column: 16, scope: !4910)
!5026 = !DILocation(line: 0, scope: !4910)
!5027 = !DILocation(line: 2019, column: 11, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 2019, column: 11)
!5029 = !DILocation(line: 2019, column: 25, scope: !5028)
!5030 = !DILocation(line: 2019, column: 38, scope: !5028)
!5031 = !DILocation(line: 2019, column: 55, scope: !5028)
!5032 = !DILocation(line: 2019, column: 11, scope: !4910)
!5033 = !DILocation(line: 2022, column: 34, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 2022, column: 8)
!5035 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2020, column: 2)
!5036 = !DILocation(line: 2022, column: 9, scope: !5034)
!5037 = !DILocation(line: 2022, column: 8, scope: !5035)
!5038 = !DILocation(line: 2024, column: 15, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2023, column: 6)
!5040 = !DILocation(line: 2026, column: 14, scope: !5039)
!5041 = !DILocation(line: 2027, column: 6, scope: !5039)
!5042 = !DILocation(line: 2029, column: 30, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2029, column: 16)
!5044 = !DILocation(line: 2029, column: 16, scope: !5028)
!5045 = !DILocation(line: 2031, column: 27, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 2030, column: 2)
!5047 = !DILocation(line: 2031, column: 11, scope: !5046)
!5048 = !DILocation(line: 2033, column: 10, scope: !5046)
!5049 = !DILocation(line: 2034, column: 27, scope: !5046)
!5050 = !DILocation(line: 2034, column: 11, scope: !5046)
!5051 = !DILocation(line: 2036, column: 10, scope: !5046)
!5052 = !DILocation(line: 2039, column: 7, scope: !4910)
!5053 = !DILocation(line: 2045, column: 7, scope: !4910)
!5054 = !DILocation(line: 2015, column: 3, scope: !4911)
!5055 = distinct !{!5055, !5024, !5056}
!5056 = !DILocation(line: 2046, column: 5, scope: !4912)
!5057 = !DILocation(line: 2049, column: 17, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 2049, column: 7)
!5059 = !DILocation(line: 2049, column: 30, scope: !5058)
!5060 = !DILocation(line: 2049, column: 33, scope: !5058)
!5061 = !DILocation(line: 2049, column: 53, scope: !5058)
!5062 = !DILocation(line: 2049, column: 7, scope: !4874)
!5063 = !DILocation(line: 2051, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2050, column: 5)
!5065 = !DILocation(line: 2052, column: 13, scope: !5064)
!5066 = !DILocation(line: 2053, column: 5, scope: !5064)
!5067 = !DILocation(line: 2055, column: 3, scope: !4874)
!5068 = !DILocation(line: 2058, column: 1, scope: !4874)
!5069 = !DILocation(line: 2057, column: 3, scope: !4874)
!5070 = distinct !DISubprogram(name: "gimplify_cond_expr", scope: !3, file: !3, line: 2858, type: !5071, scopeLine: 2859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!390, !1093, !2939, !4029}
!5073 = !{!5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5095, !5098}
!5074 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5070, file: !3, line: 2858, type: !1093)
!5075 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5070, file: !3, line: 2858, type: !2939)
!5076 = !DILocalVariable(name: "fallback", arg: 3, scope: !5070, file: !3, line: 2858, type: !4029)
!5077 = !DILocalVariable(name: "expr", scope: !5070, file: !3, line: 2860, type: !734)
!5078 = !DILocalVariable(name: "tmp", scope: !5070, file: !3, line: 2861, type: !734)
!5079 = !DILocalVariable(name: "type", scope: !5070, file: !3, line: 2861, type: !734)
!5080 = !DILocalVariable(name: "arm1", scope: !5070, file: !3, line: 2861, type: !734)
!5081 = !DILocalVariable(name: "arm2", scope: !5070, file: !3, line: 2861, type: !734)
!5082 = !DILocalVariable(name: "ret", scope: !5070, file: !3, line: 2862, type: !390)
!5083 = !DILocalVariable(name: "label_true", scope: !5070, file: !3, line: 2863, type: !734)
!5084 = !DILocalVariable(name: "label_false", scope: !5070, file: !3, line: 2863, type: !734)
!5085 = !DILocalVariable(name: "label_cont", scope: !5070, file: !3, line: 2863, type: !734)
!5086 = !DILocalVariable(name: "have_then_clause_p", scope: !5070, file: !3, line: 2864, type: !727)
!5087 = !DILocalVariable(name: "have_else_clause_p", scope: !5070, file: !3, line: 2864, type: !727)
!5088 = !DILocalVariable(name: "gimple_cond", scope: !5070, file: !3, line: 2865, type: !1058)
!5089 = !DILocalVariable(name: "pred_code", scope: !5070, file: !3, line: 2866, type: !134)
!5090 = !DILocalVariable(name: "seq", scope: !5070, file: !3, line: 2867, type: !1048)
!5091 = !DILocalVariable(name: "loc", scope: !5070, file: !3, line: 2868, type: !859)
!5092 = !DILocalVariable(name: "result", scope: !5093, file: !3, line: 2876, type: !734)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 2875, column: 5)
!5094 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2874, column: 7)
!5095 = !DILocalVariable(name: "type", scope: !5096, file: !3, line: 2898, type: !734)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2897, column: 2)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 2880, column: 11)
!5098 = !DILocalVariable(name: "g", scope: !5099, file: !3, line: 3040, type: !1058)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 3039, column: 6)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 3036, column: 8)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 3029, column: 2)
!5102 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 3024, column: 11)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3021, column: 5)
!5104 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3020, column: 7)
!5105 = !DILocation(line: 0, scope: !5070)
!5106 = !DILocation(line: 2860, column: 3, scope: !5070)
!5107 = !DILocation(line: 2860, column: 15, scope: !5070)
!5108 = !DILocation(line: 2860, column: 8, scope: !5070)
!5109 = !DILocation(line: 2861, column: 3, scope: !5070)
!5110 = !DILocation(line: 2866, column: 3, scope: !5070)
!5111 = !DILocation(line: 2867, column: 3, scope: !5070)
!5112 = !DILocation(line: 2867, column: 14, scope: !5070)
!5113 = !DILocation(line: 2868, column: 20, scope: !5070)
!5114 = !DILocation(line: 2870, column: 10, scope: !5070)
!5115 = !DILocation(line: 2874, column: 9, scope: !5094)
!5116 = !DILocation(line: 2874, column: 7, scope: !5070)
!5117 = !DILocation(line: 2881, column: 5, scope: !5097)
!5118 = !DILocation(line: 2882, column: 8, scope: !5097)
!5119 = !DILocation(line: 2880, column: 11, scope: !5093)
!5120 = !DILocation(line: 2884, column: 8, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 2884, column: 8)
!5122 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2883, column: 2)
!5123 = !DILocation(line: 2884, column: 23, scope: !5121)
!5124 = !DILocation(line: 2887, column: 8, scope: !5121)
!5125 = !DILocation(line: 2887, column: 12, scope: !5121)
!5126 = !DILocation(line: 2888, column: 8, scope: !5121)
!5127 = !DILocation(line: 2888, column: 12, scope: !5121)
!5128 = !DILocation(line: 2889, column: 8, scope: !5121)
!5129 = !DILocation(line: 2889, column: 12, scope: !5121)
!5130 = !DILocation(line: 2890, column: 8, scope: !5121)
!5131 = !DILocation(line: 2890, column: 12, scope: !5121)
!5132 = !DILocation(line: 2884, column: 8, scope: !5122)
!5133 = !DILocation(line: 2891, column: 13, scope: !5121)
!5134 = !DILocation(line: 2891, column: 6, scope: !5121)
!5135 = !DILocation(line: 2893, column: 35, scope: !5122)
!5136 = !DILocation(line: 2893, column: 19, scope: !5122)
!5137 = !DILocation(line: 0, scope: !5093)
!5138 = !DILocation(line: 2895, column: 2, scope: !5122)
!5139 = !DILocation(line: 2898, column: 16, scope: !5096)
!5140 = !DILocation(line: 0, scope: !5096)
!5141 = !DILocation(line: 2900, column: 8, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2900, column: 8)
!5143 = !DILocation(line: 2900, column: 46, scope: !5142)
!5144 = !DILocation(line: 2900, column: 43, scope: !5142)
!5145 = !DILocation(line: 2900, column: 8, scope: !5096)
!5146 = !DILocation(line: 2902, column: 39, scope: !5142)
!5147 = !DILocation(line: 2902, column: 8, scope: !5142)
!5148 = !DILocation(line: 2901, column: 29, scope: !5142)
!5149 = !DILocation(line: 2904, column: 46, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2904, column: 8)
!5151 = !DILocation(line: 2901, column: 6, scope: !5142)
!5152 = !DILocation(line: 2904, column: 8, scope: !5150)
!5153 = !DILocation(line: 2904, column: 43, scope: !5150)
!5154 = !DILocation(line: 2904, column: 8, scope: !5096)
!5155 = !DILocation(line: 2906, column: 8, scope: !5150)
!5156 = !DILocation(line: 2905, column: 29, scope: !5150)
!5157 = !DILocation(line: 2905, column: 6, scope: !5150)
!5158 = !DILocation(line: 2908, column: 10, scope: !5096)
!5159 = !DILocation(line: 2910, column: 11, scope: !5096)
!5160 = !DILocation(line: 2910, column: 9, scope: !5096)
!5161 = !DILocation(line: 2913, column: 13, scope: !5096)
!5162 = !DILocation(line: 2918, column: 11, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 2918, column: 11)
!5164 = !DILocation(line: 0, scope: !5097)
!5165 = !DILocation(line: 2918, column: 49, scope: !5163)
!5166 = !DILocation(line: 2918, column: 46, scope: !5163)
!5167 = !DILocation(line: 2918, column: 11, scope: !5093)
!5168 = !DILocation(line: 2920, column: 6, scope: !5163)
!5169 = !DILocation(line: 2920, column: 4, scope: !5163)
!5170 = !DILocation(line: 2923, column: 49, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 2923, column: 11)
!5172 = !DILocation(line: 2919, column: 2, scope: !5163)
!5173 = !DILocation(line: 2923, column: 11, scope: !5171)
!5174 = !DILocation(line: 2923, column: 46, scope: !5171)
!5175 = !DILocation(line: 2923, column: 11, scope: !5093)
!5176 = !DILocation(line: 2925, column: 6, scope: !5171)
!5177 = !DILocation(line: 2925, column: 4, scope: !5171)
!5178 = !DILocation(line: 2927, column: 26, scope: !5093)
!5179 = !DILocation(line: 2924, column: 2, scope: !5171)
!5180 = !DILocation(line: 2927, column: 7, scope: !5093)
!5181 = !DILocation(line: 2927, column: 24, scope: !5093)
!5182 = !DILocation(line: 2928, column: 33, scope: !5093)
!5183 = !DILocation(line: 2928, column: 7, scope: !5093)
!5184 = !DILocation(line: 2931, column: 7, scope: !5093)
!5185 = !DILocation(line: 2933, column: 15, scope: !5093)
!5186 = !DILocation(line: 2934, column: 7, scope: !5093)
!5187 = !DILocation(line: 2938, column: 44, scope: !5070)
!5188 = !DILocation(line: 2938, column: 28, scope: !5070)
!5189 = !DILocation(line: 2938, column: 26, scope: !5070)
!5190 = !DILocation(line: 2941, column: 7, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2941, column: 7)
!5192 = !DILocation(line: 2941, column: 42, scope: !5191)
!5193 = !DILocation(line: 2942, column: 7, scope: !5191)
!5194 = !DILocation(line: 2942, column: 45, scope: !5191)
!5195 = !DILocation(line: 2941, column: 7, scope: !5070)
!5196 = !DILocation(line: 2944, column: 14, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2943, column: 5)
!5198 = !DILocation(line: 2944, column: 12, scope: !5197)
!5199 = !DILocation(line: 2946, column: 19, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2946, column: 11)
!5201 = !DILocation(line: 2946, column: 16, scope: !5200)
!5202 = !DILocation(line: 2946, column: 11, scope: !5197)
!5203 = !DILocation(line: 2948, column: 12, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2947, column: 2)
!5205 = !DILocation(line: 2954, column: 4, scope: !5204)
!5206 = !DILocation(line: 2955, column: 4, scope: !5204)
!5207 = !DILocation(line: 2956, column: 4, scope: !5204)
!5208 = !DILocation(line: 2957, column: 31, scope: !5204)
!5209 = !DILocation(line: 2957, column: 4, scope: !5204)
!5210 = !DILocation(line: 2959, column: 4, scope: !5204)
!5211 = !DILocation(line: 2966, column: 25, scope: !5070)
!5212 = !DILocation(line: 2966, column: 9, scope: !5070)
!5213 = !DILocation(line: 2968, column: 11, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2968, column: 7)
!5215 = !DILocation(line: 2968, column: 7, scope: !5070)
!5216 = !DILocation(line: 2970, column: 3, scope: !5070)
!5217 = !DILocation(line: 2972, column: 3, scope: !5070)
!5218 = !DILocation(line: 2975, column: 7, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2975, column: 7)
!5220 = !DILocation(line: 2975, column: 30, scope: !5219)
!5221 = !DILocation(line: 2976, column: 7, scope: !5219)
!5222 = !DILocation(line: 2976, column: 10, scope: !5219)
!5223 = !DILocation(line: 2976, column: 45, scope: !5219)
!5224 = !DILocation(line: 2977, column: 7, scope: !5219)
!5225 = !DILocation(line: 2977, column: 10, scope: !5219)
!5226 = !DILocation(line: 2977, column: 64, scope: !5219)
!5227 = !DILocation(line: 2978, column: 7, scope: !5219)
!5228 = !DILocation(line: 2978, column: 11, scope: !5219)
!5229 = !DILocation(line: 2979, column: 7, scope: !5219)
!5230 = !DILocation(line: 2979, column: 4, scope: !5219)
!5231 = !DILocation(line: 2983, column: 7, scope: !5219)
!5232 = !DILocation(line: 2983, column: 11, scope: !5219)
!5233 = !DILocation(line: 2984, column: 4, scope: !5219)
!5234 = !DILocation(line: 2984, column: 8, scope: !5219)
!5235 = !DILocation(line: 2985, column: 4, scope: !5219)
!5236 = !DILocation(line: 2985, column: 8, scope: !5219)
!5237 = !DILocation(line: 2986, column: 4, scope: !5219)
!5238 = !DILocation(line: 2986, column: 7, scope: !5219)
!5239 = !DILocation(line: 2986, column: 31, scope: !5219)
!5240 = !DILocation(line: 2986, column: 28, scope: !5219)
!5241 = !DILocation(line: 2975, column: 7, scope: !5070)
!5242 = !DILocation(line: 2988, column: 20, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2987, column: 5)
!5244 = !DILocation(line: 2990, column: 5, scope: !5243)
!5245 = !DILocation(line: 2992, column: 18, scope: !5219)
!5246 = !DILocation(line: 0, scope: !5219)
!5247 = !DILocation(line: 2993, column: 7, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2993, column: 7)
!5249 = !DILocation(line: 2993, column: 30, scope: !5248)
!5250 = !DILocation(line: 2994, column: 7, scope: !5248)
!5251 = !DILocation(line: 2994, column: 10, scope: !5248)
!5252 = !DILocation(line: 2994, column: 45, scope: !5248)
!5253 = !DILocation(line: 2995, column: 7, scope: !5248)
!5254 = !DILocation(line: 2995, column: 10, scope: !5248)
!5255 = !DILocation(line: 2995, column: 64, scope: !5248)
!5256 = !DILocation(line: 2996, column: 7, scope: !5248)
!5257 = !DILocation(line: 2996, column: 11, scope: !5248)
!5258 = !DILocation(line: 2997, column: 7, scope: !5248)
!5259 = !DILocation(line: 2997, column: 4, scope: !5248)
!5260 = !DILocation(line: 3001, column: 7, scope: !5248)
!5261 = !DILocation(line: 3001, column: 11, scope: !5248)
!5262 = !DILocation(line: 3002, column: 4, scope: !5248)
!5263 = !DILocation(line: 3002, column: 8, scope: !5248)
!5264 = !DILocation(line: 3003, column: 4, scope: !5248)
!5265 = !DILocation(line: 3003, column: 8, scope: !5248)
!5266 = !DILocation(line: 3004, column: 4, scope: !5248)
!5267 = !DILocation(line: 3004, column: 7, scope: !5248)
!5268 = !DILocation(line: 3004, column: 31, scope: !5248)
!5269 = !DILocation(line: 3004, column: 28, scope: !5248)
!5270 = !DILocation(line: 2993, column: 7, scope: !5070)
!5271 = !DILocation(line: 3006, column: 21, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3005, column: 5)
!5273 = !DILocation(line: 3008, column: 5, scope: !5272)
!5274 = !DILocation(line: 3010, column: 19, scope: !5248)
!5275 = !DILocation(line: 0, scope: !5248)
!5276 = !DILocation(line: 3012, column: 34, scope: !5070)
!5277 = !DILocation(line: 3012, column: 3, scope: !5070)
!5278 = !DILocation(line: 3015, column: 36, scope: !5070)
!5279 = !DILocation(line: 3015, column: 47, scope: !5070)
!5280 = !DILocation(line: 3015, column: 53, scope: !5070)
!5281 = !DILocation(line: 3015, column: 17, scope: !5070)
!5282 = !DILocation(line: 3018, column: 3, scope: !5070)
!5283 = !DILocation(line: 3020, column: 8, scope: !5104)
!5284 = !DILocation(line: 3020, column: 7, scope: !5070)
!5285 = !DILocation(line: 3024, column: 11, scope: !5102)
!5286 = !DILocation(line: 3024, column: 34, scope: !5102)
!5287 = !DILocation(line: 3025, column: 8, scope: !5102)
!5288 = !DILocation(line: 3025, column: 4, scope: !5102)
!5289 = !DILocation(line: 3026, column: 7, scope: !5102)
!5290 = !DILocation(line: 3026, column: 30, scope: !5102)
!5291 = !DILocation(line: 3024, column: 11, scope: !5103)
!5292 = !DILocation(line: 3030, column: 33, scope: !5101)
!5293 = !DILocation(line: 3030, column: 4, scope: !5101)
!5294 = !DILocation(line: 3031, column: 41, scope: !5101)
!5295 = !DILocation(line: 3031, column: 25, scope: !5101)
!5296 = !DILocation(line: 3036, column: 9, scope: !5100)
!5297 = !DILocation(line: 3037, column: 8, scope: !5100)
!5298 = !DILocation(line: 3037, column: 11, scope: !5100)
!5299 = !DILocation(line: 3037, column: 34, scope: !5100)
!5300 = !DILocation(line: 3038, column: 8, scope: !5100)
!5301 = !DILocation(line: 3038, column: 36, scope: !5100)
!5302 = !DILocation(line: 3038, column: 11, scope: !5100)
!5303 = !DILocation(line: 3036, column: 8, scope: !5101)
!5304 = !DILocation(line: 3041, column: 21, scope: !5099)
!5305 = !DILocation(line: 3043, column: 12, scope: !5099)
!5306 = !DILocation(line: 0, scope: !5099)
!5307 = !DILocation(line: 3051, column: 8, scope: !5099)
!5308 = !DILocation(line: 3053, column: 8, scope: !5099)
!5309 = !DILocation(line: 3054, column: 6, scope: !5099)
!5310 = !DILocation(line: 3019, column: 14, scope: !5070)
!5311 = !DILocation(line: 3057, column: 8, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3057, column: 7)
!5313 = !DILocation(line: 3057, column: 7, scope: !5070)
!5314 = !DILocation(line: 3059, column: 36, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 3058, column: 5)
!5316 = !DILocation(line: 3059, column: 7, scope: !5315)
!5317 = !DILocation(line: 3060, column: 44, scope: !5315)
!5318 = !DILocation(line: 3060, column: 28, scope: !5315)
!5319 = !DILocation(line: 3061, column: 5, scope: !5315)
!5320 = !DILocation(line: 3062, column: 7, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3062, column: 7)
!5322 = !DILocation(line: 3062, column: 7, scope: !5070)
!5323 = !DILocation(line: 3063, column: 34, scope: !5321)
!5324 = !DILocation(line: 3063, column: 5, scope: !5321)
!5325 = !DILocation(line: 3065, column: 3, scope: !5070)
!5326 = !DILocation(line: 3066, column: 30, scope: !5070)
!5327 = !DILocation(line: 3066, column: 3, scope: !5070)
!5328 = !DILocation(line: 3068, column: 7, scope: !5070)
!5329 = !DILocation(line: 3070, column: 31, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 3070, column: 12)
!5331 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3068, column: 7)
!5332 = !DILocation(line: 3075, column: 14, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 3073, column: 5)
!5334 = !DILocation(line: 3075, column: 12, scope: !5333)
!5335 = !DILocation(line: 3076, column: 7, scope: !5333)
!5336 = !DILocation(line: 3079, column: 11, scope: !5070)
!5337 = !DILocation(line: 3080, column: 3, scope: !5070)
!5338 = !DILocation(line: 3081, column: 1, scope: !5070)
!5339 = distinct !DISubprogram(name: "gimplify_call_expr", scope: !3, file: !3, line: 2228, type: !5340, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!390, !1093, !2939, !727}
!5342 = !{!5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5358, !5361, !5362, !5365, !5371, !5374}
!5343 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5339, file: !3, line: 2228, type: !1093)
!5344 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5339, file: !3, line: 2228, type: !2939)
!5345 = !DILocalVariable(name: "want_value", arg: 3, scope: !5339, file: !3, line: 2228, type: !727)
!5346 = !DILocalVariable(name: "fndecl", scope: !5339, file: !3, line: 2230, type: !734)
!5347 = !DILocalVariable(name: "parms", scope: !5339, file: !3, line: 2230, type: !734)
!5348 = !DILocalVariable(name: "p", scope: !5339, file: !3, line: 2230, type: !734)
!5349 = !DILocalVariable(name: "ret", scope: !5339, file: !3, line: 2231, type: !390)
!5350 = !DILocalVariable(name: "i", scope: !5339, file: !3, line: 2232, type: !392)
!5351 = !DILocalVariable(name: "nargs", scope: !5339, file: !3, line: 2232, type: !392)
!5352 = !DILocalVariable(name: "call", scope: !5339, file: !3, line: 2233, type: !1058)
!5353 = !DILocalVariable(name: "builtin_va_start_p", scope: !5339, file: !3, line: 2234, type: !727)
!5354 = !DILocalVariable(name: "loc", scope: !5339, file: !3, line: 2235, type: !859)
!5355 = !DILocalVariable(name: "new_tree", scope: !5356, file: !3, line: 2259, type: !734)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2258, column: 5)
!5357 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2257, column: 7)
!5358 = !DILocalVariable(name: "last_arg", scope: !5359, file: !3, line: 2321, type: !734)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 2320, column: 5)
!5360 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2317, column: 7)
!5361 = !DILocalVariable(name: "last_arg_fndecl", scope: !5359, file: !3, line: 2322, type: !734)
!5362 = !DILocalVariable(name: "call", scope: !5363, file: !3, line: 2329, type: !734)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2328, column: 2)
!5364 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 2324, column: 11)
!5365 = !DILocalVariable(name: "t", scope: !5366, file: !3, line: 2359, type: !390)
!5366 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 2358, column: 9)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2355, column: 7)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 2355, column: 7)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 2354, column: 5)
!5370 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2353, column: 7)
!5371 = !DILocalVariable(name: "new_tree", scope: !5372, file: !3, line: 2385, type: !734)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2384, column: 5)
!5373 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2383, column: 7)
!5374 = !DILocalVariable(name: "flags", scope: !5375, file: !3, line: 2407, type: !392)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 2406, column: 5)
!5376 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2405, column: 7)
!5377 = !DILocation(line: 0, scope: !5339)
!5378 = !DILocation(line: 2235, column: 20, scope: !5339)
!5379 = !DILocation(line: 2237, column: 3, scope: !5339)
!5380 = !DILocation(line: 2241, column: 9, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2241, column: 7)
!5382 = !DILocation(line: 2241, column: 7, scope: !5339)
!5383 = !DILocation(line: 2242, column: 5, scope: !5381)
!5384 = !DILocation(line: 2256, column: 31, scope: !5339)
!5385 = !DILocation(line: 2256, column: 12, scope: !5339)
!5386 = !DILocation(line: 2257, column: 7, scope: !5357)
!5387 = !DILocation(line: 2257, column: 14, scope: !5357)
!5388 = !DILocation(line: 2257, column: 17, scope: !5357)
!5389 = !DILocation(line: 2257, column: 7, scope: !5339)
!5390 = !DILocation(line: 2259, column: 39, scope: !5356)
!5391 = !DILocation(line: 2259, column: 55, scope: !5356)
!5392 = !DILocation(line: 2259, column: 64, scope: !5356)
!5393 = !DILocation(line: 2259, column: 23, scope: !5356)
!5394 = !DILocation(line: 0, scope: !5356)
!5395 = !DILocation(line: 2261, column: 11, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 2261, column: 11)
!5397 = !DILocation(line: 2261, column: 20, scope: !5396)
!5398 = !DILocation(line: 2261, column: 35, scope: !5396)
!5399 = !DILocation(line: 2261, column: 32, scope: !5396)
!5400 = !DILocation(line: 2261, column: 11, scope: !5356)
!5401 = !DILocation(line: 2266, column: 12, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2262, column: 2)
!5403 = !DILocation(line: 2267, column: 4, scope: !5402)
!5404 = !DILocation(line: 2270, column: 11, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 2270, column: 11)
!5406 = !DILocation(line: 2270, column: 40, scope: !5405)
!5407 = !DILocation(line: 2271, column: 4, scope: !5405)
!5408 = !DILocation(line: 2271, column: 7, scope: !5405)
!5409 = !DILocation(line: 2271, column: 35, scope: !5405)
!5410 = !DILocation(line: 2270, column: 11, scope: !5356)
!5411 = !DILocation(line: 2274, column: 8, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 2274, column: 8)
!5413 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 2272, column: 9)
!5414 = !DILocation(line: 2274, column: 34, scope: !5412)
!5415 = !DILocation(line: 2274, column: 8, scope: !5413)
!5416 = !DILocation(line: 2276, column: 8, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 2275, column: 6)
!5418 = !DILocation(line: 2277, column: 36, scope: !5417)
!5419 = !DILocation(line: 2277, column: 18, scope: !5417)
!5420 = !DILocation(line: 2277, column: 16, scope: !5417)
!5421 = !DILocation(line: 2278, column: 8, scope: !5417)
!5422 = !DILocation(line: 2281, column: 8, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 2281, column: 8)
!5424 = !DILocation(line: 2281, column: 8, scope: !5413)
!5425 = !DILocation(line: 2283, column: 36, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 2282, column: 6)
!5427 = !DILocation(line: 2283, column: 18, scope: !5426)
!5428 = !DILocation(line: 2283, column: 16, scope: !5426)
!5429 = !DILocation(line: 2284, column: 8, scope: !5426)
!5430 = !DILocation(line: 2234, column: 8, scope: !5339)
!5431 = !DILocation(line: 2292, column: 25, scope: !5339)
!5432 = !DILocation(line: 2292, column: 9, scope: !5339)
!5433 = !DILocation(line: 2295, column: 11, scope: !5339)
!5434 = !DILocation(line: 2298, column: 31, scope: !5339)
!5435 = !DILocation(line: 2298, column: 12, scope: !5339)
!5436 = !DILocation(line: 2300, column: 7, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2300, column: 7)
!5438 = !DILocation(line: 2300, column: 7, scope: !5339)
!5439 = !DILocation(line: 2301, column: 13, scope: !5437)
!5440 = !DILocation(line: 2301, column: 5, scope: !5437)
!5441 = !DILocation(line: 2302, column: 12, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2302, column: 12)
!5443 = !DILocation(line: 2302, column: 12, scope: !5437)
!5444 = !DILocation(line: 2303, column: 13, scope: !5442)
!5445 = !DILocation(line: 2303, column: 5, scope: !5442)
!5446 = !DILocation(line: 0, scope: !5437)
!5447 = !DILocation(line: 2305, column: 14, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2305, column: 7)
!5449 = !DILocation(line: 2305, column: 17, scope: !5448)
!5450 = !DILocation(line: 2305, column: 7, scope: !5339)
!5451 = !DILocation(line: 2306, column: 5, scope: !5448)
!5452 = !DILocation(line: 0, scope: !5448)
!5453 = !DILocation(line: 2311, column: 8, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2311, column: 3)
!5455 = !DILocation(line: 0, scope: !5454)
!5456 = !DILocation(line: 2311, column: 17, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 2311, column: 3)
!5458 = !DILocation(line: 2311, column: 25, scope: !5457)
!5459 = !DILocation(line: 2311, column: 3, scope: !5454)
!5460 = !DILocation(line: 2311, column: 32, scope: !5457)
!5461 = !DILocation(line: 2311, column: 40, scope: !5457)
!5462 = !DILocation(line: 2311, column: 3, scope: !5457)
!5463 = distinct !{!5463, !5459, !5464}
!5464 = !DILocation(line: 2312, column: 5, scope: !5454)
!5465 = !DILocation(line: 2317, column: 8, scope: !5360)
!5466 = !DILocation(line: 2318, column: 7, scope: !5360)
!5467 = !DILocation(line: 2319, column: 10, scope: !5360)
!5468 = !DILocation(line: 2319, column: 57, scope: !5360)
!5469 = !DILocation(line: 2317, column: 7, scope: !5339)
!5470 = !DILocation(line: 0, scope: !5359)
!5471 = !DILocation(line: 2322, column: 30, scope: !5359)
!5472 = !DILocation(line: 2324, column: 11, scope: !5364)
!5473 = !DILocation(line: 2325, column: 4, scope: !5364)
!5474 = !DILocation(line: 2325, column: 7, scope: !5364)
!5475 = !DILocation(line: 2325, column: 35, scope: !5364)
!5476 = !DILocation(line: 2326, column: 4, scope: !5364)
!5477 = !DILocation(line: 2326, column: 7, scope: !5364)
!5478 = !DILocation(line: 2326, column: 45, scope: !5364)
!5479 = !DILocation(line: 2327, column: 4, scope: !5364)
!5480 = !DILocation(line: 2327, column: 7, scope: !5364)
!5481 = !DILocation(line: 2327, column: 44, scope: !5364)
!5482 = !DILocation(line: 2324, column: 11, scope: !5359)
!5483 = !DILocation(line: 2329, column: 16, scope: !5363)
!5484 = !DILocation(line: 0, scope: !5363)
!5485 = !DILocation(line: 2331, column: 4, scope: !5363)
!5486 = !DILocation(line: 2332, column: 41, scope: !5363)
!5487 = !DILocation(line: 2333, column: 8, scope: !5363)
!5488 = !DILocation(line: 2334, column: 15, scope: !5363)
!5489 = !DILocation(line: 2332, column: 14, scope: !5363)
!5490 = !DILocation(line: 2332, column: 12, scope: !5363)
!5491 = !DILocation(line: 2338, column: 39, scope: !5363)
!5492 = !DILocation(line: 2338, column: 4, scope: !5363)
!5493 = !DILocation(line: 2338, column: 37, scope: !5363)
!5494 = !DILocation(line: 2339, column: 35, scope: !5363)
!5495 = !DILocation(line: 2339, column: 4, scope: !5363)
!5496 = !DILocation(line: 2339, column: 33, scope: !5363)
!5497 = !DILocation(line: 2341, column: 8, scope: !5363)
!5498 = !DILocation(line: 2340, column: 4, scope: !5363)
!5499 = !DILocation(line: 2341, column: 6, scope: !5363)
!5500 = !DILocation(line: 2342, column: 34, scope: !5363)
!5501 = !DILocation(line: 2342, column: 4, scope: !5363)
!5502 = !DILocation(line: 2342, column: 32, scope: !5363)
!5503 = !DILocation(line: 2343, column: 37, scope: !5363)
!5504 = !DILocation(line: 2343, column: 4, scope: !5363)
!5505 = !DILocation(line: 2343, column: 35, scope: !5363)
!5506 = !DILocation(line: 2344, column: 4, scope: !5363)
!5507 = !DILocation(line: 2345, column: 27, scope: !5363)
!5508 = !DILocation(line: 2345, column: 4, scope: !5363)
!5509 = !DILocation(line: 2345, column: 25, scope: !5363)
!5510 = !DILocation(line: 2348, column: 4, scope: !5363)
!5511 = !DILocation(line: 2348, column: 36, scope: !5363)
!5512 = !DILocation(line: 2349, column: 2, scope: !5363)
!5513 = !DILocation(line: 2353, column: 13, scope: !5370)
!5514 = !DILocation(line: 2353, column: 7, scope: !5339)
!5515 = !DILocation(line: 0, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 2363, column: 15)
!5517 = !DILocation(line: 2355, column: 12, scope: !5368)
!5518 = !DILocation(line: 0, scope: !5368)
!5519 = !DILocation(line: 2356, column: 35, scope: !5367)
!5520 = !DILocation(line: 2355, column: 7, scope: !5368)
!5521 = !DILocation(line: 2363, column: 18, scope: !5516)
!5522 = !DILocation(line: 2363, column: 24, scope: !5516)
!5523 = !DILocation(line: 2365, column: 34, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 2364, column: 13)
!5525 = !DILocation(line: 2366, column: 5, scope: !5524)
!5526 = !DILocation(line: 2365, column: 19, scope: !5524)
!5527 = !DILocation(line: 0, scope: !5366)
!5528 = !DILocation(line: 2368, column: 21, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 2368, column: 19)
!5530 = !DILocation(line: 2368, column: 19, scope: !5524)
!5531 = !DILocation(line: 2370, column: 13, scope: !5524)
!5532 = !DILocation(line: 2355, column: 7, scope: !5367)
!5533 = distinct !{!5533, !5520, !5534}
!5534 = !DILocation(line: 2371, column: 9, scope: !5368)
!5535 = !DILocation(line: 2375, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2375, column: 7)
!5537 = !DILocation(line: 2292, column: 7, scope: !5339)
!5538 = !DILocation(line: 2375, column: 21, scope: !5536)
!5539 = !DILocation(line: 2375, column: 18, scope: !5536)
!5540 = !DILocation(line: 2376, column: 10, scope: !5536)
!5541 = !DILocation(line: 2375, column: 7, scope: !5339)
!5542 = !DILocation(line: 2378, column: 7, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 2377, column: 5)
!5544 = !DILocation(line: 2380, column: 5, scope: !5543)
!5545 = !DILocation(line: 2383, column: 11, scope: !5373)
!5546 = !DILocation(line: 2383, column: 7, scope: !5339)
!5547 = !DILocation(line: 2385, column: 39, scope: !5372)
!5548 = !DILocation(line: 2385, column: 55, scope: !5372)
!5549 = !DILocation(line: 2385, column: 64, scope: !5372)
!5550 = !DILocation(line: 2385, column: 23, scope: !5372)
!5551 = !DILocation(line: 0, scope: !5372)
!5552 = !DILocation(line: 2387, column: 11, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 2387, column: 11)
!5554 = !DILocation(line: 2387, column: 20, scope: !5553)
!5555 = !DILocation(line: 2387, column: 35, scope: !5553)
!5556 = !DILocation(line: 2387, column: 32, scope: !5553)
!5557 = !DILocation(line: 2387, column: 11, scope: !5372)
!5558 = !DILocation(line: 2392, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2388, column: 2)
!5560 = !DILocation(line: 2393, column: 4, scope: !5559)
!5561 = !DILocation(line: 2398, column: 17, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2397, column: 5)
!5563 = !DILocation(line: 2398, column: 15, scope: !5562)
!5564 = !DILocation(line: 2399, column: 7, scope: !5562)
!5565 = !DILocation(line: 2405, column: 7, scope: !5376)
!5566 = !DILocation(line: 2405, column: 27, scope: !5376)
!5567 = !DILocation(line: 2405, column: 7, scope: !5339)
!5568 = !DILocation(line: 2407, column: 19, scope: !5375)
!5569 = !DILocation(line: 0, scope: !5375)
!5570 = !DILocation(line: 2408, column: 17, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 2408, column: 11)
!5572 = !DILocation(line: 2410, column: 15, scope: !5571)
!5573 = !DILocation(line: 2410, column: 4, scope: !5571)
!5574 = !DILocation(line: 2411, column: 2, scope: !5571)
!5575 = !DILocation(line: 2411, column: 30, scope: !5571)
!5576 = !DILocation(line: 2422, column: 7, scope: !5339)
!5577 = !DILocation(line: 2426, column: 43, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2423, column: 5)
!5579 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2422, column: 7)
!5580 = !DILocation(line: 2426, column: 14, scope: !5578)
!5581 = !DILocation(line: 2427, column: 7, scope: !5578)
!5582 = !DILocation(line: 2428, column: 15, scope: !5578)
!5583 = !DILocation(line: 2429, column: 5, scope: !5578)
!5584 = !DILocation(line: 2432, column: 1, scope: !5339)
!5585 = distinct !DISubprogram(name: "gimplify_compound_expr", scope: !3, file: !3, line: 4635, type: !5340, scopeLine: 4636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5586)
!5586 = !{!5587, !5588, !5589, !5590, !5591}
!5587 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5585, file: !3, line: 4635, type: !1093)
!5588 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5585, file: !3, line: 4635, type: !2939)
!5589 = !DILocalVariable(name: "want_value", arg: 3, scope: !5585, file: !3, line: 4635, type: !727)
!5590 = !DILocalVariable(name: "t", scope: !5585, file: !3, line: 4637, type: !734)
!5591 = !DILocalVariable(name: "sub_p", scope: !5592, file: !3, line: 4641, type: !1093)
!5592 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 4640, column: 5)
!5593 = !DILocation(line: 0, scope: !5585)
!5594 = !DILocation(line: 4637, column: 12, scope: !5585)
!5595 = !DILocation(line: 4639, column: 3, scope: !5585)
!5596 = !DILocation(line: 4641, column: 22, scope: !5592)
!5597 = !DILocation(line: 0, scope: !5592)
!5598 = !DILocation(line: 4643, column: 11, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 4643, column: 11)
!5600 = !DILocation(line: 4643, column: 30, scope: !5599)
!5601 = !DILocation(line: 4643, column: 11, scope: !5592)
!5602 = !DILocation(line: 4644, column: 2, scope: !5599)
!5603 = !DILocation(line: 4646, column: 2, scope: !5599)
!5604 = !DILocation(line: 4648, column: 11, scope: !5592)
!5605 = !DILocation(line: 4650, column: 10, scope: !5585)
!5606 = !DILocation(line: 4650, column: 24, scope: !5585)
!5607 = !DILocation(line: 4649, column: 5, scope: !5592)
!5608 = distinct !{!5608, !5595, !5609}
!5609 = !DILocation(line: 4650, column: 40, scope: !5585)
!5610 = !DILocation(line: 4652, column: 11, scope: !5585)
!5611 = !DILocation(line: 4653, column: 7, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 4653, column: 7)
!5613 = !DILocation(line: 4653, column: 7, scope: !5585)
!5614 = !DILocation(line: 4657, column: 7, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 4656, column: 5)
!5616 = !DILocation(line: 4658, column: 7, scope: !5615)
!5617 = !DILocation(line: 0, scope: !5612)
!5618 = !DILocation(line: 4660, column: 1, scope: !5585)
!5619 = distinct !DISubprogram(name: "gimplify_compound_literal_expr", scope: !3, file: !3, line: 3522, type: !5620, scopeLine: 3523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5622)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{!390, !1093, !2939}
!5622 = !{!5623, !5624, !5625, !5626}
!5623 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5619, file: !3, line: 3522, type: !1093)
!5624 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5619, file: !3, line: 3522, type: !2939)
!5625 = !DILocalVariable(name: "decl_s", scope: !5619, file: !3, line: 3524, type: !734)
!5626 = !DILocalVariable(name: "decl", scope: !5619, file: !3, line: 3525, type: !734)
!5627 = !DILocation(line: 0, scope: !5619)
!5628 = !DILocation(line: 3524, column: 17, scope: !5619)
!5629 = !DILocation(line: 3525, column: 15, scope: !5619)
!5630 = !DILocation(line: 3529, column: 7, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 3529, column: 7)
!5632 = !DILocation(line: 3529, column: 7, scope: !5619)
!5633 = !DILocation(line: 3530, column: 5, scope: !5631)
!5634 = !DILocation(line: 3530, column: 29, scope: !5631)
!5635 = !DILocation(line: 3535, column: 8, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 3535, column: 7)
!5637 = !DILocation(line: 3535, column: 37, scope: !5636)
!5638 = !DILocation(line: 3536, column: 8, scope: !5636)
!5639 = !DILocation(line: 3536, column: 40, scope: !5636)
!5640 = !DILocation(line: 3537, column: 7, scope: !5636)
!5641 = !DILocation(line: 3537, column: 11, scope: !5636)
!5642 = !DILocation(line: 3538, column: 7, scope: !5636)
!5643 = !DILocation(line: 3538, column: 11, scope: !5636)
!5644 = !DILocation(line: 3535, column: 7, scope: !5619)
!5645 = !DILocation(line: 3539, column: 5, scope: !5636)
!5646 = !DILocation(line: 3539, column: 30, scope: !5636)
!5647 = !DILocation(line: 3544, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 3544, column: 7)
!5649 = !DILocation(line: 3544, column: 24, scope: !5648)
!5650 = !DILocation(line: 3544, column: 37, scope: !5648)
!5651 = !DILocation(line: 3544, column: 41, scope: !5648)
!5652 = !DILocation(line: 3544, column: 7, scope: !5619)
!5653 = !DILocation(line: 3545, column: 5, scope: !5648)
!5654 = !DILocation(line: 3547, column: 3, scope: !5619)
!5655 = !DILocation(line: 3548, column: 11, scope: !5619)
!5656 = !DILocation(line: 3549, column: 3, scope: !5619)
!5657 = distinct !DISubprogram(name: "gimplify_modify_expr", scope: !3, file: !3, line: 4401, type: !4781, scopeLine: 4403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5658)
!5658 = !{!5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5671}
!5659 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5657, file: !3, line: 4401, type: !1093)
!5660 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5657, file: !3, line: 4401, type: !2939)
!5661 = !DILocalVariable(name: "post_p", arg: 3, scope: !5657, file: !3, line: 4401, type: !2939)
!5662 = !DILocalVariable(name: "want_value", arg: 4, scope: !5657, file: !3, line: 4402, type: !727)
!5663 = !DILocalVariable(name: "from_p", scope: !5657, file: !3, line: 4404, type: !1093)
!5664 = !DILocalVariable(name: "to_p", scope: !5657, file: !3, line: 4405, type: !1093)
!5665 = !DILocalVariable(name: "ret", scope: !5657, file: !3, line: 4406, type: !390)
!5666 = !DILocalVariable(name: "assign", scope: !5657, file: !3, line: 4407, type: !1058)
!5667 = !DILocalVariable(name: "loc", scope: !5657, file: !3, line: 4408, type: !859)
!5668 = !DILocalVariable(name: "from", scope: !5669, file: !3, line: 4481, type: !734)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 4480, column: 5)
!5670 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4479, column: 7)
!5671 = !DILocalVariable(name: "size", scope: !5669, file: !3, line: 4482, type: !734)
!5672 = !DILocation(line: 0, scope: !5657)
!5673 = !DILocation(line: 4404, column: 19, scope: !5657)
!5674 = !DILocation(line: 4405, column: 17, scope: !5657)
!5675 = !DILocation(line: 4408, column: 20, scope: !5657)
!5676 = !DILocation(line: 4410, column: 3, scope: !5657)
!5677 = !DILocation(line: 4416, column: 7, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4416, column: 7)
!5679 = !DILocation(line: 4416, column: 7, scope: !5657)
!5680 = !DILocation(line: 4418, column: 7, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 4417, column: 5)
!5682 = !DILocation(line: 4419, column: 39, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 4419, column: 11)
!5684 = !DILocation(line: 4419, column: 58, scope: !5683)
!5685 = !DILocation(line: 4419, column: 12, scope: !5683)
!5686 = !DILocation(line: 4419, column: 11, scope: !5681)
!5687 = !DILocation(line: 4420, column: 35, scope: !5683)
!5688 = !DILocation(line: 4420, column: 54, scope: !5683)
!5689 = !DILocation(line: 4420, column: 12, scope: !5683)
!5690 = !DILocation(line: 4420, column: 10, scope: !5683)
!5691 = !DILocation(line: 4420, column: 2, scope: !5683)
!5692 = !DILocation(line: 4424, column: 9, scope: !5657)
!5693 = !DILocation(line: 4426, column: 11, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4426, column: 7)
!5695 = !DILocation(line: 4426, column: 7, scope: !5657)
!5696 = !DILocation(line: 4433, column: 24, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4433, column: 7)
!5698 = !DILocation(line: 4433, column: 7, scope: !5697)
!5699 = !DILocation(line: 4433, column: 49, scope: !5697)
!5700 = !DILocation(line: 4433, column: 45, scope: !5697)
!5701 = !DILocation(line: 4435, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 4434, column: 5)
!5703 = !DILocation(line: 4436, column: 7, scope: !5702)
!5704 = !DILocation(line: 4437, column: 15, scope: !5702)
!5705 = !DILocation(line: 4438, column: 7, scope: !5702)
!5706 = !DILocation(line: 4447, column: 3, scope: !5657)
!5707 = !DILocation(line: 4449, column: 9, scope: !5657)
!5708 = !DILocation(line: 4450, column: 11, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4450, column: 7)
!5710 = !DILocation(line: 4450, column: 7, scope: !5657)
!5711 = !DILocation(line: 4465, column: 66, scope: !5657)
!5712 = !DILocation(line: 4465, column: 47, scope: !5657)
!5713 = !DILocation(line: 4465, column: 9, scope: !5657)
!5714 = !DILocation(line: 4467, column: 11, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4467, column: 7)
!5716 = !DILocation(line: 4467, column: 7, scope: !5657)
!5717 = !DILocation(line: 4471, column: 9, scope: !5657)
!5718 = !DILocation(line: 4473, column: 11, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4473, column: 7)
!5720 = !DILocation(line: 4473, column: 7, scope: !5657)
!5721 = !DILocation(line: 4479, column: 7, scope: !5670)
!5722 = !DILocation(line: 4479, column: 27, scope: !5670)
!5723 = !DILocation(line: 4479, column: 7, scope: !5657)
!5724 = !DILocation(line: 4481, column: 19, scope: !5669)
!5725 = !DILocation(line: 0, scope: !5669)
!5726 = !DILocation(line: 4482, column: 19, scope: !5669)
!5727 = !DILocation(line: 4484, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 4484, column: 11)
!5729 = !DILocation(line: 4484, column: 28, scope: !5728)
!5730 = !DILocation(line: 4484, column: 11, scope: !5669)
!5731 = !DILocation(line: 4485, column: 9, scope: !5728)
!5732 = !DILocation(line: 4485, column: 2, scope: !5728)
!5733 = !DILocation(line: 4487, column: 11, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 4487, column: 11)
!5735 = !DILocation(line: 4487, column: 11, scope: !5669)
!5736 = !DILocation(line: 4489, column: 12, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 4488, column: 2)
!5738 = !DILocation(line: 4490, column: 11, scope: !5737)
!5739 = !DILocation(line: 4490, column: 4, scope: !5737)
!5740 = !DILocation(line: 4498, column: 8, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4498, column: 7)
!5742 = !DILocation(line: 4498, column: 26, scope: !5741)
!5743 = !DILocation(line: 4499, column: 8, scope: !5741)
!5744 = !DILocation(line: 4499, column: 29, scope: !5741)
!5745 = !DILocation(line: 4500, column: 7, scope: !5741)
!5746 = !DILocation(line: 4500, column: 25, scope: !5741)
!5747 = !DILocation(line: 4500, column: 10, scope: !5741)
!5748 = !DILocation(line: 4498, column: 7, scope: !5657)
!5749 = !DILocation(line: 4501, column: 12, scope: !5741)
!5750 = !DILocation(line: 4501, column: 5, scope: !5741)
!5751 = !DILocation(line: 4505, column: 8, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4505, column: 7)
!5753 = !DILocation(line: 4505, column: 23, scope: !5752)
!5754 = !DILocation(line: 4506, column: 7, scope: !5752)
!5755 = !DILocation(line: 4506, column: 10, scope: !5752)
!5756 = !DILocation(line: 4507, column: 7, scope: !5752)
!5757 = !DILocation(line: 4507, column: 10, scope: !5752)
!5758 = !DILocation(line: 4508, column: 7, scope: !5752)
!5759 = !DILocation(line: 4508, column: 10, scope: !5752)
!5760 = !DILocation(line: 4509, column: 7, scope: !5752)
!5761 = !DILocation(line: 4509, column: 11, scope: !5752)
!5762 = !DILocation(line: 4505, column: 7, scope: !5657)
!5763 = !DILocation(line: 4511, column: 12, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 4511, column: 11)
!5765 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 4510, column: 5)
!5766 = !DILocation(line: 4511, column: 32, scope: !5764)
!5767 = !DILocation(line: 4511, column: 35, scope: !5764)
!5768 = !DILocation(line: 4511, column: 11, scope: !5765)
!5769 = !DILocation(line: 4513, column: 27, scope: !5764)
!5770 = !DILocation(line: 4513, column: 6, scope: !5764)
!5771 = !DILocation(line: 4512, column: 2, scope: !5764)
!5772 = !DILocation(line: 4513, column: 4, scope: !5764)
!5773 = !DILocation(line: 4514, column: 7, scope: !5765)
!5774 = !DILocation(line: 0, scope: !5765)
!5775 = !DILocation(line: 4514, column: 41, scope: !5765)
!5776 = !DILocation(line: 4515, column: 7, scope: !5765)
!5777 = !DILocation(line: 4516, column: 4, scope: !5765)
!5778 = !DILocation(line: 4518, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4518, column: 7)
!5780 = !DILocation(line: 4518, column: 27, scope: !5779)
!5781 = !DILocation(line: 4518, column: 7, scope: !5657)
!5782 = !DILocation(line: 4522, column: 16, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 4519, column: 5)
!5784 = !DILocation(line: 4523, column: 12, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 4523, column: 11)
!5786 = !DILocation(line: 4523, column: 11, scope: !5783)
!5787 = !DILocation(line: 4524, column: 31, scope: !5785)
!5788 = !DILocation(line: 4524, column: 2, scope: !5785)
!5789 = !DILocation(line: 4528, column: 16, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 4527, column: 5)
!5791 = !DILocation(line: 4529, column: 36, scope: !5790)
!5792 = !DILocation(line: 4529, column: 7, scope: !5790)
!5793 = !DILocation(line: 0, scope: !5779)
!5794 = !DILocation(line: 4532, column: 3, scope: !5657)
!5795 = !DILocation(line: 4534, column: 7, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4534, column: 7)
!5797 = !DILocation(line: 4534, column: 22, scope: !5796)
!5798 = !DILocation(line: 4534, column: 31, scope: !5796)
!5799 = !DILocation(line: 4534, column: 49, scope: !5796)
!5800 = !DILocation(line: 4534, column: 34, scope: !5796)
!5801 = !DILocation(line: 4534, column: 7, scope: !5657)
!5802 = !DILocation(line: 4538, column: 7, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 4535, column: 5)
!5804 = !DILocation(line: 4539, column: 30, scope: !5803)
!5805 = !DILocation(line: 4539, column: 15, scope: !5803)
!5806 = !DILocation(line: 4539, column: 13, scope: !5803)
!5807 = !DILocation(line: 4540, column: 7, scope: !5803)
!5808 = !DILocation(line: 4541, column: 5, scope: !5803)
!5809 = !DILocation(line: 4543, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4543, column: 7)
!5811 = !DILocation(line: 4543, column: 7, scope: !5657)
!5812 = !DILocation(line: 4545, column: 31, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 4544, column: 5)
!5814 = !DILocation(line: 4545, column: 17, scope: !5813)
!5815 = !DILocation(line: 4545, column: 15, scope: !5813)
!5816 = !DILocation(line: 4546, column: 7, scope: !5813)
!5817 = !DILocation(line: 4549, column: 13, scope: !5810)
!5818 = !DILocation(line: 4551, column: 3, scope: !5657)
!5819 = !DILocation(line: 4552, column: 1, scope: !5657)
!5820 = distinct !DISubprogram(name: "gimplify_boolean_expr", scope: !3, file: !3, line: 4611, type: !5821, scopeLine: 4612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5823)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!390, !1093, !859}
!5823 = !{!5824, !5825, !5826}
!5824 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5820, file: !3, line: 4611, type: !1093)
!5825 = !DILocalVariable(name: "locus", arg: 2, scope: !5820, file: !3, line: 4611, type: !859)
!5826 = !DILocalVariable(name: "type", scope: !5820, file: !3, line: 4614, type: !734)
!5827 = !DILocation(line: 0, scope: !5820)
!5828 = !DILocation(line: 4614, column: 15, scope: !5820)
!5829 = !DILocation(line: 4616, column: 13, scope: !5820)
!5830 = !DILocation(line: 4616, column: 11, scope: !5820)
!5831 = !DILocation(line: 4620, column: 3, scope: !5820)
!5832 = !DILocation(line: 4622, column: 3, scope: !5820)
!5833 = distinct !DISubprogram(name: "gimplify_addr_expr", scope: !3, file: !3, line: 4717, type: !5834, scopeLine: 4718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5836)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!390, !1093, !2939, !2939}
!5836 = !{!5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5847, !5848, !5849}
!5837 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5833, file: !3, line: 4717, type: !1093)
!5838 = !DILocalVariable(name: "pre_p", arg: 2, scope: !5833, file: !3, line: 4717, type: !2939)
!5839 = !DILocalVariable(name: "post_p", arg: 3, scope: !5833, file: !3, line: 4717, type: !2939)
!5840 = !DILocalVariable(name: "expr", scope: !5833, file: !3, line: 4719, type: !734)
!5841 = !DILocalVariable(name: "op0", scope: !5833, file: !3, line: 4720, type: !734)
!5842 = !DILocalVariable(name: "ret", scope: !5833, file: !3, line: 4721, type: !390)
!5843 = !DILocalVariable(name: "loc", scope: !5833, file: !3, line: 4722, type: !859)
!5844 = !DILocalVariable(name: "op00", scope: !5845, file: !3, line: 4739, type: !734)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4738, column: 7)
!5846 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 4725, column: 5)
!5847 = !DILocalVariable(name: "t_expr", scope: !5845, file: !3, line: 4740, type: !734)
!5848 = !DILocalVariable(name: "t_op00", scope: !5845, file: !3, line: 4741, type: !734)
!5849 = !DILabel(scope: !5846, name: "do_indirect_ref", file: !3, line: 4728)
!5850 = !DILocation(line: 0, scope: !5833)
!5851 = !DILocation(line: 4719, column: 15, scope: !5833)
!5852 = !DILocation(line: 4720, column: 14, scope: !5833)
!5853 = !DILocation(line: 4722, column: 20, scope: !5833)
!5854 = !DILocation(line: 4724, column: 11, scope: !5833)
!5855 = !DILocation(line: 4724, column: 3, scope: !5833)
!5856 = !DILocation(line: 4728, column: 5, scope: !5846)
!5857 = !DILocation(line: 4739, column: 14, scope: !5845)
!5858 = !DILocation(line: 0, scope: !5845)
!5859 = !DILocation(line: 4740, column: 16, scope: !5845)
!5860 = !DILocation(line: 4741, column: 16, scope: !5845)
!5861 = !DILocation(line: 4743, column: 14, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 4743, column: 13)
!5863 = !DILocation(line: 4743, column: 13, scope: !5845)
!5864 = !DILocation(line: 4744, column: 34, scope: !5862)
!5865 = !DILocation(line: 4744, column: 11, scope: !5862)
!5866 = !DILocation(line: 4744, column: 4, scope: !5862)
!5867 = !DILocation(line: 4745, column: 17, scope: !5845)
!5868 = !DILocation(line: 4748, column: 7, scope: !5846)
!5869 = !DILocation(line: 4760, column: 45, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4760, column: 11)
!5871 = !DILocation(line: 4760, column: 11, scope: !5870)
!5872 = !DILocation(line: 4760, column: 11, scope: !5846)
!5873 = !DILocation(line: 4761, column: 8, scope: !5870)
!5874 = !DILocation(line: 4761, column: 2, scope: !5870)
!5875 = !DILocation(line: 4763, column: 40, scope: !5846)
!5876 = !DILocation(line: 4765, column: 8, scope: !5846)
!5877 = !DILocation(line: 4764, column: 7, scope: !5846)
!5878 = !DILocation(line: 4763, column: 17, scope: !5846)
!5879 = !DILocation(line: 4763, column: 15, scope: !5846)
!5880 = !DILocation(line: 4767, column: 7, scope: !5846)
!5881 = !DILocation(line: 4776, column: 13, scope: !5846)
!5882 = !DILocation(line: 4778, column: 15, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4778, column: 11)
!5884 = !DILocation(line: 4778, column: 11, scope: !5846)
!5885 = !DILocation(line: 4783, column: 7, scope: !5846)
!5886 = !DILocation(line: 4785, column: 13, scope: !5846)
!5887 = !DILocation(line: 4789, column: 11, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4789, column: 11)
!5889 = !DILocation(line: 4789, column: 27, scope: !5888)
!5890 = !DILocation(line: 4789, column: 11, scope: !5846)
!5891 = !DILocation(line: 4792, column: 7, scope: !5846)
!5892 = !DILocation(line: 4797, column: 32, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4797, column: 11)
!5894 = !DILocation(line: 4797, column: 49, scope: !5893)
!5895 = !DILocation(line: 4797, column: 12, scope: !5893)
!5896 = !DILocation(line: 4797, column: 11, scope: !5846)
!5897 = !DILocation(line: 4801, column: 47, scope: !5846)
!5898 = !DILocation(line: 4798, column: 12, scope: !5893)
!5899 = !DILocation(line: 4798, column: 10, scope: !5893)
!5900 = !DILocation(line: 4798, column: 2, scope: !5893)
!5901 = !DILocation(line: 4801, column: 7, scope: !5846)
!5902 = !DILocation(line: 4805, column: 39, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4805, column: 11)
!5904 = !DILocation(line: 4805, column: 57, scope: !5903)
!5905 = !DILocation(line: 4805, column: 12, scope: !5903)
!5906 = !DILocation(line: 4805, column: 11, scope: !5846)
!5907 = !DILocation(line: 4806, column: 12, scope: !5903)
!5908 = !DILocation(line: 4806, column: 10, scope: !5903)
!5909 = !DILocation(line: 4806, column: 2, scope: !5903)
!5910 = !DILocation(line: 0, scope: !5846)
!5911 = !DILocation(line: 4811, column: 3, scope: !5833)
!5912 = distinct !DISubprogram(name: "gimplify_conversion", scope: !3, file: !3, line: 1747, type: !5913, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5915)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{!390, !1093}
!5915 = !{!5916, !5917, !5918, !5919}
!5916 = !DILocalVariable(name: "expr_p", arg: 1, scope: !5912, file: !3, line: 1747, type: !1093)
!5917 = !DILocalVariable(name: "tem", scope: !5912, file: !3, line: 1749, type: !734)
!5918 = !DILocalVariable(name: "loc", scope: !5912, file: !3, line: 1750, type: !859)
!5919 = !DILocalVariable(name: "sub", scope: !5920, file: !3, line: 1775, type: !734)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1774, column: 5)
!5921 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1773, column: 7)
!5922 = !DILocation(line: 0, scope: !5912)
!5923 = !DILocation(line: 1750, column: 20, scope: !5912)
!5924 = !DILocation(line: 1751, column: 3, scope: !5912)
!5925 = !DILocation(line: 1754, column: 3, scope: !5912)
!5926 = !DILocation(line: 1757, column: 41, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1757, column: 7)
!5928 = !DILocation(line: 1757, column: 7, scope: !5927)
!5929 = !DILocation(line: 1757, column: 7, scope: !5912)
!5930 = !DILocation(line: 1763, column: 7, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1763, column: 7)
!5932 = !DILocation(line: 1758, column: 15, scope: !5927)
!5933 = !DILocation(line: 1758, column: 13, scope: !5927)
!5934 = !DILocation(line: 1758, column: 5, scope: !5927)
!5935 = !DILocation(line: 1764, column: 7, scope: !5931)
!5936 = !DILocation(line: 1764, column: 10, scope: !5931)
!5937 = !DILocation(line: 1765, column: 7, scope: !5931)
!5938 = !DILocation(line: 1765, column: 10, scope: !5931)
!5939 = !DILocation(line: 1766, column: 7, scope: !5931)
!5940 = !DILocation(line: 1767, column: 5, scope: !5931)
!5941 = !DILocation(line: 1767, column: 30, scope: !5931)
!5942 = !DILocation(line: 1768, column: 5, scope: !5931)
!5943 = !DILocation(line: 1768, column: 24, scope: !5931)
!5944 = !DILocation(line: 1766, column: 17, scope: !5931)
!5945 = !DILocation(line: 1768, column: 46, scope: !5931)
!5946 = !DILocation(line: 1763, column: 7, scope: !5912)
!5947 = !DILocation(line: 1773, column: 7, scope: !5921)
!5948 = !DILocation(line: 1769, column: 13, scope: !5931)
!5949 = !DILocation(line: 1769, column: 5, scope: !5931)
!5950 = !DILocation(line: 1773, column: 7, scope: !5912)
!5951 = !DILocation(line: 1775, column: 18, scope: !5920)
!5952 = !DILocation(line: 0, scope: !5920)
!5953 = !DILocation(line: 1780, column: 11, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1780, column: 11)
!5955 = !DILocation(line: 1780, column: 27, scope: !5954)
!5956 = !DILocation(line: 1780, column: 11, scope: !5920)
!5957 = !DILocation(line: 1781, column: 31, scope: !5954)
!5958 = !DILocation(line: 1781, column: 2, scope: !5954)
!5959 = !DILocation(line: 1785, column: 32, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1785, column: 16)
!5961 = !DILocation(line: 1785, column: 16, scope: !5954)
!5962 = !DILocation(line: 1786, column: 2, scope: !5960)
!5963 = !DILocation(line: 1791, column: 7, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1791, column: 7)
!5965 = !DILocation(line: 1791, column: 32, scope: !5964)
!5966 = !DILocation(line: 1791, column: 56, scope: !5964)
!5967 = !DILocation(line: 1791, column: 36, scope: !5964)
!5968 = !DILocation(line: 1791, column: 7, scope: !5912)
!5969 = !DILocation(line: 1792, column: 15, scope: !5964)
!5970 = !DILocation(line: 1792, column: 13, scope: !5964)
!5971 = !DILocation(line: 1792, column: 5, scope: !5964)
!5972 = !DILocation(line: 1795, column: 3, scope: !5912)
!5973 = distinct !DISubprogram(name: "gimplify_decl_expr", scope: !3, file: !3, line: 1290, type: !5620, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5974)
!5974 = !{!5975, !5976, !5977, !5978, !5979}
!5975 = !DILocalVariable(name: "stmt_p", arg: 1, scope: !5973, file: !3, line: 1290, type: !1093)
!5976 = !DILocalVariable(name: "seq_p", arg: 2, scope: !5973, file: !3, line: 1290, type: !2939)
!5977 = !DILocalVariable(name: "stmt", scope: !5973, file: !3, line: 1292, type: !734)
!5978 = !DILocalVariable(name: "decl", scope: !5973, file: !3, line: 1293, type: !734)
!5979 = !DILocalVariable(name: "init", scope: !5980, file: !3, line: 1307, type: !734)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 1306, column: 5)
!5981 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1305, column: 7)
!5982 = !DILocation(line: 0, scope: !5973)
!5983 = !DILocation(line: 1292, column: 15, scope: !5973)
!5984 = !DILocation(line: 1293, column: 15, scope: !5973)
!5985 = !DILocation(line: 1295, column: 11, scope: !5973)
!5986 = !DILocation(line: 1297, column: 7, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1297, column: 7)
!5988 = !DILocation(line: 1297, column: 27, scope: !5987)
!5989 = !DILocation(line: 1297, column: 24, scope: !5987)
!5990 = !DILocation(line: 1297, column: 7, scope: !5973)
!5991 = !DILocation(line: 1300, column: 8, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1300, column: 7)
!5993 = !DILocation(line: 1300, column: 25, scope: !5992)
!5994 = !DILocation(line: 1301, column: 8, scope: !5992)
!5995 = !DILocation(line: 1301, column: 28, scope: !5992)
!5996 = !DILocation(line: 1302, column: 7, scope: !5992)
!5997 = !DILocation(line: 1302, column: 11, scope: !5992)
!5998 = !DILocation(line: 1300, column: 7, scope: !5973)
!5999 = !DILocation(line: 1303, column: 5, scope: !5992)
!6000 = !DILocation(line: 1305, column: 7, scope: !5981)
!6001 = !DILocation(line: 1305, column: 24, scope: !5981)
!6002 = !DILocation(line: 1305, column: 36, scope: !5981)
!6003 = !DILocation(line: 1305, column: 40, scope: !5981)
!6004 = !DILocation(line: 1305, column: 7, scope: !5973)
!6005 = !DILocation(line: 1307, column: 7, scope: !5980)
!6006 = !DILocation(line: 1307, column: 19, scope: !5980)
!6007 = !DILocation(line: 1307, column: 12, scope: !5980)
!6008 = !DILocation(line: 1309, column: 11, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1309, column: 11)
!6010 = !DILocation(line: 1309, column: 45, scope: !6009)
!6011 = !DILocation(line: 1310, column: 4, scope: !6009)
!6012 = !DILocation(line: 1310, column: 9, scope: !6009)
!6013 = !DILocation(line: 1311, column: 11, scope: !6009)
!6014 = !DILocation(line: 1311, column: 28, scope: !6009)
!6015 = !DILocation(line: 1311, column: 8, scope: !6009)
!6016 = !DILocation(line: 1312, column: 11, scope: !6009)
!6017 = !DILocation(line: 1313, column: 34, scope: !6009)
!6018 = !DILocation(line: 1309, column: 11, scope: !5980)
!6019 = !DILocation(line: 1314, column: 2, scope: !6009)
!6020 = !DILocation(line: 0, scope: !5980)
!6021 = !DILocation(line: 1316, column: 11, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1316, column: 11)
!6023 = !DILocation(line: 1316, column: 16, scope: !6022)
!6024 = !DILocation(line: 1316, column: 27, scope: !6022)
!6025 = !DILocation(line: 1316, column: 24, scope: !6022)
!6026 = !DILocation(line: 1316, column: 11, scope: !5980)
!6027 = !DILocation(line: 1318, column: 9, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 1318, column: 8)
!6029 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1317, column: 2)
!6030 = !DILocation(line: 1318, column: 8, scope: !6029)
!6031 = !DILocation(line: 1320, column: 28, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1319, column: 6)
!6033 = !DILocation(line: 1321, column: 15, scope: !6032)
!6034 = !DILocation(line: 1321, column: 13, scope: !6032)
!6035 = !DILocation(line: 1322, column: 8, scope: !6032)
!6036 = !DILocation(line: 1323, column: 18, scope: !6032)
!6037 = !DILocation(line: 1323, column: 8, scope: !6032)
!6038 = !DILocation(line: 1324, column: 6, scope: !6032)
!6039 = !DILocation(line: 1328, column: 6, scope: !6028)
!6040 = !DILocation(line: 1335, column: 12, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1335, column: 11)
!6042 = !DILocation(line: 1336, column: 4, scope: !6041)
!6043 = !DILocation(line: 1336, column: 7, scope: !6041)
!6044 = !DILocation(line: 1336, column: 30, scope: !6041)
!6045 = !DILocation(line: 1336, column: 33, scope: !6041)
!6046 = !DILocation(line: 1336, column: 50, scope: !6041)
!6047 = !DILocation(line: 1335, column: 11, scope: !5980)
!6048 = !DILocation(line: 1337, column: 2, scope: !6041)
!6049 = !DILocation(line: 1338, column: 5, scope: !5981)
!6050 = !DILocation(line: 1338, column: 5, scope: !5980)
!6051 = !DILocation(line: 1341, column: 1, scope: !5973)
!6052 = distinct !DISubprogram(name: "gimplify_bind_expr", scope: !3, file: !3, line: 1073, type: !5620, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6053)
!6053 = !{!6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6068, !6071, !6072, !6073, !6074}
!6054 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6052, file: !3, line: 1073, type: !1093)
!6055 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6052, file: !3, line: 1073, type: !2939)
!6056 = !DILocalVariable(name: "bind_expr", scope: !6052, file: !3, line: 1075, type: !734)
!6057 = !DILocalVariable(name: "old_save_stack", scope: !6052, file: !3, line: 1076, type: !727)
!6058 = !DILocalVariable(name: "t", scope: !6052, file: !3, line: 1077, type: !734)
!6059 = !DILocalVariable(name: "gimple_bind", scope: !6052, file: !3, line: 1078, type: !1058)
!6060 = !DILocalVariable(name: "body", scope: !6052, file: !3, line: 1079, type: !1048)
!6061 = !DILocalVariable(name: "temp", scope: !6052, file: !3, line: 1081, type: !734)
!6062 = !DILocalVariable(name: "ctx", scope: !6063, file: !3, line: 1088, type: !2191)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1087, column: 2)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1086, column: 11)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 1085, column: 5)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1084, column: 3)
!6067 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1084, column: 3)
!6068 = !DILocalVariable(name: "stack_save", scope: !6069, file: !3, line: 1132, type: !1058)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1131, column: 5)
!6070 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1130, column: 7)
!6071 = !DILocalVariable(name: "stack_restore", scope: !6069, file: !3, line: 1132, type: !1058)
!6072 = !DILocalVariable(name: "gs", scope: !6069, file: !3, line: 1132, type: !1058)
!6073 = !DILocalVariable(name: "cleanup", scope: !6069, file: !3, line: 1133, type: !1048)
!6074 = !DILocalVariable(name: "new_body", scope: !6069, file: !3, line: 1133, type: !1048)
!6075 = !DILocation(line: 0, scope: !6052)
!6076 = !DILocation(line: 1075, column: 20, scope: !6052)
!6077 = !DILocation(line: 1076, column: 25, scope: !6052)
!6078 = !DILocation(line: 1076, column: 40, scope: !6052)
!6079 = !DILocation(line: 1079, column: 3, scope: !6052)
!6080 = !DILocation(line: 1081, column: 15, scope: !6052)
!6081 = !DILocation(line: 1084, column: 12, scope: !6067)
!6082 = !DILocation(line: 1084, column: 8, scope: !6067)
!6083 = !DILocation(line: 0, scope: !6067)
!6084 = !DILocation(line: 1084, column: 3, scope: !6067)
!6085 = !DILocation(line: 1086, column: 11, scope: !6064)
!6086 = !DILocation(line: 1086, column: 25, scope: !6064)
!6087 = !DILocation(line: 1086, column: 11, scope: !6065)
!6088 = !DILocation(line: 1088, column: 35, scope: !6063)
!6089 = !DILocation(line: 0, scope: !6063)
!6090 = !DILocation(line: 1091, column: 8, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1091, column: 8)
!6092 = !DILocation(line: 1091, column: 12, scope: !6091)
!6093 = !DILocation(line: 1091, column: 16, scope: !6091)
!6094 = !DILocation(line: 1092, column: 8, scope: !6091)
!6095 = !DILocation(line: 1092, column: 14, scope: !6091)
!6096 = !DILocation(line: 1093, column: 5, scope: !6091)
!6097 = !DILocation(line: 1093, column: 32, scope: !6091)
!6098 = !DILocation(line: 1094, column: 6, scope: !6091)
!6099 = !DILocation(line: 1093, column: 8, scope: !6091)
!6100 = !DILocation(line: 1094, column: 26, scope: !6091)
!6101 = !DILocation(line: 1091, column: 8, scope: !6063)
!6102 = !DILocation(line: 1095, column: 24, scope: !6091)
!6103 = !DILocation(line: 1095, column: 6, scope: !6091)
!6104 = !DILocation(line: 1097, column: 4, scope: !6063)
!6105 = !DILocation(line: 1097, column: 33, scope: !6063)
!6106 = !DILocation(line: 1099, column: 8, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1099, column: 8)
!6108 = !DILocation(line: 1099, column: 31, scope: !6107)
!6109 = !DILocation(line: 1099, column: 35, scope: !6107)
!6110 = !DILocation(line: 1099, column: 53, scope: !6107)
!6111 = !DILocation(line: 1099, column: 56, scope: !6107)
!6112 = !DILocation(line: 1099, column: 8, scope: !6063)
!6113 = !DILocation(line: 1100, column: 12, scope: !6107)
!6114 = !DILocation(line: 1100, column: 40, scope: !6107)
!6115 = !DILocation(line: 1100, column: 6, scope: !6107)
!6116 = !DILocation(line: 1110, column: 11, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1110, column: 11)
!6118 = !DILocation(line: 1111, column: 4, scope: !6117)
!6119 = !DILocation(line: 1111, column: 8, scope: !6117)
!6120 = !DILocation(line: 1111, column: 34, scope: !6117)
!6121 = !DILocation(line: 1112, column: 8, scope: !6117)
!6122 = !DILocation(line: 1112, column: 37, scope: !6117)
!6123 = !DILocation(line: 1113, column: 4, scope: !6117)
!6124 = !DILocation(line: 1113, column: 8, scope: !6117)
!6125 = !DILocation(line: 1114, column: 4, scope: !6117)
!6126 = !DILocation(line: 1114, column: 22, scope: !6117)
!6127 = !DILocation(line: 1114, column: 34, scope: !6117)
!6128 = !DILocation(line: 1114, column: 38, scope: !6117)
!6129 = !DILocation(line: 1115, column: 4, scope: !6117)
!6130 = !DILocation(line: 1115, column: 8, scope: !6117)
!6131 = !DILocation(line: 1110, column: 11, scope: !6065)
!6132 = !DILocation(line: 1116, column: 2, scope: !6117)
!6133 = !DILocation(line: 1116, column: 24, scope: !6117)
!6134 = !DILocation(line: 1084, column: 48, scope: !6066)
!6135 = !DILocation(line: 1084, column: 3, scope: !6066)
!6136 = distinct !{!6136, !6084, !6137}
!6137 = !DILocation(line: 1117, column: 5, scope: !6067)
!6138 = !DILocation(line: 1119, column: 36, scope: !6052)
!6139 = !DILocation(line: 1120, column: 36, scope: !6052)
!6140 = !DILocation(line: 1119, column: 17, scope: !6052)
!6141 = !DILocation(line: 1121, column: 3, scope: !6052)
!6142 = !DILocation(line: 1123, column: 3, scope: !6052)
!6143 = !DILocation(line: 1123, column: 18, scope: !6052)
!6144 = !DILocation(line: 1123, column: 29, scope: !6052)
!6145 = !DILocation(line: 1126, column: 8, scope: !6052)
!6146 = !DILocation(line: 1127, column: 19, scope: !6052)
!6147 = !DILocation(line: 1127, column: 3, scope: !6052)
!6148 = !DILocation(line: 1128, column: 38, scope: !6052)
!6149 = !DILocation(line: 1128, column: 3, scope: !6052)
!6150 = !DILocation(line: 1130, column: 7, scope: !6070)
!6151 = !DILocation(line: 1130, column: 22, scope: !6070)
!6152 = !DILocation(line: 1130, column: 7, scope: !6052)
!6153 = !DILocation(line: 1132, column: 7, scope: !6069)
!6154 = !DILocation(line: 1133, column: 7, scope: !6069)
!6155 = !DILocation(line: 0, scope: !6069)
!6156 = !DILocation(line: 1138, column: 7, scope: !6069)
!6157 = !DILocation(line: 1140, column: 26, scope: !6069)
!6158 = !DILocation(line: 1140, column: 15, scope: !6069)
!6159 = !DILocation(line: 1141, column: 40, scope: !6069)
!6160 = !DILocation(line: 1141, column: 7, scope: !6069)
!6161 = !DILocation(line: 1142, column: 30, scope: !6069)
!6162 = !DILocation(line: 1142, column: 62, scope: !6069)
!6163 = !DILocation(line: 1142, column: 12, scope: !6069)
!6164 = !DILocation(line: 1145, column: 41, scope: !6069)
!6165 = !DILocation(line: 1145, column: 7, scope: !6069)
!6166 = !DILocation(line: 1146, column: 7, scope: !6069)
!6167 = !DILocation(line: 1147, column: 42, scope: !6069)
!6168 = !DILocation(line: 1147, column: 7, scope: !6069)
!6169 = !DILocation(line: 1148, column: 5, scope: !6070)
!6170 = !DILocation(line: 1150, column: 3, scope: !6052)
!6171 = !DILocation(line: 1148, column: 5, scope: !6069)
!6172 = !DILocation(line: 1150, column: 18, scope: !6052)
!6173 = !DILocation(line: 1150, column: 29, scope: !6052)
!6174 = !DILocation(line: 1151, column: 3, scope: !6052)
!6175 = !DILocation(line: 1153, column: 3, scope: !6052)
!6176 = !DILocation(line: 1155, column: 7, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1155, column: 7)
!6178 = !DILocation(line: 1155, column: 7, scope: !6052)
!6179 = !DILocation(line: 1158, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 1156, column: 5)
!6181 = !DILocation(line: 1162, column: 3, scope: !6052)
!6182 = !DILocation(line: 1163, column: 1, scope: !6052)
!6183 = distinct !DISubprogram(name: "gimplify_loop_expr", scope: !3, file: !3, line: 1348, type: !5620, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6184)
!6184 = !{!6185, !6186, !6187, !6188}
!6185 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6183, file: !3, line: 1348, type: !1093)
!6186 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6183, file: !3, line: 1348, type: !2939)
!6187 = !DILocalVariable(name: "saved_label", scope: !6183, file: !3, line: 1350, type: !734)
!6188 = !DILocalVariable(name: "start_label", scope: !6183, file: !3, line: 1351, type: !734)
!6189 = !DILocation(line: 0, scope: !6183)
!6190 = !DILocation(line: 1350, column: 22, scope: !6183)
!6191 = !DILocation(line: 1350, column: 37, scope: !6183)
!6192 = !DILocation(line: 1351, column: 22, scope: !6183)
!6193 = !DILocation(line: 1353, column: 33, scope: !6183)
!6194 = !DILocation(line: 1353, column: 3, scope: !6183)
!6195 = !DILocation(line: 1355, column: 3, scope: !6183)
!6196 = !DILocation(line: 1355, column: 18, scope: !6183)
!6197 = !DILocation(line: 1355, column: 29, scope: !6183)
!6198 = !DILocation(line: 1357, column: 21, scope: !6183)
!6199 = !DILocation(line: 1357, column: 3, scope: !6183)
!6200 = !DILocation(line: 1359, column: 33, scope: !6183)
!6201 = !DILocation(line: 1359, column: 3, scope: !6183)
!6202 = !DILocation(line: 1361, column: 7, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1361, column: 7)
!6204 = !DILocation(line: 1361, column: 22, scope: !6203)
!6205 = !DILocation(line: 1361, column: 7, scope: !6183)
!6206 = !DILocation(line: 1362, column: 35, scope: !6203)
!6207 = !DILocation(line: 1362, column: 5, scope: !6203)
!6208 = !DILocation(line: 1364, column: 3, scope: !6183)
!6209 = !DILocation(line: 1364, column: 18, scope: !6183)
!6210 = !DILocation(line: 1364, column: 29, scope: !6183)
!6211 = !DILocation(line: 1366, column: 11, scope: !6183)
!6212 = !DILocation(line: 1367, column: 3, scope: !6183)
!6213 = distinct !DISubprogram(name: "gimplify_switch_expr", scope: !3, file: !3, line: 1435, type: !5620, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6214)
!6214 = !{!6215, !6216, !6217, !6218, !6219, !6220, !6223, !6224, !6225, !6226, !6227, !6228, !6230, !6231, !6232, !6235, !6238, !6241, !6242}
!6215 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6213, file: !3, line: 1435, type: !1093)
!6216 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6213, file: !3, line: 1435, type: !2939)
!6217 = !DILocalVariable(name: "switch_expr", scope: !6213, file: !3, line: 1437, type: !734)
!6218 = !DILocalVariable(name: "switch_body_seq", scope: !6213, file: !3, line: 1438, type: !1048)
!6219 = !DILocalVariable(name: "ret", scope: !6213, file: !3, line: 1439, type: !390)
!6220 = !DILocalVariable(name: "labels", scope: !6221, file: !3, line: 1448, type: !2176)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1447, column: 5)
!6222 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1446, column: 7)
!6223 = !DILocalVariable(name: "saved_labels", scope: !6221, file: !3, line: 1449, type: !2176)
!6224 = !DILocalVariable(name: "default_case", scope: !6221, file: !3, line: 1450, type: !734)
!6225 = !DILocalVariable(name: "i", scope: !6221, file: !3, line: 1451, type: !1204)
!6226 = !DILocalVariable(name: "len", scope: !6221, file: !3, line: 1451, type: !1204)
!6227 = !DILocalVariable(name: "gimple_switch", scope: !6221, file: !3, line: 1452, type: !1058)
!6228 = !DILocalVariable(name: "elt", scope: !6229, file: !3, line: 1470, type: !734)
!6229 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1469, column: 2)
!6230 = !DILocalVariable(name: "low", scope: !6229, file: !3, line: 1471, type: !734)
!6231 = !DILocalVariable(name: "remove_element", scope: !6229, file: !3, line: 1472, type: !727)
!6232 = !DILocalVariable(name: "high", scope: !6233, file: !3, line: 1477, type: !734)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1475, column: 6)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1474, column: 8)
!6235 = !DILocalVariable(name: "type", scope: !6236, file: !3, line: 1501, type: !734)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 1500, column: 2)
!6237 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1499, column: 11)
!6238 = !DILocalVariable(name: "low", scope: !6239, file: !3, line: 1516, type: !734)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1515, column: 6)
!6240 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 1509, column: 8)
!6241 = !DILocalVariable(name: "high", scope: !6239, file: !3, line: 1516, type: !734)
!6242 = !DILocalVariable(name: "new_default", scope: !6243, file: !3, line: 1544, type: !1058)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 1543, column: 6)
!6244 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 1542, column: 8)
!6245 = !DILocation(line: 0, scope: !6213)
!6246 = !DILocation(line: 1437, column: 22, scope: !6213)
!6247 = !DILocation(line: 1438, column: 3, scope: !6213)
!6248 = !DILocation(line: 1438, column: 14, scope: !6213)
!6249 = !DILocation(line: 1441, column: 25, scope: !6213)
!6250 = !DILocation(line: 1441, column: 9, scope: !6213)
!6251 = !DILocation(line: 1443, column: 23, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1443, column: 7)
!6253 = !DILocation(line: 1446, column: 7, scope: !6222)
!6254 = !DILocation(line: 1446, column: 7, scope: !6213)
!6255 = !DILocation(line: 1448, column: 7, scope: !6221)
!6256 = !DILocation(line: 0, scope: !6221)
!6257 = !DILocation(line: 1456, column: 7, scope: !6221)
!6258 = !DILocation(line: 1460, column: 22, scope: !6221)
!6259 = !DILocation(line: 1460, column: 37, scope: !6221)
!6260 = !DILocation(line: 1461, column: 36, scope: !6221)
!6261 = !DILocation(line: 1461, column: 7, scope: !6221)
!6262 = !DILocation(line: 1461, column: 22, scope: !6221)
!6263 = !DILocation(line: 1461, column: 34, scope: !6221)
!6264 = !DILocation(line: 1463, column: 7, scope: !6221)
!6265 = !DILocation(line: 1464, column: 16, scope: !6221)
!6266 = !DILocation(line: 1464, column: 31, scope: !6221)
!6267 = !DILocation(line: 1464, column: 14, scope: !6221)
!6268 = !DILocation(line: 1465, column: 34, scope: !6221)
!6269 = !DILocation(line: 1468, column: 7, scope: !6221)
!6270 = !DILocation(line: 1468, column: 18, scope: !6221)
!6271 = !DILocation(line: 1450, column: 12, scope: !6221)
!6272 = !DILocation(line: 1467, column: 9, scope: !6221)
!6273 = !DILocation(line: 1468, column: 16, scope: !6221)
!6274 = !DILocation(line: 1470, column: 15, scope: !6229)
!6275 = !DILocation(line: 0, scope: !6229)
!6276 = !DILocation(line: 1471, column: 15, scope: !6229)
!6277 = !DILocation(line: 1474, column: 8, scope: !6234)
!6278 = !DILocation(line: 1474, column: 8, scope: !6229)
!6279 = !DILocation(line: 1477, column: 20, scope: !6233)
!6280 = !DILocation(line: 0, scope: !6233)
!6281 = !DILocation(line: 1478, column: 12, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1478, column: 12)
!6283 = !DILocation(line: 1478, column: 17, scope: !6282)
!6284 = !DILocation(line: 1478, column: 20, scope: !6282)
!6285 = !DILocation(line: 1478, column: 12, scope: !6233)
!6286 = !DILocation(line: 1484, column: 8, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1482, column: 6)
!6288 = !DILocation(line: 0, scope: !6234)
!6289 = !DILocation(line: 1489, column: 8, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1489, column: 8)
!6291 = !DILocation(line: 1489, column: 8, scope: !6229)
!6292 = !DILocation(line: 1490, column: 6, scope: !6290)
!6293 = !DILocation(line: 1492, column: 7, scope: !6290)
!6294 = distinct !{!6294, !6269, !6295}
!6295 = !DILocation(line: 1493, column: 2, scope: !6221)
!6296 = !DILocation(line: 1496, column: 12, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1496, column: 11)
!6298 = !DILocation(line: 1496, column: 11, scope: !6221)
!6299 = !DILocation(line: 1497, column: 2, scope: !6297)
!6300 = !DILocation(line: 1499, column: 12, scope: !6237)
!6301 = !DILocation(line: 1499, column: 11, scope: !6221)
!6302 = !DILocation(line: 1501, column: 16, scope: !6236)
!6303 = !DILocation(line: 0, scope: !6236)
!6304 = !DILocation(line: 1507, column: 16, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 1507, column: 8)
!6306 = !DILocation(line: 1507, column: 13, scope: !6305)
!6307 = !DILocation(line: 1507, column: 8, scope: !6236)
!6308 = !DILocation(line: 1508, column: 13, scope: !6305)
!6309 = !DILocation(line: 1508, column: 6, scope: !6305)
!6310 = !DILocation(line: 1509, column: 8, scope: !6240)
!6311 = !DILocation(line: 1510, column: 8, scope: !6240)
!6312 = !DILocation(line: 1510, column: 11, scope: !6240)
!6313 = !DILocation(line: 1511, column: 8, scope: !6240)
!6314 = !DILocation(line: 1511, column: 11, scope: !6240)
!6315 = !DILocation(line: 1512, column: 8, scope: !6240)
!6316 = !DILocation(line: 1512, column: 11, scope: !6240)
!6317 = !DILocation(line: 1513, column: 8, scope: !6240)
!6318 = !DILocation(line: 1513, column: 31, scope: !6240)
!6319 = !DILocation(line: 1514, column: 10, scope: !6240)
!6320 = !DILocation(line: 1513, column: 11, scope: !6240)
!6321 = !DILocation(line: 1509, column: 8, scope: !6236)
!6322 = !DILocation(line: 1516, column: 25, scope: !6239)
!6323 = !DILocation(line: 0, scope: !6239)
!6324 = !DILocation(line: 1517, column: 13, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1517, column: 12)
!6326 = !DILocation(line: 1517, column: 12, scope: !6239)
!6327 = !DILocation(line: 1518, column: 10, scope: !6325)
!6328 = !DILocation(line: 1518, column: 3, scope: !6325)
!6329 = !DILocation(line: 1519, column: 38, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1519, column: 12)
!6331 = !DILocation(line: 1519, column: 12, scope: !6330)
!6332 = !DILocation(line: 1519, column: 12, scope: !6239)
!6333 = !DILocation(line: 1521, column: 5, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1521, column: 5)
!6335 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1520, column: 3)
!6336 = !DILocation(line: 0, scope: !6334)
!6337 = !DILocation(line: 1521, column: 19, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 1521, column: 5)
!6339 = !DILocation(line: 1523, column: 16, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1522, column: 7)
!6341 = !DILocation(line: 1524, column: 15, scope: !6340)
!6342 = !DILocation(line: 1525, column: 14, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1525, column: 13)
!6344 = !DILocation(line: 1525, column: 13, scope: !6340)
!6345 = !DILocation(line: 1526, column: 10, scope: !6343)
!6346 = !DILocation(line: 1526, column: 4, scope: !6343)
!6347 = !DILocation(line: 0, scope: !6340)
!6348 = !DILocation(line: 1527, column: 14, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1527, column: 13)
!6350 = !DILocation(line: 1527, column: 37, scope: !6349)
!6351 = !DILocation(line: 1528, column: 10, scope: !6349)
!6352 = !DILocation(line: 1528, column: 7, scope: !6349)
!6353 = !DILocation(line: 1529, column: 6, scope: !6349)
!6354 = !DILocation(line: 1529, column: 10, scope: !6349)
!6355 = !DILocation(line: 1530, column: 37, scope: !6349)
!6356 = !DILocation(line: 1530, column: 12, scope: !6349)
!6357 = !DILocation(line: 1530, column: 10, scope: !6349)
!6358 = !DILocation(line: 1531, column: 13, scope: !6349)
!6359 = !DILocation(line: 1531, column: 10, scope: !6349)
!6360 = !DILocation(line: 1527, column: 13, scope: !6340)
!6361 = !DILocation(line: 1521, column: 27, scope: !6338)
!6362 = !DILocation(line: 1521, column: 5, scope: !6338)
!6363 = distinct !{!6363, !6333, !6364}
!6364 = !DILocation(line: 1533, column: 7, scope: !6334)
!6365 = !DILocation(line: 1534, column: 11, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1534, column: 9)
!6367 = !DILocation(line: 1534, column: 9, scope: !6335)
!6368 = !DILocation(line: 1535, column: 22, scope: !6366)
!6369 = !DILocation(line: 1535, column: 7, scope: !6366)
!6370 = !DILocation(line: 1542, column: 9, scope: !6244)
!6371 = !DILocation(line: 1542, column: 8, scope: !6236)
!6372 = !DILocation(line: 1547, column: 5, scope: !6243)
!6373 = !DILocation(line: 1550, column: 42, scope: !6243)
!6374 = !DILocation(line: 1550, column: 22, scope: !6243)
!6375 = !DILocation(line: 0, scope: !6243)
!6376 = !DILocation(line: 1551, column: 8, scope: !6243)
!6377 = !DILocation(line: 1552, column: 6, scope: !6243)
!6378 = !DILocation(line: 1555, column: 48, scope: !6221)
!6379 = !DILocation(line: 1556, column: 62, scope: !6221)
!6380 = !DILocation(line: 1555, column: 23, scope: !6221)
!6381 = !DILocation(line: 1557, column: 7, scope: !6221)
!6382 = !DILocation(line: 1558, column: 36, scope: !6221)
!6383 = !DILocation(line: 1558, column: 7, scope: !6221)
!6384 = !DILocation(line: 1559, column: 7, scope: !6221)
!6385 = !DILocation(line: 1560, column: 5, scope: !6222)
!6386 = !DILocation(line: 1560, column: 5, scope: !6221)
!6387 = !DILocation(line: 1562, column: 5, scope: !6222)
!6388 = !DILocation(line: 1565, column: 1, scope: !6213)
!6389 = distinct !DISubprogram(name: "gimplify_exit_expr", scope: !3, file: !3, line: 1612, type: !5913, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6390)
!6390 = !{!6391, !6392, !6393}
!6391 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6389, file: !3, line: 1612, type: !1093)
!6392 = !DILocalVariable(name: "cond", scope: !6389, file: !3, line: 1614, type: !734)
!6393 = !DILocalVariable(name: "expr", scope: !6389, file: !3, line: 1615, type: !734)
!6394 = !DILocation(line: 0, scope: !6389)
!6395 = !DILocation(line: 1614, column: 15, scope: !6389)
!6396 = !DILocation(line: 1617, column: 27, scope: !6389)
!6397 = !DILocation(line: 1617, column: 42, scope: !6389)
!6398 = !DILocation(line: 1617, column: 10, scope: !6389)
!6399 = !DILocation(line: 1618, column: 10, scope: !6389)
!6400 = !DILocation(line: 1619, column: 11, scope: !6389)
!6401 = !DILocation(line: 1621, column: 3, scope: !6389)
!6402 = distinct !DISubprogram(name: "gimplify_seq_add_stmt", scope: !3, file: !3, line: 162, type: !6403, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6405)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{null, !2939, !1058}
!6405 = !{!6406, !6407, !6408}
!6406 = !DILocalVariable(name: "seq_p", arg: 1, scope: !6402, file: !3, line: 162, type: !2939)
!6407 = !DILocalVariable(name: "gs", arg: 2, scope: !6402, file: !3, line: 162, type: !1058)
!6408 = !DILocalVariable(name: "si", scope: !6402, file: !3, line: 164, type: !3336)
!6409 = !DILocation(line: 0, scope: !6402)
!6410 = !DILocation(line: 164, column: 3, scope: !6402)
!6411 = !DILocation(line: 166, column: 10, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 166, column: 7)
!6413 = !DILocation(line: 166, column: 7, scope: !6402)
!6414 = !DILocation(line: 169, column: 7, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 169, column: 7)
!6416 = !DILocation(line: 169, column: 14, scope: !6415)
!6417 = !DILocation(line: 169, column: 7, scope: !6402)
!6418 = !DILocation(line: 170, column: 14, scope: !6415)
!6419 = !DILocation(line: 170, column: 12, scope: !6415)
!6420 = !DILocation(line: 170, column: 5, scope: !6415)
!6421 = !DILocation(line: 172, column: 18, scope: !6402)
!6422 = !DILocation(line: 172, column: 8, scope: !6402)
!6423 = !DILocation(line: 174, column: 3, scope: !6402)
!6424 = !DILocation(line: 175, column: 1, scope: !6402)
!6425 = distinct !DISubprogram(name: "gimplify_case_label_expr", scope: !3, file: !3, line: 1569, type: !5620, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6426)
!6426 = !{!6427, !6428, !6429, !6430}
!6427 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6425, file: !3, line: 1569, type: !1093)
!6428 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6425, file: !3, line: 1569, type: !2939)
!6429 = !DILocalVariable(name: "ctxp", scope: !6425, file: !3, line: 1571, type: !2265)
!6430 = !DILocalVariable(name: "gimple_label", scope: !6425, file: !3, line: 1572, type: !1058)
!6431 = !DILocation(line: 0, scope: !6425)
!6432 = !DILocation(line: 1577, column: 8, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1577, column: 3)
!6434 = !DILocation(line: 0, scope: !6433)
!6435 = !DILocation(line: 1578, column: 15, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1578, column: 9)
!6437 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 1577, column: 3)
!6438 = !DILocation(line: 1578, column: 9, scope: !6436)
!6439 = !DILocation(line: 1578, column: 9, scope: !6437)
!6440 = !DILocation(line: 1577, column: 45, scope: !6437)
!6441 = !DILocation(line: 1577, column: 3, scope: !6437)
!6442 = distinct !{!6442, !6443, !6444}
!6443 = !DILocation(line: 1577, column: 3, scope: !6433)
!6444 = !DILocation(line: 1579, column: 7, scope: !6433)
!6445 = !DILocation(line: 1581, column: 38, scope: !6425)
!6446 = !DILocation(line: 1581, column: 18, scope: !6425)
!6447 = !DILocation(line: 1582, column: 3, scope: !6425)
!6448 = !DILocation(line: 1583, column: 3, scope: !6425)
!6449 = !DILocation(line: 1585, column: 3, scope: !6425)
!6450 = distinct !DISubprogram(name: "gimplify_return_expr", scope: !3, file: !3, line: 1173, type: !6451, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!390, !734, !2939}
!6453 = !{!6454, !6455, !6456, !6457, !6458, !6459, !6460}
!6454 = !DILocalVariable(name: "stmt", arg: 1, scope: !6450, file: !3, line: 1173, type: !734)
!6455 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6450, file: !3, line: 1173, type: !2939)
!6456 = !DILocalVariable(name: "ret", scope: !6450, file: !3, line: 1175, type: !1058)
!6457 = !DILocalVariable(name: "ret_expr", scope: !6450, file: !3, line: 1176, type: !734)
!6458 = !DILocalVariable(name: "result_decl", scope: !6450, file: !3, line: 1177, type: !734)
!6459 = !DILocalVariable(name: "result", scope: !6450, file: !3, line: 1177, type: !734)
!6460 = !DILocalVariable(name: "ret", scope: !6461, file: !3, line: 1186, type: !1058)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1185, column: 5)
!6462 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1182, column: 7)
!6463 = !DILocation(line: 0, scope: !6450)
!6464 = !DILocation(line: 1176, column: 19, scope: !6450)
!6465 = !DILocation(line: 1179, column: 19, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1179, column: 7)
!6467 = !DILocation(line: 1179, column: 16, scope: !6466)
!6468 = !DILocation(line: 1179, column: 7, scope: !6450)
!6469 = !DILocation(line: 1182, column: 8, scope: !6462)
!6470 = !DILocation(line: 1183, column: 7, scope: !6462)
!6471 = !DILocation(line: 1183, column: 10, scope: !6462)
!6472 = !DILocation(line: 1183, column: 31, scope: !6462)
!6473 = !DILocation(line: 1184, column: 7, scope: !6462)
!6474 = !DILocation(line: 1186, column: 20, scope: !6461)
!6475 = !DILocation(line: 0, scope: !6461)
!6476 = !DILocation(line: 1187, column: 35, scope: !6461)
!6477 = !DILocation(line: 1187, column: 7, scope: !6461)
!6478 = !DILocation(line: 1188, column: 7, scope: !6461)
!6479 = !DILocation(line: 1192, column: 7, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1192, column: 7)
!6481 = !DILocation(line: 1192, column: 7, scope: !6450)
!6482 = !DILocation(line: 1196, column: 21, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 1195, column: 5)
!6484 = !DILocation(line: 1199, column: 11, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 1199, column: 11)
!6486 = !DILocation(line: 1199, column: 35, scope: !6485)
!6487 = !DILocation(line: 1199, column: 11, scope: !6483)
!6488 = !DILocation(line: 1200, column: 16, scope: !6485)
!6489 = !DILocation(line: 1200, column: 2, scope: !6485)
!6490 = !DILocation(line: 0, scope: !6483)
!6491 = !DILocation(line: 1202, column: 7, scope: !6483)
!6492 = !DILocation(line: 0, scope: !6480)
!6493 = !DILocation(line: 1215, column: 8, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1215, column: 7)
!6495 = !DILocation(line: 1216, column: 7, scope: !6494)
!6496 = !DILocation(line: 1216, column: 42, scope: !6494)
!6497 = !DILocation(line: 1216, column: 10, scope: !6494)
!6498 = !DILocation(line: 1215, column: 7, scope: !6450)
!6499 = !DILocation(line: 1218, column: 12, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 1218, column: 12)
!6501 = !DILocation(line: 1218, column: 27, scope: !6500)
!6502 = !DILocation(line: 1218, column: 12, scope: !6494)
!6503 = !DILocation(line: 1219, column: 5, scope: !6500)
!6504 = !DILocation(line: 1222, column: 32, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 1221, column: 5)
!6506 = !DILocation(line: 1222, column: 16, scope: !6505)
!6507 = !DILocation(line: 1223, column: 11, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1223, column: 11)
!6509 = !DILocation(line: 1223, column: 42, scope: !6508)
!6510 = !DILocation(line: 1224, column: 11, scope: !6508)
!6511 = !DILocation(line: 1224, column: 45, scope: !6508)
!6512 = !DILocation(line: 1223, column: 11, scope: !6505)
!6513 = !DILocation(line: 1225, column: 9, scope: !6508)
!6514 = !DILocation(line: 1225, column: 36, scope: !6508)
!6515 = !DILocation(line: 1231, column: 7, scope: !6505)
!6516 = !DILocation(line: 1231, column: 32, scope: !6505)
!6517 = !DILocation(line: 1233, column: 7, scope: !6505)
!6518 = !DILocation(line: 1233, column: 22, scope: !6505)
!6519 = !DILocation(line: 1233, column: 34, scope: !6505)
!6520 = !DILocation(line: 0, scope: !6494)
!6521 = !DILocation(line: 1238, column: 14, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1238, column: 7)
!6523 = !DILocation(line: 1238, column: 7, scope: !6450)
!6524 = !DILocation(line: 1239, column: 5, scope: !6522)
!6525 = !DILocation(line: 1239, column: 32, scope: !6522)
!6526 = !DILocation(line: 1241, column: 21, scope: !6450)
!6527 = !DILocation(line: 1241, column: 3, scope: !6450)
!6528 = !DILocation(line: 1243, column: 9, scope: !6450)
!6529 = !DILocation(line: 1244, column: 31, scope: !6450)
!6530 = !DILocation(line: 1244, column: 3, scope: !6450)
!6531 = !DILocation(line: 1245, column: 3, scope: !6450)
!6532 = !DILocation(line: 1247, column: 3, scope: !6450)
!6533 = !DILocation(line: 1248, column: 1, scope: !6450)
!6534 = distinct !DISubprogram(name: "VEC_constructor_elt_base_iterate", scope: !135, file: !135, line: 1537, type: !6535, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6539)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{!392, !6537, !7, !6538}
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!6539 = !{!6540, !6541, !6542}
!6540 = !DILocalVariable(name: "vec_", arg: 1, scope: !6534, file: !135, line: 1537, type: !6537)
!6541 = !DILocalVariable(name: "ix_", arg: 2, scope: !6534, file: !135, line: 1537, type: !7)
!6542 = !DILocalVariable(name: "ptr", arg: 3, scope: !6534, file: !135, line: 1537, type: !6538)
!6543 = !DILocation(line: 0, scope: !6534)
!6544 = !DILocation(line: 1537, column: 1, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6534, file: !135, line: 1537, column: 1)
!6546 = !DILocation(line: 1537, column: 1, scope: !6534)
!6547 = !DILocation(line: 1537, column: 1, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6545, file: !135, line: 1537, column: 1)
!6549 = !DILocation(line: 1537, column: 1, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !135, line: 1537, column: 1)
!6551 = !DILocation(line: 0, scope: !6545)
!6552 = distinct !DISubprogram(name: "gimplify_save_expr", scope: !3, file: !3, line: 4671, type: !5834, scopeLine: 4672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6553)
!6553 = !{!6554, !6555, !6556, !6557, !6558}
!6554 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6552, file: !3, line: 4671, type: !1093)
!6555 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6552, file: !3, line: 4671, type: !2939)
!6556 = !DILocalVariable(name: "post_p", arg: 3, scope: !6552, file: !3, line: 4671, type: !2939)
!6557 = !DILocalVariable(name: "ret", scope: !6552, file: !3, line: 4673, type: !390)
!6558 = !DILocalVariable(name: "val", scope: !6552, file: !3, line: 4674, type: !734)
!6559 = !DILocation(line: 0, scope: !6552)
!6560 = !DILocation(line: 4676, column: 3, scope: !6552)
!6561 = !DILocation(line: 4677, column: 9, scope: !6552)
!6562 = !DILocation(line: 4680, column: 8, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 4680, column: 7)
!6564 = !DILocation(line: 4680, column: 7, scope: !6552)
!6565 = !DILocation(line: 4685, column: 11, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 4685, column: 11)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 4681, column: 5)
!6568 = !DILocation(line: 4685, column: 30, scope: !6566)
!6569 = !DILocation(line: 4685, column: 27, scope: !6566)
!6570 = !DILocation(line: 4685, column: 11, scope: !6567)
!6571 = !DILocation(line: 4687, column: 26, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 4686, column: 2)
!6573 = !DILocation(line: 4687, column: 10, scope: !6572)
!6574 = !DILocation(line: 4690, column: 2, scope: !6572)
!6575 = !DILocation(line: 4692, column: 8, scope: !6566)
!6576 = !DILocation(line: 0, scope: !6566)
!6577 = !DILocation(line: 4694, column: 7, scope: !6567)
!6578 = !DILocation(line: 4694, column: 33, scope: !6567)
!6579 = !DILocation(line: 4695, column: 7, scope: !6567)
!6580 = !DILocation(line: 4695, column: 38, scope: !6567)
!6581 = !DILocation(line: 4696, column: 5, scope: !6567)
!6582 = !DILocation(line: 4698, column: 11, scope: !6552)
!6583 = !DILocation(line: 4700, column: 3, scope: !6552)
!6584 = distinct !DISubprogram(name: "gimplify_asm_expr", scope: !3, file: !3, line: 4818, type: !5834, scopeLine: 4819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6585)
!6585 = !{!6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606, !6610, !6611, !6614, !6618, !6619, !6624, !6625, !6626, !6627, !6628, !6629, !6633, !6634, !6635}
!6586 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6584, file: !3, line: 4818, type: !1093)
!6587 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6584, file: !3, line: 4818, type: !2939)
!6588 = !DILocalVariable(name: "post_p", arg: 3, scope: !6584, file: !3, line: 4818, type: !2939)
!6589 = !DILocalVariable(name: "expr", scope: !6584, file: !3, line: 4820, type: !734)
!6590 = !DILocalVariable(name: "noutputs", scope: !6584, file: !3, line: 4821, type: !392)
!6591 = !DILocalVariable(name: "oconstraints", scope: !6584, file: !3, line: 4822, type: !2164)
!6592 = !DILocalVariable(name: "i", scope: !6584, file: !3, line: 4823, type: !392)
!6593 = !DILocalVariable(name: "link", scope: !6584, file: !3, line: 4824, type: !734)
!6594 = !DILocalVariable(name: "constraint", scope: !6584, file: !3, line: 4825, type: !732)
!6595 = !DILocalVariable(name: "allows_mem", scope: !6584, file: !3, line: 4826, type: !727)
!6596 = !DILocalVariable(name: "allows_reg", scope: !6584, file: !3, line: 4826, type: !727)
!6597 = !DILocalVariable(name: "is_inout", scope: !6584, file: !3, line: 4826, type: !727)
!6598 = !DILocalVariable(name: "ret", scope: !6584, file: !3, line: 4827, type: !390)
!6599 = !DILocalVariable(name: "tret", scope: !6584, file: !3, line: 4827, type: !390)
!6600 = !DILocalVariable(name: "stmt", scope: !6584, file: !3, line: 4828, type: !1058)
!6601 = !DILocalVariable(name: "inputs", scope: !6584, file: !3, line: 4829, type: !1613)
!6602 = !DILocalVariable(name: "outputs", scope: !6584, file: !3, line: 4830, type: !1613)
!6603 = !DILocalVariable(name: "clobbers", scope: !6584, file: !3, line: 4831, type: !1613)
!6604 = !DILocalVariable(name: "labels", scope: !6584, file: !3, line: 4832, type: !1613)
!6605 = !DILocalVariable(name: "link_next", scope: !6584, file: !3, line: 4833, type: !734)
!6606 = !DILocalVariable(name: "ok", scope: !6607, file: !3, line: 4845, type: !727)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 4844, column: 5)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 4843, column: 3)
!6609 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4843, column: 3)
!6610 = !DILocalVariable(name: "constraint_len", scope: !6607, file: !3, line: 4846, type: !1204)
!6611 = !DILocalVariable(name: "input", scope: !6612, file: !3, line: 4885, type: !734)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 4881, column: 2)
!6613 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4880, column: 11)
!6614 = !DILocalVariable(name: "buf", scope: !6612, file: !3, line: 4886, type: !6615)
!6615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 80, elements: !6616)
!6616 = !{!6617}
!6617 = !DISubrange(count: 10)
!6618 = !DILocalVariable(name: "p", scope: !6612, file: !3, line: 4889, type: !729)
!6619 = !DILocalVariable(name: "len", scope: !6620, file: !3, line: 4904, type: !1204)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 4903, column: 3)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 4902, column: 12)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4895, column: 6)
!6623 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 4894, column: 8)
!6624 = !DILocalVariable(name: "buflen", scope: !6620, file: !3, line: 4904, type: !1204)
!6625 = !DILocalVariable(name: "beg", scope: !6620, file: !3, line: 4905, type: !729)
!6626 = !DILocalVariable(name: "end", scope: !6620, file: !3, line: 4905, type: !729)
!6627 = !DILocalVariable(name: "str", scope: !6620, file: !3, line: 4905, type: !729)
!6628 = !DILocalVariable(name: "dst", scope: !6620, file: !3, line: 4905, type: !729)
!6629 = !DILocalVariable(name: "tem", scope: !6630, file: !3, line: 4925, type: !732)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 4924, column: 7)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 4923, column: 5)
!6632 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4923, column: 5)
!6633 = !DILocalVariable(name: "mem_p", scope: !6630, file: !3, line: 4926, type: !727)
!6634 = !DILocalVariable(name: "reg_p", scope: !6630, file: !3, line: 4926, type: !727)
!6635 = !DILocalVariable(name: "inout_p", scope: !6630, file: !3, line: 4926, type: !727)
!6636 = !DILocation(line: 0, scope: !6584)
!6637 = !DILocation(line: 4825, column: 3, scope: !6584)
!6638 = !DILocation(line: 4826, column: 3, scope: !6584)
!6639 = !DILocation(line: 4829, column: 3, scope: !6584)
!6640 = !DILocation(line: 4830, column: 3, scope: !6584)
!6641 = !DILocation(line: 4831, column: 3, scope: !6584)
!6642 = !DILocation(line: 4832, column: 3, scope: !6584)
!6643 = !DILocation(line: 4835, column: 10, scope: !6584)
!6644 = !DILocation(line: 4836, column: 27, scope: !6584)
!6645 = !DILocation(line: 4836, column: 14, scope: !6584)
!6646 = !DILocation(line: 4837, column: 34, scope: !6584)
!6647 = !DILocation(line: 4839, column: 40, scope: !6584)
!6648 = !DILocation(line: 4839, column: 31, scope: !6584)
!6649 = !DILocation(line: 4839, column: 20, scope: !6584)
!6650 = !DILocation(line: 4839, column: 10, scope: !6584)
!6651 = !DILocation(line: 4843, column: 22, scope: !6609)
!6652 = !DILocation(line: 0, scope: !6612)
!6653 = !DILocation(line: 0, scope: !6630)
!6654 = !DILocation(line: 4843, column: 8, scope: !6609)
!6655 = !DILocation(line: 4841, column: 7, scope: !6584)
!6656 = !DILocation(line: 0, scope: !6609)
!6657 = !DILocation(line: 4843, column: 3, scope: !6609)
!6658 = !DILocation(line: 4848, column: 19, scope: !6607)
!6659 = !DILocation(line: 4852, column: 4, scope: !6607)
!6660 = !DILocation(line: 4852, column: 2, scope: !6607)
!6661 = !DILocation(line: 4850, column: 7, scope: !6607)
!6662 = !DILocation(line: 4851, column: 2, scope: !6607)
!6663 = !DILocation(line: 4853, column: 24, scope: !6607)
!6664 = !DILocation(line: 0, scope: !6607)
!6665 = !DILocation(line: 4854, column: 26, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4854, column: 11)
!6667 = !DILocation(line: 4854, column: 11, scope: !6607)
!6668 = !DILocation(line: 4857, column: 12, scope: !6607)
!6669 = !DILocation(line: 4859, column: 12, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4859, column: 11)
!6671 = !DILocation(line: 4859, column: 11, scope: !6607)
!6672 = !DILocation(line: 4862, column: 13, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 4860, column: 2)
!6674 = !DILocation(line: 4863, column: 2, scope: !6673)
!6675 = !DILocation(line: 4865, column: 12, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4865, column: 11)
!6677 = !DILocation(line: 4865, column: 23, scope: !6676)
!6678 = !DILocation(line: 4865, column: 26, scope: !6676)
!6679 = !DILocation(line: 4865, column: 11, scope: !6607)
!6680 = !DILocation(line: 4866, column: 20, scope: !6676)
!6681 = !DILocation(line: 4866, column: 2, scope: !6676)
!6682 = !DILocation(line: 4868, column: 30, scope: !6607)
!6683 = !DILocation(line: 4869, column: 8, scope: !6607)
!6684 = !DILocation(line: 4868, column: 14, scope: !6607)
!6685 = !DILocation(line: 4871, column: 16, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4871, column: 11)
!6687 = !DILocation(line: 4871, column: 11, scope: !6607)
!6688 = !DILocation(line: 4873, column: 4, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 4872, column: 2)
!6690 = !DILocation(line: 4875, column: 2, scope: !6689)
!6691 = !DILocation(line: 4877, column: 7, scope: !6607)
!6692 = !DILocation(line: 4878, column: 25, scope: !6607)
!6693 = !DILocation(line: 4880, column: 11, scope: !6613)
!6694 = !DILocation(line: 4880, column: 11, scope: !6607)
!6695 = !DILocation(line: 4886, column: 4, scope: !6612)
!6696 = !DILocation(line: 4886, column: 9, scope: !6612)
!6697 = !DILocation(line: 4889, column: 23, scope: !6612)
!6698 = !DILocation(line: 4889, column: 14, scope: !6612)
!6699 = !DILocation(line: 4890, column: 9, scope: !6612)
!6700 = !DILocation(line: 4891, column: 53, scope: !6612)
!6701 = !DILocation(line: 4891, column: 39, scope: !6612)
!6702 = !DILocation(line: 4891, column: 4, scope: !6612)
!6703 = !DILocation(line: 4891, column: 37, scope: !6612)
!6704 = !DILocation(line: 4894, column: 8, scope: !6623)
!6705 = !DILocation(line: 4894, column: 8, scope: !6612)
!6706 = !DILocation(line: 4896, column: 8, scope: !6622)
!6707 = !DILocation(line: 4902, column: 12, scope: !6621)
!6708 = !DILocation(line: 4902, column: 28, scope: !6621)
!6709 = !DILocation(line: 0, scope: !6621)
!6710 = !DILocation(line: 4902, column: 12, scope: !6622)
!6711 = !DILocation(line: 0, scope: !6620)
!6712 = !DILocation(line: 4907, column: 10, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4907, column: 5)
!6714 = !DILocation(line: 0, scope: !6713)
!6715 = !DILocation(line: 4909, column: 15, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 4908, column: 7)
!6717 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 4907, column: 5)
!6718 = !DILocation(line: 4910, column: 17, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 4910, column: 13)
!6720 = !DILocation(line: 4910, column: 13, scope: !6716)
!6721 = !DILocation(line: 4911, column: 10, scope: !6719)
!6722 = !DILocation(line: 4911, column: 4, scope: !6719)
!6723 = !DILocation(line: 0, scope: !6716)
!6724 = !DILocation(line: 4912, column: 27, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 4912, column: 13)
!6726 = !DILocation(line: 4912, column: 34, scope: !6725)
!6727 = !DILocation(line: 4912, column: 13, scope: !6716)
!6728 = !DILocation(line: 4913, column: 4, scope: !6725)
!6729 = !DILocation(line: 0, scope: !6725)
!6730 = !DILocation(line: 4916, column: 13, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 4916, column: 13)
!6732 = !DILocation(line: 4916, column: 13, scope: !6716)
!6733 = !DILocation(line: 4907, column: 5, scope: !6717)
!6734 = distinct !{!6734, !6735, !6736}
!6735 = !DILocation(line: 4907, column: 5, scope: !6713)
!6736 = !DILocation(line: 4920, column: 7, scope: !6713)
!6737 = !DILocation(line: 4922, column: 20, scope: !6620)
!6738 = !DILocation(line: 4923, column: 18, scope: !6632)
!6739 = !DILocation(line: 4923, column: 10, scope: !6632)
!6740 = !DILocation(line: 0, scope: !6632)
!6741 = !DILocation(line: 4925, column: 9, scope: !6630)
!6742 = !DILocation(line: 4926, column: 9, scope: !6630)
!6743 = !DILocation(line: 4928, column: 15, scope: !6630)
!6744 = !DILocation(line: 4929, column: 13, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4929, column: 13)
!6746 = !DILocation(line: 4929, column: 13, scope: !6630)
!6747 = !DILocation(line: 4930, column: 9, scope: !6745)
!6748 = !DILocation(line: 4930, column: 4, scope: !6745)
!6749 = !DILocation(line: 4931, column: 9, scope: !6630)
!6750 = !DILocation(line: 4931, column: 17, scope: !6630)
!6751 = !DILocation(line: 4932, column: 13, scope: !6630)
!6752 = !DILocation(line: 4933, column: 9, scope: !6630)
!6753 = !DILocation(line: 4935, column: 17, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4935, column: 13)
!6755 = !DILocation(line: 4935, column: 13, scope: !6630)
!6756 = !DILocation(line: 4936, column: 8, scope: !6754)
!6757 = !DILocation(line: 4936, column: 11, scope: !6754)
!6758 = !DILocation(line: 4936, column: 4, scope: !6754)
!6759 = !DILocation(line: 4937, column: 13, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4937, column: 13)
!6761 = !DILocation(line: 4937, column: 13, scope: !6630)
!6762 = !DILocation(line: 4939, column: 6, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 4938, column: 4)
!6764 = !DILocation(line: 4941, column: 4, scope: !6763)
!6765 = !DILocation(line: 4944, column: 10, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 4943, column: 4)
!6767 = !DILocation(line: 4945, column: 18, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 4944, column: 10)
!6769 = !DILocation(line: 4945, column: 8, scope: !6768)
!6770 = !DILocation(line: 4947, column: 14, scope: !6768)
!6771 = !DILocation(line: 0, scope: !6768)
!6772 = !DILocation(line: 4948, column: 6, scope: !6766)
!6773 = !DILocation(line: 0, scope: !6760)
!6774 = !DILocation(line: 4951, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4951, column: 13)
!6776 = !DILocation(line: 4951, column: 13, scope: !6630)
!6777 = !DILocation(line: 4955, column: 7, scope: !6631)
!6778 = distinct !{!6778, !6779, !6780}
!6779 = !DILocation(line: 4923, column: 5, scope: !6632)
!6780 = !DILocation(line: 4955, column: 7, scope: !6632)
!6781 = !DILocation(line: 4956, column: 10, scope: !6620)
!6782 = !DILocation(line: 4957, column: 31, scope: !6620)
!6783 = !DILocation(line: 4957, column: 27, scope: !6620)
!6784 = !DILocation(line: 4957, column: 13, scope: !6620)
!6785 = !DILocation(line: 4958, column: 3, scope: !6620)
!6786 = !DILocation(line: 4960, column: 25, scope: !6621)
!6787 = !DILocation(line: 4960, column: 11, scope: !6621)
!6788 = !DILocation(line: 4963, column: 28, scope: !6623)
!6789 = !DILocation(line: 4963, column: 48, scope: !6623)
!6790 = !DILocation(line: 4963, column: 59, scope: !6623)
!6791 = !DILocation(line: 4963, column: 14, scope: !6623)
!6792 = !DILocation(line: 0, scope: !6623)
!6793 = !DILocation(line: 4965, column: 4, scope: !6612)
!6794 = !DILocation(line: 4967, column: 12, scope: !6612)
!6795 = !DILocation(line: 4969, column: 33, scope: !6612)
!6796 = !DILocation(line: 4969, column: 24, scope: !6612)
!6797 = !DILocation(line: 4969, column: 22, scope: !6612)
!6798 = !DILocation(line: 4970, column: 2, scope: !6613)
!6799 = !DILocation(line: 4970, column: 2, scope: !6612)
!6800 = !DILocation(line: 4843, column: 48, scope: !6608)
!6801 = !DILocation(line: 4843, column: 3, scope: !6608)
!6802 = distinct !{!6802, !6657, !6803}
!6803 = !DILocation(line: 4971, column: 5, scope: !6609)
!6804 = !DILocation(line: 4974, column: 15, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4974, column: 3)
!6806 = !DILocation(line: 4974, column: 8, scope: !6805)
!6807 = !DILocation(line: 0, scope: !6805)
!6808 = !DILocation(line: 4974, column: 3, scope: !6805)
!6809 = !DILocation(line: 4976, column: 19, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4975, column: 5)
!6811 = distinct !DILexicalBlock(scope: !6805, file: !3, line: 4974, column: 3)
!6812 = !DILocation(line: 4977, column: 20, scope: !6810)
!6813 = !DILocation(line: 4977, column: 18, scope: !6810)
!6814 = !DILocation(line: 4978, column: 7, scope: !6810)
!6815 = !DILocation(line: 4982, column: 11, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 4982, column: 11)
!6817 = !DILocation(line: 4982, column: 11, scope: !6810)
!6818 = !DILocation(line: 4995, column: 12, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 4995, column: 11)
!6820 = !DILocation(line: 4984, column: 8, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 4984, column: 8)
!6822 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 4983, column: 2)
!6823 = !DILocation(line: 4984, column: 8, scope: !6822)
!6824 = !DILocation(line: 4985, column: 17, scope: !6821)
!6825 = !DILocation(line: 4992, column: 2, scope: !6822)
!6826 = !DILocation(line: 4988, column: 8, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 4987, column: 6)
!6828 = !DILocation(line: 4989, column: 8, scope: !6827)
!6829 = !DILocation(line: 4990, column: 8, scope: !6827)
!6830 = !DILocation(line: 4995, column: 23, scope: !6819)
!6831 = !DILocation(line: 4995, column: 26, scope: !6819)
!6832 = !DILocation(line: 4995, column: 11, scope: !6810)
!6833 = !DILocation(line: 4997, column: 11, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 4996, column: 2)
!6835 = !DILocation(line: 4999, column: 22, scope: !6834)
!6836 = !DILocation(line: 4999, column: 4, scope: !6834)
!6837 = !DILocation(line: 5000, column: 13, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 5000, column: 8)
!6839 = !DILocation(line: 5000, column: 8, scope: !6834)
!6840 = !DILocation(line: 5002, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 5002, column: 12)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 5001, column: 6)
!6843 = !DILocation(line: 5002, column: 12, scope: !6842)
!6844 = !DILocation(line: 5003, column: 27, scope: !6841)
!6845 = !DILocation(line: 5003, column: 25, scope: !6841)
!6846 = !DILocation(line: 5003, column: 10, scope: !6841)
!6847 = !DILocation(line: 5004, column: 8, scope: !6842)
!6848 = !DILocation(line: 5006, column: 6, scope: !6842)
!6849 = !DILocation(line: 5010, column: 11, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 5009, column: 2)
!6851 = !DILocation(line: 5012, column: 13, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 5012, column: 8)
!6853 = !DILocation(line: 5012, column: 8, scope: !6850)
!6854 = !DILocation(line: 0, scope: !6819)
!6855 = !DILocation(line: 5016, column: 25, scope: !6810)
!6856 = !DILocation(line: 5017, column: 7, scope: !6810)
!6857 = !DILocation(line: 4974, column: 40, scope: !6811)
!6858 = !DILocation(line: 4974, column: 3, scope: !6811)
!6859 = distinct !{!6859, !6808, !6860}
!6860 = !DILocation(line: 5018, column: 5, scope: !6805)
!6861 = !DILocation(line: 5020, column: 15, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 5020, column: 3)
!6863 = !DILocation(line: 5020, column: 8, scope: !6862)
!6864 = !DILocation(line: 0, scope: !6862)
!6865 = !DILocation(line: 5020, column: 3, scope: !6862)
!6866 = !DILocation(line: 5021, column: 5, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 5020, column: 3)
!6868 = !DILocation(line: 5020, column: 54, scope: !6867)
!6869 = !DILocation(line: 5020, column: 3, scope: !6867)
!6870 = distinct !{!6870, !6865, !6871}
!6871 = !DILocation(line: 5021, column: 5, scope: !6862)
!6872 = !DILocation(line: 5023, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 5023, column: 3)
!6874 = !DILocation(line: 5023, column: 8, scope: !6873)
!6875 = !DILocation(line: 0, scope: !6873)
!6876 = !DILocation(line: 5023, column: 3, scope: !6873)
!6877 = !DILocation(line: 5024, column: 5, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 5023, column: 3)
!6879 = !DILocation(line: 5023, column: 52, scope: !6878)
!6880 = !DILocation(line: 5023, column: 3, scope: !6878)
!6881 = distinct !{!6881, !6876, !6882}
!6882 = !DILocation(line: 5024, column: 5, scope: !6873)
!6883 = !DILocation(line: 5027, column: 11, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 5027, column: 7)
!6885 = !DILocation(line: 5027, column: 7, scope: !6584)
!6886 = !DILocation(line: 5029, column: 36, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 5028, column: 5)
!6888 = !DILocation(line: 5030, column: 8, scope: !6887)
!6889 = !DILocation(line: 5030, column: 16, scope: !6887)
!6890 = !DILocation(line: 5030, column: 25, scope: !6887)
!6891 = !DILocation(line: 5030, column: 35, scope: !6887)
!6892 = !DILocation(line: 5029, column: 14, scope: !6887)
!6893 = !DILocation(line: 5032, column: 38, scope: !6887)
!6894 = !DILocation(line: 5032, column: 7, scope: !6887)
!6895 = !DILocation(line: 5033, column: 35, scope: !6887)
!6896 = !DILocation(line: 5033, column: 7, scope: !6887)
!6897 = !DILocation(line: 5035, column: 7, scope: !6887)
!6898 = !DILocation(line: 5036, column: 5, scope: !6887)
!6899 = !DILocation(line: 5039, column: 1, scope: !6584)
!6900 = distinct !DISubprogram(name: "gimple_try_set_catch_is_cleanup", scope: !391, file: !391, line: 2974, type: !6901, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6903)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{null, !1058, !727}
!6903 = !{!6904, !6905}
!6904 = !DILocalVariable(name: "g", arg: 1, scope: !6900, file: !391, line: 2974, type: !1058)
!6905 = !DILocalVariable(name: "catch_is_cleanup", arg: 2, scope: !6900, file: !391, line: 2974, type: !727)
!6906 = !DILocation(line: 0, scope: !6900)
!6907 = !DILocation(line: 2976, column: 3, scope: !6900)
!6908 = !DILocation(line: 2977, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6900, file: !391, line: 2977, column: 7)
!6910 = !DILocation(line: 0, scope: !6909)
!6911 = !DILocation(line: 2977, column: 7, scope: !6900)
!6912 = !DILocation(line: 2978, column: 23, scope: !6909)
!6913 = !DILocation(line: 2978, column: 5, scope: !6909)
!6914 = !DILocation(line: 2980, column: 23, scope: !6909)
!6915 = !DILocation(line: 2981, column: 1, scope: !6900)
!6916 = distinct !DISubprogram(name: "gimplify_cleanup_point_expr", scope: !3, file: !3, line: 5056, type: !5620, scopeLine: 5057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6917)
!6917 = !{!6918, !6919, !6920, !6921, !6922, !6923, !6924, !6925, !6929, !6934, !6935}
!6918 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6916, file: !3, line: 5056, type: !1093)
!6919 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6916, file: !3, line: 5056, type: !2939)
!6920 = !DILocalVariable(name: "iter", scope: !6916, file: !3, line: 5058, type: !3336)
!6921 = !DILocalVariable(name: "body_sequence", scope: !6916, file: !3, line: 5059, type: !1048)
!6922 = !DILocalVariable(name: "temp", scope: !6916, file: !3, line: 5061, type: !734)
!6923 = !DILocalVariable(name: "old_conds", scope: !6916, file: !3, line: 5066, type: !392)
!6924 = !DILocalVariable(name: "old_cleanups", scope: !6916, file: !3, line: 5067, type: !1048)
!6925 = !DILocalVariable(name: "wce", scope: !6926, file: !3, line: 5078, type: !1058)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 5077, column: 5)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 5076, column: 3)
!6928 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 5076, column: 3)
!6929 = !DILocalVariable(name: "gtry", scope: !6930, file: !3, line: 5094, type: !1058)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 5093, column: 6)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 5082, column: 8)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 5081, column: 2)
!6933 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 5080, column: 11)
!6934 = !DILocalVariable(name: "seq", scope: !6930, file: !3, line: 5095, type: !1048)
!6935 = !DILocalVariable(name: "kind", scope: !6930, file: !3, line: 5096, type: !481)
!6936 = !DILocation(line: 0, scope: !6916)
!6937 = !DILocation(line: 5058, column: 3, scope: !6916)
!6938 = !DILocation(line: 5059, column: 3, scope: !6916)
!6939 = !DILocation(line: 5059, column: 14, scope: !6916)
!6940 = !DILocation(line: 5061, column: 37, scope: !6916)
!6941 = !DILocation(line: 5061, column: 15, scope: !6916)
!6942 = !DILocation(line: 5066, column: 19, scope: !6916)
!6943 = !DILocation(line: 5066, column: 34, scope: !6916)
!6944 = !DILocation(line: 5067, column: 44, scope: !6916)
!6945 = !DILocation(line: 5068, column: 29, scope: !6916)
!6946 = !DILocation(line: 5069, column: 39, scope: !6916)
!6947 = !DILocation(line: 5071, column: 19, scope: !6916)
!6948 = !DILocation(line: 5071, column: 3, scope: !6916)
!6949 = !DILocation(line: 5073, column: 3, scope: !6916)
!6950 = !DILocation(line: 5073, column: 18, scope: !6916)
!6951 = !DILocation(line: 5073, column: 29, scope: !6916)
!6952 = !DILocation(line: 5074, column: 18, scope: !6916)
!6953 = !DILocation(line: 5074, column: 39, scope: !6916)
!6954 = !DILocation(line: 5076, column: 15, scope: !6928)
!6955 = !DILocation(line: 5076, column: 26, scope: !6928)
!6956 = !DILocation(line: 0, scope: !6930)
!6957 = !DILocation(line: 5076, column: 8, scope: !6928)
!6958 = !DILocation(line: 5076, column: 43, scope: !6927)
!6959 = !DILocation(line: 5076, column: 42, scope: !6927)
!6960 = !DILocation(line: 5076, column: 3, scope: !6928)
!6961 = !DILocation(line: 5078, column: 20, scope: !6926)
!6962 = !DILocation(line: 0, scope: !6926)
!6963 = !DILocation(line: 5080, column: 11, scope: !6933)
!6964 = !DILocation(line: 5080, column: 29, scope: !6933)
!6965 = !DILocation(line: 5080, column: 11, scope: !6926)
!6966 = !DILocation(line: 5082, column: 8, scope: !6931)
!6967 = !DILocation(line: 5082, column: 8, scope: !6932)
!6968 = !DILocation(line: 5087, column: 53, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 5083, column: 6)
!6970 = !DILocation(line: 5086, column: 8, scope: !6969)
!6971 = !DILocation(line: 5089, column: 8, scope: !6969)
!6972 = !DILocation(line: 5090, column: 8, scope: !6969)
!6973 = !DILocation(line: 5098, column: 12, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 5098, column: 12)
!6975 = !DILocation(line: 5102, column: 14, scope: !6930)
!6976 = !DILocation(line: 5104, column: 38, scope: !6930)
!6977 = !DILocation(line: 5104, column: 15, scope: !6930)
!6978 = !DILocation(line: 5107, column: 16, scope: !6930)
!6979 = !DILocation(line: 5107, column: 37, scope: !6930)
!6980 = !DILocation(line: 5108, column: 15, scope: !6930)
!6981 = !DILocation(line: 5110, column: 2, scope: !6932)
!6982 = !DILocation(line: 5112, column: 2, scope: !6933)
!6983 = distinct !{!6983, !6960, !6984}
!6984 = !DILocation(line: 5113, column: 5, scope: !6928)
!6985 = !DILocation(line: 5115, column: 32, scope: !6916)
!6986 = !DILocation(line: 5115, column: 3, scope: !6916)
!6987 = !DILocation(line: 5116, column: 7, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 5116, column: 7)
!6989 = !DILocation(line: 5116, column: 7, scope: !6916)
!6990 = !DILocation(line: 5119, column: 7, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 5117, column: 5)
!6992 = !DILocation(line: 5124, column: 7, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 5122, column: 5)
!6994 = !DILocation(line: 0, scope: !6988)
!6995 = !DILocation(line: 5126, column: 1, scope: !6916)
!6996 = distinct !DISubprogram(name: "gimplify_target_expr", scope: !3, file: !3, line: 5194, type: !5834, scopeLine: 5195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6997)
!6997 = !{!6998, !6999, !7000, !7001, !7002, !7003, !7004, !7005}
!6998 = !DILocalVariable(name: "expr_p", arg: 1, scope: !6996, file: !3, line: 5194, type: !1093)
!6999 = !DILocalVariable(name: "pre_p", arg: 2, scope: !6996, file: !3, line: 5194, type: !2939)
!7000 = !DILocalVariable(name: "post_p", arg: 3, scope: !6996, file: !3, line: 5194, type: !2939)
!7001 = !DILocalVariable(name: "targ", scope: !6996, file: !3, line: 5196, type: !734)
!7002 = !DILocalVariable(name: "temp", scope: !6996, file: !3, line: 5197, type: !734)
!7003 = !DILocalVariable(name: "init", scope: !6996, file: !3, line: 5198, type: !734)
!7004 = !DILocalVariable(name: "ret", scope: !6996, file: !3, line: 5199, type: !390)
!7005 = !DILocalVariable(name: "init_expr", scope: !7006, file: !3, line: 5220, type: !734)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 5219, column: 2)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 5216, column: 11)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 5202, column: 5)
!7009 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 5201, column: 7)
!7010 = !DILocation(line: 0, scope: !6996)
!7011 = !DILocation(line: 5196, column: 15, scope: !6996)
!7012 = !DILocation(line: 5197, column: 15, scope: !6996)
!7013 = !DILocation(line: 5198, column: 3, scope: !6996)
!7014 = !DILocation(line: 5198, column: 15, scope: !6996)
!7015 = !DILocation(line: 5198, column: 8, scope: !6996)
!7016 = !DILocation(line: 5201, column: 7, scope: !7009)
!7017 = !DILocation(line: 5201, column: 7, scope: !6996)
!7018 = !DILocation(line: 5205, column: 11, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 5205, column: 11)
!7020 = !DILocation(line: 5205, column: 40, scope: !7019)
!7021 = !DILocation(line: 5205, column: 11, scope: !7008)
!7022 = !DILocation(line: 5207, column: 9, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 5207, column: 8)
!7024 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 5206, column: 2)
!7025 = !DILocation(line: 5207, column: 8, scope: !7024)
!7026 = !DILocation(line: 5208, column: 6, scope: !7023)
!7027 = !DILocation(line: 5209, column: 4, scope: !7024)
!7028 = !DILocation(line: 5210, column: 2, scope: !7024)
!7029 = !DILocation(line: 5212, column: 2, scope: !7019)
!7030 = !DILocation(line: 5216, column: 11, scope: !7007)
!7031 = !DILocation(line: 5216, column: 11, scope: !7008)
!7032 = !DILocation(line: 5217, column: 8, scope: !7007)
!7033 = !DILocation(line: 5217, column: 2, scope: !7007)
!7034 = !DILocation(line: 5220, column: 21, scope: !7006)
!7035 = !DILocation(line: 0, scope: !7006)
!7036 = !DILocation(line: 5221, column: 9, scope: !7006)
!7037 = !DILocation(line: 5222, column: 10, scope: !7006)
!7038 = !DILocation(line: 5223, column: 9, scope: !7006)
!7039 = !DILocation(line: 5224, column: 14, scope: !7006)
!7040 = !DILocation(line: 5224, column: 4, scope: !7006)
!7041 = !DILocation(line: 0, scope: !7007)
!7042 = !DILocation(line: 5226, column: 15, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 5226, column: 11)
!7044 = !DILocation(line: 5226, column: 11, scope: !7008)
!7045 = !DILocation(line: 5229, column: 31, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 5227, column: 2)
!7047 = !DILocation(line: 5230, column: 4, scope: !7046)
!7048 = !DILocation(line: 5232, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 5232, column: 11)
!7050 = !DILocation(line: 5232, column: 11, scope: !7008)
!7051 = !DILocation(line: 5233, column: 2, scope: !7049)
!7052 = !DILocation(line: 5236, column: 11, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 5236, column: 11)
!7054 = !DILocation(line: 5236, column: 11, scope: !7008)
!7055 = !DILocation(line: 5238, column: 9, scope: !7053)
!7056 = !DILocation(line: 5237, column: 2, scope: !7053)
!7057 = !DILocation(line: 5241, column: 32, scope: !7008)
!7058 = !DILocation(line: 5241, column: 7, scope: !7008)
!7059 = !DILocation(line: 5241, column: 30, scope: !7008)
!7060 = !DILocation(line: 5242, column: 34, scope: !7008)
!7061 = !DILocation(line: 5243, column: 5, scope: !7008)
!7062 = !DILocation(line: 5246, column: 5, scope: !7009)
!7063 = !DILocation(line: 5248, column: 11, scope: !6996)
!7064 = !DILocation(line: 5249, column: 3, scope: !6996)
!7065 = !DILocation(line: 5250, column: 1, scope: !6996)
!7066 = distinct !DISubprogram(name: "gimple_set_no_warning", scope: !391, file: !391, line: 1209, type: !6901, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7067)
!7067 = !{!7068, !7069}
!7068 = !DILocalVariable(name: "stmt", arg: 1, scope: !7066, file: !391, line: 1209, type: !1058)
!7069 = !DILocalVariable(name: "no_warning", arg: 2, scope: !7066, file: !391, line: 1209, type: !727)
!7070 = !DILocation(line: 0, scope: !7066)
!7071 = !DILocation(line: 1211, column: 16, scope: !7066)
!7072 = !DILocation(line: 1211, column: 27, scope: !7066)
!7073 = !DILocation(line: 1212, column: 1, scope: !7066)
!7074 = distinct !DISubprogram(name: "gimplify_statement_list", scope: !3, file: !3, line: 1374, type: !5620, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7075)
!7075 = !{!7076, !7077, !7078, !7079}
!7076 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7074, file: !3, line: 1374, type: !1093)
!7077 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7074, file: !3, line: 1374, type: !2939)
!7078 = !DILocalVariable(name: "temp", scope: !7074, file: !3, line: 1376, type: !734)
!7079 = !DILocalVariable(name: "i", scope: !7074, file: !3, line: 1378, type: !2898)
!7080 = !DILocation(line: 0, scope: !7074)
!7081 = !DILocation(line: 1376, column: 37, scope: !7074)
!7082 = !DILocation(line: 1376, column: 15, scope: !7074)
!7083 = !DILocation(line: 1378, column: 3, scope: !7074)
!7084 = !DILocation(line: 1378, column: 37, scope: !7074)
!7085 = !DILocation(line: 1378, column: 26, scope: !7074)
!7086 = !DILocation(line: 1380, column: 3, scope: !7074)
!7087 = !DILocation(line: 1380, column: 11, scope: !7074)
!7088 = !DILocation(line: 1380, column: 10, scope: !7074)
!7089 = !DILocation(line: 1382, column: 22, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1381, column: 5)
!7091 = !DILocation(line: 1382, column: 7, scope: !7090)
!7092 = !DILocation(line: 1383, column: 7, scope: !7090)
!7093 = distinct !{!7093, !7086, !7094}
!7094 = !DILocation(line: 1384, column: 5, scope: !7074)
!7095 = !DILocation(line: 1386, column: 7, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1386, column: 7)
!7097 = !DILocation(line: 1386, column: 7, scope: !7074)
!7098 = !DILocation(line: 1388, column: 15, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 1387, column: 5)
!7100 = !DILocation(line: 1389, column: 7, scope: !7099)
!7101 = !DILocation(line: 1393, column: 1, scope: !7074)
!7102 = distinct !DISubprogram(name: "gimplify_var_or_parm_decl", scope: !3, file: !3, line: 1805, type: !5913, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7103)
!7103 = !{!7104, !7105, !7106, !7109, !7112, !7115}
!7104 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7102, file: !3, line: 1805, type: !1093)
!7105 = !DILocalVariable(name: "decl", scope: !7102, file: !3, line: 1807, type: !734)
!7106 = !DILocalVariable(name: "value_expr", scope: !7107, file: !3, line: 1831, type: !734)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1830, column: 5)
!7108 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1829, column: 7)
!7109 = !DILocalVariable(name: "ctx", scope: !7110, file: !3, line: 1842, type: !2191)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 1841, column: 2)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1835, column: 11)
!7112 = !DILocalVariable(name: "copy", scope: !7113, file: !3, line: 1847, type: !734)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1846, column: 6)
!7114 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1845, column: 8)
!7115 = !DILocalVariable(name: "block", scope: !7113, file: !3, line: 1847, type: !734)
!7116 = !DILocation(line: 0, scope: !7102)
!7117 = !DILocation(line: 1807, column: 15, scope: !7102)
!7118 = !DILocation(line: 1815, column: 7, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1815, column: 7)
!7120 = !DILocation(line: 1815, column: 24, scope: !7119)
!7121 = !DILocation(line: 1816, column: 7, scope: !7119)
!7122 = !DILocation(line: 1816, column: 11, scope: !7119)
!7123 = !DILocation(line: 1817, column: 7, scope: !7119)
!7124 = !DILocation(line: 1817, column: 11, scope: !7119)
!7125 = !DILocation(line: 1817, column: 30, scope: !7119)
!7126 = !DILocation(line: 1817, column: 34, scope: !7119)
!7127 = !DILocation(line: 1818, column: 7, scope: !7119)
!7128 = !DILocation(line: 1818, column: 10, scope: !7119)
!7129 = !DILocation(line: 1818, column: 42, scope: !7119)
!7130 = !DILocation(line: 1818, column: 39, scope: !7119)
!7131 = !DILocation(line: 1815, column: 7, scope: !7102)
!7132 = !DILocation(line: 1820, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1819, column: 5)
!7134 = !DILocation(line: 1825, column: 7, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1825, column: 7)
!7136 = !DILocation(line: 1825, column: 25, scope: !7135)
!7137 = !DILocation(line: 1825, column: 28, scope: !7135)
!7138 = !DILocation(line: 1825, column: 7, scope: !7102)
!7139 = !DILocation(line: 1829, column: 7, scope: !7108)
!7140 = !DILocation(line: 1829, column: 7, scope: !7102)
!7141 = !DILocation(line: 1831, column: 25, scope: !7107)
!7142 = !DILocation(line: 0, scope: !7107)
!7143 = !DILocation(line: 1835, column: 11, scope: !7111)
!7144 = !DILocation(line: 1835, column: 28, scope: !7111)
!7145 = !DILocation(line: 1836, column: 4, scope: !7111)
!7146 = !DILocation(line: 1836, column: 7, scope: !7111)
!7147 = !DILocation(line: 1836, column: 41, scope: !7111)
!7148 = !DILocation(line: 1837, column: 7, scope: !7111)
!7149 = !DILocation(line: 1837, column: 21, scope: !7111)
!7150 = !DILocation(line: 1837, column: 4, scope: !7111)
!7151 = !DILocation(line: 1838, column: 7, scope: !7111)
!7152 = !DILocation(line: 1838, column: 30, scope: !7111)
!7153 = !DILocation(line: 1839, column: 4, scope: !7111)
!7154 = !DILocation(line: 1839, column: 7, scope: !7111)
!7155 = !DILocation(line: 1839, column: 48, scope: !7111)
!7156 = !DILocation(line: 1840, column: 4, scope: !7111)
!7157 = !DILocation(line: 1840, column: 7, scope: !7111)
!7158 = !DILocation(line: 1840, column: 39, scope: !7111)
!7159 = !DILocation(line: 1840, column: 36, scope: !7111)
!7160 = !DILocation(line: 1835, column: 11, scope: !7107)
!7161 = !DILocation(line: 1843, column: 4, scope: !7110)
!7162 = !DILocation(line: 0, scope: !7110)
!7163 = !DILocation(line: 1843, column: 15, scope: !7110)
!7164 = !DILocation(line: 1843, column: 23, scope: !7110)
!7165 = !DILocation(line: 1843, column: 35, scope: !7110)
!7166 = !DILocation(line: 1844, column: 17, scope: !7110)
!7167 = distinct !{!7167, !7161, !7166}
!7168 = !DILocation(line: 1845, column: 13, scope: !7114)
!7169 = !DILocation(line: 1845, column: 37, scope: !7114)
!7170 = !DILocation(line: 1845, column: 52, scope: !7114)
!7171 = !DILocation(line: 1845, column: 17, scope: !7114)
!7172 = !DILocation(line: 1845, column: 8, scope: !7110)
!7173 = !DILocation(line: 1847, column: 20, scope: !7113)
!7174 = !DILocation(line: 0, scope: !7113)
!7175 = !DILocation(line: 1849, column: 19, scope: !7113)
!7176 = !DILocation(line: 1849, column: 8, scope: !7113)
!7177 = !DILocation(line: 1850, column: 8, scope: !7113)
!7178 = !DILocation(line: 1851, column: 8, scope: !7113)
!7179 = !DILocation(line: 1851, column: 25, scope: !7113)
!7180 = !DILocation(line: 1852, column: 16, scope: !7113)
!7181 = !DILocation(line: 1853, column: 28, scope: !7113)
!7182 = !DILocation(line: 1853, column: 8, scope: !7113)
!7183 = !DILocation(line: 1853, column: 26, scope: !7113)
!7184 = !DILocation(line: 1854, column: 27, scope: !7113)
!7185 = !DILocation(line: 1855, column: 8, scope: !7113)
!7186 = !DILocation(line: 1856, column: 8, scope: !7113)
!7187 = !DILocation(line: 1856, column: 37, scope: !7113)
!7188 = !DILocation(line: 1857, column: 6, scope: !7113)
!7189 = !DILocation(line: 1860, column: 17, scope: !7107)
!7190 = !DILocation(line: 1860, column: 15, scope: !7107)
!7191 = !DILocation(line: 1865, column: 1, scope: !7102)
!7192 = distinct !DISubprogram(name: "omp_notice_variable", scope: !3, file: !3, line: 5461, type: !7193, scopeLine: 5462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7195)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!727, !2191, !734, !727}
!7195 = !{!7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7208, !7211, !7212, !7213, !7218, !7221, !7222}
!7196 = !DILocalVariable(name: "ctx", arg: 1, scope: !7192, file: !3, line: 5461, type: !2191)
!7197 = !DILocalVariable(name: "decl", arg: 2, scope: !7192, file: !3, line: 5461, type: !734)
!7198 = !DILocalVariable(name: "in_code", arg: 3, scope: !7192, file: !3, line: 5461, type: !727)
!7199 = !DILocalVariable(name: "n", scope: !7192, file: !3, line: 5463, type: !2201)
!7200 = !DILocalVariable(name: "flags", scope: !7192, file: !3, line: 5464, type: !7)
!7201 = !DILocalVariable(name: "ret", scope: !7192, file: !3, line: 5465, type: !727)
!7202 = !DILocalVariable(name: "shared", scope: !7192, file: !3, line: 5465, type: !727)
!7203 = !DILocalVariable(name: "value", scope: !7204, file: !3, line: 5478, type: !734)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 5477, column: 2)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 5476, column: 11)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 5472, column: 5)
!7207 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5471, column: 7)
!7208 = !DILocalVariable(name: "default_kind", scope: !7209, file: !3, line: 5488, type: !370)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 5487, column: 5)
!7210 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5486, column: 7)
!7211 = !DILocalVariable(name: "kind", scope: !7209, file: !3, line: 5488, type: !370)
!7212 = !DILocalVariable(name: "octx", scope: !7209, file: !3, line: 5489, type: !2191)
!7213 = !DILocalVariable(name: "n2", scope: !7214, file: !3, line: 5525, type: !2201)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 5524, column: 6)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 5523, column: 4)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 5523, column: 4)
!7217 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 5503, column: 2)
!7218 = !DILocalVariable(name: "n2", scope: !7219, file: !3, line: 5568, type: !2201)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 5567, column: 5)
!7220 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5563, column: 7)
!7221 = !DILocalVariable(name: "t", scope: !7219, file: !3, line: 5569, type: !734)
!7222 = !DILabel(scope: !7192, name: "do_outer", file: !3, line: 5586)
!7223 = !DILocation(line: 0, scope: !7192)
!7224 = !DILocation(line: 5467, column: 15, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5467, column: 7)
!7226 = !DILocation(line: 5467, column: 12, scope: !7225)
!7227 = !DILocation(line: 5467, column: 31, scope: !7225)
!7228 = !DILocation(line: 5467, column: 34, scope: !7225)
!7229 = !DILocation(line: 5467, column: 51, scope: !7225)
!7230 = !DILocation(line: 5467, column: 7, scope: !7192)
!7231 = !DILocation(line: 5471, column: 7, scope: !7207)
!7232 = !DILocation(line: 5471, column: 7, scope: !7192)
!7233 = !DILocation(line: 5473, column: 11, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 5473, column: 11)
!7235 = !DILocation(line: 5473, column: 11, scope: !7206)
!7236 = !DILocation(line: 5476, column: 11, scope: !7205)
!7237 = !DILocation(line: 5476, column: 11, scope: !7206)
!7238 = !DILocation(line: 5478, column: 35, scope: !7204)
!7239 = !DILocation(line: 5478, column: 17, scope: !7204)
!7240 = !DILocation(line: 0, scope: !7204)
!7241 = !DILocation(line: 5480, column: 8, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 5480, column: 8)
!7243 = !DILocation(line: 5480, column: 14, scope: !7242)
!7244 = !DILocation(line: 5480, column: 17, scope: !7242)
!7245 = !DILocation(line: 5480, column: 32, scope: !7242)
!7246 = !DILocation(line: 5480, column: 35, scope: !7242)
!7247 = !DILocation(line: 5480, column: 8, scope: !7204)
!7248 = !DILocation(line: 5482, column: 2, scope: !7205)
!7249 = !DILocation(line: 5485, column: 31, scope: !7192)
!7250 = !DILocation(line: 5485, column: 42, scope: !7192)
!7251 = !DILocation(line: 5485, column: 7, scope: !7192)
!7252 = !DILocation(line: 5486, column: 9, scope: !7210)
!7253 = !DILocation(line: 5486, column: 7, scope: !7192)
!7254 = !DILocation(line: 5491, column: 16, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 5491, column: 11)
!7256 = !DILocation(line: 5491, column: 28, scope: !7255)
!7257 = !DILocation(line: 5491, column: 11, scope: !7209)
!7258 = !DILocation(line: 5497, column: 27, scope: !7209)
!7259 = !DILocation(line: 0, scope: !7209)
!7260 = !DILocation(line: 5498, column: 31, scope: !7209)
!7261 = !DILocation(line: 5498, column: 14, scope: !7209)
!7262 = !DILocation(line: 5499, column: 16, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 5499, column: 11)
!7264 = !DILocation(line: 5499, column: 11, scope: !7209)
!7265 = !DILocation(line: 5502, column: 7, scope: !7209)
!7266 = !DILocation(line: 5506, column: 4, scope: !7217)
!7267 = !DILocation(line: 5505, column: 4, scope: !7217)
!7268 = !DILocation(line: 5507, column: 19, scope: !7217)
!7269 = !DILocation(line: 5507, column: 4, scope: !7217)
!7270 = !DILocation(line: 5511, column: 4, scope: !7217)
!7271 = !DILocation(line: 5514, column: 4, scope: !7217)
!7272 = !DILocation(line: 5517, column: 4, scope: !7217)
!7273 = !DILocation(line: 5520, column: 4, scope: !7217)
!7274 = !DILocation(line: 5521, column: 13, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 5521, column: 8)
!7276 = !DILocation(line: 5521, column: 8, scope: !7275)
!7277 = !DILocation(line: 5521, column: 8, scope: !7217)
!7278 = !DILocation(line: 5522, column: 6, scope: !7275)
!7279 = !DILocation(line: 5523, column: 9, scope: !7216)
!7280 = !DILocation(line: 0, scope: !7216)
!7281 = !DILocation(line: 5523, column: 4, scope: !7216)
!7282 = !DILocation(line: 5527, column: 38, scope: !7214)
!7283 = !DILocation(line: 5527, column: 13, scope: !7214)
!7284 = !DILocation(line: 0, scope: !7214)
!7285 = !DILocation(line: 5528, column: 12, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 5528, column: 12)
!7287 = !DILocation(line: 5528, column: 15, scope: !7286)
!7288 = !DILocation(line: 5528, column: 23, scope: !7286)
!7289 = !DILocation(line: 5528, column: 29, scope: !7286)
!7290 = !DILocation(line: 5528, column: 54, scope: !7286)
!7291 = !DILocation(line: 5528, column: 12, scope: !7214)
!7292 = !DILocation(line: 5530, column: 11, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 5529, column: 3)
!7294 = !DILocation(line: 5531, column: 5, scope: !7293)
!7295 = !DILocation(line: 5533, column: 19, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 5533, column: 12)
!7297 = !DILocation(line: 0, scope: !7215)
!7298 = !DILocation(line: 5523, column: 4, scope: !7215)
!7299 = distinct !{!7299, !7281, !7300}
!7300 = !DILocation(line: 5535, column: 6, scope: !7216)
!7301 = !DILocation(line: 5536, column: 14, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 5536, column: 8)
!7303 = !DILocation(line: 5536, column: 8, scope: !7217)
!7304 = !DILocation(line: 5539, column: 8, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 5538, column: 8)
!7306 = !DILocation(line: 5539, column: 12, scope: !7305)
!7307 = !DILocation(line: 5539, column: 29, scope: !7305)
!7308 = !DILocation(line: 5540, column: 5, scope: !7305)
!7309 = !DILocation(line: 5540, column: 10, scope: !7305)
!7310 = !DILocation(line: 5541, column: 9, scope: !7305)
!7311 = !DILocation(line: 5541, column: 12, scope: !7305)
!7312 = !DILocation(line: 5541, column: 35, scope: !7305)
!7313 = !DILocation(line: 5541, column: 32, scope: !7305)
!7314 = !DILocation(line: 5538, column: 8, scope: !7217)
!7315 = !DILocation(line: 5543, column: 14, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 5542, column: 6)
!7317 = !DILocation(line: 5544, column: 8, scope: !7316)
!7318 = !DILocation(line: 5546, column: 10, scope: !7217)
!7319 = !DILocation(line: 5547, column: 4, scope: !7217)
!7320 = !DILocation(line: 5549, column: 4, scope: !7217)
!7321 = !DILocation(line: 5550, column: 2, scope: !7217)
!7322 = !DILocation(line: 5552, column: 18, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 5552, column: 11)
!7324 = !DILocation(line: 5553, column: 4, scope: !7323)
!7325 = !DILocation(line: 5553, column: 24, scope: !7323)
!7326 = !DILocation(line: 5553, column: 7, scope: !7323)
!7327 = !DILocation(line: 5554, column: 8, scope: !7323)
!7328 = !DILocation(line: 5552, column: 11, scope: !7209)
!7329 = !DILocation(line: 5556, column: 7, scope: !7209)
!7330 = !DILocation(line: 5558, column: 16, scope: !7209)
!7331 = !DILocation(line: 5559, column: 30, scope: !7209)
!7332 = !DILocation(line: 5559, column: 13, scope: !7209)
!7333 = !DILocation(line: 5560, column: 7, scope: !7209)
!7334 = !DILocation(line: 5563, column: 11, scope: !7220)
!7335 = !DILocation(line: 5563, column: 17, scope: !7220)
!7336 = !DILocation(line: 5563, column: 45, scope: !7220)
!7337 = !DILocation(line: 5564, column: 7, scope: !7220)
!7338 = !DILocation(line: 5565, column: 10, scope: !7220)
!7339 = !DILocation(line: 5566, column: 7, scope: !7220)
!7340 = !DILocation(line: 5566, column: 10, scope: !7220)
!7341 = !DILocation(line: 5566, column: 39, scope: !7220)
!7342 = !DILocation(line: 5563, column: 7, scope: !7192)
!7343 = !DILocation(line: 5569, column: 16, scope: !7219)
!7344 = !DILocation(line: 0, scope: !7219)
!7345 = !DILocation(line: 5570, column: 7, scope: !7219)
!7346 = !DILocation(line: 5571, column: 11, scope: !7219)
!7347 = !DILocation(line: 5572, column: 7, scope: !7219)
!7348 = !DILocation(line: 5573, column: 36, scope: !7219)
!7349 = !DILocation(line: 5573, column: 47, scope: !7219)
!7350 = !DILocation(line: 5573, column: 12, scope: !7219)
!7351 = !DILocation(line: 5574, column: 11, scope: !7219)
!7352 = !DILocation(line: 5574, column: 17, scope: !7219)
!7353 = !DILocation(line: 5577, column: 25, scope: !7192)
!7354 = !DILocation(line: 5575, column: 5, scope: !7219)
!7355 = !DILocation(line: 5577, column: 12, scope: !7192)
!7356 = !DILocation(line: 5578, column: 26, scope: !7192)
!7357 = !DILocation(line: 5578, column: 9, scope: !7192)
!7358 = !DILocation(line: 5581, column: 11, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5581, column: 7)
!7360 = !DILocation(line: 5581, column: 17, scope: !7359)
!7361 = !DILocation(line: 5581, column: 26, scope: !7359)
!7362 = !DILocation(line: 5581, column: 7, scope: !7192)
!7363 = !DILocation(line: 5583, column: 9, scope: !7192)
!7364 = !DILocation(line: 5584, column: 14, scope: !7192)
!7365 = !DILocation(line: 5584, column: 12, scope: !7192)
!7366 = !DILocation(line: 5584, column: 3, scope: !7192)
!7367 = !DILocation(line: 5586, column: 2, scope: !7192)
!7368 = !DILocation(line: 5589, column: 30, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5589, column: 7)
!7370 = !DILocation(line: 5591, column: 12, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 5591, column: 7)
!7372 = !DILocation(line: 5591, column: 7, scope: !7371)
!7373 = !DILocation(line: 5592, column: 7, scope: !7371)
!7374 = !DILocation(line: 5592, column: 10, scope: !7371)
!7375 = !DILocation(line: 5591, column: 7, scope: !7192)
!7376 = !DILocation(line: 5594, column: 3, scope: !7192)
!7377 = !DILocation(line: 5595, column: 1, scope: !7192)
!7378 = distinct !DISubprogram(name: "gimplify_omp_parallel", scope: !3, file: !3, line: 5979, type: !7379, scopeLine: 5980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7381)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{null, !1093, !2939}
!7381 = !{!7382, !7383, !7384, !7385, !7386, !7387}
!7382 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7378, file: !3, line: 5979, type: !1093)
!7383 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7378, file: !3, line: 5979, type: !2939)
!7384 = !DILocalVariable(name: "expr", scope: !7378, file: !3, line: 5981, type: !734)
!7385 = !DILocalVariable(name: "g", scope: !7378, file: !3, line: 5982, type: !1058)
!7386 = !DILocalVariable(name: "body", scope: !7378, file: !3, line: 5983, type: !1048)
!7387 = !DILocalVariable(name: "gctx", scope: !7378, file: !3, line: 5984, type: !2266)
!7388 = !DILocation(line: 0, scope: !7378)
!7389 = !DILocation(line: 5981, column: 15, scope: !7378)
!7390 = !DILocation(line: 5983, column: 3, scope: !7378)
!7391 = !DILocation(line: 5983, column: 14, scope: !7378)
!7392 = !DILocation(line: 5984, column: 3, scope: !7378)
!7393 = !DILocation(line: 5986, column: 31, scope: !7378)
!7394 = !DILocation(line: 5987, column: 9, scope: !7378)
!7395 = !DILocation(line: 5986, column: 3, scope: !7378)
!7396 = !DILocation(line: 5991, column: 3, scope: !7378)
!7397 = !DILocation(line: 5993, column: 34, scope: !7378)
!7398 = !DILocation(line: 5993, column: 7, scope: !7378)
!7399 = !DILocation(line: 5994, column: 7, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 5994, column: 7)
!7401 = !DILocation(line: 5994, column: 23, scope: !7400)
!7402 = !DILocation(line: 5994, column: 7, scope: !7378)
!7403 = !DILocation(line: 5995, column: 5, scope: !7400)
!7404 = !DILocation(line: 5997, column: 5, scope: !7400)
!7405 = !DILocation(line: 5999, column: 3, scope: !7378)
!7406 = !DILocation(line: 6001, column: 34, scope: !7378)
!7407 = !DILocation(line: 6002, column: 6, scope: !7378)
!7408 = !DILocation(line: 6001, column: 7, scope: !7378)
!7409 = !DILocation(line: 6004, column: 7, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 6004, column: 7)
!7411 = !DILocation(line: 6004, column: 7, scope: !7378)
!7412 = !DILocation(line: 6005, column: 5, scope: !7410)
!7413 = !DILocation(line: 6006, column: 3, scope: !7378)
!7414 = !DILocation(line: 6007, column: 11, scope: !7378)
!7415 = !DILocation(line: 6008, column: 1, scope: !7378)
!7416 = distinct !DISubprogram(name: "gimplify_omp_task", scope: !3, file: !3, line: 6016, type: !7379, scopeLine: 6017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7417)
!7417 = !{!7418, !7419, !7420, !7421, !7422, !7423}
!7418 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7416, file: !3, line: 6016, type: !1093)
!7419 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7416, file: !3, line: 6016, type: !2939)
!7420 = !DILocalVariable(name: "expr", scope: !7416, file: !3, line: 6018, type: !734)
!7421 = !DILocalVariable(name: "g", scope: !7416, file: !3, line: 6019, type: !1058)
!7422 = !DILocalVariable(name: "body", scope: !7416, file: !3, line: 6020, type: !1048)
!7423 = !DILocalVariable(name: "gctx", scope: !7416, file: !3, line: 6021, type: !2266)
!7424 = !DILocation(line: 0, scope: !7416)
!7425 = !DILocation(line: 6018, column: 15, scope: !7416)
!7426 = !DILocation(line: 6020, column: 3, scope: !7416)
!7427 = !DILocation(line: 6020, column: 14, scope: !7416)
!7428 = !DILocation(line: 6021, column: 3, scope: !7416)
!7429 = !DILocation(line: 6023, column: 31, scope: !7416)
!7430 = !DILocation(line: 6023, column: 3, scope: !7416)
!7431 = !DILocation(line: 6025, column: 3, scope: !7416)
!7432 = !DILocation(line: 6027, column: 34, scope: !7416)
!7433 = !DILocation(line: 6027, column: 7, scope: !7416)
!7434 = !DILocation(line: 6028, column: 7, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6028, column: 7)
!7436 = !DILocation(line: 6028, column: 23, scope: !7435)
!7437 = !DILocation(line: 6028, column: 7, scope: !7416)
!7438 = !DILocation(line: 6029, column: 5, scope: !7435)
!7439 = !DILocation(line: 6031, column: 5, scope: !7435)
!7440 = !DILocation(line: 6033, column: 3, scope: !7416)
!7441 = !DILocation(line: 6035, column: 30, scope: !7416)
!7442 = !DILocation(line: 6036, column: 9, scope: !7416)
!7443 = !DILocation(line: 6035, column: 7, scope: !7416)
!7444 = !DILocation(line: 6039, column: 3, scope: !7416)
!7445 = !DILocation(line: 6040, column: 11, scope: !7416)
!7446 = !DILocation(line: 6041, column: 1, scope: !7416)
!7447 = distinct !DISubprogram(name: "gimplify_omp_for", scope: !3, file: !3, line: 6046, type: !5620, scopeLine: 6047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7448)
!7448 = !{!7449, !7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461}
!7449 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7447, file: !3, line: 6046, type: !1093)
!7450 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7447, file: !3, line: 6046, type: !2939)
!7451 = !DILocalVariable(name: "for_stmt", scope: !7447, file: !3, line: 6048, type: !734)
!7452 = !DILocalVariable(name: "decl", scope: !7447, file: !3, line: 6048, type: !734)
!7453 = !DILocalVariable(name: "var", scope: !7447, file: !3, line: 6048, type: !734)
!7454 = !DILocalVariable(name: "t", scope: !7447, file: !3, line: 6048, type: !734)
!7455 = !DILocalVariable(name: "ret", scope: !7447, file: !3, line: 6049, type: !390)
!7456 = !DILocalVariable(name: "tret", scope: !7447, file: !3, line: 6050, type: !390)
!7457 = !DILocalVariable(name: "gfor", scope: !7447, file: !3, line: 6051, type: !1058)
!7458 = !DILocalVariable(name: "for_body", scope: !7447, file: !3, line: 6052, type: !1048)
!7459 = !DILocalVariable(name: "for_pre_body", scope: !7447, file: !3, line: 6052, type: !1048)
!7460 = !DILocalVariable(name: "i", scope: !7447, file: !3, line: 6053, type: !392)
!7461 = !DILocalVariable(name: "c", scope: !7462, file: !3, line: 6171, type: !734)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 6170, column: 2)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 6169, column: 11)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 6071, column: 5)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 6070, column: 3)
!7466 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 6070, column: 3)
!7467 = !DILocation(line: 0, scope: !7447)
!7468 = !DILocation(line: 6052, column: 3, scope: !7447)
!7469 = !DILocation(line: 6055, column: 14, scope: !7447)
!7470 = !DILocation(line: 6057, column: 31, scope: !7447)
!7471 = !DILocation(line: 6057, column: 3, scope: !7447)
!7472 = !DILocation(line: 6061, column: 16, scope: !7447)
!7473 = !DILocation(line: 6062, column: 21, scope: !7447)
!7474 = !DILocation(line: 6062, column: 3, scope: !7447)
!7475 = !DILocation(line: 6063, column: 31, scope: !7447)
!7476 = !DILocation(line: 6065, column: 14, scope: !7447)
!7477 = !DILocation(line: 6065, column: 12, scope: !7447)
!7478 = !DILocation(line: 6066, column: 3, scope: !7447)
!7479 = !DILocation(line: 6068, column: 3, scope: !7447)
!7480 = !DILocation(line: 6070, column: 8, scope: !7466)
!7481 = !DILocation(line: 6070, column: 19, scope: !7465)
!7482 = !DILocation(line: 6070, column: 17, scope: !7465)
!7483 = !DILocation(line: 6070, column: 3, scope: !7466)
!7484 = !DILocation(line: 6072, column: 11, scope: !7464)
!7485 = !DILocation(line: 6073, column: 7, scope: !7464)
!7486 = !DILocation(line: 6074, column: 14, scope: !7464)
!7487 = !DILocation(line: 6075, column: 7, scope: !7464)
!7488 = !DILocation(line: 6076, column: 7, scope: !7464)
!7489 = !DILocation(line: 6080, column: 27, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 6080, column: 11)
!7491 = !DILocation(line: 6080, column: 11, scope: !7490)
!7492 = !DILocation(line: 0, scope: !7490)
!7493 = !DILocation(line: 6080, column: 11, scope: !7464)
!7494 = !DILocation(line: 6081, column: 2, scope: !7490)
!7495 = !DILocation(line: 6083, column: 2, scope: !7490)
!7496 = !DILocation(line: 6088, column: 12, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 6088, column: 11)
!7498 = !DILocation(line: 6088, column: 11, scope: !7464)
!7499 = !DILocation(line: 6090, column: 26, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 6089, column: 2)
!7501 = !DILocation(line: 6090, column: 44, scope: !7500)
!7502 = !DILocation(line: 6090, column: 10, scope: !7500)
!7503 = !DILocation(line: 6091, column: 24, scope: !7500)
!7504 = !DILocation(line: 6093, column: 38, scope: !7500)
!7505 = !DILocation(line: 6093, column: 4, scope: !7500)
!7506 = !DILocation(line: 6095, column: 22, scope: !7500)
!7507 = !DILocation(line: 6095, column: 4, scope: !7500)
!7508 = !DILocation(line: 6096, column: 2, scope: !7500)
!7509 = !DILocation(line: 0, scope: !7497)
!7510 = !DILocation(line: 6100, column: 30, scope: !7464)
!7511 = !DILocation(line: 6100, column: 14, scope: !7464)
!7512 = !DILocation(line: 6102, column: 13, scope: !7464)
!7513 = !DILocation(line: 6103, column: 15, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 6103, column: 11)
!7515 = !DILocation(line: 6103, column: 11, scope: !7464)
!7516 = !DILocation(line: 6107, column: 11, scope: !7464)
!7517 = !DILocation(line: 6108, column: 7, scope: !7464)
!7518 = !DILocation(line: 6109, column: 7, scope: !7464)
!7519 = !DILocation(line: 6111, column: 30, scope: !7464)
!7520 = !DILocation(line: 6111, column: 14, scope: !7464)
!7521 = !DILocation(line: 6113, column: 13, scope: !7464)
!7522 = !DILocation(line: 6116, column: 11, scope: !7464)
!7523 = !DILocation(line: 6117, column: 15, scope: !7464)
!7524 = !DILocation(line: 6117, column: 7, scope: !7464)
!7525 = !DILocation(line: 6121, column: 23, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 6118, column: 2)
!7527 = !DILocation(line: 6121, column: 8, scope: !7526)
!7528 = !DILocation(line: 6122, column: 8, scope: !7526)
!7529 = !DILocation(line: 6123, column: 8, scope: !7526)
!7530 = !DILocation(line: 6124, column: 4, scope: !7526)
!7531 = !DILocation(line: 6124, column: 46, scope: !7526)
!7532 = !DILocation(line: 6125, column: 4, scope: !7526)
!7533 = !DILocation(line: 6129, column: 23, scope: !7526)
!7534 = !DILocation(line: 6129, column: 8, scope: !7526)
!7535 = !DILocation(line: 6130, column: 8, scope: !7526)
!7536 = !DILocation(line: 6131, column: 8, scope: !7526)
!7537 = !DILocation(line: 6132, column: 4, scope: !7526)
!7538 = !DILocation(line: 6132, column: 46, scope: !7526)
!7539 = !DILocation(line: 6133, column: 4, scope: !7526)
!7540 = !DILocation(line: 6136, column: 4, scope: !7526)
!7541 = !DILocation(line: 6137, column: 24, scope: !7526)
!7542 = !DILocation(line: 6139, column: 8, scope: !7526)
!7543 = !DILocation(line: 6140, column: 12, scope: !7526)
!7544 = !DILocation(line: 6140, column: 4, scope: !7526)
!7545 = !DILocation(line: 6143, column: 12, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 6143, column: 12)
!7547 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 6141, column: 6)
!7548 = !DILocation(line: 6143, column: 32, scope: !7546)
!7549 = !DILocation(line: 6143, column: 12, scope: !7547)
!7550 = !DILocation(line: 6145, column: 27, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 6144, column: 3)
!7552 = !DILocation(line: 6145, column: 25, scope: !7551)
!7553 = !DILocation(line: 6146, column: 25, scope: !7551)
!7554 = !DILocation(line: 6147, column: 5, scope: !7551)
!7555 = !DILocation(line: 6153, column: 8, scope: !7547)
!7556 = !DILocation(line: 6154, column: 28, scope: !7547)
!7557 = !DILocation(line: 6155, column: 8, scope: !7547)
!7558 = !DILocation(line: 6157, column: 8, scope: !7547)
!7559 = !DILocation(line: 6158, column: 6, scope: !7547)
!7560 = !DILocation(line: 6160, column: 27, scope: !7526)
!7561 = !DILocation(line: 6160, column: 11, scope: !7526)
!7562 = !DILocation(line: 6162, column: 10, scope: !7526)
!7563 = !DILocation(line: 6163, column: 4, scope: !7526)
!7564 = !DILocation(line: 6166, column: 4, scope: !7526)
!7565 = !DILocation(line: 6167, column: 2, scope: !7526)
!7566 = !DILocation(line: 0, scope: !7464)
!7567 = !DILocation(line: 6169, column: 15, scope: !7463)
!7568 = !DILocation(line: 6169, column: 23, scope: !7463)
!7569 = !DILocation(line: 6169, column: 26, scope: !7463)
!7570 = !DILocation(line: 6169, column: 68, scope: !7463)
!7571 = !DILocation(line: 6169, column: 11, scope: !7464)
!7572 = !DILocation(line: 6172, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 6172, column: 4)
!7574 = !DILocation(line: 0, scope: !7573)
!7575 = !DILocation(line: 0, scope: !7462)
!7576 = !DILocation(line: 6172, column: 4, scope: !7573)
!7577 = !DILocation(line: 6173, column: 10, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 6173, column: 10)
!7579 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 6172, column: 4)
!7580 = !DILocation(line: 6173, column: 30, scope: !7578)
!7581 = !DILocation(line: 6174, column: 3, scope: !7578)
!7582 = !DILocation(line: 6174, column: 6, scope: !7578)
!7583 = !DILocation(line: 6174, column: 26, scope: !7578)
!7584 = !DILocation(line: 6175, column: 3, scope: !7578)
!7585 = !DILocation(line: 6175, column: 6, scope: !7578)
!7586 = !DILocation(line: 6175, column: 44, scope: !7578)
!7587 = !DILocation(line: 6173, column: 10, scope: !7579)
!7588 = !DILocation(line: 6177, column: 7, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 6176, column: 8)
!7590 = !DILocation(line: 6178, column: 3, scope: !7589)
!7591 = !DILocation(line: 6179, column: 3, scope: !7589)
!7592 = !DILocation(line: 6180, column: 7, scope: !7589)
!7593 = !DILocation(line: 6181, column: 3, scope: !7589)
!7594 = !DILocation(line: 6184, column: 3, scope: !7589)
!7595 = !DILocation(line: 6185, column: 7, scope: !7589)
!7596 = !DILocation(line: 6187, column: 3, scope: !7589)
!7597 = !DILocation(line: 6189, column: 6, scope: !7589)
!7598 = !DILocation(line: 6172, column: 49, scope: !7579)
!7599 = !DILocation(line: 6172, column: 4, scope: !7579)
!7600 = distinct !{!7600, !7576, !7601}
!7601 = !DILocation(line: 6189, column: 6, scope: !7573)
!7602 = !DILocation(line: 6070, column: 63, scope: !7465)
!7603 = !DILocation(line: 6070, column: 3, scope: !7465)
!7604 = distinct !{!7604, !7483, !7605}
!7605 = !DILocation(line: 6191, column: 5, scope: !7466)
!7606 = !DILocation(line: 6193, column: 21, scope: !7447)
!7607 = !DILocation(line: 6193, column: 3, scope: !7447)
!7608 = !DILocation(line: 6195, column: 3, scope: !7447)
!7609 = !DILocation(line: 6197, column: 32, scope: !7447)
!7610 = !DILocation(line: 6197, column: 42, scope: !7447)
!7611 = !DILocation(line: 6198, column: 11, scope: !7447)
!7612 = !DILocation(line: 6199, column: 11, scope: !7447)
!7613 = !DILocation(line: 6197, column: 10, scope: !7447)
!7614 = !DILocation(line: 6201, column: 8, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 6201, column: 3)
!7616 = !DILocation(line: 0, scope: !7615)
!7617 = !DILocation(line: 6201, column: 19, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 6201, column: 3)
!7619 = !DILocation(line: 6201, column: 17, scope: !7618)
!7620 = !DILocation(line: 6201, column: 3, scope: !7615)
!7621 = !DILocation(line: 6203, column: 11, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 6202, column: 5)
!7623 = !DILocation(line: 6204, column: 42, scope: !7622)
!7624 = !DILocation(line: 6204, column: 7, scope: !7622)
!7625 = !DILocation(line: 6205, column: 44, scope: !7622)
!7626 = !DILocation(line: 6205, column: 7, scope: !7622)
!7627 = !DILocation(line: 6206, column: 11, scope: !7622)
!7628 = !DILocation(line: 6207, column: 41, scope: !7622)
!7629 = !DILocation(line: 6207, column: 7, scope: !7622)
!7630 = !DILocation(line: 6208, column: 42, scope: !7622)
!7631 = !DILocation(line: 6208, column: 7, scope: !7622)
!7632 = !DILocation(line: 6209, column: 11, scope: !7622)
!7633 = !DILocation(line: 6210, column: 41, scope: !7622)
!7634 = !DILocation(line: 6210, column: 7, scope: !7622)
!7635 = !DILocation(line: 6201, column: 63, scope: !7618)
!7636 = !DILocation(line: 6201, column: 3, scope: !7618)
!7637 = distinct !{!7637, !7620, !7638}
!7638 = !DILocation(line: 6211, column: 5, scope: !7615)
!7639 = !DILocation(line: 6213, column: 3, scope: !7447)
!7640 = !DILocation(line: 6214, column: 14, scope: !7447)
!7641 = !DILocation(line: 6214, column: 10, scope: !7447)
!7642 = !DILocation(line: 6214, column: 3, scope: !7447)
!7643 = !DILocation(line: 6215, column: 1, scope: !7447)
!7644 = distinct !DISubprogram(name: "gimplify_omp_workshare", scope: !3, file: !3, line: 6221, type: !7379, scopeLine: 6222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7645)
!7645 = !{!7646, !7647, !7648, !7649, !7650}
!7646 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7644, file: !3, line: 6221, type: !1093)
!7647 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7644, file: !3, line: 6221, type: !2939)
!7648 = !DILocalVariable(name: "expr", scope: !7644, file: !3, line: 6223, type: !734)
!7649 = !DILocalVariable(name: "stmt", scope: !7644, file: !3, line: 6224, type: !1058)
!7650 = !DILocalVariable(name: "body", scope: !7644, file: !3, line: 6225, type: !1048)
!7651 = !DILocation(line: 0, scope: !7644)
!7652 = !DILocation(line: 6223, column: 15, scope: !7644)
!7653 = !DILocation(line: 6225, column: 3, scope: !7644)
!7654 = !DILocation(line: 6225, column: 14, scope: !7644)
!7655 = !DILocation(line: 6227, column: 31, scope: !7644)
!7656 = !DILocation(line: 6227, column: 3, scope: !7644)
!7657 = !DILocation(line: 6228, column: 21, scope: !7644)
!7658 = !DILocation(line: 6228, column: 3, scope: !7644)
!7659 = !DILocation(line: 6229, column: 3, scope: !7644)
!7660 = !DILocation(line: 6231, column: 7, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 6231, column: 7)
!7662 = !DILocation(line: 6231, column: 24, scope: !7661)
!7663 = !DILocation(line: 6231, column: 7, scope: !7644)
!7664 = !DILocation(line: 6232, column: 39, scope: !7661)
!7665 = !DILocation(line: 6232, column: 45, scope: !7661)
!7666 = !DILocation(line: 6232, column: 12, scope: !7661)
!7667 = !DILocation(line: 6232, column: 5, scope: !7661)
!7668 = !DILocation(line: 6233, column: 29, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 6233, column: 12)
!7670 = !DILocation(line: 6233, column: 12, scope: !7661)
!7671 = !DILocation(line: 6234, column: 37, scope: !7669)
!7672 = !DILocation(line: 6234, column: 43, scope: !7669)
!7673 = !DILocation(line: 6234, column: 12, scope: !7669)
!7674 = !DILocation(line: 6234, column: 5, scope: !7669)
!7675 = !DILocation(line: 6236, column: 5, scope: !7669)
!7676 = !DILocation(line: 0, scope: !7661)
!7677 = !DILocation(line: 6238, column: 3, scope: !7644)
!7678 = !DILocation(line: 6239, column: 1, scope: !7644)
!7679 = distinct !DISubprogram(name: "gimplify_omp_atomic", scope: !3, file: !3, line: 6340, type: !5620, scopeLine: 6341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7680)
!7680 = !{!7681, !7682, !7683, !7684, !7685, !7686}
!7681 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7679, file: !3, line: 6340, type: !1093)
!7682 = !DILocalVariable(name: "pre_p", arg: 2, scope: !7679, file: !3, line: 6340, type: !2939)
!7683 = !DILocalVariable(name: "addr", scope: !7679, file: !3, line: 6342, type: !734)
!7684 = !DILocalVariable(name: "rhs", scope: !7679, file: !3, line: 6343, type: !734)
!7685 = !DILocalVariable(name: "type", scope: !7679, file: !3, line: 6344, type: !734)
!7686 = !DILocalVariable(name: "tmp_load", scope: !7679, file: !3, line: 6345, type: !734)
!7687 = !DILocation(line: 0, scope: !7679)
!7688 = !DILocation(line: 6342, column: 3, scope: !7679)
!7689 = !DILocation(line: 6342, column: 15, scope: !7679)
!7690 = !DILocation(line: 6342, column: 8, scope: !7679)
!7691 = !DILocation(line: 6343, column: 3, scope: !7679)
!7692 = !DILocation(line: 6343, column: 14, scope: !7679)
!7693 = !DILocation(line: 6343, column: 8, scope: !7679)
!7694 = !DILocation(line: 6344, column: 15, scope: !7679)
!7695 = !DILocation(line: 6347, column: 15, scope: !7679)
!7696 = !DILocation(line: 6348, column: 8, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6348, column: 8)
!7698 = !DILocation(line: 6348, column: 25, scope: !7697)
!7699 = !DILocation(line: 6348, column: 41, scope: !7697)
!7700 = !DILocation(line: 6348, column: 61, scope: !7697)
!7701 = !DILocation(line: 6348, column: 8, scope: !7679)
!7702 = !DILocation(line: 6349, column: 6, scope: !7697)
!7703 = !DILocation(line: 6349, column: 35, scope: !7697)
!7704 = !DILocation(line: 6350, column: 8, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6350, column: 8)
!7706 = !DILocation(line: 6350, column: 57, scope: !7705)
!7707 = !DILocation(line: 6350, column: 8, scope: !7679)
!7708 = !DILocation(line: 6353, column: 8, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6353, column: 8)
!7710 = !DILocation(line: 6354, column: 8, scope: !7709)
!7711 = !DILocation(line: 6353, column: 8, scope: !7679)
!7712 = !DILocation(line: 6357, column: 74, scope: !7679)
!7713 = !DILocation(line: 6357, column: 34, scope: !7679)
!7714 = !DILocation(line: 6357, column: 4, scope: !7679)
!7715 = !DILocation(line: 6358, column: 8, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6358, column: 8)
!7717 = !DILocation(line: 6359, column: 8, scope: !7716)
!7718 = !DILocation(line: 6358, column: 8, scope: !7679)
!7719 = !DILocation(line: 6361, column: 65, scope: !7679)
!7720 = !DILocation(line: 6361, column: 34, scope: !7679)
!7721 = !DILocation(line: 6361, column: 4, scope: !7679)
!7722 = !DILocation(line: 6362, column: 12, scope: !7679)
!7723 = !DILocation(line: 6364, column: 4, scope: !7679)
!7724 = !DILocation(line: 6365, column: 1, scope: !7679)
!7725 = distinct !DISubprogram(name: "gimplify_scalar_mode_aggregate_compare", scope: !3, file: !3, line: 4582, type: !5913, scopeLine: 4583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7726)
!7726 = !{!7727, !7728, !7729, !7730, !7731, !7732}
!7727 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7725, file: !3, line: 4582, type: !1093)
!7728 = !DILocalVariable(name: "loc", scope: !7725, file: !3, line: 4584, type: !859)
!7729 = !DILocalVariable(name: "op0", scope: !7725, file: !3, line: 4585, type: !734)
!7730 = !DILocalVariable(name: "op1", scope: !7725, file: !3, line: 4586, type: !734)
!7731 = !DILocalVariable(name: "type", scope: !7725, file: !3, line: 4588, type: !734)
!7732 = !DILocalVariable(name: "scalar_type", scope: !7725, file: !3, line: 4589, type: !734)
!7733 = !DILocation(line: 0, scope: !7725)
!7734 = !DILocation(line: 4584, column: 20, scope: !7725)
!7735 = !DILocation(line: 4585, column: 14, scope: !7725)
!7736 = !DILocation(line: 4586, column: 14, scope: !7725)
!7737 = !DILocation(line: 4588, column: 15, scope: !7725)
!7738 = !DILocation(line: 4589, column: 39, scope: !7725)
!7739 = !DILocation(line: 4589, column: 54, scope: !7725)
!7740 = !DILocation(line: 4589, column: 22, scope: !7725)
!7741 = !DILocation(line: 4591, column: 9, scope: !7725)
!7742 = !DILocation(line: 4592, column: 9, scope: !7725)
!7743 = !DILocation(line: 4595, column: 7, scope: !7725)
!7744 = !DILocation(line: 4595, column: 5, scope: !7725)
!7745 = !DILocation(line: 4597, column: 3, scope: !7725)
!7746 = distinct !DISubprogram(name: "gimplify_variable_sized_compare", scope: !3, file: !3, line: 4558, type: !5913, scopeLine: 4559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7747)
!7747 = !{!7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755}
!7748 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7746, file: !3, line: 4558, type: !1093)
!7749 = !DILocalVariable(name: "op0", scope: !7746, file: !3, line: 4560, type: !734)
!7750 = !DILocalVariable(name: "op1", scope: !7746, file: !3, line: 4561, type: !734)
!7751 = !DILocalVariable(name: "t", scope: !7746, file: !3, line: 4562, type: !734)
!7752 = !DILocalVariable(name: "arg", scope: !7746, file: !3, line: 4562, type: !734)
!7753 = !DILocalVariable(name: "dest", scope: !7746, file: !3, line: 4562, type: !734)
!7754 = !DILocalVariable(name: "src", scope: !7746, file: !3, line: 4562, type: !734)
!7755 = !DILocalVariable(name: "loc", scope: !7746, file: !3, line: 4563, type: !859)
!7756 = !DILocation(line: 0, scope: !7746)
!7757 = !DILocation(line: 4560, column: 14, scope: !7746)
!7758 = !DILocation(line: 4561, column: 14, scope: !7746)
!7759 = !DILocation(line: 4563, column: 20, scope: !7746)
!7760 = !DILocation(line: 4565, column: 9, scope: !7746)
!7761 = !DILocation(line: 4566, column: 9, scope: !7746)
!7762 = !DILocation(line: 4567, column: 9, scope: !7746)
!7763 = !DILocation(line: 4568, column: 9, scope: !7746)
!7764 = !DILocation(line: 4569, column: 10, scope: !7746)
!7765 = !DILocation(line: 4570, column: 7, scope: !7746)
!7766 = !DILocation(line: 4571, column: 7, scope: !7746)
!7767 = !DILocation(line: 4573, column: 7, scope: !7746)
!7768 = !DILocation(line: 4573, column: 5, scope: !7746)
!7769 = !DILocation(line: 4575, column: 3, scope: !7746)
!7770 = distinct !DISubprogram(name: "gimplify_seq_add_seq", scope: !3, file: !3, line: 184, type: !7771, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{null, !2939, !1048}
!7773 = !{!7774, !7775, !7776}
!7774 = !DILocalVariable(name: "dst_p", arg: 1, scope: !7770, file: !3, line: 184, type: !2939)
!7775 = !DILocalVariable(name: "src", arg: 2, scope: !7770, file: !3, line: 184, type: !1048)
!7776 = !DILocalVariable(name: "si", scope: !7770, file: !3, line: 186, type: !3336)
!7777 = !DILocation(line: 0, scope: !7770)
!7778 = !DILocation(line: 186, column: 3, scope: !7770)
!7779 = !DILocation(line: 188, column: 11, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 188, column: 7)
!7781 = !DILocation(line: 188, column: 7, scope: !7770)
!7782 = !DILocation(line: 191, column: 7, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 191, column: 7)
!7784 = !DILocation(line: 191, column: 14, scope: !7783)
!7785 = !DILocation(line: 191, column: 7, scope: !7770)
!7786 = !DILocation(line: 192, column: 14, scope: !7783)
!7787 = !DILocation(line: 192, column: 12, scope: !7783)
!7788 = !DILocation(line: 192, column: 5, scope: !7783)
!7789 = !DILocation(line: 194, column: 18, scope: !7770)
!7790 = !DILocation(line: 194, column: 8, scope: !7770)
!7791 = !DILocation(line: 195, column: 3, scope: !7770)
!7792 = !DILocation(line: 196, column: 1, scope: !7770)
!7793 = distinct !DISubprogram(name: "annotate_all_with_location_after", scope: !3, file: !3, line: 818, type: !7794, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7796)
!7794 = !DISubroutineType(types: !7795)
!7795 = !{null, !1048, !3336, !859}
!7796 = !{!7797, !7798, !7799}
!7797 = !DILocalVariable(name: "seq", arg: 1, scope: !7793, file: !3, line: 818, type: !1048)
!7798 = !DILocalVariable(name: "gsi", arg: 2, scope: !7793, file: !3, line: 818, type: !3336)
!7799 = !DILocalVariable(name: "location", arg: 3, scope: !7793, file: !3, line: 819, type: !859)
!7800 = !DILocation(line: 0, scope: !7793)
!7801 = !DILocation(line: 818, column: 72, scope: !7793)
!7802 = !DILocation(line: 821, column: 7, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 821, column: 7)
!7804 = !DILocation(line: 821, column: 7, scope: !7793)
!7805 = !DILocation(line: 822, column: 11, scope: !7803)
!7806 = !DILocation(line: 822, column: 5, scope: !7803)
!7807 = !DILocation(line: 824, column: 5, scope: !7803)
!7808 = !DILocation(line: 826, column: 3, scope: !7793)
!7809 = !DILocation(line: 826, column: 11, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 826, column: 3)
!7811 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 826, column: 3)
!7812 = !DILocation(line: 826, column: 10, scope: !7810)
!7813 = !DILocation(line: 826, column: 3, scope: !7811)
!7814 = !DILocation(line: 827, column: 33, scope: !7810)
!7815 = !DILocation(line: 827, column: 5, scope: !7810)
!7816 = !DILocation(line: 826, column: 28, scope: !7810)
!7817 = !DILocation(line: 826, column: 3, scope: !7810)
!7818 = distinct !{!7818, !7813, !7819}
!7819 = !DILocation(line: 827, column: 57, scope: !7811)
!7820 = !DILocation(line: 828, column: 1, scope: !7793)
!7821 = distinct !DISubprogram(name: "gimplify_type_sizes", scope: !3, file: !3, line: 7342, type: !2937, scopeLine: 7343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7822)
!7822 = !{!7823, !7824, !7825, !7826}
!7823 = !DILocalVariable(name: "type", arg: 1, scope: !7821, file: !3, line: 7342, type: !734)
!7824 = !DILocalVariable(name: "list_p", arg: 2, scope: !7821, file: !3, line: 7342, type: !2939)
!7825 = !DILocalVariable(name: "field", scope: !7821, file: !3, line: 7344, type: !734)
!7826 = !DILocalVariable(name: "t", scope: !7821, file: !3, line: 7344, type: !734)
!7827 = !DILocation(line: 0, scope: !7821)
!7828 = !DILocation(line: 7346, column: 12, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 7346, column: 7)
!7830 = !DILocation(line: 7346, column: 31, scope: !7829)
!7831 = !DILocation(line: 7346, column: 28, scope: !7829)
!7832 = !DILocation(line: 7346, column: 20, scope: !7829)
!7833 = !DILocation(line: 7350, column: 10, scope: !7821)
!7834 = !DILocation(line: 7353, column: 7, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 7353, column: 7)
!7836 = !DILocation(line: 7353, column: 7, scope: !7821)
!7837 = !DILocation(line: 7356, column: 32, scope: !7821)
!7838 = !DILocation(line: 7358, column: 11, scope: !7821)
!7839 = !DILocation(line: 7358, column: 3, scope: !7821)
!7840 = !DILocation(line: 7365, column: 30, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 7359, column: 5)
!7842 = !DILocation(line: 7365, column: 7, scope: !7841)
!7843 = !DILocation(line: 7366, column: 30, scope: !7841)
!7844 = !DILocation(line: 7366, column: 7, scope: !7841)
!7845 = !DILocation(line: 0, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 7369, column: 2)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 7368, column: 7)
!7848 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 7368, column: 7)
!7849 = !DILocation(line: 7368, column: 12, scope: !7848)
!7850 = !DILocation(line: 0, scope: !7848)
!7851 = !DILocation(line: 7368, column: 7, scope: !7848)
!7852 = !DILocation(line: 7370, column: 25, scope: !7846)
!7853 = !DILocation(line: 7370, column: 4, scope: !7846)
!7854 = !DILocation(line: 7370, column: 23, scope: !7846)
!7855 = !DILocation(line: 7371, column: 25, scope: !7846)
!7856 = !DILocation(line: 7371, column: 4, scope: !7846)
!7857 = !DILocation(line: 7371, column: 23, scope: !7846)
!7858 = !DILocation(line: 7368, column: 7, scope: !7847)
!7859 = distinct !{!7859, !7851, !7860}
!7860 = !DILocation(line: 7372, column: 2, scope: !7848)
!7861 = !DILocation(line: 7377, column: 28, scope: !7841)
!7862 = !DILocation(line: 7377, column: 7, scope: !7841)
!7863 = !DILocation(line: 7378, column: 28, scope: !7841)
!7864 = !DILocation(line: 7378, column: 7, scope: !7841)
!7865 = !DILocation(line: 7382, column: 11, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 7382, column: 11)
!7867 = !DILocation(line: 7383, column: 4, scope: !7866)
!7868 = !DILocation(line: 7383, column: 7, scope: !7866)
!7869 = !DILocation(line: 7382, column: 11, scope: !7841)
!7870 = !DILocation(line: 7385, column: 8, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 7384, column: 2)
!7872 = !DILocation(line: 7386, column: 8, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 7386, column: 8)
!7874 = !DILocation(line: 7386, column: 10, scope: !7873)
!7875 = !DILocation(line: 7386, column: 13, scope: !7873)
!7876 = !DILocation(line: 7386, column: 27, scope: !7873)
!7877 = !DILocation(line: 7386, column: 39, scope: !7873)
!7878 = !DILocation(line: 7386, column: 42, scope: !7873)
!7879 = !DILocation(line: 7386, column: 8, scope: !7871)
!7880 = !DILocation(line: 7387, column: 25, scope: !7873)
!7881 = !DILocation(line: 7388, column: 8, scope: !7871)
!7882 = !DILocation(line: 7387, column: 6, scope: !7873)
!7883 = !DILocation(line: 7389, column: 8, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 7389, column: 8)
!7885 = !DILocation(line: 7389, column: 10, scope: !7884)
!7886 = !DILocation(line: 7389, column: 13, scope: !7884)
!7887 = !DILocation(line: 7389, column: 27, scope: !7884)
!7888 = !DILocation(line: 7389, column: 39, scope: !7884)
!7889 = !DILocation(line: 7389, column: 42, scope: !7884)
!7890 = !DILocation(line: 7389, column: 8, scope: !7871)
!7891 = !DILocation(line: 7390, column: 25, scope: !7884)
!7892 = !DILocation(line: 7390, column: 6, scope: !7884)
!7893 = !DILocation(line: 7397, column: 20, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 7397, column: 7)
!7895 = !DILocation(line: 7397, column: 12, scope: !7894)
!7896 = !DILocation(line: 0, scope: !7894)
!7897 = !DILocation(line: 7397, column: 7, scope: !7894)
!7898 = !DILocation(line: 7398, column: 6, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 7398, column: 6)
!7900 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 7397, column: 7)
!7901 = !DILocation(line: 7398, column: 24, scope: !7899)
!7902 = !DILocation(line: 7398, column: 6, scope: !7900)
!7903 = !DILocation(line: 7400, column: 29, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 7399, column: 4)
!7905 = !DILocation(line: 7400, column: 6, scope: !7904)
!7906 = !DILocation(line: 7401, column: 29, scope: !7904)
!7907 = !DILocation(line: 7401, column: 6, scope: !7904)
!7908 = !DILocation(line: 7402, column: 29, scope: !7904)
!7909 = !DILocation(line: 7402, column: 6, scope: !7904)
!7910 = !DILocation(line: 7403, column: 27, scope: !7904)
!7911 = !DILocation(line: 7403, column: 6, scope: !7904)
!7912 = !DILocation(line: 7404, column: 4, scope: !7904)
!7913 = !DILocation(line: 7397, column: 55, scope: !7900)
!7914 = !DILocation(line: 7397, column: 7, scope: !7900)
!7915 = distinct !{!7915, !7897, !7916}
!7916 = !DILocation(line: 7404, column: 4, scope: !7894)
!7917 = !DILocation(line: 7427, column: 26, scope: !7821)
!7918 = !DILocation(line: 7427, column: 3, scope: !7821)
!7919 = !DILocation(line: 7428, column: 26, scope: !7821)
!7920 = !DILocation(line: 7428, column: 3, scope: !7821)
!7921 = !DILocation(line: 0, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 7431, column: 5)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 7430, column: 3)
!7924 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 7430, column: 3)
!7925 = !DILocation(line: 7430, column: 8, scope: !7924)
!7926 = !DILocation(line: 0, scope: !7924)
!7927 = !DILocation(line: 7430, column: 3, scope: !7924)
!7928 = !DILocation(line: 7432, column: 23, scope: !7922)
!7929 = !DILocation(line: 7432, column: 7, scope: !7922)
!7930 = !DILocation(line: 7432, column: 21, scope: !7922)
!7931 = !DILocation(line: 7433, column: 28, scope: !7922)
!7932 = !DILocation(line: 7433, column: 7, scope: !7922)
!7933 = !DILocation(line: 7433, column: 26, scope: !7922)
!7934 = !DILocation(line: 7434, column: 7, scope: !7922)
!7935 = !DILocation(line: 7434, column: 33, scope: !7922)
!7936 = !DILocation(line: 7430, column: 3, scope: !7923)
!7937 = distinct !{!7937, !7927, !7938}
!7938 = !DILocation(line: 7435, column: 5, scope: !7924)
!7939 = !DILocation(line: 7436, column: 1, scope: !7821)
!7940 = distinct !DISubprogram(name: "gimplify_one_sizepos", scope: !3, file: !3, line: 7443, type: !7379, scopeLine: 7444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7941)
!7941 = !{!7942, !7943, !7944, !7945, !7946, !7949}
!7942 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7940, file: !3, line: 7443, type: !1093)
!7943 = !DILocalVariable(name: "stmt_p", arg: 2, scope: !7940, file: !3, line: 7443, type: !2939)
!7944 = !DILocalVariable(name: "type", scope: !7940, file: !3, line: 7445, type: !734)
!7945 = !DILocalVariable(name: "expr", scope: !7940, file: !3, line: 7445, type: !734)
!7946 = !DILocalVariable(name: "tmp", scope: !7947, file: !3, line: 7473, type: !734)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 7472, column: 5)
!7948 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 7469, column: 7)
!7949 = !DILocalVariable(name: "stmt", scope: !7947, file: !3, line: 7474, type: !1058)
!7950 = !DILocation(line: 0, scope: !7940)
!7951 = !DILocation(line: 7445, column: 21, scope: !7940)
!7952 = !DILocation(line: 7452, column: 12, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 7452, column: 7)
!7954 = !DILocation(line: 7452, column: 25, scope: !7953)
!7955 = !DILocation(line: 7452, column: 28, scope: !7953)
!7956 = !DILocation(line: 7453, column: 7, scope: !7953)
!7957 = !DILocation(line: 7453, column: 27, scope: !7953)
!7958 = !DILocation(line: 7454, column: 7, scope: !7953)
!7959 = !DILocation(line: 7454, column: 10, scope: !7953)
!7960 = !DILocation(line: 7452, column: 7, scope: !7940)
!7961 = !DILocation(line: 7457, column: 10, scope: !7940)
!7962 = !DILocation(line: 7458, column: 13, scope: !7940)
!7963 = !DILocation(line: 7458, column: 11, scope: !7940)
!7964 = !DILocation(line: 7460, column: 3, scope: !7940)
!7965 = !DILocation(line: 7461, column: 10, scope: !7940)
!7966 = !DILocation(line: 7469, column: 7, scope: !7948)
!7967 = !DILocation(line: 7469, column: 24, scope: !7948)
!7968 = !DILocation(line: 7470, column: 7, scope: !7948)
!7969 = !DILocation(line: 7470, column: 10, scope: !7948)
!7970 = !DILocation(line: 7470, column: 27, scope: !7948)
!7971 = !DILocation(line: 7471, column: 7, scope: !7948)
!7972 = !DILocation(line: 7471, column: 10, scope: !7948)
!7973 = !DILocation(line: 7469, column: 7, scope: !7940)
!7974 = !DILocation(line: 7476, column: 17, scope: !7947)
!7975 = !DILocation(line: 7476, column: 15, scope: !7947)
!7976 = !DILocation(line: 7477, column: 13, scope: !7947)
!7977 = !DILocation(line: 0, scope: !7947)
!7978 = !DILocation(line: 7478, column: 31, scope: !7947)
!7979 = !DILocation(line: 7478, column: 14, scope: !7947)
!7980 = !DILocation(line: 7479, column: 11, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 7479, column: 11)
!7982 = !DILocation(line: 7479, column: 11, scope: !7947)
!7983 = !DILocation(line: 7480, column: 29, scope: !7981)
!7984 = !DILocation(line: 7480, column: 2, scope: !7981)
!7985 = !DILocation(line: 7482, column: 29, scope: !7981)
!7986 = !DILocation(line: 7482, column: 2, scope: !7981)
!7987 = !DILocation(line: 7484, column: 1, scope: !7940)
!7988 = distinct !DISubprogram(name: "gimple_set_location", scope: !391, file: !391, line: 1156, type: !3417, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7989)
!7989 = !{!7990, !7991}
!7990 = !DILocalVariable(name: "g", arg: 1, scope: !7988, file: !391, line: 1156, type: !1058)
!7991 = !DILocalVariable(name: "location", arg: 2, scope: !7988, file: !391, line: 1156, type: !859)
!7992 = !DILocation(line: 0, scope: !7988)
!7993 = !DILocation(line: 1158, column: 13, scope: !7988)
!7994 = !DILocation(line: 1158, column: 22, scope: !7988)
!7995 = !DILocation(line: 1159, column: 1, scope: !7988)
!7996 = distinct !DISubprogram(name: "gimplify_body", scope: !3, file: !3, line: 7493, type: !7997, scopeLine: 7494, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7999)
!7997 = !DISubroutineType(types: !7998)
!7998 = !{!1058, !1093, !734, !727}
!7999 = !{!8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008}
!8000 = !DILocalVariable(name: "body_p", arg: 1, scope: !7996, file: !3, line: 7493, type: !1093)
!8001 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7996, file: !3, line: 7493, type: !734)
!8002 = !DILocalVariable(name: "do_parms", arg: 3, scope: !7996, file: !3, line: 7493, type: !727)
!8003 = !DILocalVariable(name: "saved_location", scope: !7996, file: !3, line: 7495, type: !859)
!8004 = !DILocalVariable(name: "parm_stmts", scope: !7996, file: !3, line: 7496, type: !1048)
!8005 = !DILocalVariable(name: "seq", scope: !7996, file: !3, line: 7496, type: !1048)
!8006 = !DILocalVariable(name: "outer_bind", scope: !7996, file: !3, line: 7497, type: !1058)
!8007 = !DILocalVariable(name: "gctx", scope: !7996, file: !3, line: 7498, type: !2266)
!8008 = !DILocalVariable(name: "parm", scope: !8009, file: !3, line: 7550, type: !734)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 7549, column: 5)
!8010 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7548, column: 7)
!8011 = !DILocation(line: 0, scope: !7996)
!8012 = !DILocation(line: 7495, column: 31, scope: !7996)
!8013 = !DILocation(line: 7496, column: 3, scope: !7996)
!8014 = !DILocation(line: 7498, column: 3, scope: !7996)
!8015 = !DILocation(line: 7500, column: 3, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 7500, column: 3)
!8017 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7500, column: 3)
!8018 = !DILocation(line: 7500, column: 3, scope: !8017)
!8019 = !DILocation(line: 7504, column: 3, scope: !7996)
!8020 = !DILocation(line: 7506, column: 3, scope: !7996)
!8021 = !DILocation(line: 7507, column: 3, scope: !7996)
!8022 = !DILocation(line: 7513, column: 3, scope: !7996)
!8023 = !DILocation(line: 7514, column: 3, scope: !7996)
!8024 = !DILocation(line: 7516, column: 7, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7516, column: 7)
!8026 = !DILocation(line: 7516, column: 29, scope: !8025)
!8027 = !DILocation(line: 7516, column: 7, scope: !7996)
!8028 = !DILocation(line: 7517, column: 21, scope: !8025)
!8029 = !DILocation(line: 7517, column: 19, scope: !8025)
!8030 = !DILocation(line: 7517, column: 5, scope: !8025)
!8031 = !DILocation(line: 7520, column: 20, scope: !7996)
!8032 = !DILocation(line: 7520, column: 18, scope: !7996)
!8033 = !DILocation(line: 7524, column: 16, scope: !7996)
!8034 = !DILocation(line: 7524, column: 29, scope: !7996)
!8035 = !DILocation(line: 7524, column: 14, scope: !7996)
!8036 = !DILocation(line: 7527, column: 7, scope: !7996)
!8037 = !DILocation(line: 7528, column: 3, scope: !7996)
!8038 = !DILocation(line: 7529, column: 39, scope: !7996)
!8039 = !DILocation(line: 7529, column: 16, scope: !7996)
!8040 = !DILocation(line: 7530, column: 8, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7530, column: 7)
!8042 = !DILocation(line: 7530, column: 7, scope: !7996)
!8043 = !DILocation(line: 7532, column: 20, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 7531, column: 5)
!8045 = !DILocation(line: 7533, column: 7, scope: !8044)
!8046 = !DILocation(line: 7534, column: 5, scope: !8044)
!8047 = !DILocation(line: 7538, column: 7, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7538, column: 7)
!8049 = !DILocation(line: 7538, column: 32, scope: !8048)
!8050 = !DILocation(line: 7539, column: 7, scope: !8048)
!8051 = !DILocation(line: 7539, column: 28, scope: !8048)
!8052 = !DILocation(line: 7539, column: 10, scope: !8048)
!8053 = !DILocation(line: 7539, column: 53, scope: !8048)
!8054 = !DILocation(line: 7539, column: 36, scope: !8048)
!8055 = !DILocation(line: 7539, column: 33, scope: !8048)
!8056 = !DILocation(line: 7538, column: 7, scope: !7996)
!8057 = !DILocation(line: 7542, column: 48, scope: !8048)
!8058 = !DILocation(line: 7542, column: 18, scope: !8048)
!8059 = !DILocation(line: 7544, column: 11, scope: !7996)
!8060 = !DILocation(line: 7548, column: 28, scope: !8010)
!8061 = !DILocation(line: 7548, column: 8, scope: !8010)
!8062 = !DILocation(line: 7548, column: 7, scope: !7996)
!8063 = !DILocation(line: 7552, column: 42, scope: !8009)
!8064 = !DILocation(line: 7552, column: 7, scope: !8009)
!8065 = !DILocation(line: 7553, column: 41, scope: !8009)
!8066 = !DILocation(line: 7553, column: 7, scope: !8009)
!8067 = !DILocation(line: 7555, column: 19, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 7555, column: 7)
!8069 = !DILocation(line: 7555, column: 12, scope: !8068)
!8070 = !DILocation(line: 0, scope: !8068)
!8071 = !DILocation(line: 0, scope: !8009)
!8072 = !DILocation(line: 7555, column: 7, scope: !8068)
!8073 = !DILocation(line: 7557, column: 6, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 7557, column: 6)
!8075 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 7555, column: 7)
!8076 = !DILocation(line: 7557, column: 6, scope: !8075)
!8077 = !DILocation(line: 7560, column: 28, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 7558, column: 4)
!8079 = !DILocation(line: 7561, column: 4, scope: !8078)
!8080 = !DILocation(line: 7556, column: 18, scope: !8075)
!8081 = !DILocation(line: 7555, column: 7, scope: !8075)
!8082 = distinct !{!8082, !8072, !8083}
!8083 = !DILocation(line: 7561, column: 4, scope: !8068)
!8084 = !DILocation(line: 7564, column: 7, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7564, column: 7)
!8086 = !DILocation(line: 7564, column: 7, scope: !7996)
!8087 = !DILocation(line: 7566, column: 7, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 7565, column: 5)
!8089 = !DILocation(line: 7567, column: 21, scope: !8088)
!8090 = !DILocation(line: 7568, column: 5, scope: !8088)
!8091 = !DILocation(line: 7570, column: 3, scope: !7996)
!8092 = !DILocation(line: 7571, column: 3, scope: !7996)
!8093 = !DILocation(line: 7578, column: 3, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 7578, column: 3)
!8095 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 7578, column: 3)
!8096 = !DILocation(line: 7578, column: 3, scope: !8095)
!8097 = !DILocation(line: 7579, column: 18, scope: !7996)
!8098 = !DILocation(line: 7582, column: 1, scope: !7996)
!8099 = !DILocation(line: 7581, column: 3, scope: !7996)
!8100 = distinct !DISubprogram(name: "unshare_body", scope: !3, file: !3, line: 939, type: !8101, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !1093, !734}
!8103 = !{!8104, !8105, !8106}
!8104 = !DILocalVariable(name: "body_p", arg: 1, scope: !8100, file: !3, line: 939, type: !1093)
!8105 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8100, file: !3, line: 939, type: !734)
!8106 = !DILocalVariable(name: "cgn", scope: !8100, file: !3, line: 941, type: !8107)
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 64)
!8108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !488, line: 181, size: 2496, elements: !8109)
!8109 = !{!8110, !8111, !8133, !8134, !8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8250, !8272, !8282, !8286, !8312, !8321, !8322, !8323, !8324, !8325, !8326, !8327, !8328, !8329, !8330, !8331, !8332, !8333, !8334}
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !8108, file: !488, line: 182, baseType: !734, size: 64)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !8108, file: !488, line: 183, baseType: !8112, size: 64, offset: 64)
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 64)
!8113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !488, line: 314, size: 768, elements: !8114)
!8114 = !{!8115, !8116, !8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124, !8126, !8127, !8128, !8129, !8130, !8131, !8132}
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8113, file: !488, line: 316, baseType: !1270, size: 64)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !8113, file: !488, line: 317, baseType: !8107, size: 64, offset: 64)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !8113, file: !488, line: 318, baseType: !8107, size: 64, offset: 128)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !8113, file: !488, line: 319, baseType: !8112, size: 64, offset: 192)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !8113, file: !488, line: 320, baseType: !8112, size: 64, offset: 256)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !8113, file: !488, line: 321, baseType: !8112, size: 64, offset: 320)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !8113, file: !488, line: 322, baseType: !8112, size: 64, offset: 384)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !8113, file: !488, line: 323, baseType: !1058, size: 64, offset: 448)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !8113, file: !488, line: 324, baseType: !731, size: 64, offset: 512)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !8113, file: !488, line: 327, baseType: !8125, size: 32, offset: 576)
!8125 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !488, line: 312, baseType: !487)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !8113, file: !488, line: 330, baseType: !7, size: 32, offset: 608)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !8113, file: !488, line: 334, baseType: !392, size: 32, offset: 640)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !8113, file: !488, line: 336, baseType: !392, size: 32, offset: 672)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !8113, file: !488, line: 338, baseType: !2342, size: 16, offset: 704)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !8113, file: !488, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !8113, file: !488, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !8113, file: !488, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !8108, file: !488, line: 184, baseType: !8112, size: 64, offset: 128)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8108, file: !488, line: 185, baseType: !8107, size: 64, offset: 192)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !8108, file: !488, line: 186, baseType: !8107, size: 64, offset: 256)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !8108, file: !488, line: 188, baseType: !8107, size: 64, offset: 320)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !8108, file: !488, line: 190, baseType: !8107, size: 64, offset: 384)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !8108, file: !488, line: 192, baseType: !8107, size: 64, offset: 448)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !8108, file: !488, line: 194, baseType: !8107, size: 64, offset: 512)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !8108, file: !488, line: 196, baseType: !8107, size: 64, offset: 576)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !8108, file: !488, line: 197, baseType: !8107, size: 64, offset: 640)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !8108, file: !488, line: 198, baseType: !8107, size: 64, offset: 704)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !8108, file: !488, line: 199, baseType: !8107, size: 64, offset: 768)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !8108, file: !488, line: 202, baseType: !8107, size: 64, offset: 832)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !8108, file: !488, line: 204, baseType: !8107, size: 64, offset: 896)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !8108, file: !488, line: 207, baseType: !1565, size: 64, offset: 960)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !8108, file: !488, line: 209, baseType: !731, size: 64, offset: 1024)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !8108, file: !488, line: 214, baseType: !8149, size: 64, offset: 1088)
!8149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8150, size: 64)
!8150 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1482, line: 177, baseType: !8151)
!8151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1482, line: 177, size: 128, elements: !8152)
!8152 = !{!8153}
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8151, file: !1482, line: 177, baseType: !8154, size: 128)
!8154 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1482, line: 176, baseType: !8155)
!8155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1482, line: 176, size: 128, elements: !8156)
!8156 = !{!8157, !8158, !8159}
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8155, file: !1482, line: 176, baseType: !7, size: 32)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8155, file: !1482, line: 176, baseType: !7, size: 32, offset: 32)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8155, file: !1482, line: 176, baseType: !8160, size: 64, offset: 64)
!8160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8161, size: 64, elements: !833)
!8161 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1482, line: 174, baseType: !8162)
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 64)
!8163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !511, line: 173, size: 1152, elements: !8164)
!8164 = !{!8165, !8189, !8193, !8216, !8217, !8221, !8226, !8227, !8231}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !8163, file: !511, line: 175, baseType: !8166, size: 640)
!8166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !511, line: 114, size: 640, elements: !8167)
!8167 = !{!8168, !8169, !8170, !8174, !8178, !8180, !8181, !8182, !8184, !8185, !8186, !8187, !8188}
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8166, file: !511, line: 117, baseType: !510, size: 32)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8166, file: !511, line: 121, baseType: !732, size: 64, offset: 64)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !8166, file: !511, line: 125, baseType: !8171, size: 64, offset: 128)
!8171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8172, size: 64)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!727}
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !8166, file: !511, line: 130, baseType: !8175, size: 64, offset: 192)
!8175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8176, size: 64)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!7}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !8166, file: !511, line: 133, baseType: !8179, size: 64, offset: 256)
!8179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8166, size: 64)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8166, file: !511, line: 136, baseType: !8179, size: 64, offset: 320)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !8166, file: !511, line: 139, baseType: !392, size: 32, offset: 384)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !8166, file: !511, line: 143, baseType: !8183, size: 32, offset: 416)
!8183 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !518, line: 80, baseType: !517)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !8166, file: !511, line: 146, baseType: !7, size: 32, offset: 448)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !8166, file: !511, line: 147, baseType: !7, size: 32, offset: 480)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !8166, file: !511, line: 148, baseType: !7, size: 32, offset: 512)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !8166, file: !511, line: 151, baseType: !7, size: 32, offset: 544)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !8166, file: !511, line: 152, baseType: !7, size: 32, offset: 576)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !8163, file: !511, line: 179, baseType: !8190, size: 64, offset: 640)
!8190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8191, size: 64)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{null}
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !8163, file: !511, line: 182, baseType: !8194, size: 64, offset: 704)
!8194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8195, size: 64)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{null, !8197}
!8197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8198, size: 64)
!8198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !488, line: 276, size: 192, elements: !8199)
!8199 = !{!8200, !8201, !8215}
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !8198, file: !488, line: 278, baseType: !1565, size: 64)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !8198, file: !488, line: 279, baseType: !8202, size: 64, offset: 64)
!8202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8203, size: 64)
!8203 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !488, line: 272, baseType: !8204)
!8204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !488, line: 272, size: 128, elements: !8205)
!8205 = !{!8206}
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8204, file: !488, line: 272, baseType: !8207, size: 128)
!8207 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !488, line: 270, baseType: !8208)
!8208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !488, line: 270, size: 128, elements: !8209)
!8209 = !{!8210, !8211, !8212}
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8208, file: !488, line: 270, baseType: !7, size: 32)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8208, file: !488, line: 270, baseType: !7, size: 32, offset: 32)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8208, file: !488, line: 270, baseType: !8213, size: 64, offset: 64)
!8213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8214, size: 64, elements: !833)
!8214 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !488, line: 268, baseType: !8107)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !8198, file: !488, line: 280, baseType: !731, size: 64, offset: 128)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !8163, file: !511, line: 187, baseType: !8190, size: 64, offset: 768)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !8163, file: !511, line: 188, baseType: !8218, size: 64, offset: 832)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{null, !8107}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !8163, file: !511, line: 191, baseType: !8222, size: 64, offset: 896)
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8223, size: 64)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{null, !8107, !8225}
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !8163, file: !511, line: 195, baseType: !7, size: 32, offset: 960)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !8163, file: !511, line: 196, baseType: !8228, size: 64, offset: 1024)
!8228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8229, size: 64)
!8229 = !DISubroutineType(types: !8230)
!8230 = !{!7, !8107}
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !8163, file: !511, line: 197, baseType: !8232, size: 64, offset: 1088)
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{null, !8235}
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 64)
!8236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !488, line: 358, size: 320, elements: !8237)
!8237 = !{!8238, !8239, !8240, !8241, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8249}
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !8236, file: !488, line: 359, baseType: !734, size: 64)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8236, file: !488, line: 361, baseType: !8235, size: 64, offset: 64)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !8236, file: !488, line: 363, baseType: !8235, size: 64, offset: 128)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !8236, file: !488, line: 366, baseType: !8235, size: 64, offset: 192)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !8236, file: !488, line: 368, baseType: !392, size: 32, offset: 256)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !8236, file: !488, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !8236, file: !488, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !8236, file: !488, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !8236, file: !488, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !8236, file: !488, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !8236, file: !488, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !8236, file: !488, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !8108, file: !488, line: 216, baseType: !8251, size: 320, offset: 1152)
!8251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !488, line: 88, size: 320, elements: !8252)
!8252 = !{!8253, !8256, !8264, !8265, !8266, !8267, !8268, !8269, !8270, !8271}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !8251, file: !488, line: 90, baseType: !8254, size: 64)
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8255, size: 64)
!8255 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !488, line: 51, flags: DIFlagFwdDecl)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !8251, file: !488, line: 92, baseType: !8257, size: 192, offset: 64)
!8257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !488, line: 57, size: 192, elements: !8258)
!8258 = !{!8259, !8260, !8261, !8262, !8263}
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !8257, file: !488, line: 60, baseType: !790, size: 64)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !8257, file: !488, line: 63, baseType: !392, size: 32, offset: 64)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !8257, file: !488, line: 65, baseType: !392, size: 32, offset: 96)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !8257, file: !488, line: 67, baseType: !392, size: 32, offset: 128)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !8257, file: !488, line: 69, baseType: !392, size: 32, offset: 160)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !8251, file: !488, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !8251, file: !488, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !8251, file: !488, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !8251, file: !488, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !8251, file: !488, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !8251, file: !488, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !8251, file: !488, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !8251, file: !488, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !8108, file: !488, line: 217, baseType: !8273, size: 320, offset: 1472)
!8273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !488, line: 126, size: 320, elements: !8274)
!8274 = !{!8275, !8276, !8277, !8278, !8279, !8280, !8281}
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !8273, file: !488, line: 128, baseType: !790, size: 64)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !8273, file: !488, line: 130, baseType: !790, size: 64, offset: 64)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !8273, file: !488, line: 134, baseType: !8107, size: 64, offset: 128)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !8273, file: !488, line: 137, baseType: !392, size: 32, offset: 192)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8273, file: !488, line: 138, baseType: !392, size: 32, offset: 224)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !8273, file: !488, line: 141, baseType: !392, size: 32, offset: 256)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !8273, file: !488, line: 144, baseType: !727, size: 8, offset: 288)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !8108, file: !488, line: 218, baseType: !8283, size: 32, offset: 1792)
!8283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !488, line: 150, size: 32, elements: !8284)
!8284 = !{!8285}
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !8283, file: !488, line: 151, baseType: !7, size: 32)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !8108, file: !488, line: 219, baseType: !8287, size: 192, offset: 1856)
!8287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !488, line: 171, size: 192, elements: !8288)
!8288 = !{!8289, !8310, !8311}
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !8287, file: !488, line: 173, baseType: !8290, size: 64)
!8290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 64)
!8291 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !488, line: 169, baseType: !8292)
!8292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !488, line: 169, size: 128, elements: !8293)
!8293 = !{!8294}
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8292, file: !488, line: 169, baseType: !8295, size: 128)
!8295 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !488, line: 168, baseType: !8296)
!8296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !488, line: 168, size: 128, elements: !8297)
!8297 = !{!8298, !8299, !8300}
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8296, file: !488, line: 168, baseType: !7, size: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8296, file: !488, line: 168, baseType: !7, size: 32, offset: 32)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8296, file: !488, line: 168, baseType: !8301, size: 64, offset: 64)
!8301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8302, size: 64, elements: !833)
!8302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !488, line: 167, baseType: !8303)
!8303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8304, size: 64)
!8304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !488, line: 156, size: 192, elements: !8305)
!8305 = !{!8306, !8307, !8308, !8309}
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !8304, file: !488, line: 159, baseType: !734, size: 64)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !8304, file: !488, line: 161, baseType: !734, size: 64, offset: 64)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !8304, file: !488, line: 163, baseType: !727, size: 8, offset: 128)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !8304, file: !488, line: 165, baseType: !727, size: 8, offset: 136)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !8287, file: !488, line: 174, baseType: !1706, size: 64, offset: 64)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !8287, file: !488, line: 175, baseType: !1706, size: 64, offset: 128)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !8108, file: !488, line: 220, baseType: !8313, size: 256, offset: 2048)
!8313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !488, line: 74, size: 256, elements: !8314)
!8314 = !{!8315, !8316, !8317, !8318, !8319, !8320}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !8313, file: !488, line: 76, baseType: !790, size: 64)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !8313, file: !488, line: 77, baseType: !790, size: 64, offset: 64)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !8313, file: !488, line: 78, baseType: !734, size: 64, offset: 128)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !8313, file: !488, line: 79, baseType: !727, size: 8, offset: 192)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !8313, file: !488, line: 80, baseType: !727, size: 8, offset: 200)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !8313, file: !488, line: 82, baseType: !727, size: 8, offset: 208)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8108, file: !488, line: 223, baseType: !1270, size: 64, offset: 2304)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !8108, file: !488, line: 225, baseType: !392, size: 32, offset: 2368)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !8108, file: !488, line: 227, baseType: !392, size: 32, offset: 2400)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !8108, file: !488, line: 231, baseType: !392, size: 32, offset: 2432)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !8108, file: !488, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !8108, file: !488, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !8108, file: !488, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !8108, file: !488, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !8108, file: !488, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !8108, file: !488, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !8108, file: !488, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !8108, file: !488, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !8108, file: !488, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !8108, file: !488, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!8335 = !DILocation(line: 0, scope: !8100)
!8336 = !DILocation(line: 941, column: 29, scope: !8100)
!8337 = !DILocation(line: 943, column: 3, scope: !8100)
!8338 = !DILocation(line: 944, column: 18, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 944, column: 7)
!8340 = !DILocation(line: 944, column: 14, scope: !8339)
!8341 = !DILocation(line: 944, column: 7, scope: !8100)
!8342 = !DILocation(line: 945, column: 21, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 945, column: 5)
!8344 = !DILocation(line: 945, column: 10, scope: !8343)
!8345 = !DILocation(line: 0, scope: !8343)
!8346 = !DILocation(line: 945, column: 5, scope: !8343)
!8347 = !DILocation(line: 946, column: 22, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 945, column: 5)
!8349 = !DILocation(line: 946, column: 56, scope: !8348)
!8350 = !DILocation(line: 946, column: 7, scope: !8348)
!8351 = !DILocation(line: 945, column: 45, scope: !8348)
!8352 = !DILocation(line: 945, column: 5, scope: !8348)
!8353 = distinct !{!8353, !8346, !8354}
!8354 = !DILocation(line: 946, column: 60, scope: !8343)
!8355 = !DILocation(line: 947, column: 1, scope: !8100)
!8356 = distinct !DISubprogram(name: "unvisit_body", scope: !3, file: !3, line: 952, type: !8101, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8357)
!8357 = !{!8358, !8359, !8360}
!8358 = !DILocalVariable(name: "body_p", arg: 1, scope: !8356, file: !3, line: 952, type: !1093)
!8359 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8356, file: !3, line: 952, type: !734)
!8360 = !DILocalVariable(name: "cgn", scope: !8356, file: !3, line: 954, type: !8107)
!8361 = !DILocation(line: 0, scope: !8356)
!8362 = !DILocation(line: 954, column: 29, scope: !8356)
!8363 = !DILocation(line: 956, column: 3, scope: !8356)
!8364 = !DILocation(line: 957, column: 18, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 957, column: 7)
!8366 = !DILocation(line: 957, column: 14, scope: !8365)
!8367 = !DILocation(line: 957, column: 7, scope: !8356)
!8368 = !DILocation(line: 958, column: 21, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 958, column: 5)
!8370 = !DILocation(line: 958, column: 10, scope: !8369)
!8371 = !DILocation(line: 0, scope: !8369)
!8372 = !DILocation(line: 958, column: 5, scope: !8369)
!8373 = !DILocation(line: 959, column: 22, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 958, column: 5)
!8375 = !DILocation(line: 959, column: 56, scope: !8374)
!8376 = !DILocation(line: 959, column: 7, scope: !8374)
!8377 = !DILocation(line: 958, column: 45, scope: !8374)
!8378 = !DILocation(line: 958, column: 5, scope: !8374)
!8379 = distinct !{!8379, !8372, !8380}
!8380 = !DILocation(line: 959, column: 60, scope: !8369)
!8381 = !DILocation(line: 960, column: 1, scope: !8356)
!8382 = distinct !DISubprogram(name: "gimple_seq_first", scope: !391, file: !391, line: 159, type: !4018, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8383)
!8383 = !{!8384}
!8384 = !DILocalVariable(name: "s", arg: 1, scope: !8382, file: !391, line: 159, type: !3318)
!8385 = !DILocation(line: 0, scope: !8382)
!8386 = !DILocation(line: 161, column: 10, scope: !8382)
!8387 = !DILocation(line: 161, column: 17, scope: !8382)
!8388 = !DILocation(line: 161, column: 3, scope: !8382)
!8389 = distinct !DISubprogram(name: "gimple_bind_body", scope: !391, file: !391, line: 2517, type: !8390, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8392)
!8390 = !DISubroutineType(types: !8391)
!8391 = !{!1048, !1058}
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "gs", arg: 1, scope: !8389, file: !391, line: 2517, type: !1058)
!8394 = !DILocation(line: 0, scope: !8389)
!8395 = !DILocation(line: 2520, column: 26, scope: !8389)
!8396 = !DILocation(line: 2520, column: 3, scope: !8389)
!8397 = distinct !DISubprogram(name: "gimple_bind_set_body", scope: !391, file: !391, line: 2528, type: !8398, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{null, !1058, !1048}
!8400 = !{!8401, !8402}
!8401 = !DILocalVariable(name: "gs", arg: 1, scope: !8397, file: !391, line: 2528, type: !1058)
!8402 = !DILocalVariable(name: "seq", arg: 2, scope: !8397, file: !391, line: 2528, type: !1048)
!8403 = !DILocation(line: 0, scope: !8397)
!8404 = !DILocation(line: 2531, column: 19, scope: !8397)
!8405 = !DILocation(line: 2531, column: 24, scope: !8397)
!8406 = !DILocation(line: 2532, column: 1, scope: !8397)
!8407 = distinct !DISubprogram(name: "gimplify_function_tree", scope: !3, file: !3, line: 7591, type: !2731, scopeLine: 7592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8408)
!8408 = !{!8409, !8410, !8411, !8412, !8413, !8414, !8415, !8418, !8419, !8420, !8421}
!8409 = !DILocalVariable(name: "fndecl", arg: 1, scope: !8407, file: !3, line: 7591, type: !734)
!8410 = !DILocalVariable(name: "oldfn", scope: !8407, file: !3, line: 7593, type: !734)
!8411 = !DILocalVariable(name: "parm", scope: !8407, file: !3, line: 7593, type: !734)
!8412 = !DILocalVariable(name: "ret", scope: !8407, file: !3, line: 7593, type: !734)
!8413 = !DILocalVariable(name: "seq", scope: !8407, file: !3, line: 7594, type: !1048)
!8414 = !DILocalVariable(name: "bind", scope: !8407, file: !3, line: 7595, type: !1058)
!8415 = !DILocalVariable(name: "x", scope: !8416, file: !3, line: 7640, type: !734)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 7639, column: 5)
!8417 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 7636, column: 7)
!8418 = !DILocalVariable(name: "new_bind", scope: !8416, file: !3, line: 7641, type: !1058)
!8419 = !DILocalVariable(name: "tf", scope: !8416, file: !3, line: 7642, type: !1058)
!8420 = !DILocalVariable(name: "cleanup", scope: !8416, file: !3, line: 7643, type: !1048)
!8421 = !DILocalVariable(name: "body", scope: !8416, file: !3, line: 7643, type: !1048)
!8422 = !DILocation(line: 0, scope: !8407)
!8423 = !DILocation(line: 7594, column: 3, scope: !8407)
!8424 = !DILocation(line: 7597, column: 3, scope: !8407)
!8425 = !DILocation(line: 7599, column: 11, scope: !8407)
!8426 = !DILocation(line: 7600, column: 25, scope: !8407)
!8427 = !DILocation(line: 7601, column: 7, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 7601, column: 7)
!8429 = !DILocation(line: 7601, column: 7, scope: !8407)
!8430 = !DILocation(line: 7602, column: 5, scope: !8428)
!8431 = !DILocation(line: 7604, column: 5, scope: !8428)
!8432 = !DILocation(line: 7606, column: 15, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 7606, column: 3)
!8434 = !DILocation(line: 7606, column: 8, scope: !8433)
!8435 = !DILocation(line: 0, scope: !8433)
!8436 = !DILocation(line: 7606, column: 3, scope: !8433)
!8437 = !DILocation(line: 7611, column: 12, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 7611, column: 11)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 7607, column: 5)
!8440 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 7606, column: 3)
!8441 = !DILocation(line: 7611, column: 41, scope: !8438)
!8442 = !DILocation(line: 7612, column: 5, scope: !8438)
!8443 = !DILocation(line: 7612, column: 37, scope: !8438)
!8444 = !DILocation(line: 7613, column: 11, scope: !8438)
!8445 = !DILocation(line: 7613, column: 15, scope: !8438)
!8446 = !DILocation(line: 7614, column: 11, scope: !8438)
!8447 = !DILocation(line: 7614, column: 15, scope: !8438)
!8448 = !DILocation(line: 7611, column: 11, scope: !8439)
!8449 = !DILocation(line: 7615, column: 9, scope: !8438)
!8450 = !DILocation(line: 7615, column: 34, scope: !8438)
!8451 = !DILocation(line: 7606, column: 54, scope: !8440)
!8452 = !DILocation(line: 7606, column: 3, scope: !8440)
!8453 = distinct !{!8453, !8436, !8454}
!8454 = !DILocation(line: 7616, column: 5, scope: !8433)
!8455 = !DILocation(line: 7618, column: 9, scope: !8407)
!8456 = !DILocation(line: 7619, column: 8, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 7619, column: 7)
!8458 = !DILocation(line: 7619, column: 36, scope: !8457)
!8459 = !DILocation(line: 7620, column: 8, scope: !8457)
!8460 = !DILocation(line: 7620, column: 39, scope: !8457)
!8461 = !DILocation(line: 7621, column: 7, scope: !8457)
!8462 = !DILocation(line: 7621, column: 11, scope: !8457)
!8463 = !DILocation(line: 7619, column: 7, scope: !8407)
!8464 = !DILocation(line: 7622, column: 5, scope: !8457)
!8465 = !DILocation(line: 7622, column: 29, scope: !8457)
!8466 = !DILocation(line: 7624, column: 26, scope: !8407)
!8467 = !DILocation(line: 7624, column: 10, scope: !8407)
!8468 = !DILocation(line: 7628, column: 9, scope: !8407)
!8469 = !DILocation(line: 7628, column: 7, scope: !8407)
!8470 = !DILocation(line: 7629, column: 3, scope: !8407)
!8471 = !DILocation(line: 7630, column: 28, scope: !8407)
!8472 = !DILocation(line: 7630, column: 3, scope: !8407)
!8473 = !DILocation(line: 7636, column: 7, scope: !8417)
!8474 = !DILocation(line: 7637, column: 7, scope: !8417)
!8475 = !DILocation(line: 7637, column: 11, scope: !8417)
!8476 = !DILocation(line: 7638, column: 7, scope: !8417)
!8477 = !DILocation(line: 7638, column: 11, scope: !8417)
!8478 = !DILocation(line: 7636, column: 7, scope: !8407)
!8479 = !DILocation(line: 7643, column: 7, scope: !8416)
!8480 = !DILocation(line: 0, scope: !8416)
!8481 = !DILocation(line: 7643, column: 18, scope: !8416)
!8482 = !DILocation(line: 7643, column: 34, scope: !8416)
!8483 = !DILocation(line: 7645, column: 11, scope: !8416)
!8484 = !DILocation(line: 7646, column: 40, scope: !8416)
!8485 = !DILocation(line: 7646, column: 7, scope: !8416)
!8486 = !DILocation(line: 7647, column: 30, scope: !8416)
!8487 = !DILocation(line: 7647, column: 35, scope: !8416)
!8488 = !DILocation(line: 7647, column: 12, scope: !8416)
!8489 = !DILocation(line: 7649, column: 11, scope: !8416)
!8490 = !DILocation(line: 7650, column: 37, scope: !8416)
!8491 = !DILocation(line: 7650, column: 7, scope: !8416)
!8492 = !DILocation(line: 7651, column: 7, scope: !8416)
!8493 = !DILocation(line: 7652, column: 43, scope: !8416)
!8494 = !DILocation(line: 7652, column: 49, scope: !8416)
!8495 = !DILocation(line: 7652, column: 18, scope: !8416)
!8496 = !DILocation(line: 7655, column: 7, scope: !8416)
!8497 = !DILocation(line: 7659, column: 13, scope: !8416)
!8498 = !DILocation(line: 7659, column: 11, scope: !8416)
!8499 = !DILocation(line: 7660, column: 7, scope: !8416)
!8500 = !DILocation(line: 7661, column: 32, scope: !8416)
!8501 = !DILocation(line: 7661, column: 7, scope: !8416)
!8502 = !DILocation(line: 7662, column: 5, scope: !8417)
!8503 = !DILocation(line: 7662, column: 5, scope: !8416)
!8504 = !DILocation(line: 7664, column: 28, scope: !8407)
!8505 = !DILocation(line: 7665, column: 3, scope: !8407)
!8506 = !DILocation(line: 7665, column: 9, scope: !8407)
!8507 = !DILocation(line: 7665, column: 25, scope: !8407)
!8508 = !DILocation(line: 7667, column: 25, scope: !8407)
!8509 = !DILocation(line: 7668, column: 3, scope: !8407)
!8510 = !DILocation(line: 7669, column: 1, scope: !8407)
!8511 = distinct !DISubprogram(name: "gimple_bind_set_block", scope: !391, file: !391, line: 2570, type: !3190, scopeLine: 2571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8512)
!8512 = !{!8513, !8514}
!8513 = !DILocalVariable(name: "gs", arg: 1, scope: !8511, file: !391, line: 2570, type: !1058)
!8514 = !DILocalVariable(name: "block", arg: 2, scope: !8511, file: !391, line: 2570, type: !734)
!8515 = !DILocation(line: 0, scope: !8511)
!8516 = !DILocation(line: 2574, column: 19, scope: !8511)
!8517 = !DILocation(line: 2574, column: 25, scope: !8511)
!8518 = !DILocation(line: 2575, column: 1, scope: !8511)
!8519 = distinct !DISubprogram(name: "gimple_regimplify_operands", scope: !3, file: !3, line: 7678, type: !8520, scopeLine: 7679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8522)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{null, !1058, !3435}
!8522 = !{!8523, !8524, !8525, !8526, !8527, !8528, !8529, !8530, !8531, !8532, !8533, !8536, !8537, !8538, !8539, !8540, !8541, !8542, !8546, !8550, !8554, !8557, !8566, !8569}
!8523 = !DILocalVariable(name: "stmt", arg: 1, scope: !8519, file: !3, line: 7678, type: !1058)
!8524 = !DILocalVariable(name: "gsi_p", arg: 2, scope: !8519, file: !3, line: 7678, type: !3435)
!8525 = !DILocalVariable(name: "i", scope: !8519, file: !3, line: 7680, type: !1204)
!8526 = !DILocalVariable(name: "num_ops", scope: !8519, file: !3, line: 7680, type: !1204)
!8527 = !DILocalVariable(name: "orig_lhs", scope: !8519, file: !3, line: 7681, type: !734)
!8528 = !DILocalVariable(name: "lhs", scope: !8519, file: !3, line: 7681, type: !734)
!8529 = !DILocalVariable(name: "t", scope: !8519, file: !3, line: 7681, type: !734)
!8530 = !DILocalVariable(name: "pre", scope: !8519, file: !3, line: 7682, type: !1048)
!8531 = !DILocalVariable(name: "post_stmt", scope: !8519, file: !3, line: 7683, type: !1058)
!8532 = !DILocalVariable(name: "gctx", scope: !8519, file: !3, line: 7684, type: !2266)
!8533 = !DILocalVariable(name: "i", scope: !8534, file: !3, line: 7707, type: !1204)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 7706, column: 7)
!8535 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 7690, column: 5)
!8536 = !DILocalVariable(name: "noutputs", scope: !8534, file: !3, line: 7707, type: !1204)
!8537 = !DILocalVariable(name: "constraint", scope: !8534, file: !3, line: 7708, type: !732)
!8538 = !DILocalVariable(name: "oconstraints", scope: !8534, file: !3, line: 7708, type: !2164)
!8539 = !DILocalVariable(name: "allows_mem", scope: !8534, file: !3, line: 7709, type: !727)
!8540 = !DILocalVariable(name: "allows_reg", scope: !8534, file: !3, line: 7709, type: !727)
!8541 = !DILocalVariable(name: "is_inout", scope: !8534, file: !3, line: 7709, type: !727)
!8542 = !DILocalVariable(name: "op", scope: !8543, file: !3, line: 7715, type: !734)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 7714, column: 4)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 7713, column: 2)
!8545 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 7713, column: 2)
!8546 = !DILocalVariable(name: "op", scope: !8547, file: !3, line: 7726, type: !734)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 7725, column: 4)
!8548 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 7724, column: 2)
!8549 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 7724, column: 2)
!8550 = !DILocalVariable(name: "op", scope: !8551, file: !3, line: 7750, type: !734)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 7749, column: 2)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 7748, column: 7)
!8553 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 7748, column: 7)
!8554 = !DILocalVariable(name: "need_temp", scope: !8555, file: !3, line: 7779, type: !727)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 7778, column: 2)
!8556 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 7777, column: 11)
!8557 = !DILocalVariable(name: "fndecl", scope: !8558, file: !3, line: 7811, type: !734)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 7810, column: 7)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 7809, column: 9)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 7808, column: 3)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 7807, column: 17)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 7805, column: 12)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 7804, column: 6)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 7788, column: 13)
!8565 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 7781, column: 8)
!8566 = !DILocalVariable(name: "temp", scope: !8567, file: !3, line: 7824, type: !734)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 7823, column: 6)
!8568 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 7822, column: 8)
!8569 = !DILocalVariable(name: "i", scope: !8570, file: !3, line: 7851, type: !3336)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 7850, column: 2)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 7849, column: 11)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 7848, column: 5)
!8573 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 7847, column: 7)
!8574 = !DILocation(line: 0, scope: !8519)
!8575 = !DILocation(line: 7682, column: 3, scope: !8519)
!8576 = !DILocation(line: 7682, column: 14, scope: !8519)
!8577 = !DILocation(line: 7684, column: 3, scope: !8519)
!8578 = !DILocation(line: 7686, column: 3, scope: !8519)
!8579 = !DILocation(line: 7687, column: 46, scope: !8519)
!8580 = !DILocation(line: 7687, column: 29, scope: !8519)
!8581 = !DILocation(line: 7687, column: 3, scope: !8519)
!8582 = !DILocation(line: 7687, column: 18, scope: !8519)
!8583 = !DILocation(line: 7687, column: 27, scope: !8519)
!8584 = !DILocation(line: 7689, column: 11, scope: !8519)
!8585 = !DILocation(line: 7689, column: 3, scope: !8519)
!8586 = !DILocation(line: 7692, column: 22, scope: !8535)
!8587 = !DILocation(line: 7692, column: 7, scope: !8535)
!8588 = !DILocation(line: 7694, column: 22, scope: !8535)
!8589 = !DILocation(line: 7694, column: 7, scope: !8535)
!8590 = !DILocation(line: 7696, column: 7, scope: !8535)
!8591 = !DILocation(line: 7698, column: 22, scope: !8535)
!8592 = !DILocation(line: 7698, column: 7, scope: !8535)
!8593 = !DILocation(line: 7700, column: 7, scope: !8535)
!8594 = !DILocation(line: 7702, column: 22, scope: !8535)
!8595 = !DILocation(line: 7702, column: 7, scope: !8535)
!8596 = !DILocation(line: 7704, column: 7, scope: !8535)
!8597 = !DILocation(line: 7707, column: 23, scope: !8534)
!8598 = !DILocation(line: 0, scope: !8534)
!8599 = !DILocation(line: 7708, column: 2, scope: !8534)
!8600 = !DILocation(line: 7709, column: 2, scope: !8534)
!8601 = !DILocation(line: 7712, column: 22, scope: !8534)
!8602 = !DILocation(line: 7713, column: 7, scope: !8545)
!8603 = !DILocation(line: 0, scope: !8545)
!8604 = !DILocation(line: 7713, column: 16, scope: !8544)
!8605 = !DILocation(line: 7713, column: 2, scope: !8545)
!8606 = !DILocation(line: 7724, column: 2, scope: !8549)
!8607 = !DILocation(line: 7715, column: 44, scope: !8543)
!8608 = !DILocation(line: 7715, column: 16, scope: !8543)
!8609 = !DILocation(line: 0, scope: !8543)
!8610 = !DILocation(line: 7716, column: 19, scope: !8543)
!8611 = !DILocation(line: 7716, column: 17, scope: !8543)
!8612 = !DILocation(line: 7717, column: 24, scope: !8543)
!8613 = !DILocation(line: 7717, column: 6, scope: !8543)
!8614 = !DILocation(line: 7717, column: 22, scope: !8543)
!8615 = !DILocation(line: 7718, column: 6, scope: !8543)
!8616 = !DILocation(line: 7720, column: 22, scope: !8543)
!8617 = !DILocation(line: 7721, column: 7, scope: !8543)
!8618 = !DILocation(line: 7720, column: 6, scope: !8543)
!8619 = !DILocation(line: 7713, column: 29, scope: !8544)
!8620 = !DILocation(line: 7713, column: 2, scope: !8544)
!8621 = distinct !{!8621, !8605, !8622}
!8622 = !DILocation(line: 7723, column: 4, scope: !8545)
!8623 = !DILocation(line: 0, scope: !8549)
!8624 = !DILocation(line: 7724, column: 18, scope: !8548)
!8625 = !DILocation(line: 7724, column: 16, scope: !8548)
!8626 = !DILocation(line: 7726, column: 43, scope: !8547)
!8627 = !DILocation(line: 7726, column: 16, scope: !8547)
!8628 = !DILocation(line: 0, scope: !8547)
!8629 = !DILocation(line: 7727, column: 19, scope: !8547)
!8630 = !DILocation(line: 7727, column: 17, scope: !8547)
!8631 = !DILocation(line: 7728, column: 6, scope: !8547)
!8632 = !DILocation(line: 7730, column: 10, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 7730, column: 10)
!8634 = !DILocation(line: 7730, column: 57, scope: !8633)
!8635 = !DILocation(line: 7730, column: 60, scope: !8633)
!8636 = !DILocation(line: 7730, column: 10, scope: !8547)
!8637 = !DILocation(line: 7731, column: 19, scope: !8633)
!8638 = !DILocation(line: 7731, column: 8, scope: !8633)
!8639 = !DILocation(line: 7732, column: 11, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 7732, column: 10)
!8641 = !DILocation(line: 7732, column: 22, scope: !8640)
!8642 = !DILocation(line: 7732, column: 25, scope: !8640)
!8643 = !DILocation(line: 7732, column: 10, scope: !8547)
!8644 = !DILocation(line: 7733, column: 8, scope: !8640)
!8645 = !DILocation(line: 7736, column: 8, scope: !8640)
!8646 = !DILocation(line: 7724, column: 46, scope: !8548)
!8647 = !DILocation(line: 7724, column: 2, scope: !8548)
!8648 = distinct !{!8648, !8606, !8649}
!8649 = !DILocation(line: 7738, column: 4, scope: !8549)
!8650 = !DILocation(line: 7739, column: 7, scope: !8535)
!8651 = !DILocation(line: 7740, column: 7, scope: !8535)
!8652 = !DILocation(line: 7746, column: 17, scope: !8535)
!8653 = !DILocation(line: 7747, column: 18, scope: !8535)
!8654 = !DILocation(line: 0, scope: !8551)
!8655 = !DILocation(line: 0, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 7755, column: 13)
!8657 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 7753, column: 8)
!8658 = !DILocation(line: 0, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 7765, column: 12)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 7764, column: 6)
!8661 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 7763, column: 13)
!8662 = !DILocation(line: 7748, column: 12, scope: !8553)
!8663 = !DILocation(line: 0, scope: !8553)
!8664 = !DILocation(line: 7748, column: 27, scope: !8552)
!8665 = !DILocation(line: 7748, column: 7, scope: !8553)
!8666 = !DILocation(line: 7750, column: 4, scope: !8551)
!8667 = !DILocation(line: 7750, column: 31, scope: !8551)
!8668 = !DILocation(line: 7750, column: 14, scope: !8551)
!8669 = !DILocation(line: 7750, column: 9, scope: !8551)
!8670 = !DILocation(line: 7751, column: 11, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 7751, column: 8)
!8672 = !DILocation(line: 7751, column: 8, scope: !8551)
!8673 = !DILocation(line: 7753, column: 15, scope: !8657)
!8674 = !DILocation(line: 7753, column: 19, scope: !8657)
!8675 = !DILocation(line: 7753, column: 41, scope: !8657)
!8676 = !DILocation(line: 7753, column: 44, scope: !8657)
!8677 = !DILocation(line: 7753, column: 8, scope: !8551)
!8678 = !DILocation(line: 7754, column: 6, scope: !8657)
!8679 = !DILocation(line: 7756, column: 6, scope: !8656)
!8680 = !DILocation(line: 7756, column: 9, scope: !8656)
!8681 = !DILocation(line: 7757, column: 6, scope: !8656)
!8682 = !DILocation(line: 7758, column: 31, scope: !8656)
!8683 = !DILocation(line: 7758, column: 9, scope: !8656)
!8684 = !DILocation(line: 7759, column: 9, scope: !8656)
!8685 = !DILocation(line: 7755, column: 13, scope: !8657)
!8686 = !DILocation(line: 7763, column: 15, scope: !8661)
!8687 = !DILocation(line: 7763, column: 20, scope: !8661)
!8688 = !DILocation(line: 7763, column: 23, scope: !8661)
!8689 = !DILocation(line: 7763, column: 13, scope: !8656)
!8690 = !DILocation(line: 7765, column: 12, scope: !8659)
!8691 = !DILocation(line: 7765, column: 27, scope: !8659)
!8692 = !DILocation(line: 7765, column: 12, scope: !8660)
!8693 = !DILocation(line: 7767, column: 8, scope: !8660)
!8694 = !DILocation(line: 7768, column: 6, scope: !8660)
!8695 = !DILocation(line: 7761, column: 26, scope: !8656)
!8696 = !DILocation(line: 7761, column: 7, scope: !8656)
!8697 = !DILocation(line: 7760, column: 6, scope: !8656)
!8698 = !DILocation(line: 7770, column: 6, scope: !8661)
!8699 = !DILocation(line: 7771, column: 32, scope: !8551)
!8700 = !DILocation(line: 7771, column: 4, scope: !8551)
!8701 = !DILocation(line: 7772, column: 2, scope: !8552)
!8702 = !DILocation(line: 7748, column: 33, scope: !8552)
!8703 = !DILocation(line: 7748, column: 7, scope: !8552)
!8704 = distinct !{!8704, !8665, !8705}
!8705 = !DILocation(line: 7772, column: 2, scope: !8553)
!8706 = !DILocation(line: 7774, column: 13, scope: !8535)
!8707 = !DILocation(line: 7777, column: 11, scope: !8556)
!8708 = !DILocation(line: 7777, column: 15, scope: !8556)
!8709 = !DILocation(line: 7777, column: 19, scope: !8556)
!8710 = !DILocation(line: 7777, column: 11, scope: !8535)
!8711 = !DILocation(line: 0, scope: !8555)
!8712 = !DILocation(line: 7781, column: 8, scope: !8565)
!8713 = !DILocation(line: 7782, column: 8, scope: !8565)
!8714 = !DILocation(line: 7783, column: 33, scope: !8565)
!8715 = !DILocation(line: 7783, column: 11, scope: !8565)
!8716 = !DILocation(line: 7784, column: 4, scope: !8565)
!8717 = !DILocation(line: 7781, column: 8, scope: !8555)
!8718 = !DILocation(line: 7785, column: 21, scope: !8565)
!8719 = !DILocation(line: 7786, column: 26, scope: !8565)
!8720 = !DILocation(line: 7786, column: 7, scope: !8565)
!8721 = !DILocation(line: 7785, column: 6, scope: !8565)
!8722 = !DILocation(line: 7788, column: 13, scope: !8564)
!8723 = !DILocation(line: 0, scope: !8564)
!8724 = !DILocation(line: 7788, column: 13, scope: !8565)
!8725 = !DILocation(line: 7790, column: 12, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 7789, column: 6)
!8727 = !DILocation(line: 7792, column: 9, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 7792, column: 9)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 7791, column: 3)
!8730 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 7790, column: 12)
!8731 = !DILocation(line: 7792, column: 9, scope: !8729)
!8732 = !DILocation(line: 7794, column: 13, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 7793, column: 7)
!8734 = !DILocation(line: 7796, column: 13, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 7795, column: 13)
!8736 = !DILocation(line: 7796, column: 6, scope: !8735)
!8737 = !DILocation(line: 7799, column: 9, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 7799, column: 9)
!8739 = !DILocation(line: 7801, column: 3, scope: !8729)
!8740 = !DILocation(line: 7805, column: 12, scope: !8563)
!8741 = !DILocation(line: 7807, column: 17, scope: !8561)
!8742 = !DILocation(line: 7807, column: 45, scope: !8561)
!8743 = !DILocation(line: 7807, column: 17, scope: !8562)
!8744 = !DILocation(line: 7809, column: 9, scope: !8559)
!8745 = !DILocation(line: 7809, column: 9, scope: !8560)
!8746 = !DILocation(line: 7811, column: 23, scope: !8558)
!8747 = !DILocation(line: 0, scope: !8558)
!8748 = !DILocation(line: 7813, column: 33, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 7813, column: 13)
!8750 = !DILocation(line: 7813, column: 14, scope: !8749)
!8751 = !DILocation(line: 7814, column: 6, scope: !8749)
!8752 = !DILocation(line: 7814, column: 11, scope: !8749)
!8753 = !DILocation(line: 7814, column: 18, scope: !8749)
!8754 = !DILocation(line: 7814, column: 21, scope: !8749)
!8755 = !DILocation(line: 7815, column: 11, scope: !8749)
!8756 = !DILocation(line: 7815, column: 14, scope: !8749)
!8757 = !DILocation(line: 7813, column: 13, scope: !8558)
!8758 = !DILocation(line: 7816, column: 4, scope: !8749)
!8759 = !DILocation(line: 7822, column: 8, scope: !8555)
!8760 = !DILocation(line: 7824, column: 36, scope: !8567)
!8761 = !DILocation(line: 7824, column: 20, scope: !8567)
!8762 = !DILocation(line: 0, scope: !8567)
!8763 = !DILocation(line: 7826, column: 12, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 7826, column: 12)
!8765 = !DILocation(line: 7826, column: 40, scope: !8764)
!8766 = !DILocation(line: 7827, column: 5, scope: !8764)
!8767 = !DILocation(line: 7827, column: 36, scope: !8764)
!8768 = !DILocation(line: 7826, column: 12, scope: !8567)
!8769 = !DILocation(line: 7828, column: 3, scope: !8764)
!8770 = !DILocation(line: 7828, column: 28, scope: !8764)
!8771 = !DILocation(line: 7829, column: 12, scope: !8567)
!8772 = !DILocation(line: 7830, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 7829, column: 12)
!8774 = !DILocation(line: 7832, column: 29, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 7832, column: 12)
!8776 = !DILocation(line: 7832, column: 12, scope: !8775)
!8777 = !DILocation(line: 7832, column: 12, scope: !8567)
!8778 = !DILocation(line: 7833, column: 10, scope: !8775)
!8779 = !DILocation(line: 7833, column: 3, scope: !8775)
!8780 = !DILocation(line: 7834, column: 8, scope: !8567)
!8781 = !DILocation(line: 7835, column: 20, scope: !8567)
!8782 = !DILocation(line: 7836, column: 12, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 7836, column: 12)
!8784 = !DILocation(line: 7836, column: 28, scope: !8783)
!8785 = !DILocation(line: 7836, column: 12, scope: !8567)
!8786 = !DILocation(line: 7837, column: 3, scope: !8783)
!8787 = !DILocation(line: 7837, column: 27, scope: !8783)
!8788 = !DILocation(line: 7683, column: 10, scope: !8519)
!8789 = !DILocation(line: 7843, column: 31, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 7843, column: 7)
!8791 = !DILocation(line: 7843, column: 7, scope: !8790)
!8792 = !DILocation(line: 7843, column: 7, scope: !8519)
!8793 = !DILocation(line: 7844, column: 14, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 7844, column: 5)
!8795 = !DILocation(line: 7844, column: 29, scope: !8794)
!8796 = !DILocation(line: 7844, column: 10, scope: !8794)
!8797 = !DILocation(line: 0, scope: !8794)
!8798 = !DILocation(line: 7844, column: 5, scope: !8794)
!8799 = !DILocation(line: 7845, column: 7, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 7844, column: 5)
!8801 = !DILocation(line: 7844, column: 44, scope: !8800)
!8802 = !DILocation(line: 7844, column: 5, scope: !8800)
!8803 = distinct !{!8803, !8798, !8804}
!8804 = !DILocation(line: 7845, column: 28, scope: !8794)
!8805 = !DILocation(line: 7847, column: 28, scope: !8573)
!8806 = !DILocation(line: 7847, column: 8, scope: !8573)
!8807 = !DILocation(line: 7847, column: 7, scope: !8519)
!8808 = !DILocation(line: 7849, column: 28, scope: !8571)
!8809 = !DILocation(line: 7849, column: 11, scope: !8571)
!8810 = !DILocation(line: 7849, column: 11, scope: !8572)
!8811 = !DILocation(line: 7851, column: 4, scope: !8570)
!8812 = !DILocation(line: 7853, column: 13, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 7853, column: 4)
!8814 = !DILocation(line: 7853, column: 24, scope: !8813)
!8815 = !DILocation(line: 7853, column: 9, scope: !8813)
!8816 = !DILocation(line: 0, scope: !8570)
!8817 = !DILocation(line: 7853, column: 31, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 7853, column: 4)
!8819 = !DILocation(line: 7853, column: 30, scope: !8818)
!8820 = !DILocation(line: 7853, column: 4, scope: !8813)
!8821 = !DILocation(line: 7854, column: 33, scope: !8818)
!8822 = !DILocation(line: 7854, column: 6, scope: !8818)
!8823 = !DILocation(line: 7853, column: 46, scope: !8818)
!8824 = !DILocation(line: 7853, column: 4, scope: !8818)
!8825 = distinct !{!8825, !8820, !8826}
!8826 = !DILocation(line: 7854, column: 45, scope: !8813)
!8827 = !DILocation(line: 7855, column: 2, scope: !8571)
!8828 = !DILocation(line: 7855, column: 2, scope: !8570)
!8829 = !DILocation(line: 7856, column: 37, scope: !8572)
!8830 = !DILocation(line: 7856, column: 7, scope: !8572)
!8831 = !DILocation(line: 7857, column: 5, scope: !8572)
!8832 = !DILocation(line: 7858, column: 7, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 7858, column: 7)
!8834 = !DILocation(line: 7858, column: 7, scope: !8519)
!8835 = !DILocation(line: 7859, column: 5, scope: !8833)
!8836 = !DILocation(line: 7861, column: 3, scope: !8519)
!8837 = !DILocation(line: 7862, column: 1, scope: !8519)
!8838 = distinct !DISubprogram(name: "gimple_in_ssa_p", scope: !8839, file: !8839, line: 33, type: !8840, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8844)
!8839 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!727, !8842}
!8842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8843, size: 64)
!8843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "fun", arg: 1, scope: !8838, file: !8839, line: 33, type: !8842)
!8846 = !DILocation(line: 0, scope: !8838)
!8847 = !DILocation(line: 35, column: 10, scope: !8838)
!8848 = !DILocation(line: 35, column: 14, scope: !8838)
!8849 = !DILocation(line: 35, column: 22, scope: !8838)
!8850 = !DILocation(line: 35, column: 17, scope: !8838)
!8851 = !DILocation(line: 35, column: 32, scope: !8838)
!8852 = !DILocation(line: 35, column: 51, scope: !8838)
!8853 = !DILocation(line: 35, column: 3, scope: !8838)
!8854 = distinct !DISubprogram(name: "gimple_cond_lhs_ptr", scope: !391, file: !391, line: 2251, type: !8855, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8857)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!1093, !3169}
!8857 = !{!8858}
!8858 = !DILocalVariable(name: "gs", arg: 1, scope: !8854, file: !391, line: 2251, type: !3169)
!8859 = !DILocation(line: 0, scope: !8854)
!8860 = !DILocation(line: 2254, column: 10, scope: !8854)
!8861 = !DILocation(line: 2254, column: 3, scope: !8854)
!8862 = distinct !DISubprogram(name: "gimple_cond_rhs_ptr", scope: !391, file: !391, line: 2281, type: !8855, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8863)
!8863 = !{!8864}
!8864 = !DILocalVariable(name: "gs", arg: 1, scope: !8862, file: !391, line: 2281, type: !3169)
!8865 = !DILocation(line: 0, scope: !8862)
!8866 = !DILocation(line: 2284, column: 10, scope: !8862)
!8867 = !DILocation(line: 2284, column: 3, scope: !8862)
!8868 = distinct !DISubprogram(name: "gimple_switch_index_ptr", scope: !391, file: !391, line: 3190, type: !8855, scopeLine: 3191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8869)
!8869 = !{!8870}
!8870 = !DILocalVariable(name: "gs", arg: 1, scope: !8868, file: !391, line: 3190, type: !3169)
!8871 = !DILocation(line: 0, scope: !8868)
!8872 = !DILocation(line: 3193, column: 10, scope: !8868)
!8873 = !DILocation(line: 3193, column: 3, scope: !8868)
!8874 = distinct !DISubprogram(name: "gimple_omp_atomic_load_rhs_ptr", scope: !391, file: !391, line: 4176, type: !8875, scopeLine: 4177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!1093, !1058}
!8877 = !{!8878}
!8878 = !DILocalVariable(name: "g", arg: 1, scope: !8874, file: !391, line: 4176, type: !1058)
!8879 = !DILocation(line: 0, scope: !8874)
!8880 = !DILocation(line: 4179, column: 37, scope: !8874)
!8881 = !DILocation(line: 4179, column: 3, scope: !8874)
!8882 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !391, file: !391, line: 2591, type: !8883, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8885)
!8883 = !DISubroutineType(types: !8884)
!8884 = !{!7, !3169}
!8885 = !{!8886}
!8886 = !DILocalVariable(name: "gs", arg: 1, scope: !8882, file: !391, line: 2591, type: !3169)
!8887 = !DILocation(line: 0, scope: !8882)
!8888 = !DILocation(line: 2594, column: 14, scope: !8882)
!8889 = !DILocation(line: 2594, column: 25, scope: !8882)
!8890 = !DILocation(line: 2594, column: 10, scope: !8882)
!8891 = !DILocation(line: 2594, column: 3, scope: !8882)
!8892 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !391, file: !391, line: 2652, type: !8893, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8895)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!734, !3169, !7}
!8895 = !{!8896, !8897}
!8896 = !DILocalVariable(name: "gs", arg: 1, scope: !8892, file: !391, line: 2652, type: !3169)
!8897 = !DILocalVariable(name: "index", arg: 2, scope: !8892, file: !391, line: 2652, type: !7)
!8898 = !DILocation(line: 0, scope: !8892)
!8899 = !DILocation(line: 2655, column: 3, scope: !8892)
!8900 = !DILocation(line: 2656, column: 48, scope: !8892)
!8901 = !DILocation(line: 2656, column: 33, scope: !8892)
!8902 = !DILocation(line: 2656, column: 31, scope: !8892)
!8903 = !DILocation(line: 2656, column: 10, scope: !8892)
!8904 = !DILocation(line: 2656, column: 3, scope: !8892)
!8905 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !391, file: !391, line: 2581, type: !8883, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8906)
!8906 = !{!8907}
!8907 = !DILocalVariable(name: "gs", arg: 1, scope: !8905, file: !391, line: 2581, type: !3169)
!8908 = !DILocation(line: 0, scope: !8905)
!8909 = !DILocation(line: 2584, column: 25, scope: !8905)
!8910 = !DILocation(line: 2584, column: 10, scope: !8905)
!8911 = !DILocation(line: 2584, column: 3, scope: !8905)
!8912 = distinct !DISubprogram(name: "gimple_asm_input_op", scope: !391, file: !391, line: 2619, type: !8893, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8913)
!8913 = !{!8914, !8915}
!8914 = !DILocalVariable(name: "gs", arg: 1, scope: !8912, file: !391, line: 2619, type: !3169)
!8915 = !DILocalVariable(name: "index", arg: 2, scope: !8912, file: !391, line: 2619, type: !7)
!8916 = !DILocation(line: 0, scope: !8912)
!8917 = !DILocation(line: 2622, column: 3, scope: !8912)
!8918 = !DILocation(line: 2623, column: 10, scope: !8912)
!8919 = !DILocation(line: 2623, column: 3, scope: !8912)
!8920 = distinct !DISubprogram(name: "gimple_num_ops", scope: !391, file: !391, line: 1596, type: !8883, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8921)
!8921 = !{!8922}
!8922 = !DILocalVariable(name: "gs", arg: 1, scope: !8920, file: !391, line: 1596, type: !3169)
!8923 = !DILocation(line: 0, scope: !8920)
!8924 = !DILocation(line: 1598, column: 21, scope: !8920)
!8925 = !DILocation(line: 1598, column: 3, scope: !8920)
!8926 = distinct !DISubprogram(name: "gimple_op", scope: !391, file: !391, line: 1631, type: !8893, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8927)
!8927 = !{!8928, !8929}
!8928 = !DILocalVariable(name: "gs", arg: 1, scope: !8926, file: !391, line: 1631, type: !3169)
!8929 = !DILocalVariable(name: "i", arg: 2, scope: !8926, file: !391, line: 1631, type: !7)
!8930 = !DILocation(line: 0, scope: !8926)
!8931 = !DILocation(line: 1633, column: 7, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8926, file: !391, line: 1633, column: 7)
!8933 = !DILocation(line: 1633, column: 7, scope: !8926)
!8934 = !DILocation(line: 1638, column: 14, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8932, file: !391, line: 1634, column: 5)
!8936 = !DILocation(line: 1638, column: 7, scope: !8935)
!8937 = !DILocation(line: 0, scope: !8932)
!8938 = !DILocation(line: 1642, column: 1, scope: !8926)
!8939 = distinct !DISubprogram(name: "is_gimple_call", scope: !391, file: !391, line: 1870, type: !8940, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8942)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!727, !3169}
!8942 = !{!8943}
!8943 = !DILocalVariable(name: "gs", arg: 1, scope: !8939, file: !391, line: 1870, type: !3169)
!8944 = !DILocation(line: 0, scope: !8939)
!8945 = !DILocation(line: 1872, column: 10, scope: !8939)
!8946 = !DILocation(line: 1872, column: 27, scope: !8939)
!8947 = !DILocation(line: 1872, column: 3, scope: !8939)
!8948 = distinct !DISubprogram(name: "is_gimple_assign", scope: !391, file: !391, line: 1677, type: !8940, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8949)
!8949 = !{!8950}
!8950 = !DILocalVariable(name: "gs", arg: 1, scope: !8948, file: !391, line: 1677, type: !3169)
!8951 = !DILocation(line: 0, scope: !8948)
!8952 = !DILocation(line: 1679, column: 10, scope: !8948)
!8953 = !DILocation(line: 1679, column: 27, scope: !8948)
!8954 = !DILocation(line: 1679, column: 3, scope: !8948)
!8955 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !391, file: !391, line: 1686, type: !8956, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8958)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{!719, !134}
!8958 = !{!8959}
!8959 = !DILocalVariable(name: "code", arg: 1, scope: !8955, file: !391, line: 1686, type: !134)
!8960 = !DILocation(line: 0, scope: !8955)
!8961 = !DILocation(line: 1688, column: 34, scope: !8955)
!8962 = !DILocation(line: 1688, column: 10, scope: !8955)
!8963 = !DILocation(line: 1688, column: 3, scope: !8955)
!8964 = distinct !DISubprogram(name: "gimple_expr_code", scope: !391, file: !391, line: 1438, type: !8965, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8967)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!134, !3169}
!8967 = !{!8968, !8969}
!8968 = !DILocalVariable(name: "stmt", arg: 1, scope: !8964, file: !391, line: 1438, type: !3169)
!8969 = !DILocalVariable(name: "code", scope: !8964, file: !391, line: 1440, type: !439)
!8970 = !DILocation(line: 0, scope: !8964)
!8971 = !DILocation(line: 1440, column: 27, scope: !8964)
!8972 = !DILocation(line: 1441, column: 29, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8964, file: !391, line: 1441, column: 7)
!8974 = !DILocation(line: 1442, column: 42, scope: !8973)
!8975 = !DILocation(line: 1442, column: 5, scope: !8973)
!8976 = !DILocation(line: 1446, column: 5, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !391, line: 1443, column: 12)
!8978 = !DILocation(line: 1448, column: 5, scope: !8964)
!8979 = !DILocation(line: 1450, column: 1, scope: !8964)
!8980 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !391, file: !391, line: 1694, type: !3176, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8981)
!8981 = !{!8982}
!8982 = !DILocalVariable(name: "gs", arg: 1, scope: !8980, file: !391, line: 1694, type: !3169)
!8983 = !DILocation(line: 0, scope: !8980)
!8984 = !DILocation(line: 1697, column: 10, scope: !8980)
!8985 = !DILocation(line: 1697, column: 3, scope: !8980)
!8986 = distinct !DISubprogram(name: "gimple_set_op", scope: !391, file: !391, line: 1663, type: !8987, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8989)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{null, !1058, !7, !734}
!8989 = !{!8990, !8991, !8992}
!8990 = !DILocalVariable(name: "gs", arg: 1, scope: !8986, file: !391, line: 1663, type: !1058)
!8991 = !DILocalVariable(name: "i", arg: 2, scope: !8986, file: !391, line: 1663, type: !7)
!8992 = !DILocalVariable(name: "op", arg: 3, scope: !8986, file: !391, line: 1663, type: !734)
!8993 = !DILocation(line: 0, scope: !8986)
!8994 = !DILocation(line: 1665, column: 3, scope: !8986)
!8995 = !DILocation(line: 1671, column: 3, scope: !8986)
!8996 = !DILocation(line: 1671, column: 22, scope: !8986)
!8997 = !DILocation(line: 1672, column: 1, scope: !8986)
!8998 = distinct !DISubprogram(name: "gimple_assign_rhs1_ptr", scope: !391, file: !391, line: 1738, type: !8855, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8999)
!8999 = !{!9000}
!9000 = !DILocalVariable(name: "gs", arg: 1, scope: !8998, file: !391, line: 1738, type: !3169)
!9001 = !DILocation(line: 0, scope: !8998)
!9002 = !DILocation(line: 1741, column: 10, scope: !8998)
!9003 = !DILocation(line: 1741, column: 3, scope: !8998)
!9004 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !391, file: !391, line: 1954, type: !3176, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9005)
!9005 = !{!9006, !9007}
!9006 = !DILocalVariable(name: "gs", arg: 1, scope: !9004, file: !391, line: 1954, type: !3169)
!9007 = !DILocalVariable(name: "addr", scope: !9004, file: !391, line: 1956, type: !734)
!9008 = !DILocation(line: 0, scope: !9004)
!9009 = !DILocation(line: 1956, column: 15, scope: !9004)
!9010 = !DILocation(line: 1957, column: 7, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9004, file: !391, line: 1957, column: 7)
!9012 = !DILocation(line: 1957, column: 24, scope: !9011)
!9013 = !DILocation(line: 1957, column: 7, scope: !9004)
!9014 = !DILocation(line: 1958, column: 12, scope: !9011)
!9015 = !DILocation(line: 1958, column: 5, scope: !9011)
!9016 = !DILocation(line: 1960, column: 1, scope: !9004)
!9017 = distinct !DISubprogram(name: "make_ssa_name", scope: !8839, file: !8839, line: 1245, type: !9018, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9020)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{!734, !734, !1058}
!9020 = !{!9021, !9022}
!9021 = !DILocalVariable(name: "var", arg: 1, scope: !9017, file: !8839, line: 1245, type: !734)
!9022 = !DILocalVariable(name: "stmt", arg: 2, scope: !9017, file: !8839, line: 1245, type: !1058)
!9023 = !DILocation(line: 0, scope: !9017)
!9024 = !DILocation(line: 1247, column: 28, scope: !9017)
!9025 = !DILocation(line: 1247, column: 10, scope: !9017)
!9026 = !DILocation(line: 1247, column: 3, scope: !9017)
!9027 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !8839, file: !8839, line: 40, type: !9028, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9030)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{!1565, !8842}
!9030 = !{!9031}
!9031 = !DILocalVariable(name: "fun", arg: 1, scope: !9027, file: !8839, line: 40, type: !8842)
!9032 = !DILocation(line: 0, scope: !9027)
!9033 = !DILocation(line: 42, column: 13, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9027, file: !8839, line: 42, column: 7)
!9035 = !DILocation(line: 42, column: 8, scope: !9034)
!9036 = !DILocation(line: 42, column: 7, scope: !9027)
!9037 = !DILocation(line: 44, column: 26, scope: !9027)
!9038 = !DILocation(line: 44, column: 3, scope: !9027)
!9039 = !DILocation(line: 45, column: 1, scope: !9027)
!9040 = distinct !DISubprogram(name: "force_gimple_operand", scope: !3, file: !3, line: 7871, type: !9041, scopeLine: 7872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9043)
!9041 = !DISubroutineType(types: !9042)
!9042 = !{!734, !734, !2939, !727, !734}
!9043 = !{!9044, !9045, !9046, !9047, !9048, !9049, !9050, !9051}
!9044 = !DILocalVariable(name: "expr", arg: 1, scope: !9040, file: !3, line: 7871, type: !734)
!9045 = !DILocalVariable(name: "stmts", arg: 2, scope: !9040, file: !3, line: 7871, type: !2939)
!9046 = !DILocalVariable(name: "simple", arg: 3, scope: !9040, file: !3, line: 7871, type: !727)
!9047 = !DILocalVariable(name: "var", arg: 4, scope: !9040, file: !3, line: 7871, type: !734)
!9048 = !DILocalVariable(name: "t", scope: !9040, file: !3, line: 7873, type: !734)
!9049 = !DILocalVariable(name: "ret", scope: !9040, file: !3, line: 7874, type: !390)
!9050 = !DILocalVariable(name: "gimple_test_f", scope: !9040, file: !3, line: 7875, type: !3784)
!9051 = !DILocalVariable(name: "gctx", scope: !9040, file: !3, line: 7876, type: !2266)
!9052 = !DILocation(line: 0, scope: !9040)
!9053 = !DILocation(line: 7876, column: 3, scope: !9040)
!9054 = !DILocation(line: 7878, column: 10, scope: !9040)
!9055 = !DILocation(line: 7880, column: 7, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 7880, column: 7)
!9057 = !DILocation(line: 7880, column: 7, scope: !9040)
!9058 = !DILocation(line: 7881, column: 5, scope: !9056)
!9059 = !DILocation(line: 7883, column: 19, scope: !9040)
!9060 = !DILocation(line: 7885, column: 3, scope: !9040)
!9061 = !DILocation(line: 7886, column: 46, scope: !9040)
!9062 = !DILocation(line: 7886, column: 29, scope: !9040)
!9063 = !DILocation(line: 7886, column: 3, scope: !9040)
!9064 = !DILocation(line: 7886, column: 18, scope: !9040)
!9065 = !DILocation(line: 7886, column: 27, scope: !9040)
!9066 = !DILocation(line: 7887, column: 18, scope: !9040)
!9067 = !DILocation(line: 7887, column: 38, scope: !9040)
!9068 = !DILocation(line: 7889, column: 7, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 7889, column: 7)
!9070 = !DILocation(line: 7889, column: 7, scope: !9040)
!9071 = !DILocation(line: 7890, column: 12, scope: !9069)
!9072 = !DILocation(line: 7890, column: 10, scope: !9069)
!9073 = !DILocation(line: 7890, column: 5, scope: !9069)
!9074 = !DILocation(line: 7892, column: 7, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 7892, column: 7)
!9076 = !DILocation(line: 7892, column: 24, scope: !9075)
!9077 = !DILocation(line: 7893, column: 7, scope: !9075)
!9078 = !DILocation(line: 7893, column: 10, scope: !9075)
!9079 = !DILocation(line: 7893, column: 30, scope: !9075)
!9080 = !DILocation(line: 7893, column: 27, scope: !9075)
!9081 = !DILocation(line: 7892, column: 7, scope: !9040)
!9082 = !DILocation(line: 7895, column: 7, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 7894, column: 5)
!9084 = !DILocation(line: 7896, column: 12, scope: !9083)
!9085 = !DILocation(line: 7897, column: 5, scope: !9083)
!9086 = !DILocation(line: 7900, column: 13, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 7899, column: 5)
!9088 = !DILocation(line: 7901, column: 7, scope: !9087)
!9089 = !DILocation(line: 7904, column: 31, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 7904, column: 7)
!9091 = !DILocation(line: 7904, column: 7, scope: !9090)
!9092 = !DILocation(line: 7904, column: 7, scope: !9040)
!9093 = !DILocation(line: 7905, column: 14, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 7905, column: 5)
!9095 = !DILocation(line: 7905, column: 29, scope: !9094)
!9096 = !DILocation(line: 7905, column: 10, scope: !9094)
!9097 = !DILocation(line: 0, scope: !9094)
!9098 = !DILocation(line: 7905, column: 5, scope: !9094)
!9099 = !DILocation(line: 7906, column: 7, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 7905, column: 5)
!9101 = !DILocation(line: 7905, column: 44, scope: !9100)
!9102 = !DILocation(line: 7905, column: 5, scope: !9100)
!9103 = distinct !{!9103, !9098, !9104}
!9104 = !DILocation(line: 7906, column: 28, scope: !9094)
!9105 = !DILocation(line: 7908, column: 3, scope: !9040)
!9106 = !DILocation(line: 7910, column: 3, scope: !9040)
!9107 = !DILocation(line: 7911, column: 1, scope: !9040)
!9108 = distinct !DISubprogram(name: "force_gimple_operand_gsi", scope: !3, file: !3, line: 7920, type: !9109, scopeLine: 7923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9111)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{!734, !3435, !734, !727, !734, !727, !434}
!9111 = !{!9112, !9113, !9114, !9115, !9116, !9117, !9118, !9119}
!9112 = !DILocalVariable(name: "gsi", arg: 1, scope: !9108, file: !3, line: 7920, type: !3435)
!9113 = !DILocalVariable(name: "expr", arg: 2, scope: !9108, file: !3, line: 7920, type: !734)
!9114 = !DILocalVariable(name: "simple_p", arg: 3, scope: !9108, file: !3, line: 7921, type: !727)
!9115 = !DILocalVariable(name: "var", arg: 4, scope: !9108, file: !3, line: 7921, type: !734)
!9116 = !DILocalVariable(name: "before", arg: 5, scope: !9108, file: !3, line: 7921, type: !727)
!9117 = !DILocalVariable(name: "m", arg: 6, scope: !9108, file: !3, line: 7922, type: !434)
!9118 = !DILocalVariable(name: "stmts", scope: !9108, file: !3, line: 7924, type: !1048)
!9119 = !DILocalVariable(name: "i", scope: !9120, file: !3, line: 7932, type: !3336)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 7931, column: 2)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 7930, column: 11)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 7929, column: 5)
!9123 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 7928, column: 7)
!9124 = !DILocation(line: 0, scope: !9108)
!9125 = !DILocation(line: 7924, column: 3, scope: !9108)
!9126 = !DILocation(line: 7926, column: 10, scope: !9108)
!9127 = !DILocation(line: 7928, column: 28, scope: !9123)
!9128 = !DILocation(line: 7928, column: 8, scope: !9123)
!9129 = !DILocation(line: 7928, column: 7, scope: !9108)
!9130 = !DILocation(line: 7930, column: 28, scope: !9121)
!9131 = !DILocation(line: 7930, column: 11, scope: !9121)
!9132 = !DILocation(line: 7930, column: 11, scope: !9122)
!9133 = !DILocation(line: 7932, column: 4, scope: !9120)
!9134 = !DILocation(line: 7934, column: 13, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 7934, column: 4)
!9136 = !DILocation(line: 7934, column: 24, scope: !9135)
!9137 = !DILocation(line: 7934, column: 9, scope: !9135)
!9138 = !DILocation(line: 0, scope: !9120)
!9139 = !DILocation(line: 7934, column: 33, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 7934, column: 4)
!9141 = !DILocation(line: 7934, column: 32, scope: !9140)
!9142 = !DILocation(line: 7934, column: 4, scope: !9135)
!9143 = !DILocation(line: 7935, column: 33, scope: !9140)
!9144 = !DILocation(line: 7935, column: 6, scope: !9140)
!9145 = !DILocation(line: 7934, column: 48, scope: !9140)
!9146 = !DILocation(line: 7934, column: 4, scope: !9140)
!9147 = distinct !{!9147, !9142, !9148}
!9148 = !DILocation(line: 7935, column: 45, scope: !9135)
!9149 = !DILocation(line: 7936, column: 2, scope: !9121)
!9150 = !DILocation(line: 7936, column: 2, scope: !9120)
!9151 = !DILocation(line: 7938, column: 11, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 7938, column: 11)
!9153 = !DILocation(line: 0, scope: !9152)
!9154 = !DILocation(line: 7938, column: 11, scope: !9122)
!9155 = !DILocation(line: 7939, column: 2, scope: !9152)
!9156 = !DILocation(line: 7941, column: 2, scope: !9152)
!9157 = !DILocation(line: 7945, column: 1, scope: !9108)
!9158 = !DILocation(line: 7944, column: 3, scope: !9108)
!9159 = distinct !DISubprogram(name: "lookup_tmp_var", scope: !3, file: !3, line: 524, type: !9160, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9162)
!9160 = !DISubroutineType(types: !9161)
!9161 = !{!734, !734, !727}
!9162 = !{!9163, !9164, !9165, !9166, !9169, !9170}
!9163 = !DILocalVariable(name: "val", arg: 1, scope: !9159, file: !3, line: 524, type: !734)
!9164 = !DILocalVariable(name: "is_formal", arg: 2, scope: !9159, file: !3, line: 524, type: !727)
!9165 = !DILocalVariable(name: "ret", scope: !9159, file: !3, line: 526, type: !734)
!9166 = !DILocalVariable(name: "elt", scope: !9167, file: !3, line: 537, type: !2166)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 536, column: 5)
!9168 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 533, column: 7)
!9169 = !DILocalVariable(name: "elt_p", scope: !9167, file: !3, line: 537, type: !2165)
!9170 = !DILocalVariable(name: "slot", scope: !9167, file: !3, line: 538, type: !1587)
!9171 = !DILocation(line: 0, scope: !9159)
!9172 = !DILocation(line: 533, column: 8, scope: !9168)
!9173 = !DILocation(line: 533, column: 21, scope: !9168)
!9174 = !DILocation(line: 533, column: 17, scope: !9168)
!9175 = !DILocation(line: 533, column: 34, scope: !9168)
!9176 = !DILocation(line: 533, column: 7, scope: !9159)
!9177 = !DILocation(line: 534, column: 11, scope: !9168)
!9178 = !DILocation(line: 534, column: 5, scope: !9168)
!9179 = !DILocation(line: 537, column: 7, scope: !9167)
!9180 = !DILocation(line: 540, column: 11, scope: !9167)
!9181 = !DILocation(line: 540, column: 15, scope: !9167)
!9182 = !DILocation(line: 541, column: 11, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 541, column: 11)
!9184 = !DILocation(line: 541, column: 26, scope: !9183)
!9185 = !DILocation(line: 541, column: 36, scope: !9183)
!9186 = !DILocation(line: 541, column: 11, scope: !9167)
!9187 = !DILocation(line: 543, column: 6, scope: !9183)
!9188 = !DILocation(line: 542, column: 9, scope: !9183)
!9189 = !DILocation(line: 542, column: 24, scope: !9183)
!9190 = !DILocation(line: 543, column: 4, scope: !9183)
!9191 = !DILocation(line: 544, column: 45, scope: !9167)
!9192 = !DILocation(line: 544, column: 14, scope: !9167)
!9193 = !DILocation(line: 0, scope: !9167)
!9194 = !DILocation(line: 545, column: 11, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 545, column: 11)
!9196 = !DILocation(line: 545, column: 17, scope: !9195)
!9197 = !DILocation(line: 545, column: 11, scope: !9167)
!9198 = !DILocation(line: 547, column: 12, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 546, column: 2)
!9200 = !DILocation(line: 548, column: 11, scope: !9199)
!9201 = !DILocation(line: 548, column: 15, scope: !9199)
!9202 = !DILocation(line: 549, column: 24, scope: !9199)
!9203 = !DILocation(line: 549, column: 11, scope: !9199)
!9204 = !DILocation(line: 549, column: 16, scope: !9199)
!9205 = !DILocation(line: 550, column: 10, scope: !9199)
!9206 = !DILocation(line: 551, column: 2, scope: !9199)
!9207 = !DILocation(line: 555, column: 24, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 553, column: 2)
!9209 = !DILocation(line: 0, scope: !9195)
!9210 = !DILocation(line: 557, column: 5, scope: !9168)
!9211 = !DILocation(line: 0, scope: !9168)
!9212 = !DILocation(line: 559, column: 3, scope: !9159)
!9213 = distinct !DISubprogram(name: "gimple_seq_last_stmt", scope: !391, file: !391, line: 187, type: !3316, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9214)
!9214 = !{!9215, !9216}
!9215 = !DILocalVariable(name: "s", arg: 1, scope: !9213, file: !391, line: 187, type: !3318)
!9216 = !DILocalVariable(name: "n", scope: !9213, file: !391, line: 189, type: !1053)
!9217 = !DILocation(line: 0, scope: !9213)
!9218 = !DILocation(line: 189, column: 23, scope: !9213)
!9219 = !DILocation(line: 190, column: 10, scope: !9213)
!9220 = !DILocation(line: 190, column: 19, scope: !9213)
!9221 = !DILocation(line: 190, column: 3, scope: !9213)
!9222 = distinct !DISubprogram(name: "create_tmp_from_val", scope: !3, file: !3, line: 515, type: !3444, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9223)
!9223 = !{!9224}
!9224 = !DILocalVariable(name: "val", arg: 1, scope: !9222, file: !3, line: 515, type: !734)
!9225 = !DILocation(line: 0, scope: !9222)
!9226 = !DILocation(line: 517, column: 26, scope: !9222)
!9227 = !DILocation(line: 517, column: 43, scope: !9222)
!9228 = !DILocation(line: 517, column: 10, scope: !9222)
!9229 = !DILocation(line: 517, column: 3, scope: !9222)
!9230 = distinct !DISubprogram(name: "gimple_tree_hash", scope: !3, file: !3, line: 126, type: !1573, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9231)
!9231 = !{!9232, !9233}
!9232 = !DILocalVariable(name: "p", arg: 1, scope: !9230, file: !3, line: 126, type: !1365)
!9233 = !DILocalVariable(name: "t", scope: !9230, file: !3, line: 128, type: !734)
!9234 = !DILocation(line: 0, scope: !9230)
!9235 = !DILocation(line: 128, column: 33, scope: !9230)
!9236 = !DILocation(line: 129, column: 10, scope: !9230)
!9237 = !DILocation(line: 129, column: 3, scope: !9230)
!9238 = distinct !DISubprogram(name: "gimple_tree_eq", scope: !3, file: !3, line: 135, type: !1579, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9239)
!9239 = !{!9240, !9241, !9242, !9243, !9244}
!9240 = !DILocalVariable(name: "p1", arg: 1, scope: !9238, file: !3, line: 135, type: !1365)
!9241 = !DILocalVariable(name: "p2", arg: 2, scope: !9238, file: !3, line: 135, type: !1365)
!9242 = !DILocalVariable(name: "t1", scope: !9238, file: !3, line: 137, type: !734)
!9243 = !DILocalVariable(name: "t2", scope: !9238, file: !3, line: 138, type: !734)
!9244 = !DILocalVariable(name: "code", scope: !9238, file: !3, line: 139, type: !134)
!9245 = !DILocation(line: 0, scope: !9238)
!9246 = !DILocation(line: 137, column: 35, scope: !9238)
!9247 = !DILocation(line: 138, column: 35, scope: !9238)
!9248 = !DILocation(line: 139, column: 25, scope: !9238)
!9249 = !DILocation(line: 141, column: 7, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 141, column: 7)
!9251 = !DILocation(line: 141, column: 22, scope: !9250)
!9252 = !DILocation(line: 142, column: 7, scope: !9250)
!9253 = !DILocation(line: 142, column: 10, scope: !9250)
!9254 = !DILocation(line: 142, column: 28, scope: !9250)
!9255 = !DILocation(line: 142, column: 25, scope: !9250)
!9256 = !DILocation(line: 141, column: 7, scope: !9238)
!9257 = !DILocation(line: 145, column: 8, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 145, column: 7)
!9259 = !DILocation(line: 145, column: 7, scope: !9238)
!9260 = !DILocation(line: 150, column: 3, scope: !9238)
!9261 = !DILocation(line: 153, column: 1, scope: !9238)
!9262 = distinct !DISubprogram(name: "gimple_bb", scope: !391, file: !391, line: 1112, type: !9263, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9265)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{!1022, !3169}
!9265 = !{!9266}
!9266 = !DILocalVariable(name: "g", arg: 1, scope: !9262, file: !391, line: 1112, type: !3169)
!9267 = !DILocation(line: 0, scope: !9262)
!9268 = !DILocation(line: 1114, column: 20, scope: !9262)
!9269 = !DILocation(line: 1114, column: 3, scope: !9262)
!9270 = distinct !DISubprogram(name: "gimple_has_location", scope: !391, file: !391, line: 1165, type: !8940, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9271)
!9271 = !{!9272}
!9272 = !DILocalVariable(name: "g", arg: 1, scope: !9270, file: !391, line: 1165, type: !3169)
!9273 = !DILocation(line: 0, scope: !9270)
!9274 = !DILocation(line: 1167, column: 10, scope: !9270)
!9275 = !DILocation(line: 1167, column: 30, scope: !9270)
!9276 = !DILocation(line: 1167, column: 3, scope: !9270)
!9277 = distinct !DISubprogram(name: "gimple_do_not_emit_location_p", scope: !3, file: !3, line: 785, type: !9278, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!727, !1058}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "g", arg: 1, scope: !9277, file: !3, line: 785, type: !1058)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 787, column: 10, scope: !9277)
!9284 = !DILocation(line: 787, column: 3, scope: !9277)
!9285 = distinct !DISubprogram(name: "should_carry_location_p", scope: !3, file: !3, line: 769, type: !9278, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9286)
!9286 = !{!9287}
!9287 = !DILocalVariable(name: "gs", arg: 1, scope: !9285, file: !3, line: 769, type: !1058)
!9288 = !DILocation(line: 0, scope: !9285)
!9289 = !DILocation(line: 774, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 774, column: 7)
!9291 = !DILocation(line: 774, column: 24, scope: !9290)
!9292 = !DILocation(line: 778, column: 1, scope: !9285)
!9293 = distinct !DISubprogram(name: "gimple_location", scope: !391, file: !391, line: 1139, type: !9294, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9296)
!9294 = !DISubroutineType(types: !9295)
!9295 = !{!859, !3169}
!9296 = !{!9297}
!9297 = !DILocalVariable(name: "g", arg: 1, scope: !9293, file: !391, line: 1139, type: !3169)
!9298 = !DILocation(line: 0, scope: !9293)
!9299 = !DILocation(line: 1141, column: 20, scope: !9293)
!9300 = !DILocation(line: 1141, column: 3, scope: !9293)
!9301 = distinct !DISubprogram(name: "gimple_plf", scope: !391, file: !391, line: 1247, type: !9302, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!7, !1058, !477}
!9304 = !{!9305, !9306}
!9305 = !DILocalVariable(name: "stmt", arg: 1, scope: !9301, file: !391, line: 1247, type: !1058)
!9306 = !DILocalVariable(name: "plf", arg: 2, scope: !9301, file: !391, line: 1247, type: !477)
!9307 = !DILocation(line: 0, scope: !9301)
!9308 = !DILocation(line: 1249, column: 23, scope: !9301)
!9309 = !DILocation(line: 1249, column: 27, scope: !9301)
!9310 = !DILocation(line: 1249, column: 3, scope: !9301)
!9311 = distinct !DISubprogram(name: "omp_firstprivatize_type_sizes", scope: !3, file: !3, line: 5307, type: !4721, scopeLine: 5308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9312)
!9312 = !{!9313, !9314, !9315}
!9313 = !DILocalVariable(name: "ctx", arg: 1, scope: !9311, file: !3, line: 5307, type: !2191)
!9314 = !DILocalVariable(name: "type", arg: 2, scope: !9311, file: !3, line: 5307, type: !734)
!9315 = !DILocalVariable(name: "field", scope: !9316, file: !3, line: 5336, type: !734)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 5335, column: 7)
!9317 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 5317, column: 5)
!9318 = !DILocation(line: 0, scope: !9311)
!9319 = !DILocation(line: 5309, column: 12, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 5309, column: 7)
!9321 = !DILocation(line: 5309, column: 31, scope: !9320)
!9322 = !DILocation(line: 5309, column: 28, scope: !9320)
!9323 = !DILocation(line: 5309, column: 20, scope: !9320)
!9324 = !DILocation(line: 5311, column: 10, scope: !9311)
!9325 = !DILocation(line: 5313, column: 32, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 5313, column: 7)
!9327 = !DILocation(line: 5313, column: 50, scope: !9326)
!9328 = !DILocation(line: 5313, column: 7, scope: !9326)
!9329 = !DILocation(line: 5313, column: 7, scope: !9311)
!9330 = !DILocation(line: 5316, column: 11, scope: !9311)
!9331 = !DILocation(line: 5316, column: 3, scope: !9311)
!9332 = !DILocation(line: 5323, column: 41, scope: !9317)
!9333 = !DILocation(line: 5323, column: 7, scope: !9317)
!9334 = !DILocation(line: 5324, column: 41, scope: !9317)
!9335 = !DILocation(line: 5324, column: 7, scope: !9317)
!9336 = !DILocation(line: 5325, column: 7, scope: !9317)
!9337 = !DILocation(line: 5328, column: 43, scope: !9317)
!9338 = !DILocation(line: 5328, column: 7, scope: !9317)
!9339 = !DILocation(line: 5329, column: 43, scope: !9317)
!9340 = !DILocation(line: 5329, column: 7, scope: !9317)
!9341 = !DILocation(line: 5330, column: 7, scope: !9317)
!9342 = !DILocation(line: 5337, column: 15, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 5337, column: 2)
!9344 = !DILocation(line: 5337, column: 7, scope: !9343)
!9345 = !DILocation(line: 0, scope: !9343)
!9346 = !DILocation(line: 0, scope: !9316)
!9347 = !DILocation(line: 5337, column: 2, scope: !9343)
!9348 = !DILocation(line: 5338, column: 8, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 5338, column: 8)
!9350 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 5337, column: 2)
!9351 = !DILocation(line: 5338, column: 26, scope: !9349)
!9352 = !DILocation(line: 5338, column: 8, scope: !9350)
!9353 = !DILocation(line: 5340, column: 42, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 5339, column: 6)
!9355 = !DILocation(line: 5340, column: 8, scope: !9354)
!9356 = !DILocation(line: 5341, column: 44, scope: !9354)
!9357 = !DILocation(line: 5341, column: 8, scope: !9354)
!9358 = !DILocation(line: 5342, column: 6, scope: !9354)
!9359 = !DILocation(line: 5337, column: 50, scope: !9350)
!9360 = !DILocation(line: 5337, column: 2, scope: !9350)
!9361 = distinct !{!9361, !9347, !9362}
!9362 = !DILocation(line: 5342, column: 6, scope: !9343)
!9363 = !DILocation(line: 5348, column: 43, scope: !9317)
!9364 = !DILocation(line: 5348, column: 7, scope: !9317)
!9365 = !DILocation(line: 5349, column: 7, scope: !9317)
!9366 = !DILocation(line: 5355, column: 37, scope: !9311)
!9367 = !DILocation(line: 5355, column: 3, scope: !9311)
!9368 = !DILocation(line: 5356, column: 37, scope: !9311)
!9369 = !DILocation(line: 5356, column: 3, scope: !9311)
!9370 = !DILocation(line: 5357, column: 20, scope: !9311)
!9371 = !DILocation(line: 5357, column: 3, scope: !9311)
!9372 = !DILocation(line: 5358, column: 1, scope: !9311)
!9373 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !135, file: !135, line: 184, type: !9374, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!2176, !392}
!9376 = !{!9377}
!9377 = !DILocalVariable(name: "alloc_", arg: 1, scope: !9373, file: !135, line: 184, type: !392)
!9378 = !DILocation(line: 0, scope: !9373)
!9379 = !DILocation(line: 184, column: 1, scope: !9373)
!9380 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !135, file: !135, line: 184, type: !9381, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9384)
!9381 = !DISubroutineType(types: !9382)
!9382 = !{!1093, !9383, !734}
!9383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!9384 = !{!9385, !9386}
!9385 = !DILocalVariable(name: "vec_", arg: 1, scope: !9380, file: !135, line: 184, type: !9383)
!9386 = !DILocalVariable(name: "obj_", arg: 2, scope: !9380, file: !135, line: 184, type: !734)
!9387 = !DILocation(line: 0, scope: !9380)
!9388 = !DILocation(line: 184, column: 1, scope: !9380)
!9389 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !9390, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9392)
!9390 = !DISubroutineType(types: !9391)
!9391 = !{!734, !3607, !7}
!9392 = !{!9393, !9394}
!9393 = !DILocalVariable(name: "vec_", arg: 1, scope: !9389, file: !135, line: 182, type: !3607)
!9394 = !DILocalVariable(name: "ix_", arg: 2, scope: !9389, file: !135, line: 182, type: !7)
!9395 = !DILocation(line: 0, scope: !9389)
!9396 = !DILocation(line: 182, column: 1, scope: !9389)
!9397 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !135, file: !135, line: 182, type: !9398, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9400)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{!734, !3616}
!9400 = !{!9401, !9402}
!9401 = !DILocalVariable(name: "vec_", arg: 1, scope: !9397, file: !135, line: 182, type: !3616)
!9402 = !DILocalVariable(name: "obj_", scope: !9397, file: !135, line: 182, type: !734)
!9403 = !DILocation(line: 0, scope: !9397)
!9404 = !DILocation(line: 182, column: 1, scope: !9397)
!9405 = distinct !DISubprogram(name: "canonicalize_component_ref", scope: !3, file: !3, line: 1649, type: !9406, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9408)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{null, !1093}
!9408 = !{!9409, !9410, !9411, !9412}
!9409 = !DILocalVariable(name: "expr_p", arg: 1, scope: !9405, file: !3, line: 1649, type: !1093)
!9410 = !DILocalVariable(name: "expr", scope: !9405, file: !3, line: 1651, type: !734)
!9411 = !DILocalVariable(name: "type", scope: !9405, file: !3, line: 1652, type: !734)
!9412 = !DILocalVariable(name: "type_quals", scope: !9413, file: !3, line: 1669, type: !392)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 1665, column: 5)
!9414 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1664, column: 7)
!9415 = !DILocation(line: 0, scope: !9405)
!9416 = !DILocation(line: 1651, column: 15, scope: !9405)
!9417 = !DILocation(line: 1654, column: 3, scope: !9405)
!9418 = !DILocation(line: 1656, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1656, column: 7)
!9420 = !DILocation(line: 1656, column: 7, scope: !9405)
!9421 = !DILocation(line: 1657, column: 12, scope: !9419)
!9422 = !DILocation(line: 1664, column: 7, scope: !9414)
!9423 = !DILocation(line: 1657, column: 5, scope: !9419)
!9424 = !DILocation(line: 1659, column: 12, scope: !9419)
!9425 = !DILocation(line: 0, scope: !9419)
!9426 = !DILocation(line: 1664, column: 24, scope: !9414)
!9427 = !DILocation(line: 1664, column: 7, scope: !9405)
!9428 = !DILocation(line: 1673, column: 20, scope: !9413)
!9429 = !DILocation(line: 1674, column: 4, scope: !9413)
!9430 = !DILocation(line: 1674, column: 2, scope: !9413)
!9431 = !DILocation(line: 0, scope: !9413)
!9432 = !DILocation(line: 1675, column: 29, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 1675, column: 11)
!9434 = !DILocation(line: 1675, column: 11, scope: !9413)
!9435 = !DILocation(line: 1676, column: 31, scope: !9433)
!9436 = !DILocation(line: 1676, column: 9, scope: !9433)
!9437 = !DILocation(line: 1676, column: 2, scope: !9433)
!9438 = !DILocation(line: 1679, column: 24, scope: !9413)
!9439 = !DILocation(line: 1686, column: 5, scope: !9413)
!9440 = !DILocation(line: 1687, column: 1, scope: !9405)
!9441 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !135, file: !135, line: 184, type: !9442, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9444)
!9442 = !DISubroutineType(types: !9443)
!9443 = !{null, !9383}
!9444 = !{!9445}
!9445 = !DILocalVariable(name: "vec_", arg: 1, scope: !9441, file: !135, line: 184, type: !9383)
!9446 = !DILocation(line: 0, scope: !9441)
!9447 = !DILocation(line: 184, column: 1, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9441, file: !135, line: 184, column: 1)
!9449 = !DILocation(line: 184, column: 1, scope: !9441)
!9450 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !135, file: !135, line: 184, type: !9451, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9453)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!392, !9383, !392}
!9453 = !{!9454, !9455, !9456}
!9454 = !DILocalVariable(name: "vec_", arg: 1, scope: !9450, file: !135, line: 184, type: !9383)
!9455 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9450, file: !135, line: 184, type: !392)
!9456 = !DILocalVariable(name: "extend", scope: !9450, file: !135, line: 184, type: !392)
!9457 = !DILocation(line: 0, scope: !9450)
!9458 = !DILocation(line: 184, column: 1, scope: !9450)
!9459 = !DILocation(line: 184, column: 1, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9450, file: !135, line: 184, column: 1)
!9461 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !9462, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9464)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{!1093, !3616, !734}
!9464 = !{!9465, !9466, !9467}
!9465 = !DILocalVariable(name: "vec_", arg: 1, scope: !9461, file: !135, line: 182, type: !3616)
!9466 = !DILocalVariable(name: "obj_", arg: 2, scope: !9461, file: !135, line: 182, type: !734)
!9467 = !DILocalVariable(name: "slot_", scope: !9461, file: !135, line: 182, type: !1093)
!9468 = !DILocation(line: 0, scope: !9461)
!9469 = !DILocation(line: 182, column: 1, scope: !9461)
!9470 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !135, file: !135, line: 182, type: !9471, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9473)
!9471 = !DISubroutineType(types: !9472)
!9472 = !{!392, !3616, !392}
!9473 = !{!9474, !9475}
!9474 = !DILocalVariable(name: "vec_", arg: 1, scope: !9470, file: !135, line: 182, type: !3616)
!9475 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9470, file: !135, line: 182, type: !392)
!9476 = !DILocation(line: 0, scope: !9470)
!9477 = !DILocation(line: 182, column: 1, scope: !9470)
!9478 = distinct !DISubprogram(name: "generic_expr_could_trap_p", scope: !3, file: !3, line: 2825, type: !3786, scopeLine: 2826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9479)
!9479 = !{!9480, !9481, !9482}
!9480 = !DILocalVariable(name: "expr", arg: 1, scope: !9478, file: !3, line: 2825, type: !734)
!9481 = !DILocalVariable(name: "i", scope: !9478, file: !3, line: 2827, type: !7)
!9482 = !DILocalVariable(name: "n", scope: !9478, file: !3, line: 2827, type: !7)
!9483 = !DILocation(line: 0, scope: !9478)
!9484 = !DILocation(line: 2829, column: 8, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 2829, column: 7)
!9486 = !DILocation(line: 2829, column: 13, scope: !9485)
!9487 = !DILocation(line: 2829, column: 16, scope: !9485)
!9488 = !DILocation(line: 2829, column: 7, scope: !9478)
!9489 = !DILocation(line: 2832, column: 8, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 2832, column: 7)
!9491 = !DILocation(line: 2832, column: 22, scope: !9490)
!9492 = !DILocation(line: 2832, column: 25, scope: !9490)
!9493 = !DILocation(line: 2832, column: 7, scope: !9478)
!9494 = !DILocation(line: 2835, column: 7, scope: !9478)
!9495 = !DILocation(line: 2837, column: 36, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 2837, column: 9)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 2836, column: 3)
!9498 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 2836, column: 3)
!9499 = !DILocation(line: 2836, column: 17, scope: !9497)
!9500 = !DILocation(line: 2836, column: 8, scope: !9498)
!9501 = !DILocation(line: 0, scope: !9498)
!9502 = !DILocation(line: 2836, column: 3, scope: !9498)
!9503 = !DILocation(line: 2837, column: 9, scope: !9496)
!9504 = !DILocation(line: 2837, column: 9, scope: !9497)
!9505 = !DILocation(line: 2836, column: 23, scope: !9497)
!9506 = !DILocation(line: 2836, column: 3, scope: !9497)
!9507 = distinct !{!9507, !9502, !9508}
!9508 = !DILocation(line: 2838, column: 14, scope: !9498)
!9509 = !DILocation(line: 2841, column: 1, scope: !9478)
!9510 = distinct !DISubprogram(name: "gimplify_pure_cond_expr", scope: !3, file: !3, line: 2793, type: !5620, scopeLine: 2794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516, !9517, !9518}
!9512 = !DILocalVariable(name: "expr_p", arg: 1, scope: !9510, file: !3, line: 2793, type: !1093)
!9513 = !DILocalVariable(name: "pre_p", arg: 2, scope: !9510, file: !3, line: 2793, type: !2939)
!9514 = !DILocalVariable(name: "expr", scope: !9510, file: !3, line: 2795, type: !734)
!9515 = !DILocalVariable(name: "cond", scope: !9510, file: !3, line: 2795, type: !734)
!9516 = !DILocalVariable(name: "ret", scope: !9510, file: !3, line: 2796, type: !390)
!9517 = !DILocalVariable(name: "tret", scope: !9510, file: !3, line: 2796, type: !390)
!9518 = !DILocalVariable(name: "code", scope: !9510, file: !3, line: 2797, type: !134)
!9519 = !DILocation(line: 0, scope: !9510)
!9520 = !DILocation(line: 2795, column: 15, scope: !9510)
!9521 = !DILocation(line: 2795, column: 3, scope: !9510)
!9522 = !DILocation(line: 2799, column: 26, scope: !9510)
!9523 = !DILocation(line: 2799, column: 10, scope: !9510)
!9524 = !DILocation(line: 2799, column: 8, scope: !9510)
!9525 = !DILocation(line: 2803, column: 10, scope: !9510)
!9526 = !DILocation(line: 2804, column: 7, scope: !9510)
!9527 = !DILocation(line: 2805, column: 5, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 2804, column: 7)
!9529 = !DILocation(line: 2807, column: 5, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 2806, column: 12)
!9531 = !DILocation(line: 2808, column: 9, scope: !9510)
!9532 = !DILocation(line: 2809, column: 30, scope: !9510)
!9533 = !DILocation(line: 2809, column: 3, scope: !9510)
!9534 = !DILocation(line: 2809, column: 28, scope: !9510)
!9535 = !DILocation(line: 2811, column: 26, scope: !9510)
!9536 = !DILocation(line: 2811, column: 10, scope: !9510)
!9537 = !DILocation(line: 2813, column: 9, scope: !9510)
!9538 = !DILocation(line: 2814, column: 26, scope: !9510)
!9539 = !DILocation(line: 2814, column: 10, scope: !9510)
!9540 = !DILocation(line: 2817, column: 10, scope: !9510)
!9541 = !DILocation(line: 2818, column: 1, scope: !9510)
!9542 = !DILocation(line: 2817, column: 3, scope: !9510)
!9543 = distinct !DISubprogram(name: "shortcut_cond_expr", scope: !3, file: !3, line: 2544, type: !3444, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9544)
!9544 = !{!9545, !9546, !9547, !9548, !9549, !9550, !9551, !9552, !9553, !9554, !9555, !9556, !9557, !9558, !9559, !9560, !9564, !9568}
!9545 = !DILocalVariable(name: "expr", arg: 1, scope: !9543, file: !3, line: 2544, type: !734)
!9546 = !DILocalVariable(name: "pred", scope: !9543, file: !3, line: 2546, type: !734)
!9547 = !DILocalVariable(name: "then_", scope: !9543, file: !3, line: 2547, type: !734)
!9548 = !DILocalVariable(name: "else_", scope: !9543, file: !3, line: 2548, type: !734)
!9549 = !DILocalVariable(name: "true_label", scope: !9543, file: !3, line: 2549, type: !734)
!9550 = !DILocalVariable(name: "false_label", scope: !9543, file: !3, line: 2549, type: !734)
!9551 = !DILocalVariable(name: "end_label", scope: !9543, file: !3, line: 2549, type: !734)
!9552 = !DILocalVariable(name: "t", scope: !9543, file: !3, line: 2549, type: !734)
!9553 = !DILocalVariable(name: "true_label_p", scope: !9543, file: !3, line: 2550, type: !1093)
!9554 = !DILocalVariable(name: "false_label_p", scope: !9543, file: !3, line: 2551, type: !1093)
!9555 = !DILocalVariable(name: "emit_end", scope: !9543, file: !3, line: 2552, type: !727)
!9556 = !DILocalVariable(name: "emit_false", scope: !9543, file: !3, line: 2552, type: !727)
!9557 = !DILocalVariable(name: "jump_over_else", scope: !9543, file: !3, line: 2552, type: !727)
!9558 = !DILocalVariable(name: "then_se", scope: !9543, file: !3, line: 2553, type: !727)
!9559 = !DILocalVariable(name: "else_se", scope: !9543, file: !3, line: 2554, type: !727)
!9560 = !DILocalVariable(name: "locus", scope: !9561, file: !3, line: 2566, type: !859)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 2564, column: 2)
!9562 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 2558, column: 5)
!9563 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2557, column: 7)
!9564 = !DILocalVariable(name: "locus", scope: !9565, file: !3, line: 2589, type: !859)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 2587, column: 2)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 2581, column: 5)
!9567 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2580, column: 7)
!9568 = !DILocalVariable(name: "last", scope: !9569, file: !3, line: 2698, type: !734)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 2697, column: 2)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2696, column: 11)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2695, column: 5)
!9572 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2694, column: 7)
!9573 = !DILocation(line: 0, scope: !9543)
!9574 = !DILocation(line: 2546, column: 15, scope: !9543)
!9575 = !DILocation(line: 2547, column: 16, scope: !9543)
!9576 = !DILocation(line: 2548, column: 16, scope: !9543)
!9577 = !DILocation(line: 2549, column: 3, scope: !9543)
!9578 = !DILocation(line: 2553, column: 18, scope: !9543)
!9579 = !DILocation(line: 2553, column: 24, scope: !9543)
!9580 = !DILocation(line: 2553, column: 27, scope: !9543)
!9581 = !DILocation(line: 2554, column: 18, scope: !9543)
!9582 = !DILocation(line: 2554, column: 24, scope: !9543)
!9583 = !DILocation(line: 2554, column: 27, scope: !9543)
!9584 = !DILocation(line: 2557, column: 7, scope: !9543)
!9585 = !DILocation(line: 2563, column: 7, scope: !9562)
!9586 = !DILocation(line: 2563, column: 14, scope: !9562)
!9587 = !DILocation(line: 2563, column: 31, scope: !9562)
!9588 = !DILocation(line: 2566, column: 23, scope: !9561)
!9589 = !DILocation(line: 2567, column: 11, scope: !9561)
!9590 = !DILocation(line: 2567, column: 34, scope: !9561)
!9591 = !DILocation(line: 0, scope: !9561)
!9592 = !DILocation(line: 2568, column: 29, scope: !9561)
!9593 = !DILocation(line: 2568, column: 4, scope: !9561)
!9594 = !DILocation(line: 2568, column: 27, scope: !9561)
!9595 = !DILocation(line: 2570, column: 8, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 2570, column: 8)
!9597 = !DILocation(line: 2570, column: 8, scope: !9561)
!9598 = !DILocation(line: 2571, column: 6, scope: !9596)
!9599 = !DILocation(line: 2572, column: 12, scope: !9561)
!9600 = !DILocation(line: 2573, column: 14, scope: !9561)
!9601 = !DILocation(line: 2573, column: 20, scope: !9561)
!9602 = !DILocation(line: 2573, column: 23, scope: !9561)
!9603 = !DILocation(line: 2574, column: 11, scope: !9561)
!9604 = !DILocation(line: 2575, column: 11, scope: !9561)
!9605 = !DILocation(line: 2575, column: 9, scope: !9561)
!9606 = !DILocation(line: 2576, column: 4, scope: !9561)
!9607 = distinct !{!9607, !9585, !9608}
!9608 = !DILocation(line: 2577, column: 2, scope: !9562)
!9609 = !DILocation(line: 2580, column: 8, scope: !9567)
!9610 = !DILocation(line: 2553, column: 8, scope: !9543)
!9611 = !DILocation(line: 2547, column: 8, scope: !9543)
!9612 = !DILocation(line: 2546, column: 8, scope: !9543)
!9613 = !DILocation(line: 2580, column: 7, scope: !9543)
!9614 = !DILocation(line: 0, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2604, column: 7)
!9616 = !DILocation(line: 2604, column: 7, scope: !9615)
!9617 = !DILocation(line: 2604, column: 24, scope: !9615)
!9618 = !DILocation(line: 2586, column: 7, scope: !9566)
!9619 = !DILocation(line: 2586, column: 14, scope: !9566)
!9620 = !DILocation(line: 2586, column: 31, scope: !9566)
!9621 = !DILocation(line: 2589, column: 23, scope: !9565)
!9622 = !DILocation(line: 2590, column: 11, scope: !9565)
!9623 = !DILocation(line: 2590, column: 34, scope: !9565)
!9624 = !DILocation(line: 0, scope: !9565)
!9625 = !DILocation(line: 2591, column: 29, scope: !9565)
!9626 = !DILocation(line: 2591, column: 4, scope: !9565)
!9627 = !DILocation(line: 2591, column: 27, scope: !9565)
!9628 = !DILocation(line: 2593, column: 8, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 2593, column: 8)
!9630 = !DILocation(line: 2593, column: 8, scope: !9565)
!9631 = !DILocation(line: 2594, column: 6, scope: !9629)
!9632 = !DILocation(line: 2595, column: 12, scope: !9565)
!9633 = !DILocation(line: 2596, column: 14, scope: !9565)
!9634 = !DILocation(line: 2596, column: 20, scope: !9565)
!9635 = !DILocation(line: 2596, column: 23, scope: !9565)
!9636 = !DILocation(line: 2597, column: 11, scope: !9565)
!9637 = !DILocation(line: 2598, column: 11, scope: !9565)
!9638 = !DILocation(line: 2598, column: 9, scope: !9565)
!9639 = !DILocation(line: 2599, column: 4, scope: !9565)
!9640 = distinct !{!9640, !9618, !9641}
!9641 = !DILocation(line: 2600, column: 2, scope: !9566)
!9642 = !DILocation(line: 2554, column: 8, scope: !9543)
!9643 = !DILocation(line: 2548, column: 8, scope: !9543)
!9644 = !DILocation(line: 2605, column: 7, scope: !9615)
!9645 = !DILocation(line: 2605, column: 27, scope: !9615)
!9646 = !DILocation(line: 2604, column: 7, scope: !9543)
!9647 = !DILocation(line: 2606, column: 5, scope: !9615)
!9648 = !DILocation(line: 2616, column: 40, scope: !9543)
!9649 = !DILocation(line: 2616, column: 28, scope: !9543)
!9650 = !DILocation(line: 2616, column: 14, scope: !9543)
!9651 = !DILocation(line: 2621, column: 7, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2621, column: 7)
!9653 = !DILocation(line: 2622, column: 7, scope: !9652)
!9654 = !DILocation(line: 2622, column: 10, scope: !9652)
!9655 = !DILocation(line: 2622, column: 28, scope: !9652)
!9656 = !DILocation(line: 2623, column: 7, scope: !9652)
!9657 = !DILocation(line: 2623, column: 10, scope: !9652)
!9658 = !DILocation(line: 2623, column: 47, scope: !9652)
!9659 = !DILocation(line: 2621, column: 7, scope: !9543)
!9660 = !DILocation(line: 2625, column: 18, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 2624, column: 5)
!9662 = !DILocation(line: 2628, column: 5, scope: !9661)
!9663 = !DILocation(line: 2630, column: 7, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2630, column: 7)
!9665 = !DILocation(line: 2631, column: 7, scope: !9664)
!9666 = !DILocation(line: 2631, column: 10, scope: !9664)
!9667 = !DILocation(line: 2631, column: 28, scope: !9664)
!9668 = !DILocation(line: 2632, column: 7, scope: !9664)
!9669 = !DILocation(line: 2632, column: 10, scope: !9664)
!9670 = !DILocation(line: 2632, column: 47, scope: !9664)
!9671 = !DILocation(line: 2630, column: 7, scope: !9543)
!9672 = !DILocation(line: 2634, column: 19, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 2633, column: 5)
!9674 = !DILocation(line: 2637, column: 5, scope: !9673)
!9675 = !DILocation(line: 2646, column: 7, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2646, column: 7)
!9677 = !DILocation(line: 2640, column: 7, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2640, column: 7)
!9679 = !DILocation(line: 2646, column: 22, scope: !9676)
!9680 = !DILocation(line: 2646, column: 19, scope: !9676)
!9681 = !DILocation(line: 2652, column: 16, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2652, column: 7)
!9683 = !DILocation(line: 2654, column: 8, scope: !9682)
!9684 = !DILocation(line: 2655, column: 10, scope: !9682)
!9685 = !DILocation(line: 2655, column: 33, scope: !9682)
!9686 = !DILocation(line: 2653, column: 12, scope: !9682)
!9687 = !DILocation(line: 2653, column: 5, scope: !9682)
!9688 = !DILocation(line: 2658, column: 7, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2658, column: 7)
!9690 = !DILocation(line: 2658, column: 7, scope: !9543)
!9691 = !DILocation(line: 2659, column: 9, scope: !9689)
!9692 = !DILocation(line: 2659, column: 5, scope: !9689)
!9693 = !DILocation(line: 2660, column: 12, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 2660, column: 12)
!9695 = !DILocation(line: 2660, column: 12, scope: !9689)
!9696 = !DILocation(line: 2661, column: 9, scope: !9694)
!9697 = !DILocation(line: 2661, column: 5, scope: !9694)
!9698 = !DILocation(line: 0, scope: !9689)
!9699 = !DILocation(line: 2664, column: 7, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2664, column: 7)
!9701 = !DILocation(line: 2664, column: 9, scope: !9700)
!9702 = !DILocation(line: 2664, column: 12, scope: !9700)
!9703 = !DILocation(line: 2664, column: 26, scope: !9700)
!9704 = !DILocation(line: 2664, column: 7, scope: !9543)
!9705 = !DILocation(line: 2665, column: 17, scope: !9700)
!9706 = !DILocation(line: 2665, column: 15, scope: !9700)
!9707 = !DILocation(line: 2665, column: 5, scope: !9700)
!9708 = !DILocation(line: 2669, column: 7, scope: !9543)
!9709 = !DILocation(line: 2674, column: 29, scope: !9543)
!9710 = !DILocation(line: 2684, column: 20, scope: !9543)
!9711 = !DILocation(line: 2687, column: 6, scope: !9543)
!9712 = !DILocation(line: 2688, column: 8, scope: !9543)
!9713 = !DILocation(line: 2688, column: 31, scope: !9543)
!9714 = !DILocation(line: 2686, column: 10, scope: !9543)
!9715 = !DILocation(line: 2690, column: 8, scope: !9543)
!9716 = !DILocation(line: 2691, column: 3, scope: !9543)
!9717 = !DILocation(line: 2693, column: 3, scope: !9543)
!9718 = !DILocation(line: 2694, column: 7, scope: !9543)
!9719 = !DILocation(line: 2696, column: 11, scope: !9570)
!9720 = !DILocation(line: 2696, column: 11, scope: !9571)
!9721 = !DILocation(line: 2698, column: 27, scope: !9569)
!9722 = !DILocation(line: 2698, column: 16, scope: !9569)
!9723 = !DILocation(line: 0, scope: !9569)
!9724 = !DILocation(line: 2699, column: 8, scope: !9569)
!9725 = !DILocation(line: 2700, column: 8, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2700, column: 8)
!9727 = !DILocation(line: 2700, column: 8, scope: !9569)
!9728 = !DILocation(line: 2701, column: 6, scope: !9726)
!9729 = !DILocation(line: 2702, column: 4, scope: !9569)
!9730 = !DILocation(line: 2703, column: 2, scope: !9569)
!9731 = !DILocation(line: 2704, column: 11, scope: !9571)
!9732 = !DILocation(line: 2706, column: 8, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 2705, column: 2)
!9734 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2704, column: 11)
!9735 = !DILocation(line: 2707, column: 4, scope: !9733)
!9736 = !DILocation(line: 2708, column: 2, scope: !9733)
!9737 = !DILocation(line: 2709, column: 7, scope: !9571)
!9738 = !DILocation(line: 2710, column: 5, scope: !9571)
!9739 = !DILocation(line: 2711, column: 19, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2711, column: 7)
!9741 = !DILocation(line: 2711, column: 16, scope: !9740)
!9742 = !DILocation(line: 2713, column: 11, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 2712, column: 5)
!9744 = !DILocation(line: 2714, column: 7, scope: !9743)
!9745 = !DILocation(line: 2715, column: 5, scope: !9743)
!9746 = !DILocation(line: 2717, column: 10, scope: !9543)
!9747 = !DILocation(line: 2717, column: 3, scope: !9543)
!9748 = !DILocation(line: 2718, column: 1, scope: !9543)
!9749 = distinct !DISubprogram(name: "gimple_push_condition", scope: !3, file: !3, line: 273, type: !8191, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!9750 = !DILocation(line: 279, column: 6, scope: !9749)
!9751 = !DILocation(line: 279, column: 21, scope: !9749)
!9752 = !DILocation(line: 279, column: 3, scope: !9749)
!9753 = !DILocation(line: 280, column: 1, scope: !9749)
!9754 = distinct !DISubprogram(name: "gimple_pop_condition", scope: !3, file: !3, line: 286, type: !9755, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9757)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{null, !2939}
!9757 = !{!9758, !9759}
!9758 = !DILocalVariable(name: "pre_p", arg: 1, scope: !9754, file: !3, line: 286, type: !2939)
!9759 = !DILocalVariable(name: "conds", scope: !9754, file: !3, line: 288, type: !392)
!9760 = !DILocation(line: 0, scope: !9754)
!9761 = !DILocation(line: 288, column: 18, scope: !9754)
!9762 = !DILocation(line: 288, column: 33, scope: !9754)
!9763 = !DILocation(line: 288, column: 15, scope: !9754)
!9764 = !DILocation(line: 290, column: 3, scope: !9754)
!9765 = !DILocation(line: 291, column: 13, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 291, column: 7)
!9767 = !DILocation(line: 291, column: 7, scope: !9754)
!9768 = !DILocation(line: 293, column: 36, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 292, column: 5)
!9770 = !DILocation(line: 293, column: 51, scope: !9769)
!9771 = !DILocation(line: 293, column: 7, scope: !9769)
!9772 = !DILocation(line: 294, column: 7, scope: !9769)
!9773 = !DILocation(line: 294, column: 22, scope: !9769)
!9774 = !DILocation(line: 294, column: 43, scope: !9769)
!9775 = !DILocation(line: 295, column: 5, scope: !9769)
!9776 = !DILocation(line: 296, column: 1, scope: !9754)
!9777 = distinct !DISubprogram(name: "gimple_set_do_not_emit_location", scope: !3, file: !3, line: 794, type: !2775, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9778)
!9778 = !{!9779}
!9779 = !DILocalVariable(name: "g", arg: 1, scope: !9777, file: !3, line: 794, type: !1058)
!9780 = !DILocation(line: 0, scope: !9777)
!9781 = !DILocation(line: 798, column: 3, scope: !9777)
!9782 = !DILocation(line: 799, column: 1, scope: !9777)
!9783 = distinct !DISubprogram(name: "tree_operand_length", scope: !135, file: !135, line: 5347, type: !9784, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!392, !2175}
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "node", arg: 1, scope: !9783, file: !135, line: 5347, type: !2175)
!9788 = !DILocation(line: 0, scope: !9783)
!9789 = !DILocation(line: 5349, column: 7, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9783, file: !135, line: 5349, column: 7)
!9791 = !DILocation(line: 5349, column: 7, scope: !9783)
!9792 = !DILocation(line: 5350, column: 12, scope: !9790)
!9793 = !DILocation(line: 5350, column: 5, scope: !9790)
!9794 = !DILocation(line: 5352, column: 12, scope: !9790)
!9795 = !DILocation(line: 5352, column: 5, scope: !9790)
!9796 = !DILocation(line: 0, scope: !9790)
!9797 = !DILocation(line: 5353, column: 1, scope: !9783)
!9798 = distinct !DISubprogram(name: "shortcut_cond_r", scope: !3, file: !3, line: 2448, type: !9799, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9801)
!9799 = !DISubroutineType(types: !9800)
!9800 = !{!734, !734, !1093, !1093, !859}
!9801 = !{!9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9812, !9815}
!9802 = !DILocalVariable(name: "pred", arg: 1, scope: !9798, file: !3, line: 2448, type: !734)
!9803 = !DILocalVariable(name: "true_label_p", arg: 2, scope: !9798, file: !3, line: 2448, type: !1093)
!9804 = !DILocalVariable(name: "false_label_p", arg: 3, scope: !9798, file: !3, line: 2448, type: !1093)
!9805 = !DILocalVariable(name: "locus", arg: 4, scope: !9798, file: !3, line: 2449, type: !859)
!9806 = !DILocalVariable(name: "local_label", scope: !9798, file: !3, line: 2451, type: !734)
!9807 = !DILocalVariable(name: "t", scope: !9798, file: !3, line: 2452, type: !734)
!9808 = !DILocalVariable(name: "expr", scope: !9798, file: !3, line: 2452, type: !734)
!9809 = !DILocalVariable(name: "new_locus", scope: !9810, file: !3, line: 2459, type: !859)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 2458, column: 5)
!9811 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 2457, column: 7)
!9812 = !DILocalVariable(name: "new_locus", scope: !9813, file: !3, line: 2482, type: !859)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 2481, column: 5)
!9814 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 2480, column: 12)
!9815 = !DILocalVariable(name: "new_locus", scope: !9816, file: !3, line: 2505, type: !859)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 2504, column: 5)
!9817 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 2503, column: 12)
!9818 = !DILocation(line: 0, scope: !9798)
!9819 = !DILocation(line: 2451, column: 3, scope: !9798)
!9820 = !DILocation(line: 2451, column: 8, scope: !9798)
!9821 = !DILocation(line: 2452, column: 3, scope: !9798)
!9822 = !DILocation(line: 2452, column: 11, scope: !9798)
!9823 = !DILocation(line: 2457, column: 7, scope: !9811)
!9824 = !DILocation(line: 2457, column: 24, scope: !9811)
!9825 = !DILocation(line: 2457, column: 7, scope: !9798)
!9826 = !DILocation(line: 2467, column: 25, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2467, column: 11)
!9828 = !DILocation(line: 2467, column: 11, scope: !9810)
!9829 = !DILocation(line: 2471, column: 28, scope: !9810)
!9830 = !DILocation(line: 2471, column: 11, scope: !9810)
!9831 = !DILocation(line: 2472, column: 7, scope: !9810)
!9832 = !DILocation(line: 2475, column: 19, scope: !9810)
!9833 = !DILocation(line: 2475, column: 46, scope: !9810)
!9834 = !DILocation(line: 0, scope: !9810)
!9835 = !DILocation(line: 2476, column: 28, scope: !9810)
!9836 = !DILocation(line: 2476, column: 11, scope: !9810)
!9837 = !DILocation(line: 2478, column: 7, scope: !9810)
!9838 = !DILocation(line: 2479, column: 5, scope: !9810)
!9839 = !DILocation(line: 2480, column: 29, scope: !9814)
!9840 = !DILocation(line: 2480, column: 12, scope: !9811)
!9841 = !DILocation(line: 2490, column: 24, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2490, column: 11)
!9843 = !DILocation(line: 2490, column: 11, scope: !9813)
!9844 = !DILocation(line: 2494, column: 28, scope: !9813)
!9845 = !DILocation(line: 2494, column: 11, scope: !9813)
!9846 = !DILocation(line: 2495, column: 7, scope: !9813)
!9847 = !DILocation(line: 2498, column: 19, scope: !9813)
!9848 = !DILocation(line: 2498, column: 46, scope: !9813)
!9849 = !DILocation(line: 0, scope: !9813)
!9850 = !DILocation(line: 2499, column: 28, scope: !9813)
!9851 = !DILocation(line: 2499, column: 11, scope: !9813)
!9852 = !DILocation(line: 2501, column: 7, scope: !9813)
!9853 = !DILocation(line: 2502, column: 5, scope: !9813)
!9854 = !DILocation(line: 2503, column: 29, scope: !9817)
!9855 = !DILocation(line: 2503, column: 12, scope: !9814)
!9856 = !DILocation(line: 2515, column: 19, scope: !9816)
!9857 = !DILocation(line: 2515, column: 46, scope: !9816)
!9858 = !DILocation(line: 0, scope: !9816)
!9859 = !DILocation(line: 2516, column: 14, scope: !9816)
!9860 = !DILocation(line: 2516, column: 12, scope: !9816)
!9861 = !DILocation(line: 2521, column: 5, scope: !9816)
!9862 = !DILocation(line: 2524, column: 14, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 2523, column: 5)
!9864 = !DILocation(line: 2524, column: 12, scope: !9863)
!9865 = !DILocation(line: 2527, column: 7, scope: !9863)
!9866 = !DILocation(line: 2530, column: 7, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 2530, column: 7)
!9868 = !DILocation(line: 2530, column: 7, scope: !9798)
!9869 = !DILocation(line: 2532, column: 11, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9867, file: !3, line: 2531, column: 5)
!9871 = !DILocation(line: 2533, column: 7, scope: !9870)
!9872 = !DILocation(line: 2534, column: 5, scope: !9870)
!9873 = !DILocation(line: 2536, column: 10, scope: !9798)
!9874 = !DILocation(line: 2537, column: 1, scope: !9798)
!9875 = !DILocation(line: 2536, column: 3, scope: !9798)
!9876 = distinct !DISubprogram(name: "gimple_set_plf", scope: !391, file: !391, line: 1235, type: !9877, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9879)
!9877 = !DISubroutineType(types: !9878)
!9878 = !{null, !1058, !477, !727}
!9879 = !{!9880, !9881, !9882}
!9880 = !DILocalVariable(name: "stmt", arg: 1, scope: !9876, file: !391, line: 1235, type: !1058)
!9881 = !DILocalVariable(name: "plf", arg: 2, scope: !9876, file: !391, line: 1235, type: !477)
!9882 = !DILocalVariable(name: "val_p", arg: 3, scope: !9876, file: !391, line: 1235, type: !727)
!9883 = !DILocation(line: 0, scope: !9876)
!9884 = !DILocation(line: 1238, column: 18, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9876, file: !391, line: 1237, column: 7)
!9886 = !DILocation(line: 1238, column: 22, scope: !9885)
!9887 = !DILocation(line: 1241, column: 1, scope: !9876)
!9888 = distinct !DISubprogram(name: "gimplify_arg", scope: !3, file: !3, line: 2193, type: !9889, scopeLine: 2194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9891)
!9889 = !DISubroutineType(types: !9890)
!9890 = !{!390, !1093, !2939, !859}
!9891 = !{!9892, !9893, !9894, !9895, !9896}
!9892 = !DILocalVariable(name: "arg_p", arg: 1, scope: !9888, file: !3, line: 2193, type: !1093)
!9893 = !DILocalVariable(name: "pre_p", arg: 2, scope: !9888, file: !3, line: 2193, type: !2939)
!9894 = !DILocalVariable(name: "call_location", arg: 3, scope: !9888, file: !3, line: 2193, type: !859)
!9895 = !DILocalVariable(name: "test", scope: !9888, file: !3, line: 2195, type: !3785)
!9896 = !DILocalVariable(name: "fb", scope: !9888, file: !3, line: 2196, type: !4029)
!9897 = !DILocation(line: 0, scope: !9888)
!9898 = !DILocation(line: 2203, column: 27, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 2203, column: 7)
!9900 = !DILocation(line: 2203, column: 7, scope: !9899)
!9901 = !DILocation(line: 2209, column: 3, scope: !9888)
!9902 = !DILocation(line: 2214, column: 32, scope: !9888)
!9903 = !DILocation(line: 2214, column: 3, scope: !9888)
!9904 = !DILocation(line: 2220, column: 10, scope: !9888)
!9905 = !DILocation(line: 2220, column: 3, scope: !9888)
!9906 = distinct !DISubprogram(name: "maybe_with_size_expr", scope: !3, file: !3, line: 2164, type: !9406, scopeLine: 2165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910, !9911}
!9908 = !DILocalVariable(name: "expr_p", arg: 1, scope: !9906, file: !3, line: 2164, type: !1093)
!9909 = !DILocalVariable(name: "expr", scope: !9906, file: !3, line: 2166, type: !734)
!9910 = !DILocalVariable(name: "type", scope: !9906, file: !3, line: 2167, type: !734)
!9911 = !DILocalVariable(name: "size", scope: !9906, file: !3, line: 2168, type: !734)
!9912 = !DILocation(line: 0, scope: !9906)
!9913 = !DILocation(line: 2166, column: 15, scope: !9906)
!9914 = !DILocation(line: 2167, column: 15, scope: !9906)
!9915 = !DILocation(line: 2172, column: 7, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2172, column: 7)
!9917 = !DILocation(line: 2172, column: 24, scope: !9916)
!9918 = !DILocation(line: 2173, column: 18, scope: !9916)
!9919 = !DILocation(line: 2173, column: 15, scope: !9916)
!9920 = !DILocation(line: 2173, column: 7, scope: !9916)
!9921 = !DILocation(line: 2177, column: 10, scope: !9906)
!9922 = !DILocation(line: 2178, column: 8, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2178, column: 7)
!9924 = !DILocation(line: 2178, column: 13, scope: !9923)
!9925 = !DILocation(line: 2178, column: 16, scope: !9923)
!9926 = !DILocation(line: 2178, column: 33, scope: !9923)
!9927 = !DILocation(line: 2178, column: 7, scope: !9906)
!9928 = !DILocation(line: 2182, column: 10, scope: !9906)
!9929 = !DILocation(line: 2183, column: 10, scope: !9906)
!9930 = !DILocation(line: 2184, column: 13, scope: !9906)
!9931 = !DILocation(line: 2184, column: 11, scope: !9906)
!9932 = !DILocation(line: 2185, column: 1, scope: !9906)
!9933 = distinct !DISubprogram(name: "gimplify_modify_expr_rhs", scope: !3, file: !3, line: 4098, type: !9934, scopeLine: 4101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9936)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!390, !1093, !1093, !1093, !2939, !2939, !727}
!9936 = !{!9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944, !9948, !9950, !9952, !9955, !9956, !9957, !9960, !9962, !9963, !9965, !9966, !9967}
!9937 = !DILocalVariable(name: "expr_p", arg: 1, scope: !9933, file: !3, line: 4098, type: !1093)
!9938 = !DILocalVariable(name: "from_p", arg: 2, scope: !9933, file: !3, line: 4098, type: !1093)
!9939 = !DILocalVariable(name: "to_p", arg: 3, scope: !9933, file: !3, line: 4098, type: !1093)
!9940 = !DILocalVariable(name: "pre_p", arg: 4, scope: !9933, file: !3, line: 4099, type: !2939)
!9941 = !DILocalVariable(name: "post_p", arg: 5, scope: !9933, file: !3, line: 4099, type: !2939)
!9942 = !DILocalVariable(name: "want_value", arg: 6, scope: !9933, file: !3, line: 4100, type: !727)
!9943 = !DILocalVariable(name: "ret", scope: !9933, file: !3, line: 4102, type: !390)
!9944 = !DILocalVariable(name: "old_from", scope: !9945, file: !3, line: 4118, type: !734)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 4117, column: 4)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4112, column: 6)
!9947 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 4106, column: 7)
!9948 = !DILocalVariable(name: "t", scope: !9949, file: !3, line: 4150, type: !734)
!9949 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4140, column: 2)
!9950 = !DILocalVariable(name: "init", scope: !9951, file: !3, line: 4173, type: !734)
!9951 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4162, column: 2)
!9952 = !DILocalVariable(name: "code", scope: !9953, file: !3, line: 4207, type: !134)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 4205, column: 4)
!9954 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4204, column: 6)
!9955 = !DILocalVariable(name: "cond", scope: !9953, file: !3, line: 4208, type: !734)
!9956 = !DILocalVariable(name: "result", scope: !9953, file: !3, line: 4209, type: !734)
!9957 = !DILocalVariable(name: "use_target", scope: !9958, file: !3, line: 4247, type: !727)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 4246, column: 4)
!9959 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4244, column: 6)
!9960 = !DILocalVariable(name: "wrap", scope: !9961, file: !3, line: 4292, type: !734)
!9961 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4291, column: 2)
!9962 = !DILocalVariable(name: "t", scope: !9961, file: !3, line: 4293, type: !734)
!9963 = !DILocalVariable(name: "complit", scope: !9964, file: !3, line: 4315, type: !734)
!9964 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4314, column: 2)
!9965 = !DILocalVariable(name: "decl_s", scope: !9964, file: !3, line: 4316, type: !734)
!9966 = !DILocalVariable(name: "decl", scope: !9964, file: !3, line: 4317, type: !734)
!9967 = !DILocalVariable(name: "init", scope: !9964, file: !3, line: 4318, type: !734)
!9968 = !DILocation(line: 0, scope: !9933)
!9969 = !DILocation(line: 0, scope: !9964)
!9970 = !DILocation(line: 0, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4252, column: 15)
!9972 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 4249, column: 10)
!9973 = !DILocation(line: 0, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 4257, column: 15)
!9975 = !DILocation(line: 0, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 4261, column: 15)
!9977 = !DILocation(line: 0, scope: !9945)
!9978 = !DILocation(line: 4104, column: 3, scope: !9933)
!9979 = !DILocation(line: 4104, column: 14, scope: !9933)
!9980 = !DILocation(line: 4105, column: 13, scope: !9933)
!9981 = !DILocation(line: 4105, column: 5, scope: !9933)
!9982 = !DILocation(line: 4112, column: 6, scope: !9946)
!9983 = !DILocation(line: 4113, column: 6, scope: !9946)
!9984 = !DILocation(line: 4113, column: 9, scope: !9946)
!9985 = !DILocation(line: 4114, column: 6, scope: !9946)
!9986 = !DILocation(line: 4114, column: 10, scope: !9946)
!9987 = !DILocation(line: 4115, column: 6, scope: !9946)
!9988 = !DILocation(line: 4115, column: 10, scope: !9946)
!9989 = !DILocation(line: 4116, column: 6, scope: !9946)
!9990 = !DILocation(line: 4116, column: 9, scope: !9946)
!9991 = !DILocation(line: 4116, column: 44, scope: !9946)
!9992 = !DILocation(line: 4112, column: 6, scope: !9947)
!9993 = !DILocation(line: 4121, column: 30, scope: !9945)
!9994 = !DILocation(line: 4121, column: 16, scope: !9945)
!9995 = !DILocation(line: 4121, column: 14, scope: !9945)
!9996 = !DILocation(line: 4125, column: 12, scope: !9945)
!9997 = !DILocation(line: 4126, column: 14, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 4126, column: 10)
!9999 = !DILocation(line: 4126, column: 10, scope: !9945)
!10000 = !DILocation(line: 4128, column: 11, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 4127, column: 8)
!10002 = !DILocation(line: 4136, column: 4, scope: !9946)
!10003 = !DILocation(line: 4138, column: 2, scope: !9947)
!10004 = !DILocation(line: 4150, column: 43, scope: !9949)
!10005 = !DILocation(line: 4150, column: 13, scope: !9949)
!10006 = !DILocation(line: 0, scope: !9949)
!10007 = !DILocation(line: 4151, column: 8, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 4151, column: 8)
!10009 = !DILocation(line: 4151, column: 8, scope: !9949)
!10010 = !DILocation(line: 4153, column: 16, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 4152, column: 6)
!10012 = !DILocation(line: 4155, column: 6, scope: !10011)
!10013 = !DILocation(line: 4173, column: 16, scope: !9951)
!10014 = !DILocation(line: 0, scope: !9951)
!10015 = !DILocation(line: 4175, column: 8, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 4175, column: 8)
!10017 = !DILocation(line: 4176, column: 8, scope: !10016)
!10018 = !DILocation(line: 4176, column: 12, scope: !10016)
!10019 = !DILocation(line: 4175, column: 8, scope: !9951)
!10020 = !DILocation(line: 4178, column: 16, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 4177, column: 6)
!10022 = !DILocation(line: 4180, column: 6, scope: !10021)
!10023 = !DILocation(line: 4189, column: 2, scope: !9947)
!10024 = !DILocation(line: 4191, column: 2, scope: !9947)
!10025 = !DILocation(line: 4196, column: 9, scope: !9947)
!10026 = !DILocation(line: 4196, column: 2, scope: !9947)
!10027 = !DILocation(line: 4204, column: 27, scope: !9954)
!10028 = !DILocation(line: 4204, column: 7, scope: !9954)
!10029 = !DILocation(line: 4204, column: 6, scope: !9947)
!10030 = !DILocation(line: 4207, column: 28, scope: !9953)
!10031 = !DILocation(line: 0, scope: !9953)
!10032 = !DILocation(line: 4208, column: 18, scope: !9953)
!10033 = !DILocation(line: 4209, column: 6, scope: !9953)
!10034 = !DILocation(line: 4209, column: 20, scope: !9953)
!10035 = !DILocation(line: 4209, column: 11, scope: !9953)
!10036 = !DILocation(line: 4211, column: 12, scope: !9953)
!10037 = !DILocation(line: 4213, column: 14, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 4213, column: 10)
!10039 = !DILocation(line: 4213, column: 10, scope: !9953)
!10040 = !DILocation(line: 4216, column: 10, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 4216, column: 10)
!10042 = !DILocation(line: 4216, column: 48, scope: !10041)
!10043 = !DILocation(line: 4216, column: 45, scope: !10041)
!10044 = !DILocation(line: 4216, column: 10, scope: !9953)
!10045 = !DILocation(line: 4218, column: 5, scope: !10041)
!10046 = !DILocation(line: 4218, column: 3, scope: !10041)
!10047 = !DILocation(line: 4220, column: 48, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 4220, column: 10)
!10049 = !DILocation(line: 4217, column: 8, scope: !10041)
!10050 = !DILocation(line: 4220, column: 10, scope: !10048)
!10051 = !DILocation(line: 4220, column: 45, scope: !10048)
!10052 = !DILocation(line: 4220, column: 10, scope: !9953)
!10053 = !DILocation(line: 4222, column: 5, scope: !10048)
!10054 = !DILocation(line: 4222, column: 3, scope: !10048)
!10055 = !DILocation(line: 4225, column: 25, scope: !9953)
!10056 = !DILocation(line: 4221, column: 8, scope: !10048)
!10057 = !DILocation(line: 4225, column: 6, scope: !9953)
!10058 = !DILocation(line: 4225, column: 23, scope: !9953)
!10059 = !DILocation(line: 4226, column: 6, scope: !9953)
!10060 = !DILocation(line: 4228, column: 10, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 4228, column: 10)
!10062 = !DILocation(line: 4228, column: 10, scope: !9953)
!10063 = !DILocation(line: 4230, column: 3, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4229, column: 8)
!10065 = !DILocation(line: 4231, column: 27, scope: !10064)
!10066 = !DILocation(line: 4231, column: 13, scope: !10064)
!10067 = !DILocation(line: 4232, column: 8, scope: !10064)
!10068 = !DILocation(line: 0, scope: !10061)
!10069 = !DILocation(line: 4236, column: 4, scope: !9954)
!10070 = !DILocation(line: 4244, column: 7, scope: !9959)
!10071 = !DILocation(line: 4245, column: 6, scope: !9959)
!10072 = !DILocation(line: 4245, column: 9, scope: !9959)
!10073 = !DILocation(line: 4244, column: 6, scope: !9947)
!10074 = !DILocation(line: 4249, column: 31, scope: !9972)
!10075 = !DILocation(line: 4249, column: 12, scope: !9972)
!10076 = !DILocation(line: 4249, column: 39, scope: !9972)
!10077 = !DILocation(line: 4249, column: 11, scope: !9972)
!10078 = !DILocation(line: 4249, column: 10, scope: !9958)
!10079 = !DILocation(line: 4252, column: 15, scope: !9971)
!10080 = !DILocation(line: 4252, column: 33, scope: !9971)
!10081 = !DILocation(line: 4253, column: 8, scope: !9971)
!10082 = !DILocation(line: 4253, column: 11, scope: !9971)
!10083 = !DILocation(line: 4253, column: 29, scope: !9971)
!10084 = !DILocation(line: 4254, column: 8, scope: !9971)
!10085 = !DILocation(line: 4254, column: 11, scope: !9971)
!10086 = !DILocation(line: 4252, column: 15, scope: !9972)
!10087 = !DILocation(line: 4257, column: 35, scope: !9974)
!10088 = !DILocation(line: 4257, column: 15, scope: !9974)
!10089 = !DILocation(line: 4258, column: 8, scope: !9974)
!10090 = !DILocation(line: 4258, column: 12, scope: !9974)
!10091 = !DILocation(line: 4258, column: 27, scope: !9974)
!10092 = !DILocation(line: 4258, column: 30, scope: !9974)
!10093 = !DILocation(line: 4257, column: 15, scope: !9971)
!10094 = !DILocation(line: 4261, column: 15, scope: !9976)
!10095 = !DILocation(line: 4261, column: 35, scope: !9976)
!10096 = !DILocation(line: 4261, column: 15, scope: !9974)
!10097 = !DILocation(line: 4265, column: 16, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 4265, column: 15)
!10099 = !DILocation(line: 0, scope: !9958)
!10100 = !DILocation(line: 0, scope: !9972)
!10101 = !DILocation(line: 4276, column: 10, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 4276, column: 10)
!10103 = !DILocation(line: 4276, column: 10, scope: !9958)
!10104 = !DILocation(line: 4278, column: 3, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4277, column: 8)
!10106 = !DILocation(line: 4278, column: 39, scope: !10105)
!10107 = !DILocation(line: 4279, column: 21, scope: !10105)
!10108 = !DILocation(line: 4279, column: 3, scope: !10105)
!10109 = !DILocation(line: 4280, column: 8, scope: !10105)
!10110 = !DILocation(line: 0, scope: !9961)
!10111 = !DILocation(line: 4295, column: 10, scope: !9961)
!10112 = !DILocation(line: 4300, column: 36, scope: !9961)
!10113 = !DILocation(line: 4300, column: 8, scope: !9961)
!10114 = !DILocation(line: 4301, column: 4, scope: !9961)
!10115 = !DILocation(line: 4303, column: 8, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 4303, column: 8)
!10117 = !DILocation(line: 4303, column: 8, scope: !9961)
!10118 = !DILocation(line: 4305, column: 8, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 4304, column: 6)
!10120 = !DILocation(line: 4306, column: 32, scope: !10119)
!10121 = !DILocation(line: 4306, column: 18, scope: !10119)
!10122 = !DILocation(line: 4306, column: 16, scope: !10119)
!10123 = !DILocation(line: 4307, column: 6, scope: !10119)
!10124 = !DILocation(line: 4309, column: 14, scope: !10116)
!10125 = !DILocation(line: 4315, column: 19, scope: !9964)
!10126 = !DILocation(line: 4316, column: 18, scope: !9964)
!10127 = !DILocation(line: 4317, column: 16, scope: !9964)
!10128 = !DILocation(line: 4318, column: 16, scope: !9964)
!10129 = !DILocation(line: 4323, column: 9, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 4323, column: 8)
!10131 = !DILocation(line: 4324, column: 8, scope: !10130)
!10132 = !DILocation(line: 4324, column: 12, scope: !10130)
!10133 = !DILocation(line: 4325, column: 11, scope: !10130)
!10134 = !DILocation(line: 4325, column: 8, scope: !10130)
!10135 = !DILocation(line: 4327, column: 18, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 4326, column: 6)
!10137 = !DILocation(line: 4327, column: 16, scope: !10136)
!10138 = !DILocation(line: 4328, column: 8, scope: !10136)
!10139 = !DILocation(line: 4328, column: 34, scope: !10136)
!10140 = !DILocation(line: 4329, column: 8, scope: !10136)
!10141 = !DILocation(line: 0, scope: !9947)
!10142 = distinct !{!10142, !9978, !10143}
!10143 = !DILocation(line: 4336, column: 7, scope: !9933)
!10144 = !DILocation(line: 4339, column: 1, scope: !9933)
!10145 = distinct !DISubprogram(name: "zero_sized_type", scope: !3, file: !3, line: 3409, type: !2751, scopeLine: 3410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10146)
!10146 = !{!10147}
!10147 = !DILocalVariable(name: "type", arg: 1, scope: !10145, file: !3, line: 3409, type: !2175)
!10148 = !DILocation(line: 0, scope: !10145)
!10149 = !DILocation(line: 3411, column: 7, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 3411, column: 7)
!10151 = !DILocation(line: 3411, column: 31, scope: !10150)
!10152 = !DILocation(line: 3411, column: 34, scope: !10150)
!10153 = !DILocation(line: 3412, column: 7, scope: !10150)
!10154 = !DILocation(line: 3412, column: 10, scope: !10150)
!10155 = !DILocation(line: 3411, column: 7, scope: !10145)
!10156 = !DILocation(line: 3414, column: 3, scope: !10145)
!10157 = !DILocation(line: 3415, column: 1, scope: !10145)
!10158 = distinct !DISubprogram(name: "gimplify_modify_expr_to_memset", scope: !3, file: !3, line: 3153, type: !10159, scopeLine: 3155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10161)
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!390, !1093, !734, !727, !2939}
!10161 = !{!10162, !10163, !10164, !10165, !10166, !10167, !10168, !10169, !10170, !10171}
!10162 = !DILocalVariable(name: "expr_p", arg: 1, scope: !10158, file: !3, line: 3153, type: !1093)
!10163 = !DILocalVariable(name: "size", arg: 2, scope: !10158, file: !3, line: 3153, type: !734)
!10164 = !DILocalVariable(name: "want_value", arg: 3, scope: !10158, file: !3, line: 3153, type: !727)
!10165 = !DILocalVariable(name: "seq_p", arg: 4, scope: !10158, file: !3, line: 3154, type: !2939)
!10166 = !DILocalVariable(name: "t", scope: !10158, file: !3, line: 3156, type: !734)
!10167 = !DILocalVariable(name: "from", scope: !10158, file: !3, line: 3156, type: !734)
!10168 = !DILocalVariable(name: "to", scope: !10158, file: !3, line: 3156, type: !734)
!10169 = !DILocalVariable(name: "to_ptr", scope: !10158, file: !3, line: 3156, type: !734)
!10170 = !DILocalVariable(name: "gs", scope: !10158, file: !3, line: 3157, type: !1058)
!10171 = !DILocalVariable(name: "loc", scope: !10158, file: !3, line: 3158, type: !859)
!10172 = !DILocation(line: 0, scope: !10158)
!10173 = !DILocation(line: 3156, column: 3, scope: !10158)
!10174 = !DILocation(line: 3158, column: 20, scope: !10158)
!10175 = !DILocation(line: 3163, column: 10, scope: !10158)
!10176 = !DILocation(line: 3164, column: 7, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 3164, column: 7)
!10178 = !DILocation(line: 3164, column: 24, scope: !10177)
!10179 = !DILocation(line: 3164, column: 7, scope: !10158)
!10180 = !DILocation(line: 3165, column: 12, scope: !10177)
!10181 = !DILocation(line: 3167, column: 3, scope: !10158)
!10182 = !DILocation(line: 3165, column: 5, scope: !10177)
!10183 = !DILocation(line: 3171, column: 8, scope: !10158)
!10184 = !DILocation(line: 3173, column: 12, scope: !10158)
!10185 = !DILocation(line: 3173, column: 10, scope: !10158)
!10186 = !DILocation(line: 3174, column: 3, scope: !10158)
!10187 = !DILocation(line: 3175, column: 7, scope: !10158)
!10188 = !DILocation(line: 3177, column: 33, scope: !10158)
!10189 = !DILocation(line: 3177, column: 41, scope: !10158)
!10190 = !DILocation(line: 3177, column: 8, scope: !10158)
!10191 = !DILocation(line: 3179, column: 7, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 3179, column: 7)
!10193 = !DILocation(line: 3179, column: 7, scope: !10158)
!10194 = !DILocation(line: 3182, column: 27, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 3180, column: 5)
!10196 = !DILocation(line: 3182, column: 11, scope: !10195)
!10197 = !DILocation(line: 3183, column: 7, scope: !10195)
!10198 = !DILocation(line: 3184, column: 7, scope: !10195)
!10199 = !DILocation(line: 3186, column: 17, scope: !10195)
!10200 = !DILocation(line: 3187, column: 7, scope: !10195)
!10201 = !DILocation(line: 3190, column: 3, scope: !10158)
!10202 = !DILocation(line: 3192, column: 3, scope: !10158)
!10203 = !DILocation(line: 3193, column: 1, scope: !10158)
!10204 = distinct !DISubprogram(name: "gimplify_modify_expr_to_memcpy", scope: !3, file: !3, line: 3106, type: !10159, scopeLine: 3108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10205)
!10205 = !{!10206, !10207, !10208, !10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216}
!10206 = !DILocalVariable(name: "expr_p", arg: 1, scope: !10204, file: !3, line: 3106, type: !1093)
!10207 = !DILocalVariable(name: "size", arg: 2, scope: !10204, file: !3, line: 3106, type: !734)
!10208 = !DILocalVariable(name: "want_value", arg: 3, scope: !10204, file: !3, line: 3106, type: !727)
!10209 = !DILocalVariable(name: "seq_p", arg: 4, scope: !10204, file: !3, line: 3107, type: !2939)
!10210 = !DILocalVariable(name: "t", scope: !10204, file: !3, line: 3109, type: !734)
!10211 = !DILocalVariable(name: "to", scope: !10204, file: !3, line: 3109, type: !734)
!10212 = !DILocalVariable(name: "to_ptr", scope: !10204, file: !3, line: 3109, type: !734)
!10213 = !DILocalVariable(name: "from", scope: !10204, file: !3, line: 3109, type: !734)
!10214 = !DILocalVariable(name: "from_ptr", scope: !10204, file: !3, line: 3109, type: !734)
!10215 = !DILocalVariable(name: "gs", scope: !10204, file: !3, line: 3110, type: !1058)
!10216 = !DILocalVariable(name: "loc", scope: !10204, file: !3, line: 3111, type: !859)
!10217 = !DILocation(line: 0, scope: !10204)
!10218 = !DILocation(line: 3109, column: 3, scope: !10204)
!10219 = !DILocation(line: 3111, column: 20, scope: !10204)
!10220 = !DILocation(line: 3113, column: 8, scope: !10204)
!10221 = !DILocation(line: 3114, column: 10, scope: !10204)
!10222 = !DILocation(line: 3114, column: 8, scope: !10204)
!10223 = !DILocation(line: 3118, column: 3, scope: !10204)
!10224 = !DILocation(line: 3120, column: 21, scope: !10204)
!10225 = !DILocation(line: 3120, column: 3, scope: !10204)
!10226 = !DILocation(line: 3121, column: 45, scope: !10204)
!10227 = !DILocation(line: 3121, column: 14, scope: !10204)
!10228 = !DILocation(line: 3121, column: 12, scope: !10204)
!10229 = !DILocation(line: 3122, column: 3, scope: !10204)
!10230 = !DILocation(line: 3124, column: 3, scope: !10204)
!10231 = !DILocation(line: 3125, column: 12, scope: !10204)
!10232 = !DILocation(line: 3125, column: 10, scope: !10204)
!10233 = !DILocation(line: 3126, column: 3, scope: !10204)
!10234 = !DILocation(line: 3128, column: 7, scope: !10204)
!10235 = !DILocation(line: 3130, column: 33, scope: !10204)
!10236 = !DILocation(line: 3130, column: 41, scope: !10204)
!10237 = !DILocation(line: 3130, column: 8, scope: !10204)
!10238 = !DILocation(line: 3132, column: 7, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3132, column: 7)
!10240 = !DILocation(line: 3132, column: 7, scope: !10204)
!10241 = !DILocation(line: 3135, column: 27, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 3133, column: 5)
!10243 = !DILocation(line: 3135, column: 11, scope: !10242)
!10244 = !DILocation(line: 3136, column: 7, scope: !10242)
!10245 = !DILocation(line: 3137, column: 7, scope: !10242)
!10246 = !DILocation(line: 3139, column: 17, scope: !10242)
!10247 = !DILocation(line: 3140, column: 7, scope: !10242)
!10248 = !DILocation(line: 3143, column: 3, scope: !10204)
!10249 = !DILocation(line: 3145, column: 3, scope: !10204)
!10250 = !DILocation(line: 3146, column: 1, scope: !10204)
!10251 = distinct !DISubprogram(name: "gimplify_modify_expr_complex_part", scope: !3, file: !3, line: 4355, type: !5340, scopeLine: 4357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10252)
!10252 = !{!10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262, !10263}
!10253 = !DILocalVariable(name: "expr_p", arg: 1, scope: !10251, file: !3, line: 4355, type: !1093)
!10254 = !DILocalVariable(name: "pre_p", arg: 2, scope: !10251, file: !3, line: 4355, type: !2939)
!10255 = !DILocalVariable(name: "want_value", arg: 3, scope: !10251, file: !3, line: 4356, type: !727)
!10256 = !DILocalVariable(name: "code", scope: !10251, file: !3, line: 4358, type: !134)
!10257 = !DILocalVariable(name: "ocode", scope: !10251, file: !3, line: 4358, type: !134)
!10258 = !DILocalVariable(name: "lhs", scope: !10251, file: !3, line: 4359, type: !734)
!10259 = !DILocalVariable(name: "rhs", scope: !10251, file: !3, line: 4359, type: !734)
!10260 = !DILocalVariable(name: "new_rhs", scope: !10251, file: !3, line: 4359, type: !734)
!10261 = !DILocalVariable(name: "other", scope: !10251, file: !3, line: 4359, type: !734)
!10262 = !DILocalVariable(name: "realpart", scope: !10251, file: !3, line: 4359, type: !734)
!10263 = !DILocalVariable(name: "imagpart", scope: !10251, file: !3, line: 4359, type: !734)
!10264 = !DILocation(line: 0, scope: !10251)
!10265 = !DILocation(line: 4361, column: 9, scope: !10251)
!10266 = !DILocation(line: 4362, column: 9, scope: !10251)
!10267 = !DILocation(line: 4363, column: 10, scope: !10251)
!10268 = !DILocation(line: 4364, column: 9, scope: !10251)
!10269 = !DILocation(line: 4366, column: 16, scope: !10251)
!10270 = !DILocation(line: 4366, column: 11, scope: !10251)
!10271 = !DILocation(line: 4367, column: 11, scope: !10251)
!10272 = !DILocation(line: 4368, column: 11, scope: !10251)
!10273 = !DILocation(line: 4370, column: 14, scope: !10251)
!10274 = !DILocation(line: 4371, column: 14, scope: !10251)
!10275 = !DILocation(line: 4373, column: 7, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 4373, column: 7)
!10277 = !DILocation(line: 4373, column: 32, scope: !10276)
!10278 = !DILocation(line: 4373, column: 35, scope: !10276)
!10279 = !DILocation(line: 4373, column: 7, scope: !10251)
!10280 = !DILocation(line: 4374, column: 30, scope: !10276)
!10281 = !DILocation(line: 4374, column: 15, scope: !10276)
!10282 = !DILocation(line: 4374, column: 5, scope: !10276)
!10283 = !DILocation(line: 4376, column: 15, scope: !10276)
!10284 = !DILocation(line: 0, scope: !10276)
!10285 = !DILocation(line: 4378, column: 33, scope: !10251)
!10286 = !DILocation(line: 4378, column: 3, scope: !10251)
!10287 = !DILocation(line: 4379, column: 13, scope: !10251)
!10288 = !DILocation(line: 4379, column: 11, scope: !10251)
!10289 = !DILocation(line: 4381, column: 3, scope: !10251)
!10290 = distinct !DISubprogram(name: "gimple_call_noreturn_p", scope: !391, file: !391, line: 2178, type: !9278, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10291)
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "s", arg: 1, scope: !10290, file: !391, line: 2178, type: !1058)
!10293 = !DILocation(line: 0, scope: !10290)
!10294 = !DILocation(line: 2181, column: 11, scope: !10290)
!10295 = !DILocation(line: 2181, column: 10, scope: !10290)
!10296 = !DILocation(line: 2181, column: 3, scope: !10290)
!10297 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !391, file: !391, line: 1898, type: !3190, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10298)
!10298 = !{!10299, !10300}
!10299 = !DILocalVariable(name: "gs", arg: 1, scope: !10297, file: !391, line: 1898, type: !1058)
!10300 = !DILocalVariable(name: "lhs", arg: 2, scope: !10297, file: !391, line: 1898, type: !734)
!10301 = !DILocation(line: 0, scope: !10297)
!10302 = !DILocation(line: 1901, column: 3, scope: !10297)
!10303 = !DILocation(line: 1902, column: 7, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10297, file: !391, line: 1902, column: 7)
!10305 = !DILocation(line: 1902, column: 11, scope: !10304)
!10306 = !DILocation(line: 1902, column: 14, scope: !10304)
!10307 = !DILocation(line: 1902, column: 30, scope: !10304)
!10308 = !DILocation(line: 1902, column: 7, scope: !10297)
!10309 = !DILocation(line: 1903, column: 5, scope: !10304)
!10310 = !DILocation(line: 1903, column: 29, scope: !10304)
!10311 = !DILocation(line: 1904, column: 1, scope: !10297)
!10312 = distinct !DISubprogram(name: "gimplify_init_constructor", scope: !3, file: !3, line: 3609, type: !10313, scopeLine: 3611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10315)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{!390, !1093, !2939, !2939, !727, !727}
!10315 = !{!10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10329, !10330, !10331, !10332, !10333, !10334, !10337, !10338, !10341, !10344, !10346, !10347, !10350, !10352, !10353, !10356, !10357, !10361, !10367, !10368}
!10316 = !DILocalVariable(name: "expr_p", arg: 1, scope: !10312, file: !3, line: 3609, type: !1093)
!10317 = !DILocalVariable(name: "pre_p", arg: 2, scope: !10312, file: !3, line: 3609, type: !2939)
!10318 = !DILocalVariable(name: "post_p", arg: 3, scope: !10312, file: !3, line: 3609, type: !2939)
!10319 = !DILocalVariable(name: "want_value", arg: 4, scope: !10312, file: !3, line: 3610, type: !727)
!10320 = !DILocalVariable(name: "notify_temp_creation", arg: 5, scope: !10312, file: !3, line: 3610, type: !727)
!10321 = !DILocalVariable(name: "object", scope: !10312, file: !3, line: 3612, type: !734)
!10322 = !DILocalVariable(name: "ctor", scope: !10312, file: !3, line: 3612, type: !734)
!10323 = !DILocalVariable(name: "type", scope: !10312, file: !3, line: 3612, type: !734)
!10324 = !DILocalVariable(name: "ret", scope: !10312, file: !3, line: 3613, type: !390)
!10325 = !DILocalVariable(name: "elts", scope: !10312, file: !3, line: 3614, type: !1937)
!10326 = !DILocalVariable(name: "preeval_data", scope: !10327, file: !3, line: 3640, type: !2182)
!10327 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 3639, column: 7)
!10328 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 3634, column: 5)
!10329 = !DILocalVariable(name: "num_type_elements", scope: !10327, file: !3, line: 3641, type: !790)
!10330 = !DILocalVariable(name: "num_ctor_elements", scope: !10327, file: !3, line: 3641, type: !790)
!10331 = !DILocalVariable(name: "num_nonzero_elements", scope: !10327, file: !3, line: 3642, type: !790)
!10332 = !DILocalVariable(name: "cleared", scope: !10327, file: !3, line: 3643, type: !727)
!10333 = !DILocalVariable(name: "valid_const_initializer", scope: !10327, file: !3, line: 3643, type: !727)
!10334 = !DILocalVariable(name: "size", scope: !10335, file: !3, line: 3732, type: !790)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 3731, column: 4)
!10336 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3728, column: 6)
!10337 = !DILocalVariable(name: "align", scope: !10335, file: !3, line: 3733, type: !7)
!10338 = !DILocalVariable(name: "new_tree", scope: !10339, file: !3, line: 3756, type: !734)
!10339 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 3755, column: 8)
!10340 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 3752, column: 10)
!10341 = !DILocalVariable(name: "temp", scope: !10342, file: !3, line: 3789, type: !734)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 3788, column: 4)
!10343 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3785, column: 6)
!10344 = !DILocalVariable(name: "r", scope: !10345, file: !3, line: 3838, type: !734)
!10345 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 3837, column: 7)
!10346 = !DILocalVariable(name: "i", scope: !10345, file: !3, line: 3838, type: !734)
!10347 = !DILocalVariable(name: "zero", scope: !10348, file: !3, line: 3849, type: !734)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 3848, column: 4)
!10349 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 3847, column: 6)
!10350 = !DILocalVariable(name: "ix", scope: !10351, file: !3, line: 3878, type: !788)
!10351 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 3877, column: 7)
!10352 = !DILocalVariable(name: "ce", scope: !10351, file: !3, line: 3879, type: !4054)
!10353 = !DILocalVariable(name: "constant_p", scope: !10354, file: !3, line: 3887, type: !727)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 3886, column: 4)
!10355 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3885, column: 6)
!10356 = !DILocalVariable(name: "value", scope: !10354, file: !3, line: 3888, type: !734)
!10357 = !DILocalVariable(name: "tret", scope: !10358, file: !3, line: 3920, type: !390)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 3919, column: 4)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 3918, column: 2)
!10360 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3918, column: 2)
!10361 = !DILocalVariable(name: "lhs", scope: !10362, file: !3, line: 3949, type: !734)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 3948, column: 2)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 3947, column: 11)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 3944, column: 5)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3938, column: 12)
!10366 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 3936, column: 7)
!10367 = !DILocalVariable(name: "rhs", scope: !10362, file: !3, line: 3950, type: !734)
!10368 = !DILocalVariable(name: "init", scope: !10362, file: !3, line: 3951, type: !1058)
!10369 = !DILocation(line: 0, scope: !10312)
!10370 = !DILocation(line: 3616, column: 3, scope: !10312)
!10371 = !DILocation(line: 3618, column: 8, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 3618, column: 7)
!10373 = !DILocation(line: 3618, column: 7, scope: !10312)
!10374 = !DILocation(line: 3620, column: 29, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 3619, column: 5)
!10376 = !DILocation(line: 3620, column: 13, scope: !10375)
!10377 = !DILocation(line: 3622, column: 15, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 3622, column: 11)
!10379 = !DILocation(line: 3622, column: 11, scope: !10375)
!10380 = !DILocation(line: 3626, column: 12, scope: !10312)
!10381 = !DILocation(line: 3628, column: 41, scope: !10312)
!10382 = !DILocation(line: 3628, column: 5, scope: !10312)
!10383 = !DILocation(line: 3627, column: 10, scope: !10312)
!10384 = !DILocation(line: 3627, column: 36, scope: !10312)
!10385 = !DILocation(line: 3629, column: 10, scope: !10312)
!10386 = !DILocation(line: 3630, column: 10, scope: !10312)
!10387 = !DILocation(line: 3633, column: 11, scope: !10312)
!10388 = !DILocation(line: 3633, column: 3, scope: !10312)
!10389 = !DILocation(line: 3640, column: 2, scope: !10327)
!10390 = !DILocation(line: 3641, column: 2, scope: !10327)
!10391 = !DILocation(line: 3642, column: 2, scope: !10327)
!10392 = !DILocation(line: 0, scope: !10327)
!10393 = !DILocation(line: 3643, column: 2, scope: !10327)
!10394 = !DILocation(line: 3648, column: 6, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3648, column: 6)
!10396 = !DILocation(line: 3648, column: 6, scope: !10327)
!10397 = !DILocation(line: 0, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 3649, column: 4)
!10399 = !DILocation(line: 3659, column: 6, scope: !10327)
!10400 = !DILocation(line: 3664, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3664, column: 6)
!10402 = !DILocation(line: 3665, column: 9, scope: !10401)
!10403 = !DILocation(line: 3665, column: 30, scope: !10401)
!10404 = !DILocation(line: 3665, column: 6, scope: !10401)
!10405 = !DILocation(line: 3666, column: 9, scope: !10401)
!10406 = !DILocation(line: 3667, column: 6, scope: !10401)
!10407 = !DILocation(line: 3667, column: 28, scope: !10401)
!10408 = !DILocation(line: 3668, column: 6, scope: !10401)
!10409 = !DILocation(line: 3668, column: 10, scope: !10401)
!10410 = !DILocation(line: 3668, column: 31, scope: !10401)
!10411 = !DILocation(line: 3668, column: 36, scope: !10401)
!10412 = !DILocation(line: 3668, column: 40, scope: !10401)
!10413 = !DILocation(line: 3664, column: 6, scope: !10327)
!10414 = !DILocation(line: 3670, column: 10, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 3669, column: 4)
!10416 = !DILocation(line: 3672, column: 6, scope: !10415)
!10417 = !DILocation(line: 3672, column: 28, scope: !10415)
!10418 = !DILocation(line: 3673, column: 27, scope: !10415)
!10419 = !DILocation(line: 3674, column: 11, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 3674, column: 10)
!10421 = !DILocation(line: 3674, column: 10, scope: !10415)
!10422 = !DILocation(line: 3675, column: 29, scope: !10420)
!10423 = !DILocation(line: 3675, column: 27, scope: !10420)
!10424 = !DILocation(line: 3675, column: 8, scope: !10420)
!10425 = !DILocation(line: 3676, column: 6, scope: !10415)
!10426 = !DILocation(line: 3685, column: 6, scope: !10415)
!10427 = !DILocation(line: 3687, column: 14, scope: !10415)
!10428 = !DILocation(line: 3688, column: 6, scope: !10415)
!10429 = !DILocation(line: 3698, column: 22, scope: !10327)
!10430 = !DILocation(line: 3704, column: 24, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3704, column: 6)
!10432 = !DILocation(line: 3704, column: 28, scope: !10431)
!10433 = !DILocation(line: 3704, column: 31, scope: !10431)
!10434 = !DILocation(line: 3704, column: 56, scope: !10431)
!10435 = !DILocation(line: 3704, column: 6, scope: !10327)
!10436 = !DILocation(line: 3705, column: 12, scope: !10431)
!10437 = !DILocation(line: 3705, column: 4, scope: !10431)
!10438 = !DILocation(line: 3707, column: 31, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 3707, column: 11)
!10440 = !DILocation(line: 3707, column: 29, scope: !10439)
!10441 = !DILocation(line: 3708, column: 6, scope: !10439)
!10442 = !DILocation(line: 3708, column: 4, scope: !10439)
!10443 = !DILocation(line: 3709, column: 4, scope: !10439)
!10444 = !DILocation(line: 3709, column: 7, scope: !10439)
!10445 = !DILocation(line: 3709, column: 47, scope: !10439)
!10446 = !DILocation(line: 3709, column: 28, scope: !10439)
!10447 = !DILocation(line: 3707, column: 11, scope: !10431)
!10448 = !DILocation(line: 3710, column: 12, scope: !10439)
!10449 = !DILocation(line: 3710, column: 4, scope: !10439)
!10450 = !DILocation(line: 3716, column: 11, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 3716, column: 11)
!10452 = !DILocation(line: 3716, column: 29, scope: !10451)
!10453 = !DILocation(line: 3716, column: 11, scope: !10439)
!10454 = !DILocation(line: 3717, column: 12, scope: !10451)
!10455 = !DILocation(line: 3717, column: 4, scope: !10451)
!10456 = !DILocation(line: 3728, column: 6, scope: !10336)
!10457 = !DILocation(line: 3729, column: 6, scope: !10336)
!10458 = !DILocation(line: 3729, column: 11, scope: !10336)
!10459 = !DILocation(line: 3729, column: 22, scope: !10336)
!10460 = !DILocation(line: 3729, column: 43, scope: !10336)
!10461 = !DILocation(line: 3729, column: 19, scope: !10336)
!10462 = !DILocation(line: 3730, column: 10, scope: !10336)
!10463 = !DILocation(line: 3728, column: 6, scope: !10327)
!10464 = !DILocation(line: 3732, column: 27, scope: !10335)
!10465 = !DILocation(line: 0, scope: !10335)
!10466 = !DILocation(line: 3738, column: 15, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 3738, column: 10)
!10468 = !DILocation(line: 3738, column: 10, scope: !10335)
!10469 = !DILocation(line: 3740, column: 29, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 3739, column: 8)
!10471 = !DILocation(line: 3740, column: 10, scope: !10470)
!10472 = !DILocation(line: 3741, column: 12, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 3741, column: 7)
!10474 = !DILocation(line: 3741, column: 7, scope: !10470)
!10475 = !DILocation(line: 3742, column: 31, scope: !10473)
!10476 = !DILocation(line: 3742, column: 22, scope: !10473)
!10477 = !DILocation(line: 3742, column: 5, scope: !10473)
!10478 = !DILocation(line: 3747, column: 10, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 3747, column: 10)
!10480 = !DILocation(line: 3747, column: 10, scope: !10335)
!10481 = !DILocation(line: 3748, column: 8, scope: !10479)
!10482 = !DILocation(line: 0, scope: !10479)
!10483 = !DILocation(line: 3752, column: 15, scope: !10340)
!10484 = !DILocation(line: 3753, column: 6, scope: !10340)
!10485 = !DILocation(line: 3753, column: 27, scope: !10340)
!10486 = !DILocation(line: 3753, column: 3, scope: !10340)
!10487 = !DILocation(line: 3754, column: 7, scope: !10340)
!10488 = !DILocation(line: 3752, column: 10, scope: !10335)
!10489 = !DILocation(line: 3758, column: 7, scope: !10339)
!10490 = !DILocation(line: 3761, column: 14, scope: !10339)
!10491 = !DILocation(line: 0, scope: !10339)
!10492 = !DILocation(line: 3763, column: 3, scope: !10339)
!10493 = !DILocation(line: 3764, column: 3, scope: !10339)
!10494 = !DILocation(line: 3764, column: 26, scope: !10339)
!10495 = !DILocation(line: 3765, column: 28, scope: !10339)
!10496 = !DILocation(line: 3766, column: 3, scope: !10339)
!10497 = !DILocation(line: 3766, column: 27, scope: !10339)
!10498 = !DILocation(line: 3767, column: 15, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3767, column: 7)
!10500 = !DILocation(line: 3767, column: 13, scope: !10499)
!10501 = !DILocation(line: 3767, column: 7, scope: !10339)
!10502 = !DILocation(line: 3769, column: 29, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 3768, column: 5)
!10504 = !DILocation(line: 3770, column: 34, scope: !10503)
!10505 = !DILocation(line: 3771, column: 5, scope: !10503)
!10506 = !DILocation(line: 3772, column: 10, scope: !10339)
!10507 = !DILocation(line: 3774, column: 3, scope: !10339)
!10508 = !DILocation(line: 3774, column: 29, scope: !10339)
!10509 = !DILocation(line: 3779, column: 3, scope: !10339)
!10510 = !DILocation(line: 3785, column: 6, scope: !10343)
!10511 = !DILocation(line: 3786, column: 6, scope: !10343)
!10512 = !DILocation(line: 3786, column: 10, scope: !10343)
!10513 = !DILocation(line: 3787, column: 9, scope: !10343)
!10514 = !DILocation(line: 3787, column: 30, scope: !10343)
!10515 = !DILocation(line: 3787, column: 6, scope: !10343)
!10516 = !DILocation(line: 3789, column: 34, scope: !10342)
!10517 = !DILocation(line: 3789, column: 18, scope: !10342)
!10518 = !DILocation(line: 0, scope: !10342)
!10519 = !DILocation(line: 3790, column: 6, scope: !10342)
!10520 = !DILocation(line: 3790, column: 32, scope: !10342)
!10521 = !DILocation(line: 3791, column: 16, scope: !10342)
!10522 = !DILocation(line: 3791, column: 14, scope: !10342)
!10523 = !DILocation(line: 3798, column: 6, scope: !10327)
!10524 = !DILocation(line: 3804, column: 6, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3804, column: 6)
!10526 = !DILocation(line: 3804, column: 27, scope: !10525)
!10527 = !DILocation(line: 3804, column: 6, scope: !10327)
!10528 = !DILocation(line: 3806, column: 35, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 3805, column: 4)
!10530 = !DILocation(line: 3806, column: 19, scope: !10529)
!10531 = !DILocation(line: 3806, column: 33, scope: !10529)
!10532 = !DILocation(line: 3807, column: 11, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 3807, column: 10)
!10534 = !DILocation(line: 3807, column: 10, scope: !10529)
!10535 = !DILocation(line: 3808, column: 35, scope: !10533)
!10536 = !DILocation(line: 3808, column: 8, scope: !10533)
!10537 = !DILocation(line: 3809, column: 35, scope: !10529)
!10538 = !DILocation(line: 3809, column: 19, scope: !10529)
!10539 = !DILocation(line: 3809, column: 33, scope: !10529)
!10540 = !DILocation(line: 3811, column: 35, scope: !10529)
!10541 = !DILocation(line: 3811, column: 6, scope: !10529)
!10542 = !DILocation(line: 3813, column: 4, scope: !10529)
!10543 = !DILocation(line: 3815, column: 6, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3815, column: 6)
!10545 = !DILocation(line: 3815, column: 6, scope: !10327)
!10546 = !DILocation(line: 3820, column: 30, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 3816, column: 4)
!10548 = !DILocation(line: 3821, column: 6, scope: !10547)
!10549 = !DILocation(line: 3821, column: 31, scope: !10547)
!10550 = !DILocation(line: 3822, column: 15, scope: !10547)
!10551 = !DILocation(line: 3823, column: 6, scope: !10547)
!10552 = !DILocation(line: 3829, column: 7, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3829, column: 6)
!10554 = !DILocation(line: 3824, column: 4, scope: !10547)
!10555 = !DILocation(line: 3829, column: 18, scope: !10553)
!10556 = !DILocation(line: 3829, column: 39, scope: !10553)
!10557 = !DILocation(line: 3829, column: 15, scope: !10553)
!10558 = !DILocation(line: 3830, column: 4, scope: !10553)
!10559 = !DILocation(line: 3832, column: 10, scope: !10327)
!10560 = !DILocation(line: 3833, column: 7, scope: !10328)
!10561 = !DILocation(line: 3840, column: 6, scope: !10345)
!10562 = !DILocation(line: 3844, column: 2, scope: !10345)
!10563 = !DILocation(line: 3845, column: 6, scope: !10345)
!10564 = !DILocation(line: 3845, column: 44, scope: !10345)
!10565 = !DILocation(line: 0, scope: !10345)
!10566 = !DILocation(line: 3846, column: 6, scope: !10345)
!10567 = !DILocation(line: 3846, column: 44, scope: !10345)
!10568 = !DILocation(line: 3847, column: 8, scope: !10349)
!10569 = !DILocation(line: 3847, column: 21, scope: !10349)
!10570 = !DILocation(line: 3847, column: 16, scope: !10349)
!10571 = !DILocation(line: 3849, column: 18, scope: !10348)
!10572 = !DILocation(line: 0, scope: !10348)
!10573 = !DILocation(line: 3850, column: 10, scope: !10348)
!10574 = !DILocation(line: 3852, column: 10, scope: !10348)
!10575 = !DILocation(line: 3858, column: 6, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 3858, column: 6)
!10577 = !DILocation(line: 3858, column: 24, scope: !10576)
!10578 = !DILocation(line: 3858, column: 27, scope: !10576)
!10579 = !DILocation(line: 3858, column: 6, scope: !10345)
!10580 = !DILocation(line: 3860, column: 13, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 3859, column: 4)
!10582 = !DILocation(line: 3861, column: 6, scope: !10581)
!10583 = !DILocation(line: 3861, column: 32, scope: !10581)
!10584 = !DILocation(line: 3862, column: 4, scope: !10581)
!10585 = !DILocation(line: 3865, column: 13, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 3864, column: 4)
!10587 = !DILocation(line: 3866, column: 6, scope: !10586)
!10588 = !DILocation(line: 3866, column: 32, scope: !10586)
!10589 = !DILocation(line: 3867, column: 28, scope: !10586)
!10590 = !DILocation(line: 3870, column: 25, scope: !10586)
!10591 = !DILocation(line: 3870, column: 6, scope: !10586)
!10592 = !DILocation(line: 3867, column: 12, scope: !10586)
!10593 = !DILocation(line: 3631, column: 7, scope: !10312)
!10594 = !DILocation(line: 3879, column: 2, scope: !10351)
!10595 = !DILocation(line: 3881, column: 6, scope: !10351)
!10596 = !DILocation(line: 3885, column: 6, scope: !10355)
!10597 = !DILocation(line: 3885, column: 6, scope: !10351)
!10598 = !DILocation(line: 0, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 3894, column: 6)
!10600 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3894, column: 6)
!10601 = !DILocation(line: 3894, column: 6, scope: !10600)
!10602 = !DILocation(line: 0, scope: !10600)
!10603 = !DILocation(line: 0, scope: !10354)
!10604 = !DILocation(line: 0, scope: !10351)
!10605 = !DILocation(line: 3894, column: 6, scope: !10599)
!10606 = !DILocation(line: 3895, column: 13, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 3895, column: 12)
!10608 = !DILocation(line: 3895, column: 12, scope: !10599)
!10609 = distinct !{!10609, !10601, !10610}
!10610 = !DILocation(line: 3899, column: 3, scope: !10600)
!10611 = !DILocation(line: 3901, column: 10, scope: !10354)
!10612 = !DILocation(line: 3903, column: 31, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 3902, column: 8)
!10614 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3901, column: 10)
!10615 = !DILocation(line: 3903, column: 3, scope: !10613)
!10616 = !DILocation(line: 3903, column: 29, scope: !10613)
!10617 = !DILocation(line: 3904, column: 3, scope: !10613)
!10618 = !DILocation(line: 3910, column: 10, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3910, column: 10)
!10620 = !DILocation(line: 3910, column: 10, scope: !10354)
!10621 = !DILocation(line: 3913, column: 27, scope: !10354)
!10622 = !DILocation(line: 3914, column: 4, scope: !10355)
!10623 = !DILocation(line: 0, scope: !10359)
!10624 = !DILocation(line: 3918, column: 7, scope: !10360)
!10625 = !DILocation(line: 0, scope: !10360)
!10626 = !DILocation(line: 3918, column: 15, scope: !10359)
!10627 = !DILocation(line: 3918, column: 2, scope: !10360)
!10628 = !DILocation(line: 3921, column: 29, scope: !10358)
!10629 = !DILocation(line: 3921, column: 33, scope: !10358)
!10630 = !DILocation(line: 3921, column: 13, scope: !10358)
!10631 = !DILocation(line: 0, scope: !10358)
!10632 = !DILocation(line: 3923, column: 15, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 3923, column: 10)
!10634 = !DILocation(line: 3923, column: 10, scope: !10358)
!10635 = !DILocation(line: 3918, column: 62, scope: !10359)
!10636 = !DILocation(line: 3918, column: 2, scope: !10359)
!10637 = distinct !{!10637, !10627, !10638}
!10638 = !DILocation(line: 3925, column: 4, scope: !10360)
!10639 = !DILocation(line: 3926, column: 22, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3926, column: 6)
!10641 = !DILocation(line: 3926, column: 7, scope: !10640)
!10642 = !DILocation(line: 3926, column: 6, scope: !10351)
!10643 = !DILocation(line: 3927, column: 32, scope: !10640)
!10644 = !DILocation(line: 3927, column: 4, scope: !10640)
!10645 = !DILocation(line: 3927, column: 30, scope: !10640)
!10646 = !DILocation(line: 3928, column: 7, scope: !10328)
!10647 = !DILocation(line: 3933, column: 7, scope: !10328)
!10648 = !DILocation(line: 3934, column: 5, scope: !10328)
!10649 = !DILocation(line: 3626, column: 10, scope: !10312)
!10650 = !DILocation(line: 3936, column: 11, scope: !10366)
!10651 = !DILocation(line: 3936, column: 7, scope: !10312)
!10652 = !DILocation(line: 3938, column: 12, scope: !10365)
!10653 = !DILocation(line: 3938, column: 12, scope: !10366)
!10654 = !DILocation(line: 3940, column: 15, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 3939, column: 5)
!10656 = !DILocation(line: 3941, column: 7, scope: !10655)
!10657 = !DILocation(line: 3947, column: 11, scope: !10363)
!10658 = !DILocation(line: 3947, column: 11, scope: !10364)
!10659 = !DILocation(line: 3949, column: 15, scope: !10362)
!10660 = !DILocation(line: 0, scope: !10362)
!10661 = !DILocation(line: 3950, column: 15, scope: !10362)
!10662 = !DILocation(line: 3951, column: 18, scope: !10362)
!10663 = !DILocation(line: 3952, column: 4, scope: !10362)
!10664 = !DILocation(line: 3953, column: 12, scope: !10362)
!10665 = !DILocation(line: 3954, column: 2, scope: !10362)
!10666 = !DILocation(line: 3958, column: 1, scope: !10312)
!10667 = distinct !DISubprogram(name: "gimple_fold_indirect_ref_rhs", scope: !3, file: !3, line: 4088, type: !3444, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10668)
!10668 = !{!10669}
!10669 = !DILocalVariable(name: "t", arg: 1, scope: !10667, file: !3, line: 4088, type: !734)
!10670 = !DILocation(line: 0, scope: !10667)
!10671 = !DILocation(line: 4090, column: 10, scope: !10667)
!10672 = !DILocation(line: 4090, column: 3, scope: !10667)
!10673 = distinct !DISubprogram(name: "optimize_compound_literals_in_ctor", scope: !3, file: !3, line: 3556, type: !3444, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10674)
!10674 = !{!10675, !10676, !10677, !10678, !10679, !10680, !10684, !10685, !10689, !10690}
!10675 = !DILocalVariable(name: "orig_ctor", arg: 1, scope: !10673, file: !3, line: 3556, type: !734)
!10676 = !DILocalVariable(name: "ctor", scope: !10673, file: !3, line: 3558, type: !734)
!10677 = !DILocalVariable(name: "elts", scope: !10673, file: !3, line: 3559, type: !1937)
!10678 = !DILocalVariable(name: "idx", scope: !10673, file: !3, line: 3560, type: !7)
!10679 = !DILocalVariable(name: "num", scope: !10673, file: !3, line: 3560, type: !7)
!10680 = !DILocalVariable(name: "value", scope: !10681, file: !3, line: 3564, type: !734)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 3563, column: 5)
!10682 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 3562, column: 3)
!10683 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3562, column: 3)
!10684 = !DILocalVariable(name: "newval", scope: !10681, file: !3, line: 3565, type: !734)
!10685 = !DILocalVariable(name: "decl_s", scope: !10686, file: !3, line: 3570, type: !734)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 3569, column: 2)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 3568, column: 16)
!10688 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 3566, column: 11)
!10689 = !DILocalVariable(name: "decl", scope: !10686, file: !3, line: 3571, type: !734)
!10690 = !DILocalVariable(name: "init", scope: !10686, file: !3, line: 3572, type: !734)
!10691 = !DILocation(line: 0, scope: !10673)
!10692 = !DILocation(line: 3559, column: 35, scope: !10673)
!10693 = !DILocation(line: 3560, column: 27, scope: !10673)
!10694 = !DILocation(line: 3562, column: 8, scope: !10683)
!10695 = !DILocation(line: 0, scope: !10683)
!10696 = !DILocation(line: 3559, column: 28, scope: !10673)
!10697 = !DILocation(line: 3558, column: 8, scope: !10673)
!10698 = !DILocation(line: 3562, column: 21, scope: !10682)
!10699 = !DILocation(line: 3562, column: 3, scope: !10683)
!10700 = !DILocation(line: 3564, column: 20, scope: !10681)
!10701 = !DILocation(line: 3564, column: 60, scope: !10681)
!10702 = !DILocation(line: 0, scope: !10681)
!10703 = !DILocation(line: 3566, column: 11, scope: !10688)
!10704 = !DILocation(line: 3566, column: 29, scope: !10688)
!10705 = !DILocation(line: 3566, column: 11, scope: !10681)
!10706 = !DILocation(line: 3567, column: 11, scope: !10688)
!10707 = !DILocation(line: 3567, column: 2, scope: !10688)
!10708 = !DILocation(line: 3568, column: 34, scope: !10687)
!10709 = !DILocation(line: 3568, column: 16, scope: !10688)
!10710 = !DILocation(line: 3570, column: 18, scope: !10686)
!10711 = !DILocation(line: 3571, column: 16, scope: !10686)
!10712 = !DILocation(line: 0, scope: !10686)
!10713 = !DILocation(line: 3572, column: 16, scope: !10686)
!10714 = !DILocation(line: 3574, column: 9, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 3574, column: 8)
!10716 = !DILocation(line: 3575, column: 8, scope: !10715)
!10717 = !DILocation(line: 3575, column: 12, scope: !10715)
!10718 = !DILocation(line: 3576, column: 11, scope: !10715)
!10719 = !DILocation(line: 3576, column: 8, scope: !10715)
!10720 = !DILocation(line: 3577, column: 15, scope: !10715)
!10721 = !DILocation(line: 3577, column: 6, scope: !10715)
!10722 = !DILocation(line: 3579, column: 18, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 3579, column: 11)
!10724 = !DILocation(line: 3579, column: 11, scope: !10681)
!10725 = !DILocation(line: 3582, column: 16, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 3582, column: 11)
!10727 = !DILocation(line: 3582, column: 11, scope: !10681)
!10728 = !DILocation(line: 3584, column: 11, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 3583, column: 2)
!10730 = !DILocation(line: 3585, column: 30, scope: !10729)
!10731 = !DILocation(line: 3585, column: 4, scope: !10729)
!10732 = !DILocation(line: 3585, column: 28, scope: !10729)
!10733 = !DILocation(line: 3587, column: 2, scope: !10729)
!10734 = !DILocation(line: 3588, column: 7, scope: !10681)
!10735 = !DILocation(line: 3588, column: 47, scope: !10681)
!10736 = !DILocation(line: 3588, column: 53, scope: !10681)
!10737 = !DILocation(line: 3589, column: 5, scope: !10682)
!10738 = !DILocation(line: 3562, column: 31, scope: !10682)
!10739 = !DILocation(line: 3562, column: 3, scope: !10682)
!10740 = distinct !{!10740, !10699, !10741}
!10741 = !DILocation(line: 3589, column: 5, scope: !10683)
!10742 = !DILocation(line: 3590, column: 3, scope: !10673)
!10743 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !10744, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10748)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{!7, !10746}
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10747, size: 64)
!10747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1942)
!10748 = !{!10749}
!10749 = !DILocalVariable(name: "vec_", arg: 1, scope: !10743, file: !135, line: 1537, type: !10746)
!10750 = !DILocation(line: 0, scope: !10743)
!10751 = !DILocation(line: 1537, column: 1, scope: !10743)
!10752 = distinct !DISubprogram(name: "gimplify_init_ctor_preeval", scope: !3, file: !3, line: 3253, type: !10753, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{null, !1093, !2939, !2939, !2181}
!10755 = !{!10756, !10757, !10758, !10759, !10760, !10761, !10764, !10765}
!10756 = !DILocalVariable(name: "expr_p", arg: 1, scope: !10752, file: !3, line: 3253, type: !1093)
!10757 = !DILocalVariable(name: "pre_p", arg: 2, scope: !10752, file: !3, line: 3253, type: !2939)
!10758 = !DILocalVariable(name: "post_p", arg: 3, scope: !10752, file: !3, line: 3253, type: !2939)
!10759 = !DILocalVariable(name: "data", arg: 4, scope: !10752, file: !3, line: 3254, type: !2181)
!10760 = !DILocalVariable(name: "one", scope: !10752, file: !3, line: 3256, type: !390)
!10761 = !DILocalVariable(name: "ix", scope: !10762, file: !3, line: 3274, type: !788)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 3273, column: 5)
!10763 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3272, column: 7)
!10764 = !DILocalVariable(name: "ce", scope: !10762, file: !3, line: 3275, type: !4054)
!10765 = !DILocalVariable(name: "v", scope: !10762, file: !3, line: 3276, type: !1937)
!10766 = !DILocation(line: 0, scope: !10752)
!10767 = !DILocation(line: 3259, column: 7, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3259, column: 7)
!10769 = !DILocation(line: 3259, column: 7, scope: !10752)
!10770 = !DILocation(line: 3263, column: 7, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3260, column: 5)
!10772 = !DILocation(line: 3268, column: 7, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3268, column: 7)
!10774 = !DILocation(line: 3268, column: 7, scope: !10752)
!10775 = !DILocation(line: 3272, column: 27, scope: !10763)
!10776 = !DILocation(line: 3272, column: 7, scope: !10752)
!10777 = !DILocation(line: 3275, column: 7, scope: !10762)
!10778 = !DILocation(line: 3276, column: 36, scope: !10762)
!10779 = !DILocation(line: 0, scope: !10762)
!10780 = !DILocation(line: 0, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 3278, column: 7)
!10782 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 3278, column: 7)
!10783 = !DILocation(line: 3278, column: 12, scope: !10782)
!10784 = !DILocation(line: 0, scope: !10782)
!10785 = !DILocation(line: 3278, column: 20, scope: !10781)
!10786 = !DILocation(line: 3278, column: 7, scope: !10782)
!10787 = !DILocation(line: 3279, column: 31, scope: !10781)
!10788 = !DILocation(line: 3279, column: 35, scope: !10781)
!10789 = !DILocation(line: 3279, column: 2, scope: !10781)
!10790 = !DILocation(line: 3278, column: 64, scope: !10781)
!10791 = !DILocation(line: 3278, column: 7, scope: !10781)
!10792 = distinct !{!10792, !10786, !10793}
!10793 = !DILocation(line: 3279, column: 61, scope: !10782)
!10794 = !DILocation(line: 3282, column: 5, scope: !10763)
!10795 = !DILocation(line: 3285, column: 3, scope: !10752)
!10796 = !DILocation(line: 3293, column: 9, scope: !10752)
!10797 = !DILocation(line: 3294, column: 11, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3294, column: 7)
!10799 = !DILocation(line: 3294, column: 7, scope: !10752)
!10800 = !DILocation(line: 3296, column: 15, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 3295, column: 5)
!10802 = !DILocation(line: 3297, column: 7, scope: !10801)
!10803 = !DILocation(line: 3304, column: 7, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3304, column: 7)
!10805 = !DILocation(line: 3304, column: 7, scope: !10752)
!10806 = !DILocation(line: 3309, column: 7, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3309, column: 7)
!10808 = !DILocation(line: 3309, column: 51, scope: !10807)
!10809 = !DILocation(line: 3309, column: 7, scope: !10752)
!10810 = !DILocation(line: 3313, column: 8, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 3313, column: 7)
!10812 = !DILocation(line: 3313, column: 7, scope: !10752)
!10813 = !DILocation(line: 3317, column: 33, scope: !10752)
!10814 = !DILocation(line: 3317, column: 13, scope: !10752)
!10815 = !DILocation(line: 3317, column: 11, scope: !10752)
!10816 = !DILocation(line: 3318, column: 1, scope: !10752)
!10817 = distinct !DISubprogram(name: "gimplify_init_ctor_eval", scope: !3, file: !3, line: 3424, type: !10818, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !734, !1937, !2939, !727}
!10820 = !{!10821, !10822, !10823, !10824, !10825, !10826, !10827, !10828, !10829, !10833, !10836, !10837}
!10821 = !DILocalVariable(name: "object", arg: 1, scope: !10817, file: !3, line: 3424, type: !734)
!10822 = !DILocalVariable(name: "elts", arg: 2, scope: !10817, file: !3, line: 3424, type: !1937)
!10823 = !DILocalVariable(name: "pre_p", arg: 3, scope: !10817, file: !3, line: 3425, type: !2939)
!10824 = !DILocalVariable(name: "cleared", arg: 4, scope: !10817, file: !3, line: 3425, type: !727)
!10825 = !DILocalVariable(name: "array_elt_type", scope: !10817, file: !3, line: 3427, type: !734)
!10826 = !DILocalVariable(name: "ix", scope: !10817, file: !3, line: 3428, type: !788)
!10827 = !DILocalVariable(name: "purpose", scope: !10817, file: !3, line: 3429, type: !734)
!10828 = !DILocalVariable(name: "value", scope: !10817, file: !3, line: 3429, type: !734)
!10829 = !DILocalVariable(name: "cref", scope: !10830, file: !3, line: 3436, type: !734)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 3435, column: 5)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 3434, column: 3)
!10832 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 3434, column: 3)
!10833 = !DILocalVariable(name: "lower", scope: !10834, file: !3, line: 3461, type: !734)
!10834 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 3460, column: 2)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3459, column: 11)
!10836 = !DILocalVariable(name: "upper", scope: !10834, file: !3, line: 3462, type: !734)
!10837 = !DILocalVariable(name: "init", scope: !10838, file: !3, line: 3498, type: !734)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 3497, column: 2)
!10839 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3492, column: 11)
!10840 = !DILocation(line: 0, scope: !10817)
!10841 = !DILocation(line: 3431, column: 7, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 3431, column: 7)
!10843 = !DILocation(line: 3431, column: 38, scope: !10842)
!10844 = !DILocation(line: 3431, column: 7, scope: !10817)
!10845 = !DILocation(line: 3432, column: 22, scope: !10842)
!10846 = !DILocation(line: 3432, column: 5, scope: !10842)
!10847 = !DILocation(line: 0, scope: !10831)
!10848 = !DILocation(line: 0, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3442, column: 11)
!10850 = !DILocation(line: 0, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3476, column: 11)
!10852 = !DILocation(line: 0, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 3479, column: 8)
!10854 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 3477, column: 2)
!10855 = !DILocation(line: 3434, column: 3, scope: !10832)
!10856 = !DILocation(line: 0, scope: !10832)
!10857 = !DILocation(line: 3434, column: 3, scope: !10831)
!10858 = !DILocation(line: 3439, column: 17, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3439, column: 11)
!10860 = !DILocation(line: 3439, column: 11, scope: !10830)
!10861 = !DILocation(line: 3442, column: 19, scope: !10849)
!10862 = !DILocation(line: 3442, column: 22, scope: !10849)
!10863 = !DILocation(line: 3442, column: 11, scope: !10830)
!10864 = !DILocation(line: 3447, column: 7, scope: !10830)
!10865 = !DILocation(line: 3454, column: 13, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3454, column: 11)
!10867 = !DILocation(line: 3454, column: 39, scope: !10866)
!10868 = !DILocation(line: 3454, column: 42, scope: !10866)
!10869 = !DILocation(line: 3454, column: 11, scope: !10830)
!10870 = !DILocation(line: 3459, column: 11, scope: !10835)
!10871 = !DILocation(line: 3459, column: 31, scope: !10835)
!10872 = !DILocation(line: 3459, column: 11, scope: !10830)
!10873 = !DILocation(line: 3461, column: 17, scope: !10834)
!10874 = !DILocation(line: 0, scope: !10834)
!10875 = !DILocation(line: 3462, column: 17, scope: !10834)
!10876 = !DILocation(line: 3466, column: 8, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 3466, column: 8)
!10878 = !DILocation(line: 3466, column: 8, scope: !10834)
!10879 = !DILocation(line: 3470, column: 8, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 3469, column: 6)
!10881 = !DILocation(line: 3472, column: 8, scope: !10880)
!10882 = !DILocation(line: 3476, column: 11, scope: !10830)
!10883 = !DILocation(line: 3479, column: 8, scope: !10853)
!10884 = !DILocation(line: 3479, column: 8, scope: !10854)
!10885 = !DILocation(line: 3480, column: 16, scope: !10853)
!10886 = !DILocation(line: 3480, column: 6, scope: !10853)
!10887 = !DILocation(line: 0, scope: !10830)
!10888 = !DILocation(line: 3482, column: 11, scope: !10854)
!10889 = !DILocation(line: 3484, column: 2, scope: !10854)
!10890 = !DILocation(line: 3487, column: 4, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 3486, column: 2)
!10892 = !DILocation(line: 3488, column: 11, scope: !10891)
!10893 = !DILocation(line: 3492, column: 11, scope: !10839)
!10894 = !DILocation(line: 3492, column: 29, scope: !10839)
!10895 = !DILocation(line: 3493, column: 4, scope: !10839)
!10896 = !DILocation(line: 3493, column: 7, scope: !10839)
!10897 = !DILocation(line: 3493, column: 37, scope: !10839)
!10898 = !DILocation(line: 3492, column: 11, scope: !10830)
!10899 = !DILocation(line: 3494, column: 33, scope: !10839)
!10900 = !DILocation(line: 3494, column: 2, scope: !10839)
!10901 = !DILocation(line: 3498, column: 16, scope: !10838)
!10902 = !DILocation(line: 0, scope: !10838)
!10903 = !DILocation(line: 3499, column: 4, scope: !10838)
!10904 = !DILocation(line: 3500, column: 14, scope: !10838)
!10905 = !DILocation(line: 3500, column: 4, scope: !10838)
!10906 = distinct !{!10906, !10855, !10907}
!10907 = !DILocation(line: 3502, column: 5, scope: !10832)
!10908 = !DILocation(line: 3503, column: 1, scope: !10817)
!10909 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !135, file: !135, line: 1537, type: !10910, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10912)
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!4054, !6537, !7}
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "vec_", arg: 1, scope: !10909, file: !135, line: 1537, type: !6537)
!10914 = !DILocalVariable(name: "ix_", arg: 2, scope: !10909, file: !135, line: 1537, type: !7)
!10915 = !DILocation(line: 0, scope: !10909)
!10916 = !DILocation(line: 1537, column: 1, scope: !10909)
!10917 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_copy", scope: !135, file: !135, line: 1538, type: !10918, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10920)
!10918 = !DISubroutineType(types: !10919)
!10919 = !{!1937, !6537}
!10920 = !{!10921, !10922, !10923}
!10921 = !DILocalVariable(name: "vec_", arg: 1, scope: !10917, file: !135, line: 1538, type: !6537)
!10922 = !DILocalVariable(name: "len_", scope: !10917, file: !135, line: 1538, type: !1204)
!10923 = !DILocalVariable(name: "new_vec_", scope: !10917, file: !135, line: 1538, type: !1937)
!10924 = !DILocation(line: 0, scope: !10917)
!10925 = !DILocation(line: 1538, column: 1, scope: !10917)
!10926 = !DILocation(line: 1538, column: 1, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10917, file: !135, line: 1538, column: 1)
!10928 = !DILocation(line: 1538, column: 1, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10927, file: !135, line: 1538, column: 1)
!10930 = distinct !DISubprogram(name: "gimplify_init_ctor_preeval_1", scope: !3, file: !3, line: 3210, type: !3453, scopeLine: 3211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10931)
!10931 = !{!10932, !10933, !10934, !10935, !10936, !10937, !10940}
!10932 = !DILocalVariable(name: "tp", arg: 1, scope: !10930, file: !3, line: 3210, type: !1093)
!10933 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !10930, file: !3, line: 3210, type: !3455)
!10934 = !DILocalVariable(name: "xdata", arg: 3, scope: !10930, file: !3, line: 3210, type: !731)
!10935 = !DILocalVariable(name: "data", scope: !10930, file: !3, line: 3212, type: !2181)
!10936 = !DILocalVariable(name: "t", scope: !10930, file: !3, line: 3214, type: !734)
!10937 = !DILocalVariable(name: "type", scope: !10938, file: !3, line: 3232, type: !734)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 3231, column: 5)
!10939 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3230, column: 7)
!10940 = !DILocalVariable(name: "fntype", scope: !10938, file: !3, line: 3232, type: !734)
!10941 = !DILocation(line: 0, scope: !10930)
!10942 = !DILocation(line: 3214, column: 12, scope: !10930)
!10943 = !DILocation(line: 3217, column: 13, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3217, column: 7)
!10945 = !DILocation(line: 3217, column: 27, scope: !10944)
!10946 = !DILocation(line: 3217, column: 7, scope: !10930)
!10947 = !DILocation(line: 3223, column: 7, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3223, column: 7)
!10949 = !DILocation(line: 3223, column: 21, scope: !10948)
!10950 = !DILocation(line: 3224, column: 7, scope: !10948)
!10951 = !DILocation(line: 3224, column: 12, scope: !10948)
!10952 = !DILocation(line: 3224, column: 32, scope: !10948)
!10953 = !DILocation(line: 3224, column: 35, scope: !10948)
!10954 = !DILocation(line: 3225, column: 7, scope: !10948)
!10955 = !DILocation(line: 3225, column: 39, scope: !10948)
!10956 = !DILocation(line: 3225, column: 54, scope: !10948)
!10957 = !DILocation(line: 3225, column: 10, scope: !10948)
!10958 = !DILocation(line: 3223, column: 7, scope: !10930)
!10959 = !DILocation(line: 3230, column: 7, scope: !10939)
!10960 = !DILocation(line: 3230, column: 21, scope: !10939)
!10961 = !DILocation(line: 3230, column: 7, scope: !10930)
!10962 = !DILocation(line: 3232, column: 27, scope: !10938)
!10963 = !DILocation(line: 3234, column: 19, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 3234, column: 7)
!10965 = !DILocation(line: 0, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 3235, column: 6)
!10967 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 3234, column: 7)
!10968 = !DILocation(line: 3234, column: 12, scope: !10964)
!10969 = !DILocation(line: 0, scope: !10964)
!10970 = !DILocation(line: 0, scope: !10938)
!10971 = !DILocation(line: 3234, column: 7, scope: !10964)
!10972 = !DILocation(line: 3235, column: 6, scope: !10966)
!10973 = !DILocation(line: 3236, column: 6, scope: !10966)
!10974 = !DILocation(line: 3236, column: 17, scope: !10966)
!10975 = !DILocation(line: 3236, column: 11, scope: !10966)
!10976 = !DILocation(line: 3236, column: 31, scope: !10966)
!10977 = !DILocation(line: 3236, column: 34, scope: !10966)
!10978 = !DILocation(line: 3237, column: 6, scope: !10966)
!10979 = !DILocation(line: 3237, column: 38, scope: !10966)
!10980 = !DILocation(line: 3239, column: 14, scope: !10966)
!10981 = !DILocation(line: 3238, column: 11, scope: !10966)
!10982 = !DILocation(line: 3237, column: 9, scope: !10966)
!10983 = !DILocation(line: 3235, column: 6, scope: !10967)
!10984 = !DILocation(line: 3234, column: 57, scope: !10967)
!10985 = !DILocation(line: 3234, column: 7, scope: !10967)
!10986 = distinct !{!10986, !10971, !10987}
!10987 = !DILocation(line: 3240, column: 11, scope: !10964)
!10988 = !DILocation(line: 3243, column: 7, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3243, column: 7)
!10990 = !DILocation(line: 3243, column: 7, scope: !10930)
!10991 = !DILocation(line: 3244, column: 20, scope: !10989)
!10992 = !DILocation(line: 3244, column: 5, scope: !10989)
!10993 = !DILocation(line: 3246, column: 1, scope: !10930)
!10994 = distinct !DISubprogram(name: "zero_sized_field_decl", scope: !3, file: !3, line: 3398, type: !2751, scopeLine: 3399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10995)
!10995 = !{!10996}
!10996 = !DILocalVariable(name: "fdecl", arg: 1, scope: !10994, file: !3, line: 3398, type: !2175)
!10997 = !DILocation(line: 0, scope: !10994)
!10998 = !DILocation(line: 3400, column: 7, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 3400, column: 7)
!11000 = !DILocation(line: 3400, column: 25, scope: !10999)
!11001 = !DILocation(line: 3400, column: 39, scope: !10999)
!11002 = !DILocation(line: 3400, column: 42, scope: !10999)
!11003 = !DILocation(line: 3401, column: 7, scope: !10999)
!11004 = !DILocation(line: 3401, column: 10, scope: !10999)
!11005 = !DILocation(line: 3400, column: 7, scope: !10994)
!11006 = !DILocation(line: 3403, column: 3, scope: !10994)
!11007 = !DILocation(line: 3404, column: 1, scope: !10994)
!11008 = distinct !DISubprogram(name: "gimplify_init_ctor_eval_range", scope: !3, file: !3, line: 3342, type: !11009, scopeLine: 3345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11011)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{null, !734, !734, !734, !734, !734, !2939, !727}
!11011 = !{!11012, !11013, !11014, !11015, !11016, !11017, !11018, !11019, !11020, !11021, !11022, !11023, !11024, !11025}
!11012 = !DILocalVariable(name: "object", arg: 1, scope: !11008, file: !3, line: 3342, type: !734)
!11013 = !DILocalVariable(name: "lower", arg: 2, scope: !11008, file: !3, line: 3342, type: !734)
!11014 = !DILocalVariable(name: "upper", arg: 3, scope: !11008, file: !3, line: 3342, type: !734)
!11015 = !DILocalVariable(name: "value", arg: 4, scope: !11008, file: !3, line: 3343, type: !734)
!11016 = !DILocalVariable(name: "array_elt_type", arg: 5, scope: !11008, file: !3, line: 3343, type: !734)
!11017 = !DILocalVariable(name: "pre_p", arg: 6, scope: !11008, file: !3, line: 3344, type: !2939)
!11018 = !DILocalVariable(name: "cleared", arg: 7, scope: !11008, file: !3, line: 3344, type: !727)
!11019 = !DILocalVariable(name: "loop_entry_label", scope: !11008, file: !3, line: 3346, type: !734)
!11020 = !DILocalVariable(name: "loop_exit_label", scope: !11008, file: !3, line: 3346, type: !734)
!11021 = !DILocalVariable(name: "fall_thru_label", scope: !11008, file: !3, line: 3346, type: !734)
!11022 = !DILocalVariable(name: "var", scope: !11008, file: !3, line: 3347, type: !734)
!11023 = !DILocalVariable(name: "var_type", scope: !11008, file: !3, line: 3347, type: !734)
!11024 = !DILocalVariable(name: "cref", scope: !11008, file: !3, line: 3347, type: !734)
!11025 = !DILocalVariable(name: "tmp", scope: !11008, file: !3, line: 3347, type: !734)
!11026 = !DILocation(line: 0, scope: !11008)
!11027 = !DILocation(line: 3349, column: 22, scope: !11008)
!11028 = !DILocation(line: 3350, column: 21, scope: !11008)
!11029 = !DILocation(line: 3351, column: 21, scope: !11008)
!11030 = !DILocation(line: 3354, column: 14, scope: !11008)
!11031 = !DILocation(line: 3355, column: 9, scope: !11008)
!11032 = !DILocation(line: 3356, column: 33, scope: !11008)
!11033 = !DILocation(line: 3356, column: 3, scope: !11008)
!11034 = !DILocation(line: 3359, column: 33, scope: !11008)
!11035 = !DILocation(line: 3359, column: 3, scope: !11008)
!11036 = !DILocation(line: 3362, column: 10, scope: !11008)
!11037 = !DILocation(line: 3368, column: 7, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 3368, column: 7)
!11039 = !DILocation(line: 3368, column: 25, scope: !11038)
!11040 = !DILocation(line: 3368, column: 7, scope: !11008)
!11041 = !DILocation(line: 3371, column: 36, scope: !11038)
!11042 = !DILocation(line: 3371, column: 5, scope: !11038)
!11043 = !DILocation(line: 3374, column: 35, scope: !11038)
!11044 = !DILocation(line: 3374, column: 5, scope: !11038)
!11045 = !DILocation(line: 3378, column: 5, scope: !11008)
!11046 = !DILocation(line: 3377, column: 3, scope: !11008)
!11047 = !DILocation(line: 3381, column: 33, scope: !11008)
!11048 = !DILocation(line: 3381, column: 3, scope: !11008)
!11049 = !DILocation(line: 3384, column: 9, scope: !11008)
!11050 = !DILocation(line: 3386, column: 33, scope: !11008)
!11051 = !DILocation(line: 3386, column: 3, scope: !11008)
!11052 = !DILocation(line: 3389, column: 33, scope: !11008)
!11053 = !DILocation(line: 3389, column: 3, scope: !11008)
!11054 = !DILocation(line: 3392, column: 33, scope: !11008)
!11055 = !DILocation(line: 3392, column: 3, scope: !11008)
!11056 = !DILocation(line: 3393, column: 1, scope: !11008)
!11057 = distinct !DISubprogram(name: "prepare_gimple_addressable", scope: !3, file: !3, line: 3094, type: !7379, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11058)
!11058 = !{!11059, !11060}
!11059 = !DILocalVariable(name: "expr_p", arg: 1, scope: !11057, file: !3, line: 3094, type: !1093)
!11060 = !DILocalVariable(name: "seq_p", arg: 2, scope: !11057, file: !3, line: 3094, type: !2939)
!11061 = !DILocation(line: 0, scope: !11057)
!11062 = !DILocation(line: 3096, column: 3, scope: !11057)
!11063 = !DILocation(line: 3096, column: 31, scope: !11057)
!11064 = !DILocation(line: 3096, column: 10, scope: !11057)
!11065 = !DILocation(line: 3097, column: 15, scope: !11057)
!11066 = distinct !{!11066, !11062, !11065}
!11067 = !DILocation(line: 3098, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 3098, column: 7)
!11069 = !DILocation(line: 3098, column: 7, scope: !11057)
!11070 = !DILocation(line: 3099, column: 40, scope: !11068)
!11071 = !DILocation(line: 3099, column: 15, scope: !11068)
!11072 = !DILocation(line: 3099, column: 13, scope: !11068)
!11073 = !DILocation(line: 3099, column: 5, scope: !11068)
!11074 = !DILocation(line: 3100, column: 1, scope: !11057)
!11075 = distinct !DISubprogram(name: "canonicalize_addr_expr", scope: !3, file: !3, line: 1701, type: !9406, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11076)
!11076 = !{!11077, !11078, !11079, !11080, !11081, !11082}
!11077 = !DILocalVariable(name: "expr_p", arg: 1, scope: !11075, file: !3, line: 1701, type: !1093)
!11078 = !DILocalVariable(name: "expr", scope: !11075, file: !3, line: 1703, type: !734)
!11079 = !DILocalVariable(name: "addr_expr", scope: !11075, file: !3, line: 1704, type: !734)
!11080 = !DILocalVariable(name: "datype", scope: !11075, file: !3, line: 1705, type: !734)
!11081 = !DILocalVariable(name: "ddatype", scope: !11075, file: !3, line: 1705, type: !734)
!11082 = !DILocalVariable(name: "pddatype", scope: !11075, file: !3, line: 1705, type: !734)
!11083 = !DILocation(line: 0, scope: !11075)
!11084 = !DILocation(line: 1703, column: 15, scope: !11075)
!11085 = !DILocation(line: 1704, column: 20, scope: !11075)
!11086 = !DILocation(line: 1708, column: 8, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1708, column: 7)
!11088 = !DILocation(line: 1709, column: 7, scope: !11087)
!11089 = !DILocation(line: 1709, column: 10, scope: !11087)
!11090 = !DILocation(line: 1709, column: 32, scope: !11087)
!11091 = !DILocation(line: 1708, column: 7, scope: !11075)
!11092 = !DILocation(line: 1713, column: 12, scope: !11075)
!11093 = !DILocation(line: 1714, column: 7, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1714, column: 7)
!11095 = !DILocation(line: 1714, column: 26, scope: !11094)
!11096 = !DILocation(line: 1714, column: 7, scope: !11075)
!11097 = !DILocation(line: 1719, column: 13, scope: !11075)
!11098 = !DILocation(line: 1720, column: 14, scope: !11075)
!11099 = !DILocation(line: 1721, column: 35, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1721, column: 7)
!11101 = !DILocation(line: 1721, column: 8, scope: !11100)
!11102 = !DILocation(line: 1721, column: 7, scope: !11075)
!11103 = !DILocation(line: 1726, column: 8, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1726, column: 7)
!11105 = !DILocation(line: 1727, column: 7, scope: !11104)
!11106 = !DILocation(line: 1727, column: 10, scope: !11104)
!11107 = !DILocation(line: 1727, column: 47, scope: !11104)
!11108 = !DILocation(line: 1728, column: 7, scope: !11104)
!11109 = !DILocation(line: 1728, column: 11, scope: !11104)
!11110 = !DILocation(line: 1728, column: 32, scope: !11104)
!11111 = !DILocation(line: 1728, column: 36, scope: !11104)
!11112 = !DILocation(line: 1729, column: 7, scope: !11104)
!11113 = !DILocation(line: 1729, column: 10, scope: !11104)
!11114 = !DILocation(line: 1729, column: 60, scope: !11104)
!11115 = !DILocation(line: 1726, column: 7, scope: !11075)
!11116 = !DILocation(line: 1733, column: 13, scope: !11075)
!11117 = !DILocation(line: 1733, column: 11, scope: !11075)
!11118 = !DILocation(line: 1736, column: 13, scope: !11075)
!11119 = !DILocation(line: 1736, column: 11, scope: !11075)
!11120 = !DILocation(line: 1739, column: 35, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1739, column: 7)
!11122 = !DILocation(line: 1739, column: 53, scope: !11121)
!11123 = !DILocation(line: 1739, column: 8, scope: !11121)
!11124 = !DILocation(line: 1739, column: 7, scope: !11075)
!11125 = !DILocation(line: 1740, column: 15, scope: !11121)
!11126 = !DILocation(line: 1740, column: 13, scope: !11121)
!11127 = !DILocation(line: 1740, column: 5, scope: !11121)
!11128 = !DILocation(line: 1741, column: 1, scope: !11075)
!11129 = distinct !DISubprogram(name: "gimplify_vla_decl", scope: !3, file: !3, line: 1251, type: !2937, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11130)
!11130 = !{!11131, !11132, !11133, !11134, !11135}
!11131 = !DILocalVariable(name: "decl", arg: 1, scope: !11129, file: !3, line: 1251, type: !734)
!11132 = !DILocalVariable(name: "seq_p", arg: 2, scope: !11129, file: !3, line: 1251, type: !2939)
!11133 = !DILocalVariable(name: "t", scope: !11129, file: !3, line: 1256, type: !734)
!11134 = !DILocalVariable(name: "addr", scope: !11129, file: !3, line: 1256, type: !734)
!11135 = !DILocalVariable(name: "ptr_type", scope: !11129, file: !3, line: 1256, type: !734)
!11136 = !DILocation(line: 0, scope: !11129)
!11137 = !DILocation(line: 1258, column: 26, scope: !11129)
!11138 = !DILocation(line: 1258, column: 3, scope: !11129)
!11139 = !DILocation(line: 1259, column: 26, scope: !11129)
!11140 = !DILocation(line: 1259, column: 3, scope: !11129)
!11141 = !DILocation(line: 1266, column: 34, scope: !11129)
!11142 = !DILocation(line: 1266, column: 14, scope: !11129)
!11143 = !DILocation(line: 1267, column: 36, scope: !11129)
!11144 = !DILocation(line: 1267, column: 10, scope: !11129)
!11145 = !DILocation(line: 1268, column: 3, scope: !11129)
!11146 = !DILocation(line: 1268, column: 25, scope: !11129)
!11147 = !DILocation(line: 1269, column: 7, scope: !11129)
!11148 = !DILocation(line: 1270, column: 3, scope: !11129)
!11149 = !DILocation(line: 1271, column: 3, scope: !11129)
!11150 = !DILocation(line: 1271, column: 32, scope: !11129)
!11151 = !DILocation(line: 1273, column: 7, scope: !11129)
!11152 = !DILocation(line: 1274, column: 7, scope: !11129)
!11153 = !DILocation(line: 1275, column: 7, scope: !11129)
!11154 = !DILocation(line: 1276, column: 7, scope: !11129)
!11155 = !DILocation(line: 1278, column: 3, scope: !11129)
!11156 = !DILocation(line: 1282, column: 3, scope: !11129)
!11157 = !DILocation(line: 1282, column: 18, scope: !11129)
!11158 = !DILocation(line: 1282, column: 29, scope: !11129)
!11159 = !DILocation(line: 1283, column: 1, scope: !11129)
!11160 = distinct !DISubprogram(name: "is_global_var", scope: !8839, file: !8839, line: 575, type: !2751, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11161)
!11161 = !{!11162}
!11162 = !DILocalVariable(name: "t", arg: 1, scope: !11160, file: !8839, line: 575, type: !2175)
!11163 = !DILocation(line: 0, scope: !11160)
!11164 = !DILocation(line: 577, column: 11, scope: !11160)
!11165 = !DILocation(line: 577, column: 27, scope: !11160)
!11166 = !DILocation(line: 577, column: 30, scope: !11160)
!11167 = !DILocation(line: 577, column: 3, scope: !11160)
!11168 = distinct !DISubprogram(name: "gimple_push_bind_expr", scope: !3, file: !3, line: 234, type: !2775, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11169)
!11169 = !{!11170}
!11170 = !DILocalVariable(name: "gimple_bind", arg: 1, scope: !11168, file: !3, line: 234, type: !1058)
!11171 = !DILocation(line: 0, scope: !11168)
!11172 = !DILocation(line: 236, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 236, column: 7)
!11174 = !DILocation(line: 236, column: 22, scope: !11173)
!11175 = !DILocation(line: 236, column: 38, scope: !11173)
!11176 = !DILocation(line: 236, column: 7, scope: !11168)
!11177 = !DILocation(line: 237, column: 38, scope: !11173)
!11178 = !DILocation(line: 237, column: 5, scope: !11173)
!11179 = !DILocation(line: 237, column: 20, scope: !11173)
!11180 = !DILocation(line: 237, column: 36, scope: !11173)
!11181 = !DILocation(line: 238, column: 3, scope: !11168)
!11182 = !DILocation(line: 239, column: 1, scope: !11168)
!11183 = distinct !DISubprogram(name: "build_stack_save_restore", scope: !3, file: !3, line: 1058, type: !11184, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11186)
!11184 = !DISubroutineType(types: !11185)
!11185 = !{null, !8225, !8225}
!11186 = !{!11187, !11188, !11189}
!11187 = !DILocalVariable(name: "save", arg: 1, scope: !11183, file: !3, line: 1058, type: !8225)
!11188 = !DILocalVariable(name: "restore", arg: 2, scope: !11183, file: !3, line: 1058, type: !8225)
!11189 = !DILocalVariable(name: "tmp_var", scope: !11183, file: !3, line: 1060, type: !734)
!11190 = !DILocation(line: 0, scope: !11183)
!11191 = !DILocation(line: 1062, column: 30, scope: !11183)
!11192 = !DILocation(line: 1062, column: 11, scope: !11183)
!11193 = !DILocation(line: 1062, column: 9, scope: !11183)
!11194 = !DILocation(line: 1063, column: 29, scope: !11183)
!11195 = !DILocation(line: 1063, column: 13, scope: !11183)
!11196 = !DILocation(line: 1064, column: 24, scope: !11183)
!11197 = !DILocation(line: 1064, column: 3, scope: !11183)
!11198 = !DILocation(line: 1066, column: 33, scope: !11183)
!11199 = !DILocation(line: 1066, column: 14, scope: !11183)
!11200 = !DILocation(line: 1066, column: 12, scope: !11183)
!11201 = !DILocation(line: 1068, column: 1, scope: !11183)
!11202 = distinct !DISubprogram(name: "gimple_pop_bind_expr", scope: !3, file: !3, line: 242, type: !8191, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!11203 = !DILocation(line: 244, column: 3, scope: !11202)
!11204 = !DILocation(line: 245, column: 1, scope: !11202)
!11205 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !391, file: !391, line: 34, type: !11206, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11208)
!11206 = !DISubroutineType(types: !11207)
!11207 = !{!2186, !392}
!11208 = !{!11209}
!11209 = !DILocalVariable(name: "alloc_", arg: 1, scope: !11205, file: !391, line: 34, type: !392)
!11210 = !DILocation(line: 0, scope: !11205)
!11211 = !DILocation(line: 34, column: 1, scope: !11205)
!11212 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !391, file: !391, line: 34, type: !11213, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11215)
!11213 = !DISubroutineType(types: !11214)
!11214 = !{!8225, !2810, !1058}
!11215 = !{!11216, !11217}
!11216 = !DILocalVariable(name: "vec_", arg: 1, scope: !11212, file: !391, line: 34, type: !2810)
!11217 = !DILocalVariable(name: "obj_", arg: 2, scope: !11212, file: !391, line: 34, type: !1058)
!11218 = !DILocation(line: 0, scope: !11212)
!11219 = !DILocation(line: 34, column: 1, scope: !11212)
!11220 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !391, file: !391, line: 34, type: !11221, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11223)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{!392, !2810, !392}
!11223 = !{!11224, !11225, !11226}
!11224 = !DILocalVariable(name: "vec_", arg: 1, scope: !11220, file: !391, line: 34, type: !2810)
!11225 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11220, file: !391, line: 34, type: !392)
!11226 = !DILocalVariable(name: "extend", scope: !11220, file: !391, line: 34, type: !392)
!11227 = !DILocation(line: 0, scope: !11220)
!11228 = !DILocation(line: 34, column: 1, scope: !11220)
!11229 = !DILocation(line: 34, column: 1, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11220, file: !391, line: 34, column: 1)
!11231 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !391, file: !391, line: 33, type: !11232, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11235)
!11232 = !DISubroutineType(types: !11233)
!11233 = !{!8225, !11234, !1058}
!11234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!11235 = !{!11236, !11237, !11238}
!11236 = !DILocalVariable(name: "vec_", arg: 1, scope: !11231, file: !391, line: 33, type: !11234)
!11237 = !DILocalVariable(name: "obj_", arg: 2, scope: !11231, file: !391, line: 33, type: !1058)
!11238 = !DILocalVariable(name: "slot_", scope: !11231, file: !391, line: 33, type: !8225)
!11239 = !DILocation(line: 0, scope: !11231)
!11240 = !DILocation(line: 33, column: 1, scope: !11231)
!11241 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !391, file: !391, line: 33, type: !11242, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11244)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!392, !11234, !392}
!11244 = !{!11245, !11246}
!11245 = !DILocalVariable(name: "vec_", arg: 1, scope: !11241, file: !391, line: 33, type: !11234)
!11246 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11241, file: !391, line: 33, type: !392)
!11247 = !DILocation(line: 0, scope: !11241)
!11248 = !DILocation(line: 33, column: 1, scope: !11241)
!11249 = distinct !DISubprogram(name: "VEC_gimple_base_pop", scope: !391, file: !391, line: 33, type: !11250, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11252)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{!1058, !11234}
!11252 = !{!11253, !11254}
!11253 = !DILocalVariable(name: "vec_", arg: 1, scope: !11249, file: !391, line: 33, type: !11234)
!11254 = !DILocalVariable(name: "obj_", scope: !11249, file: !391, line: 33, type: !1058)
!11255 = !DILocation(line: 0, scope: !11249)
!11256 = !DILocation(line: 33, column: 1, scope: !11249)
!11257 = distinct !DISubprogram(name: "VEC_tree_base_ordered_remove", scope: !135, file: !135, line: 182, type: !11258, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11260)
!11258 = !DISubroutineType(types: !11259)
!11259 = !{!734, !3616, !7}
!11260 = !{!11261, !11262, !11263, !11264}
!11261 = !DILocalVariable(name: "vec_", arg: 1, scope: !11257, file: !135, line: 182, type: !3616)
!11262 = !DILocalVariable(name: "ix_", arg: 2, scope: !11257, file: !135, line: 182, type: !7)
!11263 = !DILocalVariable(name: "slot_", scope: !11257, file: !135, line: 182, type: !1093)
!11264 = !DILocalVariable(name: "obj_", scope: !11257, file: !135, line: 182, type: !734)
!11265 = !DILocation(line: 0, scope: !11257)
!11266 = !DILocation(line: 182, column: 1, scope: !11257)
!11267 = distinct !DISubprogram(name: "VEC_tree_gc_safe_push", scope: !135, file: !135, line: 183, type: !11268, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11271)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!1093, !11270, !734}
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!11271 = !{!11272, !11273}
!11272 = !DILocalVariable(name: "vec_", arg: 1, scope: !11267, file: !135, line: 183, type: !11270)
!11273 = !DILocalVariable(name: "obj_", arg: 2, scope: !11267, file: !135, line: 183, type: !734)
!11274 = !DILocation(line: 0, scope: !11267)
!11275 = !DILocation(line: 183, column: 1, scope: !11267)
!11276 = distinct !DISubprogram(name: "gimple_asm_set_volatile", scope: !391, file: !391, line: 2749, type: !6901, scopeLine: 2750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11277)
!11277 = !{!11278, !11279}
!11278 = !DILocalVariable(name: "gs", arg: 1, scope: !11276, file: !391, line: 2749, type: !1058)
!11279 = !DILocalVariable(name: "volatile_p", arg: 2, scope: !11276, file: !391, line: 2749, type: !727)
!11280 = !DILocation(line: 0, scope: !11276)
!11281 = !DILocation(line: 2752, column: 7, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11276, file: !391, line: 2752, column: 7)
!11283 = !DILocation(line: 0, scope: !11282)
!11284 = !DILocation(line: 2752, column: 7, scope: !11276)
!11285 = !DILocation(line: 2753, column: 24, scope: !11282)
!11286 = !DILocation(line: 2753, column: 5, scope: !11282)
!11287 = !DILocation(line: 2755, column: 24, scope: !11282)
!11288 = !DILocation(line: 2756, column: 1, scope: !11276)
!11289 = distinct !DISubprogram(name: "gimple_asm_set_input", scope: !391, file: !391, line: 2762, type: !6901, scopeLine: 2763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11290)
!11290 = !{!11291, !11292}
!11291 = !DILocalVariable(name: "gs", arg: 1, scope: !11289, file: !391, line: 2762, type: !1058)
!11292 = !DILocalVariable(name: "input_p", arg: 2, scope: !11289, file: !391, line: 2762, type: !727)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 2765, column: 7, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11289, file: !391, line: 2765, column: 7)
!11296 = !DILocation(line: 0, scope: !11295)
!11297 = !DILocation(line: 2765, column: 7, scope: !11289)
!11298 = !DILocation(line: 2766, column: 24, scope: !11295)
!11299 = !DILocation(line: 2766, column: 5, scope: !11295)
!11300 = !DILocation(line: 2768, column: 24, scope: !11295)
!11301 = !DILocation(line: 2769, column: 1, scope: !11289)
!11302 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !135, file: !135, line: 183, type: !11303, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!392, !11270, !392}
!11305 = !{!11306, !11307, !11308}
!11306 = !DILocalVariable(name: "vec_", arg: 1, scope: !11302, file: !135, line: 183, type: !11270)
!11307 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11302, file: !135, line: 183, type: !392)
!11308 = !DILocalVariable(name: "extend", scope: !11302, file: !135, line: 183, type: !392)
!11309 = !DILocation(line: 0, scope: !11302)
!11310 = !DILocation(line: 183, column: 1, scope: !11302)
!11311 = !DILocation(line: 183, column: 1, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11302, file: !135, line: 183, column: 1)
!11313 = distinct !DISubprogram(name: "gimple_try_kind", scope: !391, file: !391, line: 2921, type: !11314, scopeLine: 2922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!481, !3169}
!11316 = !{!11317}
!11317 = !DILocalVariable(name: "gs", arg: 1, scope: !11313, file: !391, line: 2921, type: !3169)
!11318 = !DILocation(line: 0, scope: !11313)
!11319 = !DILocation(line: 2924, column: 46, scope: !11313)
!11320 = !DILocation(line: 2924, column: 54, scope: !11313)
!11321 = !DILocation(line: 2924, column: 3, scope: !11313)
!11322 = distinct !DISubprogram(name: "gsi_one_before_end_p", scope: !391, file: !391, line: 4476, type: !3398, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "i", arg: 1, scope: !11322, file: !391, line: 4476, type: !3336)
!11325 = !DILocation(line: 4476, column: 44, scope: !11322)
!11326 = !DILocation(line: 4478, column: 12, scope: !11322)
!11327 = !DILocation(line: 4478, column: 16, scope: !11322)
!11328 = !DILocation(line: 4478, column: 24, scope: !11322)
!11329 = !DILocation(line: 4478, column: 34, scope: !11322)
!11330 = !DILocation(line: 4478, column: 39, scope: !11322)
!11331 = !DILocation(line: 4478, column: 3, scope: !11322)
!11332 = distinct !DISubprogram(name: "gimple_wce_cleanup", scope: !391, file: !391, line: 3009, type: !8390, scopeLine: 3010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11333)
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "gs", arg: 1, scope: !11332, file: !391, line: 3009, type: !1058)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 3012, column: 25, scope: !11332)
!11337 = !DILocation(line: 3012, column: 3, scope: !11332)
!11338 = distinct !DISubprogram(name: "gimple_wce_cleanup_eh_only", scope: !391, file: !391, line: 3029, type: !8940, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11339)
!11339 = !{!11340}
!11340 = !DILocalVariable(name: "gs", arg: 1, scope: !11338, file: !391, line: 3029, type: !3169)
!11341 = !DILocation(line: 0, scope: !11338)
!11342 = !DILocation(line: 3032, column: 21, scope: !11338)
!11343 = !DILocation(line: 3032, column: 29, scope: !11338)
!11344 = !DILocation(line: 3032, column: 10, scope: !11338)
!11345 = !DILocation(line: 3032, column: 3, scope: !11338)
!11346 = distinct !DISubprogram(name: "gsi_stmt_ptr", scope: !391, file: !391, line: 4579, type: !11347, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11349)
!11347 = !DISubroutineType(types: !11348)
!11348 = !{!8225, !3435}
!11349 = !{!11350}
!11350 = !DILocalVariable(name: "i", arg: 1, scope: !11346, file: !391, line: 4579, type: !3435)
!11351 = !DILocation(line: 0, scope: !11346)
!11352 = !DILocation(line: 4581, column: 14, scope: !11346)
!11353 = !DILocation(line: 4581, column: 19, scope: !11346)
!11354 = !DILocation(line: 4581, column: 3, scope: !11346)
!11355 = distinct !DISubprogram(name: "gimple_push_cleanup", scope: !3, file: !3, line: 5133, type: !11356, scopeLine: 5134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11358)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !734, !734, !727, !2939}
!11358 = !{!11359, !11360, !11361, !11362, !11363, !11364, !11365, !11368, !11369}
!11359 = !DILocalVariable(name: "var", arg: 1, scope: !11355, file: !3, line: 5133, type: !734)
!11360 = !DILocalVariable(name: "cleanup", arg: 2, scope: !11355, file: !3, line: 5133, type: !734)
!11361 = !DILocalVariable(name: "eh_only", arg: 3, scope: !11355, file: !3, line: 5133, type: !727)
!11362 = !DILocalVariable(name: "pre_p", arg: 4, scope: !11355, file: !3, line: 5133, type: !2939)
!11363 = !DILocalVariable(name: "wce", scope: !11355, file: !3, line: 5135, type: !1058)
!11364 = !DILocalVariable(name: "cleanup_stmts", scope: !11355, file: !3, line: 5136, type: !1048)
!11365 = !DILocalVariable(name: "flag", scope: !11366, file: !3, line: 5165, type: !734)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 5144, column: 5)
!11367 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 5143, column: 7)
!11368 = !DILocalVariable(name: "ffalse", scope: !11366, file: !3, line: 5166, type: !1058)
!11369 = !DILocalVariable(name: "ftrue", scope: !11366, file: !3, line: 5167, type: !1058)
!11370 = !DILocation(line: 0, scope: !11355)
!11371 = !DILocation(line: 5136, column: 3, scope: !11355)
!11372 = !DILocation(line: 5136, column: 14, scope: !11355)
!11373 = !DILocation(line: 5140, column: 7, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 5140, column: 7)
!11375 = !DILocation(line: 5140, column: 18, scope: !11374)
!11376 = !DILocation(line: 5140, column: 21, scope: !11374)
!11377 = !DILocation(line: 5140, column: 7, scope: !11355)
!11378 = !DILocation(line: 5143, column: 7, scope: !11367)
!11379 = !DILocation(line: 5143, column: 7, scope: !11355)
!11380 = !DILocation(line: 5165, column: 35, scope: !11366)
!11381 = !DILocation(line: 5165, column: 19, scope: !11366)
!11382 = !DILocation(line: 0, scope: !11366)
!11383 = !DILocation(line: 5166, column: 23, scope: !11366)
!11384 = !DILocation(line: 5167, column: 22, scope: !11366)
!11385 = !DILocation(line: 5169, column: 17, scope: !11366)
!11386 = !DILocation(line: 5169, column: 15, scope: !11366)
!11387 = !DILocation(line: 5170, column: 7, scope: !11366)
!11388 = !DILocation(line: 5171, column: 31, scope: !11366)
!11389 = !DILocation(line: 5171, column: 13, scope: !11366)
!11390 = !DILocation(line: 5173, column: 31, scope: !11366)
!11391 = !DILocation(line: 5173, column: 46, scope: !11366)
!11392 = !DILocation(line: 5173, column: 7, scope: !11366)
!11393 = !DILocation(line: 5174, column: 31, scope: !11366)
!11394 = !DILocation(line: 5174, column: 46, scope: !11366)
!11395 = !DILocation(line: 5174, column: 7, scope: !11366)
!11396 = !DILocation(line: 5175, column: 7, scope: !11366)
!11397 = !DILocation(line: 5180, column: 7, scope: !11366)
!11398 = !DILocation(line: 5180, column: 29, scope: !11366)
!11399 = !DILocation(line: 5181, column: 5, scope: !11366)
!11400 = !DILocation(line: 5184, column: 7, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 5183, column: 5)
!11402 = !DILocation(line: 5185, column: 31, scope: !11401)
!11403 = !DILocation(line: 5185, column: 13, scope: !11401)
!11404 = !DILocation(line: 5186, column: 7, scope: !11401)
!11405 = !DILocation(line: 5187, column: 7, scope: !11401)
!11406 = !DILocation(line: 5189, column: 1, scope: !11355)
!11407 = distinct !DISubprogram(name: "gimple_conditional_context", scope: !3, file: !3, line: 265, type: !8172, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!11408 = !DILocation(line: 267, column: 10, scope: !11407)
!11409 = !DILocation(line: 267, column: 25, scope: !11407)
!11410 = !DILocation(line: 267, column: 36, scope: !11407)
!11411 = !DILocation(line: 267, column: 3, scope: !11407)
!11412 = distinct !DISubprogram(name: "gimple_wce_set_cleanup_eh_only", scope: !391, file: !391, line: 3039, type: !6901, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11413)
!11413 = !{!11414, !11415}
!11414 = !DILocalVariable(name: "gs", arg: 1, scope: !11412, file: !391, line: 3039, type: !1058)
!11415 = !DILocalVariable(name: "eh_only_p", arg: 2, scope: !11412, file: !391, line: 3039, type: !727)
!11416 = !DILocation(line: 0, scope: !11412)
!11417 = !DILocation(line: 3042, column: 24, scope: !11412)
!11418 = !DILocation(line: 3042, column: 14, scope: !11412)
!11419 = !DILocation(line: 3042, column: 22, scope: !11412)
!11420 = !DILocation(line: 3043, column: 1, scope: !11412)
!11421 = distinct !DISubprogram(name: "tsi_start", scope: !2899, file: !2899, line: 38, type: !3570, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11422)
!11422 = !{!11423, !11424}
!11423 = !DILocalVariable(name: "t", arg: 1, scope: !11421, file: !2899, line: 38, type: !734)
!11424 = !DILocalVariable(name: "i", scope: !11421, file: !2899, line: 40, type: !2898)
!11425 = !DILocation(line: 0, scope: !11421)
!11426 = !DILocation(line: 42, column: 11, scope: !11421)
!11427 = !DILocation(line: 45, column: 3, scope: !11421)
!11428 = distinct !DISubprogram(name: "gimplify_scan_omp_clauses", scope: !3, file: !3, line: 5673, type: !11429, scopeLine: 5675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11431)
!11429 = !DISubroutineType(types: !11430)
!11430 = !{null, !1093, !2939, !384}
!11431 = !{!11432, !11433, !11434, !11435, !11436, !11437, !11438, !11439, !11441, !11442, !11443, !11444, !11445, !11452, !11453}
!11432 = !DILocalVariable(name: "list_p", arg: 1, scope: !11428, file: !3, line: 5673, type: !1093)
!11433 = !DILocalVariable(name: "pre_p", arg: 2, scope: !11428, file: !3, line: 5673, type: !2939)
!11434 = !DILocalVariable(name: "region_type", arg: 3, scope: !11428, file: !3, line: 5674, type: !384)
!11435 = !DILocalVariable(name: "ctx", scope: !11428, file: !3, line: 5676, type: !2191)
!11436 = !DILocalVariable(name: "outer_ctx", scope: !11428, file: !3, line: 5676, type: !2191)
!11437 = !DILocalVariable(name: "gctx", scope: !11428, file: !3, line: 5677, type: !2266)
!11438 = !DILocalVariable(name: "c", scope: !11428, file: !3, line: 5678, type: !734)
!11439 = !DILocalVariable(name: "remove", scope: !11440, file: !3, line: 5685, type: !727)
!11440 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 5684, column: 5)
!11441 = !DILocalVariable(name: "notice_outer", scope: !11440, file: !3, line: 5686, type: !727)
!11442 = !DILocalVariable(name: "check_non_private", scope: !11440, file: !3, line: 5687, type: !732)
!11443 = !DILocalVariable(name: "flags", scope: !11440, file: !3, line: 5688, type: !7)
!11444 = !DILocalVariable(name: "decl", scope: !11440, file: !3, line: 5689, type: !734)
!11445 = !DILocalVariable(name: "bind", scope: !11446, file: !3, line: 5759, type: !734)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 5758, column: 3)
!11447 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 5757, column: 12)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 5754, column: 6)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !3, line: 5752, column: 13)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5727, column: 8)
!11451 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 5692, column: 2)
!11452 = !DILabel(scope: !11451, name: "do_add", file: !3, line: 5719)
!11453 = !DILabel(scope: !11451, name: "do_notice", file: !3, line: 5785)
!11454 = !DILocation(line: 0, scope: !11428)
!11455 = !DILocation(line: 5677, column: 3, scope: !11428)
!11456 = !DILocation(line: 5680, column: 9, scope: !11428)
!11457 = !DILocation(line: 5681, column: 20, scope: !11428)
!11458 = !DILocation(line: 0, scope: !11451)
!11459 = !DILocation(line: 0, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5786, column: 8)
!11461 = !DILocation(line: 0, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5788, column: 8)
!11463 = !DILocation(line: 5683, column: 3, scope: !11428)
!11464 = !DILocation(line: 5683, column: 15, scope: !11428)
!11465 = !DILocation(line: 5683, column: 24, scope: !11428)
!11466 = !DILocation(line: 0, scope: !11440)
!11467 = !DILocation(line: 5691, column: 15, scope: !11440)
!11468 = !DILocation(line: 5691, column: 7, scope: !11440)
!11469 = !DILocation(line: 5695, column: 25, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5695, column: 8)
!11471 = !DILocation(line: 5695, column: 48, scope: !11470)
!11472 = !DILocation(line: 5695, column: 8, scope: !11470)
!11473 = !DILocation(line: 5695, column: 8, scope: !11451)
!11474 = !DILocation(line: 5698, column: 8, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 5696, column: 6)
!11476 = !DILocation(line: 5698, column: 41, scope: !11475)
!11477 = !DILocation(line: 5699, column: 6, scope: !11475)
!11478 = !DILocation(line: 5709, column: 4, scope: !11451)
!11479 = !DILocation(line: 5713, column: 4, scope: !11451)
!11480 = !DILocation(line: 5717, column: 4, scope: !11451)
!11481 = !DILocation(line: 5686, column: 12, scope: !11440)
!11482 = !DILocation(line: 5719, column: 2, scope: !11451)
!11483 = !DILocation(line: 5720, column: 11, scope: !11451)
!11484 = !DILocation(line: 5721, column: 16, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5721, column: 8)
!11486 = !DILocation(line: 5721, column: 13, scope: !11485)
!11487 = !DILocation(line: 5721, column: 32, scope: !11485)
!11488 = !DILocation(line: 5721, column: 35, scope: !11485)
!11489 = !DILocation(line: 5721, column: 52, scope: !11485)
!11490 = !DILocation(line: 5721, column: 8, scope: !11451)
!11491 = !DILocation(line: 5726, column: 4, scope: !11451)
!11492 = !DILocation(line: 5727, column: 8, scope: !11450)
!11493 = !DILocation(line: 5727, column: 28, scope: !11450)
!11494 = !DILocation(line: 5728, column: 8, scope: !11450)
!11495 = !DILocation(line: 5728, column: 11, scope: !11450)
!11496 = !DILocation(line: 5727, column: 8, scope: !11451)
!11497 = !DILocation(line: 5730, column: 8, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11450, file: !3, line: 5729, column: 6)
!11499 = !DILocation(line: 5732, column: 26, scope: !11498)
!11500 = !DILocation(line: 5733, column: 8, scope: !11498)
!11501 = !DILocation(line: 5735, column: 47, scope: !11498)
!11502 = !DILocation(line: 5735, column: 8, scope: !11498)
!11503 = !DILocation(line: 5735, column: 45, scope: !11498)
!11504 = !DILocation(line: 5736, column: 48, scope: !11498)
!11505 = !DILocation(line: 5736, column: 8, scope: !11498)
!11506 = !DILocation(line: 5736, column: 46, scope: !11498)
!11507 = !DILocation(line: 5738, column: 26, scope: !11498)
!11508 = !DILocation(line: 5738, column: 8, scope: !11498)
!11509 = !DILocation(line: 5741, column: 27, scope: !11498)
!11510 = !DILocation(line: 5741, column: 4, scope: !11498)
!11511 = !DILocation(line: 5740, column: 8, scope: !11498)
!11512 = !DILocation(line: 5742, column: 8, scope: !11498)
!11513 = !DILocation(line: 5743, column: 26, scope: !11498)
!11514 = !DILocation(line: 5743, column: 8, scope: !11498)
!11515 = !DILocation(line: 5746, column: 27, scope: !11498)
!11516 = !DILocation(line: 5746, column: 4, scope: !11498)
!11517 = !DILocation(line: 5745, column: 8, scope: !11498)
!11518 = !DILocation(line: 5747, column: 38, scope: !11498)
!11519 = !DILocation(line: 5748, column: 39, scope: !11498)
!11520 = !DILocation(line: 5750, column: 26, scope: !11498)
!11521 = !DILocation(line: 5751, column: 6, scope: !11498)
!11522 = !DILocation(line: 5752, column: 33, scope: !11449)
!11523 = !DILocation(line: 5753, column: 6, scope: !11449)
!11524 = !DILocation(line: 5753, column: 9, scope: !11449)
!11525 = !DILocation(line: 5752, column: 13, scope: !11450)
!11526 = !DILocation(line: 5755, column: 26, scope: !11448)
!11527 = !DILocation(line: 5756, column: 8, scope: !11448)
!11528 = !DILocation(line: 5757, column: 12, scope: !11447)
!11529 = !DILocation(line: 5757, column: 56, scope: !11447)
!11530 = !DILocation(line: 5757, column: 12, scope: !11448)
!11531 = !DILocation(line: 5759, column: 17, scope: !11446)
!11532 = !DILocation(line: 0, scope: !11446)
!11533 = !DILocation(line: 5761, column: 5, scope: !11446)
!11534 = !DILocation(line: 5761, column: 30, scope: !11446)
!11535 = !DILocation(line: 5762, column: 29, scope: !11446)
!11536 = !DILocation(line: 5762, column: 5, scope: !11446)
!11537 = !DILocation(line: 5762, column: 27, scope: !11446)
!11538 = !DILocation(line: 5763, column: 37, scope: !11446)
!11539 = !DILocation(line: 5764, column: 3, scope: !11446)
!11540 = !DILocation(line: 5765, column: 26, scope: !11448)
!11541 = !DILocation(line: 5766, column: 6, scope: !11448)
!11542 = !DILocation(line: 5765, column: 8, scope: !11448)
!11543 = !DILocation(line: 5768, column: 27, scope: !11448)
!11544 = !DILocation(line: 5768, column: 4, scope: !11448)
!11545 = !DILocation(line: 5767, column: 8, scope: !11448)
!11546 = !DILocation(line: 5769, column: 40, scope: !11448)
!11547 = !DILocation(line: 5771, column: 26, scope: !11448)
!11548 = !DILocation(line: 5772, column: 6, scope: !11448)
!11549 = !DILocation(line: 5773, column: 8, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5773, column: 8)
!11551 = !DILocation(line: 5773, column: 8, scope: !11451)
!11552 = !DILocation(line: 5779, column: 11, scope: !11451)
!11553 = !DILocation(line: 5780, column: 16, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5780, column: 8)
!11555 = !DILocation(line: 5780, column: 13, scope: !11554)
!11556 = !DILocation(line: 5780, column: 32, scope: !11554)
!11557 = !DILocation(line: 5780, column: 35, scope: !11554)
!11558 = !DILocation(line: 5780, column: 52, scope: !11554)
!11559 = !DILocation(line: 5780, column: 8, scope: !11451)
!11560 = !DILocation(line: 5785, column: 2, scope: !11451)
!11561 = !DILocation(line: 5786, column: 8, scope: !11451)
!11562 = !DILocation(line: 5787, column: 6, scope: !11460)
!11563 = !DILocation(line: 5788, column: 8, scope: !11462)
!11564 = !DILocation(line: 5789, column: 8, scope: !11462)
!11565 = !DILocation(line: 5790, column: 11, scope: !11462)
!11566 = !DILocation(line: 5788, column: 8, scope: !11451)
!11567 = !DILocation(line: 5793, column: 27, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 5791, column: 6)
!11569 = !DILocation(line: 5792, column: 8, scope: !11568)
!11570 = !DILocation(line: 5795, column: 6, scope: !11568)
!11571 = !DILocation(line: 5800, column: 24, scope: !11451)
!11572 = !DILocation(line: 5800, column: 8, scope: !11451)
!11573 = !DILocation(line: 5800, column: 6, scope: !11451)
!11574 = !DILocation(line: 5799, column: 4, scope: !11451)
!11575 = !DILocation(line: 5805, column: 24, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 5805, column: 8)
!11577 = !DILocation(line: 5805, column: 8, scope: !11576)
!11578 = !DILocation(line: 5806, column: 35, scope: !11576)
!11579 = !DILocation(line: 5805, column: 8, scope: !11451)
!11580 = !DILocation(line: 5808, column: 4, scope: !11451)
!11581 = !DILocation(line: 5817, column: 24, scope: !11451)
!11582 = !DILocation(line: 5817, column: 22, scope: !11451)
!11583 = !DILocation(line: 5818, column: 4, scope: !11451)
!11584 = !DILocation(line: 5821, column: 4, scope: !11451)
!11585 = !DILocation(line: 5822, column: 2, scope: !11451)
!11586 = !DILocation(line: 5824, column: 11, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 5824, column: 11)
!11588 = !DILocation(line: 0, scope: !11587)
!11589 = !DILocation(line: 5824, column: 11, scope: !11440)
!11590 = !DILocation(line: 5825, column: 12, scope: !11587)
!11591 = !DILocation(line: 5825, column: 10, scope: !11587)
!11592 = !DILocation(line: 5825, column: 2, scope: !11587)
!11593 = distinct !{!11593, !11463, !11594}
!11594 = !DILocation(line: 5828, column: 5, scope: !11428)
!11595 = !DILocation(line: 5830, column: 21, scope: !11428)
!11596 = !DILocation(line: 5831, column: 1, scope: !11428)
!11597 = distinct !DISubprogram(name: "gimplify_and_return_first", scope: !3, file: !3, line: 399, type: !11598, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11600)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{!1058, !734, !2939}
!11600 = !{!11601, !11602, !11603}
!11601 = !DILocalVariable(name: "t", arg: 1, scope: !11597, file: !3, line: 399, type: !734)
!11602 = !DILocalVariable(name: "seq_p", arg: 2, scope: !11597, file: !3, line: 399, type: !2939)
!11603 = !DILocalVariable(name: "last", scope: !11597, file: !3, line: 401, type: !3336)
!11604 = !DILocation(line: 0, scope: !11597)
!11605 = !DILocation(line: 401, column: 3, scope: !11597)
!11606 = !DILocation(line: 401, column: 41, scope: !11597)
!11607 = !DILocation(line: 401, column: 31, scope: !11597)
!11608 = !DILocation(line: 403, column: 3, scope: !11597)
!11609 = !DILocation(line: 405, column: 8, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 405, column: 7)
!11611 = !DILocation(line: 405, column: 7, scope: !11597)
!11612 = !DILocation(line: 407, column: 7, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 406, column: 5)
!11614 = !DILocation(line: 408, column: 14, scope: !11613)
!11615 = !DILocation(line: 408, column: 7, scope: !11613)
!11616 = !DILocation(line: 411, column: 35, scope: !11610)
!11617 = !DILocation(line: 411, column: 12, scope: !11610)
!11618 = !DILocation(line: 411, column: 5, scope: !11610)
!11619 = !DILocation(line: 0, scope: !11610)
!11620 = !DILocation(line: 412, column: 1, scope: !11597)
!11621 = distinct !DISubprogram(name: "gimplify_adjust_omp_clauses", scope: !3, file: !3, line: 5901, type: !9406, scopeLine: 5902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11622)
!11622 = !{!11623, !11624, !11625, !11626, !11627, !11629, !11630}
!11623 = !DILocalVariable(name: "list_p", arg: 1, scope: !11621, file: !3, line: 5901, type: !1093)
!11624 = !DILocalVariable(name: "ctx", scope: !11621, file: !3, line: 5903, type: !2191)
!11625 = !DILocalVariable(name: "c", scope: !11621, file: !3, line: 5904, type: !734)
!11626 = !DILocalVariable(name: "decl", scope: !11621, file: !3, line: 5904, type: !734)
!11627 = !DILocalVariable(name: "n", scope: !11628, file: !3, line: 5908, type: !2201)
!11628 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 5907, column: 5)
!11629 = !DILocalVariable(name: "remove", scope: !11628, file: !3, line: 5909, type: !727)
!11630 = !DILocalVariable(name: "shared", scope: !11631, file: !3, line: 5921, type: !727)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 5920, column: 6)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 5919, column: 8)
!11633 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 5912, column: 2)
!11634 = !DILocation(line: 0, scope: !11621)
!11635 = !DILocation(line: 5903, column: 34, scope: !11621)
!11636 = !DILocation(line: 0, scope: !11633)
!11637 = !DILocation(line: 5906, column: 3, scope: !11621)
!11638 = !DILocation(line: 5906, column: 15, scope: !11621)
!11639 = !DILocation(line: 5906, column: 24, scope: !11621)
!11640 = !DILocation(line: 0, scope: !11628)
!11641 = !DILocation(line: 5911, column: 15, scope: !11628)
!11642 = !DILocation(line: 5911, column: 7, scope: !11628)
!11643 = !DILocation(line: 5916, column: 11, scope: !11633)
!11644 = !DILocation(line: 5917, column: 32, scope: !11633)
!11645 = !DILocation(line: 5917, column: 43, scope: !11633)
!11646 = !DILocation(line: 5917, column: 8, scope: !11633)
!11647 = !DILocation(line: 5918, column: 18, scope: !11633)
!11648 = !DILocation(line: 5918, column: 13, scope: !11633)
!11649 = !DILocation(line: 5919, column: 10, scope: !11632)
!11650 = !DILocation(line: 5919, column: 8, scope: !11633)
!11651 = !DILocation(line: 0, scope: !11631)
!11652 = !DILocation(line: 5922, column: 22, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 5922, column: 12)
!11654 = !DILocation(line: 5923, column: 5, scope: !11653)
!11655 = !DILocation(line: 5921, column: 22, scope: !11631)
!11656 = !DILocation(line: 5921, column: 42, scope: !11631)
!11657 = !DILocation(line: 5923, column: 25, scope: !11653)
!11658 = !DILocation(line: 5923, column: 8, scope: !11653)
!11659 = !DILocation(line: 5922, column: 12, scope: !11631)
!11660 = !DILocation(line: 5925, column: 5, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 5924, column: 3)
!11662 = !DILocation(line: 5928, column: 5, scope: !11661)
!11663 = !DILocation(line: 5929, column: 5, scope: !11661)
!11664 = !DILocation(line: 5929, column: 34, scope: !11661)
!11665 = !DILocation(line: 5930, column: 3, scope: !11661)
!11666 = !DILocation(line: 5937, column: 11, scope: !11633)
!11667 = !DILocation(line: 5938, column: 32, scope: !11633)
!11668 = !DILocation(line: 5938, column: 8, scope: !11633)
!11669 = !DILocation(line: 5940, column: 12, scope: !11633)
!11670 = !DILocation(line: 5939, column: 4, scope: !11633)
!11671 = !DILocation(line: 5940, column: 6, scope: !11633)
!11672 = !DILocation(line: 5941, column: 4, scope: !11633)
!11673 = !DILocation(line: 5957, column: 4, scope: !11633)
!11674 = !DILocation(line: 5958, column: 2, scope: !11633)
!11675 = !DILocation(line: 5960, column: 11, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 5960, column: 11)
!11677 = !DILocation(line: 0, scope: !11676)
!11678 = !DILocation(line: 5960, column: 11, scope: !11628)
!11679 = !DILocation(line: 5961, column: 12, scope: !11676)
!11680 = !DILocation(line: 5961, column: 10, scope: !11676)
!11681 = !DILocation(line: 5961, column: 2, scope: !11676)
!11682 = distinct !{!11682, !11637, !11683}
!11683 = !DILocation(line: 5964, column: 5, scope: !11621)
!11684 = !DILocation(line: 5967, column: 28, scope: !11621)
!11685 = !DILocation(line: 5967, column: 70, scope: !11621)
!11686 = !DILocation(line: 5967, column: 3, scope: !11621)
!11687 = !DILocation(line: 5969, column: 28, scope: !11621)
!11688 = !DILocation(line: 5969, column: 21, scope: !11621)
!11689 = !DILocation(line: 5970, column: 3, scope: !11621)
!11690 = !DILocation(line: 5971, column: 1, scope: !11621)
!11691 = distinct !DISubprogram(name: "gimple_omp_set_subcode", scope: !391, file: !391, line: 1518, type: !11692, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11694)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{null, !1058, !7}
!11694 = !{!11695, !11696}
!11695 = !DILocalVariable(name: "s", arg: 1, scope: !11691, file: !391, line: 1518, type: !1058)
!11696 = !DILocalVariable(name: "subcode", arg: 2, scope: !11691, file: !391, line: 1518, type: !7)
!11697 = !DILocation(line: 0, scope: !11691)
!11698 = !DILocation(line: 1523, column: 13, scope: !11691)
!11699 = !DILocation(line: 1523, column: 21, scope: !11691)
!11700 = !DILocation(line: 1524, column: 1, scope: !11691)
!11701 = distinct !DISubprogram(name: "new_omp_context", scope: !3, file: !3, line: 312, type: !11702, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11704)
!11702 = !DISubroutineType(types: !11703)
!11703 = !{!2191, !384}
!11704 = !{!11705, !11706}
!11705 = !DILocalVariable(name: "region_type", arg: 1, scope: !11701, file: !3, line: 312, type: !384)
!11706 = !DILocalVariable(name: "c", scope: !11701, file: !3, line: 314, type: !2191)
!11707 = !DILocation(line: 0, scope: !11701)
!11708 = !DILocation(line: 316, column: 7, scope: !11701)
!11709 = !DILocation(line: 317, column: 22, scope: !11701)
!11710 = !DILocation(line: 317, column: 20, scope: !11701)
!11711 = !DILocation(line: 318, column: 18, scope: !11701)
!11712 = !DILocation(line: 318, column: 6, scope: !11701)
!11713 = !DILocation(line: 318, column: 16, scope: !11701)
!11714 = !DILocation(line: 319, column: 25, scope: !11701)
!11715 = !DILocation(line: 319, column: 6, scope: !11701)
!11716 = !DILocation(line: 319, column: 23, scope: !11701)
!11717 = !DILocation(line: 320, column: 17, scope: !11701)
!11718 = !DILocation(line: 320, column: 6, scope: !11701)
!11719 = !DILocation(line: 320, column: 15, scope: !11701)
!11720 = !DILocation(line: 321, column: 6, scope: !11701)
!11721 = !DILocation(line: 321, column: 18, scope: !11701)
!11722 = !DILocation(line: 322, column: 19, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 322, column: 7)
!11724 = !DILocation(line: 0, scope: !11723)
!11725 = !DILocation(line: 322, column: 7, scope: !11701)
!11726 = !DILocation(line: 323, column: 5, scope: !11723)
!11727 = !DILocation(line: 327, column: 3, scope: !11701)
!11728 = distinct !DISubprogram(name: "omp_check_private", scope: !3, file: !3, line: 5649, type: !11729, scopeLine: 5650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11731)
!11729 = !DISubroutineType(types: !11730)
!11730 = !{!727, !2191, !734}
!11731 = !{!11732, !11733, !11734}
!11732 = !DILocalVariable(name: "ctx", arg: 1, scope: !11728, file: !3, line: 5649, type: !2191)
!11733 = !DILocalVariable(name: "decl", arg: 2, scope: !11728, file: !3, line: 5649, type: !734)
!11734 = !DILocalVariable(name: "n", scope: !11728, file: !3, line: 5651, type: !2201)
!11735 = !DILocation(line: 0, scope: !11728)
!11736 = !DILocation(line: 0, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11728, file: !3, line: 5654, column: 5)
!11738 = !DILocation(line: 5653, column: 3, scope: !11728)
!11739 = !DILocation(line: 5655, column: 18, scope: !11737)
!11740 = !DILocation(line: 5656, column: 15, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 5656, column: 11)
!11742 = !DILocation(line: 5656, column: 11, scope: !11737)
!11743 = !DILocation(line: 5657, column: 11, scope: !11741)
!11744 = !DILocation(line: 5659, column: 4, scope: !11741)
!11745 = !DILocation(line: 5659, column: 24, scope: !11741)
!11746 = !DILocation(line: 5659, column: 7, scope: !11741)
!11747 = !DILocation(line: 5657, column: 2, scope: !11741)
!11748 = !DILocation(line: 5661, column: 35, scope: !11737)
!11749 = !DILocation(line: 5661, column: 11, scope: !11737)
!11750 = !DILocation(line: 5662, column: 13, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 5662, column: 11)
!11752 = !DILocation(line: 5662, column: 11, scope: !11737)
!11753 = !DILocation(line: 5663, column: 13, scope: !11751)
!11754 = !DILocation(line: 5663, column: 9, scope: !11751)
!11755 = !DILocation(line: 5663, column: 2, scope: !11751)
!11756 = !DILocation(line: 5665, column: 15, scope: !11728)
!11757 = !DILocation(line: 5665, column: 27, scope: !11728)
!11758 = !DILocation(line: 5664, column: 5, scope: !11737)
!11759 = distinct !{!11759, !11738, !11760}
!11760 = !DILocation(line: 5665, column: 43, scope: !11728)
!11761 = !DILocation(line: 5667, column: 1, scope: !11728)
!11762 = distinct !DISubprogram(name: "splay_tree_compare_decl_uid", scope: !3, file: !3, line: 301, type: !2213, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11763)
!11763 = !{!11764, !11765, !11766, !11767}
!11764 = !DILocalVariable(name: "xa", arg: 1, scope: !11762, file: !3, line: 301, type: !2161)
!11765 = !DILocalVariable(name: "xb", arg: 2, scope: !11762, file: !3, line: 301, type: !2161)
!11766 = !DILocalVariable(name: "a", scope: !11762, file: !3, line: 303, type: !734)
!11767 = !DILocalVariable(name: "b", scope: !11762, file: !3, line: 304, type: !734)
!11768 = !DILocation(line: 0, scope: !11762)
!11769 = !DILocation(line: 303, column: 12, scope: !11762)
!11770 = !DILocation(line: 304, column: 12, scope: !11762)
!11771 = !DILocation(line: 306, column: 10, scope: !11762)
!11772 = !DILocation(line: 306, column: 25, scope: !11762)
!11773 = !DILocation(line: 306, column: 23, scope: !11762)
!11774 = !DILocation(line: 306, column: 3, scope: !11762)
!11775 = distinct !DISubprogram(name: "gimplify_adjust_omp_clauses_1", scope: !3, file: !3, line: 5837, type: !11776, scopeLine: 5838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11778)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{!392, !2201, !731}
!11778 = !{!11779, !11780, !11781, !11782, !11783, !11784, !11785, !11786, !11787, !11793}
!11779 = !DILocalVariable(name: "n", arg: 1, scope: !11775, file: !3, line: 5837, type: !2201)
!11780 = !DILocalVariable(name: "data", arg: 2, scope: !11775, file: !3, line: 5837, type: !731)
!11781 = !DILocalVariable(name: "list_p", scope: !11775, file: !3, line: 5839, type: !1093)
!11782 = !DILocalVariable(name: "decl", scope: !11775, file: !3, line: 5840, type: !734)
!11783 = !DILocalVariable(name: "flags", scope: !11775, file: !3, line: 5841, type: !7)
!11784 = !DILocalVariable(name: "code", scope: !11775, file: !3, line: 5842, type: !352)
!11785 = !DILocalVariable(name: "clause", scope: !11775, file: !3, line: 5843, type: !734)
!11786 = !DILocalVariable(name: "private_debug", scope: !11775, file: !3, line: 5844, type: !727)
!11787 = !DILocalVariable(name: "ctx", scope: !11788, file: !3, line: 5865, type: !2191)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 5864, column: 2)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 5863, column: 11)
!11790 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 5862, column: 5)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 5861, column: 12)
!11792 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 5859, column: 7)
!11793 = !DILocalVariable(name: "on", scope: !11794, file: !3, line: 5868, type: !2201)
!11794 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 5867, column: 6)
!11795 = !DILocation(line: 0, scope: !11775)
!11796 = !DILocation(line: 5839, column: 18, scope: !11775)
!11797 = !DILocation(line: 5840, column: 25, scope: !11775)
!11798 = !DILocation(line: 5841, column: 23, scope: !11775)
!11799 = !DILocation(line: 5841, column: 20, scope: !11775)
!11800 = !DILocation(line: 5846, column: 7, scope: !11775)
!11801 = !DILocation(line: 5850, column: 13, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 5850, column: 7)
!11803 = !DILocation(line: 5850, column: 7, scope: !11775)
!11804 = !DILocation(line: 5852, column: 7, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 5851, column: 5)
!11806 = !DILocation(line: 5857, column: 26, scope: !11802)
!11807 = !DILocation(line: 5858, column: 10, scope: !11802)
!11808 = !DILocation(line: 5857, column: 9, scope: !11802)
!11809 = !DILocation(line: 5859, column: 7, scope: !11775)
!11810 = !DILocation(line: 5861, column: 18, scope: !11791)
!11811 = !DILocation(line: 5861, column: 12, scope: !11792)
!11812 = !DILocation(line: 5863, column: 11, scope: !11789)
!11813 = !DILocation(line: 5863, column: 11, scope: !11790)
!11814 = !DILocation(line: 5865, column: 35, scope: !11788)
!11815 = !DILocation(line: 5865, column: 54, scope: !11788)
!11816 = !DILocation(line: 0, scope: !11788)
!11817 = !DILocation(line: 0, scope: !11794)
!11818 = !DILocation(line: 5866, column: 4, scope: !11788)
!11819 = !DILocation(line: 5865, column: 29, scope: !11788)
!11820 = !DILocation(line: 5866, column: 15, scope: !11788)
!11821 = !DILocation(line: 5869, column: 29, scope: !11794)
!11822 = !DILocation(line: 5869, column: 5, scope: !11794)
!11823 = !DILocation(line: 5870, column: 12, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 5870, column: 12)
!11825 = !DILocation(line: 5870, column: 15, scope: !11824)
!11826 = !DILocation(line: 5870, column: 23, scope: !11824)
!11827 = !DILocation(line: 5870, column: 29, scope: !11824)
!11828 = !DILocation(line: 5871, column: 45, scope: !11824)
!11829 = !DILocation(line: 5870, column: 12, scope: !11794)
!11830 = !DILocation(line: 5873, column: 19, scope: !11794)
!11831 = !DILocation(line: 5874, column: 6, scope: !11788)
!11832 = distinct !{!11832, !11818, !11831}
!11833 = !DILocation(line: 5875, column: 12, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 5875, column: 8)
!11835 = !DILocation(line: 5880, column: 18, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 5880, column: 12)
!11837 = !DILocation(line: 5880, column: 12, scope: !11791)
!11838 = !DILocation(line: 5882, column: 18, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 5882, column: 12)
!11840 = !DILocation(line: 5882, column: 12, scope: !11836)
!11841 = !DILocation(line: 5885, column: 5, scope: !11839)
!11842 = !DILocation(line: 0, scope: !11792)
!11843 = !DILocation(line: 5887, column: 30, scope: !11775)
!11844 = !DILocation(line: 5887, column: 12, scope: !11775)
!11845 = !DILocation(line: 5888, column: 3, scope: !11775)
!11846 = !DILocation(line: 5888, column: 28, scope: !11775)
!11847 = !DILocation(line: 5889, column: 31, scope: !11775)
!11848 = !DILocation(line: 5889, column: 3, scope: !11775)
!11849 = !DILocation(line: 5889, column: 29, scope: !11775)
!11850 = !DILocation(line: 5890, column: 7, scope: !11775)
!11851 = !DILocation(line: 5891, column: 5, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 5890, column: 7)
!11853 = !DILocation(line: 5891, column: 39, scope: !11852)
!11854 = !DILocation(line: 5892, column: 17, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 5892, column: 12)
!11856 = !DILocation(line: 5892, column: 49, scope: !11855)
!11857 = !DILocation(line: 5892, column: 39, scope: !11855)
!11858 = !DILocation(line: 5893, column: 5, scope: !11855)
!11859 = !DILocation(line: 5893, column: 43, scope: !11855)
!11860 = !DILocation(line: 5894, column: 11, scope: !11775)
!11861 = !DILocation(line: 5895, column: 20, scope: !11775)
!11862 = !DILocation(line: 5895, column: 3, scope: !11775)
!11863 = !DILocation(line: 5897, column: 3, scope: !11775)
!11864 = !DILocation(line: 5898, column: 1, scope: !11775)
!11865 = distinct !DISubprogram(name: "delete_omp_context", scope: !3, file: !3, line: 333, type: !11866, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{null, !2191}
!11868 = !{!11869}
!11869 = !DILocalVariable(name: "c", arg: 1, scope: !11865, file: !3, line: 333, type: !2191)
!11870 = !DILocation(line: 0, scope: !11865)
!11871 = !DILocation(line: 335, column: 25, scope: !11865)
!11872 = !DILocation(line: 335, column: 3, scope: !11865)
!11873 = !DILocation(line: 336, column: 27, scope: !11865)
!11874 = !DILocation(line: 336, column: 3, scope: !11865)
!11875 = !DILocation(line: 337, column: 3, scope: !11865)
!11876 = !DILocation(line: 338, column: 1, scope: !11865)
!11877 = distinct !DISubprogram(name: "omp_is_private", scope: !3, file: !3, line: 5601, type: !11729, scopeLine: 5602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11878)
!11878 = !{!11879, !11880, !11881}
!11879 = !DILocalVariable(name: "ctx", arg: 1, scope: !11877, file: !3, line: 5601, type: !2191)
!11880 = !DILocalVariable(name: "decl", arg: 2, scope: !11877, file: !3, line: 5601, type: !734)
!11881 = !DILocalVariable(name: "n", scope: !11877, file: !3, line: 5603, type: !2201)
!11882 = !DILocation(line: 0, scope: !11877)
!11883 = !DILocation(line: 5640, column: 12, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 5639, column: 12)
!11885 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 5637, column: 7)
!11886 = !DILocation(line: 5605, column: 31, scope: !11877)
!11887 = !DILocation(line: 5605, column: 7, scope: !11877)
!11888 = !DILocation(line: 5606, column: 9, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 5606, column: 7)
!11890 = !DILocation(line: 5606, column: 7, scope: !11877)
!11891 = !DILocation(line: 5608, column: 14, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 5608, column: 11)
!11893 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 5607, column: 5)
!11894 = !DILocation(line: 5608, column: 20, scope: !11892)
!11895 = !DILocation(line: 5608, column: 11, scope: !11893)
!11896 = !DILocation(line: 5610, column: 15, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 5610, column: 8)
!11898 = distinct !DILexicalBlock(scope: !11892, file: !3, line: 5609, column: 2)
!11899 = !DILocation(line: 5610, column: 12, scope: !11897)
!11900 = !DILocation(line: 5610, column: 8, scope: !11898)
!11901 = !DILocation(line: 5613, column: 8, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 5611, column: 6)
!11903 = !DILocation(line: 5612, column: 8, scope: !11902)
!11904 = !DILocation(line: 5614, column: 17, scope: !11902)
!11905 = !DILocation(line: 5615, column: 8, scope: !11902)
!11906 = !DILocation(line: 5620, column: 26, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11892, file: !3, line: 5620, column: 16)
!11908 = !DILocation(line: 5620, column: 43, scope: !11907)
!11909 = !DILocation(line: 5621, column: 9, scope: !11907)
!11910 = !DILocation(line: 5621, column: 20, scope: !11907)
!11911 = !DILocation(line: 5621, column: 17, scope: !11907)
!11912 = !DILocation(line: 5622, column: 6, scope: !11907)
!11913 = !DILocation(line: 5622, column: 15, scope: !11907)
!11914 = !DILocation(line: 5622, column: 27, scope: !11907)
!11915 = !DILocation(line: 5623, column: 10, scope: !11907)
!11916 = !DILocation(line: 5623, column: 32, scope: !11907)
!11917 = !DILocation(line: 5623, column: 46, scope: !11907)
!11918 = !DILocation(line: 5620, column: 16, scope: !11892)
!11919 = !DILocation(line: 5625, column: 18, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !3, line: 5625, column: 8)
!11921 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 5624, column: 2)
!11922 = !DILocation(line: 5625, column: 39, scope: !11920)
!11923 = !DILocation(line: 5625, column: 8, scope: !11921)
!11924 = !DILocation(line: 5627, column: 6, scope: !11920)
!11925 = !DILocation(line: 5626, column: 6, scope: !11920)
!11926 = !DILocation(line: 5628, column: 23, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 5628, column: 13)
!11928 = !DILocation(line: 5628, column: 41, scope: !11927)
!11929 = !DILocation(line: 5628, column: 13, scope: !11920)
!11930 = !DILocation(line: 5630, column: 6, scope: !11927)
!11931 = !DILocation(line: 5629, column: 6, scope: !11927)
!11932 = !DILocation(line: 5632, column: 22, scope: !11893)
!11933 = !DILocation(line: 5632, column: 19, scope: !11893)
!11934 = !DILocation(line: 5633, column: 8, scope: !11893)
!11935 = !DILocation(line: 5633, column: 17, scope: !11893)
!11936 = !DILocation(line: 5633, column: 29, scope: !11893)
!11937 = !DILocation(line: 5634, column: 5, scope: !11893)
!11938 = !DILocation(line: 5634, column: 27, scope: !11893)
!11939 = !DILocation(line: 5634, column: 41, scope: !11893)
!11940 = !DILocation(line: 5632, column: 7, scope: !11893)
!11941 = !DILocation(line: 5637, column: 12, scope: !11885)
!11942 = !DILocation(line: 5637, column: 24, scope: !11885)
!11943 = !DILocation(line: 5637, column: 7, scope: !11877)
!11944 = !DILocation(line: 5639, column: 17, scope: !11884)
!11945 = !DILocation(line: 5639, column: 12, scope: !11884)
!11946 = !DILocation(line: 5639, column: 12, scope: !11885)
!11947 = !DILocation(line: 5642, column: 1, scope: !11877)
!11948 = distinct !DISubprogram(name: "gimple_omp_for_set_index", scope: !391, file: !391, line: 3472, type: !11949, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11951)
!11949 = !DISubroutineType(types: !11950)
!11950 = !{null, !1058, !1204, !734}
!11951 = !{!11952, !11953, !11954}
!11952 = !DILocalVariable(name: "gs", arg: 1, scope: !11948, file: !391, line: 3472, type: !1058)
!11953 = !DILocalVariable(name: "i", arg: 2, scope: !11948, file: !391, line: 3472, type: !1204)
!11954 = !DILocalVariable(name: "index", arg: 3, scope: !11948, file: !391, line: 3472, type: !734)
!11955 = !DILocation(line: 0, scope: !11948)
!11956 = !DILocation(line: 3475, column: 3, scope: !11948)
!11957 = !DILocation(line: 3476, column: 22, scope: !11948)
!11958 = !DILocation(line: 3476, column: 30, scope: !11948)
!11959 = !DILocation(line: 3476, column: 36, scope: !11948)
!11960 = !DILocation(line: 3477, column: 1, scope: !11948)
!11961 = distinct !DISubprogram(name: "gimple_omp_for_set_initial", scope: !391, file: !391, line: 3505, type: !11949, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11962)
!11962 = !{!11963, !11964, !11965}
!11963 = !DILocalVariable(name: "gs", arg: 1, scope: !11961, file: !391, line: 3505, type: !1058)
!11964 = !DILocalVariable(name: "i", arg: 2, scope: !11961, file: !391, line: 3505, type: !1204)
!11965 = !DILocalVariable(name: "initial", arg: 3, scope: !11961, file: !391, line: 3505, type: !734)
!11966 = !DILocation(line: 0, scope: !11961)
!11967 = !DILocation(line: 3508, column: 3, scope: !11961)
!11968 = !DILocation(line: 3509, column: 22, scope: !11961)
!11969 = !DILocation(line: 3509, column: 30, scope: !11961)
!11970 = !DILocation(line: 3509, column: 38, scope: !11961)
!11971 = !DILocation(line: 3510, column: 1, scope: !11961)
!11972 = distinct !DISubprogram(name: "gimple_omp_for_set_cond", scope: !391, file: !391, line: 4073, type: !11973, scopeLine: 4074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11975)
!11973 = !DISubroutineType(types: !11974)
!11974 = !{null, !1058, !1204, !134}
!11975 = !{!11976, !11977, !11978}
!11976 = !DILocalVariable(name: "gs", arg: 1, scope: !11972, file: !391, line: 4073, type: !1058)
!11977 = !DILocalVariable(name: "i", arg: 2, scope: !11972, file: !391, line: 4073, type: !1204)
!11978 = !DILocalVariable(name: "cond", arg: 3, scope: !11972, file: !391, line: 4073, type: !134)
!11979 = !DILocation(line: 0, scope: !11972)
!11980 = !DILocation(line: 4076, column: 3, scope: !11972)
!11981 = !DILocation(line: 4077, column: 3, scope: !11972)
!11982 = !DILocation(line: 4078, column: 22, scope: !11972)
!11983 = !DILocation(line: 4078, column: 30, scope: !11972)
!11984 = !DILocation(line: 4078, column: 35, scope: !11972)
!11985 = !DILocation(line: 4079, column: 1, scope: !11972)
!11986 = distinct !DISubprogram(name: "gimple_omp_for_set_final", scope: !391, file: !391, line: 3538, type: !11949, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11987)
!11987 = !{!11988, !11989, !11990}
!11988 = !DILocalVariable(name: "gs", arg: 1, scope: !11986, file: !391, line: 3538, type: !1058)
!11989 = !DILocalVariable(name: "i", arg: 2, scope: !11986, file: !391, line: 3538, type: !1204)
!11990 = !DILocalVariable(name: "final", arg: 3, scope: !11986, file: !391, line: 3538, type: !734)
!11991 = !DILocation(line: 0, scope: !11986)
!11992 = !DILocation(line: 3541, column: 3, scope: !11986)
!11993 = !DILocation(line: 3542, column: 22, scope: !11986)
!11994 = !DILocation(line: 3542, column: 30, scope: !11986)
!11995 = !DILocation(line: 3542, column: 36, scope: !11986)
!11996 = !DILocation(line: 3543, column: 1, scope: !11986)
!11997 = distinct !DISubprogram(name: "gimple_omp_for_set_incr", scope: !391, file: !391, line: 3571, type: !11949, scopeLine: 3572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11998)
!11998 = !{!11999, !12000, !12001}
!11999 = !DILocalVariable(name: "gs", arg: 1, scope: !11997, file: !391, line: 3571, type: !1058)
!12000 = !DILocalVariable(name: "i", arg: 2, scope: !11997, file: !391, line: 3571, type: !1204)
!12001 = !DILocalVariable(name: "incr", arg: 3, scope: !11997, file: !391, line: 3571, type: !734)
!12002 = !DILocation(line: 0, scope: !11997)
!12003 = !DILocation(line: 3574, column: 3, scope: !11997)
!12004 = !DILocation(line: 3575, column: 22, scope: !11997)
!12005 = !DILocation(line: 3575, column: 30, scope: !11997)
!12006 = !DILocation(line: 3575, column: 35, scope: !11997)
!12007 = !DILocation(line: 3576, column: 1, scope: !11997)
!12008 = distinct !DISubprogram(name: "goa_stabilize_expr", scope: !3, file: !3, line: 6282, type: !12009, scopeLine: 6284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12011)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!392, !1093, !2939, !734, !734}
!12011 = !{!12012, !12013, !12014, !12015, !12016, !12017, !12018}
!12012 = !DILocalVariable(name: "expr_p", arg: 1, scope: !12008, file: !3, line: 6282, type: !1093)
!12013 = !DILocalVariable(name: "pre_p", arg: 2, scope: !12008, file: !3, line: 6282, type: !2939)
!12014 = !DILocalVariable(name: "lhs_addr", arg: 3, scope: !12008, file: !3, line: 6282, type: !734)
!12015 = !DILocalVariable(name: "lhs_var", arg: 4, scope: !12008, file: !3, line: 6283, type: !734)
!12016 = !DILocalVariable(name: "expr", scope: !12008, file: !3, line: 6285, type: !734)
!12017 = !DILocalVariable(name: "saw_lhs", scope: !12008, file: !3, line: 6286, type: !392)
!12018 = !DILocalVariable(name: "gs", scope: !12019, file: !3, line: 6327, type: !390)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 6326, column: 5)
!12020 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 6325, column: 7)
!12021 = !DILocation(line: 0, scope: !12008)
!12022 = !DILocation(line: 6285, column: 15, scope: !12008)
!12023 = !DILocation(line: 6288, column: 7, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 6288, column: 7)
!12025 = !DILocation(line: 6288, column: 7, scope: !12008)
!12026 = !DILocation(line: 6290, column: 15, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 6289, column: 5)
!12028 = !DILocation(line: 6291, column: 7, scope: !12027)
!12029 = !DILocation(line: 6293, column: 7, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 6293, column: 7)
!12031 = !DILocation(line: 6293, column: 7, scope: !12008)
!12032 = !DILocation(line: 6297, column: 11, scope: !12008)
!12033 = !DILocation(line: 6297, column: 3, scope: !12008)
!12034 = !DILocation(line: 6301, column: 39, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 6298, column: 5)
!12036 = !DILocation(line: 6301, column: 18, scope: !12035)
!12037 = !DILocation(line: 6301, column: 7, scope: !12035)
!12038 = !DILocation(line: 6304, column: 39, scope: !12035)
!12039 = !DILocation(line: 6304, column: 18, scope: !12035)
!12040 = !DILocation(line: 6304, column: 15, scope: !12035)
!12041 = !DILocation(line: 6306, column: 7, scope: !12035)
!12042 = !DILocation(line: 6308, column: 15, scope: !12035)
!12043 = !DILocation(line: 6308, column: 7, scope: !12035)
!12044 = !DILocation(line: 6312, column: 36, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 6309, column: 2)
!12046 = !DILocation(line: 6312, column: 15, scope: !12045)
!12047 = !DILocation(line: 6314, column: 15, scope: !12045)
!12048 = !DILocation(line: 6314, column: 12, scope: !12045)
!12049 = !DILocation(line: 6316, column: 4, scope: !12045)
!12050 = !DILocation(line: 6325, column: 15, scope: !12020)
!12051 = !DILocation(line: 6325, column: 7, scope: !12008)
!12052 = !DILocation(line: 6328, column: 12, scope: !12019)
!12053 = !DILocation(line: 0, scope: !12019)
!12054 = !DILocation(line: 6329, column: 14, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 6329, column: 11)
!12056 = !DILocation(line: 6329, column: 11, scope: !12019)
!12057 = !DILocation(line: 6331, column: 5, scope: !12019)
!12058 = !DILocation(line: 6334, column: 1, scope: !12008)
!12059 = distinct !DISubprogram(name: "goa_lhs_expr_p", scope: !3, file: !3, line: 6246, type: !12060, scopeLine: 6247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12062)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!727, !734, !734}
!12062 = !{!12063, !12064}
!12063 = !DILocalVariable(name: "expr", arg: 1, scope: !12059, file: !3, line: 6246, type: !734)
!12064 = !DILocalVariable(name: "addr", arg: 2, scope: !12059, file: !3, line: 6246, type: !734)
!12065 = !DILocation(line: 0, scope: !12059)
!12066 = !DILocation(line: 6251, column: 3, scope: !12059)
!12067 = !DILocation(line: 6253, column: 7, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 6253, column: 7)
!12069 = !DILocation(line: 6253, column: 24, scope: !12068)
!12070 = !DILocation(line: 6253, column: 7, scope: !12059)
!12071 = !DILocation(line: 6256, column: 7, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 6254, column: 5)
!12073 = !DILocation(line: 0, scope: !12072)
!12074 = !DILocation(line: 6256, column: 19, scope: !12072)
!12075 = !DILocation(line: 6257, column: 7, scope: !12072)
!12076 = !DILocation(line: 6257, column: 11, scope: !12072)
!12077 = !DILocation(line: 6258, column: 4, scope: !12072)
!12078 = !DILocation(line: 6259, column: 30, scope: !12072)
!12079 = !DILocation(line: 6259, column: 27, scope: !12072)
!12080 = !DILocation(line: 6260, column: 7, scope: !12072)
!12081 = !DILocation(line: 6260, column: 30, scope: !12072)
!12082 = !DILocation(line: 6260, column: 48, scope: !12072)
!12083 = !DILocation(line: 6260, column: 10, scope: !12072)
!12084 = !DILocation(line: 6263, column: 11, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 6261, column: 2)
!12086 = distinct !{!12086, !12071, !12087}
!12087 = !DILocation(line: 6264, column: 2, scope: !12072)
!12088 = !DILocation(line: 6265, column: 11, scope: !12072)
!12089 = !DILocation(line: 6267, column: 15, scope: !12072)
!12090 = !DILocation(line: 6267, column: 32, scope: !12072)
!12091 = !DILocation(line: 6268, column: 8, scope: !12072)
!12092 = !DILocation(line: 6268, column: 11, scope: !12072)
!12093 = !DILocation(line: 6268, column: 28, scope: !12072)
!12094 = !DILocation(line: 6269, column: 8, scope: !12072)
!12095 = !DILocation(line: 6269, column: 11, scope: !12072)
!12096 = !DILocation(line: 6269, column: 37, scope: !12072)
!12097 = !DILocation(line: 6269, column: 34, scope: !12072)
!12098 = !DILocation(line: 6267, column: 7, scope: !12072)
!12099 = !DILocation(line: 6271, column: 7, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 6271, column: 7)
!12101 = !DILocation(line: 6271, column: 24, scope: !12100)
!12102 = !DILocation(line: 6271, column: 37, scope: !12100)
!12103 = !DILocation(line: 6271, column: 48, scope: !12100)
!12104 = !DILocation(line: 6271, column: 45, scope: !12100)
!12105 = !DILocation(line: 6271, column: 7, scope: !12059)
!12106 = !DILocation(line: 6273, column: 3, scope: !12059)
!12107 = !DILocation(line: 6274, column: 1, scope: !12059)
!12108 = distinct !DISubprogram(name: "copy_if_shared_r", scope: !3, file: !3, line: 887, type: !3453, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12109)
!12109 = !{!12110, !12111, !12112, !12113, !12114}
!12110 = !DILocalVariable(name: "tp", arg: 1, scope: !12108, file: !3, line: 887, type: !1093)
!12111 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !12108, file: !3, line: 887, type: !3455)
!12112 = !DILocalVariable(name: "data", arg: 3, scope: !12108, file: !3, line: 888, type: !731)
!12113 = !DILocalVariable(name: "t", scope: !12108, file: !3, line: 890, type: !734)
!12114 = !DILocalVariable(name: "code", scope: !12108, file: !3, line: 891, type: !134)
!12115 = !DILocation(line: 0, scope: !12108)
!12116 = !DILocation(line: 890, column: 12, scope: !12108)
!12117 = !DILocation(line: 891, column: 25, scope: !12108)
!12118 = !DILocation(line: 897, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12108, file: !3, line: 897, column: 7)
!12120 = !DILocation(line: 897, column: 30, scope: !12119)
!12121 = !DILocation(line: 898, column: 7, scope: !12119)
!12122 = !DILocation(line: 898, column: 33, scope: !12119)
!12123 = !DILocation(line: 899, column: 7, scope: !12119)
!12124 = !DILocation(line: 899, column: 33, scope: !12119)
!12125 = !DILocation(line: 897, column: 7, scope: !12108)
!12126 = !DILocation(line: 901, column: 11, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 901, column: 11)
!12128 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 900, column: 5)
!12129 = !DILocation(line: 901, column: 11, scope: !12128)
!12130 = !DILocation(line: 902, column: 17, scope: !12127)
!12131 = !DILocation(line: 902, column: 2, scope: !12127)
!12132 = !DILocation(line: 904, column: 19, scope: !12127)
!12133 = !DILocation(line: 909, column: 12, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 909, column: 12)
!12135 = !DILocation(line: 909, column: 12, scope: !12119)
!12136 = !DILocation(line: 911, column: 7, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 910, column: 5)
!12138 = !DILocation(line: 912, column: 22, scope: !12137)
!12139 = !DILocation(line: 913, column: 5, scope: !12137)
!12140 = !DILocation(line: 917, column: 22, scope: !12134)
!12141 = !DILocation(line: 919, column: 3, scope: !12108)
!12142 = distinct !DISubprogram(name: "unmark_visited_r", scope: !3, file: !3, line: 923, type: !3453, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12143)
!12143 = !{!12144, !12145, !12146}
!12144 = !DILocalVariable(name: "tp", arg: 1, scope: !12142, file: !3, line: 923, type: !1093)
!12145 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !12142, file: !3, line: 923, type: !3455)
!12146 = !DILocalVariable(name: "data", arg: 3, scope: !12142, file: !3, line: 924, type: !731)
!12147 = !DILocation(line: 0, scope: !12142)
!12148 = !DILocation(line: 926, column: 7, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 926, column: 7)
!12150 = !DILocation(line: 926, column: 7, scope: !12142)
!12151 = !DILocation(line: 927, column: 24, scope: !12149)
!12152 = !DILocation(line: 927, column: 5, scope: !12149)
!12153 = !DILocation(line: 929, column: 20, scope: !12149)
!12154 = !DILocation(line: 931, column: 3, scope: !12142)
!12155 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !391, file: !391, line: 1647, type: !12156, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12158)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{!1093, !3169, !7}
!12158 = !{!12159, !12160}
!12159 = !DILocalVariable(name: "gs", arg: 1, scope: !12155, file: !391, line: 1647, type: !3169)
!12160 = !DILocalVariable(name: "i", arg: 2, scope: !12155, file: !391, line: 1647, type: !7)
!12161 = !DILocation(line: 0, scope: !12155)
!12162 = !DILocation(line: 1649, column: 7, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12155, file: !391, line: 1649, column: 7)
!12164 = !DILocation(line: 1649, column: 7, scope: !12155)
!12165 = !DILocation(line: 1654, column: 14, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12163, file: !391, line: 1650, column: 5)
!12167 = !DILocation(line: 1654, column: 50, scope: !12166)
!12168 = !DILocation(line: 1654, column: 7, scope: !12166)
!12169 = !DILocation(line: 0, scope: !12163)
!12170 = !DILocation(line: 1658, column: 1, scope: !12155)
!12171 = distinct !DISubprogram(name: "gimple_has_ops", scope: !391, file: !391, line: 1274, type: !8940, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12172)
!12172 = !{!12173}
!12173 = !DILocalVariable(name: "g", arg: 1, scope: !12171, file: !391, line: 1274, type: !3169)
!12174 = !DILocation(line: 0, scope: !12171)
!12175 = !DILocation(line: 1276, column: 10, scope: !12171)
!12176 = !DILocation(line: 1276, column: 26, scope: !12171)
!12177 = !DILocation(line: 1276, column: 41, scope: !12171)
!12178 = !DILocation(line: 1276, column: 44, scope: !12171)
!12179 = !DILocation(line: 1276, column: 60, scope: !12171)
!12180 = !DILocation(line: 1276, column: 3, scope: !12171)
!12181 = distinct !DISubprogram(name: "gimple_ops", scope: !391, file: !391, line: 1614, type: !8875, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12182)
!12182 = !{!12183, !12184}
!12183 = !DILocalVariable(name: "gs", arg: 1, scope: !12181, file: !391, line: 1614, type: !1058)
!12184 = !DILocalVariable(name: "off", scope: !12181, file: !391, line: 1616, type: !1204)
!12185 = !DILocation(line: 0, scope: !12181)
!12186 = !DILocation(line: 1621, column: 28, scope: !12181)
!12187 = !DILocation(line: 1621, column: 9, scope: !12181)
!12188 = !DILocation(line: 1622, column: 3, scope: !12181)
!12189 = !DILocation(line: 1624, column: 20, scope: !12181)
!12190 = !DILocation(line: 1624, column: 32, scope: !12181)
!12191 = !DILocation(line: 1624, column: 10, scope: !12181)
!12192 = !DILocation(line: 1624, column: 3, scope: !12181)
!12193 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !391, file: !391, line: 1073, type: !12194, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12196)
!12194 = !DISubroutineType(types: !12195)
!12195 = !{!693, !1058}
!12196 = !{!12197}
!12197 = !DILocalVariable(name: "gs", arg: 1, scope: !12193, file: !391, line: 1073, type: !1058)
!12198 = !DILocation(line: 0, scope: !12193)
!12199 = !DILocation(line: 1075, column: 24, scope: !12193)
!12200 = !DILocation(line: 1075, column: 10, scope: !12193)
!12201 = !DILocation(line: 1075, column: 3, scope: !12193)
!12202 = distinct !DISubprogram(name: "gss_for_code", scope: !391, file: !391, line: 1061, type: !12203, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12205)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!693, !439}
!12205 = !{!12206}
!12206 = !DILocalVariable(name: "code", arg: 1, scope: !12202, file: !391, line: 1061, type: !439)
!12207 = !DILocation(line: 0, scope: !12202)
!12208 = !DILocation(line: 1066, column: 10, scope: !12202)
!12209 = !DILocation(line: 1066, column: 3, scope: !12202)
!12210 = distinct !DISubprogram(name: "gimple_call_fn", scope: !391, file: !391, line: 1911, type: !3176, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12211)
!12211 = !{!12212}
!12212 = !DILocalVariable(name: "gs", arg: 1, scope: !12210, file: !391, line: 1911, type: !3169)
!12213 = !DILocation(line: 0, scope: !12210)
!12214 = !DILocation(line: 1914, column: 10, scope: !12210)
!12215 = !DILocation(line: 1914, column: 3, scope: !12210)
