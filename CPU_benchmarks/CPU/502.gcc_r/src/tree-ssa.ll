; ModuleID = 'tree-ssa.bc'
source_filename = "tree-ssa.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.pointer_map_t = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.VEC_edge_var_map_heap = type { %struct.VEC_edge_var_map_base }
%struct.VEC_edge_var_map_base = type { i32, i32, [1 x %struct._edge_var_map] }
%struct._edge_var_map = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.referenced_var_iterator = type { %struct.htab_iterator }
%struct.htab_iterator = type { %struct.htab*, i8**, i8** }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.walk_data = type { %union.gimple_statement_d*, i8, i8 }
%struct.expanded_location = type { i8*, i32, i32, i8 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@edge_var_maps = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !0
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str = private unnamed_addr constant [11 x i8] c"tree-ssa.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"AUX pointer initialized for edge %d->%d\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"stmt (%p) marked modified after optimization pass: \00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@optimize = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [49 x i8] c"statement makes a memory store, but has no VDEFS\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"statement has VDEF operand not in defs list\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"statement has VDEF but no VUSE operand\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"VDEF and VUSE do not use the same symbol\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"statement has VUSE operand not in uses list\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"in statement\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"SSA_NAME_DEF_STMT is wrong\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"Expected definition statement:\0A\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"\0AActual definition statement:\0A\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"verify_ssa failed\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.14 = private unnamed_addr constant [26 x i8] c"*early_warn_uninitialized\00", align 1
@pass_early_warn_uninitialized = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i32 0, i32 0), i8 ()* @gate_warn_uninitialized, i32 ()* @execute_early_warn_uninitialized, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 32, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2029
@.str.15 = private unnamed_addr constant [25 x i8] c"*late_warn_uninitialized\00", align 1
@pass_late_warn_uninitialized = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i32 0, i32 0), i8 ()* @gate_warn_uninitialized, i32 ()* @execute_late_warn_uninitialized, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 32, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2057
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [32 x i8] c"No longer having address taken \00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"Decl is now a gimple register \00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"addressables\00", align 1
@pass_update_address_taken = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8 ()* null, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 32, i32 0, i32 0, i32 0, i32 2097153 } }, align 8, !dbg !2059
@.str.20 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.21 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.22 = private unnamed_addr constant [51 x i8] c"SSA_NAME created in two different blocks %i and %i\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"while verifying SSA_NAME \00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c" in statement\0A\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.26 = private unnamed_addr constant [59 x i8] c"incoming edge count does not match number of PHI arguments\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"PHI argument is missing for edge %d->%d\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"PHI argument is not SSA_NAME, or invariant\00", align 1
@.str.29 = private unnamed_addr constant [43 x i8] c"address taken, but ADDRESSABLE bit not set\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"wrong edge %d->%d for PHI argument\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"PHI argument\0A\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"for PHI node\0A\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"expected an SSA_NAME object\00", align 1
@.str.34 = private unnamed_addr constant [49 x i8] c"type mismatch between an SSA_NAME and its symbol\00", align 1
@.str.35 = private unnamed_addr constant [60 x i8] c"found an SSA_NAME that had been released into the free pool\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"found a virtual definition for a GIMPLE register\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"virtual SSA name for non-VOP decl\00", align 1
@.str.38 = private unnamed_addr constant [43 x i8] c"found a real definition for a non-register\00", align 1
@.str.39 = private unnamed_addr constant [57 x i8] c"found a default name with a non-empty defining statement\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"missing definition\00", align 1
@.str.41 = private unnamed_addr constant [57 x i8] c"definition in block %i does not dominate use in block %i\00", align 1
@.str.42 = private unnamed_addr constant [39 x i8] c"definition in block %i follows the use\00", align 1
@.str.43 = private unnamed_addr constant [46 x i8] c"SSA_NAME_OCCURS_IN_ABNORMAL_PHI should be set\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"no immediate_use list\00", align 1
@.str.45 = private unnamed_addr constant [25 x i8] c"wrong immediate use list\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"for SSA_NAME: \00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c" in statement:\0A\00", align 1
@warn_uninitialized = external dso_local local_unnamed_addr global i32, align 4
@.str.48 = private unnamed_addr constant [43 x i8] c"%qD is used uninitialized in this function\00", align 1
@.str.49 = private unnamed_addr constant [47 x i8] c"%qD may be used uninitialized in this function\00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"%qD was declared here\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2065 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2078, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2079, metadata !DIExpression()), !dbg !2080
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2081
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2082
  ret i32 %call, !dbg !2083
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2084 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2088
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2089
  ret i32 %call, !dbg !2090
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2091 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2146, metadata !DIExpression()), !dbg !2147
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2148
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2148
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2148
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2148
  %cmp = icmp uge i8* %0, %1, !dbg !2148
  %conv1 = zext i1 %cmp to i64, !dbg !2148
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2148
  %tobool = icmp eq i64 %expval, 0, !dbg !2148
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2148

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2148
  br label %cond.end, !dbg !2148

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2148
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2148
  %2 = load i8, i8* %0, align 1, !dbg !2148
  %conv3 = zext i8 %2 to i32, !dbg !2148
  br label %cond.end, !dbg !2148

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2148
  ret i32 %cond, !dbg !2149
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2150 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2152, metadata !DIExpression()), !dbg !2153
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2154
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2154
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2154
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2154
  %cmp = icmp uge i8* %0, %1, !dbg !2154
  %conv1 = zext i1 %cmp to i64, !dbg !2154
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2154
  %tobool = icmp eq i64 %expval, 0, !dbg !2154
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2154

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2154
  br label %cond.end, !dbg !2154

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2154
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2154
  %2 = load i8, i8* %0, align 1, !dbg !2154
  %conv3 = zext i8 %2 to i32, !dbg !2154
  br label %cond.end, !dbg !2154

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2154
  ret i32 %cond, !dbg !2155
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2156 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2157
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2157
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2157
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2157
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2157
  %cmp = icmp uge i8* %1, %2, !dbg !2157
  %conv1 = zext i1 %cmp to i64, !dbg !2157
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2157
  %tobool = icmp eq i64 %expval, 0, !dbg !2157
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2157

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2157
  br label %cond.end, !dbg !2157

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2157
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2157
  %3 = load i8, i8* %1, align 1, !dbg !2157
  %conv3 = zext i8 %3 to i32, !dbg !2157
  br label %cond.end, !dbg !2157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2157
  ret i32 %cond, !dbg !2158
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2159 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2165
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2166
  ret i32 %call, !dbg !2167
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2168 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2172, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2173, metadata !DIExpression()), !dbg !2174
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2175
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2175
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2175
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2175
  %cmp = icmp uge i8* %0, %1, !dbg !2175
  %conv1 = zext i1 %cmp to i64, !dbg !2175
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2175
  %tobool = icmp eq i64 %expval, 0, !dbg !2175
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2175

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2175
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2175
  br label %cond.end, !dbg !2175

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2175
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2175
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2175
  store i8 %conv2, i8* %0, align 1, !dbg !2175
  %conv6 = and i32 %__c, 255, !dbg !2175
  br label %cond.end, !dbg !2175

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2175
  ret i32 %cond, !dbg !2176
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2177 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2179, metadata !DIExpression()), !dbg !2181
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2180, metadata !DIExpression()), !dbg !2181
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2182
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2182
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2182
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2182
  %cmp = icmp uge i8* %0, %1, !dbg !2182
  %conv1 = zext i1 %cmp to i64, !dbg !2182
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2182
  %tobool = icmp eq i64 %expval, 0, !dbg !2182
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2182

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2182
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2182
  br label %cond.end, !dbg !2182

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2182
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2182
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2182
  store i8 %conv2, i8* %0, align 1, !dbg !2182
  %conv6 = and i32 %__c, 255, !dbg !2182
  br label %cond.end, !dbg !2182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2182
  ret i32 %cond, !dbg !2183
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2184 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2186, metadata !DIExpression()), !dbg !2187
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2188
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2188
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2188
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2188
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2188
  %cmp = icmp uge i8* %1, %2, !dbg !2188
  %conv1 = zext i1 %cmp to i64, !dbg !2188
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2188
  %tobool = icmp eq i64 %expval, 0, !dbg !2188
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2188

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2188
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2188
  br label %cond.end, !dbg !2188

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2188
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2188
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2188
  store i8 %conv4, i8* %1, align 1, !dbg !2188
  %conv6 = and i32 %__c, 255, !dbg !2188
  br label %cond.end, !dbg !2188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2188
  ret i32 %cond, !dbg !2189
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2190 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2196, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2197, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2198, metadata !DIExpression()), !dbg !2199
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2200
  ret i64 %call, !dbg !2201
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2202 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2204, metadata !DIExpression()), !dbg !2205
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2206
  %0 = load i32, i32* %_flags, align 8, !dbg !2206
  %and = lshr i32 %0, 4, !dbg !2206
  %and.lobit = and i32 %and, 1, !dbg !2206
  ret i32 %and.lobit, !dbg !2207
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2208 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2210, metadata !DIExpression()), !dbg !2211
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2212
  %0 = load i32, i32* %_flags, align 8, !dbg !2212
  %and = lshr i32 %0, 5, !dbg !2212
  %and.lobit = and i32 %and, 1, !dbg !2212
  ret i32 %and.lobit, !dbg !2213
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2214 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2217, metadata !DIExpression()), !dbg !2218
  %__c.off = add i32 %__c, 128, !dbg !2219
  %0 = icmp ult i32 %__c.off, 384, !dbg !2219
  br i1 %0, label %cond.true, label %cond.end, !dbg !2219

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2220
  %1 = load i32*, i32** %call, align 8, !dbg !2221
  %idxprom = sext i32 %__c to i64, !dbg !2222
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2222
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2222
  br label %cond.end, !dbg !2223

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2223
  ret i32 %cond, !dbg !2224
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2225 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2227, metadata !DIExpression()), !dbg !2228
  %__c.off = add i32 %__c, 128, !dbg !2229
  %0 = icmp ult i32 %__c.off, 384, !dbg !2229
  br i1 %0, label %cond.true, label %cond.end, !dbg !2229

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2230
  %1 = load i32*, i32** %call, align 8, !dbg !2231
  %idxprom = sext i32 %__c to i64, !dbg !2232
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2232
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2232
  br label %cond.end, !dbg !2233

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2233
  ret i32 %cond, !dbg !2234
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2235 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2240, metadata !DIExpression()), !dbg !2241
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2242
  %conv = trunc i64 %call to i32, !dbg !2243
  ret i32 %conv, !dbg !2244
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2245 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2249, metadata !DIExpression()), !dbg !2250
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2251
  ret i64 %call, !dbg !2252
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2253 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2258, metadata !DIExpression()), !dbg !2259
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2260
  ret i64 %call, !dbg !2261
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2262 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2268, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2269, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2270, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2271, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2272, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 0, metadata !2273, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2274, metadata !DIExpression()), !dbg !2278
  br label %while.cond, !dbg !2279

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2280
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2274, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2273, metadata !DIExpression()), !dbg !2278
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2281
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2279

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2282
  %div = lshr i64 %add, 1, !dbg !2284
  call void @llvm.dbg.value(metadata i64 %div, metadata !2275, metadata !DIExpression()), !dbg !2278
  %mul = mul i64 %div, %__size, !dbg !2285
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2286
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2276, metadata !DIExpression()), !dbg !2278
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2287
  call void @llvm.dbg.value(metadata i32 %call, metadata !2277, metadata !DIExpression()), !dbg !2278
  %cmp1 = icmp slt i32 %call, 0, !dbg !2288
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2290

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2291
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2293

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2294
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2273, metadata !DIExpression()), !dbg !2278
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2278
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2274, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2273, metadata !DIExpression()), !dbg !2278
  br label %while.cond, !dbg !2279, !llvm.loop !2295

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2278
  ret i8* %retval.0, !dbg !2297
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2298 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2304, metadata !DIExpression()), !dbg !2305
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2306
  ret double %call, !dbg !2307
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2308 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2317, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2318, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata i32 %base, metadata !2319, metadata !DIExpression()), !dbg !2320
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2321
  ret i64 %call, !dbg !2322
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2323 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2329, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2330, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata i32 %base, metadata !2331, metadata !DIExpression()), !dbg !2332
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2333
  ret i64 %call, !dbg !2334
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2335 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2346, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2347, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i32 %base, metadata !2348, metadata !DIExpression()), !dbg !2349
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2350
  ret i64 %call, !dbg !2351
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2352 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2356, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2357, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.value(metadata i32 %base, metadata !2358, metadata !DIExpression()), !dbg !2359
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2360
  ret i64 %call, !dbg !2361
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2362 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2402, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2403, metadata !DIExpression()), !dbg !2404
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2405
  ret i32 %call, !dbg !2406
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2407 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2409, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2410, metadata !DIExpression()), !dbg !2411
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2412
  ret i32 %call, !dbg !2413
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2414 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2418, metadata !DIExpression()), !dbg !2420
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2419, metadata !DIExpression()), !dbg !2420
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2421
  ret i32 %call, !dbg !2422
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2423 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2427, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2428, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2429, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2430, metadata !DIExpression()), !dbg !2431
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2432
  ret i32 %call, !dbg !2433
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2434 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2438, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2439, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2440, metadata !DIExpression()), !dbg !2441
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2440, metadata !DIExpression(DW_OP_deref)), !dbg !2441
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2442
  ret i32 %call, !dbg !2443
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2444 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2448, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2449, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2450, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2451, metadata !DIExpression()), !dbg !2452
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2451, metadata !DIExpression(DW_OP_deref)), !dbg !2452
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2453
  ret i32 %call, !dbg !2454
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2455 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2479, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2480, metadata !DIExpression()), !dbg !2481
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2482
  ret i32 %call, !dbg !2483
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2484 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2486, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2487, metadata !DIExpression()), !dbg !2488
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2489
  ret i32 %call, !dbg !2490
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2491 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2495, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2496, metadata !DIExpression()), !dbg !2497
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2498
  ret i32 %call, !dbg !2499
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2500 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2504, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2505, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2506, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2507, metadata !DIExpression()), !dbg !2508
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2509
  ret i32 %call, !dbg !2510
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @redirect_edge_var_map_add(%struct.edge_def* %e, %union.tree_node* %result, %union.tree_node* %def, i32 %locus) local_unnamed_addr #5 !dbg !2511 {
entry:
  %head = alloca %struct.VEC_edge_var_map_heap*, align 8
  %new_node = alloca %struct._edge_var_map, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2515, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !2516, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !2517, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata i32 %locus, metadata !2518, metadata !DIExpression()), !dbg !2523
  %0 = bitcast %struct.VEC_edge_var_map_heap** %head to i8*, !dbg !2524
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2524
  %1 = bitcast %struct._edge_var_map* %new_node to i8*, !dbg !2525
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2525
  %2 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2526
  %cmp = icmp eq %struct.pointer_map_t* %2, null, !dbg !2528
  br i1 %cmp, label %if.then, label %if.end, !dbg !2529

if.then:                                          ; preds = %entry
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !2530
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2531
  br label %if.end, !dbg !2532

if.end:                                           ; preds = %if.then, %entry
  %3 = phi %struct.pointer_map_t* [ %call, %if.then ], [ %2, %entry ], !dbg !2533
  %4 = bitcast %struct.edge_def* %e to i8*, !dbg !2534
  %call1 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %3, i8* %4) #6, !dbg !2535
  call void @llvm.dbg.value(metadata i8** %call1, metadata !2519, metadata !DIExpression()), !dbg !2523
  %5 = bitcast i8** %call1 to %struct.VEC_edge_var_map_heap**, !dbg !2536
  %6 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %5, align 8, !dbg !2536
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %6, metadata !2521, metadata !DIExpression()), !dbg !2523
  store %struct.VEC_edge_var_map_heap* %6, %struct.VEC_edge_var_map_heap** %head, align 8, !dbg !2537
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %6, metadata !2520, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %6, metadata !2521, metadata !DIExpression()), !dbg !2523
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %6, null, !dbg !2538
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !2540

if.then2:                                         ; preds = %if.end
  %call3 = tail call fastcc %struct.VEC_edge_var_map_heap* @VEC_edge_var_map_heap_alloc(i32 5) #8, !dbg !2541
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %call3, metadata !2521, metadata !DIExpression()), !dbg !2523
  store %struct.VEC_edge_var_map_heap* %call3, %struct.VEC_edge_var_map_heap** %head, align 8, !dbg !2543
  %.cast = ptrtoint %struct.VEC_edge_var_map_heap* %call3 to i64, !dbg !2544
  %7 = bitcast i8** %call1 to i64*, !dbg !2545
  store i64 %.cast, i64* %7, align 8, !dbg !2545
  br label %if.end4, !dbg !2546

if.end4:                                          ; preds = %if.end, %if.then2
  %def5 = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %new_node, i64 0, i32 1, !dbg !2547
  store %union.tree_node* %def, %union.tree_node** %def5, align 8, !dbg !2548
  %result6 = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %new_node, i64 0, i32 0, !dbg !2549
  store %union.tree_node* %result, %union.tree_node** %result6, align 8, !dbg !2550
  %locus7 = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %new_node, i64 0, i32 2, !dbg !2551
  store i32 %locus, i32* %locus7, align 8, !dbg !2552
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %head, metadata !2521, metadata !DIExpression(DW_OP_deref)), !dbg !2523
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %new_node, metadata !2522, metadata !DIExpression(DW_OP_deref)), !dbg !2523
  %call8 = call fastcc %struct._edge_var_map* @VEC_edge_var_map_heap_safe_push(%struct.VEC_edge_var_map_heap** nonnull %head, %struct._edge_var_map* nonnull %new_node) #8, !dbg !2553
  %8 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %head, align 8, !dbg !2554
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %8, metadata !2521, metadata !DIExpression()), !dbg !2523
  %cmp9 = icmp eq %struct.VEC_edge_var_map_heap* %6, %8, !dbg !2556
  br i1 %cmp9, label %if.end11, label %if.then10, !dbg !2557

if.then10:                                        ; preds = %if.end4
  %9 = ptrtoint %struct.VEC_edge_var_map_heap* %8 to i64, !dbg !2557
  %10 = bitcast i8** %call1 to i64*, !dbg !2558
  store i64 %9, i64* %10, align 8, !dbg !2558
  br label %if.end11, !dbg !2560

if.end11:                                         ; preds = %if.end4, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2561
  ret void, !dbg !2561
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_var_map_heap* @VEC_edge_var_map_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !2562 {
entry:
  call void @llvm.dbg.value(metadata i32 5, metadata !2566, metadata !DIExpression()), !dbg !2567
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 5, i64 8, i64 24) #6, !dbg !2568
  %0 = bitcast i8* %call to %struct.VEC_edge_var_map_heap*, !dbg !2568
  ret %struct.VEC_edge_var_map_heap* %0, !dbg !2568
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._edge_var_map* @VEC_edge_var_map_heap_safe_push(%struct.VEC_edge_var_map_heap** %vec_, %struct._edge_var_map* %obj_) unnamed_addr #0 !dbg !2569 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %vec_, metadata !2577, metadata !DIExpression()), !dbg !2579
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %obj_, metadata !2578, metadata !DIExpression()), !dbg !2579
  %call = tail call fastcc i32 @VEC_edge_var_map_heap_reserve(%struct.VEC_edge_var_map_heap** %vec_, i32 1) #8, !dbg !2580
  %0 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %vec_, align 8, !dbg !2580
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %0, null, !dbg !2580
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2580

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_var_map_heap, %struct.VEC_edge_var_map_heap* %0, i64 0, i32 0, !dbg !2580
  br label %cond.end, !dbg !2580

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_var_map_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2580
  %call1 = tail call fastcc %struct._edge_var_map* @VEC_edge_var_map_base_quick_push(%struct.VEC_edge_var_map_base* %cond, %struct._edge_var_map* %obj_) #8, !dbg !2580
  ret %struct._edge_var_map* %call1, !dbg !2580
}

; Function Attrs: nounwind uwtable
define dso_local void @redirect_edge_var_map_clear(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !2581 {
entry:
  %head = alloca %struct.VEC_edge_var_map_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2585, metadata !DIExpression()), !dbg !2588
  %0 = bitcast %struct.VEC_edge_var_map_heap** %head to i8*, !dbg !2589
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2589
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2590
  %tobool = icmp eq %struct.pointer_map_t* %1, null, !dbg !2590
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2592

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.edge_def* %e to i8*, !dbg !2593
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %1, i8* %2) #6, !dbg !2594
  call void @llvm.dbg.value(metadata i8** %call, metadata !2586, metadata !DIExpression()), !dbg !2588
  %tobool1 = icmp eq i8** %call, null, !dbg !2595
  br i1 %tobool1, label %cleanup, label %if.then2, !dbg !2597

if.then2:                                         ; preds = %if.end
  %3 = bitcast i8** %call to i64*, !dbg !2598
  %4 = load i64, i64* %3, align 8, !dbg !2598
  %5 = bitcast %struct.VEC_edge_var_map_heap** %head to i64*, !dbg !2600
  store i64 %4, i64* %5, align 8, !dbg !2600
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %head, metadata !2587, metadata !DIExpression(DW_OP_deref)), !dbg !2588
  call fastcc void @VEC_edge_var_map_heap_free(%struct.VEC_edge_var_map_heap** nonnull %head) #8, !dbg !2601
  store i8* null, i8** %call, align 8, !dbg !2602
  br label %cleanup, !dbg !2603

cleanup:                                          ; preds = %if.end, %entry, %if.then2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2604
  ret void, !dbg !2604
}

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_var_map_heap_free(%struct.VEC_edge_var_map_heap** %vec_) unnamed_addr #0 !dbg !2605 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %vec_, metadata !2609, metadata !DIExpression()), !dbg !2610
  %0 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %vec_, align 8, !dbg !2611
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %0, null, !dbg !2611
  br i1 %tobool, label %if.end, label %if.then, !dbg !2613

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_var_map_heap* %0 to i8*, !dbg !2613
  tail call void @free(i8* nonnull %1) #6, !dbg !2611
  br label %if.end, !dbg !2611

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_var_map_heap* null, %struct.VEC_edge_var_map_heap** %vec_, align 8, !dbg !2613
  ret void, !dbg !2613
}

; Function Attrs: nounwind uwtable
define dso_local void @redirect_edge_var_map_dup(%struct.edge_def* %newe, %struct.edge_def* %olde) local_unnamed_addr #5 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %newe, metadata !2618, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.value(metadata %struct.edge_def* %olde, metadata !2619, metadata !DIExpression()), !dbg !2623
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2624
  %tobool = icmp eq %struct.pointer_map_t* %0, null, !dbg !2624
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !2626

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.edge_def* %newe to i8*, !dbg !2627
  %call = tail call i8** @pointer_map_insert(%struct.pointer_map_t* nonnull %0, i8* %1) #6, !dbg !2628
  call void @llvm.dbg.value(metadata i8** %call, metadata !2620, metadata !DIExpression()), !dbg !2623
  %2 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2629
  %3 = bitcast %struct.edge_def* %olde to i8*, !dbg !2630
  %call1 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %2, i8* %3) #6, !dbg !2631
  call void @llvm.dbg.value(metadata i8** %call1, metadata !2621, metadata !DIExpression()), !dbg !2623
  %tobool2 = icmp eq i8** %call1, null, !dbg !2632
  br i1 %tobool2, label %cleanup.cont, label %if.end4, !dbg !2634

if.end4:                                          ; preds = %if.end
  %4 = bitcast i8** %call1 to %struct.VEC_edge_var_map_heap**, !dbg !2635
  %5 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %4, align 8, !dbg !2635
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %5, metadata !2622, metadata !DIExpression()), !dbg !2623
  %tobool5 = icmp eq %struct.VEC_edge_var_map_heap* %5, null, !dbg !2636
  br i1 %tobool5, label %if.else, label %cond.true, !dbg !2638

cond.true:                                        ; preds = %if.end4
  %base = getelementptr inbounds %struct.VEC_edge_var_map_heap, %struct.VEC_edge_var_map_heap* %5, i64 0, i32 0, !dbg !2639
  %call8 = tail call fastcc %struct.VEC_edge_var_map_heap* @VEC_edge_var_map_heap_copy(%struct.VEC_edge_var_map_base* nonnull %base) #8, !dbg !2639
  %6 = bitcast i8** %call to %struct.VEC_edge_var_map_heap**, !dbg !2640
  store %struct.VEC_edge_var_map_heap* %call8, %struct.VEC_edge_var_map_heap** %6, align 8, !dbg !2640
  br label %cleanup.cont, !dbg !2641

if.else:                                          ; preds = %if.end4
  %call9 = tail call fastcc %struct.VEC_edge_var_map_heap* @VEC_edge_var_map_heap_alloc(i32 5) #8, !dbg !2642
  %7 = bitcast i8** %call to %struct.VEC_edge_var_map_heap**, !dbg !2643
  store %struct.VEC_edge_var_map_heap* %call9, %struct.VEC_edge_var_map_heap** %7, align 8, !dbg !2643
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %entry, %if.else, %cond.true
  ret void, !dbg !2644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_var_map_heap* @VEC_edge_var_map_heap_copy(%struct.VEC_edge_var_map_base* %vec_) unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_base* %vec_, metadata !2650, metadata !DIExpression()), !dbg !2653
  %tobool = icmp eq %struct.VEC_edge_var_map_base* %vec_, null, !dbg !2654
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2654

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 0, !dbg !2654
  %0 = load i32, i32* %num, align 8, !dbg !2654
  %phitmp = zext i32 %0 to i64, !dbg !2654
  br label %cond.end, !dbg !2654

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !2651, metadata !DIExpression()), !dbg !2653
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* null, metadata !2652, metadata !DIExpression()), !dbg !2653
  %tobool1 = icmp eq i64 %cond, 0, !dbg !2655
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2654

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !2657
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %conv2, i64 8, i64 24) #6, !dbg !2657
  %1 = bitcast i8* %call to %struct.VEC_edge_var_map_heap*, !dbg !2657
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %1, metadata !2652, metadata !DIExpression()), !dbg !2653
  %num4 = bitcast i8* %call to i32*, !dbg !2657
  store i32 %conv2, i32* %num4, align 8, !dbg !2657
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2657
  %arraydecay7 = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 2, i64 0, !dbg !2657
  %2 = bitcast %struct._edge_var_map* %arraydecay7 to i8*, !dbg !2657
  %mul = mul nuw nsw i64 %cond, 24, !dbg !2657
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !2657
  br label %if.end, !dbg !2657

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_edge_var_map_heap* [ %1, %if.then ], [ null, %cond.end ], !dbg !2653
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %new_vec_.0, metadata !2652, metadata !DIExpression()), !dbg !2653
  ret %struct.VEC_edge_var_map_heap* %new_vec_.0, !dbg !2654
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_edge_var_map_heap* @redirect_edge_var_map_vector(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !2659 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2663, metadata !DIExpression()), !dbg !2665
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2666
  %tobool = icmp eq %struct.pointer_map_t* %0, null, !dbg !2666
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2668

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.edge_def* %e to i8*, !dbg !2669
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %0, i8* %1) #6, !dbg !2670
  call void @llvm.dbg.value(metadata i8** %call, metadata !2664, metadata !DIExpression()), !dbg !2665
  %tobool1 = icmp eq i8** %call, null, !dbg !2671
  br i1 %tobool1, label %cleanup, label %if.end3, !dbg !2673

if.end3:                                          ; preds = %if.end
  %2 = bitcast i8** %call to %struct.VEC_edge_var_map_heap**, !dbg !2674
  %3 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %2, align 8, !dbg !2674
  br label %cleanup, !dbg !2675

cleanup:                                          ; preds = %if.end, %entry, %if.end3
  %retval.0 = phi %struct.VEC_edge_var_map_heap* [ %3, %if.end3 ], [ null, %entry ], [ null, %if.end ], !dbg !2665
  ret %struct.VEC_edge_var_map_heap* %retval.0, !dbg !2676
}

; Function Attrs: nounwind uwtable
define dso_local void @redirect_edge_var_map_destroy() local_unnamed_addr #5 !dbg !2677 {
entry:
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2680
  %tobool = icmp eq %struct.pointer_map_t* %0, null, !dbg !2680
  br i1 %tobool, label %if.end, label %if.then, !dbg !2682

if.then:                                          ; preds = %entry
  tail call void @pointer_map_traverse(%struct.pointer_map_t* nonnull %0, i8 (i8*, i8**, i8*)* nonnull @free_var_map_entry, i8* null) #6, !dbg !2683
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2685
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %1) #6, !dbg !2686
  store %struct.pointer_map_t* null, %struct.pointer_map_t** @edge_var_maps, align 8, !dbg !2687
  br label %if.end, !dbg !2688

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !2689
}

declare dso_local void @pointer_map_traverse(%struct.pointer_map_t*, i8 (i8*, i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @free_var_map_entry(i8* %key, i8** %value, i8* %data) #5 !dbg !2690 {
entry:
  %head = alloca %struct.VEC_edge_var_map_heap*, align 8
  call void @llvm.dbg.value(metadata i8* %key, metadata !2694, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i8** %value, metadata !2695, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i8* %data, metadata !2696, metadata !DIExpression()), !dbg !2698
  %0 = bitcast %struct.VEC_edge_var_map_heap** %head to i8*, !dbg !2699
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2699
  %1 = bitcast i8** %value to i64*, !dbg !2700
  %2 = load i64, i64* %1, align 8, !dbg !2700
  %3 = bitcast %struct.VEC_edge_var_map_heap** %head to i64*, !dbg !2701
  store i64 %2, i64* %3, align 8, !dbg !2701
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %head, metadata !2697, metadata !DIExpression(DW_OP_deref)), !dbg !2698
  call fastcc void @VEC_edge_var_map_heap_free(%struct.VEC_edge_var_map_heap** nonnull %head) #8, !dbg !2702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2703
  ret i8 1, !dbg !2704
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @ssa_redirect_edge(%struct.edge_def* %e, %struct.basic_block_def* %dest) local_unnamed_addr #5 !dbg !2705 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2709, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest, metadata !2710, metadata !DIExpression()), !dbg !2718
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2719
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2719
  tail call void @redirect_edge_var_map_clear(%struct.edge_def* %e) #8, !dbg !2720
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2721
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2721
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !2722
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !2722
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !2721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !2721
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2721
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !2723
  br label %for.cond, !dbg !2724

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2711, metadata !DIExpression(DW_OP_deref)), !dbg !2718
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2725
  %tobool = icmp eq i8 %call, 0, !dbg !2726
  br i1 %tobool, label %for.body, label %for.end, !dbg !2727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2711, metadata !DIExpression(DW_OP_deref)), !dbg !2718
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2728
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !2712, metadata !DIExpression()), !dbg !2718
  %3 = load i32, i32* %dest_idx, align 4, !dbg !2729
  %conv = zext i32 %3 to i64, !dbg !2730
  %call3 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call2, i64 %conv) #8, !dbg !2731
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2713, metadata !DIExpression()), !dbg !2723
  %4 = load i32, i32* %dest_idx, align 4, !dbg !2732
  %conv5 = zext i32 %4 to i64, !dbg !2733
  %call6 = call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %call2, i64 %conv5) #8, !dbg !2734
  call void @llvm.dbg.value(metadata i32 %call6, metadata !2717, metadata !DIExpression()), !dbg !2723
  %cmp = icmp eq %union.tree_node* %call3, null, !dbg !2735
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2737

if.end:                                           ; preds = %for.body
  %call8 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call2) #8, !dbg !2738
  call void @redirect_edge_var_map_add(%struct.edge_def* %e, %union.tree_node* %call8, %union.tree_node* nonnull %call3, i32 %call6) #8, !dbg !2739
  br label %cleanup, !dbg !2740

cleanup:                                          ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2711, metadata !DIExpression(DW_OP_deref)), !dbg !2718
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2741
  br label %for.cond, !dbg !2742, !llvm.loop !2743

for.end:                                          ; preds = %for.cond
  %call10 = call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !2745
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !2709, metadata !DIExpression()), !dbg !2718
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2746
  ret %struct.edge_def* %call10, !dbg !2747
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2748 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2752, metadata !DIExpression()), !dbg !2753
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2754
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2754
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !2755
  %conv1 = zext i1 %cmp to i8, !dbg !2756
  ret i8 %conv1, !dbg !2757
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2758 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2762, metadata !DIExpression()), !dbg !2763
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2764
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2764
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !2765
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2765
  ret %union.gimple_statement_d* %1, !dbg !2766
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !2767 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2772, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.value(metadata i64 %index, metadata !2773, metadata !DIExpression()), !dbg !2776
  %conv = trunc i64 %index to i32, !dbg !2777
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #8, !dbg !2778
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !2774, metadata !DIExpression()), !dbg !2776
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !2779
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #8, !dbg !2780
  ret %union.tree_node* %call1, !dbg !2781
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !2782 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2786, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i64 %i, metadata !2787, metadata !DIExpression()), !dbg !2788
  %conv = trunc i64 %i to i32, !dbg !2789
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #8, !dbg !2790
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !2791
  %0 = load i32, i32* %locus, align 8, !dbg !2791
  ret i32 %0, !dbg !2792
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2793 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2798, metadata !DIExpression()), !dbg !2799
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !2800
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !2800
  ret %union.tree_node* %0, !dbg !2801
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !2802 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !2807, metadata !DIExpression()), !dbg !2808
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2809
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2809
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !2810
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !2810
  %2 = load i64, i64* %1, align 8, !dbg !2810
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !2811
  store i64 %2, i64* %3, align 8, !dbg !2811
  ret void, !dbg !2812
}

declare dso_local %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @flush_pending_stmts(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !2813 {
entry:
  %vm = alloca %struct._edge_var_map*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2815, metadata !DIExpression()), !dbg !2825
  %0 = bitcast %struct._edge_var_map** %vm to i8*, !dbg !2826
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2826
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2827
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2827
  %call = tail call %struct.VEC_edge_var_map_heap* @redirect_edge_var_map_vector(%struct.edge_def* %e) #8, !dbg !2828
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %call, metadata !2817, metadata !DIExpression()), !dbg !2825
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %call, null, !dbg !2829
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2831

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2832
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2832
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !2833
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2833
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !2832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !2832
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2832
  call void @llvm.dbg.value(metadata i32 0, metadata !2819, metadata !DIExpression()), !dbg !2825
  %base = getelementptr inbounds %struct.VEC_edge_var_map_heap, %struct.VEC_edge_var_map_heap* %call, i64 0, i32 0, !dbg !2834
  br label %for.cond, !dbg !2835

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !2836
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2819, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2820, metadata !DIExpression(DW_OP_deref)), !dbg !2825
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2837
  %tobool2 = icmp eq i8 %call1, 0, !dbg !2837
  br i1 %tobool2, label %land.rhs, label %for.end, !dbg !2838

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._edge_var_map** %vm, metadata !2818, metadata !DIExpression(DW_OP_deref)), !dbg !2825
  %call4 = call fastcc i32 @VEC_edge_var_map_base_iterate(%struct.VEC_edge_var_map_base* nonnull %base, i32 %i.0, %struct._edge_var_map** nonnull %vm) #8, !dbg !2834
  %tobool5 = icmp eq i32 %call4, 0, !dbg !2838
  br i1 %tobool5, label %for.end, label %for.body, !dbg !2839

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2820, metadata !DIExpression(DW_OP_deref)), !dbg !2825
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2840
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !2816, metadata !DIExpression()), !dbg !2825
  %4 = load %struct._edge_var_map*, %struct._edge_var_map** %vm, align 8, !dbg !2841
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %4, metadata !2818, metadata !DIExpression()), !dbg !2825
  %call7 = call fastcc %union.tree_node* @redirect_edge_var_map_def(%struct._edge_var_map* %4) #8, !dbg !2842
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2821, metadata !DIExpression()), !dbg !2843
  %5 = load %struct._edge_var_map*, %struct._edge_var_map** %vm, align 8, !dbg !2844
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %5, metadata !2818, metadata !DIExpression()), !dbg !2825
  %call8 = call fastcc i32 @redirect_edge_var_map_location(%struct._edge_var_map* %5) #8, !dbg !2845
  call void @add_phi_arg(%union.gimple_statement_d* %call6, %union.tree_node* %call7, %struct.edge_def* %e, i32 %call8) #6, !dbg !2846
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2820, metadata !DIExpression(DW_OP_deref)), !dbg !2825
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2847
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2848
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2819, metadata !DIExpression()), !dbg !2825
  br label %for.cond, !dbg !2849, !llvm.loop !2850

for.end:                                          ; preds = %land.rhs, %for.cond
  call void @redirect_edge_var_map_clear(%struct.edge_def* %e) #8, !dbg !2852
  br label %cleanup, !dbg !2853

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2853
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2853
  ret void, !dbg !2853
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_var_map_base_iterate(%struct.VEC_edge_var_map_base* %vec_, i32 %ix_, %struct._edge_var_map** %ptr) unnamed_addr #0 !dbg !2854 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_base* %vec_, metadata !2859, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2860, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.value(metadata %struct._edge_var_map** %ptr, metadata !2861, metadata !DIExpression()), !dbg !2862
  %tobool = icmp eq %struct.VEC_edge_var_map_base* %vec_, null, !dbg !2863
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2863

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 0, !dbg !2863
  %0 = load i32, i32* %num, align 8, !dbg !2863
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2863
  br i1 %cmp, label %if.then, label %if.else, !dbg !2865

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2866
  %arrayidx = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2866
  br label %return, !dbg !2866

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2868

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct._edge_var_map* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !2870
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2870
  store %struct._edge_var_map* %storemerge, %struct._edge_var_map** %ptr, align 8, !dbg !2870
  ret i32 %retval.0, !dbg !2865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @redirect_edge_var_map_def(%struct._edge_var_map* %v) unnamed_addr #0 !dbg !2871 {
entry:
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %v, metadata !2875, metadata !DIExpression()), !dbg !2876
  %def = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %v, i64 0, i32 1, !dbg !2877
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !2877
  ret %union.tree_node* %0, !dbg !2878
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @redirect_edge_var_map_location(%struct._edge_var_map* %v) unnamed_addr #0 !dbg !2879 {
entry:
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %v, metadata !2883, metadata !DIExpression()), !dbg !2884
  %locus = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %v, i64 0, i32 2, !dbg !2885
  %0 = load i32, i32* %locus, align 8, !dbg !2885
  ret i32 %0, !dbg !2886
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @target_for_debug_bind(%union.tree_node* %var) local_unnamed_addr #5 !dbg !2887 {
entry:
  br label %tailrecurse, !dbg !2892

tailrecurse:                                      ; preds = %if.then12, %entry
  %var.tr = phi %union.tree_node* [ %var, %entry ], [ %call, %if.then12 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %var.tr, metadata !2891, metadata !DIExpression()), !dbg !2894
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2895
  %tobool = icmp eq i32 %0, 0, !dbg !2895
  br i1 %tobool, label %return.loopexit, label %if.end, !dbg !2897

if.end:                                           ; preds = %tailrecurse
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2898
  %bf.load = load i64, i64* %1, align 8, !dbg !2898
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2900
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2900
  br i1 %cmp, label %if.end7, label %land.lhs.true, !dbg !2901

land.lhs.true:                                    ; preds = %if.end
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !2902
  br i1 %cmp5, label %if.end7, label %return.loopexit, !dbg !2903

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2904
  %2 = bitcast i40* %decl_flag_2 to i64*, !dbg !2904
  %bf.load8 = load i64, i64* %2, align 8, !dbg !2904
  %bf.cast102 = and i64 %bf.load8, 67108864, !dbg !2904
  %tobool11 = icmp eq i64 %bf.cast102, 0, !dbg !2904
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !2905

if.then12:                                        ; preds = %if.end7
  %call = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %var.tr) #6, !dbg !2906
  br label %tailrecurse, !dbg !2892

if.end14:                                         ; preds = %if.end7
  %bf.load8.lcssa = phi i64 [ %bf.load8, %if.end7 ], !dbg !2904
  %var.tr.lcssa7 = phi %union.tree_node* [ %var.tr, %if.end7 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %var.tr.lcssa7, metadata !2891, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata %union.tree_node* %var.tr.lcssa7, metadata !2891, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata %union.tree_node* %var.tr.lcssa7, metadata !2891, metadata !DIExpression()), !dbg !2894
  %bf.cast193 = and i64 %bf.load8.lcssa, 1024, !dbg !2907
  %tobool20 = icmp eq i64 %bf.cast193, 0, !dbg !2907
  br i1 %tobool20, label %if.end22, label %return, !dbg !2909

if.end22:                                         ; preds = %if.end14
  %call23 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %var.tr.lcssa7) #6, !dbg !2910
  %tobool24 = icmp eq i8 %call23, 0, !dbg !2910
  %var. = select i1 %tobool24, %union.tree_node* null, %union.tree_node* %var.tr.lcssa7, !dbg !2894
  br label %return, !dbg !2894

return.loopexit:                                  ; preds = %tailrecurse, %land.lhs.true
  br label %return, !dbg !2912

return:                                           ; preds = %return.loopexit, %if.end14, %if.end22
  %retval.0 = phi %union.tree_node* [ null, %if.end14 ], [ %var., %if.end22 ], [ null, %return.loopexit ], !dbg !2894
  ret %union.tree_node* %retval.0, !dbg !2912
}

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @insert_debug_temp_for_var_def(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %var) local_unnamed_addr #5 !dbg !2913 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %value = alloca %union.tree_node*, align 8
  %wi = alloca %struct.walk_stmt_info, align 8
  %ngsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2917, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !2918, metadata !DIExpression()), !dbg !2948
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !2949
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #7, !dbg !2949
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !2929, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 0, metadata !2930, metadata !DIExpression()), !dbg !2948
  %1 = bitcast %union.tree_node** %value to i8*, !dbg !2950
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2950
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !2951
  %2 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2952
  %tobool = icmp eq i32 %2, 0, !dbg !2952
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2954

if.end:                                           ; preds = %entry
  %call = tail call zeroext i8 @name_registered_for_update_p(%union.tree_node* %var) #6, !dbg !2955
  %tobool1 = icmp eq i8 %call, 0, !dbg !2955
  br i1 %tobool1, label %if.end3, label %cleanup, !dbg !2957

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call4 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %var) #8, !dbg !2958
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !2927, metadata !DIExpression()), !dbg !2948
  br label %for.cond, !dbg !2958

for.cond:                                         ; preds = %for.inc, %if.end3
  %usecount.0 = phi i32 [ 0, %if.end3 ], [ %usecount.1, %for.inc ], !dbg !2948
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.end3 ], [ %call19, %for.inc ], !dbg !2960
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !2927, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %usecount.0, metadata !2930, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call5 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !2961
  %tobool6 = icmp eq i8 %call5, 0, !dbg !2961
  br i1 %tobool6, label %for.body, label %for.end.loopexit, !dbg !2958

for.body:                                         ; preds = %for.cond
  %stmt7 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !2963
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt7, align 8, !dbg !2963
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !2928, metadata !DIExpression()), !dbg !2948
  %call8 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %3) #8, !dbg !2965
  %tobool9 = icmp eq i8 %call8, 0, !dbg !2965
  br i1 %tobool9, label %for.inc, label %if.end11, !dbg !2967

if.end11:                                         ; preds = %for.body
  %inc = add nsw i32 %usecount.0, 1, !dbg !2968
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2930, metadata !DIExpression()), !dbg !2948
  %tobool12 = icmp eq i32 %usecount.0, 0, !dbg !2968
  br i1 %tobool12, label %if.end14, label %for.end.loopexit, !dbg !2970

if.end14:                                         ; preds = %if.end11
  %call15 = call fastcc %union.tree_node* @gimple_debug_bind_get_value(%union.gimple_statement_d* %3) #8, !dbg !2971
  %cmp = icmp eq %union.tree_node* %call15, %var, !dbg !2973
  br i1 %cmp, label %for.inc, label %if.then16, !dbg !2974

if.then16:                                        ; preds = %if.end14
  call void @llvm.dbg.value(metadata i32 %usecount.0, metadata !2930, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 2, metadata !2930, metadata !DIExpression()), !dbg !2948
  br label %for.end, !dbg !2975

for.inc:                                          ; preds = %if.end14, %for.body
  %usecount.1 = phi i32 [ %usecount.0, %for.body ], [ %inc, %if.end14 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %usecount.1, metadata !2930, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call19 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !2961
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call19, metadata !2927, metadata !DIExpression()), !dbg !2948
  br label %for.cond, !dbg !2961, !llvm.loop !2977

for.end.loopexit:                                 ; preds = %for.cond, %if.end11
  %usecount.2.ph = phi i32 [ %inc, %if.end11 ], [ %usecount.0, %for.cond ]
  br label %for.end, !dbg !2979

for.end:                                          ; preds = %for.end.loopexit, %if.then16
  %usecount.2 = phi i32 [ 2, %if.then16 ], [ %usecount.2.ph, %for.end.loopexit ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %usecount.2, metadata !2930, metadata !DIExpression()), !dbg !2948
  %tobool20 = icmp eq i32 %usecount.2, 0, !dbg !2979
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !2981

if.end22:                                         ; preds = %for.end
  %tobool23 = icmp eq %struct.gimple_stmt_iterator* %gsi, null, !dbg !2982
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !2984

if.then24:                                        ; preds = %if.end22
  %call25 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2985
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !2929, metadata !DIExpression()), !dbg !2948
  br label %if.end27, !dbg !2986

if.else:                                          ; preds = %if.end22
  %def_stmt26 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2987
  %4 = bitcast %union.tree_node** %def_stmt26 to %union.gimple_statement_d**, !dbg !2987
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !2987
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !2929, metadata !DIExpression()), !dbg !2948
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %def_stmt.0 = phi %union.gimple_statement_d* [ %call25, %if.then24 ], [ %5, %if.else ], !dbg !2988
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.0, metadata !2929, metadata !DIExpression()), !dbg !2948
  %call28 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %def_stmt.0) #8, !dbg !2989
  %cmp29 = icmp eq i32 %call28, 16, !dbg !2990
  br i1 %cmp29, label %if.then30, label %if.else37, !dbg !2991

if.then30:                                        ; preds = %if.end27
  %call31 = call %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d* %def_stmt.0) #6, !dbg !2992
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* %call31, %union.tree_node** %value, align 8, !dbg !2994
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2931, metadata !DIExpression()), !dbg !2948
  %tobool32 = icmp eq %union.tree_node* %call31, null, !dbg !2995
  br i1 %tobool32, label %if.end59, label %land.lhs.true, !dbg !2997

land.lhs.true:                                    ; preds = %if.then30
  call void @llvm.dbg.value(metadata %union.tree_node** %value, metadata !2931, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call33 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %value, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_released_ssa_name, i8* null, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !2998
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !2998
  br i1 %tobool34, label %if.end59, label %if.then35, !dbg !2999

if.then35:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !3000
  br label %if.end59, !dbg !3001

if.else37:                                        ; preds = %if.end27
  %call38 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %def_stmt.0) #8, !dbg !3002
  %tobool39 = icmp eq i8 %call38, 0, !dbg !3002
  br i1 %tobool39, label %if.end59, label %if.then40, !dbg !3003

if.then40:                                        ; preds = %if.else37
  call void @llvm.dbg.value(metadata i8 0, metadata !2932, metadata !DIExpression()), !dbg !3004
  %call41 = call zeroext i8 @dom_info_available_p(i32 1) #6, !dbg !3005
  %tobool42 = icmp eq i8 %call41, 0, !dbg !3005
  br i1 %tobool42, label %if.then43, label %if.end53, !dbg !3006

if.then43:                                        ; preds = %if.then40
  %6 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !3007
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #7, !dbg !3007
  %call44 = call i8* @memset(i8* nonnull %6, i32 0, i64 56) #6, !dbg !3008
  br i1 %tobool23, label %land.lhs.true46, label %lor.lhs.false, !dbg !3009

land.lhs.true46:                                  ; preds = %if.then43
  %call47 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %def_stmt.0) #8, !dbg !3011
  %tobool48 = icmp eq %struct.basic_block_def* %call47, null, !dbg !3011
  br i1 %tobool48, label %if.then51, label %lor.lhs.false, !dbg !3012

lor.lhs.false:                                    ; preds = %land.lhs.true46, %if.then43
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !2936, metadata !DIExpression(DW_OP_deref)), !dbg !3013
  %call49 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %def_stmt.0, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_released_ssa_name, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !3014
  %tobool50 = icmp eq %union.tree_node* %call49, null, !dbg !3014
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !3015

if.then51:                                        ; preds = %lor.lhs.false, %land.lhs.true46
  call void @llvm.dbg.value(metadata i8 1, metadata !2932, metadata !DIExpression()), !dbg !3004
  br label %if.end52, !dbg !3016

if.end52:                                         ; preds = %lor.lhs.false, %if.then51
  %no_value.0 = phi i8 [ 1, %if.then51 ], [ 0, %lor.lhs.false ], !dbg !3004
  call void @llvm.dbg.value(metadata i8 %no_value.0, metadata !2932, metadata !DIExpression()), !dbg !3004
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #7, !dbg !3017
  br label %if.end53, !dbg !3018

if.end53:                                         ; preds = %if.then40, %if.end52
  %no_value.1 = phi i8 [ 0, %if.then40 ], [ %no_value.0, %if.end52 ], !dbg !3004
  call void @llvm.dbg.value(metadata i8 %no_value.1, metadata !2932, metadata !DIExpression()), !dbg !3004
  %tobool54 = icmp eq i8 %no_value.1, 0, !dbg !3019
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !3021

if.then55:                                        ; preds = %if.end53
  %call56 = call %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d* %def_stmt.0) #6, !dbg !3022
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* %call56, %union.tree_node** %value, align 8, !dbg !3023
  br label %if.end59, !dbg !3024

if.end59:                                         ; preds = %land.lhs.true, %if.then30, %if.end53, %if.else37, %if.then55, %if.then35
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3025
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2931, metadata !DIExpression()), !dbg !2948
  %tobool60 = icmp eq %union.tree_node* %7, null, !dbg !3025
  br i1 %tobool60, label %if.end137, label %if.then61, !dbg !3026

if.then61:                                        ; preds = %if.end59
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3026
  %bf.load = load i64, i64* %8, align 8, !dbg !3027
  %bf.cast = and i64 %bf.load, 65535, !dbg !3027
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3027
  %9 = load i32, i32* %arrayidx, align 4, !dbg !3027
  %cmp62 = icmp eq i32 %9, 1, !dbg !3027
  br i1 %cmp62, label %if.then78, label %lor.lhs.false63, !dbg !3028

lor.lhs.false63:                                  ; preds = %if.then61
  %call64 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %def_stmt.0) #8, !dbg !3029
  %cmp65 = icmp eq i32 %call64, 16, !dbg !3030
  br i1 %cmp65, label %if.then78, label %lor.lhs.false66, !dbg !3031

lor.lhs.false66:                                  ; preds = %lor.lhs.false63
  %cmp67 = icmp eq i32 %usecount.2, 1, !dbg !3032
  br i1 %cmp67, label %land.lhs.true68, label %lor.lhs.false74, !dbg !3033

land.lhs.true68:                                  ; preds = %lor.lhs.false66
  %call69 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %def_stmt.0) #6, !dbg !3034
  %tobool70 = icmp eq i8 %call69, 0, !dbg !3034
  br i1 %tobool70, label %if.then78, label %lor.lhs.false71, !dbg !3035

lor.lhs.false71:                                  ; preds = %land.lhs.true68
  %10 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3036
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2931, metadata !DIExpression()), !dbg !2948
  %call72 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %10) #6, !dbg !3037
  %tobool73 = icmp eq i8 %call72, 0, !dbg !3037
  br i1 %tobool73, label %lor.lhs.false74, label %if.then78, !dbg !3038

lor.lhs.false74:                                  ; preds = %lor.lhs.false71, %lor.lhs.false66
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3039
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2931, metadata !DIExpression()), !dbg !2948
  %call75 = call zeroext i8 @is_gimple_reg(%union.tree_node* %11) #6, !dbg !3040
  %tobool77 = icmp eq i8 %call75, 0, !dbg !3040
  br i1 %tobool77, label %if.else80, label %if.then78, !dbg !3041

if.then78:                                        ; preds = %lor.lhs.false71, %land.lhs.true68, %lor.lhs.false74, %lor.lhs.false63, %if.then61
  %12 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3042
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !2931, metadata !DIExpression()), !dbg !2948
  %call79 = call %union.tree_node* @unshare_expr(%union.tree_node* %12) #6, !dbg !3043
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* %call79, %union.tree_node** %value, align 8, !dbg !3044
  br label %if.end137, !dbg !3045

if.else80:                                        ; preds = %lor.lhs.false74
  %call81 = call %union.tree_node* @make_node_stat(i32 37) #6, !dbg !3046
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !2944, metadata !DIExpression()), !dbg !3047
  %13 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3048
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !2931, metadata !DIExpression()), !dbg !2948
  %call82 = call %union.tree_node* @unshare_expr(%union.tree_node* %13) #6, !dbg !3048
  %call83 = call %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node* %call81, %union.tree_node* %call82, %union.gimple_statement_d* %def_stmt.0) #6, !dbg !3048
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call83, metadata !2939, metadata !DIExpression()), !dbg !3047
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3049
  %14 = bitcast i40* %artificial_flag to i64*, !dbg !3049
  %bf.load84 = load i64, i64* %14, align 8, !dbg !3050
  %bf.set = or i64 %bf.load84, 4096, !dbg !3050
  store i64 %bf.set, i64* %14, align 8, !dbg !3050
  %15 = bitcast %union.tree_node** %value to %struct.tree_common**, !dbg !3051
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !3051
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !3051
  %17 = bitcast %union.tree_node** %type to i64*, !dbg !3051
  %18 = load i64, i64* %17, align 8, !dbg !3051
  %type87 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3052
  %19 = bitcast %union.tree_node** %type87 to i64*, !dbg !3053
  store i64 %18, i64* %19, align 8, !dbg !3053
  %20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 0, i32 0, !dbg !3054
  %bf.load89 = load i64, i64* %20, align 8, !dbg !3054
  %bf.cast91 = and i64 %bf.load89, 65535, !dbg !3054
  %arrayidx93 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast91, !dbg !3054
  %21 = load i32, i32* %arrayidx93, align 4, !dbg !3054
  %cmp94 = icmp eq i32 %21, 3, !dbg !3054
  call void @llvm.dbg.value(metadata i64* %20, metadata !2931, metadata !DIExpression()), !dbg !2948
  br i1 %cmp94, label %if.then96, label %if.else106, !dbg !3056

if.then96:                                        ; preds = %if.else80
  call void @llvm.dbg.value(metadata i64* %20, metadata !2931, metadata !DIExpression()), !dbg !2948
  %mode = getelementptr inbounds i64, i64* %20, i64 7, !dbg !3057
  %bf.load98 = load i64, i64* %mode, align 8, !dbg !3057
  %bf.cast100 = and i64 %bf.load98, 255, !dbg !3057
  %bf.clear104 = and i64 %bf.set, -256, !dbg !3058
  %bf.set105 = or i64 %bf.clear104, %bf.cast100, !dbg !3058
  br label %if.end131, !dbg !3059

if.else106:                                       ; preds = %if.else80
  %type108 = getelementptr inbounds i64, i64* %20, i64 2, !dbg !3060
  %22 = bitcast i64* %type108 to i64**, !dbg !3060
  %23 = load i64*, i64** %22, align 8, !dbg !3060
  %bf.load110 = load i64, i64* %23, align 8, !dbg !3060
  %bf.cast1121 = and i64 %bf.load110, 65535, !dbg !3060
  %cmp113 = icmp eq i64 %bf.cast1121, 14, !dbg !3060
  br i1 %cmp113, label %cond.true, label %cond.false, !dbg !3060

cond.true:                                        ; preds = %if.else106
  %24 = bitcast i64* %23 to %union.tree_node*, !dbg !3060
  %call117 = call i32 @vector_type_mode(%union.tree_node* %24) #6, !dbg !3060
  %bf.load126.pre = load i64, i64* %14, align 8, !dbg !3061
  br label %cond.end, !dbg !3060

cond.false:                                       ; preds = %if.else106
  %type120 = bitcast i64* %23 to %struct.tree_type*, !dbg !3060
  %mode121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type120, i64 0, i32 6, !dbg !3060
  %bf.load122 = load i32, i32* %mode121, align 4, !dbg !3060
  %bf.lshr = lshr i32 %bf.load122, 16, !dbg !3060
  %bf.clear123 = and i32 %bf.lshr, 255, !dbg !3060
  br label %cond.end, !dbg !3060

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load126 = phi i64 [ %bf.load126.pre, %cond.true ], [ %bf.set, %cond.false ], !dbg !3061
  %cond = phi i32 [ %call117, %cond.true ], [ %bf.clear123, %cond.false ], !dbg !3060
  %25 = and i32 %cond, 255, !dbg !3061
  %bf.value127 = zext i32 %25 to i64, !dbg !3061
  %bf.clear128 = and i64 %bf.load126, -256, !dbg !3061
  %bf.set129 = or i64 %bf.clear128, %bf.value127, !dbg !3061
  br label %if.end131

if.end131:                                        ; preds = %cond.end, %if.then96
  %storemerge = phi i64 [ %bf.set129, %cond.end ], [ %bf.set105, %if.then96 ], !dbg !3062
  store i64 %storemerge, i64* %14, align 8, !dbg !3062
  br i1 %tobool23, label %if.else134, label %if.then133, !dbg !3063

if.then133:                                       ; preds = %if.end131
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call83, i32 1) #6, !dbg !3064
  br label %if.end135, !dbg !3064

if.else134:                                       ; preds = %if.end131
  %26 = bitcast %struct.gimple_stmt_iterator* %ngsi to i8*, !dbg !3065
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7, !dbg !3065
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !2945, metadata !DIExpression(DW_OP_deref)), !dbg !3066
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %ngsi, %union.gimple_statement_d* %def_stmt.0) #6, !dbg !3067
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !2945, metadata !DIExpression(DW_OP_deref)), !dbg !3066
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %ngsi, %union.gimple_statement_d* %call83, i32 1) #6, !dbg !3068
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7, !dbg !3069
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then133
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !2931, metadata !DIExpression()), !dbg !2948
  store %union.tree_node* %call81, %union.tree_node** %value, align 8, !dbg !3070
  br label %if.end137

if.end137:                                        ; preds = %if.end59, %if.then78, %if.end135
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call138 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %var) #8, !dbg !3071
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call138, metadata !2928, metadata !DIExpression()), !dbg !2948
  br label %for.cond139, !dbg !3071

for.cond139:                                      ; preds = %for.inc161, %if.end137
  %stmt.0 = phi %union.gimple_statement_d* [ %call138, %if.end137 ], [ %call162, %for.inc161 ], !dbg !3073
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !2928, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call140 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3074
  %tobool141 = icmp eq i8 %call140, 0, !dbg !3074
  br i1 %tobool141, label %for.body143, label %cleanup.loopexit, !dbg !3071

for.body143:                                      ; preds = %for.cond139
  %call144 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt.0) #8, !dbg !3076
  %tobool145 = icmp eq i8 %call144, 0, !dbg !3076
  br i1 %tobool145, label %for.inc161, label %if.end147, !dbg !3079

if.end147:                                        ; preds = %for.body143
  %27 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3080
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !2931, metadata !DIExpression()), !dbg !2948
  %tobool148 = icmp eq %union.tree_node* %27, null, !dbg !3080
  br i1 %tobool148, label %if.else159, label %if.then149, !dbg !3082

if.then149:                                       ; preds = %if.end147
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call150 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call150, metadata !2927, metadata !DIExpression()), !dbg !2948
  br label %for.cond151, !dbg !3083

for.cond151:                                      ; preds = %for.body155, %if.then149
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call150, %if.then149 ], [ %call157, %for.body155 ], !dbg !3085
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !2927, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call152 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3086
  %tobool153 = icmp eq i8 %call152, 0, !dbg !3086
  br i1 %tobool153, label %for.body155, label %if.end160.loopexit, !dbg !3083

for.body155:                                      ; preds = %for.cond151
  %28 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3088
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !2931, metadata !DIExpression()), !dbg !2948
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1, %union.tree_node* %28) #8, !dbg !3088
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call157 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3086
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call157, metadata !2927, metadata !DIExpression()), !dbg !2948
  br label %for.cond151, !dbg !3086, !llvm.loop !3089

if.else159:                                       ; preds = %if.end147
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt.0) #8, !dbg !3091
  br label %if.end160

if.end160.loopexit:                               ; preds = %for.cond151
  br label %if.end160, !dbg !3092

if.end160:                                        ; preds = %if.end160.loopexit, %if.else159
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0) #8, !dbg !3092
  br label %for.inc161, !dbg !3093

for.inc161:                                       ; preds = %for.body143, %if.end160
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  %call162 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3074
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call162, metadata !2928, metadata !DIExpression()), !dbg !2948
  br label %for.cond139, !dbg !3074, !llvm.loop !3094

cleanup.loopexit:                                 ; preds = %for.cond139
  br label %cleanup, !dbg !3096

cleanup:                                          ; preds = %cleanup.loopexit, %for.end, %if.end, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3096
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #7, !dbg !3096
  ret void, !dbg !3096
}

declare dso_local zeroext i8 @name_registered_for_update_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !3097 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3102, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3103, metadata !DIExpression()), !dbg !3104
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3105
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3106
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !3107
  store i40* %imm_uses, i40** %0, align 8, !dbg !3107
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !3108
  %1 = bitcast i40* %next to i64*, !dbg !3108
  %2 = load i64, i64* %1, align 8, !dbg !3108
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3109
  store i64 %2, i64* %3, align 8, !dbg !3109
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3110
  %tobool = icmp eq i8 %call, 0, !dbg !3110
  br i1 %tobool, label %if.end, label %return, !dbg !3112

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3113
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !3113
  br label %return, !dbg !3114

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !3104
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !3115
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3116 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3122, metadata !DIExpression()), !dbg !3123
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3124
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3124
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3125
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !3125
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !3126
  %conv1 = zext i1 %cmp to i8, !dbg !3127
  ret i8 %conv1, !dbg !3128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !3129 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !3133, metadata !DIExpression()), !dbg !3134
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #8, !dbg !3135
  %tobool = icmp eq i8 %call, 0, !dbg !3135
  br i1 %tobool, label %return, label %if.then, !dbg !3137

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !3138
  %bf.load = load i32, i32* %0, align 8, !dbg !3138
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !3139
  %conv1 = zext i1 %cmp to i8, !dbg !3140
  br label %return, !dbg !3141

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !3134
  ret i8 %retval.0, !dbg !3142
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_debug_bind_get_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !3143 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !3147, metadata !DIExpression()), !dbg !3148
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 1) #8, !dbg !3149
  ret %union.tree_node* %call, !dbg !3150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3151 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3155, metadata !DIExpression()), !dbg !3157
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3158
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3158
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !3156, metadata !DIExpression()), !dbg !3157
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !3159
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !3159
  %2 = load i64, i64* %1, align 8, !dbg !3159
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3160
  store i64 %2, i64* %3, align 8, !dbg !3160
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3161
  %tobool = icmp eq i8 %call, 0, !dbg !3161
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3163

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3164
  br label %cleanup, !dbg !3165

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !3157
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !3166
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3167 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3171, metadata !DIExpression()), !dbg !3172
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3173
  %bf.load = load i32, i32* %0, align 8, !dbg !3173
  %bf.clear = and i32 %bf.load, 255, !dbg !3173
  ret i32 %bf.clear, !dbg !3174
}

declare dso_local %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_released_ssa_name(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data_) #5 !dbg !3175 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !3180, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !3181, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i8* %data_, metadata !3182, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i8* %data_, metadata !3183, metadata !DIExpression()), !dbg !3184
  %tobool = icmp eq i8* %data_, null, !dbg !3185
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3187

land.lhs.true:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %data_, metadata !3183, metadata !DIExpression()), !dbg !3184
  %0 = getelementptr inbounds i8, i8* %data_, i64 41, !dbg !3188
  %1 = load i8, i8* %0, align 1, !dbg !3188
  %tobool1 = icmp eq i8 %1, 0, !dbg !3189
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !3190

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = bitcast %union.tree_node** %tp to i64**, !dbg !3191
  %3 = load i64*, i64** %2, align 8, !dbg !3191
  %bf.load = load i64, i64* %3, align 8, !dbg !3191
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3193
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3193
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !3194
  br i1 %cmp, label %if.then3, label %if.else, !dbg !3194

if.then3:                                         ; preds = %if.end
  %bf.cast72 = and i64 %bf.load, 33554432, !dbg !3195
  %tobool8 = icmp eq i64 %bf.cast72, 0, !dbg !3195
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !3198

if.then9:                                         ; preds = %if.then3
  br label %cleanup, !dbg !3199

if.end10:                                         ; preds = %if.then3
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3200
  br label %cleanup, !dbg !3201

if.else:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !3202
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3202
  %cmp15 = icmp eq i32 %5, 2, !dbg !3202
  br i1 %cmp15, label %if.then25, label %lor.lhs.false, !dbg !3202

lor.lhs.false:                                    ; preds = %if.else
  %cmp23 = icmp eq i32 %5, 3, !dbg !3202
  br i1 %cmp23, label %if.then25, label %cleanup, !dbg !3204

if.then25:                                        ; preds = %lor.lhs.false, %if.else
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3205
  br label %cleanup, !dbg !3206

cleanup:                                          ; preds = %land.lhs.true, %if.end10, %if.then25, %lor.lhs.false, %if.then9
  %retval.0 = phi %union.tree_node* [ %4, %if.then9 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false ], [ null, %if.then25 ], [ null, %if.end10 ], !dbg !3184
  ret %union.tree_node* %retval.0, !dbg !3207
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3208 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3210, metadata !DIExpression()), !dbg !3211
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !3212
  %cmp = icmp eq i32 %call, 6, !dbg !3213
  %conv1 = zext i1 %cmp to i8, !dbg !3212
  ret i8 %conv1, !dbg !3214
}

declare dso_local zeroext i8 @dom_info_available_p(i32) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3215 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3219, metadata !DIExpression()), !dbg !3220
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !3221
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3221
  ret %struct.basic_block_def* %0, !dbg !3222
}

declare dso_local %union.tree_node* @walk_gimple_op(%union.gimple_statement_d*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !3223 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3228, metadata !DIExpression()), !dbg !3229
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3230
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3231
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !3232
  store i40* %imm_uses, i40** %0, align 8, !dbg !3232
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !3233
  %1 = bitcast i40* %next to i64*, !dbg !3233
  %2 = load i64, i64* %1, align 8, !dbg !3233
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3234
  store i64 %2, i64* %3, align 8, !dbg !3234
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !3235
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !3236
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !3237
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !3238
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !3239
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !3240
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !3241
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !3242
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !3243
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !3244
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3245
  %tobool = icmp eq i8 %call, 0, !dbg !3245
  br i1 %tobool, label %if.end, label %return, !dbg !3247

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3248
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !3248
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !3249
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !3250
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !3250
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !3250
  br label %return, !dbg !3251

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !3229
  ret %union.gimple_statement_d* %retval.0, !dbg !3252
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3253 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3255, metadata !DIExpression()), !dbg !3256
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3257
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3257
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3258
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !3258
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !3259
  %conv1 = zext i1 %cmp to i8, !dbg !3260
  ret i8 %conv1, !dbg !3261
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3262 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3264, metadata !DIExpression()), !dbg !3265
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3266
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3266
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !3267
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !3267
  %2 = load i64, i64* %1, align 8, !dbg !3267
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !3268
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !3269
  store i64 %2, i64* %3, align 8, !dbg !3269
  ret %struct.ssa_use_operand_d* %0, !dbg !3270
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3271 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3273, metadata !DIExpression()), !dbg !3274
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3275
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3275
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !3276
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !3277
  %conv1 = zext i1 %cmp to i8, !dbg !3278
  ret i8 %conv1, !dbg !3279
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !3280 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !3284, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3285, metadata !DIExpression()), !dbg !3286
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #8, !dbg !3287
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !3288
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !3288
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !3289
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #8, !dbg !3290
  ret void, !dbg !3291
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3292 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3294, metadata !DIExpression()), !dbg !3295
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !3296
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !3296
  %1 = load i64, i64* %0, align 8, !dbg !3296
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3297
  store i64 %1, i64* %2, align 8, !dbg !3297
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3298
  %tobool = icmp eq i8 %call, 0, !dbg !3298
  br i1 %tobool, label %if.else, label %return, !dbg !3300

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3301
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !3301
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !3303
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !3303
  %5 = load i64, i64* %4, align 8, !dbg !3303
  store i64 %5, i64* %0, align 8, !dbg !3304
  br label %return, !dbg !3305

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !3306
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !3307
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !3308 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !3312, metadata !DIExpression()), !dbg !3313
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #8, !dbg !3314
  ret void, !dbg !3315
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !3316 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !3318, metadata !DIExpression()), !dbg !3319
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #8, !dbg !3320
  %tobool = icmp eq i8 %call, 0, !dbg !3320
  br i1 %tobool, label %if.end, label %if.then, !dbg !3322

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !3323
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !3325
  br label %if.end, !dbg !3326

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3327
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3328 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3332, metadata !DIExpression()), !dbg !3333
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !3334
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !3334
  %1 = load i64, i64* %0, align 8, !dbg !3334
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3335
  store i64 %1, i64* %2, align 8, !dbg !3335
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3336
  %tobool = icmp eq i8 %call, 0, !dbg !3336
  br i1 %tobool, label %if.end4, label %if.then, !dbg !3338

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !3339
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !3339
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !3342
  br i1 %cmp, label %return, label %if.then2, !dbg !3343

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !3344
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #8, !dbg !3345
  br label %return, !dbg !3345

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3346
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !3346
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !3347
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !3348
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !3348
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3348
  br label %return, !dbg !3349

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !3333
  ret %union.gimple_statement_d* %retval.0, !dbg !3350
}

; Function Attrs: nounwind uwtable
define dso_local void @insert_debug_temps_for_defs(%struct.gimple_stmt_iterator* %gsi) local_unnamed_addr #5 !dbg !3351 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3353, metadata !DIExpression()), !dbg !3373
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !3374
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #7, !dbg !3374
  %1 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3375
  %tobool = icmp eq i32 %1, 0, !dbg !3375
  br i1 %tobool, label %cleanup11, label %if.end, !dbg !3377

if.end:                                           ; preds = %entry
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3378
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3354, metadata !DIExpression()), !dbg !3373
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #8, !dbg !3379
  %cmp = icmp eq i32 %call1, 16, !dbg !3379
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3379

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3355, metadata !DIExpression(DW_OP_deref)), !dbg !3373
  %call2 = call fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %call, i32 2) #8, !dbg !3379
  br label %cond.end, !dbg !3379

cond.false:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3355, metadata !DIExpression(DW_OP_deref)), !dbg !3373
  %call3 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %call, i32 2) #8, !dbg !3379
  br label %cond.end, !dbg !3379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node** [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !3379
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !3368, metadata !DIExpression()), !dbg !3373
  br label %for.cond, !dbg !3379

for.cond:                                         ; preds = %cleanup, %cond.end
  %def_p.0 = phi %union.tree_node** [ %cond, %cond.end ], [ %call10, %cleanup ], !dbg !3380
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !3368, metadata !DIExpression()), !dbg !3373
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3355, metadata !DIExpression(DW_OP_deref)), !dbg !3373
  %call4 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !3381
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3381
  br i1 %tobool5, label %for.body, label %cleanup11.loopexit, !dbg !3379

for.body:                                         ; preds = %for.cond
  %call6 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #8, !dbg !3382
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3369, metadata !DIExpression()), !dbg !3383
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3384
  %bf.load = load i64, i64* %2, align 8, !dbg !3384
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3386
  %cmp7 = icmp eq i64 %bf.cast1, 141, !dbg !3386
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !3387

if.end9:                                          ; preds = %for.body
  call void @insert_debug_temp_for_var_def(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call6) #8, !dbg !3388
  br label %cleanup, !dbg !3389

cleanup:                                          ; preds = %for.body, %if.end9
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3355, metadata !DIExpression(DW_OP_deref)), !dbg !3373
  %call10 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !3381
  call void @llvm.dbg.value(metadata %union.tree_node** %call10, metadata !3368, metadata !DIExpression()), !dbg !3373
  br label %for.cond, !dbg !3381, !llvm.loop !3390

cleanup11.loopexit:                               ; preds = %for.cond
  br label %cleanup11, !dbg !3392

cleanup11:                                        ; preds = %cleanup11.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #7, !dbg !3392
  ret void, !dbg !3392
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !3393 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !3398, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !3399, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 2, metadata !3400, metadata !DIExpression()), !dbg !3403
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !3404
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !3404
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3401, metadata !DIExpression()), !dbg !3403
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !3405
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !3406
  store i8 0, i8* %done, align 8, !dbg !3407
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !3408
  %tobool = icmp eq i8 %call2, 0, !dbg !3408
  br i1 %tobool, label %if.then, label %if.end, !dbg !3409

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !3410
  br label %cleanup, !dbg !3413

if.end:                                           ; preds = %entry
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !3414
  store i32 3, i32* %iter_type, align 4, !dbg !3415
  %call8 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !3416
  br label %cleanup, !dbg !3417

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ null, %if.then ], [ %call8, %if.end ], !dbg !3403
  ret %union.tree_node** %retval.0, !dbg !3418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !3419 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !3421, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3422, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 2, metadata !3423, metadata !DIExpression()), !dbg !3424
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !3425
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !3426
  store i32 3, i32* %iter_type, align 4, !dbg !3427
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !3428
  ret %union.tree_node** %call, !dbg !3429
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !3430 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !3436, metadata !DIExpression()), !dbg !3437
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !3438
  %0 = load i8, i8* %done, align 8, !dbg !3438
  ret i8 %0, !dbg !3439
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !3440 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3444, metadata !DIExpression()), !dbg !3445
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !3446
  ret %union.tree_node* %0, !dbg !3447
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !3448 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !3452, metadata !DIExpression()), !dbg !3454
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !3455
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !3455
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !3457
  br i1 %tobool, label %if.end, label %if.then, !dbg !3458

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !3459
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !3459
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !3453, metadata !DIExpression()), !dbg !3454
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !3461
  %3 = load i64, i64* %2, align 8, !dbg !3461
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !3462
  store i64 %3, i64* %4, align 8, !dbg !3462
  br label %cleanup, !dbg !3463

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !3464
  store i8 1, i8* %done, align 8, !dbg !3465
  br label %cleanup, !dbg !3466

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !3454
  ret %union.tree_node** %retval.0, !dbg !3467
}

; Function Attrs: nounwind uwtable
define dso_local void @release_defs_bitset(%struct.bitmap_head_def* %toremove) local_unnamed_addr #5 !dbg !3468 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %uit = alloca %struct.immediate_use_iterator_d, align 8
  %dit = alloca %struct.ssa_operand_iterator_d, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %toremove, metadata !3472, metadata !DIExpression()), !dbg !3502
  %0 = bitcast i32* %j to i8*, !dbg !3503
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3503
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3504
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %toremove, i64 0, i32 0, !dbg !3502
  %2 = bitcast %struct.immediate_use_iterator_d* %uit to i8*, !dbg !3505
  %3 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %dit, i64 0, i32 0, !dbg !3506
  %4 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3507
  br label %while.cond, !dbg !3508

while.cond.loopexit:                              ; preds = %for.cond
  br label %while.cond, !dbg !3508

while.cond:                                       ; preds = %while.cond.loopexit, %entry
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3509
  %tobool = icmp eq %struct.bitmap_element_def* %5, null, !dbg !3509
  br i1 %tobool, label %while.end, label %while.body, !dbg !3508

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32* %j, metadata !3473, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3474, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %toremove, i32 0, i32* nonnull %j) #8, !dbg !3510
  br label %for.cond, !dbg !3510

for.cond:                                         ; preds = %if.end48, %while.body
  call void @llvm.dbg.value(metadata i32* %j, metadata !3473, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3474, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3511
  %tobool2 = icmp eq i8 %call, 0, !dbg !3510
  br i1 %tobool2, label %while.cond.loopexit, label %for.body, !dbg !3510, !llvm.loop !3512

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 1, metadata !3482, metadata !DIExpression()), !dbg !3505
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3514
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3514
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3514
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !3514
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3514
  %tobool3 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3514
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3514

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3514
  br label %cond.end, !dbg !3514

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3514
  %9 = load i32, i32* %j, align 4, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %9, metadata !3473, metadata !DIExpression()), !dbg !3502
  %call7 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %9) #8, !dbg !3514
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3486, metadata !DIExpression()), !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #7, !dbg !3515
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %uit, metadata !3488, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  %call8 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %uit, %union.tree_node* %call7) #8, !dbg !3516
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %for.cond9, !dbg !3516

for.cond9:                                        ; preds = %for.inc36, %cond.end
  %stmt.0 = phi %union.gimple_statement_d* [ %call8, %cond.end ], [ %call37, %for.inc36 ], !dbg !3517
  %remove_now.0 = phi i8 [ 1, %cond.end ], [ %remove_now.4, %for.inc36 ], !dbg !3518
  call void @llvm.dbg.value(metadata i8 %remove_now.0, metadata !3482, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !3487, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %uit, metadata !3488, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  %call10 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %uit) #8, !dbg !3519
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3519
  br i1 %tobool11, label %for.body13, label %for.end38, !dbg !3516

for.body13:                                       ; preds = %for.cond9
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #7, !dbg !3520
  %call14 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #8, !dbg !3521
  %cmp = icmp eq i32 %call14, 16, !dbg !3523
  br i1 %cmp, label %cleanup32, label %lor.lhs.false, !dbg !3524

lor.lhs.false:                                    ; preds = %for.body13
  %call15 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #8, !dbg !3525
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3525
  br i1 %tobool16, label %if.end, label %cleanup32, !dbg !3526

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %dit, metadata !3489, metadata !DIExpression(DW_OP_deref)), !dbg !3506
  %call17 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %dit, %union.gimple_statement_d* %stmt.0, i32 2) #8, !dbg !3527
  call void @llvm.dbg.value(metadata %union.tree_node** %call17, metadata !3493, metadata !DIExpression()), !dbg !3506
  br label %for.cond18, !dbg !3527

for.cond18:                                       ; preds = %for.inc, %if.end
  %def_p.0 = phi %union.tree_node** [ %call17, %if.end ], [ %call28, %for.inc ], !dbg !3528
  %remove_now.1 = phi i8 [ %remove_now.0, %if.end ], [ %.remove_now.1, %for.inc ], !dbg !3505
  call void @llvm.dbg.value(metadata i8 %remove_now.1, metadata !3482, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !3493, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %dit, metadata !3489, metadata !DIExpression(DW_OP_deref)), !dbg !3506
  %call19 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %dit) #8, !dbg !3529
  %tobool20 = icmp eq i8 %call19, 0, !dbg !3529
  br i1 %tobool20, label %for.body22, label %for.end, !dbg !3527

for.body22:                                       ; preds = %for.cond18
  %call23 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #8, !dbg !3530
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !3494, metadata !DIExpression()), !dbg !3531
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3532
  %10 = bitcast %union.tree_node** %version to i32*, !dbg !3532
  %11 = load i32, i32* %10, align 8, !dbg !3532
  %call24 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %toremove, i32 %11) #6, !dbg !3534
  %tobool25 = icmp ne i32 %call24, 0, !dbg !3534
  %.remove_now.1 = select i1 %tobool25, i8 0, i8 %remove_now.1, !dbg !3535
  call void @llvm.dbg.value(metadata i8 %.remove_now.1, metadata !3482, metadata !DIExpression()), !dbg !3505
  br i1 %tobool25, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body22
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %dit, metadata !3489, metadata !DIExpression(DW_OP_deref)), !dbg !3506
  %call28 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %dit) #8, !dbg !3529
  call void @llvm.dbg.value(metadata %union.tree_node** %call28, metadata !3493, metadata !DIExpression()), !dbg !3506
  br label %for.cond18, !dbg !3529, !llvm.loop !3536

for.end:                                          ; preds = %for.body22, %for.cond18
  %remove_now.3 = phi i8 [ %.remove_now.1, %for.body22 ], [ %remove_now.1, %for.cond18 ], !dbg !3505
  call void @llvm.dbg.value(metadata i8 %remove_now.3, metadata !3482, metadata !DIExpression()), !dbg !3505
  %tobool29 = icmp eq i8 %remove_now.3, 0, !dbg !3538
  br i1 %tobool29, label %if.then30, label %cleanup32, !dbg !3540

if.then30:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %uit, metadata !3488, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* nonnull %uit) #8, !dbg !3541
  br label %cleanup32, !dbg !3541

cleanup32:                                        ; preds = %for.end, %lor.lhs.false, %for.body13, %if.then30
  %remove_now.4 = phi i8 [ 0, %if.then30 ], [ %remove_now.0, %lor.lhs.false ], [ %remove_now.0, %for.body13 ], [ %remove_now.3, %for.end ], !dbg !3505
  %cleanup.dest.slot.1 = phi i1 [ true, %if.then30 ], [ false, %lor.lhs.false ], [ false, %for.body13 ], [ false, %for.end ]
  call void @llvm.dbg.value(metadata i8 %remove_now.4, metadata !3482, metadata !DIExpression()), !dbg !3505
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #7, !dbg !3543
  br i1 %cleanup.dest.slot.1, label %for.end38, label %for.inc36

for.inc36:                                        ; preds = %cleanup32
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %uit, metadata !3488, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  %call37 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %uit) #8, !dbg !3519
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call37, metadata !3487, metadata !DIExpression()), !dbg !3505
  br label %for.cond9, !dbg !3519, !llvm.loop !3544

for.end38:                                        ; preds = %cleanup32, %for.cond9
  %remove_now.5 = phi i8 [ %remove_now.4, %cleanup32 ], [ %remove_now.0, %for.cond9 ], !dbg !3518
  call void @llvm.dbg.value(metadata i8 %remove_now.5, metadata !3482, metadata !DIExpression()), !dbg !3505
  %tobool39 = icmp eq i8 %remove_now.5, 0, !dbg !3546
  br i1 %tobool39, label %if.end48, label %if.then40, !dbg !3547

if.then40:                                        ; preds = %for.end38
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3548
  %12 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3548
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %12, align 8, !dbg !3548
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !3498, metadata !DIExpression()), !dbg !3507
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3549
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3501, metadata !DIExpression(DW_OP_deref)), !dbg !3507
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %gsi, %union.gimple_statement_d* %13) #6, !dbg !3550
  %call42 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %13) #8, !dbg !3551
  %cmp43 = icmp eq i32 %call42, 16, !dbg !3553
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !3554

if.then45:                                        ; preds = %if.then40
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3501, metadata !DIExpression(DW_OP_deref)), !dbg !3507
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !3555
  br label %if.end46, !dbg !3555

if.else:                                          ; preds = %if.then40
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3501, metadata !DIExpression(DW_OP_deref)), !dbg !3507
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !3556
  call void @release_defs(%union.gimple_statement_d* %13) #6, !dbg !3558
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then45
  %14 = load i32, i32* %j, align 4, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %14, metadata !3473, metadata !DIExpression()), !dbg !3502
  %call47 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %toremove, i32 %14) #6, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3561
  br label %if.end48, !dbg !3562

if.end48:                                         ; preds = %for.end38, %if.end46
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #7, !dbg !3563
  call void @llvm.dbg.value(metadata i32* %j, metadata !3473, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3474, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3511
  br label %for.cond, !dbg !3511, !llvm.loop !3564

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3566
  ret void, !dbg !3566
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !3567 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3576, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !3577, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 0, metadata !3578, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3579, metadata !DIExpression()), !dbg !3580
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !3581
  %1 = load i64, i64* %0, align 8, !dbg !3581
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3582
  store i64 %1, i64* %2, align 8, !dbg !3582
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !3583
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !3584
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3585
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !3588
  br label %while.body, !dbg !3588

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !3589
  br i1 %tobool, label %if.then, label %if.end, !dbg !3590

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !3591
  br label %while.end, !dbg !3593

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !3594

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !3588, !llvm.loop !3595

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !3597

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !3597
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !3599
  %7 = load i32, i32* %indx9, align 8, !dbg !3599
  %cmp11 = icmp eq i32 %7, 0, !dbg !3600
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !3601

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !3602
  %8 = load i32, i32* %indx14, align 8, !dbg !3602
  %mul = shl i32 %8, 7, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3578, metadata !DIExpression()), !dbg !3580
  br label %if.end15, !dbg !3604

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !3578, metadata !DIExpression()), !dbg !3580
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3605
  store i32 0, i32* %word_no, align 8, !dbg !3606
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !3607
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3607
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3608
  store i64 %9, i64* %bits21, align 8, !dbg !3609
  %tobool23 = icmp eq i64 %9, 0, !dbg !3610
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !3610
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %add, metadata !3578, metadata !DIExpression()), !dbg !3580
  store i32 %add, i32* %bit_no, align 4, !dbg !3612
  ret void, !dbg !3613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3614 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3618, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3619, metadata !DIExpression()), !dbg !3623
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3624
  %0 = load i64, i64* %bits, align 8, !dbg !3624
  %tobool = icmp eq i64 %0, 0, !dbg !3625
  br i1 %tobool, label %if.end, label %next_bit, !dbg !3626

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !3627
  br label %next_bit, !dbg !3630

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !3620), !dbg !3631
  br label %while.cond, !dbg !3630

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !3632
  %and = and i64 %2, 1, !dbg !3633
  %tobool2 = icmp eq i64 %and, 0, !dbg !3634
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !3630

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !3635
  store i64 %shr, i64* %bits, align 8, !dbg !3635
  %3 = load i32, i32* %bit_no, align 4, !dbg !3637
  %add = add i32 %3, 1, !dbg !3637
  store i32 %add, i32* %bit_no, align 4, !dbg !3637
  %.pre = load i64, i64* %bits, align 8, !dbg !3632
  br label %while.cond, !dbg !3630, !llvm.loop !3638

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !3640
  %sub = add i32 %4, 63, !dbg !3641
  %div = and i32 %sub, -64, !dbg !3642
  store i32 %div, i32* %bit_no, align 4, !dbg !3643
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3644
  %5 = load i32, i32* %word_no, align 8, !dbg !3645
  %inc = add i32 %5, 1, !dbg !3645
  store i32 %inc, i32* %word_no, align 8, !dbg !3645
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3646
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3646
  br label %while.body6, !dbg !3647

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !3648

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !3649
  %cmp = icmp eq i32 %8, 2, !dbg !3650
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !3646
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !3648

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !3627
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !3627
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3627
  store i64 %10, i64* %bits, align 8, !dbg !3651
  %tobool14 = icmp eq i64 %10, 0, !dbg !3652
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !3654

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !3655
  %add17 = add i32 %11, 64, !dbg !3655
  store i32 %add17, i32* %bit_no, align 4, !dbg !3655
  %12 = load i32, i32* %word_no, align 8, !dbg !3656
  %inc19 = add i32 %12, 1, !dbg !3656
  store i32 %inc19, i32* %word_no, align 8, !dbg !3656
  br label %while.cond7, !dbg !3648, !llvm.loop !3657

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !3646
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !3659
  %14 = load i64, i64* %13, align 8, !dbg !3659
  store i64 %14, i64* %6, align 8, !dbg !3660
  %tobool24 = icmp eq i64 %14, 0, !dbg !3661
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !3663

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !3663
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !3664
  %16 = load i32, i32* %indx, align 8, !dbg !3664
  %mul28 = shl i32 %16, 7, !dbg !3665
  store i32 %mul28, i32* %bit_no, align 4, !dbg !3666
  store i32 0, i32* %word_no, align 8, !dbg !3667
  br label %while.body6, !dbg !3647, !llvm.loop !3668

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3670

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !3670

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !3623
  ret i8 %retval.0, !dbg !3670
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3671 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3677, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3678, metadata !DIExpression()), !dbg !3679
  br label %land.end, !dbg !3680

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3680
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3680
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3680
  ret %union.tree_node* %0, !dbg !3680
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3681 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3683, metadata !DIExpression()), !dbg !3684
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !3685
  %cmp = icmp eq i32 %call, 2, !dbg !3686
  %conv1 = zext i1 %cmp to i8, !dbg !3685
  ret i8 %conv1, !dbg !3687
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3688 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3692, metadata !DIExpression()), !dbg !3693
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !3694
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node) #8, !dbg !3695
  ret void, !dbg !3696
}

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3697 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3701, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3702, metadata !DIExpression()), !dbg !3703
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3704
  %0 = load i64, i64* %bits, align 8, !dbg !3705
  %shr = lshr i64 %0, 1, !dbg !3705
  store i64 %shr, i64* %bits, align 8, !dbg !3705
  %1 = load i32, i32* %bit_no, align 4, !dbg !3706
  %add = add i32 %1, 1, !dbg !3706
  store i32 %add, i32* %bit_no, align 4, !dbg !3706
  ret void, !dbg !3707
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_ssa(i8 zeroext %check_modified_stmt) local_unnamed_addr #5 !dbg !3708 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp76 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp93 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %check_modified_stmt, metadata !3712, metadata !DIExpression()), !dbg !3754
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3755
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3755
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3755
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3755
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3755
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3755
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3755

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3755
  br label %cond.end, !dbg !3755

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3755
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !3755
  %conv = zext i32 %call to i64, !dbg !3755
  %call4 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3755
  %3 = bitcast i8* %call4 to %struct.basic_block_def**, !dbg !3755
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %3, metadata !3715, metadata !DIExpression()), !dbg !3754
  %4 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !3756
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #7, !dbg !3756
  %call5 = tail call i32 @dom_info_state(i32 1) #6, !dbg !3757
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3718, metadata !DIExpression()), !dbg !3754
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3758
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call6, metadata !3719, metadata !DIExpression()), !dbg !3754
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3759
  %call8 = tail call zeroext i8 @need_ssa_update_p(%struct.function* %5) #6, !dbg !3759
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3759
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !3759

cond.true10:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 872, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3759
  br label %cond.end12, !dbg !3759

cond.end12:                                       ; preds = %cond.end, %cond.true10
  tail call void @verify_stmts() #6, !dbg !3760
  %6 = load i8, i8* @timevar_enable, align 1, !dbg !3761
  %tobool14 = icmp eq i8 %6, 0, !dbg !3761
  br i1 %tobool14, label %do.end, label %if.then, !dbg !3764

if.then:                                          ; preds = %cond.end12
  tail call void @timevar_push_1(i32 107) #6, !dbg !3761
  br label %do.end, !dbg !3761

do.end:                                           ; preds = %cond.end12, %if.then
  call void @llvm.dbg.value(metadata i64 1, metadata !3713, metadata !DIExpression()), !dbg !3754
  br label %for.cond, !dbg !3765

for.cond:                                         ; preds = %for.inc, %do.end
  %i.0 = phi i64 [ 1, %do.end ], [ %inc, %for.inc ], !dbg !3766
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3713, metadata !DIExpression()), !dbg !3754
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3767
  %gimple_df16 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 3, !dbg !3767
  %8 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df16, align 8, !dbg !3767
  %ssa_names17 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %8, i64 0, i32 2, !dbg !3767
  %9 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names17, align 8, !dbg !3767
  %tobool18 = icmp eq %struct.VEC_tree_gc* %9, null, !dbg !3767
  br i1 %tobool18, label %cond.end25, label %cond.true19, !dbg !3767

cond.true19:                                      ; preds = %for.cond
  %base23 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %9, i64 0, i32 0, !dbg !3767
  br label %cond.end25, !dbg !3767

cond.end25:                                       ; preds = %for.cond, %cond.true19
  %cond26 = phi %struct.VEC_tree_base* [ %base23, %cond.true19 ], [ null, %for.cond ], !dbg !3767
  %call27 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond26) #8, !dbg !3767
  %conv28 = zext i32 %call27 to i64, !dbg !3767
  %cmp = icmp ult i64 %i.0, %conv28, !dbg !3768
  br i1 %cmp, label %for.body, label %for.end, !dbg !3769

for.body:                                         ; preds = %cond.end25
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3770
  %gimple_df31 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 3, !dbg !3770
  %11 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df31, align 8, !dbg !3770
  %ssa_names32 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %11, i64 0, i32 2, !dbg !3770
  %12 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names32, align 8, !dbg !3770
  %tobool33 = icmp eq %struct.VEC_tree_gc* %12, null, !dbg !3770
  br i1 %tobool33, label %cond.end40, label %cond.true34, !dbg !3770

cond.true34:                                      ; preds = %for.body
  %base38 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %12, i64 0, i32 0, !dbg !3770
  br label %cond.end40, !dbg !3770

cond.end40:                                       ; preds = %for.body, %cond.true34
  %cond41 = phi %struct.VEC_tree_base* [ %base38, %cond.true34 ], [ null, %for.body ], !dbg !3770
  %conv42 = trunc i64 %i.0 to i32, !dbg !3770
  %call43 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond41, i32 %conv42) #8, !dbg !3770
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !3720, metadata !DIExpression()), !dbg !3771
  %tobool44 = icmp eq %union.tree_node* %call43, null, !dbg !3772
  br i1 %tobool44, label %for.inc, label %if.then45, !dbg !3773

if.then45:                                        ; preds = %cond.end40
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3774
  %bf.load = load i64, i64* %13, align 8, !dbg !3775
  %bf.clear = and i64 %bf.load, -1099511627777, !dbg !3775
  store i64 %bf.clear, i64* %13, align 8, !dbg !3775
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3776
  %14 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3776
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %14, align 8, !dbg !3776
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %15, metadata !3724, metadata !DIExpression()), !dbg !3777
  %call47 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %15) #8, !dbg !3778
  %tobool48 = icmp eq i8 %call47, 0, !dbg !3778
  br i1 %tobool48, label %if.then49, label %for.inc, !dbg !3779

if.then49:                                        ; preds = %if.then45
  %call51 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %15) #8, !dbg !3780
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call51, metadata !3727, metadata !DIExpression()), !dbg !3781
  %call52 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %call43) #6, !dbg !3782
  %tobool53 = icmp eq i8 %call52, 0, !dbg !3783
  %conv54 = zext i1 %tobool53 to i8, !dbg !3783
  %call55 = tail call fastcc zeroext i8 @verify_def(%struct.basic_block_def* %call51, %struct.basic_block_def** %3, %union.tree_node* nonnull %call43, %union.gimple_statement_d* %15, i8 zeroext %conv54) #8, !dbg !3784
  br label %for.inc, !dbg !3785

for.inc:                                          ; preds = %if.then45, %cond.end40, %if.then49
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3786
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3713, metadata !DIExpression()), !dbg !3754
  br label %for.cond, !dbg !3787, !llvm.loop !3788

for.end:                                          ; preds = %cond.end25
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !3790
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3791
  %cfg = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 1, !dbg !3791
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3791
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 0, !dbg !3791
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3791
  %19 = bitcast %struct.edge_def** %e to i8*, !dbg !3792
  %20 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3792
  %21 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3792
  %22 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3793
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3793
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3793
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3795
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3795
  %27 = bitcast %struct.gimple_stmt_iterator* %tmp76 to i8*, !dbg !3797
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp93 to i8*, !dbg !3799
  %tobool103 = icmp eq i8 %check_modified_stmt, 0, !dbg !3800
  br label %for.cond59, !dbg !3791

for.cond59:                                       ; preds = %for.inc308, %for.end
  %29 = phi %struct.control_flow_graph* [ %17, %for.end ], [ %.pre14, %for.inc308 ], !dbg !3802
  %.pn = phi %struct.basic_block_def* [ %18, %for.end ], [ %bb.0, %for.inc308 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3803
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3803
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3714, metadata !DIExpression()), !dbg !3754
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 1, !dbg !3802
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3802
  %cmp62 = icmp eq %struct.basic_block_def* %bb.0, %30, !dbg !3802
  br i1 %cmp62, label %for.end310, label %for.body64, !dbg !3791

for.body64:                                       ; preds = %for.cond59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7, !dbg !3804
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7, !dbg !3805
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7, !dbg !3806
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7, !dbg !3807
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !3807
  %call65 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !3807
  %31 = extractvalue { i32, %struct.VEC_edge_gc** } %call65, 0, !dbg !3807
  store i32 %31, i32* %23, align 8, !dbg !3807
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call65, 1, !dbg !3807
  store %struct.VEC_edge_gc** %32, %struct.VEC_edge_gc*** %24, align 8, !dbg !3807
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %22, i64 16, i1 false), !dbg !3807
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7, !dbg !3807
  br label %for.cond66, !dbg !3807

for.cond66:                                       ; preds = %for.inc74, %for.body64
  %33 = load i32, i32* %25, align 8, !dbg !3808
  %34 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %26, align 8, !dbg !3808
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3730, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  %call67 = call fastcc zeroext i8 @ei_cond(i32 %33, %struct.VEC_edge_gc** %34, %struct.edge_def** nonnull %e) #8, !dbg !3808
  %tobool68 = icmp eq i8 %call67, 0, !dbg !3807
  br i1 %tobool68, label %for.end75, label %for.body69, !dbg !3807

for.body69:                                       ; preds = %for.cond66
  %35 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3809
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !3730, metadata !DIExpression()), !dbg !3792
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i64 0, i32 3, !dbg !3812
  %36 = load i8*, i8** %aux, align 8, !dbg !3812
  %tobool70 = icmp eq i8* %36, null, !dbg !3809
  br i1 %tobool70, label %for.inc74, label %if.then71, !dbg !3813

if.then71:                                        ; preds = %for.body69
  %.lcssa = phi %struct.edge_def* [ %35, %for.body69 ], !dbg !3809
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3730, metadata !DIExpression()), !dbg !3792
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.lcssa, i64 0, i32 0, !dbg !3814
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3814
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 9, !dbg !3816
  %38 = load i32, i32* %index, align 8, !dbg !3816
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3730, metadata !DIExpression()), !dbg !3792
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.lcssa, i64 0, i32 1, !dbg !3817
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3817
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 9, !dbg !3818
  %40 = load i32, i32* %index72, align 8, !dbg !3818
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i32 %38, i32 %40) #6, !dbg !3819
  br label %cleanup302, !dbg !3820

for.inc74:                                        ; preds = %for.body69
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3735, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3808
  br label %for.cond66, !dbg !3808, !llvm.loop !3821

for.end75:                                        ; preds = %for.cond66
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7, !dbg !3823
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp76, %struct.basic_block_def* %bb.0) #6, !dbg !3823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %27, i64 24, i1 false), !dbg !3823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7, !dbg !3823
  br label %for.cond77, !dbg !3824

for.cond77:                                       ; preds = %if.end87, %for.end75
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  %call78 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3825
  %tobool79 = icmp eq i8 %call78, 0, !dbg !3827
  br i1 %tobool79, label %for.body82, label %for.end92, !dbg !3828

for.body82:                                       ; preds = %for.cond77
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  %call83 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3829
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call83, metadata !3734, metadata !DIExpression()), !dbg !3792
  %call84 = call fastcc zeroext i8 @verify_phi_args(%union.gimple_statement_d* %call83, %struct.basic_block_def* %bb.0, %struct.basic_block_def** %3) #8, !dbg !3831
  %tobool85 = icmp eq i8 %call84, 0, !dbg !3831
  br i1 %tobool85, label %if.end87, label %cleanup302.loopexit12, !dbg !3833

if.end87:                                         ; preds = %for.body82
  %call88 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call83) #8, !dbg !3834
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3834
  %41 = bitcast %union.tree_node** %version to i32*, !dbg !3834
  %42 = load i32, i32* %41, align 8, !dbg !3834
  %call90 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call6, i32 %42) #6, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3836
  br label %for.cond77, !dbg !3837, !llvm.loop !3838

for.end92:                                        ; preds = %for.cond77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7, !dbg !3840
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp93, %struct.basic_block_def* %bb.0) #8, !dbg !3840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !3840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7, !dbg !3840
  br label %for.cond94, !dbg !3841

for.cond94:                                       ; preds = %for.inc300, %for.end92
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  %call95 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3842
  %tobool96 = icmp eq i8 %call95, 0, !dbg !3843
  br i1 %tobool96, label %for.body99, label %for.end301, !dbg !3844

for.body99:                                       ; preds = %for.cond94
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  %call101 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3845
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call101, metadata !3743, metadata !DIExpression()), !dbg !3846
  br i1 %tobool103, label %if.end108, label %land.lhs.true, !dbg !3847

land.lhs.true:                                    ; preds = %for.body99
  %call104 = call fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %call101) #8, !dbg !3848
  %tobool106 = icmp eq i8 %call104, 0, !dbg !3848
  br i1 %tobool106, label %if.end108, label %if.then107, !dbg !3849

if.then107:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), %union.gimple_statement_d* %call101) #6, !dbg !3850
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3852
  call void @print_gimple_stmt(%struct._IO_FILE* %43, %union.gimple_statement_d* %call101, i32 0, i32 64) #6, !dbg !3853
  br label %cleanup295, !dbg !3854

if.end108:                                        ; preds = %land.lhs.true, %for.body99
  %call109 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call101) #8, !dbg !3855
  %tobool111 = icmp eq i8 %call109, 0, !dbg !3855
  br i1 %tobool111, label %if.else, label %land.lhs.true112, !dbg !3856

land.lhs.true112:                                 ; preds = %if.end108
  %call113 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call101) #8, !dbg !3857
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3857
  %bf.load115 = load i64, i64* %44, align 8, !dbg !3857
  %bf.cast3 = and i64 %bf.load115, 65535, !dbg !3858
  %cmp117 = icmp eq i64 %bf.cast3, 141, !dbg !3858
  br i1 %cmp117, label %if.else, label %if.then119, !dbg !3859

if.then119:                                       ; preds = %land.lhs.true112
  %call120 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call101) #8, !dbg !3860
  call void @llvm.dbg.value(metadata %union.tree_node* %call120, metadata !3749, metadata !DIExpression()), !dbg !3861
  %call121 = call %union.tree_node* @get_base_address(%union.tree_node* %call120) #6, !dbg !3862
  call void @llvm.dbg.value(metadata %union.tree_node* %call121, metadata !3752, metadata !DIExpression()), !dbg !3861
  %tobool122 = icmp eq %union.tree_node* %call121, null, !dbg !3863
  br i1 %tobool122, label %cleanup, label %land.lhs.true123, !dbg !3865

land.lhs.true123:                                 ; preds = %if.then119
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3866
  %bf.load125 = load i64, i64* %45, align 8, !dbg !3866
  %bf.cast1274 = and i64 %bf.load125, 65535, !dbg !3866
  %cmp128 = icmp eq i64 %bf.cast1274, 32, !dbg !3866
  br i1 %cmp128, label %land.lhs.true176, label %lor.lhs.false, !dbg !3866

lor.lhs.false:                                    ; preds = %land.lhs.true123
  %cmp134 = icmp eq i64 %bf.cast1274, 34, !dbg !3866
  br i1 %cmp134, label %land.lhs.true176, label %lor.lhs.false136, !dbg !3866

lor.lhs.false136:                                 ; preds = %lor.lhs.false
  %cmp141 = icmp eq i64 %bf.cast1274, 36, !dbg !3866
  br i1 %cmp141, label %land.lhs.true176, label %lor.lhs.false143, !dbg !3866

lor.lhs.false143:                                 ; preds = %lor.lhs.false136
  %cmp148 = icmp eq i64 %bf.cast1274, 141, !dbg !3866
  br i1 %cmp148, label %land.lhs.true150, label %cleanup, !dbg !3866

land.lhs.true150:                                 ; preds = %lor.lhs.false143
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3866
  %46 = bitcast i32* %var to i64**, !dbg !3866
  %47 = load i64*, i64** %46, align 8, !dbg !3866
  %bf.load153 = load i64, i64* %47, align 8, !dbg !3866
  %bf.cast1558 = and i64 %bf.load153, 65535, !dbg !3866
  %cmp156 = icmp eq i64 %bf.cast1558, 32, !dbg !3866
  br i1 %cmp156, label %land.lhs.true176, label %lor.lhs.false158, !dbg !3866

lor.lhs.false158:                                 ; preds = %land.lhs.true150
  %cmp165 = icmp eq i64 %bf.cast1558, 34, !dbg !3866
  br i1 %cmp165, label %land.lhs.true176, label %lor.lhs.false167, !dbg !3866

lor.lhs.false167:                                 ; preds = %lor.lhs.false158
  %cmp174 = icmp eq i64 %bf.cast1558, 36, !dbg !3866
  br i1 %cmp174, label %land.lhs.true176, label %cleanup, !dbg !3867

land.lhs.true176:                                 ; preds = %lor.lhs.false167, %lor.lhs.false158, %land.lhs.true150, %lor.lhs.false136, %lor.lhs.false, %land.lhs.true123
  %call177 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call101) #8, !dbg !3868
  %tobool178 = icmp eq %union.tree_node* %call177, null, !dbg !3868
  %48 = load i32, i32* @optimize, align 4, !dbg !3869
  %cmp180 = icmp sgt i32 %48, 0, !dbg !3870
  %or.cond = and i1 %tobool178, %cmp180, !dbg !3871
  br i1 %or.cond, label %if.then182, label %cleanup, !dbg !3871

if.then182:                                       ; preds = %land.lhs.true176
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3872
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3874
  call void @print_gimple_stmt(%struct._IO_FILE* %49, %union.gimple_statement_d* %call101, i32 0, i32 64) #6, !dbg !3875
  br label %cleanup, !dbg !3876

cleanup:                                          ; preds = %if.then119, %lor.lhs.false143, %lor.lhs.false167, %land.lhs.true176, %if.then182
  %cleanup.dest.slot.0 = phi i32 [ 13, %if.then182 ], [ 0, %land.lhs.true176 ], [ 0, %lor.lhs.false167 ], [ 0, %lor.lhs.false143 ], [ 0, %if.then119 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end193, label %cleanup295

if.else:                                          ; preds = %land.lhs.true112, %if.end108
  %call185 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %call101) #8, !dbg !3877
  %tobool187 = icmp eq i8 %call185, 0, !dbg !3877
  br i1 %tobool187, label %if.end193, label %land.lhs.true188, !dbg !3879

land.lhs.true188:                                 ; preds = %if.else
  %call189 = call fastcc zeroext i8 @gimple_debug_bind_has_value_p(%union.gimple_statement_d* %call101) #8, !dbg !3880
  %tobool190 = icmp eq i8 %call189, 0, !dbg !3880
  br i1 %tobool190, label %cleanup295, label %if.end193, !dbg !3881

if.end193:                                        ; preds = %land.lhs.true188, %if.else, %cleanup
  call void @llvm.dbg.value(metadata i8 0, metadata !3748, metadata !DIExpression()), !dbg !3846
  %call194 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call101) #8, !dbg !3882
  %tobool195 = icmp eq %union.tree_node* %call194, null, !dbg !3882
  br i1 %tobool195, label %if.end222, label %if.then196, !dbg !3884

if.then196:                                       ; preds = %if.end193
  %call197 = call fastcc %union.tree_node** @gimple_vdef_op(%union.gimple_statement_d* %call101) #8, !dbg !3885
  %cmp198 = icmp eq %union.tree_node** %call197, null, !dbg !3888
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !3889

if.then200:                                       ; preds = %if.then196
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3890
  call void @llvm.dbg.value(metadata i8 1, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end201, !dbg !3892

if.end201:                                        ; preds = %if.then200, %if.then196
  %has_err.0 = phi i8 [ 1, %if.then200 ], [ 0, %if.then196 ], !dbg !3846
  %call202 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call101) #8, !dbg !3893
  %tobool203 = icmp eq %union.tree_node* %call202, null, !dbg !3893
  br i1 %tobool203, label %if.then204, label %if.else205, !dbg !3895

if.then204:                                       ; preds = %if.end201
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3896
  call void @llvm.dbg.value(metadata i8 1, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end216, !dbg !3898

if.else205:                                       ; preds = %if.end201
  %call206 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call101) #8, !dbg !3899
  %var208 = getelementptr inbounds %union.tree_node, %union.tree_node* %call206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3899
  %50 = bitcast i32* %var208 to %union.tree_node**, !dbg !3899
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !3899
  %call209 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call101) #8, !dbg !3901
  %var211 = getelementptr inbounds %union.tree_node, %union.tree_node* %call209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3901
  %52 = bitcast i32* %var211 to %union.tree_node**, !dbg !3901
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !3901
  %cmp212 = icmp eq %union.tree_node* %51, %53, !dbg !3902
  br i1 %cmp212, label %if.end216, label %if.then214, !dbg !3903

if.then214:                                       ; preds = %if.else205
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3904
  call void @llvm.dbg.value(metadata i8 1, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end216, !dbg !3906

if.end216:                                        ; preds = %if.else205, %if.then214, %if.then204
  %has_err.2 = phi i8 [ 1, %if.then204 ], [ 1, %if.then214 ], [ %has_err.0, %if.else205 ], !dbg !3907
  %call217 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call101) #8, !dbg !3908
  %call218 = call fastcc zeroext i8 @verify_ssa_name(%union.tree_node* %call217, i8 zeroext 1) #8, !dbg !3909
  %or = or i8 %has_err.2, %call218, !dbg !3910
  call void @llvm.dbg.value(metadata i8 %or, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end222, !dbg !3911

if.end222:                                        ; preds = %if.end193, %if.end216
  %has_err.3 = phi i8 [ %or, %if.end216 ], [ 0, %if.end193 ], !dbg !3846
  call void @llvm.dbg.value(metadata i8 %has_err.3, metadata !3748, metadata !DIExpression()), !dbg !3846
  %call223 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call101) #8, !dbg !3912
  %tobool224 = icmp eq %union.tree_node* %call223, null, !dbg !3912
  br i1 %tobool224, label %if.end237, label %if.then225, !dbg !3914

if.then225:                                       ; preds = %if.end222
  %call226 = call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %call101) #8, !dbg !3915
  %cmp227 = icmp eq %struct.ssa_use_operand_d* %call226, null, !dbg !3918
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !3919

if.then229:                                       ; preds = %if.then225
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3920
  call void @llvm.dbg.value(metadata i8 1, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end230, !dbg !3922

if.end230:                                        ; preds = %if.then229, %if.then225
  %has_err.4 = phi i8 [ 1, %if.then229 ], [ %has_err.3, %if.then225 ], !dbg !3846
  call void @llvm.dbg.value(metadata i8 %has_err.4, metadata !3748, metadata !DIExpression()), !dbg !3846
  %call231 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call101) #8, !dbg !3923
  %call232 = call fastcc zeroext i8 @verify_ssa_name(%union.tree_node* %call231, i8 zeroext 1) #8, !dbg !3924
  %or2352 = or i8 %has_err.4, %call232, !dbg !3925
  call void @llvm.dbg.value(metadata i8 %or2352, metadata !3748, metadata !DIExpression()), !dbg !3846
  br label %if.end237, !dbg !3926

if.end237:                                        ; preds = %if.end222, %if.end230
  %has_err.5 = phi i8 [ %or2352, %if.end230 ], [ %has_err.3, %if.end222 ], !dbg !3846
  call void @llvm.dbg.value(metadata i8 %has_err.5, metadata !3748, metadata !DIExpression()), !dbg !3846
  %tobool238 = icmp eq i8 %has_err.5, 0, !dbg !3927
  br i1 %tobool238, label %if.end240, label %if.then239, !dbg !3929

if.then239:                                       ; preds = %if.end237
  call void (i8*, ...) @error(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3930
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3932
  call void @print_gimple_stmt(%struct._IO_FILE* %54, %union.gimple_statement_d* %call101, i32 0, i32 16448) #6, !dbg !3933
  br label %cleanup295, !dbg !3934

if.end240:                                        ; preds = %if.end237
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call241 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call101, i32 3) #8, !dbg !3935
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !3717, metadata !DIExpression()), !dbg !3754
  br label %for.cond242, !dbg !3935

for.cond242:                                      ; preds = %for.inc252, %if.end240
  %op.0 = phi %union.tree_node* [ %call241, %if.end240 ], [ %call253, %for.inc252 ], !dbg !3937
  call void @llvm.dbg.value(metadata %union.tree_node* %op.0, metadata !3717, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call243 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3938
  %tobool244 = icmp eq i8 %call243, 0, !dbg !3938
  br i1 %tobool244, label %for.body247, label %for.end254, !dbg !3935

for.body247:                                      ; preds = %for.cond242
  %call248 = call fastcc zeroext i8 @verify_ssa_name(%union.tree_node* %op.0, i8 zeroext 0) #8, !dbg !3940
  %tobool249 = icmp eq i8 %call248, 0, !dbg !3940
  br i1 %tobool249, label %for.inc252, label %if.then250, !dbg !3943

if.then250:                                       ; preds = %for.body247
  call void (i8*, ...) @error(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3944
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3946
  call void @print_gimple_stmt(%struct._IO_FILE* %55, %union.gimple_statement_d* %call101, i32 0, i32 16448) #6, !dbg !3947
  br label %cleanup295, !dbg !3948

for.inc252:                                       ; preds = %for.body247
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call253 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3938
  call void @llvm.dbg.value(metadata %union.tree_node* %call253, metadata !3717, metadata !DIExpression()), !dbg !3754
  br label %for.cond242, !dbg !3938, !llvm.loop !3949

for.end254:                                       ; preds = %for.cond242
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call255 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call101, i32 5) #8, !dbg !3951
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call255, metadata !3747, metadata !DIExpression()), !dbg !3846
  br label %for.cond256, !dbg !3951

for.cond256:                                      ; preds = %for.inc269, %for.end254
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call255, %for.end254 ], [ %call270, %for.inc269 ], !dbg !3953
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !3747, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call257 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3954
  %tobool258 = icmp eq i8 %call257, 0, !dbg !3954
  br i1 %tobool258, label %for.body261, label %for.end271, !dbg !3951

for.body261:                                      ; preds = %for.cond256
  %call262 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !3956
  call void @llvm.dbg.value(metadata %union.tree_node* %call262, metadata !3717, metadata !DIExpression()), !dbg !3754
  %version264 = getelementptr inbounds %union.tree_node, %union.tree_node* %call262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3958
  %56 = bitcast %union.tree_node** %version264 to i32*, !dbg !3958
  %57 = load i32, i32* %56, align 8, !dbg !3958
  %idxprom = zext i32 %57 to i64, !dbg !3960
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %3, i64 %idxprom, !dbg !3960
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3960
  %call265 = call fastcc zeroext i8 @verify_use(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %58, %struct.ssa_use_operand_d* %use_p.0, %union.gimple_statement_d* %call101, i8 zeroext 0, %struct.bitmap_head_def* %call6) #8, !dbg !3961
  %tobool266 = icmp eq i8 %call265, 0, !dbg !3961
  br i1 %tobool266, label %for.inc269, label %cleanup295.loopexit11, !dbg !3962

for.inc269:                                       ; preds = %for.body261
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call270 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3954
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call270, metadata !3747, metadata !DIExpression()), !dbg !3846
  br label %for.cond256, !dbg !3954, !llvm.loop !3963

for.end271:                                       ; preds = %for.cond256
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call272 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call101, i32 10) #8, !dbg !3965
  call void @llvm.dbg.value(metadata %union.tree_node* %call272, metadata !3717, metadata !DIExpression()), !dbg !3754
  br label %for.cond273, !dbg !3965

for.cond273:                                      ; preds = %if.end288, %for.end271
  %op.1 = phi %union.tree_node* [ %call272, %for.end271 ], [ %call293, %if.end288 ], !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1, metadata !3717, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call274 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3968
  %tobool275 = icmp eq i8 %call274, 0, !dbg !3968
  br i1 %tobool275, label %for.body278, label %cleanup295.loopexit, !dbg !3965

for.body278:                                      ; preds = %for.cond273
  %def_stmt280 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3970
  %59 = bitcast %union.tree_node** %def_stmt280 to %union.gimple_statement_d**, !dbg !3970
  %60 = load %union.gimple_statement_d*, %union.gimple_statement_d** %59, align 8, !dbg !3970
  %cmp281 = icmp eq %union.gimple_statement_d* %60, %call101, !dbg !3973
  br i1 %cmp281, label %if.end288, label %if.then283, !dbg !3974

if.then283:                                       ; preds = %for.body278
  %.lcssa16 = phi %union.gimple_statement_d** [ %59, %for.body278 ], !dbg !3970
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1, metadata !3717, metadata !DIExpression()), !dbg !3754
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3975
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3977
  %call284 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3978
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3979
  call void @print_gimple_stmt(%struct._IO_FILE* %62, %union.gimple_statement_d* %call101, i32 4, i32 64) #6, !dbg !3980
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3981
  %call285 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3982
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3983
  %65 = load %union.gimple_statement_d*, %union.gimple_statement_d** %.lcssa16, align 8, !dbg !3984
  call void @print_gimple_stmt(%struct._IO_FILE* %64, %union.gimple_statement_d* %65, i32 4, i32 64) #6, !dbg !3985
  br label %cleanup295, !dbg !3986

if.end288:                                        ; preds = %for.body278
  %version290 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3987
  %66 = bitcast %union.tree_node** %version290 to i32*, !dbg !3987
  %67 = load i32, i32* %66, align 8, !dbg !3987
  %call291 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call6, i32 %67) #6, !dbg !3988
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3716, metadata !DIExpression(DW_OP_deref)), !dbg !3754
  %call293 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !3968
  call void @llvm.dbg.value(metadata %union.tree_node* %call293, metadata !3717, metadata !DIExpression()), !dbg !3754
  br label %for.cond273, !dbg !3968, !llvm.loop !3989

cleanup295.loopexit:                              ; preds = %for.cond273
  br label %cleanup295

cleanup295.loopexit11:                            ; preds = %for.body261
  br label %cleanup295

cleanup295:                                       ; preds = %cleanup295.loopexit11, %cleanup295.loopexit, %land.lhs.true188, %cleanup, %if.then283, %if.then250, %if.then239, %if.then107
  %cleanup.dest.slot.1 = phi i32 [ 13, %if.then107 ], [ %cleanup.dest.slot.0, %cleanup ], [ 13, %if.then239 ], [ 13, %if.then250 ], [ 13, %if.then283 ], [ 19, %land.lhs.true188 ], [ 0, %cleanup295.loopexit ], [ 13, %cleanup295.loopexit11 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup302.loopexit [
    i32 0, label %for.inc300
    i32 19, label %for.inc300
  ]

for.inc300:                                       ; preds = %cleanup295, %cleanup295
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3792
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3991
  br label %for.cond94, !dbg !3992, !llvm.loop !3993

for.end301:                                       ; preds = %for.cond94
  call void @bitmap_clear(%struct.bitmap_head_def* %call6) #6, !dbg !3995
  br label %cleanup302, !dbg !3996

cleanup302.loopexit:                              ; preds = %cleanup295
  %cleanup.dest.slot.1.lcssa = phi i32 [ %cleanup.dest.slot.1, %cleanup295 ]
  br label %cleanup302, !dbg !3996

cleanup302.loopexit12:                            ; preds = %for.body82
  br label %cleanup302, !dbg !3996

cleanup302:                                       ; preds = %cleanup302.loopexit12, %cleanup302.loopexit, %if.then71, %for.end301
  %cleanup.dest.slot.2 = phi i32 [ 13, %if.then71 ], [ 0, %for.end301 ], [ %cleanup.dest.slot.1.lcssa, %cleanup302.loopexit ], [ 13, %cleanup302.loopexit12 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7, !dbg !3996
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7, !dbg !3996
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7, !dbg !3996
  switch i32 %cleanup.dest.slot.2, label %cleanup322.loopexit [
    i32 0, label %for.inc308
    i32 13, label %err
  ]

for.inc308:                                       ; preds = %cleanup302
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3802
  %cfg61.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3997
  %.pre14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg61.phi.trans.insert, align 8, !dbg !3802
  br label %for.cond59, !dbg !3802, !llvm.loop !3998

for.end310:                                       ; preds = %for.cond59
  call void @free(i8* %call4) #6, !dbg !4000
  %cmp311 = icmp eq i32 %call5, 0, !dbg !4001
  br i1 %cmp311, label %if.then313, label %if.else314, !dbg !4003

if.then313:                                       ; preds = %for.end310
  call void @free_dominance_info(i32 1) #6, !dbg !4004
  br label %if.end315, !dbg !4004

if.else314:                                       ; preds = %for.end310
  call void @set_dom_info_availability(i32 1, i32 %call5) #6, !dbg !4005
  br label %if.end315

if.end315:                                        ; preds = %if.else314, %if.then313
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call6) #6, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3719, metadata !DIExpression()), !dbg !3754
  %68 = load i8, i8* @timevar_enable, align 1, !dbg !4007
  %tobool317 = icmp eq i8 %68, 0, !dbg !4007
  br i1 %tobool317, label %cleanup322, label %if.then318, !dbg !4010

if.then318:                                       ; preds = %if.end315
  call void @timevar_pop_1(i32 107) #6, !dbg !4007
  br label %cleanup322, !dbg !4007

err:                                              ; preds = %cleanup302
  call void @llvm.dbg.label(metadata !3753), !dbg !4011
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4012
  br label %cleanup322, !dbg !4013

cleanup322.loopexit:                              ; preds = %cleanup302
  br label %cleanup322, !dbg !4013

cleanup322:                                       ; preds = %cleanup322.loopexit, %if.end315, %if.then318, %err
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #7, !dbg !4013
  ret void, !dbg !4013
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4014 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4018, metadata !DIExpression()), !dbg !4019
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4020
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4020

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4020
  %0 = load i32, i32* %num, align 8, !dbg !4020
  br label %cond.end, !dbg !4020

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4020
  ret i32 %cond, !dbg !4020
}

declare dso_local i32 @dom_info_state(i32) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local zeroext i8 @need_ssa_update_p(%struct.function*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @verify_stmts() local_unnamed_addr #2

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4021 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4023, metadata !DIExpression()), !dbg !4024
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !4025
  %cmp = icmp eq i32 %call, 18, !dbg !4026
  %conv1 = zext i1 %cmp to i8, !dbg !4025
  ret i8 %conv1, !dbg !4027
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_def(%struct.basic_block_def* %bb, %struct.basic_block_def** %definition_block, %union.tree_node* %ssa_name, %union.gimple_statement_d* %stmt, i8 zeroext %is_virtual) unnamed_addr #5 !dbg !4028 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4032, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %definition_block, metadata !4033, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_name, metadata !4034, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4035, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata i8 %is_virtual, metadata !4036, metadata !DIExpression()), !dbg !4038
  %call = tail call fastcc zeroext i8 @verify_ssa_name(%union.tree_node* %ssa_name, i8 zeroext %is_virtual) #8, !dbg !4039
  %tobool = icmp eq i8 %call, 0, !dbg !4039
  br i1 %tobool, label %if.end, label %err, !dbg !4041

if.end:                                           ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4042
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !4042
  %1 = load i32, i32* %0, align 8, !dbg !4042
  %idxprom = zext i32 %1 to i64, !dbg !4044
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %definition_block, i64 %idxprom, !dbg !4044
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4044
  %tobool2 = icmp eq %struct.basic_block_def* %2, null, !dbg !4044
  br i1 %tobool2, label %if.end9, label %if.then3, !dbg !4045

if.then3:                                         ; preds = %if.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !4046
  %3 = load i32, i32* %index, align 8, !dbg !4046
  %index8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4048
  %4 = load i32, i32* %index8, align 8, !dbg !4048
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i64 0, i64 0), i32 %3, i32 %4) #6, !dbg !4049
  br label %err, !dbg !4050

if.end9:                                          ; preds = %if.end
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %arrayidx, align 8, !dbg !4051
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4052
  %5 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4052
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %5, align 8, !dbg !4052
  %cmp = icmp eq %union.gimple_statement_d* %6, %stmt, !dbg !4054
  br i1 %cmp, label %return, label %if.then15, !dbg !4055

if.then15:                                        ; preds = %if.end9
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4056
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4058
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4059
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4060
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %5, align 8, !dbg !4061
  tail call void @print_gimple_stmt(%struct._IO_FILE* %8, %union.gimple_statement_d* %9, i32 4, i32 64) #6, !dbg !4062
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4063
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4064
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4065
  tail call void @print_gimple_stmt(%struct._IO_FILE* %11, %union.gimple_statement_d* %stmt, i32 4, i32 64) #6, !dbg !4066
  br label %err, !dbg !4067

err:                                              ; preds = %entry, %if.then15, %if.then3
  call void @llvm.dbg.label(metadata !4037), !dbg !4068
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4069
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4070
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4071
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %ssa_name, i32 0) #6, !dbg !4072
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4073
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4074
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4075
  tail call void @print_gimple_stmt(%struct._IO_FILE* %15, %union.gimple_statement_d* %stmt, i32 4, i32 64) #6, !dbg !4076
  br label %return, !dbg !4077

return:                                           ; preds = %if.end9, %err
  %retval.0 = phi i8 [ 1, %err ], [ 0, %if.end9 ], !dbg !4038
  ret i8 %retval.0, !dbg !4078
}

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4079 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4083, metadata !DIExpression()), !dbg !4085
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4086
  store i32 0, i32* %index, align 8, !dbg !4087
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4088
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4089
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4090
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4090
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4090
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !4091 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !4097, metadata !DIExpression()), !dbg !4098
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !4099
  %tobool = icmp eq i8 %call, 0, !dbg !4099
  br i1 %tobool, label %if.then, label %if.else, !dbg !4101

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !4102
  br label %return, !dbg !4104

if.else:                                          ; preds = %entry
  br label %return, !dbg !4105

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !4107
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !4107
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !4107
  ret i8 %retval.0, !dbg !4108
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4109 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4114, metadata !DIExpression()), !dbg !4115
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4116
  %0 = load i32, i32* %index, align 8, !dbg !4116
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4116
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4116
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !4116
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4116
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4116

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4116
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4116
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !4116
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4116
  br label %cond.end, !dbg !4116

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4116
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4116
  %cmp = icmp ult i32 %0, %call2, !dbg !4116
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4116

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4116
  br label %cond.end5, !dbg !4116

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4117
  %inc = add i32 %5, 1, !dbg !4117
  store i32 %inc, i32* %index, align 8, !dbg !4117
  ret void, !dbg !4118
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_phi_args(%union.gimple_statement_d* %phi, %struct.basic_block_def* %bb, %struct.basic_block_def** %definition_block) unnamed_addr #5 !dbg !4119 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !4123, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4124, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %definition_block, metadata !4125, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata i8 0, metadata !4127, metadata !DIExpression()), !dbg !4139
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !4140
  %conv = zext i32 %call to i64, !dbg !4140
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4129, metadata !DIExpression()), !dbg !4139
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4141
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4141
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4141
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4141

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4141
  br label %cond.end, !dbg !4141

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4141
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4141
  %cmp = icmp eq i32 %call2, %call, !dbg !4143
  br i1 %cmp, label %for.cond.preheader, label %if.then, !dbg !4144

for.cond.preheader:                               ; preds = %cond.end
  br label %for.cond, !dbg !4145

if.then:                                          ; preds = %cond.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4146
  call void @llvm.dbg.value(metadata i8 1, metadata !4127, metadata !DIExpression()), !dbg !4139
  br label %error, !dbg !4148

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %err.0 = phi i8 [ %err.6, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4139
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4149
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4128, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata i8 %err.0, metadata !4127, metadata !DIExpression()), !dbg !4139
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !4150
  br i1 %exitcond, label %error.loopexit, label %for.body, !dbg !4145

for.body:                                         ; preds = %for.cond
  %conv7 = trunc i64 %i.0 to i32, !dbg !4151
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %conv7) #8, !dbg !4152
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call8, metadata !4130, metadata !DIExpression()), !dbg !4153
  %call9 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #8, !dbg !4154
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !4134, metadata !DIExpression()), !dbg !4153
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4155
  %tobool11 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !4155
  br i1 %tobool11, label %cond.end16, label %cond.true12, !dbg !4155

cond.true12:                                      ; preds = %for.body
  %base14 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4155
  br label %cond.end16, !dbg !4155

cond.end16:                                       ; preds = %for.body, %cond.true12
  %cond17 = phi %struct.VEC_edge_base* [ %base14, %cond.true12 ], [ null, %for.body ], !dbg !4155
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond17, i32 %conv7) #8, !dbg !4155
  call void @llvm.dbg.value(metadata %struct.edge_def* %call19, metadata !4126, metadata !DIExpression()), !dbg !4139
  %cmp20 = icmp eq %union.tree_node* %call9, null, !dbg !4156
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4158

if.then22:                                        ; preds = %cond.end16
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 0, !dbg !4159
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4159
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !4161
  %3 = load i32, i32* %index, align 8, !dbg !4161
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 1, !dbg !4162
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4162
  %index23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !4163
  %5 = load i32, i32* %index23, align 8, !dbg !4163
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0), i32 %3, i32 %5) #6, !dbg !4164
  call void @llvm.dbg.value(metadata i8 1, metadata !4127, metadata !DIExpression()), !dbg !4139
  br label %cleanup, !dbg !4165

if.end24:                                         ; preds = %cond.end16
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4166
  %bf.load = load i64, i64* %6, align 8, !dbg !4166
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4168
  %cmp26 = icmp eq i64 %bf.cast2, 141, !dbg !4168
  br i1 %cmp26, label %if.end31, label %land.lhs.true, !dbg !4169

land.lhs.true:                                    ; preds = %if.end24
  %call28 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call9) #6, !dbg !4170
  %tobool29 = icmp eq i8 %call28, 0, !dbg !4170
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !4171

if.then30:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4172
  call void @llvm.dbg.value(metadata i8 1, metadata !4127, metadata !DIExpression()), !dbg !4139
  br label %if.end31, !dbg !4174

if.end31:                                         ; preds = %land.lhs.true, %if.end24, %if.then30
  %err.1 = phi i8 [ %err.0, %land.lhs.true ], [ 1, %if.then30 ], [ %err.0, %if.end24 ], !dbg !4139
  call void @llvm.dbg.value(metadata i8 %err.1, metadata !4127, metadata !DIExpression()), !dbg !4139
  %bf.load33 = load i64, i64* %6, align 8, !dbg !4175
  %bf.cast353 = and i64 %bf.load33, 65535, !dbg !4177
  %cmp36 = icmp eq i64 %bf.cast353, 141, !dbg !4177
  br i1 %cmp36, label %if.then38, label %if.end50, !dbg !4178

if.then38:                                        ; preds = %if.end31
  %call39 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !4179
  %call40 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call39) #6, !dbg !4181
  %tobool41 = icmp eq i8 %call40, 0, !dbg !4182
  %conv42 = zext i1 %tobool41 to i8, !dbg !4182
  %call43 = tail call fastcc zeroext i8 @verify_ssa_name(%union.tree_node* nonnull %call9, i8 zeroext %conv42) #8, !dbg !4183
  call void @llvm.dbg.value(metadata i8 %call43, metadata !4127, metadata !DIExpression()), !dbg !4139
  %src44 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 0, !dbg !4184
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %src44, align 8, !dbg !4184
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4185
  %8 = bitcast %union.tree_node** %version to i32*, !dbg !4185
  %9 = load i32, i32* %8, align 8, !dbg !4185
  %idxprom = zext i32 %9 to i64, !dbg !4186
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %definition_block, i64 %idxprom, !dbg !4186
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4186
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 7, !dbg !4187
  %11 = load i32, i32* %flags, align 8, !dbg !4187
  %12 = trunc i32 %11 to i8, !dbg !4188
  %conv45 = and i8 %12, 2, !dbg !4188
  %call46 = tail call fastcc zeroext i8 @verify_use(%struct.basic_block_def* %7, %struct.basic_block_def* %10, %struct.ssa_use_operand_d* %call8, %union.gimple_statement_d* %phi, i8 zeroext %conv45, %struct.bitmap_head_def* null) #8, !dbg !4189
  %or9 = or i8 %call43, %call46, !dbg !4190
  call void @llvm.dbg.value(metadata i8 %or9, metadata !4127, metadata !DIExpression()), !dbg !4139
  %bf.load52.pre = load i64, i64* %6, align 8, !dbg !4191
  br label %if.end50, !dbg !4192

if.end50:                                         ; preds = %if.then38, %if.end31
  %bf.load52 = phi i64 [ %bf.load52.pre, %if.then38 ], [ %bf.load33, %if.end31 ], !dbg !4191
  %err.2 = phi i8 [ %or9, %if.then38 ], [ %err.1, %if.end31 ], !dbg !4139
  call void @llvm.dbg.value(metadata i8 %err.2, metadata !4127, metadata !DIExpression()), !dbg !4139
  %bf.cast544 = and i64 %bf.load52, 65535, !dbg !4193
  %cmp55 = icmp eq i64 %bf.cast544, 121, !dbg !4193
  br i1 %cmp55, label %if.then57, label %if.end92, !dbg !4194

if.then57:                                        ; preds = %if.end50
  br label %while.cond, !dbg !4195

while.cond:                                       ; preds = %while.body, %if.then57
  %call9.pn = phi %union.tree_node* [ %call9, %if.then57 ], [ %base58.0, %while.body ]
  %base58.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %call9.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4196
  %base58.0 = load %union.tree_node*, %union.tree_node** %base58.0.in, align 8, !dbg !4196
  call void @llvm.dbg.value(metadata %union.tree_node* %base58.0, metadata !4135, metadata !DIExpression()), !dbg !4196
  %call60 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %base58.0) #8, !dbg !4197
  %tobool61 = icmp eq i8 %call60, 0, !dbg !4195
  br i1 %tobool61, label %while.end, label %while.body, !dbg !4195

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !4195, !llvm.loop !4198

while.end:                                        ; preds = %while.cond
  %base58.0.lcssa = phi %union.tree_node* [ %base58.0, %while.cond ], !dbg !4196
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %base58.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4200
  %bf.load66 = load i64, i64* %13, align 8, !dbg !4200
  %bf.cast685 = and i64 %bf.load66, 65535, !dbg !4202
  %cmp69 = icmp eq i64 %bf.cast685, 32, !dbg !4202
  br i1 %cmp69, label %land.lhs.true84, label %lor.lhs.false, !dbg !4203

lor.lhs.false:                                    ; preds = %while.end
  %cmp75 = icmp eq i64 %bf.cast685, 34, !dbg !4204
  br i1 %cmp75, label %land.lhs.true84, label %lor.lhs.false77, !dbg !4205

lor.lhs.false77:                                  ; preds = %lor.lhs.false
  %cmp82 = icmp eq i64 %bf.cast685, 36, !dbg !4206
  br i1 %cmp82, label %land.lhs.true84, label %if.end92, !dbg !4207

land.lhs.true84:                                  ; preds = %lor.lhs.false77, %lor.lhs.false, %while.end
  %bf.cast888 = and i64 %bf.load66, 262144, !dbg !4208
  %tobool89 = icmp eq i64 %bf.cast888, 0, !dbg !4208
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !4209

if.then90:                                        ; preds = %land.lhs.true84
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4210
  call void @llvm.dbg.value(metadata i8 1, metadata !4127, metadata !DIExpression()), !dbg !4139
  br label %if.end92, !dbg !4212

if.end92:                                         ; preds = %land.lhs.true84, %lor.lhs.false77, %if.then90, %if.end50
  %err.4 = phi i8 [ %err.2, %if.end50 ], [ %err.2, %land.lhs.true84 ], [ 1, %if.then90 ], [ %err.2, %lor.lhs.false77 ], !dbg !4190
  call void @llvm.dbg.value(metadata i8 %err.4, metadata !4127, metadata !DIExpression()), !dbg !4139
  %dest93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 1, !dbg !4213
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest93, align 8, !dbg !4213
  %cmp94 = icmp eq %struct.basic_block_def* %14, %bb, !dbg !4215
  br i1 %cmp94, label %if.end101, label %if.then96, !dbg !4216

if.then96:                                        ; preds = %if.end92
  %src97 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 0, !dbg !4217
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %src97, align 8, !dbg !4217
  %index98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !4219
  %16 = load i32, i32* %index98, align 8, !dbg !4219
  %index100 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 9, !dbg !4220
  %17 = load i32, i32* %index100, align 8, !dbg !4220
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i64 0, i64 0), i32 %16, i32 %17) #6, !dbg !4221
  call void @llvm.dbg.value(metadata i8 1, metadata !4127, metadata !DIExpression()), !dbg !4139
  br label %if.end101, !dbg !4222

if.end101:                                        ; preds = %if.end92, %if.then96
  %err.5 = phi i8 [ 1, %if.then96 ], [ %err.4, %if.end92 ], !dbg !4153
  call void @llvm.dbg.value(metadata i8 %err.5, metadata !4127, metadata !DIExpression()), !dbg !4139
  %tobool102 = icmp eq i8 %err.5, 0, !dbg !4223
  br i1 %tobool102, label %cleanup, label %if.then103, !dbg !4225

if.then103:                                       ; preds = %if.end101
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4226
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4228
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4229
  tail call void @print_generic_stmt(%struct._IO_FILE* %19, %union.tree_node* nonnull %call9, i32 64) #6, !dbg !4230
  br label %cleanup, !dbg !4231

cleanup:                                          ; preds = %if.end101, %if.then103, %if.then22
  %err.6 = phi i8 [ 1, %if.then22 ], [ %err.5, %if.then103 ], [ 0, %if.end101 ], !dbg !4153
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then22 ], [ false, %if.then103 ], [ true, %if.end101 ]
  call void @llvm.dbg.value(metadata i8 %err.6, metadata !4127, metadata !DIExpression()), !dbg !4139
  br i1 %cleanup.dest.slot.0, label %for.inc, label %error.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i64 %i.0, 1, !dbg !4232
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4128, metadata !DIExpression()), !dbg !4139
  br label %for.cond, !dbg !4233, !llvm.loop !4234

error.loopexit:                                   ; preds = %for.cond, %cleanup
  %err.7.ph = phi i8 [ %err.0, %for.cond ], [ %err.6, %cleanup ]
  br label %error, !dbg !4236

error:                                            ; preds = %error.loopexit, %if.then
  %err.7 = phi i8 [ 1, %if.then ], [ %err.7.ph, %error.loopexit ], !dbg !4139
  call void @llvm.dbg.value(metadata i8 %err.7, metadata !4127, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.label(metadata !4138), !dbg !4238
  %tobool107 = icmp eq i8 %err.7, 0, !dbg !4236
  br i1 %tobool107, label %cleanup111, label %if.then108, !dbg !4239

if.then108:                                       ; preds = %error
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4240
  %call109 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4242
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4243
  tail call void @print_gimple_stmt(%struct._IO_FILE* %21, %union.gimple_statement_d* %phi, i32 0, i32 16448) #6, !dbg !4244
  br label %cleanup111, !dbg !4245

cleanup111:                                       ; preds = %error, %if.then108
  ret i8 %err.7, !dbg !4246
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4247 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4251, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4252, metadata !DIExpression()), !dbg !4255
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !4256
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4253, metadata !DIExpression()), !dbg !4254
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !4257
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4258
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4259
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4260
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4261
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4262
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4263
  ret void, !dbg !4264
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4265 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4267, metadata !DIExpression()), !dbg !4268
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !4269
  %tobool = icmp eq i8 %call, 0, !dbg !4270
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4270

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4271
  %bf.load = load i32, i32* %0, align 8, !dbg !4271
  %bf.lshr = lshr i32 %bf.load, 13, !dbg !4271
  %1 = trunc i32 %bf.lshr to i8, !dbg !4272
  %conv1 = and i8 %1, 1, !dbg !4272
  br label %cond.end, !dbg !4270

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8 [ %conv1, %cond.true ], [ 0, %entry ]
  ret i8 %cond, !dbg !4273
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4274 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4276, metadata !DIExpression()), !dbg !4277
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4278
  ret %union.tree_node* %call, !dbg !4279
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4280 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4282, metadata !DIExpression()), !dbg !4283
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4284
  %tobool = icmp eq i8 %call, 0, !dbg !4284
  br i1 %tobool, label %return, label %if.end, !dbg !4286

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !4287
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !4287
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4287
  br label %return, !dbg !4288

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4283
  ret %union.tree_node* %retval.0, !dbg !4289
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_has_value_p(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !4290 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !4294, metadata !DIExpression()), !dbg !4295
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 1) #8, !dbg !4296
  %cmp = icmp ne %union.tree_node* %call, null, !dbg !4297
  %conv1 = zext i1 %cmp to i8, !dbg !4296
  ret i8 %conv1, !dbg !4298
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_vdef_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4299 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4303, metadata !DIExpression()), !dbg !4305
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4306
  %tobool = icmp eq i8 %call, 0, !dbg !4306
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4308

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !4309
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !4309
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.def_optype_d* %1, metadata !4304, metadata !DIExpression()), !dbg !4305
  %tobool1 = icmp eq %struct.def_optype_d* %1, null, !dbg !4310
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !4312

land.lhs.true:                                    ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %1, i64 0, i32 1, !dbg !4313
  %2 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !4313
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !4314
  %3 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !4314
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !4315
  br i1 %cmp, label %if.then2, label %cleanup, !dbg !4316

if.then2:                                         ; preds = %land.lhs.true
  br label %cleanup, !dbg !4317

cleanup:                                          ; preds = %if.end, %entry, %land.lhs.true, %if.then2
  %retval.0 = phi %union.tree_node** [ %2, %if.then2 ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.end ], !dbg !4305
  ret %union.tree_node** %retval.0, !dbg !4318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4319 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4321, metadata !DIExpression()), !dbg !4322
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4323
  %tobool = icmp eq i8 %call, 0, !dbg !4323
  br i1 %tobool, label %return, label %if.end, !dbg !4325

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4326
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4326
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4326
  br label %return, !dbg !4327

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4322
  ret %union.tree_node* %retval.0, !dbg !4328
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_ssa_name(%union.tree_node* %ssa_name, i8 zeroext %is_virtual) unnamed_addr #5 !dbg !4329 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_name, metadata !4333, metadata !DIExpression()), !dbg !4335
  call void @llvm.dbg.value(metadata i8 %is_virtual, metadata !4334, metadata !DIExpression()), !dbg !4335
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4336
  %bf.load = load i64, i64* %0, align 8, !dbg !4336
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4338
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4338
  br i1 %cmp, label %if.end, label %if.then, !dbg !4339

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4340
  br label %return, !dbg !4342

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4343
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4343
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4345
  %2 = bitcast i32* %var to %struct.tree_common**, !dbg !4345
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !4345
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !4345
  %4 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !4345
  %cmp4 = icmp eq %union.tree_node* %1, %4, !dbg !4346
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !4347

if.then5:                                         ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !4348
  br label %return, !dbg !4350

if.end6:                                          ; preds = %if.end
  %bf.cast102 = and i64 %bf.load, 33554432, !dbg !4351
  %tobool = icmp eq i64 %bf.cast102, 0, !dbg !4351
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !4353

if.then11:                                        ; preds = %if.end6
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4354
  br label %return, !dbg !4356

if.end12:                                         ; preds = %if.end6
  %tobool13 = icmp eq i8 %is_virtual, 0, !dbg !4357
  br i1 %tobool13, label %if.end17, label %land.lhs.true, !dbg !4359

land.lhs.true:                                    ; preds = %if.end12
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %ssa_name) #6, !dbg !4360
  %tobool15 = icmp eq i8 %call, 0, !dbg !4360
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4361

if.then16:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4362
  br label %return, !dbg !4364

if.end17:                                         ; preds = %land.lhs.true, %if.end12
  br i1 %tobool13, label %if.end27, label %land.lhs.true20, !dbg !4365

land.lhs.true20:                                  ; preds = %if.end17
  %5 = bitcast i32* %var to %union.tree_node**, !dbg !4367
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4367
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4368
  %call23 = tail call fastcc %union.tree_node* @gimple_vop(%struct.function* %7) #8, !dbg !4369
  %cmp24 = icmp eq %union.tree_node* %6, %call23, !dbg !4370
  br i1 %cmp24, label %if.end27, label %if.then26, !dbg !4371

if.then26:                                        ; preds = %land.lhs.true20
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !4372
  br label %return, !dbg !4374

if.end27:                                         ; preds = %land.lhs.true20, %if.end17
  br i1 %tobool13, label %land.lhs.true29, label %if.end33, !dbg !4375

land.lhs.true29:                                  ; preds = %if.end27
  %call30 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %ssa_name) #6, !dbg !4377
  %tobool31 = icmp eq i8 %call30, 0, !dbg !4377
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !4378

if.then32:                                        ; preds = %land.lhs.true29
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !4379
  br label %return, !dbg !4381

if.end33:                                         ; preds = %land.lhs.true29, %if.end27
  %bf.load35 = load i64, i64* %0, align 8, !dbg !4382
  %bf.cast383 = and i64 %bf.load35, 4294967296, !dbg !4382
  %tobool39 = icmp eq i64 %bf.cast383, 0, !dbg !4382
  br i1 %tobool39, label %return, label %land.lhs.true40, !dbg !4384

land.lhs.true40:                                  ; preds = %if.end33
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4385
  %8 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4385
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %8, align 8, !dbg !4385
  %call42 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %9) #8, !dbg !4386
  %tobool43 = icmp eq i8 %call42, 0, !dbg !4386
  br i1 %tobool43, label %if.then44, label %return, !dbg !4387

if.then44:                                        ; preds = %land.lhs.true40
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !4388
  br label %return, !dbg !4390

return:                                           ; preds = %land.lhs.true40, %if.end33, %if.then44, %if.then32, %if.then26, %if.then16, %if.then11, %if.then5, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 1, %if.then5 ], [ 1, %if.then11 ], [ 1, %if.then16 ], [ 1, %if.then26 ], [ 1, %if.then44 ], [ 1, %if.then32 ], [ 0, %land.lhs.true40 ], [ 0, %if.end33 ], !dbg !4335
  ret i8 %retval.0, !dbg !4391
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4392 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4396, metadata !DIExpression()), !dbg !4398
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4399
  %tobool = icmp eq i8 %call, 0, !dbg !4399
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4401

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !4402
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !4402
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !4402
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !4397, metadata !DIExpression()), !dbg !4398
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !4403
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !4405

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !4406
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !4406
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4407
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4407
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !4408
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !4409
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !4410
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !4410

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !4411
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4412 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4416, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4417, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4418, metadata !DIExpression()), !dbg !4419
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #8, !dbg !4420
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !4421
  store i32 1, i32* %iter_type, align 4, !dbg !4422
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !4423
  ret %union.tree_node* %call, !dbg !4424
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !4425 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4429, metadata !DIExpression()), !dbg !4431
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !4432
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !4432
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !4434
  br i1 %tobool, label %if.end, label %if.then, !dbg !4435

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !4436
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #8, !dbg !4436
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4430, metadata !DIExpression()), !dbg !4431
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !4438
  %2 = load i64*, i64** %1, align 8, !dbg !4438
  %3 = load i64, i64* %2, align 8, !dbg !4439
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !4440
  store i64 %3, i64* %4, align 8, !dbg !4440
  br label %cleanup, !dbg !4441

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !4442
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !4442
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !4444
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !4445

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !4446
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !4446
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #8, !dbg !4446
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4430, metadata !DIExpression()), !dbg !4431
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !4448
  %8 = load i64*, i64** %7, align 8, !dbg !4448
  %9 = load i64, i64* %8, align 8, !dbg !4449
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !4450
  store i64 %9, i64* %10, align 8, !dbg !4450
  br label %cleanup, !dbg !4451

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4452
  store i8 1, i8* %done, align 8, !dbg !4453
  br label %cleanup, !dbg !4454

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !4431
  ret %union.tree_node* %retval.0, !dbg !4455
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4456 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4460, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4461, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4462, metadata !DIExpression()), !dbg !4463
  %0 = and i32 %flags, 11, !dbg !4464
  %1 = icmp eq i32 %0, 1, !dbg !4464
  br i1 %1, label %cond.end, label %cond.true, !dbg !4464

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4464
  br label %cond.end, !dbg !4464

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #8, !dbg !4465
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !4466
  store i32 2, i32* %iter_type, align 4, !dbg !4467
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !4468
  ret %struct.ssa_use_operand_d* %call, !dbg !4469
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4470 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4474, metadata !DIExpression()), !dbg !4475
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4476
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4476
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4477
  ret %union.tree_node* %1, !dbg !4478
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_use(%struct.basic_block_def* %bb, %struct.basic_block_def* %def_bb, %struct.ssa_use_operand_d* %use_p, %union.gimple_statement_d* %stmt, i8 zeroext %check_abnormal, %struct.bitmap_head_def* %names_defined_in_bb) unnamed_addr #5 !dbg !4479 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4483, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %def_bb, metadata !4484, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !4485, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4486, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8 %check_abnormal, metadata !4487, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %names_defined_in_bb, metadata !4488, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8 0, metadata !4489, metadata !DIExpression()), !dbg !4494
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p) #8, !dbg !4495
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4490, metadata !DIExpression()), !dbg !4494
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4496
  %bf.load = load i64, i64* %0, align 8, !dbg !4496
  %bf.cast1 = and i64 %bf.load, 1099511627776, !dbg !4496
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4496
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4498

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4499
  %call1 = tail call zeroext i8 @verify_imm_links(%struct._IO_FILE* %1, %union.tree_node* %call) #6, !dbg !4501
  %tobool2 = icmp ne i8 %call1, 0, !dbg !4501
  %spec.select = zext i1 %tobool2 to i8, !dbg !4502
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !4489, metadata !DIExpression()), !dbg !4494
  %bf.load6.pre = load i64, i64* %0, align 8, !dbg !4503
  br label %if.end4, !dbg !4504

if.end4:                                          ; preds = %entry, %if.then
  %bf.load6 = phi i64 [ %bf.load, %entry ], [ %bf.load6.pre, %if.then ], !dbg !4503
  %err.1 = phi i8 [ 0, %entry ], [ %spec.select, %if.then ], !dbg !4494
  call void @llvm.dbg.value(metadata i8 %err.1, metadata !4489, metadata !DIExpression()), !dbg !4494
  %bf.set = or i64 %bf.load6, 1099511627776, !dbg !4503
  store i64 %bf.set, i64* %0, align 8, !dbg !4503
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4505
  %2 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4505
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !4505
  %call9 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %3) #8, !dbg !4507
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4507
  br i1 %tobool10, label %if.else, label %land.lhs.true, !dbg !4508

land.lhs.true:                                    ; preds = %if.end4
  %bf.load12 = load i64, i64* %0, align 8, !dbg !4509
  %bf.cast153 = and i64 %bf.load12, 4294967296, !dbg !4509
  %tobool16 = icmp eq i64 %bf.cast153, 0, !dbg !4509
  br i1 %tobool16, label %if.else, label %if.end42, !dbg !4510

if.else:                                          ; preds = %land.lhs.true, %if.end4
  %tobool18 = icmp eq %struct.basic_block_def* %def_bb, null, !dbg !4511
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !4513

if.then19:                                        ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !4514
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end42, !dbg !4516

if.else20:                                        ; preds = %if.else
  %cmp = icmp eq %struct.basic_block_def* %bb, %def_bb, !dbg !4517
  br i1 %cmp, label %if.else27, label %land.lhs.true22, !dbg !4519

land.lhs.true22:                                  ; preds = %if.else20
  %call23 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %bb, %struct.basic_block_def* nonnull %def_bb) #6, !dbg !4520
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4520
  br i1 %tobool24, label %if.then25, label %if.else27, !dbg !4521

if.then25:                                        ; preds = %land.lhs.true22
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %def_bb, i64 0, i32 9, !dbg !4522
  %4 = load i32, i32* %index, align 8, !dbg !4522
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4524
  %5 = load i32, i32* %index26, align 8, !dbg !4524
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.41, i64 0, i64 0), i32 %4, i32 %5) #6, !dbg !4525
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end42, !dbg !4526

if.else27:                                        ; preds = %land.lhs.true22, %if.else20
  %cmp31 = icmp ne %struct.bitmap_head_def* %names_defined_in_bb, null, !dbg !4527
  %or.cond = and i1 %cmp, %cmp31, !dbg !4529
  br i1 %or.cond, label %land.lhs.true33, label %if.end42, !dbg !4529

land.lhs.true33:                                  ; preds = %if.else27
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4530
  %6 = bitcast %union.tree_node** %version to i32*, !dbg !4530
  %7 = load i32, i32* %6, align 8, !dbg !4530
  %call35 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %names_defined_in_bb, i32 %7) #6, !dbg !4531
  %tobool36 = icmp eq i32 %call35, 0, !dbg !4531
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !4532

if.then37:                                        ; preds = %land.lhs.true33
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %def_bb, i64 0, i32 9, !dbg !4533
  %8 = load i32, i32* %index38, align 8, !dbg !4533
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42, i64 0, i64 0), i32 %8) #6, !dbg !4535
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end42, !dbg !4536

if.end42:                                         ; preds = %land.lhs.true, %land.lhs.true33, %if.then19, %if.else27, %if.then37, %if.then25
  %err.5 = phi i8 [ %err.1, %land.lhs.true ], [ 1, %if.then19 ], [ 1, %if.then25 ], [ %err.1, %land.lhs.true33 ], [ 1, %if.then37 ], [ %err.1, %if.else27 ], !dbg !4537
  call void @llvm.dbg.value(metadata i8 %err.5, metadata !4489, metadata !DIExpression()), !dbg !4494
  %tobool44 = icmp eq i8 %check_abnormal, 0, !dbg !4538
  br i1 %tobool44, label %if.end53, label %land.lhs.true45, !dbg !4540

land.lhs.true45:                                  ; preds = %if.end42
  %bf.load47 = load i64, i64* %0, align 8, !dbg !4541
  %bf.cast502 = and i64 %bf.load47, 4194304, !dbg !4541
  %tobool51 = icmp eq i64 %bf.cast502, 0, !dbg !4541
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !4542

if.then52:                                        ; preds = %land.lhs.true45
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !4543
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end53, !dbg !4545

if.end53:                                         ; preds = %land.lhs.true45, %if.end42, %if.then52
  %err.6 = phi i8 [ %err.5, %land.lhs.true45 ], [ 1, %if.then52 ], [ %err.5, %if.end42 ], !dbg !4494
  call void @llvm.dbg.value(metadata i8 %err.6, metadata !4489, metadata !DIExpression()), !dbg !4494
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p, i64 0, i32 0, !dbg !4546
  %9 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4546
  %cmp54 = icmp eq %struct.ssa_use_operand_d* %9, null, !dbg !4547
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !4548

if.then56:                                        ; preds = %if.end53
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !4549
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end72, !dbg !4551

if.else57:                                        ; preds = %if.end53
  %use = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %9, i64 0, i32 3, !dbg !4552
  %10 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !4552
  %cmp59 = icmp eq %union.tree_node** %10, null, !dbg !4554
  br i1 %cmp59, label %if.then61, label %if.else64, !dbg !4555

if.then61:                                        ; preds = %if.else57
  %loc = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %9, i64 0, i32 2, !dbg !4556
  %ssa_name63 = bitcast %union.anon* %loc to %union.tree_node**, !dbg !4557
  %11 = load %union.tree_node*, %union.tree_node** %ssa_name63, align 8, !dbg !4557
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4491, metadata !DIExpression()), !dbg !4558
  br label %if.end67, !dbg !4559

if.else64:                                        ; preds = %if.else57
  %call66 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %9) #8, !dbg !4560
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !4491, metadata !DIExpression()), !dbg !4558
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then61
  %listvar.0 = phi %union.tree_node* [ %11, %if.then61 ], [ %call66, %if.else64 ], !dbg !4561
  call void @llvm.dbg.value(metadata %union.tree_node* %listvar.0, metadata !4491, metadata !DIExpression()), !dbg !4558
  %cmp68 = icmp eq %union.tree_node* %listvar.0, %call, !dbg !4562
  br i1 %cmp68, label %if.end72, label %if.then70, !dbg !4564

if.then70:                                        ; preds = %if.end67
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !4565
  call void @llvm.dbg.value(metadata i8 1, metadata !4489, metadata !DIExpression()), !dbg !4494
  br label %if.end72, !dbg !4567

if.end72:                                         ; preds = %if.end67, %if.then70, %if.then56
  %err.8 = phi i8 [ 1, %if.then56 ], [ 1, %if.then70 ], [ %err.6, %if.end67 ], !dbg !4568
  call void @llvm.dbg.value(metadata i8 %err.8, metadata !4489, metadata !DIExpression()), !dbg !4494
  %tobool73 = icmp eq i8 %err.8, 0, !dbg !4569
  br i1 %tobool73, label %if.end77, label %if.then74, !dbg !4571

if.then74:                                        ; preds = %if.end72
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4572
  %call75 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !4574
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4575
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %call, i32 64) #6, !dbg !4576
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4577
  %call76 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0)) #6, !dbg !4578
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4579
  tail call void @print_gimple_stmt(%struct._IO_FILE* %15, %union.gimple_statement_d* %stmt, i32 0, i32 64) #6, !dbg !4580
  br label %if.end77, !dbg !4581

if.end77:                                         ; preds = %if.end72, %if.then74
  ret i8 %err.8, !dbg !4582
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !4583 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4587, metadata !DIExpression()), !dbg !4589
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !4590
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !4590
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !4592
  br i1 %tobool, label %if.end, label %if.then, !dbg !4593

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !4594
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !4588, metadata !DIExpression()), !dbg !4589
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !4596
  %2 = load i64, i64* %1, align 8, !dbg !4596
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !4597
  store i64 %2, i64* %3, align 8, !dbg !4597
  br label %cleanup, !dbg !4598

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !4599
  %4 = load i32, i32* %phi_i, align 8, !dbg !4599
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !4601
  %5 = load i32, i32* %num_phi, align 4, !dbg !4601
  %cmp = icmp slt i32 %4, %5, !dbg !4602
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !4603

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !4604
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !4604
  %inc = add nsw i32 %4, 1, !dbg !4604
  store i32 %inc, i32* %phi_i, align 8, !dbg !4604
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #8, !dbg !4604
  br label %cleanup, !dbg !4606

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4607
  store i8 1, i8* %done, align 8, !dbg !4608
  br label %cleanup, !dbg !4609

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !4589
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !4610
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @set_dom_info_availability(i32, i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @int_tree_map_eq(i8* %va, i8* %vb) local_unnamed_addr #5 !dbg !4611 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !4613, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4614, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.value(metadata i8* %va, metadata !4615, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4616, metadata !DIExpression()), !dbg !4617
  %uid = bitcast i8* %va to i32*, !dbg !4618
  %0 = load i32, i32* %uid, align 8, !dbg !4618
  %uid1 = bitcast i8* %vb to i32*, !dbg !4619
  %1 = load i32, i32* %uid1, align 8, !dbg !4619
  %cmp = icmp eq i32 %0, %1, !dbg !4620
  %conv = zext i1 %cmp to i32, !dbg !4620
  ret i32 %conv, !dbg !4621
}

; Function Attrs: nounwind uwtable
define dso_local i32 @int_tree_map_hash(i8* %item) local_unnamed_addr #5 !dbg !4622 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !4626, metadata !DIExpression()), !dbg !4627
  %uid = bitcast i8* %item to i32*, !dbg !4628
  %0 = load i32, i32* %uid, align 8, !dbg !4628
  ret i32 %0, !dbg !4629
}

; Function Attrs: nounwind uwtable
define dso_local i32 @uid_decl_map_eq(i8* %va, i8* %vb) #5 !dbg !4630 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4633, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %va, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4635, metadata !DIExpression()), !dbg !4636
  %uid = getelementptr inbounds i8, i8* %va, i64 28, !dbg !4637
  %0 = bitcast i8* %uid to i32*, !dbg !4637
  %1 = load i32, i32* %0, align 4, !dbg !4637
  %uid2 = getelementptr inbounds i8, i8* %vb, i64 28, !dbg !4638
  %2 = bitcast i8* %uid2 to i32*, !dbg !4638
  %3 = load i32, i32* %2, align 4, !dbg !4638
  %cmp = icmp eq i32 %1, %3, !dbg !4639
  %conv = zext i1 %cmp to i32, !dbg !4639
  ret i32 %conv, !dbg !4640
}

; Function Attrs: nounwind uwtable
define dso_local i32 @uid_decl_map_hash(i8* %item) #5 !dbg !4641 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !4643, metadata !DIExpression()), !dbg !4644
  %uid = getelementptr inbounds i8, i8* %item, i64 28, !dbg !4645
  %0 = bitcast i8* %uid to i32*, !dbg !4645
  %1 = load i32, i32* %0, align 4, !dbg !4645
  ret i32 %1, !dbg !4646
}

; Function Attrs: nounwind uwtable
define dso_local void @init_tree_ssa(%struct.function* %fn) local_unnamed_addr #5 !dbg !4647 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4651, metadata !DIExpression()), !dbg !4652
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 144) #6, !dbg !4653
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !4654
  %0 = bitcast %struct.gimple_df** %gimple_df to i8**, !dbg !4655
  store i8* %call, i8** %0, align 8, !dbg !4655
  %call1 = tail call %struct.htab* @htab_create_alloc(i64 20, i32 (i8*)* nonnull @uid_decl_map_hash, i32 (i8*, i8*)* nonnull @uid_decl_map_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !4656
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4657
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 0, !dbg !4658
  store %struct.htab* %call1, %struct.htab** %referenced_vars, align 8, !dbg !4659
  %call3 = tail call %struct.htab* @htab_create_alloc(i64 20, i32 (i8*)* nonnull @uid_ssaname_map_hash, i32 (i8*, i8*)* nonnull @uid_ssaname_map_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !4660
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4661
  %default_defs = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 8, !dbg !4662
  store %struct.htab* %call3, %struct.htab** %default_defs, align 8, !dbg !4663
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4664
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 4, !dbg !4665
  tail call void @pt_solution_reset(%struct.pt_solution* nonnull %escaped) #6, !dbg !4666
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4667
  %callused = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 5, !dbg !4668
  tail call void @pt_solution_reset(%struct.pt_solution* nonnull %callused) #6, !dbg !4669
  tail call void @init_ssanames(%struct.function* %fn, i32 0) #6, !dbg !4670
  tail call void @init_phinodes() #6, !dbg !4671
  ret void, !dbg !4672
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uid_ssaname_map_hash(i8* %item) #5 !dbg !4673 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !4675, metadata !DIExpression()), !dbg !4676
  %var = getelementptr inbounds i8, i8* %item, i64 24, !dbg !4677
  %0 = bitcast i8* %var to %struct.tree_decl_minimal**, !dbg !4677
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !4677
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 2, !dbg !4678
  %2 = load i32, i32* %uid, align 4, !dbg !4678
  ret i32 %2, !dbg !4679
}

; Function Attrs: nounwind uwtable
define internal i32 @uid_ssaname_map_eq(i8* %va, i8* %vb) #5 !dbg !4680 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !4682, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4683, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8* %va, metadata !4684, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8* %vb, metadata !4685, metadata !DIExpression()), !dbg !4686
  %var = getelementptr inbounds i8, i8* %va, i64 24, !dbg !4687
  %0 = bitcast i8* %var to %struct.tree_decl_minimal**, !dbg !4687
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !4687
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 2, !dbg !4688
  %2 = load i32, i32* %uid, align 4, !dbg !4688
  %var2 = getelementptr inbounds i8, i8* %vb, i64 24, !dbg !4689
  %3 = bitcast i8* %var2 to %struct.tree_decl_minimal**, !dbg !4689
  %4 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %3, align 8, !dbg !4689
  %uid4 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %4, i64 0, i32 2, !dbg !4690
  %5 = load i32, i32* %uid4, align 4, !dbg !4690
  %cmp = icmp eq i32 %2, %5, !dbg !4691
  %conv = zext i1 %cmp to i32, !dbg !4691
  ret i32 %conv, !dbg !4692
}

declare dso_local void @pt_solution_reset(%struct.pt_solution*) local_unnamed_addr #2

declare dso_local void @init_ssanames(%struct.function*, i32) local_unnamed_addr #2

declare dso_local void @init_phinodes() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @delete_tree_ssa() local_unnamed_addr #5 !dbg !4693 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !4707
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4707
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4695, metadata !DIExpression(DW_OP_deref)), !dbg !4708
  %call = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !4709
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4706, metadata !DIExpression()), !dbg !4708
  br label %for.cond, !dbg !4709

for.cond:                                         ; preds = %for.inc, %entry
  %var.0 = phi %union.tree_node* [ %call, %entry ], [ %call29, %for.inc ], !dbg !4711
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !4706, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4695, metadata !DIExpression(DW_OP_deref)), !dbg !4708
  %call1 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !4712
  %tobool = icmp eq i8 %call1, 0, !dbg !4712
  br i1 %tobool, label %for.body, label %for.end, !dbg !4709

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc zeroext i8 @is_global_var(%union.tree_node* %var.0) #8, !dbg !4714
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4714
  br i1 %tobool3, label %if.end, label %for.inc, !dbg !4717

if.end:                                           ; preds = %for.body
  %call4 = call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var.0) #8, !dbg !4718
  %tobool5 = icmp eq %struct.var_ann_d* %call4, null, !dbg !4718
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !4720

if.then6:                                         ; preds = %if.end
  %call7 = call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var.0) #8, !dbg !4721
  %1 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call7, i64 0, i32 0, !dbg !4721
  call void @ggc_free(i8* %1) #6, !dbg !4723
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4724
  %bf.load = load i64, i64* %2, align 8, !dbg !4724
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4724
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4724
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4724

cond.true:                                        ; preds = %if.then6
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 1, !dbg !4724
  %3 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !4724
  br label %cond.end26, !dbg !4724

cond.false:                                       ; preds = %if.then6
  %cmp12 = icmp eq i64 %bf.cast1, 34, !dbg !4724
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !4724

cond.true13:                                      ; preds = %cond.false
  %ann14 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4724
  %4 = bitcast %union.tree_node** %ann14 to %struct.var_ann_d**, !dbg !4724
  br label %cond.end26, !dbg !4724

cond.false15:                                     ; preds = %cond.false
  %cmp20 = icmp eq i64 %bf.cast1, 36, !dbg !4724
  %ann22 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4724
  %5 = bitcast %union.tree_node** %ann22 to %struct.var_ann_d**, !dbg !4724
  %cond = select i1 %cmp20, %struct.var_ann_d** %5, %struct.var_ann_d** null, !dbg !4724
  br label %cond.end26, !dbg !4724

cond.end26:                                       ; preds = %cond.true13, %cond.false15, %cond.true
  %cond27 = phi %struct.var_ann_d** [ %3, %cond.true ], [ %4, %cond.true13 ], [ %cond, %cond.false15 ], !dbg !4724
  store %struct.var_ann_d* null, %struct.var_ann_d** %cond27, align 8, !dbg !4725
  br label %for.inc, !dbg !4726

for.inc:                                          ; preds = %if.end, %for.body, %cond.end26
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4695, metadata !DIExpression(DW_OP_deref)), !dbg !4708
  %call29 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !4712
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4706, metadata !DIExpression()), !dbg !4708
  br label %for.cond, !dbg !4712, !llvm.loop !4727

for.end:                                          ; preds = %for.cond
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4729
  %call30 = call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %6) #8, !dbg !4730
  call void @htab_delete(%struct.htab* %call30) #6, !dbg !4731
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4732
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 3, !dbg !4733
  %8 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4733
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %8, i64 0, i32 0, !dbg !4734
  store %struct.htab* null, %struct.htab** %referenced_vars, align 8, !dbg !4735
  call void @fini_ssanames() #6, !dbg !4736
  call void @fini_phinodes() #6, !dbg !4737
  %call32 = call zeroext i8 @ssa_operands_active() #6, !dbg !4738
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4738
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !4740

if.then34:                                        ; preds = %for.end
  call void @fini_ssa_operands() #6, !dbg !4741
  br label %if.end35, !dbg !4741

if.end35:                                         ; preds = %for.end, %if.then34
  call void @delete_alias_heapvars() #6, !dbg !4742
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4743
  %gimple_df37 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 3, !dbg !4744
  %10 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df37, align 8, !dbg !4744
  %default_defs = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %10, i64 0, i32 8, !dbg !4745
  %11 = load %struct.htab*, %struct.htab** %default_defs, align 8, !dbg !4745
  call void @htab_delete(%struct.htab* %11) #6, !dbg !4746
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4747
  %gimple_df39 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 3, !dbg !4748
  %13 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df39, align 8, !dbg !4748
  %default_defs40 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %13, i64 0, i32 8, !dbg !4749
  store %struct.htab* null, %struct.htab** %default_defs40, align 8, !dbg !4750
  %14 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df39, align 8, !dbg !4751
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %14, i64 0, i32 4, !dbg !4752
  call void @pt_solution_reset(%struct.pt_solution* nonnull %escaped) #6, !dbg !4753
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4754
  %gimple_df44 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 3, !dbg !4755
  %16 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df44, align 8, !dbg !4755
  %callused = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %16, i64 0, i32 5, !dbg !4756
  call void @pt_solution_reset(%struct.pt_solution* nonnull %callused) #6, !dbg !4757
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4758
  %gimple_df46 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 3, !dbg !4760
  %18 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df46, align 8, !dbg !4760
  %decls_to_pointers = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %18, i64 0, i32 6, !dbg !4761
  %19 = load %struct.pointer_map_t*, %struct.pointer_map_t** %decls_to_pointers, align 8, !dbg !4761
  %cmp47 = icmp eq %struct.pointer_map_t* %19, null, !dbg !4762
  br i1 %cmp47, label %if.end52, label %if.then48, !dbg !4763

if.then48:                                        ; preds = %if.end35
  call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %19) #6, !dbg !4764
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4765
  %gimple_df54.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 3, !dbg !4708
  %.pre4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df54.phi.trans.insert, align 8, !dbg !4766
  br label %if.end52, !dbg !4764

if.end52:                                         ; preds = %if.end35, %if.then48
  %20 = phi %struct.gimple_df* [ %18, %if.end35 ], [ %.pre4, %if.then48 ], !dbg !4766
  %21 = phi %struct.function* [ %17, %if.end35 ], [ %.pre, %if.then48 ], !dbg !4767
  %gimple_df54 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 3, !dbg !4766
  %decls_to_pointers55 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %20, i64 0, i32 6, !dbg !4768
  store %struct.pointer_map_t* null, %struct.pointer_map_t** %decls_to_pointers55, align 8, !dbg !4769
  %22 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df54, align 8, !dbg !4770
  %modified_noreturn_calls = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %22, i64 0, i32 1, !dbg !4771
  store %struct.VEC_gimple_gc* null, %struct.VEC_gimple_gc** %modified_noreturn_calls, align 8, !dbg !4772
  store %struct.gimple_df* null, %struct.gimple_df** %gimple_df54, align 8, !dbg !4773
  call void @redirect_edge_var_map_destroy() #8, !dbg !4774
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4775
  ret void, !dbg !4775
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4776 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4781, metadata !DIExpression()), !dbg !4782
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4783
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4784
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %0) #8, !dbg !4785
  %call1 = tail call fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %call) #8, !dbg !4786
  %1 = bitcast i8* %call1 to %union.tree_node*, !dbg !4787
  ret %union.tree_node* %1, !dbg !4788
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4789 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4795, metadata !DIExpression()), !dbg !4796
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4797
  %call = tail call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) #8, !dbg !4798
  ret i8 %call, !dbg !4799
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !4800 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4804, metadata !DIExpression()), !dbg !4805
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4806
  %bf.load = load i64, i64* %0, align 8, !dbg !4806
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !4806
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4806
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4807

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4808
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !4808
  %bf.load1 = load i64, i64* %1, align 8, !dbg !4808
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !4807
  %2 = trunc i64 %bf.cast42 to i8, !dbg !4807
  %3 = and i8 %2, 1, !dbg !4807
  br label %lor.end, !dbg !4807

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !4809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %t) unnamed_addr #0 !dbg !4810 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4815, metadata !DIExpression()), !dbg !4819
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4820
  %bf.load = load i64, i64* %0, align 8, !dbg !4820
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4820
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4820
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4820

cond.true:                                        ; preds = %entry
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1, !dbg !4820
  %1 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !4820
  br label %cond.end19, !dbg !4820

cond.false:                                       ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !4820
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !4820

cond.true6:                                       ; preds = %cond.false
  %ann7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4820
  %2 = bitcast %union.tree_node** %ann7 to %struct.var_ann_d**, !dbg !4820
  br label %cond.end19, !dbg !4820

cond.false8:                                      ; preds = %cond.false
  %cmp13 = icmp eq i64 %bf.cast1, 36, !dbg !4820
  %ann15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4820
  %3 = bitcast %union.tree_node** %ann15 to %struct.var_ann_d**, !dbg !4820
  %cond = select i1 %cmp13, %struct.var_ann_d** %3, %struct.var_ann_d** null, !dbg !4820
  br label %cond.end19, !dbg !4820

cond.end19:                                       ; preds = %cond.true6, %cond.false8, %cond.true
  %cond20 = phi %struct.var_ann_d** [ %1, %cond.true ], [ %2, %cond.true6 ], [ %cond, %cond.false8 ], !dbg !4820
  call void @llvm.dbg.value(metadata %struct.var_ann_d** %cond20, metadata !4816, metadata !DIExpression()), !dbg !4819
  %tobool = icmp eq %struct.var_ann_d** %cond20, null, !dbg !4821
  br i1 %tobool, label %cond.end23, label %cond.true21, !dbg !4821

cond.true21:                                      ; preds = %cond.end19
  %4 = load %struct.var_ann_d*, %struct.var_ann_d** %cond20, align 8, !dbg !4822
  br label %cond.end23, !dbg !4821

cond.end23:                                       ; preds = %cond.end19, %cond.true21
  %cond24 = phi %struct.var_ann_d* [ %4, %cond.true21 ], [ null, %cond.end19 ], !dbg !4821
  ret %struct.var_ann_d* %cond24, !dbg !4823
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4824 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4826, metadata !DIExpression()), !dbg !4827
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4828
  %call = tail call fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) #8, !dbg !4829
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !4830
  ret %union.tree_node* %0, !dbg !4831
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !4832 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !4838, metadata !DIExpression()), !dbg !4839
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !4840
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4840
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !4842
  br i1 %tobool, label %return, label %if.end, !dbg !4843

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !4844
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !4844
  br label %return, !dbg !4845

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !4839
  ret %struct.htab* %retval.0, !dbg !4846
}

declare dso_local void @fini_ssanames() local_unnamed_addr #2

declare dso_local void @fini_phinodes() local_unnamed_addr #2

declare dso_local zeroext i8 @ssa_operands_active() local_unnamed_addr #2

declare dso_local void @fini_ssa_operands() local_unnamed_addr #2

declare dso_local void @delete_alias_heapvars() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node* %outer_type, %union.tree_node* %inner_type) local_unnamed_addr #5 !dbg !4847 {
entry:
  br label %tailrecurse, !dbg !4871

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %outer_type.tr = phi %union.tree_node* [ %outer_type, %entry ], [ %outer_type.tr.be, %tailrecurse.backedge ]
  %inner_type.tr = phi %union.tree_node* [ %inner_type, %entry ], [ %inner_type.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %outer_type.tr, metadata !4851, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_type.tr, metadata !4852, metadata !DIExpression()), !dbg !4872
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4873
  %bf.load = load i64, i64* %0, align 8, !dbg !4873
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !4873
  %cmp = icmp eq i64 %bf.cast6, 10, !dbg !4873
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4873

lor.lhs.false:                                    ; preds = %tailrecurse
  %cmp5 = icmp eq i64 %bf.cast6, 12, !dbg !4873
  br i1 %cmp5, label %land.lhs.true, label %if.end101, !dbg !4875

land.lhs.true:                                    ; preds = %lor.lhs.false, %tailrecurse
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %outer_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4876
  %bf.load7 = load i64, i64* %1, align 8, !dbg !4876
  %bf.cast948 = and i64 %bf.load7, 65535, !dbg !4876
  %cmp10 = icmp eq i64 %bf.cast948, 10, !dbg !4876
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !4876

lor.lhs.false11:                                  ; preds = %land.lhs.true
  %cmp16 = icmp eq i64 %bf.cast948, 12, !dbg !4876
  br i1 %cmp16, label %if.then, label %if.end101, !dbg !4877

if.then:                                          ; preds = %lor.lhs.false11, %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %outer_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4878
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !4878
  %3 = load i64*, i64** %2, align 8, !dbg !4878
  %bf.load18 = load i64, i64* %3, align 8, !dbg !4878
  %bf.lshr = lshr i64 %bf.load18, 56, !dbg !4878
  %bf.cast19 = trunc i64 %bf.lshr to i32, !dbg !4878
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4881
  %4 = bitcast %union.tree_node** %type21 to i64**, !dbg !4881
  %5 = load i64*, i64** %4, align 8, !dbg !4881
  %bf.load23 = load i64, i64* %5, align 8, !dbg !4881
  %bf.lshr24 = lshr i64 %bf.load23, 56, !dbg !4881
  %bf.cast25 = trunc i64 %bf.lshr24 to i32, !dbg !4881
  %cmp26 = icmp eq i32 %bf.cast19, %bf.cast25, !dbg !4882
  br i1 %cmp26, label %if.end, label %return.loopexit57, !dbg !4883

if.end:                                           ; preds = %if.then
  %bf.cast3350 = and i64 %bf.load18, 65535, !dbg !4884
  %cmp34 = icmp eq i64 %bf.cast3350, 19, !dbg !4884
  br i1 %cmp34, label %return.loopexit57, label %lor.lhs.false35, !dbg !4886

lor.lhs.false35:                                  ; preds = %if.end
  %cmp42 = icmp eq i64 %bf.cast3350, 20, !dbg !4887
  br i1 %cmp42, label %land.lhs.true51, label %lor.lhs.false43, !dbg !4888

lor.lhs.false43:                                  ; preds = %lor.lhs.false35
  %cmp50 = icmp eq i64 %bf.cast3350, 21, !dbg !4889
  br i1 %cmp50, label %land.lhs.true51, label %if.end80, !dbg !4890

land.lhs.true51:                                  ; preds = %lor.lhs.false43, %lor.lhs.false35
  %6 = xor i64 %bf.load18, %bf.load23, !dbg !4891
  %7 = and i64 %6, 65535, !dbg !4891
  %cmp64 = icmp eq i64 %7, 0, !dbg !4891
  br i1 %cmp64, label %land.lhs.true65, label %if.end80, !dbg !4892

land.lhs.true65:                                  ; preds = %land.lhs.true51
  %values = getelementptr inbounds i64, i64* %3, i64 3, !dbg !4893
  %8 = bitcast i64* %values to %union.tree_node**, !dbg !4893
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4893
  %tobool = icmp eq %union.tree_node* %9, null, !dbg !4893
  br i1 %tobool, label %land.lhs.true69, label %if.end80, !dbg !4894

land.lhs.true69:                                  ; preds = %land.lhs.true65
  %type73 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !4895
  %10 = bitcast i64* %type73 to %union.tree_node**, !dbg !4895
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !4895
  %type77 = getelementptr inbounds i64, i64* %5, i64 2, !dbg !4896
  %12 = bitcast i64* %type77 to %union.tree_node**, !dbg !4896
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4896
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %11, %union.tree_node* %13) #8, !dbg !4897
  %tobool78 = icmp eq i8 %call, 0, !dbg !4897
  br i1 %tobool78, label %if.end80, label %return.loopexit57, !dbg !4898

if.end80:                                         ; preds = %land.lhs.true69, %land.lhs.true65, %land.lhs.true51, %lor.lhs.false43
  %type81 = bitcast %union.tree_node* %outer_type.tr to %struct.tree_type*, !dbg !4899
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type81, i64 0, i32 6, !dbg !4899
  %bf.load82 = load i32, i32* %restrict_flag, align 4, !dbg !4899
  %type85 = bitcast %union.tree_node* %inner_type.tr to %struct.tree_type*, !dbg !4901
  %restrict_flag86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i64 0, i32 6, !dbg !4901
  %bf.load87 = load i32, i32* %restrict_flag86, align 4, !dbg !4901
  %bf.lshr8356 = xor i32 %bf.load82, %bf.load87, !dbg !4902
  %14 = and i32 %bf.lshr8356, 8192, !dbg !4902
  %cmp90 = icmp eq i32 %14, 0, !dbg !4902
  br i1 %cmp90, label %if.end101, label %land.lhs.true92, !dbg !4903

land.lhs.true92:                                  ; preds = %if.end80
  %bf.clear97 = and i32 %bf.load82, 8192, !dbg !4904
  %tobool98 = icmp eq i32 %bf.clear97, 0, !dbg !4904
  br i1 %tobool98, label %if.end101, label %return.loopexit57, !dbg !4905

if.end101:                                        ; preds = %land.lhs.true92, %if.end80, %lor.lhs.false11, %lor.lhs.false
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_type.tr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4906
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4906
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4852, metadata !DIExpression()), !dbg !4872
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %outer_type.tr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4907
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !4907
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4851, metadata !DIExpression()), !dbg !4872
  %cmp105 = icmp eq %union.tree_node* %16, %18, !dbg !4908
  br i1 %cmp105, label %return.loopexit57, label %if.end108, !dbg !4910

if.end108:                                        ; preds = %if.end101
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 1, !dbg !4911
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !4911
  %tobool110 = icmp eq %union.tree_node* %20, null, !dbg !4911
  br i1 %tobool110, label %if.end119, label %land.lhs.true111, !dbg !4913

land.lhs.true111:                                 ; preds = %if.end108
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 1, !dbg !4914
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !4914
  %cmp116 = icmp eq %union.tree_node* %20, %22, !dbg !4915
  br i1 %cmp116, label %return.loopexit57, label %if.end119, !dbg !4916

if.end119:                                        ; preds = %if.end108, %land.lhs.true111
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4917
  %bf.load121 = load i64, i64* %23, align 8, !dbg !4917
  %bf.cast1238 = and i64 %bf.load121, 65535, !dbg !4917
  %cmp124 = icmp eq i64 %bf.cast1238, 14, !dbg !4917
  br i1 %cmp124, label %cond.true, label %cond.false, !dbg !4917

cond.true:                                        ; preds = %if.end119
  %call126 = tail call i32 @vector_type_mode(%union.tree_node* %16) #6, !dbg !4917
  br label %cond.end, !dbg !4917

cond.false:                                       ; preds = %if.end119
  %type127 = bitcast %union.tree_node* %16 to %struct.tree_type*, !dbg !4917
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type127, i64 0, i32 6, !dbg !4917
  %bf.load128 = load i32, i32* %mode, align 4, !dbg !4917
  %bf.lshr129 = lshr i32 %bf.load128, 16, !dbg !4917
  %bf.clear130 = and i32 %bf.lshr129, 255, !dbg !4917
  br label %cond.end, !dbg !4917

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call126, %cond.true ], [ %bf.clear130, %cond.false ], !dbg !4917
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4919
  %bf.load132 = load i64, i64* %24, align 8, !dbg !4919
  %bf.cast1349 = and i64 %bf.load132, 65535, !dbg !4919
  %cmp135 = icmp eq i64 %bf.cast1349, 14, !dbg !4919
  br i1 %cmp135, label %cond.true137, label %cond.false139, !dbg !4919

cond.true137:                                     ; preds = %cond.end
  %call138 = tail call i32 @vector_type_mode(%union.tree_node* %18) #6, !dbg !4919
  br label %cond.end145, !dbg !4919

cond.false139:                                    ; preds = %cond.end
  %type140 = bitcast %union.tree_node* %18 to %struct.tree_type*, !dbg !4919
  %mode141 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type140, i64 0, i32 6, !dbg !4919
  %bf.load142 = load i32, i32* %mode141, align 4, !dbg !4919
  %bf.lshr143 = lshr i32 %bf.load142, 16, !dbg !4919
  %bf.clear144 = and i32 %bf.lshr143, 255, !dbg !4919
  br label %cond.end145, !dbg !4919

cond.end145:                                      ; preds = %cond.false139, %cond.true137
  %cond146 = phi i32 [ %call138, %cond.true137 ], [ %bf.clear144, %cond.false139 ], !dbg !4919
  %cmp147 = icmp eq i32 %cond, %cond146, !dbg !4920
  br i1 %cmp147, label %cond.end145.if.end178_crit_edge, label %land.lhs.true149, !dbg !4921

cond.end145.if.end178_crit_edge:                  ; preds = %cond.end145
  %bf.load180.pre = load i64, i64* %23, align 8, !dbg !4922
  br label %if.end178, !dbg !4921

land.lhs.true149:                                 ; preds = %cond.end145
  %bf.load151 = load i64, i64* %23, align 8, !dbg !4923
  %bf.cast15344 = and i64 %bf.load151, 65535, !dbg !4923
  %cmp154 = icmp eq i64 %bf.cast15344, 15, !dbg !4923
  br i1 %cmp154, label %if.end178, label %lor.lhs.false156, !dbg !4923

lor.lhs.false156:                                 ; preds = %land.lhs.true149
  %cmp161 = icmp eq i64 %bf.cast15344, 16, !dbg !4923
  br i1 %cmp161, label %if.end178, label %lor.lhs.false163, !dbg !4923

lor.lhs.false163:                                 ; preds = %lor.lhs.false156
  %cmp168 = icmp eq i64 %bf.cast15344, 17, !dbg !4923
  br i1 %cmp168, label %if.end178, label %lor.lhs.false170, !dbg !4923

lor.lhs.false170:                                 ; preds = %lor.lhs.false163
  %cmp175 = icmp eq i64 %bf.cast15344, 18, !dbg !4923
  br i1 %cmp175, label %if.end178, label %return.loopexit57, !dbg !4924

if.end178:                                        ; preds = %cond.end145.if.end178_crit_edge, %lor.lhs.false170, %lor.lhs.false163, %lor.lhs.false156, %land.lhs.true149
  %bf.load222 = phi i64 [ %bf.load180.pre, %cond.end145.if.end178_crit_edge ], [ %bf.load151, %lor.lhs.false170 ], [ %bf.load151, %lor.lhs.false163 ], [ %bf.load151, %lor.lhs.false156 ], [ %bf.load151, %land.lhs.true149 ], !dbg !4922
  %bf.cast18210 = and i64 %bf.load222, 65535, !dbg !4922
  %cmp183 = icmp eq i64 %bf.cast18210, 6, !dbg !4922
  br i1 %cmp183, label %land.lhs.true199, label %lor.lhs.false185, !dbg !4922

lor.lhs.false185:                                 ; preds = %if.end178
  %cmp190 = icmp eq i64 %bf.cast18210, 7, !dbg !4922
  br i1 %cmp190, label %land.lhs.true199, label %lor.lhs.false192, !dbg !4922

lor.lhs.false192:                                 ; preds = %lor.lhs.false185
  %cmp197 = icmp eq i64 %bf.cast18210, 8, !dbg !4922
  br i1 %cmp197, label %land.lhs.true199, label %if.else, !dbg !4925

land.lhs.true199:                                 ; preds = %lor.lhs.false192, %lor.lhs.false185, %if.end178
  %bf.load201 = load i64, i64* %24, align 8, !dbg !4926
  %bf.cast20341 = and i64 %bf.load201, 65535, !dbg !4926
  %cmp204 = icmp eq i64 %bf.cast20341, 6, !dbg !4926
  br i1 %cmp204, label %if.then220, label %lor.lhs.false206, !dbg !4926

lor.lhs.false206:                                 ; preds = %land.lhs.true199
  %cmp211 = icmp eq i64 %bf.cast20341, 7, !dbg !4926
  br i1 %cmp211, label %if.then220, label %lor.lhs.false213, !dbg !4926

lor.lhs.false213:                                 ; preds = %lor.lhs.false206
  %cmp218 = icmp eq i64 %bf.cast20341, 8, !dbg !4926
  br i1 %cmp218, label %if.then220, label %if.else, !dbg !4927

if.then220:                                       ; preds = %lor.lhs.false213, %lor.lhs.false206, %land.lhs.true199
  %bf.load222.lcssa = phi i64 [ %bf.load222, %lor.lhs.false213 ], [ %bf.load222, %lor.lhs.false206 ], [ %bf.load222, %land.lhs.true199 ], !dbg !4922
  %.lcssa97 = phi %union.tree_node* [ %16, %lor.lhs.false213 ], [ %16, %lor.lhs.false206 ], [ %16, %land.lhs.true199 ], !dbg !4906
  %.lcssa = phi %union.tree_node* [ %18, %lor.lhs.false213 ], [ %18, %lor.lhs.false206 ], [ %18, %land.lhs.true199 ], !dbg !4907
  %bf.load201.lcssa = phi i64 [ %bf.load201, %lor.lhs.false213 ], [ %bf.load201, %lor.lhs.false206 ], [ %bf.load201, %land.lhs.true199 ], !dbg !4926
  %bf.lshr22355 = xor i64 %bf.load222.lcssa, %bf.load201.lcssa, !dbg !4928
  %25 = and i64 %bf.lshr22355, 2097152, !dbg !4928
  %cmp231 = icmp eq i64 %25, 0, !dbg !4928
  br i1 %cmp231, label %lor.lhs.false233, label %return, !dbg !4931

lor.lhs.false233:                                 ; preds = %if.then220
  %type234 = bitcast %union.tree_node* %.lcssa97 to %struct.tree_type*, !dbg !4932
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type234, i64 0, i32 6, !dbg !4932
  %bf.load235 = load i32, i32* %precision, align 4, !dbg !4932
  %type237 = bitcast %union.tree_node* %.lcssa to %struct.tree_type*, !dbg !4933
  %precision238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i64 0, i32 6, !dbg !4933
  %bf.load239 = load i32, i32* %precision238, align 4, !dbg !4933
  %26 = xor i32 %bf.load235, %bf.load239, !dbg !4934
  %27 = and i32 %26, 1023, !dbg !4934
  %cmp241 = icmp eq i32 %27, 0, !dbg !4934
  %spec.select5 = zext i1 %cmp241 to i8, !dbg !4935
  ret i8 %spec.select5, !dbg !4935

if.else:                                          ; preds = %lor.lhs.false213, %lor.lhs.false192
  %cmp249 = icmp eq i64 %bf.cast18210, 9, !dbg !4936
  br i1 %cmp249, label %land.lhs.true251, label %if.else259, !dbg !4937

land.lhs.true251:                                 ; preds = %if.else
  %bf.load253 = load i64, i64* %24, align 8, !dbg !4938
  %bf.cast25540 = and i64 %bf.load253, 65535, !dbg !4938
  %cmp256 = icmp eq i64 %bf.cast25540, 9, !dbg !4938
  br i1 %cmp256, label %return.loopexit57, label %if.else259, !dbg !4939

if.else259:                                       ; preds = %land.lhs.true251, %if.else
  %cmp264 = icmp eq i64 %bf.cast18210, 11, !dbg !4940
  br i1 %cmp264, label %land.lhs.true266, label %if.else274, !dbg !4941

land.lhs.true266:                                 ; preds = %if.else259
  %bf.load268 = load i64, i64* %24, align 8, !dbg !4942
  %bf.cast27039 = and i64 %bf.load268, 65535, !dbg !4942
  %cmp271 = icmp eq i64 %bf.cast27039, 11, !dbg !4942
  br i1 %cmp271, label %return.loopexit57, label %if.else274, !dbg !4943

if.else274:                                       ; preds = %land.lhs.true266, %if.else259
  %cmp279 = icmp eq i64 %bf.cast18210, 10, !dbg !4944
  br i1 %cmp279, label %land.lhs.true288, label %lor.lhs.false281, !dbg !4944

lor.lhs.false281:                                 ; preds = %if.else274
  %cmp286 = icmp eq i64 %bf.cast18210, 12, !dbg !4944
  br i1 %cmp286, label %land.lhs.true288, label %if.else391, !dbg !4945

land.lhs.true288:                                 ; preds = %lor.lhs.false281, %if.else274
  %bf.load290 = load i64, i64* %24, align 8, !dbg !4946
  %bf.cast29232 = and i64 %bf.load290, 65535, !dbg !4946
  %cmp293 = icmp eq i64 %bf.cast29232, 10, !dbg !4946
  br i1 %cmp293, label %if.then302, label %lor.lhs.false295, !dbg !4946

lor.lhs.false295:                                 ; preds = %land.lhs.true288
  %cmp300 = icmp eq i64 %bf.cast29232, 12, !dbg !4946
  br i1 %cmp300, label %if.then302, label %if.else391, !dbg !4947

if.then302:                                       ; preds = %lor.lhs.false295, %land.lhs.true288
  %.lcssa98 = phi %union.tree_node* [ %16, %lor.lhs.false295 ], [ %16, %land.lhs.true288 ], !dbg !4906
  %.lcssa95 = phi %union.tree_node* [ %18, %lor.lhs.false295 ], [ %18, %land.lhs.true288 ], !dbg !4907
  %type304 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4948
  %28 = bitcast %union.tree_node** %type304 to i64**, !dbg !4948
  %29 = load i64*, i64** %28, align 8, !dbg !4948
  %bf.load306 = load i64, i64* %29, align 8, !dbg !4948
  %bf.cast30834 = and i64 %bf.load306, 65535, !dbg !4951
  %cmp309 = icmp eq i64 %bf.cast30834, 20, !dbg !4951
  br i1 %cmp309, label %if.end365, label %land.lhs.true311, !dbg !4952

land.lhs.true311:                                 ; preds = %if.then302
  %cmp318 = icmp eq i64 %bf.cast30834, 21, !dbg !4953
  br i1 %cmp318, label %if.end365, label %land.lhs.true320, !dbg !4954

land.lhs.true320:                                 ; preds = %land.lhs.true311
  %type322 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4955
  %30 = bitcast %union.tree_node** %type322 to i64**, !dbg !4955
  %31 = load i64*, i64** %30, align 8, !dbg !4955
  %bf.load324 = load i64, i64* %31, align 8, !dbg !4955
  %bf.cast32636 = and i64 %bf.load324, 65535, !dbg !4956
  %cmp327 = icmp eq i64 %bf.cast32636, 20, !dbg !4956
  br i1 %cmp327, label %if.end365, label %land.lhs.true329, !dbg !4957

land.lhs.true329:                                 ; preds = %land.lhs.true320
  %cmp336 = icmp eq i64 %bf.cast32636, 21, !dbg !4958
  br i1 %cmp336, label %if.end365, label %land.lhs.true338, !dbg !4959

land.lhs.true338:                                 ; preds = %land.lhs.true329
  %bf.lshr34354 = xor i64 %bf.load306, %bf.load324, !dbg !4960
  %32 = and i64 %bf.lshr34354, 524288, !dbg !4960
  %cmp353 = icmp eq i64 %32, 0, !dbg !4960
  br i1 %cmp353, label %if.end365, label %land.lhs.true355, !dbg !4961

land.lhs.true355:                                 ; preds = %land.lhs.true338
  %bf.cast36238 = and i64 %bf.load306, 524288, !dbg !4962
  %tobool363 = icmp eq i64 %bf.cast36238, 0, !dbg !4962
  br i1 %tobool363, label %if.end365, label %return, !dbg !4963

if.end365:                                        ; preds = %land.lhs.true355, %land.lhs.true338, %land.lhs.true329, %land.lhs.true320, %land.lhs.true311, %if.then302
  %type367 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4964
  %33 = bitcast %union.tree_node** %type367 to %struct.tree_type**, !dbg !4964
  %34 = load %struct.tree_type*, %struct.tree_type** %33, align 8, !dbg !4964
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %34, i64 0, i32 2, !dbg !4964
  %35 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4964
  %cmp369 = icmp eq %union.tree_node* %35, null, !dbg !4964
  br i1 %cmp369, label %land.lhs.true371, label %if.end379, !dbg !4966

land.lhs.true371:                                 ; preds = %if.end365
  %size375 = getelementptr inbounds i64, i64* %29, i64 4, !dbg !4967
  %36 = bitcast i64* %size375 to %union.tree_node**, !dbg !4967
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8, !dbg !4967
  %cmp376 = icmp eq %union.tree_node* %37, null, !dbg !4967
  br i1 %cmp376, label %if.end379, label %return, !dbg !4968

if.end379:                                        ; preds = %land.lhs.true371, %if.end365
  %call380 = tail call i32 @get_deref_alias_set(%union.tree_node* %.lcssa98) #6, !dbg !4969
  %call381 = tail call i32 @get_deref_alias_set(%union.tree_node* %.lcssa95) #6, !dbg !4971
  %cmp382 = icmp eq i32 %call380, %call381, !dbg !4972
  br i1 %cmp382, label %if.end385, label %return, !dbg !4973

if.end385:                                        ; preds = %if.end379
  %38 = load %union.tree_node*, %union.tree_node** %type304, align 8, !dbg !4974
  %39 = load %union.tree_node*, %union.tree_node** %type367, align 8, !dbg !4975
  %call390 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %38, %union.tree_node* %39) #8, !dbg !4976
  br label %return, !dbg !4977

if.else391:                                       ; preds = %lor.lhs.false295, %lor.lhs.false281
  %cmp396 = icmp eq i64 %bf.cast18210, 13, !dbg !4978
  br i1 %cmp396, label %land.lhs.true398, label %if.else411, !dbg !4979

land.lhs.true398:                                 ; preds = %if.else391
  %bf.load400 = load i64, i64* %24, align 8, !dbg !4980
  %bf.cast40231 = and i64 %bf.load400, 65535, !dbg !4981
  %cmp403 = icmp eq i64 %bf.cast40231, 13, !dbg !4981
  br i1 %cmp403, label %if.then405, label %if.else411, !dbg !4982

if.then405:                                       ; preds = %land.lhs.true398
  br label %tailrecurse.backedge, !dbg !4871

tailrecurse.backedge:                             ; preds = %if.then405, %if.then436, %if.end601
  %inner_type.tr.be.in = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4983
  %outer_type.tr.be.in = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4983
  %inner_type.tr.be = load %union.tree_node*, %union.tree_node** %inner_type.tr.be.in, align 8, !dbg !4983
  %outer_type.tr.be = load %union.tree_node*, %union.tree_node** %outer_type.tr.be.in, align 8, !dbg !4983
  br label %tailrecurse, !dbg !4872

if.else411:                                       ; preds = %land.lhs.true398, %if.else391
  %cmp416 = icmp eq i64 %bf.cast18210, 14, !dbg !4984
  br i1 %cmp416, label %land.lhs.true418, label %if.else442, !dbg !4985

land.lhs.true418:                                 ; preds = %if.else411
  %bf.load420 = load i64, i64* %24, align 8, !dbg !4986
  %bf.cast42230 = and i64 %bf.load420, 65535, !dbg !4987
  %cmp423 = icmp eq i64 %bf.cast42230, 14, !dbg !4987
  br i1 %cmp423, label %land.lhs.true425, label %if.else442, !dbg !4988

land.lhs.true425:                                 ; preds = %land.lhs.true418
  %type426 = bitcast %union.tree_node* %16 to %struct.tree_type*, !dbg !4989
  %precision427 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type426, i64 0, i32 6, !dbg !4989
  %bf.load428 = load i32, i32* %precision427, align 4, !dbg !4989
  %type430 = bitcast %union.tree_node* %18 to %struct.tree_type*, !dbg !4990
  %precision431 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type430, i64 0, i32 6, !dbg !4990
  %bf.load432 = load i32, i32* %precision431, align 4, !dbg !4990
  %40 = xor i32 %bf.load428, %bf.load432, !dbg !4991
  %41 = and i32 %40, 1023, !dbg !4991
  %cmp434 = icmp eq i32 %41, 0, !dbg !4991
  br i1 %cmp434, label %if.then436, label %if.else442, !dbg !4992

if.then436:                                       ; preds = %land.lhs.true425
  br label %tailrecurse.backedge, !dbg !4993

if.else442:                                       ; preds = %land.lhs.true425, %land.lhs.true418, %if.else411
  %cmp447 = icmp eq i64 %bf.cast18210, 15, !dbg !4994
  br i1 %cmp447, label %land.lhs.true449, label %if.else607, !dbg !4995

land.lhs.true449:                                 ; preds = %if.else442
  %bf.load451 = load i64, i64* %24, align 8, !dbg !4996
  %bf.cast45323 = and i64 %bf.load451, 65535, !dbg !4997
  %cmp454 = icmp eq i64 %bf.cast45323, 15, !dbg !4997
  br i1 %cmp454, label %if.then456, label %if.else607, !dbg !4998

if.then456:                                       ; preds = %land.lhs.true449
  %type457 = bitcast %union.tree_node* %16 to %struct.tree_type*, !dbg !4999
  %string_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type457, i64 0, i32 6, !dbg !4999
  %bf.load458 = load i32, i32* %string_flag, align 4, !dbg !4999
  %type461 = bitcast %union.tree_node* %18 to %struct.tree_type*, !dbg !5001
  %string_flag462 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type461, i64 0, i32 6, !dbg !5001
  %bf.load463 = load i32, i32* %string_flag462, align 4, !dbg !5001
  %bf.lshr45953 = xor i32 %bf.load458, %bf.load463, !dbg !5002
  %42 = and i32 %bf.lshr45953, 16777216, !dbg !5002
  %cmp466 = icmp eq i32 %42, 0, !dbg !5002
  br i1 %cmp466, label %if.end469, label %return.loopexit57, !dbg !5003

if.end469:                                        ; preds = %if.then456
  %values471 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5004
  %43 = bitcast i32* %values471 to %union.tree_node**, !dbg !5004
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !5004
  %tobool472 = icmp eq %union.tree_node* %44, null, !dbg !5004
  %45 = bitcast %union.tree_node* %44 to %struct.tree_type*, !dbg !5006
  br i1 %tobool472, label %land.lhs.true473, label %if.end478, !dbg !5006

land.lhs.true473:                                 ; preds = %if.end469
  %values475 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5007
  %46 = bitcast i32* %values475 to %union.tree_node**, !dbg !5007
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !5007
  %tobool476 = icmp eq %union.tree_node* %47, null, !dbg !5007
  br i1 %tobool476, label %if.end478, label %return.loopexit57, !dbg !5008

if.end478:                                        ; preds = %land.lhs.true473, %if.end469
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5009
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !5009
  %tobool481 = icmp eq %union.tree_node* %49, null, !dbg !5009
  br i1 %tobool481, label %if.end512, label %land.lhs.true482, !dbg !5011

land.lhs.true482:                                 ; preds = %if.end478
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5011
  %bf.load486 = load i64, i64* %50, align 8, !dbg !5012
  %bf.cast48828 = and i64 %bf.load486, 65535, !dbg !5013
  %cmp489 = icmp eq i64 %bf.cast48828, 23, !dbg !5013
  br i1 %cmp489, label %land.lhs.true491, label %if.end512, !dbg !5014

land.lhs.true491:                                 ; preds = %land.lhs.true482
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5015
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !5015
  %tobool494 = icmp eq %union.tree_node* %52, null, !dbg !5015
  br i1 %tobool494, label %return.loopexit57, label %lor.lhs.false495, !dbg !5016

lor.lhs.false495:                                 ; preds = %land.lhs.true491
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5016
  %bf.load499 = load i64, i64* %53, align 8, !dbg !5017
  %bf.cast50129 = and i64 %bf.load499, 65535, !dbg !5018
  %cmp502 = icmp eq i64 %bf.cast50129, 23, !dbg !5018
  br i1 %cmp502, label %lor.lhs.false504, label %return.loopexit57, !dbg !5019

lor.lhs.false504:                                 ; preds = %lor.lhs.false495
  %call509 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %49, %union.tree_node* nonnull %52) #6, !dbg !5020
  %tobool510 = icmp eq i32 %call509, 0, !dbg !5020
  br i1 %tobool510, label %return.loopexit57, label %lor.lhs.false504.if.end512_crit_edge, !dbg !5021

lor.lhs.false504.if.end512_crit_edge:             ; preds = %lor.lhs.false504
  %.pre = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !5022
  %54 = bitcast %union.tree_node* %.pre to %struct.tree_type*, !dbg !5021
  br label %if.end512, !dbg !5021

if.end512:                                        ; preds = %lor.lhs.false504.if.end512_crit_edge, %if.end478, %land.lhs.true482
  %55 = phi %struct.tree_type* [ %54, %lor.lhs.false504.if.end512_crit_edge ], [ %45, %if.end478 ], [ %45, %land.lhs.true482 ]
  %56 = phi %struct.tree_type* [ %54, %lor.lhs.false504.if.end512_crit_edge ], [ %45, %if.end478 ], [ %45, %land.lhs.true482 ]
  %57 = phi %union.tree_node* [ %.pre, %lor.lhs.false504.if.end512_crit_edge ], [ %44, %if.end478 ], [ %44, %land.lhs.true482 ], !dbg !5022
  %tobool515 = icmp eq %union.tree_node* %57, null, !dbg !5022
  br i1 %tobool515, label %if.end601, label %land.lhs.true516, !dbg !5023

land.lhs.true516:                                 ; preds = %if.end512
  %values518 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5024
  %58 = bitcast i32* %values518 to %union.tree_node**, !dbg !5024
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8, !dbg !5024
  %tobool519 = icmp eq %union.tree_node* %59, null, !dbg !5024
  br i1 %tobool519, label %if.end601, label %land.lhs.true520, !dbg !5025

land.lhs.true520:                                 ; preds = %land.lhs.true516
  %cmp525 = icmp eq %union.tree_node* %57, %59, !dbg !5026
  br i1 %cmp525, label %if.end601, label %if.then527, !dbg !5027

if.then527:                                       ; preds = %land.lhs.true520
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %56, i64 0, i32 13, !dbg !5028
  %60 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !5028
  call void @llvm.dbg.value(metadata %union.tree_node* %60, metadata !4853, metadata !DIExpression()), !dbg !5029
  %minval534 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !5030
  %61 = bitcast %struct.lang_decl** %minval534 to %union.tree_node**, !dbg !5030
  %62 = load %union.tree_node*, %union.tree_node** %61, align 8, !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !4864, metadata !DIExpression()), !dbg !5029
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 14, !dbg !5031
  %63 = load %union.tree_node*, %union.tree_node** %maxval, align 8, !dbg !5031
  call void @llvm.dbg.value(metadata %union.tree_node* %63, metadata !4865, metadata !DIExpression()), !dbg !5029
  %maxval541 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5032
  %64 = bitcast %struct.rtx_def** %maxval541 to %union.tree_node**, !dbg !5032
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8, !dbg !5032
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !4866, metadata !DIExpression()), !dbg !5029
  %tobool542 = icmp eq %union.tree_node* %60, null, !dbg !5033
  br i1 %tobool542, label %if.end551, label %land.lhs.true543, !dbg !5035

land.lhs.true543:                                 ; preds = %if.then527
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5036
  %bf.load545 = load i64, i64* %66, align 8, !dbg !5036
  %bf.cast54727 = and i64 %bf.load545, 65535, !dbg !5037
  %cmp548 = icmp eq i64 %bf.cast54727, 23, !dbg !5037
  %spec.select = select i1 %cmp548, %union.tree_node* %60, %union.tree_node* null, !dbg !5038
  br label %if.end551, !dbg !5038

if.end551:                                        ; preds = %if.then527, %land.lhs.true543
  %inner_min.0 = phi %union.tree_node* [ null, %if.then527 ], [ %spec.select, %land.lhs.true543 ], !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_min.0, metadata !4853, metadata !DIExpression()), !dbg !5029
  %tobool552 = icmp eq %union.tree_node* %62, null, !dbg !5039
  br i1 %tobool552, label %if.end561, label %land.lhs.true553, !dbg !5041

land.lhs.true553:                                 ; preds = %if.end551
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5042
  %bf.load555 = load i64, i64* %67, align 8, !dbg !5042
  %bf.cast55726 = and i64 %bf.load555, 65535, !dbg !5043
  %cmp558 = icmp eq i64 %bf.cast55726, 23, !dbg !5043
  %spec.select1 = select i1 %cmp558, %union.tree_node* %62, %union.tree_node* null, !dbg !5044
  br label %if.end561, !dbg !5044

if.end561:                                        ; preds = %if.end551, %land.lhs.true553
  %outer_min.0 = phi %union.tree_node* [ null, %if.end551 ], [ %spec.select1, %land.lhs.true553 ], !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %outer_min.0, metadata !4864, metadata !DIExpression()), !dbg !5029
  %tobool562 = icmp eq %union.tree_node* %63, null, !dbg !5045
  br i1 %tobool562, label %if.end571, label %land.lhs.true563, !dbg !5047

land.lhs.true563:                                 ; preds = %if.end561
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5048
  %bf.load565 = load i64, i64* %68, align 8, !dbg !5048
  %bf.cast56725 = and i64 %bf.load565, 65535, !dbg !5049
  %cmp568 = icmp eq i64 %bf.cast56725, 23, !dbg !5049
  %spec.select2 = select i1 %cmp568, %union.tree_node* %63, %union.tree_node* null, !dbg !5050
  br label %if.end571, !dbg !5050

if.end571:                                        ; preds = %if.end561, %land.lhs.true563
  %inner_max.0 = phi %union.tree_node* [ null, %if.end561 ], [ %spec.select2, %land.lhs.true563 ], !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_max.0, metadata !4865, metadata !DIExpression()), !dbg !5029
  %tobool572 = icmp eq %union.tree_node* %65, null, !dbg !5051
  br i1 %tobool572, label %if.end581, label %land.lhs.true573, !dbg !5053

land.lhs.true573:                                 ; preds = %if.end571
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5054
  %bf.load575 = load i64, i64* %69, align 8, !dbg !5054
  %bf.cast57724 = and i64 %bf.load575, 65535, !dbg !5055
  %cmp578 = icmp eq i64 %bf.cast57724, 23, !dbg !5055
  %spec.select3 = select i1 %cmp578, %union.tree_node* %65, %union.tree_node* null, !dbg !5056
  br label %if.end581, !dbg !5056

if.end581:                                        ; preds = %if.end571, %land.lhs.true573
  %outer_max.0 = phi %union.tree_node* [ null, %if.end571 ], [ %spec.select3, %land.lhs.true573 ], !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %outer_max.0, metadata !4866, metadata !DIExpression()), !dbg !5029
  %tobool582 = icmp eq %union.tree_node* %outer_min.0, null, !dbg !5057
  br i1 %tobool582, label %if.end589, label %land.lhs.true583, !dbg !5059

land.lhs.true583:                                 ; preds = %if.end581
  %tobool584 = icmp eq %union.tree_node* %inner_min.0, null, !dbg !5060
  br i1 %tobool584, label %cleanup, label %lor.lhs.false585, !dbg !5061

lor.lhs.false585:                                 ; preds = %land.lhs.true583
  %call586 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %inner_min.0, %union.tree_node* nonnull %outer_min.0) #6, !dbg !5062
  %tobool587 = icmp eq i32 %call586, 0, !dbg !5062
  br i1 %tobool587, label %cleanup, label %if.end589, !dbg !5063

if.end589:                                        ; preds = %lor.lhs.false585, %if.end581
  %tobool590 = icmp eq %union.tree_node* %outer_max.0, null, !dbg !5064
  br i1 %tobool590, label %if.end597, label %land.lhs.true591, !dbg !5066

land.lhs.true591:                                 ; preds = %if.end589
  %tobool592 = icmp eq %union.tree_node* %inner_max.0, null, !dbg !5067
  br i1 %tobool592, label %cleanup, label %lor.lhs.false593, !dbg !5068

lor.lhs.false593:                                 ; preds = %land.lhs.true591
  %call594 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %inner_max.0, %union.tree_node* nonnull %outer_max.0) #6, !dbg !5069
  %tobool595 = icmp eq i32 %call594, 0, !dbg !5069
  br i1 %tobool595, label %cleanup, label %if.end597, !dbg !5070

if.end597:                                        ; preds = %lor.lhs.false593, %if.end589
  br label %cleanup, !dbg !5071

cleanup:                                          ; preds = %lor.lhs.false585, %land.lhs.true583, %lor.lhs.false593, %land.lhs.true591, %if.end597
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end597 ], [ false, %lor.lhs.false585 ], [ false, %land.lhs.true583 ], [ false, %lor.lhs.false593 ], [ false, %land.lhs.true591 ]
  br i1 %cleanup.dest.slot.0, label %if.end601, label %return.loopexit57

if.end601:                                        ; preds = %land.lhs.true520, %land.lhs.true516, %if.end512, %cleanup
  br label %tailrecurse.backedge, !dbg !5072

if.else607:                                       ; preds = %land.lhs.true449, %if.else442
  %bf.load222.lcssa109 = phi i64 [ %bf.load222, %land.lhs.true449 ], [ %bf.load222, %if.else442 ], !dbg !4922
  %bf.cast18210.lcssa107 = phi i64 [ %bf.cast18210, %land.lhs.true449 ], [ %bf.cast18210, %if.else442 ], !dbg !4922
  %.lcssa105 = phi i64* [ %24, %land.lhs.true449 ], [ %24, %if.else442 ], !dbg !4919
  %.lcssa102 = phi i64* [ %23, %land.lhs.true449 ], [ %23, %if.else442 ], !dbg !4917
  %.lcssa99 = phi %union.tree_node* [ %16, %land.lhs.true449 ], [ %16, %if.else442 ], !dbg !4906
  %.lcssa96 = phi %union.tree_node* [ %18, %land.lhs.true449 ], [ %18, %if.else442 ], !dbg !4907
  %cmp612 = icmp eq i64 %bf.cast18210.lcssa107, 20, !dbg !5073
  br i1 %cmp612, label %land.lhs.true621, label %lor.lhs.false614, !dbg !5074

lor.lhs.false614:                                 ; preds = %if.else607
  %cmp619 = icmp eq i64 %bf.cast18210.lcssa107, 21, !dbg !5075
  br i1 %cmp619, label %land.lhs.true621, label %if.else707, !dbg !5076

land.lhs.true621:                                 ; preds = %lor.lhs.false614, %if.else607
  %bf.load627 = load i64, i64* %.lcssa105, align 8, !dbg !5077
  %70 = xor i64 %bf.load222.lcssa109, %bf.load627, !dbg !5078
  %71 = and i64 %70, 65535, !dbg !5078
  %cmp630 = icmp eq i64 %71, 0, !dbg !5078
  br i1 %cmp630, label %if.then632, label %if.else707, !dbg !5079

if.then632:                                       ; preds = %land.lhs.true621
  %type634 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5080
  %72 = load %union.tree_node*, %union.tree_node** %type634, align 8, !dbg !5080
  %type636 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5082
  %73 = load %union.tree_node*, %union.tree_node** %type636, align 8, !dbg !5082
  %call637 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %72, %union.tree_node* %73) #8, !dbg !5083
  %tobool638 = icmp eq i8 %call637, 0, !dbg !5083
  br i1 %tobool638, label %return, label %if.end640, !dbg !5084

if.end640:                                        ; preds = %if.then632
  %bf.load642 = load i64, i64* %.lcssa102, align 8, !dbg !5085
  %bf.cast64422 = and i64 %bf.load642, 65535, !dbg !5087
  %cmp645 = icmp eq i64 %bf.cast64422, 21, !dbg !5087
  br i1 %cmp645, label %land.lhs.true647, label %if.end655, !dbg !5088

land.lhs.true647:                                 ; preds = %if.end640
  %maxval649 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5089
  %74 = bitcast %struct.rtx_def** %maxval649 to %union.tree_node**, !dbg !5089
  %75 = load %union.tree_node*, %union.tree_node** %74, align 8, !dbg !5089
  %maxval651 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5090
  %76 = bitcast %struct.rtx_def** %maxval651 to %union.tree_node**, !dbg !5090
  %77 = load %union.tree_node*, %union.tree_node** %76, align 8, !dbg !5090
  %call652 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %75, %union.tree_node* %77) #8, !dbg !5091
  %tobool653 = icmp eq i8 %call652, 0, !dbg !5091
  br i1 %tobool653, label %return, label %if.end655, !dbg !5092

if.end655:                                        ; preds = %land.lhs.true647, %if.end640
  %values657 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5093
  %78 = bitcast i32* %values657 to %union.tree_node**, !dbg !5093
  %79 = load %union.tree_node*, %union.tree_node** %78, align 8, !dbg !5093
  %tobool658 = icmp eq %union.tree_node* %79, null, !dbg !5093
  br i1 %tobool658, label %return, label %if.end660, !dbg !5095

if.end660:                                        ; preds = %if.end655
  %values664 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5096
  %80 = bitcast i32* %values664 to %union.tree_node**, !dbg !5096
  %81 = load %union.tree_node*, %union.tree_node** %80, align 8, !dbg !5096
  %cmp665 = icmp eq %union.tree_node* %79, %81, !dbg !5098
  br i1 %cmp665, label %return, label %if.end668, !dbg !5099

if.end668:                                        ; preds = %if.end660
  br label %for.cond, !dbg !5100

for.cond:                                         ; preds = %for.inc, %if.end668
  %inner_parm.0 = phi %union.tree_node* [ %81, %if.end668 ], [ %inner_parm.0.pre, %for.inc ], !dbg !5102
  %outer_parm.0 = phi %union.tree_node* [ %79, %if.end668 ], [ %outer_parm.0.pre, %for.inc ], !dbg !5102
  call void @llvm.dbg.value(metadata %union.tree_node* %outer_parm.0, metadata !4867, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_parm.0, metadata !4870, metadata !DIExpression()), !dbg !5103
  %tobool673 = icmp ne %union.tree_node* %outer_parm.0, null, !dbg !5104
  %tobool674 = icmp ne %union.tree_node* %inner_parm.0, null, !dbg !5106
  %spec.select4 = and i1 %tobool674, %tobool673, !dbg !5106
  br i1 %spec.select4, label %for.body, label %for.end, !dbg !5107

for.body:                                         ; preds = %for.cond
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %outer_parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5108
  %83 = bitcast %union.tree_node** %82 to %struct.tree_type**, !dbg !5108
  %84 = load %struct.tree_type*, %struct.tree_type** %83, align 8, !dbg !5108
  %main_variant676 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %84, i64 0, i32 16, !dbg !5108
  %85 = load %union.tree_node*, %union.tree_node** %main_variant676, align 8, !dbg !5108
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5110
  %87 = bitcast %union.tree_node** %86 to %struct.tree_type**, !dbg !5110
  %88 = load %struct.tree_type*, %struct.tree_type** %87, align 8, !dbg !5110
  %main_variant680 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %88, i64 0, i32 16, !dbg !5110
  %89 = load %union.tree_node*, %union.tree_node** %main_variant680, align 8, !dbg !5110
  %call681 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %85, %union.tree_node* %89) #8, !dbg !5111
  %tobool682 = icmp eq i8 %call681, 0, !dbg !5111
  br i1 %tobool682, label %return.loopexit, label %for.inc, !dbg !5112

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %outer_parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5113
  %chain687 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5114
  %outer_parm.0.pre = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5102
  %inner_parm.0.pre = load %union.tree_node*, %union.tree_node** %chain687, align 8, !dbg !5102
  br label %for.cond, !dbg !5115, !llvm.loop !5116

for.end:                                          ; preds = %for.cond
  %tobool673.lcssa = phi i1 [ %tobool673, %for.cond ], !dbg !5104
  %tobool674.lcssa = phi i1 [ %tobool674, %for.cond ], !dbg !5106
  %or.cond = or i1 %tobool673.lcssa, %tobool674.lcssa, !dbg !5118
  br i1 %or.cond, label %return, label %if.end692, !dbg !5118

if.end692:                                        ; preds = %for.end
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5120
  %91 = load %union.tree_node*, %union.tree_node** %90, align 8, !dbg !5120
  %tobool694 = icmp eq %union.tree_node* %91, null, !dbg !5120
  br i1 %tobool694, label %lor.lhs.false695, label %if.then699, !dbg !5122

lor.lhs.false695:                                 ; preds = %if.end692
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5123
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8, !dbg !5123
  %tobool698 = icmp eq %union.tree_node* %93, null, !dbg !5123
  br i1 %tobool698, label %return, label %if.then699, !dbg !5124

if.then699:                                       ; preds = %lor.lhs.false695, %if.end692
  %94 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 14), align 8, !dbg !5125
  %call700 = tail call i32 %94(%union.tree_node* %.lcssa96, %union.tree_node* %.lcssa99) #6, !dbg !5126
  %cmp701 = icmp ne i32 %call700, 0, !dbg !5127
  %conv703 = zext i1 %cmp701 to i8, !dbg !5126
  br label %return, !dbg !5128

if.else707:                                       ; preds = %land.lhs.true621, %lor.lhs.false614
  ret i8 0, !dbg !5129

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !5130

return.loopexit57:                                ; preds = %if.end, %if.end101, %land.lhs.true111, %lor.lhs.false170, %land.lhs.true251, %land.lhs.true266, %cleanup, %if.then456, %land.lhs.true473, %land.lhs.true491, %lor.lhs.false495, %lor.lhs.false504, %if.then, %land.lhs.true92, %land.lhs.true69
  %retval.2.ph = phi i8 [ 0, %land.lhs.true491 ], [ 0, %lor.lhs.false495 ], [ 0, %lor.lhs.false504 ], [ 0, %land.lhs.true473 ], [ 0, %if.then456 ], [ 1, %land.lhs.true266 ], [ 1, %land.lhs.true251 ], [ 0, %lor.lhs.false170 ], [ 1, %land.lhs.true111 ], [ 1, %if.end101 ], [ 0, %land.lhs.true92 ], [ 1, %if.end ], [ 1, %land.lhs.true69 ], [ 0, %if.then ], [ 0, %cleanup ]
  br label %return, !dbg !5130

return:                                           ; preds = %return.loopexit57, %return.loopexit, %if.then220, %land.lhs.true355, %if.end379, %land.lhs.true371, %land.lhs.true647, %lor.lhs.false695, %if.end655, %if.then632, %if.then699, %if.end660, %for.end, %if.end385
  %retval.2 = phi i8 [ %call390, %if.end385 ], [ 0, %if.then220 ], [ 0, %land.lhs.true355 ], [ 0, %land.lhs.true371 ], [ 0, %if.end379 ], [ %conv703, %if.then699 ], [ 0, %if.then632 ], [ 0, %land.lhs.true647 ], [ 1, %if.end655 ], [ 1, %if.end660 ], [ 0, %for.end ], [ 1, %lor.lhs.false695 ], [ 0, %return.loopexit ], [ %retval.2.ph, %return.loopexit57 ]
  ret i8 %retval.2, !dbg !5130
}

declare dso_local i32 @get_deref_alias_set(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @types_compatible_p(%union.tree_node* %type1, %union.tree_node* %type2) local_unnamed_addr #5 !dbg !5131 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !5133, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !5134, metadata !DIExpression()), !dbg !5135
  %cmp = icmp eq %union.tree_node* %type1, %type2, !dbg !5136
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5137

lor.rhs:                                          ; preds = %entry
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %type1, %union.tree_node* %type2) #8, !dbg !5138
  %tobool = icmp eq i8 %call, 0, !dbg !5138
  br i1 %tobool, label %lor.end, label %land.rhs, !dbg !5139

land.rhs:                                         ; preds = %lor.rhs
  %call1 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %type2, %union.tree_node* %type1) #8, !dbg !5140
  %tobool3 = icmp ne i8 %call1, 0, !dbg !5139
  %phitmp = zext i1 %tobool3 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %entry
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5141
}

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tree_ssa_useless_type_conversion(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5142 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5146, metadata !DIExpression()), !dbg !5147
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5148
  %bf.load = load i64, i64* %0, align 8, !dbg !5148
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5148
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !5148
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5148

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 113, !dbg !5148
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !5150

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 118, !dbg !5151
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !5152

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 117, !dbg !5153
  br i1 %cmp17, label %if.then, label %return, !dbg !5154

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false6, %lor.lhs.false, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5155
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5155
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5156
  %2 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !5156
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5156
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5156
  %4 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !5156
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %1, %union.tree_node* %4) #8, !dbg !5157
  br label %return, !dbg !5158

return:                                           ; preds = %lor.lhs.false12, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ 0, %lor.lhs.false12 ], !dbg !5147
  ret i8 %retval.0, !dbg !5159
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5160 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5162, metadata !DIExpression()), !dbg !5163
  br label %while.cond, !dbg !5164

while.cond:                                       ; preds = %while.body, %entry
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !5162, metadata !DIExpression()), !dbg !5163
  %call = tail call zeroext i8 @tree_ssa_useless_type_conversion(%union.tree_node* %exp.addr.0) #8, !dbg !5165
  %tobool = icmp eq i8 %call, 0, !dbg !5164
  br i1 %tobool, label %while.end, label %while.body, !dbg !5164

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5166
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5166
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5162, metadata !DIExpression()), !dbg !5163
  br label %while.cond, !dbg !5164, !llvm.loop !5167

while.end:                                        ; preds = %while.cond
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5162, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5162, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5162, metadata !DIExpression()), !dbg !5163
  ret %union.tree_node* %exp.addr.0.lcssa, !dbg !5168
}

; Function Attrs: nounwind uwtable
define dso_local void @walk_use_def_chains(%union.tree_node* %var, i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, i8* %data, i8 zeroext %is_dfs) local_unnamed_addr #5 !dbg !5169 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5177, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, metadata !5178, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8* %data, metadata !5179, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8 %is_dfs, metadata !5180, metadata !DIExpression()), !dbg !5185
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5186
  %bf.load = load i64, i64* %0, align 8, !dbg !5186
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5186
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5186
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5186

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1591, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5186
  br label %cond.end, !dbg !5186

cond.end:                                         ; preds = %entry, %cond.true
  %def_stmt1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5187
  %1 = bitcast %union.tree_node** %def_stmt1 to %union.gimple_statement_d**, !dbg !5187
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5187
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5181, metadata !DIExpression()), !dbg !5185
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %2) #8, !dbg !5188
  %cmp2 = icmp eq i32 %call, 16, !dbg !5189
  br i1 %cmp2, label %if.else, label %if.then, !dbg !5190

if.then:                                          ; preds = %cond.end
  %call3 = tail call zeroext i8 %fn(%union.tree_node* %var, %union.gimple_statement_d* %2, i8* %data) #6, !dbg !5191
  br label %if.end, !dbg !5191

if.else:                                          ; preds = %cond.end
  %call4 = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !5192
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call4, metadata !5182, metadata !DIExpression()), !dbg !5193
  %call5 = tail call fastcc zeroext i8 @walk_use_def_chains_1(%union.tree_node* %var, i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, i8* %data, %struct.pointer_set_t* %call4, i8 zeroext %is_dfs) #8, !dbg !5194
  tail call void @pointer_set_destroy(%struct.pointer_set_t* %call4) #6, !dbg !5195
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5196
}

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @walk_use_def_chains_1(%union.tree_node* %var, i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, i8* %data, %struct.pointer_set_t* %visited, i8 zeroext %is_dfs) unnamed_addr #5 !dbg !5197 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5201, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, metadata !5202, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i8* %data, metadata !5203, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %visited, metadata !5204, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i8 %is_dfs, metadata !5205, metadata !DIExpression()), !dbg !5214
  %0 = bitcast %union.tree_node* %var to i8*, !dbg !5215
  %call = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %visited, i8* %0) #6, !dbg !5217
  %tobool = icmp eq i32 %call, 0, !dbg !5217
  br i1 %tobool, label %if.end, label %cleanup56, !dbg !5218

if.end:                                           ; preds = %entry
  %def_stmt1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5219
  %1 = bitcast %union.tree_node** %def_stmt1 to %union.gimple_statement_d**, !dbg !5219
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5219
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5206, metadata !DIExpression()), !dbg !5214
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %2) #8, !dbg !5220
  %cmp = icmp eq i32 %call2, 16, !dbg !5221
  br i1 %cmp, label %if.else, label %if.then3, !dbg !5222

if.then3:                                         ; preds = %if.end
  %call4 = tail call zeroext i8 %fn(%union.tree_node* %var, %union.gimple_statement_d* %2, i8* %data) #6, !dbg !5223
  br label %cleanup56, !dbg !5225

if.else:                                          ; preds = %if.end
  %tobool5 = icmp eq i8 %is_dfs, 0, !dbg !5226
  br i1 %tobool5, label %for.cond.preheader, label %if.end15, !dbg !5228

for.cond.preheader:                               ; preds = %if.else
  br label %for.cond, !dbg !5229

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5231
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5207, metadata !DIExpression()), !dbg !5232
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %2) #8, !dbg !5233
  %conv = zext i32 %call7 to i64, !dbg !5233
  %cmp8 = icmp ult i64 %i.0, %conv, !dbg !5235
  br i1 %cmp8, label %for.body, label %if.end15.loopexit, !dbg !5229

for.body:                                         ; preds = %for.cond
  %call10 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %2, i64 %i.0) #8, !dbg !5236
  %call11 = tail call zeroext i8 %fn(%union.tree_node* %call10, %union.gimple_statement_d* %2, i8* %data) #6, !dbg !5238
  %tobool12 = icmp eq i8 %call11, 0, !dbg !5238
  br i1 %tobool12, label %for.inc, label %cleanup52.loopexit4, !dbg !5239

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5240
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5207, metadata !DIExpression()), !dbg !5232
  br label %for.cond, !dbg !5241, !llvm.loop !5242

if.end15.loopexit:                                ; preds = %for.cond
  br label %if.end15, !dbg !5244

if.end15:                                         ; preds = %if.end15.loopexit, %if.else
  call void @llvm.dbg.value(metadata i64 0, metadata !5207, metadata !DIExpression()), !dbg !5232
  br label %for.cond16, !dbg !5244

for.cond16:                                       ; preds = %for.inc32, %if.end15
  %i.1 = phi i64 [ 0, %if.end15 ], [ %inc33, %for.inc32 ], !dbg !5245
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5207, metadata !DIExpression()), !dbg !5232
  %call17 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %2) #8, !dbg !5246
  %conv18 = zext i32 %call17 to i64, !dbg !5246
  %cmp19 = icmp ult i64 %i.1, %conv18, !dbg !5247
  br i1 %cmp19, label %for.body21, label %for.end34, !dbg !5248

for.body21:                                       ; preds = %for.cond16
  %call22 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %2, i64 %i.1) #8, !dbg !5249
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5210, metadata !DIExpression()), !dbg !5250
  %tobool23 = icmp eq %union.tree_node* %call22, null, !dbg !5251
  br i1 %tobool23, label %if.end31, label %land.lhs.true, !dbg !5253

land.lhs.true:                                    ; preds = %for.body21
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5254
  %bf.load = load i64, i64* %3, align 8, !dbg !5254
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5255
  %cmp24 = icmp eq i64 %bf.cast2, 141, !dbg !5255
  br i1 %cmp24, label %land.lhs.true26, label %if.end31, !dbg !5256

land.lhs.true26:                                  ; preds = %land.lhs.true
  %call27 = tail call fastcc zeroext i8 @walk_use_def_chains_1(%union.tree_node* nonnull %call22, i8 (%union.tree_node*, %union.gimple_statement_d*, i8*)* %fn, i8* %data, %struct.pointer_set_t* %visited, i8 zeroext %is_dfs) #8, !dbg !5257
  %tobool29 = icmp eq i8 %call27, 0, !dbg !5257
  br i1 %tobool29, label %if.end31, label %cleanup, !dbg !5258

if.end31:                                         ; preds = %land.lhs.true26, %for.body21, %land.lhs.true
  br label %cleanup, !dbg !5259

cleanup:                                          ; preds = %land.lhs.true26, %if.end31
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end31 ], [ 1, %land.lhs.true26 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc32, label %cleanup52.loopexit3

for.inc32:                                        ; preds = %cleanup
  %inc33 = add nuw nsw i64 %i.1, 1, !dbg !5260
  call void @llvm.dbg.value(metadata i64 %inc33, metadata !5207, metadata !DIExpression()), !dbg !5232
  br label %for.cond16, !dbg !5261, !llvm.loop !5262

for.end34:                                        ; preds = %for.cond16
  br i1 %tobool5, label %cleanup52, label %for.cond37.preheader, !dbg !5264

for.cond37.preheader:                             ; preds = %for.end34
  br label %for.cond37, !dbg !5265

for.cond37:                                       ; preds = %for.cond37.preheader, %for.inc48
  %i.2 = phi i64 [ %inc49, %for.inc48 ], [ 0, %for.cond37.preheader ], !dbg !5268
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !5207, metadata !DIExpression()), !dbg !5232
  %call38 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %2) #8, !dbg !5269
  %conv39 = zext i32 %call38 to i64, !dbg !5269
  %cmp40 = icmp ult i64 %i.2, %conv39, !dbg !5271
  br i1 %cmp40, label %for.body42, label %cleanup52.loopexit, !dbg !5265

for.body42:                                       ; preds = %for.cond37
  %call43 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %2, i64 %i.2) #8, !dbg !5272
  %call44 = tail call zeroext i8 %fn(%union.tree_node* %call43, %union.gimple_statement_d* %2, i8* %data) #6, !dbg !5274
  %tobool45 = icmp eq i8 %call44, 0, !dbg !5274
  br i1 %tobool45, label %for.inc48, label %cleanup52.loopexit, !dbg !5275

for.inc48:                                        ; preds = %for.body42
  %inc49 = add nuw nsw i64 %i.2, 1, !dbg !5276
  call void @llvm.dbg.value(metadata i64 %inc49, metadata !5207, metadata !DIExpression()), !dbg !5232
  br label %for.cond37, !dbg !5277, !llvm.loop !5278

cleanup52.loopexit:                               ; preds = %for.cond37, %for.body42
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %for.cond37 ], [ 1, %for.body42 ]
  br label %cleanup52

cleanup52.loopexit3:                              ; preds = %cleanup
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup52

cleanup52.loopexit4:                              ; preds = %for.body
  br label %cleanup52

cleanup52:                                        ; preds = %cleanup52.loopexit4, %cleanup52.loopexit3, %cleanup52.loopexit, %for.end34
  %cleanup.dest.slot.1 = phi i32 [ 0, %for.end34 ], [ %cleanup.dest.slot.1.ph, %cleanup52.loopexit ], [ %cleanup.dest.slot.0.lcssa, %cleanup52.loopexit3 ], [ 1, %cleanup52.loopexit4 ]
  %cond = icmp ne i32 %cleanup.dest.slot.1, 0
  %spec.select = zext i1 %cond to i8
  ret i8 %spec.select

cleanup56:                                        ; preds = %entry, %if.then3
  %retval.3 = phi i8 [ %call4, %if.then3 ], [ 0, %entry ], !dbg !5214
  ret i8 %retval.3, !dbg !5280
}

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ssa_undefined_value_p(%union.tree_node* %t) local_unnamed_addr #5 !dbg !5281 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5283, metadata !DIExpression()), !dbg !5285
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5286
  %0 = bitcast i32* %var1 to %union.tree_node**, !dbg !5286
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5286
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5284, metadata !DIExpression()), !dbg !5285
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5287
  %bf.load = load i64, i64* %2, align 8, !dbg !5287
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5289
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !5289
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5290

if.end:                                           ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 32, !dbg !5291
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !5293

land.lhs.true:                                    ; preds = %if.end
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5294
  %3 = bitcast i24* %hard_register to i32*, !dbg !5294
  %bf.load7 = load i32, i32* %3, align 8, !dbg !5294
  %bf.clear8 = and i32 %bf.load7, 2, !dbg !5294
  %tobool = icmp eq i32 %bf.clear8, 0, !dbg !5294
  br i1 %tobool, label %if.end10, label %cleanup, !dbg !5295

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5296
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5296
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !5296
  %call = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %5) #8, !dbg !5297
  br label %cleanup, !dbg !5298

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.end10
  %retval.0 = phi i8 [ %call, %if.end10 ], [ 0, %entry ], [ 0, %land.lhs.true ], !dbg !5285
  ret i8 %retval.0, !dbg !5299
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_warn_uninitialized() #5 !dbg !5300 {
entry:
  %0 = load i32, i32* @warn_uninitialized, align 4, !dbg !5301
  %cmp = icmp ne i32 %0, 0, !dbg !5302
  %conv1 = zext i1 %cmp to i8, !dbg !5301
  ret i8 %conv1, !dbg !5303
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_early_warn_uninitialized() #5 !dbg !5304 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !5305
  %tobool = icmp eq i32 %0, 0, !dbg !5306
  %conv = zext i1 %tobool to i8, !dbg !5306
  %call = tail call fastcc i32 @warn_uninitialized_vars(i8 zeroext %conv) #8, !dbg !5307
  ret i32 0, !dbg !5308
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_late_warn_uninitialized() #5 !dbg !5309 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5313
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5313
  %call = tail call fastcc i32 @warn_uninitialized_vars(i8 zeroext 1) #8, !dbg !5314
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5315
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !5315
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5315
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !5315
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5315
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5317
  br label %for.cond, !dbg !5315

for.cond:                                         ; preds = %for.inc7, %entry
  %5 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre1, %for.inc7 ], !dbg !5320
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.0, %for.inc7 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5321
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5321
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5311, metadata !DIExpression()), !dbg !5322
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !5320
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5320
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !5320
  br i1 %cmp, label %for.end9, label %for.body, !dbg !5315

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5323
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !5323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5323
  br label %for.cond3, !dbg !5324

for.cond3:                                        ; preds = %for.body5, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5312, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5325
  %tobool = icmp eq i8 %call4, 0, !dbg !5327
  br i1 %tobool, label %for.body5, label %for.inc7, !dbg !5328

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5312, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5329
  call fastcc void @warn_uninitialized_phi(%union.gimple_statement_d* %call6) #8, !dbg !5330
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5312, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5331
  br label %for.cond3, !dbg !5332, !llvm.loop !5333

for.inc7:                                         ; preds = %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5320
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5335
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !5320
  br label %for.cond, !dbg !5320, !llvm.loop !5336

for.end9:                                         ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5338
  ret i32 0, !dbg !5339
}

; Function Attrs: nounwind uwtable
define dso_local void @execute_update_addresses_taken(i8 zeroext %do_optimize) local_unnamed_addr #5 !dbg !5340 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp42 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp223 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %do_optimize, metadata !5342, metadata !DIExpression()), !dbg !5379
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !5380
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5380
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5381
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5381
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5382
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !5347, metadata !DIExpression()), !dbg !5379
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5383
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !5348, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 0, metadata !5349, metadata !DIExpression()), !dbg !5379
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5384
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !5384
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5384
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !5384
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5384
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5385
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp42 to i8*, !dbg !5386
  br label %for.cond, !dbg !5384

for.cond:                                         ; preds = %for.inc90, %entry
  %7 = phi %struct.control_flow_graph* [ %3, %entry ], [ %.pre11, %for.inc90 ], !dbg !5387
  %.pn = phi %struct.basic_block_def* [ %4, %entry ], [ %bb.0, %for.inc90 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5388
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5388
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5346, metadata !DIExpression()), !dbg !5379
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !5387
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5387
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !5387
  br i1 %cmp, label %for.end92, label %for.body, !dbg !5384

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5389
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #8, !dbg !5389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5389
  br label %for.cond4, !dbg !5390

for.cond4:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5391
  %tobool = icmp eq i8 %call5, 0, !dbg !5392
  br i1 %tobool, label %for.body6, label %for.end, !dbg !5393

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5394
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !5350, metadata !DIExpression()), !dbg !5395
  %call8 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call7) #8, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %call8, metadata !5357, metadata !DIExpression()), !dbg !5395
  %call9 = call zeroext i8 @gimple_ior_addresses_taken(%struct.bitmap_head_def* %call, %union.gimple_statement_d* %call7) #6, !dbg !5397
  switch i32 %call8, label %for.inc [
    i32 6, label %if.then
    i32 8, label %if.then
  ], !dbg !5398

if.then:                                          ; preds = %for.body6, %for.body6
  %call12 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call7) #6, !dbg !5399
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !5358, metadata !DIExpression()), !dbg !5400
  %cond = icmp eq %union.tree_node* %call12, null, !dbg !5401
  br i1 %cond, label %for.inc, label %land.lhs.true, !dbg !5401

land.lhs.true:                                    ; preds = %if.then
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5403
  %bf.load = load i64, i64* %9, align 8, !dbg !5403
  %bf.cast9 = and i64 %bf.load, 65535, !dbg !5404
  %cmp14 = icmp eq i64 %bf.cast9, 152, !dbg !5404
  br i1 %cmp14, label %land.lhs.true15, label %if.else, !dbg !5405

land.lhs.true15:                                  ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5406
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5406
  %tobool16 = icmp eq %union.tree_node* %10, null, !dbg !5406
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !5407

if.then17:                                        ; preds = %land.lhs.true15
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5408
  %11 = load i32, i32* %uid, align 4, !dbg !5408
  %call21 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 %11) #6, !dbg !5409
  br label %for.inc, !dbg !5409

if.else:                                          ; preds = %land.lhs.true15, %land.lhs.true
  %call24 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* nonnull %call12) #8, !dbg !5410
  %tobool25 = icmp eq i8 %call24, 0, !dbg !5410
  br i1 %tobool25, label %for.inc, label %if.then26, !dbg !5412

if.then26:                                        ; preds = %if.else
  %call27 = call %union.tree_node* @get_base_address(%union.tree_node* nonnull %call12) #6, !dbg !5413
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !5343, metadata !DIExpression()), !dbg !5379
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5415
  %bf.load29 = load i64, i64* %12, align 8, !dbg !5415
  %bf.cast31 = and i64 %bf.load29, 65535, !dbg !5415
  %arrayidx32 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast31, !dbg !5415
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !5415
  %cmp33 = icmp eq i32 %13, 3, !dbg !5415
  br i1 %cmp33, label %if.then35, label %for.inc, !dbg !5417

if.then35:                                        ; preds = %if.then26
  %uid37 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5418
  %14 = load i32, i32* %uid37, align 4, !dbg !5418
  %call38 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 %14) #6, !dbg !5419
  br label %for.inc, !dbg !5419

for.inc:                                          ; preds = %if.else, %if.then, %for.body6, %if.then35, %if.then26, %if.then17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5420
  br label %for.cond4, !dbg !5421, !llvm.loop !5422

for.end:                                          ; preds = %for.cond4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7, !dbg !5424
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp42, %struct.basic_block_def* %bb.0) #6, !dbg !5424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !5424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7, !dbg !5424
  br label %for.cond43, !dbg !5425

for.cond43:                                       ; preds = %for.inc88, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call44 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5426
  %tobool45 = icmp eq i8 %call44, 0, !dbg !5427
  br i1 %tobool45, label %for.body47, label %for.inc90, !dbg !5428

for.body47:                                       ; preds = %for.cond43
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call48 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5429
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call48, metadata !5365, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i64 0, metadata !5361, metadata !DIExpression()), !dbg !5430
  br label %for.cond49, !dbg !5431

for.cond49:                                       ; preds = %for.inc86, %for.body47
  %i.0 = phi i64 [ 0, %for.body47 ], [ %inc, %for.inc86 ], !dbg !5432
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5361, metadata !DIExpression()), !dbg !5430
  %call50 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call48) #8, !dbg !5433
  %conv51 = zext i32 %call50 to i64, !dbg !5433
  %cmp52 = icmp ult i64 %i.0, %conv51, !dbg !5434
  br i1 %cmp52, label %for.body54, label %for.inc88, !dbg !5435

for.body54:                                       ; preds = %for.cond49
  %conv55 = trunc i64 %i.0 to i32, !dbg !5436
  %call56 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call48, i32 %conv55) #8, !dbg !5436
  %call57 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call56) #8, !dbg !5436
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !5366, metadata !DIExpression()), !dbg !5437
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5438
  %bf.load60 = load i64, i64* %15, align 8, !dbg !5438
  %bf.cast628 = and i64 %bf.load60, 65535, !dbg !5440
  %cmp63 = icmp eq i64 %bf.cast628, 121, !dbg !5440
  br i1 %cmp63, label %land.lhs.true65, label %for.inc86, !dbg !5441

land.lhs.true65:                                  ; preds = %for.body54
  %operands67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5442
  %16 = load %union.tree_node*, %union.tree_node** %operands67, align 8, !dbg !5442
  %call69 = call %union.tree_node* @get_base_address(%union.tree_node* %16) #6, !dbg !5443
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !5370, metadata !DIExpression()), !dbg !5437
  %cmp70 = icmp eq %union.tree_node* %call69, null, !dbg !5444
  br i1 %cmp70, label %for.inc86, label %land.lhs.true72, !dbg !5445

land.lhs.true72:                                  ; preds = %land.lhs.true65
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5446
  %bf.load74 = load i64, i64* %17, align 8, !dbg !5446
  %bf.cast76 = and i64 %bf.load74, 65535, !dbg !5446
  %arrayidx78 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast76, !dbg !5446
  %18 = load i32, i32* %arrayidx78, align 4, !dbg !5446
  %cmp79 = icmp eq i32 %18, 3, !dbg !5446
  br i1 %cmp79, label %if.then81, label %for.inc86, !dbg !5447

if.then81:                                        ; preds = %land.lhs.true72
  %uid83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5448
  %19 = load i32, i32* %uid83, align 4, !dbg !5448
  %call84 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %19) #6, !dbg !5449
  br label %for.inc86, !dbg !5449

for.inc86:                                        ; preds = %land.lhs.true65, %for.body54, %land.lhs.true72, %if.then81
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5450
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5361, metadata !DIExpression()), !dbg !5430
  br label %for.cond49, !dbg !5451, !llvm.loop !5452

for.inc88:                                        ; preds = %for.cond49
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5454
  br label %for.cond43, !dbg !5455, !llvm.loop !5456

for.inc90:                                        ; preds = %for.cond43
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5387
  %cfg3.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5458
  %.pre11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3.phi.trans.insert, align 8, !dbg !5387
  br label %for.cond, !dbg !5387, !llvm.loop !5459

for.end92:                                        ; preds = %for.cond
  %20 = load i32, i32* @optimize, align 4, !dbg !5461
  %tobool93 = icmp ne i32 %20, 0, !dbg !5461
  %tobool96 = icmp ne i8 %do_optimize, 0, !dbg !5463
  %or.cond = and i1 %tobool93, %tobool96, !dbg !5464
  br i1 %or.cond, label %if.then97, label %if.end209, !dbg !5464

if.then97:                                        ; preds = %for.end92
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call98 = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !5465
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !5343, metadata !DIExpression()), !dbg !5379
  br label %for.cond99, !dbg !5465

for.cond99:                                       ; preds = %for.inc206, %if.then97
  %update_vops.0 = phi i8 [ 0, %if.then97 ], [ %update_vops.3, %for.inc206 ], !dbg !5467
  %var.0 = phi %union.tree_node* [ %call98, %if.then97 ], [ %call207, %for.inc206 ], !dbg !5468
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !5343, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %update_vops.0, metadata !5349, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call100 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !5469
  %tobool101 = icmp eq i8 %call100, 0, !dbg !5469
  br i1 %tobool101, label %for.body103, label %if.end209.loopexit, !dbg !5465

for.body103:                                      ; preds = %for.cond99
  %call104 = call fastcc zeroext i8 @is_global_var(%union.tree_node* %var.0) #8, !dbg !5471
  %tobool106 = icmp eq i8 %call104, 0, !dbg !5471
  br i1 %tobool106, label %lor.lhs.false107, label %for.inc206, !dbg !5474

lor.lhs.false107:                                 ; preds = %for.body103
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5475
  %bf.load109 = load i64, i64* %21, align 8, !dbg !5475
  %bf.cast1111 = and i64 %bf.load109, 65535, !dbg !5476
  %cmp112 = icmp eq i64 %bf.cast1111, 36, !dbg !5476
  br i1 %cmp112, label %for.inc206, label %lor.lhs.false114, !dbg !5477

lor.lhs.false114:                                 ; preds = %lor.lhs.false107
  %uid116 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5478
  %22 = load i32, i32* %uid116, align 4, !dbg !5478
  %call117 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %22) #6, !dbg !5479
  %tobool118 = icmp eq i32 %call117, 0, !dbg !5479
  br i1 %tobool118, label %if.end120, label %for.inc206, !dbg !5480

if.end120:                                        ; preds = %lor.lhs.false114
  %bf.load122 = load i64, i64* %21, align 8, !dbg !5481
  %bf.cast1242 = and i64 %bf.load122, 262144, !dbg !5481
  %tobool125 = icmp eq i64 %bf.cast1242, 0, !dbg !5481
  br i1 %tobool125, label %if.end147, label %land.lhs.true126, !dbg !5483

land.lhs.true126:                                 ; preds = %if.end120
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5484
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5484
  %call127 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %23) #6, !dbg !5485
  %tobool128 = icmp eq i8 %call127, 0, !dbg !5485
  br i1 %tobool128, label %if.then134, label %lor.lhs.false129, !dbg !5486

lor.lhs.false129:                                 ; preds = %land.lhs.true126
  %24 = load i32, i32* %uid116, align 4, !dbg !5487
  %call132 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call1, i32 %24) #6, !dbg !5488
  %tobool133 = icmp eq i32 %call132, 0, !dbg !5488
  br i1 %tobool133, label %if.then134, label %if.end147, !dbg !5489

if.then134:                                       ; preds = %lor.lhs.false129, %land.lhs.true126
  %bf.load136 = load i64, i64* %21, align 8, !dbg !5490
  %bf.clear137 = and i64 %bf.load136, -262145, !dbg !5490
  store i64 %bf.clear137, i64* %21, align 8, !dbg !5490
  %call138 = call zeroext i8 @is_gimple_reg(%union.tree_node* %var.0) #6, !dbg !5492
  %tobool139 = icmp eq i8 %call138, 0, !dbg !5492
  br i1 %tobool139, label %if.end141, label %if.then140, !dbg !5494

if.then140:                                       ; preds = %if.then134
  call void @mark_sym_for_renaming(%union.tree_node* %var.0) #6, !dbg !5495
  br label %if.end141, !dbg !5495

if.end141:                                        ; preds = %if.then134, %if.then140
  call void @llvm.dbg.value(metadata i8 1, metadata !5349, metadata !DIExpression()), !dbg !5379
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5496
  %tobool142 = icmp eq %struct._IO_FILE* %25, null, !dbg !5496
  br i1 %tobool142, label %if.end147, label %if.then143, !dbg !5498

if.then143:                                       ; preds = %if.end141
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !5499
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5501
  call void @print_generic_expr(%struct._IO_FILE* %26, %union.tree_node* %var.0, i32 0) #6, !dbg !5502
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5503
  %call145 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5504
  br label %if.end147, !dbg !5505

if.end147:                                        ; preds = %lor.lhs.false129, %if.end141, %if.end120, %if.then143
  %update_vops.1 = phi i8 [ %update_vops.0, %lor.lhs.false129 ], [ %update_vops.0, %if.end120 ], [ 1, %if.then143 ], [ 1, %if.end141 ], !dbg !5379
  call void @llvm.dbg.value(metadata i8 %update_vops.1, metadata !5349, metadata !DIExpression()), !dbg !5379
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5506
  %28 = bitcast i40* %gimple_reg_flag to i64*, !dbg !5506
  %bf.load148 = load i64, i64* %28, align 8, !dbg !5506
  %bf.cast1513 = and i64 %bf.load148, 134217728, !dbg !5506
  %tobool152 = icmp eq i64 %bf.cast1513, 0, !dbg !5506
  br i1 %tobool152, label %land.lhs.true153, label %for.inc206, !dbg !5508

land.lhs.true153:                                 ; preds = %if.end147
  %29 = load i32, i32* %uid116, align 4, !dbg !5509
  %call156 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call1, i32 %29) #6, !dbg !5510
  %tobool157 = icmp eq i32 %call156, 0, !dbg !5510
  br i1 %tobool157, label %land.lhs.true158, label %for.inc206, !dbg !5511

land.lhs.true158:                                 ; preds = %land.lhs.true153
  %type160 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5512
  %30 = bitcast %union.tree_node** %type160 to i64**, !dbg !5512
  %31 = load i64*, i64** %30, align 8, !dbg !5512
  %bf.load162 = load i64, i64* %31, align 8, !dbg !5512
  %bf.cast1644 = and i64 %bf.load162, 65535, !dbg !5513
  %cmp165 = icmp eq i64 %bf.cast1644, 13, !dbg !5513
  br i1 %cmp165, label %land.lhs.true176, label %lor.lhs.false167, !dbg !5514

lor.lhs.false167:                                 ; preds = %land.lhs.true158
  %cmp174 = icmp eq i64 %bf.cast1644, 14, !dbg !5515
  br i1 %cmp174, label %land.lhs.true176, label %for.inc206, !dbg !5516

land.lhs.true176:                                 ; preds = %lor.lhs.false167, %land.lhs.true158
  %bf.load178 = load i64, i64* %21, align 8, !dbg !5517
  %bf.cast1816 = and i64 %bf.load178, 524288, !dbg !5517
  %tobool182 = icmp eq i64 %bf.cast1816, 0, !dbg !5517
  br i1 %tobool182, label %land.lhs.true183, label %for.inc206, !dbg !5518

land.lhs.true183:                                 ; preds = %land.lhs.true176
  %bf.cast1877 = and i64 %bf.load178, 65535, !dbg !5519
  %cmp188 = icmp eq i64 %bf.cast1877, 32, !dbg !5519
  br i1 %cmp188, label %lor.lhs.false190, label %if.then195, !dbg !5520

lor.lhs.false190:                                 ; preds = %land.lhs.true183
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5521
  %32 = bitcast i24* %hard_register to i32*, !dbg !5521
  %bf.load191 = load i32, i32* %32, align 8, !dbg !5521
  %bf.clear193 = and i32 %bf.load191, 2, !dbg !5521
  %tobool194 = icmp eq i32 %bf.clear193, 0, !dbg !5521
  br i1 %tobool194, label %if.then195, label %for.inc206, !dbg !5522

if.then195:                                       ; preds = %lor.lhs.false190, %land.lhs.true183
  %bf.load198 = load i64, i64* %28, align 8, !dbg !5523
  %bf.set = or i64 %bf.load198, 134217728, !dbg !5523
  store i64 %bf.set, i64* %28, align 8, !dbg !5523
  call void @mark_sym_for_renaming(%union.tree_node* %var.0) #6, !dbg !5525
  call void @llvm.dbg.value(metadata i8 1, metadata !5349, metadata !DIExpression()), !dbg !5379
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5526
  %tobool200 = icmp eq %struct._IO_FILE* %33, null, !dbg !5526
  br i1 %tobool200, label %for.inc206, label %if.then201, !dbg !5528

if.then201:                                       ; preds = %if.then195
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %33, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !5529
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5531
  call void @print_generic_expr(%struct._IO_FILE* %34, %union.tree_node* %var.0, i32 0) #6, !dbg !5532
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5533
  %call203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5534
  br label %for.inc206, !dbg !5535

for.inc206:                                       ; preds = %if.then195, %lor.lhs.false190, %land.lhs.true176, %land.lhs.true153, %if.end147, %lor.lhs.false114, %for.body103, %lor.lhs.false167, %if.then201, %lor.lhs.false107
  %update_vops.3 = phi i8 [ %update_vops.0, %lor.lhs.false114 ], [ %update_vops.0, %lor.lhs.false107 ], [ %update_vops.0, %for.body103 ], [ %update_vops.1, %if.end147 ], [ %update_vops.1, %land.lhs.true153 ], [ %update_vops.1, %land.lhs.true176 ], [ %update_vops.1, %lor.lhs.false190 ], [ %update_vops.1, %lor.lhs.false167 ], [ 1, %if.then201 ], [ 1, %if.then195 ], !dbg !5467
  call void @llvm.dbg.value(metadata i8 %update_vops.3, metadata !5349, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call207 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #8, !dbg !5469
  call void @llvm.dbg.value(metadata %union.tree_node* %call207, metadata !5343, metadata !DIExpression()), !dbg !5379
  br label %for.cond99, !dbg !5469, !llvm.loop !5536

if.end209.loopexit:                               ; preds = %for.cond99
  %update_vops.0.lcssa = phi i8 [ %update_vops.0, %for.cond99 ], !dbg !5467
  call void @llvm.dbg.value(metadata i8 %update_vops.0.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %update_vops.0.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %update_vops.0.lcssa, metadata !5349, metadata !DIExpression()), !dbg !5379
  br label %if.end209, !dbg !5538

if.end209:                                        ; preds = %if.end209.loopexit, %for.end92
  %update_vops.4 = phi i8 [ 0, %for.end92 ], [ %update_vops.0.lcssa, %if.end209.loopexit ], !dbg !5467
  call void @llvm.dbg.value(metadata i8 %update_vops.4, metadata !5349, metadata !DIExpression()), !dbg !5379
  %tobool210 = icmp eq i8 %update_vops.4, 0, !dbg !5538
  br i1 %tobool210, label %if.end245, label %if.then211, !dbg !5539

if.then211:                                       ; preds = %if.end209
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5540
  %cfg213 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !5540
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg213, align 8, !dbg !5540
  %x_entry_block_ptr214 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 0, !dbg !5540
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr214, align 8, !dbg !5540
  %39 = bitcast %struct.gimple_stmt_iterator* %tmp223 to i8*, !dbg !5541
  br label %for.cond216, !dbg !5540

for.cond216:                                      ; preds = %for.inc242, %if.then211
  %40 = phi %struct.control_flow_graph* [ %37, %if.then211 ], [ %.pre13, %for.inc242 ], !dbg !5542
  %.pn10 = phi %struct.basic_block_def* [ %38, %if.then211 ], [ %bb.1, %for.inc242 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn10, i64 0, i32 6, !dbg !5543
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5543
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5346, metadata !DIExpression()), !dbg !5379
  %x_exit_block_ptr219 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i64 0, i32 1, !dbg !5542
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr219, align 8, !dbg !5542
  %cmp220 = icmp eq %struct.basic_block_def* %bb.1, %41, !dbg !5542
  br i1 %cmp220, label %for.end244, label %for.body222, !dbg !5540

for.body222:                                      ; preds = %for.cond216
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #7, !dbg !5544
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp223, %struct.basic_block_def* %bb.1) #8, !dbg !5544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %39, i64 24, i1 false), !dbg !5544
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #7, !dbg !5544
  br label %for.cond224, !dbg !5545

for.cond224:                                      ; preds = %for.inc240, %for.body222
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call225 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5546
  %tobool226 = icmp eq i8 %call225, 0, !dbg !5547
  br i1 %tobool226, label %for.body228, label %for.inc242, !dbg !5548

for.body228:                                      ; preds = %for.cond224
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %call230 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5549
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call230, metadata !5371, metadata !DIExpression()), !dbg !5550
  %call231 = call fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %call230) #8, !dbg !5551
  %tobool233 = icmp eq i8 %call231, 0, !dbg !5551
  br i1 %tobool233, label %lor.lhs.false234, label %if.then238, !dbg !5553

lor.lhs.false234:                                 ; preds = %for.body228
  %call235 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call230) #8, !dbg !5554
  %tobool237 = icmp eq i8 %call235, 0, !dbg !5554
  br i1 %tobool237, label %for.inc240, label %if.then238, !dbg !5555

if.then238:                                       ; preds = %lor.lhs.false234, %for.body228
  call fastcc void @update_stmt(%union.gimple_statement_d* %call230) #8, !dbg !5556
  br label %for.inc240, !dbg !5556

for.inc240:                                       ; preds = %lor.lhs.false234, %if.then238
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5557
  br label %for.cond224, !dbg !5558, !llvm.loop !5559

for.inc242:                                       ; preds = %for.cond224
  %.pre12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5542
  %cfg218.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre12, i64 0, i32 1, !dbg !5561
  %.pre13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg218.phi.trans.insert, align 8, !dbg !5542
  br label %for.cond216, !dbg !5542, !llvm.loop !5562

for.end244:                                       ; preds = %for.cond216
  call void @update_ssa(i32 2048) #6, !dbg !5564
  br label %if.end245, !dbg !5565

if.end245:                                        ; preds = %if.end209, %for.end244
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !5566
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5348, metadata !DIExpression()), !dbg !5379
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !5567
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5347, metadata !DIExpression()), !dbg !5379
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5568
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5568
  ret void, !dbg !5568
}

declare dso_local zeroext i8 @gimple_ior_addresses_taken(%struct.bitmap_head_def*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !5569 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5571, metadata !DIExpression()), !dbg !5572
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5573
  %bf.load = load i64, i64* %0, align 8, !dbg !5573
  %1 = trunc i64 %bf.load to i16, !dbg !5573
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5574

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5575

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5577
  ret i8 %retval.0, !dbg !5578
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5579 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5583, metadata !DIExpression()), !dbg !5584
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5585
  %0 = load i32, i32* %nargs, align 4, !dbg !5585
  ret i32 %0, !dbg !5586
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5587 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5591, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata i32 %i, metadata !5592, metadata !DIExpression()), !dbg !5593
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !5594
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5595
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5596
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5597 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5599, metadata !DIExpression()), !dbg !5600
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5601
  %tobool = icmp eq i8 %call, 0, !dbg !5601
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5602

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !5603
  %tobool2 = icmp ne %union.tree_node* %call1, null, !dbg !5602
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5604
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_var_map_heap_reserve(%struct.VEC_edge_var_map_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5605 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap** %vec_, metadata !5609, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 1, metadata !5610, metadata !DIExpression()), !dbg !5612
  %0 = load %struct.VEC_edge_var_map_heap*, %struct.VEC_edge_var_map_heap** %vec_, align 8, !dbg !5613
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %0, null, !dbg !5613
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5613

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_var_map_heap, %struct.VEC_edge_var_map_heap* %0, i64 0, i32 0, !dbg !5613
  br label %cond.end, !dbg !5613

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_var_map_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5613
  %call = tail call fastcc i32 @VEC_edge_var_map_base_space(%struct.VEC_edge_var_map_base* %cond, i32 1) #8, !dbg !5613
  %tobool1 = icmp eq i32 %call, 0, !dbg !5613
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5611, metadata !DIExpression()), !dbg !5612
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5613

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_edge_var_map_heap** %vec_ to i8**, !dbg !5614
  %2 = load i8*, i8** %1, align 8, !dbg !5614
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 24) #6, !dbg !5614
  store i8* %call3, i8** %1, align 8, !dbg !5614
  br label %if.end, !dbg !5614

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._edge_var_map* @VEC_edge_var_map_base_quick_push(%struct.VEC_edge_var_map_base* %vec_, %struct._edge_var_map* %obj_) unnamed_addr #0 !dbg !5616 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_base* %vec_, metadata !5620, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %obj_, metadata !5621, metadata !DIExpression()), !dbg !5623
  %num1 = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 0, !dbg !5624
  %0 = load i32, i32* %num1, align 8, !dbg !5624
  %inc = add i32 %0, 1, !dbg !5624
  store i32 %inc, i32* %num1, align 8, !dbg !5624
  %idxprom = zext i32 %0 to i64, !dbg !5624
  %arrayidx = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5624
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %arrayidx, metadata !5622, metadata !DIExpression()), !dbg !5623
  %tobool = icmp eq %struct._edge_var_map* %obj_, null, !dbg !5625
  br i1 %tobool, label %if.end, label %if.then, !dbg !5624

if.then:                                          ; preds = %entry
  %1 = bitcast %struct._edge_var_map* %arrayidx to i8*, !dbg !5625
  %2 = bitcast %struct._edge_var_map* %obj_ to i8*, !dbg !5625
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5625
  br label %if.end, !dbg !5625

if.end:                                           ; preds = %entry, %if.then
  ret %struct._edge_var_map* %arrayidx, !dbg !5624
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_var_map_base_space(%struct.VEC_edge_var_map_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5627 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_base* %vec_, metadata !5631, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.value(metadata i32 1, metadata !5632, metadata !DIExpression()), !dbg !5633
  %tobool = icmp eq %struct.VEC_edge_var_map_base* %vec_, null, !dbg !5634
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5634

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 1, !dbg !5634
  %0 = load i32, i32* %alloc, align 4, !dbg !5634
  %num = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 0, !dbg !5634
  %1 = load i32, i32* %num, align 8, !dbg !5634
  %cmp1 = icmp ne i32 %0, %1, !dbg !5634
  %phitmp = zext i1 %cmp1 to i32, !dbg !5634
  br label %cond.end, !dbg !5634

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5634
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5635 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5639, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i32 %index, metadata !5640, metadata !DIExpression()), !dbg !5641
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5642
  %0 = load i32, i32* %capacity, align 8, !dbg !5642
  %cmp = icmp ult i32 %0, %index, !dbg !5642
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5642

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5642
  br label %cond.end, !dbg !5642

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5643
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5643
  ret %struct.phi_arg_d* %arrayidx, !dbg !5644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5645 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5649, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata i32 %i, metadata !5650, metadata !DIExpression()), !dbg !5651
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5652
  %tobool = icmp eq i8 %call, 0, !dbg !5652
  br i1 %tobool, label %return, label %if.then, !dbg !5654

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5655
  %idxprom = zext i32 %i to i64, !dbg !5655
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5655
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5655
  br label %return, !dbg !5657

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5658
  ret %union.tree_node* %retval.0, !dbg !5659
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5660 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5662, metadata !DIExpression()), !dbg !5663
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5664
  %cmp = icmp eq i32 %call, 0, !dbg !5665
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5666

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5667
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5668
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5670 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5674, metadata !DIExpression()), !dbg !5676
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !5677
  %idxprom = zext i32 %call to i64, !dbg !5678
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5678
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5678
  call void @llvm.dbg.value(metadata i64 %0, metadata !5675, metadata !DIExpression()), !dbg !5676
  %cmp = icmp eq i64 %0, 0, !dbg !5679
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5679

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5679
  br label %cond.end, !dbg !5679

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5680
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5681
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5682
  ret %union.tree_node** %2, !dbg !5683
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5684 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5688, metadata !DIExpression()), !dbg !5689
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5690
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !5691
  ret i32 %call1, !dbg !5692
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5693 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5697, metadata !DIExpression()), !dbg !5698
  %idxprom = zext i32 %code to i64, !dbg !5699
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5699
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5699
  ret i32 %0, !dbg !5700
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5701 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5705, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5706, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5708, metadata !DIExpression()), !dbg !5713
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !5714
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !5709, metadata !DIExpression()), !dbg !5713
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #8, !dbg !5715
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5710, metadata !DIExpression()), !dbg !5713
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !5716
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5716
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5717
  %tobool = icmp eq i8 %call1, 0, !dbg !5717
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !5717
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5712, metadata !DIExpression()), !dbg !5713
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #8, !dbg !5718
  %cmp = icmp eq i32 %call2, 16, !dbg !5720
  br i1 %cmp, label %if.then, label %if.else, !dbg !5721

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !5722
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !5707, metadata !DIExpression()), !dbg !5713
  br label %for.cond, !dbg !5722

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !5725
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5707, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5726
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5726
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !5722

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !5728
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !5730
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !5731

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #8, !dbg !5732
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !5708, metadata !DIExpression()), !dbg !5713
  br label %for.inc, !dbg !5733

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5726
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !5707, metadata !DIExpression()), !dbg !5713
  br label %for.cond, !dbg !5726, !llvm.loop !5734

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !5736

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !5738
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !5707, metadata !DIExpression()), !dbg !5713
  br label %for.cond17, !dbg !5738

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !5742
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !5707, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5743
  %tobool19 = icmp eq i8 %call18, 0, !dbg !5743
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !5738

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #8, !dbg !5745
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !5747
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !5748

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #8, !dbg !5749
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !5708, metadata !DIExpression()), !dbg !5713
  br label %for.inc28, !dbg !5750

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5713
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5743
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !5707, metadata !DIExpression()), !dbg !5713
  br label %for.cond17, !dbg !5743, !llvm.loop !5751

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #8, !dbg !5753
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !5707, metadata !DIExpression()), !dbg !5713
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !5755
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !5756

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #8, !dbg !5757
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !5760
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !5761

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #8, !dbg !5762
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !5708, metadata !DIExpression()), !dbg !5713
  br label %if.end44, !dbg !5763

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  br label %if.end44, !dbg !5764

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5708, metadata !DIExpression()), !dbg !5713
  br label %if.end44, !dbg !5764

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !5766
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !5708, metadata !DIExpression()), !dbg !5713
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !5764
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5764
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !5767
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !5768

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5769
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #8, !dbg !5770
  br label %if.end49, !dbg !5770

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5771
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #8, !dbg !5772
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5773
  ret void, !dbg !5773
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !5774 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5776, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5777, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5778, metadata !DIExpression()), !dbg !5781
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !5782
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5779, metadata !DIExpression()), !dbg !5781
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5783
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5784
  store i8 0, i8* %done, align 8, !dbg !5785
  %and = and i32 %flags, 5, !dbg !5786
  %cmp = icmp eq i32 %and, 0, !dbg !5786
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5786

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5786
  br label %cond.end, !dbg !5786

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5787
  %tobool = icmp eq i8 %call1, 0, !dbg !5787
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !5780, metadata !DIExpression()), !dbg !5781
  %and3 = and i32 %cond2, %flags, !dbg !5788
  %cmp4 = icmp eq i32 %and3, 0, !dbg !5790
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5791

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !5792
  br label %cleanup, !dbg !5794

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5795
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5796
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !5797
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5798
  store i32 %call7, i32* %num_phi, align 4, !dbg !5799
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5800
  store i32 2, i32* %iter_type, align 4, !dbg !5801
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5802
  br label %cleanup, !dbg !5803

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !5781
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5804
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !5805 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !5809, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !5811, metadata !DIExpression()), !dbg !5812
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !5813
  br i1 %cmp, label %if.end3, label %if.then, !dbg !5815

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !5816
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !5816
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !5819
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !5820

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #8, !dbg !5821
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #8, !dbg !5823
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !5811, metadata !DIExpression()), !dbg !5812
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !5811, metadata !DIExpression()), !dbg !5812
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !5824
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !5825 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5829, metadata !DIExpression()), !dbg !5830
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5831
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5831
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !5833
  br i1 %cmp, label %return, label %if.end, !dbg !5834

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5835
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5835
  %2 = load i64, i64* %1, align 8, !dbg !5835
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5836
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !5837
  store i64 %2, i64* %3, align 8, !dbg !5837
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !5838
  %5 = load i64, i64* %4, align 8, !dbg !5838
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !5839
  %7 = load i64*, i64** %6, align 8, !dbg !5839
  store i64 %5, i64* %7, align 8, !dbg !5840
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5841
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !5842
  br label %return, !dbg !5843

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !5843
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !5844 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5848, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !5849, metadata !DIExpression()), !dbg !5850
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5851
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5852
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !5853
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5853
  %1 = load i64, i64* %0, align 8, !dbg !5853
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5854
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !5855
  store i64 %1, i64* %2, align 8, !dbg !5855
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !5856
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !5857
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !5858
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !5859
  ret void, !dbg !5860
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5861 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5865, metadata !DIExpression()), !dbg !5866
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5867
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5868
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5869
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !5870
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5871
  store i32 0, i32* %iter_type, align 4, !dbg !5872
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5873
  store i32 0, i32* %phi_i, align 8, !dbg !5874
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5875
  store i32 0, i32* %num_phi, align 4, !dbg !5876
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5877
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5878
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5879
  store i8 1, i8* %done, align 8, !dbg !5880
  ret void, !dbg !5881
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !5882 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !5887, metadata !DIExpression()), !dbg !5889
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !5890
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5892

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5893
  %bf.load = load i64, i64* %0, align 8, !dbg !5893
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5894
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5894
  br i1 %cmp, label %if.else, label %if.then, !dbg !5895

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5896
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5897
  br label %if.end, !dbg !5898

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5899
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5899
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !5888, metadata !DIExpression()), !dbg !5889
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #8, !dbg !5901
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5902
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !5903 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5907, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 1, metadata !5908, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5909, metadata !DIExpression()), !dbg !5910
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5911
  %tobool = icmp eq i8 %call, 0, !dbg !5911
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5911

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5911
  %cmp = icmp ugt i32 %call1, 1, !dbg !5911
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5911

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5911
  br label %cond.end, !dbg !5911

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5912
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 1, !dbg !5912
  store %union.tree_node* null, %union.tree_node** %arrayidx, align 8, !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5915 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5917, metadata !DIExpression()), !dbg !5918
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5919
  %0 = load i32, i32* %num_ops, align 4, !dbg !5919
  ret i32 %0, !dbg !5920
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5921 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5923, metadata !DIExpression()), !dbg !5924
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5925
  ret %union.tree_node** %result, !dbg !5926
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5927 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5931, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5932, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5933, metadata !DIExpression()), !dbg !5934
  %0 = and i32 %flags, 10, !dbg !5935
  %1 = icmp eq i32 %0, 8, !dbg !5935
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5935

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5935
  %3 = icmp eq i32 %2, 4, !dbg !5935
  br i1 %3, label %cond.true, label %cond.end, !dbg !5935

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5935
  br label %cond.end, !dbg !5935

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5936
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5937

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5938
  br label %cond.end12, !dbg !5937

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5937
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5939
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5940
  %and14 = and i32 %flags, 8, !dbg !5941
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5941
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5943

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5944
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5945

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !5946
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5947
  br i1 %cmp, label %if.end, label %if.then, !dbg !5948

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5949
  %6 = load i64*, i64** %5, align 8, !dbg !5949
  %7 = load i64, i64* %6, align 8, !dbg !5950
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5951
  store i64 %7, i64* %8, align 8, !dbg !5951
  br label %if.end, !dbg !5952

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5953
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5953
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5954

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5955
  br label %cond.end28, !dbg !5954

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5954
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5956
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5957
  %and30 = and i32 %flags, 4, !dbg !5958
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5958
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5960

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5961
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5962

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !5963
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5964
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5965

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5966
  %11 = load i64*, i64** %10, align 8, !dbg !5966
  %12 = load i64, i64* %11, align 8, !dbg !5967
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5968
  store i64 %12, i64* %13, align 8, !dbg !5968
  br label %if.end42, !dbg !5969

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5970
  store i8 0, i8* %done, align 8, !dbg !5971
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5972
  store i32 0, i32* %phi_i, align 8, !dbg !5973
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5974
  store i32 0, i32* %num_phi, align 4, !dbg !5975
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5976
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5977
  ret void, !dbg !5978
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5979 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5983, metadata !DIExpression()), !dbg !5984
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5985
  %tobool = icmp eq i8 %call, 0, !dbg !5985
  br i1 %tobool, label %return, label %if.end, !dbg !5987

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5988
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5988
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5988
  br label %return, !dbg !5989

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5984
  ret %struct.def_optype_d* %retval.0, !dbg !5990
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5991 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5995, metadata !DIExpression()), !dbg !5996
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5997
  %tobool = icmp eq i8 %call, 0, !dbg !5997
  br i1 %tobool, label %return, label %if.end, !dbg !5999

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6000
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6000
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6000
  br label %return, !dbg !6001

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5996
  ret %struct.use_optype_d* %retval.0, !dbg !6002
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6003 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6008
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6008
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6008

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6008
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6008
  br label %cond.end, !dbg !6008

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6008
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !6008
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6009
  %conv3 = zext i1 %cmp to i8, !dbg !6010
  ret i8 %conv3, !dbg !6011
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6012 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6017
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6017
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6017

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6017
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6017
  br label %cond.end, !dbg !6017

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6017
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !6017
  ret %struct.edge_def* %call2, !dbg !6018
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6019 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6025, metadata !DIExpression()), !dbg !6026
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6027
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6027

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6027
  %0 = load i32, i32* %num, align 8, !dbg !6027
  br label %cond.end, !dbg !6027

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6027
  ret i32 %cond, !dbg !6027
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6028 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6033
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6033

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6033
  br label %cond.end, !dbg !6033

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6034
  ret %struct.VEC_edge_gc* %0, !dbg !6035
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6036 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6040, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6041, metadata !DIExpression()), !dbg !6042
  br label %land.end, !dbg !6043

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6043
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6043
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6043
  ret %struct.edge_def* %0, !dbg !6043
}

declare dso_local void @print_generic_stmt(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6044 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6051, metadata !DIExpression()), !dbg !6052
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6053
  %0 = load i32, i32* %flags, align 8, !dbg !6053
  %and = and i32 %0, 512, !dbg !6054
  %tobool = icmp eq i32 %and, 0, !dbg !6054
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6055

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6056
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6056
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6057
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6058

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6059
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6059
  br label %cond.end, !dbg !6058

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6058
  ret %struct.gimple_seq_d* %cond, !dbg !6060
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6061 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6068, metadata !DIExpression()), !dbg !6069
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6070
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6070

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6071
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6071
  br label %cond.end, !dbg !6070

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6070
  ret %struct.gimple_seq_node_d* %cond, !dbg !6072
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6073 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6075, metadata !DIExpression()), !dbg !6076
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6077
  %cmp = icmp ugt i32 %call, 5, !dbg !6078
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6079

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6080
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6081
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vop(%struct.function* %fun) unnamed_addr #0 !dbg !6083 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !6087, metadata !DIExpression()), !dbg !6088
  %tobool = icmp eq %struct.function* %fun, null, !dbg !6089
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6089

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !6089
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !6089
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !6089
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !6089

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6089
  %gimple_df2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !6088
  %.pre = load %struct.gimple_df*, %struct.gimple_df** %gimple_df2.phi.trans.insert, align 8, !dbg !6090
  br label %cond.end, !dbg !6089

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi %struct.gimple_df* [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !6090
  %vop = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 3, !dbg !6091
  %2 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !6091
  ret %union.tree_node* %2, !dbg !6092
}

declare dso_local zeroext i8 @verify_imm_links(%struct._IO_FILE*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %table) unnamed_addr #0 !dbg !6093 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !6098, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !6099, metadata !DIExpression()), !dbg !6102
  %htab = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 0, !dbg !6103
  store %struct.htab* %table, %struct.htab** %htab, align 8, !dbg !6104
  %entries = getelementptr inbounds %struct.htab, %struct.htab* %table, i64 0, i32 3, !dbg !6105
  %0 = bitcast i8*** %entries to i64*, !dbg !6105
  %1 = load i64, i64* %0, align 8, !dbg !6105
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !6106
  %2 = bitcast i8*** %slot to i64*, !dbg !6107
  store i64 %1, i64* %2, align 8, !dbg !6107
  %.cast = inttoptr i64 %1 to i8**, !dbg !6108
  %call = tail call i64 @htab_size(%struct.htab* %table) #6, !dbg !6109
  %add.ptr = getelementptr inbounds i8*, i8** %.cast, i64 %call, !dbg !6110
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !6111
  store i8** %add.ptr, i8*** %limit, align 8, !dbg !6112
  %.pre3 = load i8**, i8*** %slot, align 8, !dbg !6113
  br label %do.body, !dbg !6114

do.body:                                          ; preds = %do.cond, %entry
  %3 = phi i8** [ %incdec.ptr, %do.cond ], [ %.pre3, %entry ]
  %indvars2 = bitcast i8** %3 to i64*, !dbg !6113
  %4 = load i64, i64* %indvars2, align 8, !dbg !6115
  %switch1 = icmp ult i64 %4, 2, !dbg !6116
  br i1 %switch1, label %do.cond, label %do.end

do.cond:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !6118
  store i8** %incdec.ptr, i8*** %slot, align 8, !dbg !6118
  %cmp6 = icmp ult i8** %incdec.ptr, %add.ptr, !dbg !6119
  br i1 %cmp6, label %do.body, label %do.end, !dbg !6120, !llvm.loop !6121

do.end:                                           ; preds = %do.body, %do.cond
  %5 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ]
  %6 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ], !dbg !6123
  %cmp9 = icmp ult i8** %6, %add.ptr, !dbg !6125
  br i1 %cmp9, label %if.then10, label %return, !dbg !6126

if.then10:                                        ; preds = %do.end
  %7 = load i8*, i8** %5, align 8, !dbg !6127
  br label %return, !dbg !6128

return:                                           ; preds = %do.end, %if.then10
  %retval.0 = phi i8* [ %7, %if.then10 ], [ null, %do.end ], !dbg !6102
  ret i8* %retval.0, !dbg !6129
}

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !6130 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !6136, metadata !DIExpression()), !dbg !6137
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !6138
  %0 = load i8**, i8*** %slot, align 8, !dbg !6138
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !6140
  %1 = load i8**, i8*** %limit, align 8, !dbg !6140
  %cmp = icmp uge i8** %0, %1, !dbg !6141
  %. = zext i1 %cmp to i8, !dbg !6137
  ret i8 %., !dbg !6142
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !6143 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !6147, metadata !DIExpression()), !dbg !6150
  %slot1 = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !6151
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !6150
  %.pre = load i8**, i8*** %slot1, align 8, !dbg !6152
  %.pre3 = load i8**, i8*** %limit, align 8, !dbg !6153
  br label %while.cond, !dbg !6154

while.cond:                                       ; preds = %while.body, %entry
  %0 = phi i8** [ %.pre, %entry ], [ %incdec.ptr, %while.body ], !dbg !6152
  %retval.0 = phi i8* [ undef, %entry ], [ %spec.select2, %while.body ]
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !6152
  store i8** %incdec.ptr, i8*** %slot1, align 8, !dbg !6152
  %cmp = icmp ult i8** %incdec.ptr, %.pre3, !dbg !6155
  br i1 %cmp, label %while.body, label %return, !dbg !6154

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %incdec.ptr, align 8, !dbg !6156
  call void @llvm.dbg.value(metadata i8* %1, metadata !6148, metadata !DIExpression()), !dbg !6157
  %switch1 = icmp ult i8* %1, inttoptr (i64 2 to i8*), !dbg !6158
  %spec.select2 = select i1 %switch1, i8* %retval.0, i8* %1, !dbg !6158
  br i1 %switch1, label %while.cond, label %return, !llvm.loop !6160

return:                                           ; preds = %while.cond, %while.body
  %retval.2 = phi i8* [ %spec.select2, %while.body ], [ null, %while.cond ], !dbg !6150
  ret i8* %retval.2, !dbg !6162
}

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @warn_uninitialized_vars(i8 zeroext %warn_possibly_uninitialized) unnamed_addr #5 !dbg !6163 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %data = alloca %struct.walk_data, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %wi = alloca %struct.walk_stmt_info, align 8
  call void @llvm.dbg.value(metadata i8 %warn_possibly_uninitialized, metadata !6167, metadata !DIExpression()), !dbg !6178
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6179
  %1 = bitcast %struct.walk_data* %data to i8*, !dbg !6180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6180
  %warn_possibly_uninitialized1 = getelementptr inbounds %struct.walk_data, %struct.walk_data* %data, i64 0, i32 2, !dbg !6181
  store i8 %warn_possibly_uninitialized, i8* %warn_possibly_uninitialized1, align 1, !dbg !6182
  tail call void @calculate_dominance_info(i32 2) #6, !dbg !6183
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6184
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !6184
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6184
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !6184
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6184
  %always_executed = getelementptr inbounds %struct.walk_data, %struct.walk_data* %data, i64 0, i32 1, !dbg !6185
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6186
  %6 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !6187
  %stmt = getelementptr inbounds %struct.walk_data, %struct.walk_data* %data, i64 0, i32 0, !dbg !6187
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !6187
  %7 = bitcast i8** %info to %struct.walk_data**, !dbg !6187
  br label %for.cond, !dbg !6184

for.cond:                                         ; preds = %for.inc18, %entry
  %8 = phi %struct.control_flow_graph* [ %3, %entry ], [ %.pre1, %for.inc18 ], !dbg !6188
  %.pn = phi %struct.basic_block_def* [ %4, %entry ], [ %bb.0, %for.inc18 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6189
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6189
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6169, metadata !DIExpression()), !dbg !6178
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !6188
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6188
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !6188
  br i1 %cmp, label %for.end20, label %for.body, !dbg !6184

for.body:                                         ; preds = %for.cond
  %x_entry_block_ptr6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !6190
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr6, align 8, !dbg !6190
  %call = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %10) #8, !dbg !6191
  %call7 = call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %call, %struct.basic_block_def* %bb.0) #6, !dbg !6192
  store i8 %call7, i8* %always_executed, align 8, !dbg !6193
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !6194
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #8, !dbg !6194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !6194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !6194
  br label %for.cond8, !dbg !6195

for.cond8:                                        ; preds = %cleanup, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6168, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  %call9 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !6196
  %tobool = icmp eq i8 %call9, 0, !dbg !6197
  br i1 %tobool, label %for.body10, label %for.inc18, !dbg !6198

for.body10:                                       ; preds = %for.cond8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #7, !dbg !6199
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6168, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  %call11 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !6200
  store %union.gimple_statement_d* %call11, %union.gimple_statement_d** %stmt, align 8, !dbg !6201
  %call13 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call11) #8, !dbg !6202
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6202
  br i1 %tobool14, label %if.end, label %cleanup, !dbg !6204

if.end:                                           ; preds = %for.body10
  %call15 = call i8* @memset(i8* nonnull %6, i32 0, i64 56) #6, !dbg !6205
  store %struct.walk_data* %data, %struct.walk_data** %7, align 8, !dbg !6206
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6168, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  %call16 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !6171, metadata !DIExpression(DW_OP_deref)), !dbg !6187
  %call17 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %call16, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @warn_uninitialized_var, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !6208
  br label %cleanup, !dbg !6209

cleanup:                                          ; preds = %for.body10, %if.end
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #7, !dbg !6209
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6168, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !6210
  br label %for.cond8, !dbg !6211, !llvm.loop !6212

for.inc18:                                        ; preds = %for.cond8
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6188
  %cfg3.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6214
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3.phi.trans.insert, align 8, !dbg !6188
  br label %for.cond, !dbg !6188, !llvm.loop !6215

for.end20:                                        ; preds = %for.cond
  call void @free_dominance_info(i32 2) #6, !dbg !6217
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6218
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6218
  ret i32 undef, !dbg !6219
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6220 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6224, metadata !DIExpression()), !dbg !6225
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !6226
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6227
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6227
  ret %struct.basic_block_def* %0, !dbg !6228
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @warn_uninitialized_var(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data_) #5 !dbg !6229 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !6231, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !6232, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata i8* %data_, metadata !6233, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata i8* %data_, metadata !6234, metadata !DIExpression()), !dbg !6241
  %info = getelementptr inbounds i8, i8* %data_, i64 24, !dbg !6242
  %0 = bitcast i8* %info to %struct.walk_data**, !dbg !6242
  %1 = load %struct.walk_data*, %struct.walk_data** %0, align 8, !dbg !6242
  call void @llvm.dbg.value(metadata %struct.walk_data* %1, metadata !6235, metadata !DIExpression()), !dbg !6241
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !6243
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6236, metadata !DIExpression()), !dbg !6241
  %3 = getelementptr inbounds i8, i8* %data_, i64 41, !dbg !6244
  %4 = load i8, i8* %3, align 1, !dbg !6244
  %tobool = icmp eq i8 %4, 0, !dbg !6246
  br i1 %tobool, label %if.end13, label %if.then, !dbg !6247

if.then:                                          ; preds = %entry
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6248
  %bf.load = load i64, i64* %5, align 8, !dbg !6248
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !6248
  %cmp = icmp eq i64 %bf.cast5, 47, !dbg !6248
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !6248

lor.lhs.false:                                    ; preds = %if.then
  %cmp5 = icmp eq i64 %bf.cast5, 48, !dbg !6248
  br i1 %cmp5, label %if.end, label %lor.lhs.false6, !dbg !6248

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast5, 49, !dbg !6248
  br i1 %cmp11, label %if.end, label %cleanup78, !dbg !6251

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false, %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6252
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6252
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6236, metadata !DIExpression()), !dbg !6241
  br label %if.end13, !dbg !6253

if.end13:                                         ; preds = %entry, %if.end
  %t.0 = phi %union.tree_node* [ %6, %if.end ], [ %2, %entry ], !dbg !6241
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !6236, metadata !DIExpression()), !dbg !6241
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6254
  %bf.load15 = load i64, i64* %7, align 8, !dbg !6254
  %8 = trunc i64 %bf.load15 to i16, !dbg !6254
  switch i16 %8, label %sw.default [
    i16 121, label %sw.bb
    i16 32, label %sw.bb18
    i16 141, label %sw.bb42
    i16 43, label %sw.bb51
    i16 44, label %sw.bb51
  ], !dbg !6255

sw.bb:                                            ; preds = %if.end13
  store i32 0, i32* %walk_subtrees, align 4, !dbg !6256
  br label %cleanup78, !dbg !6257

sw.bb18:                                          ; preds = %if.end13
  %stmt = getelementptr inbounds %struct.walk_data, %struct.walk_data* %1, i64 0, i32 0, !dbg !6258
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6258
  %cmp19 = icmp eq %union.gimple_statement_d* %9, null, !dbg !6260
  br i1 %cmp19, label %cleanup, label %if.end21, !dbg !6261

if.end21:                                         ; preds = %sw.bb18
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* nonnull %9) #8, !dbg !6262
  %tobool23 = icmp eq i8 %call, 0, !dbg !6262
  br i1 %tobool23, label %if.end25, label %cleanup, !dbg !6264

if.end25:                                         ; preds = %if.end21
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6265
  %call27 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %10) #8, !dbg !6266
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call27, metadata !6237, metadata !DIExpression()), !dbg !6267
  %cmp28 = icmp eq %struct.ssa_use_operand_d* %call27, null, !dbg !6268
  br i1 %cmp28, label %cleanup, label %if.end30, !dbg !6270

if.end30:                                         ; preds = %if.end25
  %call31 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call27) #8, !dbg !6271
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !6240, metadata !DIExpression()), !dbg !6267
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6272
  %11 = bitcast i32* %var to %union.tree_node**, !dbg !6272
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !6272
  %cmp32 = icmp eq %union.tree_node* %t.0, %12, !dbg !6274
  br i1 %cmp32, label %lor.lhs.false33, label %cleanup, !dbg !6275

lor.lhs.false33:                                  ; preds = %if.end30
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6276
  %bf.load35 = load i64, i64* %13, align 8, !dbg !6276
  %bf.cast373 = and i64 %bf.load35, 4294967296, !dbg !6276
  %tobool38 = icmp ne i64 %bf.cast373, 0, !dbg !6276
  %spec.select = select i1 %tobool38, %union.tree_node* %call31, %union.tree_node* %t.0, !dbg !6277
  br label %cleanup, !dbg !6277

cleanup:                                          ; preds = %if.end30, %if.end21, %lor.lhs.false33, %if.end25, %sw.bb18
  %t.1 = phi %union.tree_node* [ %t.0, %sw.bb18 ], [ %t.0, %if.end21 ], [ %t.0, %if.end25 ], [ %t.0, %if.end30 ], [ %spec.select, %lor.lhs.false33 ], !dbg !6241
  %cleanup.dest.slot.0 = phi i1 [ false, %sw.bb18 ], [ false, %if.end21 ], [ false, %if.end25 ], [ false, %if.end30 ], [ %tobool38, %lor.lhs.false33 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !6236, metadata !DIExpression()), !dbg !6241
  br i1 %cleanup.dest.slot.0, label %sw.bb42, label %cleanup78

sw.bb42:                                          ; preds = %cleanup, %if.end13
  %t.2 = phi %union.tree_node* [ %t.0, %if.end13 ], [ %t.1, %cleanup ], !dbg !6278
  call void @llvm.dbg.value(metadata %union.tree_node* %t.2, metadata !6236, metadata !DIExpression()), !dbg !6241
  %always_executed = getelementptr inbounds %struct.walk_data, %struct.walk_data* %1, i64 0, i32 1, !dbg !6279
  %14 = load i8, i8* %always_executed, align 8, !dbg !6279
  %tobool43 = icmp eq i8 %14, 0, !dbg !6281
  br i1 %tobool43, label %if.else, label %if.then44, !dbg !6282

if.then44:                                        ; preds = %sw.bb42
  %15 = bitcast %struct.walk_data* %1 to i8**, !dbg !6283
  %16 = load i8*, i8** %15, align 8, !dbg !6283
  tail call fastcc void @warn_uninit(%union.tree_node* %t.2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0), i8* %16) #8, !dbg !6284
  br label %if.end50, !dbg !6284

if.else:                                          ; preds = %sw.bb42
  %warn_possibly_uninitialized = getelementptr inbounds %struct.walk_data, %struct.walk_data* %1, i64 0, i32 2, !dbg !6285
  %17 = load i8, i8* %warn_possibly_uninitialized, align 1, !dbg !6285
  %tobool46 = icmp eq i8 %17, 0, !dbg !6287
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !6288

if.then47:                                        ; preds = %if.else
  %18 = bitcast %struct.walk_data* %1 to i8**, !dbg !6289
  %19 = load i8*, i8** %18, align 8, !dbg !6289
  tail call fastcc void @warn_uninit(%union.tree_node* %t.2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.49, i64 0, i64 0), i8* %19) #8, !dbg !6290
  br label %if.end50, !dbg !6290

if.end50:                                         ; preds = %if.else, %if.then47, %if.then44
  store i32 0, i32* %walk_subtrees, align 4, !dbg !6291
  br label %cleanup78, !dbg !6292

sw.bb51:                                          ; preds = %if.end13, %if.end13
  %operands53 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6293
  %20 = bitcast %union.tree_node** %operands53 to i64**, !dbg !6293
  %21 = load i64*, i64** %20, align 8, !dbg !6293
  %bf.load56 = load i64, i64* %21, align 8, !dbg !6293
  %bf.cast582 = and i64 %bf.load56, 65535, !dbg !6295
  %cmp59 = icmp eq i64 %bf.cast582, 141, !dbg !6295
  br i1 %cmp59, label %if.then60, label %cleanup78, !dbg !6296

if.then60:                                        ; preds = %sw.bb51
  store i32 0, i32* %walk_subtrees, align 4, !dbg !6297
  br label %cleanup78, !dbg !6298

sw.default:                                       ; preds = %if.end13
  %bf.cast65 = and i64 %bf.load15, 65535, !dbg !6299
  %arrayidx66 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast65, !dbg !6299
  %22 = load i32, i32* %arrayidx66, align 4, !dbg !6299
  %cmp67 = icmp eq i32 %22, 2, !dbg !6299
  br i1 %cmp67, label %if.then76, label %lor.lhs.false68, !dbg !6299

lor.lhs.false68:                                  ; preds = %sw.default
  %cmp75 = icmp eq i32 %22, 3, !dbg !6299
  br i1 %cmp75, label %if.then76, label %cleanup78, !dbg !6301

if.then76:                                        ; preds = %lor.lhs.false68, %sw.default
  store i32 0, i32* %walk_subtrees, align 4, !dbg !6302
  br label %cleanup78, !dbg !6303

cleanup78:                                        ; preds = %sw.bb, %if.end50, %if.then60, %sw.bb51, %if.then76, %lor.lhs.false68, %lor.lhs.false6, %cleanup
  ret %union.tree_node* null, !dbg !6304
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6305 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6309, metadata !DIExpression()), !dbg !6310
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !6311
  %tobool = icmp eq i8 %call, 0, !dbg !6311
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6311

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6311
  br label %cond.end, !dbg !6311

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6312
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6312
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6312
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6312

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6312
  br label %cond.end5, !dbg !6312

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6312
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !6312
  ret %struct.edge_def* %call7, !dbg !6313
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6314 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6318, metadata !DIExpression()), !dbg !6319
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6320
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6320
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6320
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6320

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6320
  br label %cond.end, !dbg !6320

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6320
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !6320
  %cmp = icmp eq i32 %call, 1, !dbg !6321
  %conv2 = zext i1 %cmp to i8, !dbg !6320
  ret i8 %conv2, !dbg !6322
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6323 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6325, metadata !DIExpression()), !dbg !6326
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6327
  %cmp = icmp eq i32 %call, 8, !dbg !6328
  %conv1 = zext i1 %cmp to i8, !dbg !6327
  ret i8 %conv1, !dbg !6329
}

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_uninit(%union.tree_node* %t, i8* %gmsgid, i8* %data) unnamed_addr #5 !dbg !6330 {
entry:
  %xloc = alloca %struct.expanded_location, align 8
  %floc = alloca %struct.expanded_location, align 8
  %tmp = alloca %struct.expanded_location, align 8
  %tmp12 = alloca %struct.expanded_location, align 8
  %tmp30 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6334, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i8* %gmsgid, metadata !6335, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i8* %data, metadata !6336, metadata !DIExpression()), !dbg !6349
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6350
  %0 = bitcast i32* %var1 to %union.tree_node**, !dbg !6350
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6350
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6337, metadata !DIExpression()), !dbg !6349
  %2 = bitcast i8* %data to %union.gimple_statement_d*, !dbg !6351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !6338, metadata !DIExpression()), !dbg !6349
  %3 = bitcast %struct.expanded_location* %xloc to i8*, !dbg !6352
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !6352
  %4 = bitcast %struct.expanded_location* %floc to i8*, !dbg !6352
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !6352
  %call = tail call zeroext i8 @ssa_undefined_value_p(%union.tree_node* %t) #8, !dbg !6353
  %tobool = icmp eq i8 %call, 0, !dbg !6353
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6355

if.end:                                           ; preds = %entry
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6356
  %bf.load = load i64, i64* %5, align 8, !dbg !6356
  %bf.cast1 = and i64 %bf.load, 8388608, !dbg !6356
  %tobool2 = icmp eq i64 %bf.cast1, 0, !dbg !6356
  br i1 %tobool2, label %if.end4, label %cleanup, !dbg !6358

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %1) #8, !dbg !6359
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6359
  br i1 %tobool6, label %if.end8, label %cleanup, !dbg !6361

if.end8:                                          ; preds = %if.end4
  %cmp = icmp eq i8* %data, null, !dbg !6362
  br i1 %cmp, label %cond.false, label %land.lhs.true, !dbg !6363

land.lhs.true:                                    ; preds = %if.end8
  %call9 = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* nonnull %2) #8, !dbg !6364
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6364
  br i1 %tobool10, label %cond.false, label %cond.true, !dbg !6365

cond.true:                                        ; preds = %land.lhs.true
  %call11 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %2) #8, !dbg !6366
  br label %cond.end, !dbg !6365

cond.false:                                       ; preds = %land.lhs.true, %if.end8
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6367
  %6 = load i32, i32* %locus, align 8, !dbg !6367
  br label %cond.end, !dbg !6365

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %6, %cond.false ], !dbg !6365
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6339, metadata !DIExpression()), !dbg !6349
  %7 = bitcast %struct.expanded_location* %tmp to i8*, !dbg !6368
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7, !dbg !6368
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %cond) #6, !dbg !6368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !6368
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7, !dbg !6368
  %8 = bitcast %struct.expanded_location* %tmp12 to i8*, !dbg !6369
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !6369
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6370
  %decl = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 6, !dbg !6370
  %10 = bitcast %union.tree_node** %decl to %struct.tree_decl_minimal**, !dbg !6370
  %11 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %10, align 8, !dbg !6370
  %locus14 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 0, i32 1, !dbg !6370
  %12 = load i32, i32* %locus14, align 8, !dbg !6370
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp12, i32 %12) #6, !dbg !6369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !6369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !6369
  %call15 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %cond, i32 211, i8* %gmsgid, %union.tree_node* %1) #6, !dbg !6371
  %tobool16 = icmp eq i8 %call15, 0, !dbg !6371
  br i1 %tobool16, label %cleanup, label %if.then17, !dbg !6373

if.then17:                                        ; preds = %cond.end
  %bf.load19 = load i64, i64* %5, align 8, !dbg !6374
  %bf.set = or i64 %bf.load19, 8388608, !dbg !6374
  store i64 %bf.set, i64* %5, align 8, !dbg !6374
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 0, !dbg !6376
  %13 = load i8*, i8** %file, align 8, !dbg !6376
  %file21 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %floc, i64 0, i32 0, !dbg !6378
  %14 = load i8*, i8** %file21, align 8, !dbg !6378
  %cmp22 = icmp eq i8* %13, %14, !dbg !6379
  br i1 %cmp22, label %lor.lhs.false, label %if.then34, !dbg !6380

lor.lhs.false:                                    ; preds = %if.then17
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 1, !dbg !6381
  %15 = load i32, i32* %line, align 8, !dbg !6381
  %line24 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %floc, i64 0, i32 1, !dbg !6382
  %16 = load i32, i32* %line24, align 8, !dbg !6382
  %cmp25 = icmp slt i32 %15, %16, !dbg !6383
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !6384

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6385
  %function_end_locus = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 16, !dbg !6385
  %18 = load i32, i32* %function_end_locus, align 4, !dbg !6385
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp30, i32 %18) #6, !dbg !6385
  %line31 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp30, i64 0, i32 1, !dbg !6385
  %19 = load i32, i32* %line31, align 8, !dbg !6385
  %cmp32 = icmp sgt i32 %15, %19, !dbg !6386
  br i1 %cmp32, label %if.then34, label %cleanup, !dbg !6387

if.then34:                                        ; preds = %if.then17, %lor.lhs.false27, %lor.lhs.false
  %locus36 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6388
  %20 = load i32, i32* %locus36, align 8, !dbg !6388
  call void (i32, i8*, ...) @inform(i32 %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0), %union.tree_node* %1) #6, !dbg !6389
  br label %cleanup, !dbg !6389

cleanup:                                          ; preds = %cond.end, %if.end4, %if.end, %entry, %if.then34, %lor.lhs.false27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !6390
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !6390
  ret void, !dbg !6390
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6391 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6393, metadata !DIExpression()), !dbg !6394
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #8, !dbg !6395
  %cmp = icmp ne i32 %call, 0, !dbg !6396
  %conv1 = zext i1 %cmp to i8, !dbg !6395
  ret i8 %conv1, !dbg !6397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6398 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6402, metadata !DIExpression()), !dbg !6403
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6404
  %0 = load i32, i32* %location, align 8, !dbg !6404
  ret i32 %0, !dbg !6405
}

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_uninitialized_phi(%union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !6406 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6408, metadata !DIExpression()), !dbg !6415
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !6416
  %conv = zext i32 %call to i64, !dbg !6416
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6410, metadata !DIExpression()), !dbg !6415
  %call1 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !6417
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !6419
  %tobool = icmp eq i8 %call2, 0, !dbg !6419
  br i1 %tobool, label %cleanup.cont, label %for.cond.preheader, !dbg !6420

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !6421

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6422
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6409, metadata !DIExpression()), !dbg !6415
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !6423
  br i1 %exitcond, label %cleanup.cont.loopexit, label %for.body, !dbg !6421

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %i.0) #8, !dbg !6424
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6411, metadata !DIExpression()), !dbg !6425
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6426
  %bf.load = load i64, i64* %0, align 8, !dbg !6426
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6428
  %cmp5 = icmp eq i64 %bf.cast1, 141, !dbg !6428
  br i1 %cmp5, label %if.then7, label %for.inc, !dbg !6429

if.then7:                                         ; preds = %for.body
  tail call fastcc void @warn_uninit(%union.tree_node* %call4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.49, i64 0, i64 0), i8* null) #8, !dbg !6430
  br label %for.inc, !dbg !6430

for.inc:                                          ; preds = %for.body, %if.then7
  %inc = add nuw nsw i64 %i.0, 1, !dbg !6431
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6409, metadata !DIExpression()), !dbg !6415
  br label %for.cond, !dbg !6432, !llvm.loop !6433

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6435

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !6435
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2061, !2062, !2063}
!llvm.ident = !{!2064}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "edge_var_maps", scope: !2, file: !3, line: 51, type: !1535, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !632, globals: !2028, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !384, !391, !567, !606}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !378, line: 119, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383}
!380 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !385, line: 104, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !392, line: 74, baseType: !7, size: 32, elements: !393)
!392 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!393 = !{!394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566}
!394 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!566 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !568, line: 51, baseType: !7, size: 32, elements: !569)
!568 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!569 = !{!570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!570 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!571 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!572 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!573 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!574 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!575 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!576 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!577 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!578 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!579 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!580 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!581 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!582 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!605 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!606 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !568, line: 727, baseType: !7, size: 32, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631}
!608 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!609 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!610 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!611 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!612 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!613 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!614 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!615 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!616 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!617 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!618 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!619 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!620 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!621 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!622 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!623 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!624 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!625 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!626 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!627 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!628 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!629 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!630 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!631 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!632 = !{!633, !634, !635, !636, !639, !640, !642, !660, !183, !1987, !1988, !1989, !1532, !1992, !1998, !1444, !644, !7, !985, !2001, !1018, !637, !2003, !2022, !984, !787}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!635 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_var_map_vector", file: !643, line: 563, baseType: !644)
!643 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_var_map_heap", file: !643, line: 560, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_var_map_heap", file: !643, line: 560, size: 256, elements: !647)
!647 = !{!648}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !646, file: !643, line: 560, baseType: !649, size: 256)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_var_map_base", file: !643, line: 559, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_var_map_base", file: !643, line: 559, size: 256, elements: !651)
!651 = !{!652, !653, !654}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !650, file: !643, line: 559, baseType: !7, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !650, file: !643, line: 559, baseType: !7, size: 32, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !650, file: !643, line: 559, baseType: !655, size: 192, offset: 64)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !656, size: 192, elements: !759)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_var_map", file: !643, line: 557, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_edge_var_map", file: !643, line: 552, size: 192, elements: !658)
!658 = !{!659, !1985, !1986}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !657, file: !643, line: 553, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !661, line: 56, baseType: !662)
!661 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !664)
!664 = !{!665, !698, !704, !717, !736, !747, !752, !761, !767, !780, !792, !830, !1321, !1349, !1365, !1366, !1371, !1380, !1386, !1391, !1395, !1399, !1636, !1683, !1689, !1695, !1702, !1715, !1729, !1746, !1758, !1780, !1795, !1967}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !663, file: !151, line: 3372, baseType: !666, size: 64)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !666, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !666, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !666, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !666, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !666, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !666, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !666, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !666, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !666, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !666, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !666, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !666, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !666, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !666, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !666, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !666, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !666, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !666, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !666, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !666, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !666, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !666, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !666, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !666, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !666, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !666, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !666, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !666, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !666, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !666, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !663, file: !151, line: 3373, baseType: !699, size: 192)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !700)
!700 = !{!701, !702, !703}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !699, file: !151, line: 403, baseType: !666, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !699, file: !151, line: 404, baseType: !660, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !699, file: !151, line: 405, baseType: !660, size: 64, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !663, file: !151, line: 3374, baseType: !705, size: 320)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !706)
!706 = !{!707, !708}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !705, file: !151, line: 1385, baseType: !699, size: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !705, file: !151, line: 1386, baseType: !709, size: 128, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !710, line: 58, baseType: !711)
!710 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 54, size: 128, elements: !712)
!712 = !{!713, !715}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !711, file: !710, line: 56, baseType: !714, size: 64)
!714 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !711, file: !710, line: 57, baseType: !716, size: 64, offset: 64)
!716 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !663, file: !151, line: 3375, baseType: !718, size: 256)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !719)
!719 = !{!720, !721}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !718, file: !151, line: 1398, baseType: !699, size: 192)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !718, file: !151, line: 1399, baseType: !722, size: 64, offset: 192)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !724, line: 52, size: 256, elements: !725)
!724 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!725 = !{!726, !727, !728, !729, !730, !731, !732}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !723, file: !724, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !723, file: !724, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !723, file: !724, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !723, file: !724, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !723, file: !724, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !723, file: !724, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !723, file: !724, line: 62, baseType: !733, size: 192, offset: 64)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 192, elements: !734)
!734 = !{!735}
!735 = !DISubrange(count: 3)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !663, file: !151, line: 3376, baseType: !737, size: 256)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !738)
!738 = !{!739, !740}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !737, file: !151, line: 1409, baseType: !699, size: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !737, file: !151, line: 1410, baseType: !741, size: 64, offset: 192)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !743, line: 27, size: 192, elements: !744)
!743 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !742, file: !743, line: 29, baseType: !709, size: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !742, file: !743, line: 30, baseType: !5, size: 32, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !663, file: !151, line: 3377, baseType: !748, size: 256)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !749)
!749 = !{!750, !751}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !748, file: !151, line: 1438, baseType: !699, size: 192)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !748, file: !151, line: 1439, baseType: !660, size: 64, offset: 192)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !663, file: !151, line: 3378, baseType: !753, size: 256)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !754)
!754 = !{!755, !756, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !753, file: !151, line: 1419, baseType: !699, size: 192)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !753, file: !151, line: 1420, baseType: !635, size: 32, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !753, file: !151, line: 1421, baseType: !758, size: 8, offset: 224)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 8, elements: !759)
!759 = !{!760}
!760 = !DISubrange(count: 1)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !663, file: !151, line: 3379, baseType: !762, size: 320)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !763)
!763 = !{!764, !765, !766}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !762, file: !151, line: 1429, baseType: !699, size: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !762, file: !151, line: 1430, baseType: !660, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !762, file: !151, line: 1431, baseType: !660, size: 64, offset: 256)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !663, file: !151, line: 3380, baseType: !768, size: 320)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !768, file: !151, line: 1461, baseType: !699, size: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !768, file: !151, line: 1462, baseType: !772, size: 128, offset: 192)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !773, line: 31, size: 128, elements: !774)
!773 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!774 = !{!775, !778, !779}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !772, file: !773, line: 32, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !772, file: !773, line: 33, baseType: !7, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !772, file: !773, line: 34, baseType: !7, size: 32, offset: 96)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !663, file: !151, line: 3381, baseType: !781, size: 384)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !782)
!782 = !{!783, !784, !789, !790, !791}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !781, file: !151, line: 2508, baseType: !699, size: 192)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !781, file: !151, line: 2509, baseType: !785, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !786, line: 58, baseType: !787)
!786 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !788, line: 44, baseType: !7)
!788 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!789 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !781, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !781, file: !151, line: 2511, baseType: !660, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !781, file: !151, line: 2512, baseType: !660, size: 64, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !663, file: !151, line: 3382, baseType: !793, size: 896)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !793, file: !151, line: 2653, baseType: !781, size: 384)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !793, file: !151, line: 2654, baseType: !660, size: 64, offset: 384)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !793, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !793, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !793, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !793, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !793, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !793, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !793, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !793, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !793, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !793, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !793, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !793, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !793, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !793, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !793, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !793, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !793, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !793, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !793, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !793, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !793, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !793, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !793, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !793, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !793, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !793, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !793, file: !151, line: 2705, baseType: !660, size: 64, offset: 576)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !793, file: !151, line: 2706, baseType: !660, size: 64, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !793, file: !151, line: 2707, baseType: !660, size: 64, offset: 704)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !793, file: !151, line: 2708, baseType: !660, size: 64, offset: 768)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !793, file: !151, line: 2711, baseType: !828, size: 64, offset: 832)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !663, file: !151, line: 3383, baseType: !831, size: 960)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !831, file: !151, line: 2757, baseType: !793, size: 896)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !831, file: !151, line: 2758, baseType: !835, size: 64, offset: 896)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !661, line: 50, baseType: !836)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !838, line: 240, size: 384, elements: !839)
!838 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!839 = !{!840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !837, file: !838, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !837, file: !838, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !837, file: !838, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !837, file: !838, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !837, file: !838, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !837, file: !838, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !837, file: !838, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !837, file: !838, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !837, file: !838, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !837, file: !838, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !837, file: !838, line: 321, baseType: !851, size: 320, offset: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !838, line: 315, size: 320, elements: !852)
!852 = !{!853, !1254, !1256, !1319, !1320}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !851, file: !838, line: 316, baseType: !854, size: 64)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 64, elements: !759)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !838, line: 183, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !838, line: 166, size: 64, elements: !857)
!857 = !{!858, !859, !860, !861, !862, !870, !871, !883, !886, !946, !947, !1231, !1244, !1251}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !856, file: !838, line: 168, baseType: !635, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !856, file: !838, line: 169, baseType: !7, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !856, file: !838, line: 170, baseType: !640, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !856, file: !838, line: 171, baseType: !835, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !856, file: !838, line: 172, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !661, line: 53, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !838, line: 359, size: 128, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !865, file: !838, line: 360, baseType: !635, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !865, file: !838, line: 361, baseType: !869, size: 64, offset: 64)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !835, size: 64, elements: !759)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !856, file: !838, line: 173, baseType: !5, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !856, file: !838, line: 174, baseType: !872, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !838, line: 133, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !838, line: 115, size: 32, elements: !874)
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !873, file: !838, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !873, file: !838, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !873, file: !838, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !873, file: !838, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !873, file: !838, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !873, file: !838, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !873, file: !838, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !873, file: !838, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !856, file: !838, line: 175, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !838, line: 175, flags: DIFlagFwdDecl)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !856, file: !838, line: 176, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !889, line: 75, size: 256, elements: !890)
!889 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!890 = !{!891, !905, !906, !907}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !888, file: !889, line: 76, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !889, line: 68, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !889, line: 63, size: 320, elements: !895)
!895 = !{!896, !898, !899, !900}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !894, file: !889, line: 64, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !894, file: !889, line: 65, baseType: !897, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !894, file: !889, line: 66, baseType: !7, size: 32, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !894, file: !889, line: 67, baseType: !901, size: 128, offset: 192)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 128, elements: !903)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !889, line: 29, baseType: !714)
!903 = !{!904}
!904 = !DISubrange(count: 2)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !888, file: !889, line: 77, baseType: !892, size: 64, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !888, file: !889, line: 78, baseType: !7, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !888, file: !889, line: 79, baseType: !908, size: 64, offset: 192)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !889, line: 49, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !889, line: 45, size: 832, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !910, file: !889, line: 46, baseType: !897, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !910, file: !889, line: 47, baseType: !887, size: 64, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !910, file: !889, line: 48, baseType: !915, size: 704, offset: 128)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !916, line: 164, size: 704, elements: !917)
!916 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!917 = !{!918, !919, !929, !930, !931, !932, !933, !934, !938, !942, !943, !944, !945}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !915, file: !916, line: 166, baseType: !716, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !915, file: !916, line: 167, baseType: !920, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !916, line: 157, size: 192, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !921, file: !916, line: 159, baseType: !637, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !921, file: !916, line: 160, baseType: !920, size: 64, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !921, file: !916, line: 161, baseType: !926, size: 32, offset: 128)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 32, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 4)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !915, file: !916, line: 168, baseType: !637, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !915, file: !916, line: 169, baseType: !637, size: 64, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !915, file: !916, line: 170, baseType: !637, size: 64, offset: 256)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !915, file: !916, line: 171, baseType: !716, size: 64, offset: 320)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !915, file: !916, line: 172, baseType: !635, size: 32, offset: 384)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !915, file: !916, line: 176, baseType: !935, size: 64, offset: 448)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!920, !639, !716}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !915, file: !916, line: 177, baseType: !939, size: 64, offset: 512)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{null, !639, !920}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !915, file: !916, line: 178, baseType: !639, size: 64, offset: 576)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !915, file: !916, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !915, file: !916, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !915, file: !916, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !856, file: !838, line: 177, baseType: !660, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !856, file: !838, line: 178, baseType: !948, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !950)
!950 = !{!951, !1196, !1197, !1198, !1201, !1205, !1206, !1207, !1225, !1226, !1227, !1228, !1229, !1230}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !949, file: !135, line: 219, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !955)
!955 = !{!956}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !954, file: !135, line: 151, baseType: !957, size: 128)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !959)
!959 = !{!960, !961, !962}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !958, file: !135, line: 150, baseType: !7, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !958, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !958, file: !135, line: 150, baseType: !963, size: 64, offset: 64)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 64, elements: !759)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !661, line: 108, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !967)
!967 = !{!968, !969, !970, !1188, !1189, !1190, !1191, !1192, !1193, !1194}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !966, file: !135, line: 124, baseType: !948, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !966, file: !135, line: 125, baseType: !948, size: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !966, file: !135, line: 131, baseType: !971, size: 64, offset: 128)
!971 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !972)
!972 = !{!973, !1187}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !971, file: !135, line: 129, baseType: !974, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !661, line: 66, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !568, line: 143, size: 192, elements: !977)
!977 = !{!978, !1185, !1186}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !976, file: !568, line: 145, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !661, line: 69, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !568, line: 136, size: 192, elements: !982)
!982 = !{!983, !1183, !1184}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !981, file: !568, line: 137, baseType: !984, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !661, line: 58, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !568, line: 737, size: 768, elements: !987)
!987 = !{!988, !1005, !1038, !1044, !1049, !1054, !1061, !1067, !1073, !1078, !1092, !1097, !1103, !1108, !1118, !1123, !1141, !1148, !1155, !1161, !1166, !1172, !1178}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !986, file: !568, line: 738, baseType: !989, size: 256)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !568, line: 271, size: 256, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !989, file: !568, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !989, file: !568, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !989, file: !568, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !989, file: !568, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !989, file: !568, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !989, file: !568, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !989, file: !568, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !989, file: !568, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !989, file: !568, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !989, file: !568, line: 312, baseType: !7, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !989, file: !568, line: 316, baseType: !785, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !989, file: !568, line: 319, baseType: !7, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !989, file: !568, line: 323, baseType: !948, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !989, file: !568, line: 327, baseType: !660, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !986, file: !568, line: 739, baseType: !1006, size: 448)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !568, line: 350, size: 448, elements: !1007)
!1007 = !{!1008, !1036}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1006, file: !568, line: 353, baseType: !1009, size: 384)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !568, line: 333, size: 384, elements: !1010)
!1010 = !{!1011, !1012, !1019}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1009, file: !568, line: 336, baseType: !989, size: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1009, file: !568, line: 343, baseType: !1013, size: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !378, line: 37, size: 128, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1014, file: !378, line: 39, baseType: !1013, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1014, file: !378, line: 40, baseType: !1018, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1009, file: !568, line: 344, baseType: !1020, size: 64, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !378, line: 45, size: 320, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1021, file: !378, line: 47, baseType: !1020, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1021, file: !378, line: 48, baseType: !1025, size: 256, offset: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1026)
!1026 = !{!1027, !1029, !1030, !1035}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1025, file: !151, line: 1884, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1025, file: !151, line: 1885, baseType: !1028, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1025, file: !151, line: 1891, baseType: !1031, size: 64, offset: 128)
!1031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1025, file: !151, line: 1891, size: 64, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1031, file: !151, line: 1891, baseType: !984, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1031, file: !151, line: 1891, baseType: !660, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1025, file: !151, line: 1892, baseType: !1018, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1006, file: !568, line: 359, baseType: !1037, size: 64, offset: 384)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 64, elements: !759)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !986, file: !568, line: 740, baseType: !1039, size: 512)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !568, line: 365, size: 512, elements: !1040)
!1040 = !{!1041, !1042, !1043}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1039, file: !568, line: 368, baseType: !1009, size: 384)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1039, file: !568, line: 373, baseType: !660, size: 64, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1039, file: !568, line: 374, baseType: !660, size: 64, offset: 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !986, file: !568, line: 741, baseType: !1045, size: 576)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !568, line: 380, size: 576, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1045, file: !568, line: 383, baseType: !1039, size: 512)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1045, file: !568, line: 389, baseType: !1037, size: 64, offset: 512)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !986, file: !568, line: 742, baseType: !1050, size: 320)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !568, line: 395, size: 320, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1050, file: !568, line: 397, baseType: !989, size: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1050, file: !568, line: 400, baseType: !974, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !986, file: !568, line: 743, baseType: !1055, size: 448)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !568, line: 406, size: 448, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1055, file: !568, line: 408, baseType: !989, size: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1055, file: !568, line: 412, baseType: !660, size: 64, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1055, file: !568, line: 420, baseType: !660, size: 64, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1055, file: !568, line: 423, baseType: !974, size: 64, offset: 384)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !986, file: !568, line: 744, baseType: !1062, size: 384)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !568, line: 429, size: 384, elements: !1063)
!1063 = !{!1064, !1065, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1062, file: !568, line: 431, baseType: !989, size: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1062, file: !568, line: 434, baseType: !660, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1062, file: !568, line: 437, baseType: !974, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !986, file: !568, line: 745, baseType: !1068, size: 384)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !568, line: 443, size: 384, elements: !1069)
!1069 = !{!1070, !1071, !1072}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1068, file: !568, line: 445, baseType: !989, size: 256)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1068, file: !568, line: 449, baseType: !660, size: 64, offset: 256)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1068, file: !568, line: 453, baseType: !974, size: 64, offset: 320)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !986, file: !568, line: 746, baseType: !1074, size: 320)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !568, line: 459, size: 320, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1074, file: !568, line: 461, baseType: !989, size: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1074, file: !568, line: 464, baseType: !660, size: 64, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !986, file: !568, line: 747, baseType: !1079, size: 768)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !568, line: 469, size: 768, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1085}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1079, file: !568, line: 471, baseType: !989, size: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1079, file: !568, line: 474, baseType: !7, size: 32, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1079, file: !568, line: 475, baseType: !7, size: 32, offset: 288)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1079, file: !568, line: 478, baseType: !660, size: 64, offset: 320)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1079, file: !568, line: 481, baseType: !1086, size: 384, offset: 384)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 384, elements: !759)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !151, line: 1917, size: 384, elements: !1088)
!1088 = !{!1089, !1090, !1091}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1087, file: !151, line: 1920, baseType: !1025, size: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1087, file: !151, line: 1921, baseType: !660, size: 64, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1087, file: !151, line: 1922, baseType: !785, size: 32, offset: 320)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !986, file: !568, line: 748, baseType: !1093, size: 320)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !568, line: 487, size: 320, elements: !1094)
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1093, file: !568, line: 490, baseType: !989, size: 256)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1093, file: !568, line: 494, baseType: !635, size: 32, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !986, file: !568, line: 749, baseType: !1098, size: 384)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !568, line: 500, size: 384, elements: !1099)
!1099 = !{!1100, !1101, !1102}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1098, file: !568, line: 502, baseType: !989, size: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1098, file: !568, line: 506, baseType: !974, size: 64, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1098, file: !568, line: 510, baseType: !974, size: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !986, file: !568, line: 750, baseType: !1104, size: 320)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !568, line: 529, size: 320, elements: !1105)
!1105 = !{!1106, !1107}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1104, file: !568, line: 531, baseType: !989, size: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1104, file: !568, line: 540, baseType: !974, size: 64, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !986, file: !568, line: 751, baseType: !1109, size: 704)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !568, line: 546, size: 704, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1109, file: !568, line: 549, baseType: !1039, size: 512)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1109, file: !568, line: 553, baseType: !640, size: 64, offset: 512)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1109, file: !568, line: 557, baseType: !634, size: 8, offset: 576)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1109, file: !568, line: 558, baseType: !634, size: 8, offset: 584)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1109, file: !568, line: 559, baseType: !634, size: 8, offset: 592)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1109, file: !568, line: 560, baseType: !634, size: 8, offset: 600)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1109, file: !568, line: 566, baseType: !1037, size: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !986, file: !568, line: 752, baseType: !1119, size: 384)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !568, line: 571, size: 384, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1119, file: !568, line: 573, baseType: !1050, size: 320)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1119, file: !568, line: 577, baseType: !660, size: 64, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !986, file: !568, line: 753, baseType: !1124, size: 576)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !568, line: 600, size: 576, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1131, !1140}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1124, file: !568, line: 602, baseType: !1050, size: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1124, file: !568, line: 605, baseType: !660, size: 64, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1124, file: !568, line: 609, baseType: !1129, size: 64, offset: 384)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1130, line: 46, baseType: !714)
!1130 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1124, file: !568, line: 612, baseType: !1132, size: 64, offset: 448)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !568, line: 581, size: 320, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1133, file: !568, line: 583, baseType: !183, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1133, file: !568, line: 586, baseType: !660, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1133, file: !568, line: 589, baseType: !660, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1133, file: !568, line: 592, baseType: !660, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1133, file: !568, line: 595, baseType: !660, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1124, file: !568, line: 616, baseType: !974, size: 64, offset: 512)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !986, file: !568, line: 754, baseType: !1142, size: 512)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !568, line: 622, size: 512, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1142, file: !568, line: 624, baseType: !1050, size: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1142, file: !568, line: 628, baseType: !660, size: 64, offset: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1142, file: !568, line: 632, baseType: !660, size: 64, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1142, file: !568, line: 636, baseType: !660, size: 64, offset: 448)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !986, file: !568, line: 755, baseType: !1149, size: 704)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !568, line: 642, size: 704, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1149, file: !568, line: 644, baseType: !1142, size: 512)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1149, file: !568, line: 648, baseType: !660, size: 64, offset: 512)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1149, file: !568, line: 652, baseType: !660, size: 64, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1149, file: !568, line: 653, baseType: !660, size: 64, offset: 640)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !986, file: !568, line: 756, baseType: !1156, size: 448)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !568, line: 663, size: 448, elements: !1157)
!1157 = !{!1158, !1159, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1156, file: !568, line: 665, baseType: !1050, size: 320)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1156, file: !568, line: 668, baseType: !660, size: 64, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1156, file: !568, line: 673, baseType: !660, size: 64, offset: 384)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !986, file: !568, line: 757, baseType: !1162, size: 384)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !568, line: 694, size: 384, elements: !1163)
!1163 = !{!1164, !1165}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1162, file: !568, line: 696, baseType: !1050, size: 320)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1162, file: !568, line: 699, baseType: !660, size: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !986, file: !568, line: 758, baseType: !1167, size: 384)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !568, line: 681, size: 384, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1167, file: !568, line: 683, baseType: !989, size: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1167, file: !568, line: 686, baseType: !660, size: 64, offset: 256)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1167, file: !568, line: 689, baseType: !660, size: 64, offset: 320)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !986, file: !568, line: 759, baseType: !1173, size: 384)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !568, line: 707, size: 384, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1173, file: !568, line: 709, baseType: !989, size: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1173, file: !568, line: 712, baseType: !660, size: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1173, file: !568, line: 712, baseType: !660, size: 64, offset: 320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !986, file: !568, line: 760, baseType: !1179, size: 320)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !568, line: 718, size: 320, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1179, file: !568, line: 720, baseType: !989, size: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1179, file: !568, line: 723, baseType: !660, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !981, file: !568, line: 138, baseType: !980, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !981, file: !568, line: 139, baseType: !980, size: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !976, file: !568, line: 146, baseType: !979, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !976, file: !568, line: 152, baseType: !974, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !971, file: !135, line: 130, baseType: !835, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !966, file: !135, line: 134, baseType: !639, size: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !966, file: !135, line: 137, baseType: !660, size: 64, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !966, file: !135, line: 138, baseType: !785, size: 32, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !966, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !966, file: !135, line: 144, baseType: !635, size: 32, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !966, file: !135, line: 145, baseType: !635, size: 32, offset: 416)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !966, file: !135, line: 146, baseType: !1195, size: 64, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !716)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !949, file: !135, line: 220, baseType: !952, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !949, file: !135, line: 223, baseType: !639, size: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !949, file: !135, line: 226, baseType: !1199, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !949, file: !135, line: 229, baseType: !1202, size: 128, offset: 256)
!1202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 128, elements: !903)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !949, file: !135, line: 232, baseType: !948, size: 64, offset: 384)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !949, file: !135, line: 233, baseType: !948, size: 64, offset: 448)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !949, file: !135, line: 238, baseType: !1208, size: 64, offset: 512)
!1208 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1209)
!1209 = !{!1210, !1216}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1208, file: !135, line: 236, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1213)
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1212, file: !135, line: 275, baseType: !974, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1212, file: !135, line: 278, baseType: !974, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1208, file: !135, line: 237, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1224}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1218, file: !135, line: 261, baseType: !835, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1218, file: !135, line: 262, baseType: !835, size: 64, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1218, file: !135, line: 266, baseType: !835, size: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1218, file: !135, line: 267, baseType: !835, size: 64, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1218, file: !135, line: 270, baseType: !635, size: 32, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !949, file: !135, line: 241, baseType: !1195, size: 64, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !949, file: !135, line: 244, baseType: !635, size: 32, offset: 640)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !949, file: !135, line: 247, baseType: !635, size: 32, offset: 672)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !949, file: !135, line: 250, baseType: !635, size: 32, offset: 704)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !949, file: !135, line: 253, baseType: !635, size: 32, offset: 736)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !949, file: !135, line: 256, baseType: !635, size: 32, offset: 768)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !856, file: !838, line: 179, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !838, line: 150, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !838, line: 142, size: 320, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1242, !1243}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1234, file: !838, line: 144, baseType: !660, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1234, file: !838, line: 145, baseType: !835, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1234, file: !838, line: 146, baseType: !835, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1234, file: !838, line: 147, baseType: !1240, size: 32, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1241, line: 31, baseType: !635)
!1241 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1234, file: !838, line: 148, baseType: !7, size: 32, offset: 224)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1234, file: !838, line: 149, baseType: !634, size: 8, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !856, file: !838, line: 180, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !838, line: 162, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !838, line: 159, size: 128, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1247, file: !838, line: 160, baseType: !660, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1247, file: !838, line: 161, baseType: !716, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !856, file: !838, line: 181, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !838, line: 181, flags: DIFlagFwdDecl)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !851, file: !838, line: 317, baseType: !1255, size: 64)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 64, elements: !759)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !851, file: !838, line: 318, baseType: !1257, size: 320)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !838, line: 188, size: 320, elements: !1258)
!1258 = !{!1259, !1261, !1318}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1257, file: !838, line: 190, baseType: !1260, size: 192)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 192, elements: !734)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1257, file: !838, line: 193, baseType: !1262, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !838, line: 206, size: 320, elements: !1264)
!1264 = !{!1265, !1303, !1304, !1305, !1317}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1263, file: !838, line: 208, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !661, line: 62, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1269, line: 538, size: 256, elements: !1270)
!1269 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1270 = !{!1271, !1275, !1281, !1294}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1268, file: !1269, line: 539, baseType: !1272, size: 32)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1269, line: 482, size: 32, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1272, file: !1269, line: 484, baseType: !7, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1268, file: !1269, line: 540, baseType: !1276, size: 192)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1269, line: 488, size: 192, elements: !1277)
!1277 = !{!1278, !1279, !1280}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1276, file: !1269, line: 489, baseType: !1272, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1276, file: !1269, line: 492, baseType: !640, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1276, file: !1269, line: 496, baseType: !660, size: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1268, file: !1269, line: 541, baseType: !1282, size: 256)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1269, line: 504, size: 256, elements: !1283)
!1283 = !{!1284, !1285, !1292, !1293}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1282, file: !1269, line: 505, baseType: !1272, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1282, file: !1269, line: 509, baseType: !1286, size: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1269, line: 501, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !1290}
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1282, file: !1269, line: 510, baseType: !1290, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1282, file: !1269, line: 513, baseType: !1266, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1268, file: !1269, line: 542, baseType: !1295, size: 128)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1269, line: 530, size: 128, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1295, file: !1269, line: 531, baseType: !1272, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1295, file: !1269, line: 534, baseType: !1299, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1269, line: 525, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!634, !660, !640, !714, !714}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1263, file: !838, line: 211, baseType: !7, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1263, file: !838, line: 214, baseType: !716, size: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1263, file: !838, line: 224, baseType: !1306, size: 64, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !838, line: 202, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !838, line: 202, size: 128, elements: !1309)
!1309 = !{!1310}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1308, file: !838, line: 202, baseType: !1311, size: 128)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !838, line: 200, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !838, line: 200, size: 128, elements: !1313)
!1313 = !{!1314, !1315, !1316}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1312, file: !838, line: 200, baseType: !7, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1312, file: !838, line: 200, baseType: !7, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1312, file: !838, line: 200, baseType: !869, size: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1263, file: !838, line: 234, baseType: !1306, size: 64, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1257, file: !838, line: 197, baseType: !716, size: 64, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !851, file: !838, line: 319, baseType: !723, size: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !851, file: !838, line: 320, baseType: !742, size: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !663, file: !151, line: 3384, baseType: !1322, size: 1472)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1323)
!1323 = !{!1324, !1345, !1346, !1347, !1348}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1322, file: !151, line: 3115, baseType: !1325, size: 1216)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1325, file: !151, line: 2985, baseType: !831, size: 960)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1325, file: !151, line: 2986, baseType: !660, size: 64, offset: 960)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1325, file: !151, line: 2987, baseType: !660, size: 64, offset: 1024)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1325, file: !151, line: 2988, baseType: !660, size: 64, offset: 1088)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1325, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1325, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1325, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1325, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1325, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1325, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1325, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1325, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1325, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1325, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1325, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1325, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1325, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1325, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1322, file: !151, line: 3117, baseType: !660, size: 64, offset: 1216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1322, file: !151, line: 3119, baseType: !660, size: 64, offset: 1280)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1322, file: !151, line: 3121, baseType: !660, size: 64, offset: 1344)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1322, file: !151, line: 3123, baseType: !660, size: 64, offset: 1408)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !663, file: !151, line: 3385, baseType: !1350, size: 1088)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1351)
!1351 = !{!1352, !1353, !1354}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1350, file: !151, line: 2875, baseType: !831, size: 960)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1350, file: !151, line: 2876, baseType: !835, size: 64, offset: 960)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1350, file: !151, line: 2877, baseType: !1355, size: 64, offset: 1024)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !643, line: 172, size: 128, elements: !1357)
!1357 = !{!1358, !1359, !1360, !1361, !1362, !1363, !1364}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1356, file: !643, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1356, file: !643, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1356, file: !643, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1356, file: !643, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1356, file: !643, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1356, file: !643, line: 195, baseType: !7, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1356, file: !643, line: 199, baseType: !660, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !663, file: !151, line: 3386, baseType: !1325, size: 1216)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !663, file: !151, line: 3387, baseType: !1367, size: 1280)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1367, file: !151, line: 3094, baseType: !1325, size: 1216)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1367, file: !151, line: 3095, baseType: !1355, size: 64, offset: 1216)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !663, file: !151, line: 3388, baseType: !1372, size: 1216)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1379}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !151, line: 2825, baseType: !793, size: 896)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1372, file: !151, line: 2827, baseType: !660, size: 64, offset: 896)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1372, file: !151, line: 2828, baseType: !660, size: 64, offset: 960)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1372, file: !151, line: 2829, baseType: !660, size: 64, offset: 1024)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1372, file: !151, line: 2830, baseType: !660, size: 64, offset: 1088)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1372, file: !151, line: 2831, baseType: !660, size: 64, offset: 1152)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !663, file: !151, line: 3389, baseType: !1381, size: 1024)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1382)
!1382 = !{!1383, !1384, !1385}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1381, file: !151, line: 2851, baseType: !831, size: 960)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1381, file: !151, line: 2852, baseType: !635, size: 32, offset: 960)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1381, file: !151, line: 2853, baseType: !635, size: 32, offset: 992)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !663, file: !151, line: 3390, baseType: !1387, size: 1024)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !151, line: 2858, baseType: !831, size: 960)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1387, file: !151, line: 2859, baseType: !1355, size: 64, offset: 960)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !663, file: !151, line: 3391, baseType: !1392, size: 960)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1392, file: !151, line: 2863, baseType: !831, size: 960)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !663, file: !151, line: 3392, baseType: !1396, size: 1472)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1397)
!1397 = !{!1398}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !151, line: 3305, baseType: !1322, size: 1472)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !663, file: !151, line: 3393, baseType: !1400, size: 1792)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1401)
!1401 = !{!1402, !1403, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1400, file: !151, line: 3249, baseType: !1322, size: 1472)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1400, file: !151, line: 3251, baseType: !1404, size: 64, offset: 1472)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1406, line: 463, size: 1152, elements: !1407)
!1406 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1407 = !{!1408, !1411, !1442, !1443, !1556, !1559, !1560, !1561, !1562, !1563, !1564, !1588, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1405, file: !1406, line: 464, baseType: !1409, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1406, line: 464, flags: DIFlagFwdDecl)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1405, file: !1406, line: 467, baseType: !1412, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1414)
!1414 = !{!1415, !1417, !1418, !1431, !1432, !1433, !1434, !1435, !1436, !1438, !1440, !1441}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1413, file: !135, line: 377, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !661, line: 111, baseType: !948)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1413, file: !135, line: 378, baseType: !1416, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1413, file: !135, line: 381, baseType: !1419, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1422)
!1422 = !{!1423}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1421, file: !135, line: 282, baseType: !1424, size: 128)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1426)
!1426 = !{!1427, !1428, !1429}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1425, file: !135, line: 281, baseType: !7, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1425, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1425, file: !135, line: 281, baseType: !1430, size: 64, offset: 64)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1416, size: 64, elements: !759)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1413, file: !135, line: 384, baseType: !635, size: 32, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1413, file: !135, line: 387, baseType: !635, size: 32, offset: 224)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1413, file: !135, line: 390, baseType: !635, size: 32, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1413, file: !135, line: 394, baseType: !1419, size: 64, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1413, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1413, file: !135, line: 399, baseType: !1437, size: 64, offset: 416)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !903)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1413, file: !135, line: 402, baseType: !1439, size: 64, offset: 480)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !903)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1413, file: !135, line: 406, baseType: !635, size: 32, offset: 544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1413, file: !135, line: 409, baseType: !635, size: 32, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1405, file: !1406, line: 470, baseType: !975, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1405, file: !1406, line: 473, baseType: !1444, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !643, line: 39, size: 1152, elements: !1446)
!1446 = !{!1447, !1495, !1508, !1520, !1521, !1533, !1534, !1538, !1539, !1540, !1541, !1542}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1445, file: !643, line: 41, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1449, line: 144, baseType: !1450)
!1449 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1449, line: 100, size: 896, elements: !1452)
!1452 = !{!1453, !1459, !1464, !1469, !1471, !1472, !1473, !1474, !1475, !1476, !1481, !1483, !1484, !1489, !1494}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1451, file: !1449, line: 102, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1449, line: 52, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!1458, !1290}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1449, line: 47, baseType: !7)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1451, file: !1449, line: 105, baseType: !1460, size: 64, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1449, line: 59, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!635, !1290, !1290}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1451, file: !1449, line: 108, baseType: !1465, size: 64, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1449, line: 63, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !639}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1451, file: !1449, line: 111, baseType: !1470, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1451, file: !1449, line: 114, baseType: !1129, size: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1451, file: !1449, line: 117, baseType: !1129, size: 64, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1451, file: !1449, line: 120, baseType: !1129, size: 64, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1451, file: !1449, line: 124, baseType: !7, size: 32, offset: 448)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1451, file: !1449, line: 128, baseType: !7, size: 32, offset: 480)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1451, file: !1449, line: 131, baseType: !1477, size: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1449, line: 75, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!639, !1129, !1129}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1451, file: !1449, line: 132, baseType: !1482, size: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1449, line: 78, baseType: !1466)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1451, file: !1449, line: 135, baseType: !639, size: 64, offset: 640)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1451, file: !1449, line: 136, baseType: !1485, size: 64, offset: 704)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1449, line: 82, baseType: !1486)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!639, !639, !1129, !1129}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1451, file: !1449, line: 137, baseType: !1490, size: 64, offset: 768)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1449, line: 83, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !639, !639}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1451, file: !1449, line: 141, baseType: !7, size: 32, offset: 832)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1445, file: !643, line: 48, baseType: !1496, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !568, line: 35, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !568, line: 35, size: 128, elements: !1499)
!1499 = !{!1500}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1498, file: !568, line: 35, baseType: !1501, size: 128)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !568, line: 33, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !568, line: 33, size: 128, elements: !1503)
!1503 = !{!1504, !1505, !1506}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1502, file: !568, line: 33, baseType: !7, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1502, file: !568, line: 33, baseType: !7, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1502, file: !568, line: 33, baseType: !1507, size: 64, offset: 64)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 64, elements: !759)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1445, file: !643, line: 51, baseType: !1509, size: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1512)
!1512 = !{!1513}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1511, file: !151, line: 183, baseType: !1514, size: 128)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1516)
!1516 = !{!1517, !1518, !1519}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1515, file: !151, line: 182, baseType: !7, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1515, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1515, file: !151, line: 182, baseType: !1037, size: 64, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1445, file: !643, line: 54, baseType: !660, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1445, file: !643, line: 57, baseType: !1522, size: 128, offset: 256)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1523, line: 31, size: 128, elements: !1524)
!1523 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1524 = !{!1525, !1526, !1527, !1528, !1529, !1530, !1531}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1522, file: !1523, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1522, file: !1523, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1522, file: !1523, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1522, file: !1523, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1522, file: !1523, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1522, file: !1523, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1522, file: !1523, line: 56, baseType: !1532, size: 64, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !661, line: 47, baseType: !887)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1445, file: !643, line: 60, baseType: !1522, size: 128, offset: 384)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1445, file: !643, line: 64, baseType: !1535, size: 64, offset: 512)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1537, line: 33, flags: DIFlagFwdDecl)
!1537 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1445, file: !643, line: 67, baseType: !660, size: 64, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1445, file: !643, line: 73, baseType: !1448, size: 64, offset: 640)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1445, file: !643, line: 77, baseType: !1532, size: 64, offset: 704)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1445, file: !643, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1445, file: !643, line: 82, baseType: !1543, size: 320, offset: 832)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !378, line: 62, size: 320, elements: !1544)
!1544 = !{!1545, !1551, !1552, !1553, !1554, !1555}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1543, file: !378, line: 63, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !378, line: 56, size: 128, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1547, file: !378, line: 57, baseType: !1546, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1547, file: !378, line: 58, baseType: !758, size: 8, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1543, file: !378, line: 64, baseType: !7, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1543, file: !378, line: 66, baseType: !7, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1543, file: !378, line: 68, baseType: !634, size: 8, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1543, file: !378, line: 70, baseType: !1013, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1543, file: !378, line: 71, baseType: !1020, size: 64, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1405, file: !1406, line: 476, baseType: !1557, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1406, line: 476, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1405, file: !1406, line: 479, baseType: !1448, size: 64, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1405, file: !1406, line: 484, baseType: !660, size: 64, offset: 384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1405, file: !1406, line: 488, baseType: !660, size: 64, offset: 448)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1405, file: !1406, line: 493, baseType: !660, size: 64, offset: 512)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1405, file: !1406, line: 496, baseType: !660, size: 64, offset: 576)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1405, file: !1406, line: 501, baseType: !1565, size: 64, offset: 640)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1567)
!1567 = !{!1568, !1571, !1572, !1573, !1574, !1576, !1577, !1582, !1583, !1584, !1585, !1586, !1587}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1566, file: !146, line: 2356, baseType: !1569, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1566, file: !146, line: 2357, baseType: !640, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1566, file: !146, line: 2358, baseType: !635, size: 32, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1566, file: !146, line: 2359, baseType: !635, size: 32, offset: 160)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1566, file: !146, line: 2360, baseType: !1575, size: 128, offset: 192)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, size: 128, elements: !927)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1566, file: !146, line: 2364, baseType: !635, size: 32, offset: 320)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1566, file: !146, line: 2367, baseType: !1578, size: 128, offset: 384)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1578, file: !146, line: 2351, baseType: !835, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1578, file: !146, line: 2352, baseType: !716, size: 64, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1566, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1566, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1566, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1566, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1566, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1566, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1405, file: !1406, line: 504, baseType: !1589, size: 64, offset: 704)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1406, line: 504, flags: DIFlagFwdDecl)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1405, file: !1406, line: 507, baseType: !1448, size: 64, offset: 768)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1405, file: !1406, line: 510, baseType: !635, size: 32, offset: 832)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1405, file: !1406, line: 513, baseType: !635, size: 32, offset: 864)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1405, file: !1406, line: 516, baseType: !785, size: 32, offset: 896)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1405, file: !1406, line: 519, baseType: !785, size: 32, offset: 928)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1405, file: !1406, line: 522, baseType: !7, size: 32, offset: 960)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1405, file: !1406, line: 523, baseType: !7, size: 32, offset: 992)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1405, file: !1406, line: 528, baseType: !640, size: 64, offset: 1024)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1405, file: !1406, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1405, file: !1406, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1405, file: !1406, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1405, file: !1406, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1405, file: !1406, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1405, file: !1406, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1405, file: !1406, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1405, file: !1406, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1405, file: !1406, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1405, file: !1406, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1405, file: !1406, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1405, file: !1406, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1405, file: !1406, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1405, file: !1406, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1405, file: !1406, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1405, file: !1406, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1400, file: !151, line: 3254, baseType: !660, size: 64, offset: 1536)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1400, file: !151, line: 3257, baseType: !660, size: 64, offset: 1600)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1400, file: !151, line: 3258, baseType: !660, size: 64, offset: 1664)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1400, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1400, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1400, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1400, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1400, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1400, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1400, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1400, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1400, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1400, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1400, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1400, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1400, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1400, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1400, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1400, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1400, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1400, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !663, file: !151, line: 3394, baseType: !1637, size: 1344)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1637, file: !151, line: 2280, baseType: !699, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1637, file: !151, line: 2281, baseType: !660, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1637, file: !151, line: 2282, baseType: !660, size: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1637, file: !151, line: 2283, baseType: !660, size: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1637, file: !151, line: 2284, baseType: !660, size: 64, offset: 384)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1637, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1637, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1637, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1637, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1637, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1637, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1637, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1637, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1637, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1637, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1637, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1637, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1637, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1637, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1637, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1637, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1637, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1637, file: !151, line: 2306, baseType: !1240, size: 32, offset: 544)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1637, file: !151, line: 2307, baseType: !660, size: 64, offset: 576)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1637, file: !151, line: 2308, baseType: !660, size: 64, offset: 640)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1637, file: !151, line: 2314, baseType: !1665, size: 64, offset: 704)
!1665 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1665, file: !151, line: 2310, baseType: !635, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1665, file: !151, line: 2311, baseType: !640, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1665, file: !151, line: 2312, baseType: !1670, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1637, file: !151, line: 2315, baseType: !660, size: 64, offset: 768)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1637, file: !151, line: 2316, baseType: !660, size: 64, offset: 832)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1637, file: !151, line: 2317, baseType: !660, size: 64, offset: 896)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1637, file: !151, line: 2318, baseType: !660, size: 64, offset: 960)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1637, file: !151, line: 2319, baseType: !660, size: 64, offset: 1024)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1637, file: !151, line: 2320, baseType: !660, size: 64, offset: 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1637, file: !151, line: 2321, baseType: !660, size: 64, offset: 1152)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1637, file: !151, line: 2322, baseType: !660, size: 64, offset: 1216)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1637, file: !151, line: 2324, baseType: !1681, size: 64, offset: 1280)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !663, file: !151, line: 3395, baseType: !1684, size: 320)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1685)
!1685 = !{!1686, !1687, !1688}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1684, file: !151, line: 1470, baseType: !699, size: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1684, file: !151, line: 1471, baseType: !660, size: 64, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1684, file: !151, line: 1472, baseType: !660, size: 64, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !663, file: !151, line: 3396, baseType: !1690, size: 320)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1691)
!1691 = !{!1692, !1693, !1694}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1690, file: !151, line: 1483, baseType: !699, size: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1690, file: !151, line: 1484, baseType: !635, size: 32, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1690, file: !151, line: 1485, baseType: !1037, size: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !663, file: !151, line: 3397, baseType: !1696, size: 384)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1696, file: !151, line: 1830, baseType: !699, size: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1696, file: !151, line: 1831, baseType: !785, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1696, file: !151, line: 1832, baseType: !660, size: 64, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1696, file: !151, line: 1835, baseType: !1037, size: 64, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !663, file: !151, line: 3398, baseType: !1703, size: 704)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1714}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1703, file: !151, line: 1899, baseType: !699, size: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1703, file: !151, line: 1902, baseType: !660, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1703, file: !151, line: 1905, baseType: !984, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1703, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1703, file: !151, line: 1911, baseType: !1710, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !643, line: 117, size: 128, elements: !1712)
!1712 = !{!1713}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1711, file: !643, line: 120, baseType: !1522, size: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1703, file: !151, line: 1914, baseType: !1025, size: 256, offset: 448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !663, file: !151, line: 3399, baseType: !1716, size: 704)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1716, file: !151, line: 2009, baseType: !699, size: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1716, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1716, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1716, file: !151, line: 2014, baseType: !785, size: 32, offset: 224)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1716, file: !151, line: 2016, baseType: !660, size: 64, offset: 256)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1716, file: !151, line: 2017, baseType: !1509, size: 64, offset: 320)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1716, file: !151, line: 2019, baseType: !660, size: 64, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1716, file: !151, line: 2020, baseType: !660, size: 64, offset: 448)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1716, file: !151, line: 2021, baseType: !660, size: 64, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1716, file: !151, line: 2022, baseType: !660, size: 64, offset: 576)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1716, file: !151, line: 2023, baseType: !660, size: 64, offset: 640)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !663, file: !151, line: 3400, baseType: !1730, size: 832)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1730, file: !151, line: 2431, baseType: !699, size: 192)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1730, file: !151, line: 2433, baseType: !660, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1730, file: !151, line: 2434, baseType: !660, size: 64, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1730, file: !151, line: 2435, baseType: !660, size: 64, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1730, file: !151, line: 2436, baseType: !660, size: 64, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1730, file: !151, line: 2437, baseType: !1509, size: 64, offset: 448)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1730, file: !151, line: 2438, baseType: !660, size: 64, offset: 512)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1730, file: !151, line: 2440, baseType: !660, size: 64, offset: 576)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1730, file: !151, line: 2441, baseType: !660, size: 64, offset: 640)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1730, file: !151, line: 2443, baseType: !1742, size: 128, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1744)
!1744 = !{!1745}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1743, file: !151, line: 182, baseType: !1514, size: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !663, file: !151, line: 3401, baseType: !1747, size: 320)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1748)
!1748 = !{!1749, !1750, !1757}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1747, file: !151, line: 3329, baseType: !699, size: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1747, file: !151, line: 3330, baseType: !1751, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1753)
!1753 = !{!1754, !1755, !1756}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1752, file: !151, line: 3322, baseType: !1751, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1752, file: !151, line: 3323, baseType: !1751, size: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1752, file: !151, line: 3324, baseType: !660, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1747, file: !151, line: 3331, baseType: !1751, size: 64, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !663, file: !151, line: 3402, baseType: !1759, size: 256)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1759, file: !151, line: 1541, baseType: !699, size: 192)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1759, file: !151, line: 1542, baseType: !1763, size: 64, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1766)
!1766 = !{!1767}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1765, file: !151, line: 1538, baseType: !1768, size: 192)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1770)
!1770 = !{!1771, !1772, !1773}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1769, file: !151, line: 1537, baseType: !7, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1769, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1769, file: !151, line: 1537, baseType: !1774, size: 128, offset: 64)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1775, size: 128, elements: !759)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1777)
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1776, file: !151, line: 1533, baseType: !660, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1776, file: !151, line: 1534, baseType: !660, size: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !663, file: !151, line: 3403, baseType: !1781, size: 512)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1786, !1792, !1793, !1794}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1781, file: !151, line: 1939, baseType: !699, size: 192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1781, file: !151, line: 1940, baseType: !785, size: 32, offset: 192)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1781, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1781, file: !151, line: 1946, baseType: !1787, size: 32, offset: 256)
!1787 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1788)
!1788 = !{!1789, !1790, !1791}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1787, file: !151, line: 1943, baseType: !169, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1787, file: !151, line: 1944, baseType: !176, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1787, file: !151, line: 1945, baseType: !183, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1781, file: !151, line: 1950, baseType: !974, size: 64, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1781, file: !151, line: 1951, baseType: !974, size: 64, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1781, file: !151, line: 1953, baseType: !1037, size: 64, offset: 448)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !663, file: !151, line: 3404, baseType: !1796, size: 1664)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1796, file: !151, line: 3338, baseType: !699, size: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1796, file: !151, line: 3341, baseType: !1800, size: 1472, offset: 192)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1801, line: 410, size: 1472, elements: !1802)
!1801 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1800, file: !1801, line: 412, baseType: !635, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1800, file: !1801, line: 413, baseType: !635, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1800, file: !1801, line: 414, baseType: !635, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1800, file: !1801, line: 415, baseType: !635, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1800, file: !1801, line: 416, baseType: !635, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1800, file: !1801, line: 417, baseType: !635, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1800, file: !1801, line: 418, baseType: !634, size: 8, offset: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1800, file: !1801, line: 419, baseType: !634, size: 8, offset: 200)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1800, file: !1801, line: 420, baseType: !1812, size: 8, offset: 208)
!1812 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1800, file: !1801, line: 421, baseType: !1812, size: 8, offset: 216)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1800, file: !1801, line: 422, baseType: !1812, size: 8, offset: 224)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1800, file: !1801, line: 423, baseType: !1812, size: 8, offset: 232)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1800, file: !1801, line: 424, baseType: !1812, size: 8, offset: 240)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1800, file: !1801, line: 425, baseType: !1812, size: 8, offset: 248)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1800, file: !1801, line: 426, baseType: !1812, size: 8, offset: 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1800, file: !1801, line: 427, baseType: !1812, size: 8, offset: 264)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1800, file: !1801, line: 428, baseType: !1812, size: 8, offset: 272)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1800, file: !1801, line: 429, baseType: !1812, size: 8, offset: 280)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1800, file: !1801, line: 430, baseType: !1812, size: 8, offset: 288)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1800, file: !1801, line: 431, baseType: !1812, size: 8, offset: 296)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1800, file: !1801, line: 432, baseType: !1812, size: 8, offset: 304)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1800, file: !1801, line: 433, baseType: !1812, size: 8, offset: 312)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1800, file: !1801, line: 434, baseType: !1812, size: 8, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1800, file: !1801, line: 435, baseType: !1812, size: 8, offset: 328)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1800, file: !1801, line: 436, baseType: !1812, size: 8, offset: 336)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1800, file: !1801, line: 437, baseType: !1812, size: 8, offset: 344)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1800, file: !1801, line: 438, baseType: !1812, size: 8, offset: 352)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1800, file: !1801, line: 439, baseType: !1812, size: 8, offset: 360)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1800, file: !1801, line: 440, baseType: !1812, size: 8, offset: 368)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1800, file: !1801, line: 441, baseType: !1812, size: 8, offset: 376)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1800, file: !1801, line: 442, baseType: !1812, size: 8, offset: 384)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1800, file: !1801, line: 443, baseType: !1812, size: 8, offset: 392)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1800, file: !1801, line: 444, baseType: !1812, size: 8, offset: 400)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1800, file: !1801, line: 445, baseType: !1812, size: 8, offset: 408)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1800, file: !1801, line: 446, baseType: !1812, size: 8, offset: 416)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1800, file: !1801, line: 447, baseType: !1812, size: 8, offset: 424)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1800, file: !1801, line: 448, baseType: !1812, size: 8, offset: 432)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1800, file: !1801, line: 449, baseType: !1812, size: 8, offset: 440)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1800, file: !1801, line: 450, baseType: !1812, size: 8, offset: 448)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1800, file: !1801, line: 451, baseType: !1812, size: 8, offset: 456)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1800, file: !1801, line: 452, baseType: !1812, size: 8, offset: 464)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1800, file: !1801, line: 453, baseType: !1812, size: 8, offset: 472)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1800, file: !1801, line: 454, baseType: !1812, size: 8, offset: 480)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1800, file: !1801, line: 455, baseType: !1812, size: 8, offset: 488)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1800, file: !1801, line: 456, baseType: !1812, size: 8, offset: 496)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1800, file: !1801, line: 457, baseType: !1812, size: 8, offset: 504)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1800, file: !1801, line: 458, baseType: !1812, size: 8, offset: 512)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1800, file: !1801, line: 459, baseType: !1812, size: 8, offset: 520)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1800, file: !1801, line: 460, baseType: !1812, size: 8, offset: 528)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1800, file: !1801, line: 461, baseType: !1812, size: 8, offset: 536)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1800, file: !1801, line: 462, baseType: !1812, size: 8, offset: 544)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1800, file: !1801, line: 463, baseType: !1812, size: 8, offset: 552)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1800, file: !1801, line: 464, baseType: !1812, size: 8, offset: 560)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1800, file: !1801, line: 465, baseType: !1812, size: 8, offset: 568)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1800, file: !1801, line: 466, baseType: !1812, size: 8, offset: 576)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1800, file: !1801, line: 467, baseType: !1812, size: 8, offset: 584)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1800, file: !1801, line: 468, baseType: !1812, size: 8, offset: 592)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1800, file: !1801, line: 469, baseType: !1812, size: 8, offset: 600)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1800, file: !1801, line: 470, baseType: !1812, size: 8, offset: 608)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1800, file: !1801, line: 471, baseType: !1812, size: 8, offset: 616)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1800, file: !1801, line: 472, baseType: !1812, size: 8, offset: 624)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1800, file: !1801, line: 473, baseType: !1812, size: 8, offset: 632)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1800, file: !1801, line: 474, baseType: !1812, size: 8, offset: 640)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1800, file: !1801, line: 475, baseType: !1812, size: 8, offset: 648)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1800, file: !1801, line: 476, baseType: !1812, size: 8, offset: 656)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1800, file: !1801, line: 477, baseType: !1812, size: 8, offset: 664)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1800, file: !1801, line: 478, baseType: !1812, size: 8, offset: 672)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1800, file: !1801, line: 479, baseType: !1812, size: 8, offset: 680)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1800, file: !1801, line: 480, baseType: !1812, size: 8, offset: 688)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1800, file: !1801, line: 481, baseType: !1812, size: 8, offset: 696)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1800, file: !1801, line: 482, baseType: !1812, size: 8, offset: 704)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1800, file: !1801, line: 483, baseType: !1812, size: 8, offset: 712)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1800, file: !1801, line: 484, baseType: !1812, size: 8, offset: 720)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1800, file: !1801, line: 485, baseType: !1812, size: 8, offset: 728)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1800, file: !1801, line: 486, baseType: !1812, size: 8, offset: 736)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1800, file: !1801, line: 487, baseType: !1812, size: 8, offset: 744)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1800, file: !1801, line: 488, baseType: !1812, size: 8, offset: 752)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1800, file: !1801, line: 489, baseType: !1812, size: 8, offset: 760)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1800, file: !1801, line: 490, baseType: !1812, size: 8, offset: 768)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1800, file: !1801, line: 491, baseType: !1812, size: 8, offset: 776)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1800, file: !1801, line: 492, baseType: !1812, size: 8, offset: 784)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1800, file: !1801, line: 493, baseType: !1812, size: 8, offset: 792)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1800, file: !1801, line: 494, baseType: !1812, size: 8, offset: 800)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1800, file: !1801, line: 495, baseType: !1812, size: 8, offset: 808)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1800, file: !1801, line: 496, baseType: !1812, size: 8, offset: 816)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1800, file: !1801, line: 497, baseType: !1812, size: 8, offset: 824)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1800, file: !1801, line: 498, baseType: !1812, size: 8, offset: 832)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1800, file: !1801, line: 499, baseType: !1812, size: 8, offset: 840)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1800, file: !1801, line: 500, baseType: !1812, size: 8, offset: 848)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1800, file: !1801, line: 501, baseType: !1812, size: 8, offset: 856)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1800, file: !1801, line: 502, baseType: !1812, size: 8, offset: 864)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1800, file: !1801, line: 503, baseType: !1812, size: 8, offset: 872)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1800, file: !1801, line: 504, baseType: !1812, size: 8, offset: 880)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1800, file: !1801, line: 505, baseType: !1812, size: 8, offset: 888)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1800, file: !1801, line: 506, baseType: !1812, size: 8, offset: 896)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1800, file: !1801, line: 507, baseType: !1812, size: 8, offset: 904)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1800, file: !1801, line: 508, baseType: !1812, size: 8, offset: 912)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1800, file: !1801, line: 509, baseType: !1812, size: 8, offset: 920)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1800, file: !1801, line: 510, baseType: !1812, size: 8, offset: 928)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1800, file: !1801, line: 511, baseType: !1812, size: 8, offset: 936)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1800, file: !1801, line: 512, baseType: !1812, size: 8, offset: 944)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1800, file: !1801, line: 513, baseType: !1812, size: 8, offset: 952)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1800, file: !1801, line: 514, baseType: !1812, size: 8, offset: 960)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1800, file: !1801, line: 515, baseType: !1812, size: 8, offset: 968)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1800, file: !1801, line: 516, baseType: !1812, size: 8, offset: 976)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1800, file: !1801, line: 517, baseType: !1812, size: 8, offset: 984)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1800, file: !1801, line: 518, baseType: !1812, size: 8, offset: 992)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1800, file: !1801, line: 519, baseType: !1812, size: 8, offset: 1000)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1800, file: !1801, line: 520, baseType: !1812, size: 8, offset: 1008)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1800, file: !1801, line: 521, baseType: !1812, size: 8, offset: 1016)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1800, file: !1801, line: 522, baseType: !1812, size: 8, offset: 1024)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1800, file: !1801, line: 523, baseType: !1812, size: 8, offset: 1032)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1800, file: !1801, line: 524, baseType: !1812, size: 8, offset: 1040)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1800, file: !1801, line: 525, baseType: !1812, size: 8, offset: 1048)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1800, file: !1801, line: 526, baseType: !1812, size: 8, offset: 1056)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1800, file: !1801, line: 527, baseType: !1812, size: 8, offset: 1064)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1800, file: !1801, line: 528, baseType: !1812, size: 8, offset: 1072)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1800, file: !1801, line: 529, baseType: !1812, size: 8, offset: 1080)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1800, file: !1801, line: 530, baseType: !1812, size: 8, offset: 1088)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1800, file: !1801, line: 531, baseType: !1812, size: 8, offset: 1096)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1800, file: !1801, line: 532, baseType: !1812, size: 8, offset: 1104)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1800, file: !1801, line: 533, baseType: !1812, size: 8, offset: 1112)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1800, file: !1801, line: 534, baseType: !1812, size: 8, offset: 1120)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1800, file: !1801, line: 535, baseType: !1812, size: 8, offset: 1128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1800, file: !1801, line: 536, baseType: !1812, size: 8, offset: 1136)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1800, file: !1801, line: 537, baseType: !1812, size: 8, offset: 1144)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1800, file: !1801, line: 538, baseType: !1812, size: 8, offset: 1152)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1800, file: !1801, line: 539, baseType: !1812, size: 8, offset: 1160)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1800, file: !1801, line: 540, baseType: !1812, size: 8, offset: 1168)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1800, file: !1801, line: 541, baseType: !1812, size: 8, offset: 1176)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1800, file: !1801, line: 542, baseType: !1812, size: 8, offset: 1184)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1800, file: !1801, line: 543, baseType: !1812, size: 8, offset: 1192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1800, file: !1801, line: 544, baseType: !1812, size: 8, offset: 1200)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1800, file: !1801, line: 545, baseType: !1812, size: 8, offset: 1208)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1800, file: !1801, line: 546, baseType: !1812, size: 8, offset: 1216)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1800, file: !1801, line: 547, baseType: !1812, size: 8, offset: 1224)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1800, file: !1801, line: 548, baseType: !1812, size: 8, offset: 1232)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1800, file: !1801, line: 549, baseType: !1812, size: 8, offset: 1240)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1800, file: !1801, line: 550, baseType: !1812, size: 8, offset: 1248)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1800, file: !1801, line: 551, baseType: !1812, size: 8, offset: 1256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1800, file: !1801, line: 552, baseType: !1812, size: 8, offset: 1264)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1800, file: !1801, line: 553, baseType: !1812, size: 8, offset: 1272)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1800, file: !1801, line: 554, baseType: !1812, size: 8, offset: 1280)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1800, file: !1801, line: 555, baseType: !1812, size: 8, offset: 1288)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1800, file: !1801, line: 556, baseType: !1812, size: 8, offset: 1296)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1800, file: !1801, line: 557, baseType: !1812, size: 8, offset: 1304)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1800, file: !1801, line: 558, baseType: !1812, size: 8, offset: 1312)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1800, file: !1801, line: 559, baseType: !1812, size: 8, offset: 1320)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1800, file: !1801, line: 560, baseType: !1812, size: 8, offset: 1328)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1800, file: !1801, line: 561, baseType: !1812, size: 8, offset: 1336)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1800, file: !1801, line: 562, baseType: !1812, size: 8, offset: 1344)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1800, file: !1801, line: 563, baseType: !1812, size: 8, offset: 1352)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1800, file: !1801, line: 564, baseType: !1812, size: 8, offset: 1360)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1800, file: !1801, line: 565, baseType: !1812, size: 8, offset: 1368)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1800, file: !1801, line: 566, baseType: !1812, size: 8, offset: 1376)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1800, file: !1801, line: 567, baseType: !1812, size: 8, offset: 1384)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1800, file: !1801, line: 568, baseType: !1812, size: 8, offset: 1392)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1800, file: !1801, line: 569, baseType: !1812, size: 8, offset: 1400)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1800, file: !1801, line: 570, baseType: !1812, size: 8, offset: 1408)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1800, file: !1801, line: 571, baseType: !1812, size: 8, offset: 1416)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1800, file: !1801, line: 572, baseType: !1812, size: 8, offset: 1424)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1800, file: !1801, line: 573, baseType: !1812, size: 8, offset: 1432)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1800, file: !1801, line: 574, baseType: !1812, size: 8, offset: 1440)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !663, file: !151, line: 3405, baseType: !1968, size: 384)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1968, file: !151, line: 3353, baseType: !699, size: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1968, file: !151, line: 3356, baseType: !1972, size: 192, offset: 192)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1801, line: 578, size: 192, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1972, file: !1801, line: 580, baseType: !635, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1972, file: !1801, line: 581, baseType: !635, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1972, file: !1801, line: 582, baseType: !635, size: 32, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1972, file: !1801, line: 583, baseType: !635, size: 32, offset: 96)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1972, file: !1801, line: 584, baseType: !634, size: 8, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1972, file: !1801, line: 585, baseType: !634, size: 8, offset: 136)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1972, file: !1801, line: 586, baseType: !634, size: 8, offset: 144)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1972, file: !1801, line: 587, baseType: !634, size: 8, offset: 152)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1972, file: !1801, line: 588, baseType: !634, size: 8, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1972, file: !1801, line: 589, baseType: !634, size: 8, offset: 168)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1972, file: !1801, line: 590, baseType: !634, size: 8, offset: 176)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !657, file: !643, line: 554, baseType: !660, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !657, file: !643, line: 555, baseType: !787, size: 32, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !378, line: 27, baseType: !1018)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !378, line: 30, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !151, line: 1893, baseType: !1025)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int_tree_map", file: !643, line: 321, size: 128, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1994, file: !643, line: 323, baseType: !7, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1994, file: !643, line: 324, baseType: !660, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !661, line: 59, baseType: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !663)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_stmt_info", file: !568, line: 4652, size: 448, elements: !2005)
!2005 = !{!2006, !2013, !2014, !2017, !2018, !2019, !2020, !2021}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !2004, file: !568, line: 4655, baseType: !2007, size: 192)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !568, line: 265, baseType: !2008)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 254, size: 192, elements: !2009)
!2009 = !{!2010, !2011, !2012}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2008, file: !568, line: 257, baseType: !979, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2008, file: !568, line: 263, baseType: !974, size: 64, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2008, file: !568, line: 264, baseType: !1416, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2004, file: !568, line: 4659, baseType: !639, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !2004, file: !568, line: 4664, baseType: !2015, size: 64, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !151, line: 5199, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "val_only", scope: !2004, file: !568, line: 4678, baseType: !634, size: 8, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "is_lhs", scope: !2004, file: !568, line: 4681, baseType: !634, size: 8, offset: 328)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2004, file: !568, line: 4685, baseType: !634, size: 8, offset: 336)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "want_locations", scope: !2004, file: !568, line: 4688, baseType: !634, size: 8, offset: 344)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !2004, file: !568, line: 4694, baseType: !660, size: 64, offset: 384)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_data", file: !3, line: 1681, size: 128, elements: !2024)
!2024 = !{!2025, !2026, !2027}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2023, file: !3, line: 1682, baseType: !984, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "always_executed", scope: !2023, file: !3, line: 1683, baseType: !634, size: 8, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "warn_possibly_uninitialized", scope: !2023, file: !3, line: 1684, baseType: !634, size: 8, offset: 72)
!2028 = !{!2029, !2057, !2059, !0}
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "pass_early_warn_uninitialized", scope: !2, file: !3, line: 1867, type: !2031, isLocal: false, isDefinition: true)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !385, line: 156, size: 640, elements: !2032)
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2031, file: !385, line: 158, baseType: !2034, size: 640)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !385, line: 114, size: 640, elements: !2035)
!2035 = !{!2036, !2037, !2038, !2042, !2046, !2048, !2049, !2050, !2052, !2053, !2054, !2055, !2056}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2034, file: !385, line: 117, baseType: !384, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2034, file: !385, line: 121, baseType: !640, size: 64, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2034, file: !385, line: 125, baseType: !2039, size: 64, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!634}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2034, file: !385, line: 130, baseType: !2043, size: 64, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!7}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2034, file: !385, line: 133, baseType: !2047, size: 64, offset: 256)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2034, file: !385, line: 136, baseType: !2047, size: 64, offset: 320)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2034, file: !385, line: 139, baseType: !635, size: 32, offset: 384)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2034, file: !385, line: 143, baseType: !2051, size: 32, offset: 416)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !392, line: 80, baseType: !391)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2034, file: !385, line: 146, baseType: !7, size: 32, offset: 448)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2034, file: !385, line: 147, baseType: !7, size: 32, offset: 480)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2034, file: !385, line: 148, baseType: !7, size: 32, offset: 512)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2034, file: !385, line: 151, baseType: !7, size: 32, offset: 544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2034, file: !385, line: 152, baseType: !7, size: 32, offset: 576)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "pass_late_warn_uninitialized", scope: !2, file: !3, line: 1886, type: !2031, isLocal: false, isDefinition: true)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "pass_update_address_taken", scope: !2, file: !3, line: 2037, type: !2031, isLocal: false, isDefinition: true)
!2061 = !{i32 2, !"Dwarf Version", i32 4}
!2062 = !{i32 2, !"Debug Info Version", i32 3}
!2063 = !{i32 1, !"wchar_size", i32 4}
!2064 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2065 = distinct !DISubprogram(name: "vprintf", scope: !2066, file: !2066, line: 39, type: !2067, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2077)
!2066 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!635, !2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !640)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2071, file: !3, baseType: !7, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2071, file: !3, baseType: !7, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2071, file: !3, baseType: !639, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2071, file: !3, baseType: !639, size: 64, offset: 128)
!2077 = !{!2078, !2079}
!2078 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2065, file: !2066, line: 39, type: !2069)
!2079 = !DILocalVariable(name: "__arg", arg: 2, scope: !2065, file: !2066, line: 39, type: !2070)
!2080 = !DILocation(line: 0, scope: !2065)
!2081 = !DILocation(line: 41, column: 20, scope: !2065)
!2082 = !DILocation(line: 41, column: 10, scope: !2065)
!2083 = !DILocation(line: 41, column: 3, scope: !2065)
!2084 = distinct !DISubprogram(name: "getchar", scope: !2066, file: !2066, line: 47, type: !2085, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!635}
!2087 = !{}
!2088 = !DILocation(line: 49, column: 16, scope: !2084)
!2089 = !DILocation(line: 49, column: 10, scope: !2084)
!2090 = !DILocation(line: 49, column: 3, scope: !2084)
!2091 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2066, file: !2066, line: 56, type: !2092, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!635, !2094}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2096, line: 7, baseType: !2097)
!2096 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2098, line: 49, size: 1728, elements: !2099)
!2098 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2115, !2117, !2118, !2119, !2122, !2124, !2125, !2126, !2129, !2131, !2134, !2137, !2138, !2139, !2140, !2141}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2097, file: !2098, line: 51, baseType: !635, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2097, file: !2098, line: 54, baseType: !637, size: 64, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2097, file: !2098, line: 55, baseType: !637, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2097, file: !2098, line: 56, baseType: !637, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2097, file: !2098, line: 57, baseType: !637, size: 64, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2097, file: !2098, line: 58, baseType: !637, size: 64, offset: 320)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2097, file: !2098, line: 59, baseType: !637, size: 64, offset: 384)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2097, file: !2098, line: 60, baseType: !637, size: 64, offset: 448)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2097, file: !2098, line: 61, baseType: !637, size: 64, offset: 512)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2097, file: !2098, line: 64, baseType: !637, size: 64, offset: 576)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2097, file: !2098, line: 65, baseType: !637, size: 64, offset: 640)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2097, file: !2098, line: 66, baseType: !637, size: 64, offset: 704)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2097, file: !2098, line: 68, baseType: !2113, size: 64, offset: 768)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2098, line: 36, flags: DIFlagFwdDecl)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2097, file: !2098, line: 70, baseType: !2116, size: 64, offset: 832)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2097, file: !2098, line: 72, baseType: !635, size: 32, offset: 896)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2097, file: !2098, line: 73, baseType: !635, size: 32, offset: 928)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2097, file: !2098, line: 74, baseType: !2120, size: 64, offset: 960)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2121, line: 152, baseType: !716)
!2121 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2097, file: !2098, line: 77, baseType: !2123, size: 16, offset: 1024)
!2123 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2097, file: !2098, line: 78, baseType: !1812, size: 8, offset: 1040)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2097, file: !2098, line: 79, baseType: !758, size: 8, offset: 1048)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2097, file: !2098, line: 81, baseType: !2127, size: 64, offset: 1088)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2098, line: 43, baseType: null)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2097, file: !2098, line: 89, baseType: !2130, size: 64, offset: 1152)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2121, line: 153, baseType: !716)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2097, file: !2098, line: 91, baseType: !2132, size: 64, offset: 1216)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2098, line: 37, flags: DIFlagFwdDecl)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2097, file: !2098, line: 92, baseType: !2135, size: 64, offset: 1280)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2098, line: 38, flags: DIFlagFwdDecl)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2097, file: !2098, line: 93, baseType: !2116, size: 64, offset: 1344)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2097, file: !2098, line: 94, baseType: !639, size: 64, offset: 1408)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2097, file: !2098, line: 95, baseType: !1129, size: 64, offset: 1472)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2097, file: !2098, line: 96, baseType: !635, size: 32, offset: 1536)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2097, file: !2098, line: 98, baseType: !2142, size: 160, offset: 1568)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 160, elements: !2143)
!2143 = !{!2144}
!2144 = !DISubrange(count: 20)
!2145 = !{!2146}
!2146 = !DILocalVariable(name: "__fp", arg: 1, scope: !2091, file: !2066, line: 56, type: !2094)
!2147 = !DILocation(line: 0, scope: !2091)
!2148 = !DILocation(line: 58, column: 10, scope: !2091)
!2149 = !DILocation(line: 58, column: 3, scope: !2091)
!2150 = distinct !DISubprogram(name: "getc_unlocked", scope: !2066, file: !2066, line: 66, type: !2092, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2151)
!2151 = !{!2152}
!2152 = !DILocalVariable(name: "__fp", arg: 1, scope: !2150, file: !2066, line: 66, type: !2094)
!2153 = !DILocation(line: 0, scope: !2150)
!2154 = !DILocation(line: 68, column: 10, scope: !2150)
!2155 = !DILocation(line: 68, column: 3, scope: !2150)
!2156 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2066, file: !2066, line: 73, type: !2085, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!2157 = !DILocation(line: 75, column: 10, scope: !2156)
!2158 = !DILocation(line: 75, column: 3, scope: !2156)
!2159 = distinct !DISubprogram(name: "putchar", scope: !2066, file: !2066, line: 82, type: !2160, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!635, !635}
!2162 = !{!2163}
!2163 = !DILocalVariable(name: "__c", arg: 1, scope: !2159, file: !2066, line: 82, type: !635)
!2164 = !DILocation(line: 0, scope: !2159)
!2165 = !DILocation(line: 84, column: 21, scope: !2159)
!2166 = !DILocation(line: 84, column: 10, scope: !2159)
!2167 = !DILocation(line: 84, column: 3, scope: !2159)
!2168 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2066, file: !2066, line: 91, type: !2169, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2171)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!635, !635, !2094}
!2171 = !{!2172, !2173}
!2172 = !DILocalVariable(name: "__c", arg: 1, scope: !2168, file: !2066, line: 91, type: !635)
!2173 = !DILocalVariable(name: "__stream", arg: 2, scope: !2168, file: !2066, line: 91, type: !2094)
!2174 = !DILocation(line: 0, scope: !2168)
!2175 = !DILocation(line: 93, column: 10, scope: !2168)
!2176 = !DILocation(line: 93, column: 3, scope: !2168)
!2177 = distinct !DISubprogram(name: "putc_unlocked", scope: !2066, file: !2066, line: 101, type: !2169, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2178)
!2178 = !{!2179, !2180}
!2179 = !DILocalVariable(name: "__c", arg: 1, scope: !2177, file: !2066, line: 101, type: !635)
!2180 = !DILocalVariable(name: "__stream", arg: 2, scope: !2177, file: !2066, line: 101, type: !2094)
!2181 = !DILocation(line: 0, scope: !2177)
!2182 = !DILocation(line: 103, column: 10, scope: !2177)
!2183 = !DILocation(line: 103, column: 3, scope: !2177)
!2184 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2066, file: !2066, line: 108, type: !2160, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2185)
!2185 = !{!2186}
!2186 = !DILocalVariable(name: "__c", arg: 1, scope: !2184, file: !2066, line: 108, type: !635)
!2187 = !DILocation(line: 0, scope: !2184)
!2188 = !DILocation(line: 110, column: 10, scope: !2184)
!2189 = !DILocation(line: 110, column: 3, scope: !2184)
!2190 = distinct !DISubprogram(name: "getline", scope: !2066, file: !2066, line: 118, type: !2191, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2195)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!2193, !636, !2194, !2094}
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2121, line: 193, baseType: !716)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!2195 = !{!2196, !2197, !2198}
!2196 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2190, file: !2066, line: 118, type: !636)
!2197 = !DILocalVariable(name: "__n", arg: 2, scope: !2190, file: !2066, line: 118, type: !2194)
!2198 = !DILocalVariable(name: "__stream", arg: 3, scope: !2190, file: !2066, line: 118, type: !2094)
!2199 = !DILocation(line: 0, scope: !2190)
!2200 = !DILocation(line: 120, column: 10, scope: !2190)
!2201 = !DILocation(line: 120, column: 3, scope: !2190)
!2202 = distinct !DISubprogram(name: "feof_unlocked", scope: !2066, file: !2066, line: 128, type: !2092, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2203)
!2203 = !{!2204}
!2204 = !DILocalVariable(name: "__stream", arg: 1, scope: !2202, file: !2066, line: 128, type: !2094)
!2205 = !DILocation(line: 0, scope: !2202)
!2206 = !DILocation(line: 130, column: 10, scope: !2202)
!2207 = !DILocation(line: 130, column: 3, scope: !2202)
!2208 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2066, file: !2066, line: 135, type: !2092, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2209)
!2209 = !{!2210}
!2210 = !DILocalVariable(name: "__stream", arg: 1, scope: !2208, file: !2066, line: 135, type: !2094)
!2211 = !DILocation(line: 0, scope: !2208)
!2212 = !DILocation(line: 137, column: 10, scope: !2208)
!2213 = !DILocation(line: 137, column: 3, scope: !2208)
!2214 = distinct !DISubprogram(name: "tolower", scope: !2215, file: !2215, line: 207, type: !2160, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2216)
!2215 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2216 = !{!2217}
!2217 = !DILocalVariable(name: "__c", arg: 1, scope: !2214, file: !2215, line: 207, type: !635)
!2218 = !DILocation(line: 0, scope: !2214)
!2219 = !DILocation(line: 209, column: 22, scope: !2214)
!2220 = !DILocation(line: 209, column: 39, scope: !2214)
!2221 = !DILocation(line: 209, column: 38, scope: !2214)
!2222 = !DILocation(line: 209, column: 37, scope: !2214)
!2223 = !DILocation(line: 209, column: 10, scope: !2214)
!2224 = !DILocation(line: 209, column: 3, scope: !2214)
!2225 = distinct !DISubprogram(name: "toupper", scope: !2215, file: !2215, line: 213, type: !2160, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2226)
!2226 = !{!2227}
!2227 = !DILocalVariable(name: "__c", arg: 1, scope: !2225, file: !2215, line: 213, type: !635)
!2228 = !DILocation(line: 0, scope: !2225)
!2229 = !DILocation(line: 215, column: 22, scope: !2225)
!2230 = !DILocation(line: 215, column: 39, scope: !2225)
!2231 = !DILocation(line: 215, column: 38, scope: !2225)
!2232 = !DILocation(line: 215, column: 37, scope: !2225)
!2233 = !DILocation(line: 215, column: 10, scope: !2225)
!2234 = !DILocation(line: 215, column: 3, scope: !2225)
!2235 = distinct !DISubprogram(name: "atoi", scope: !2236, file: !2236, line: 361, type: !2237, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2239)
!2236 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!635, !640}
!2239 = !{!2240}
!2240 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2235, file: !2236, line: 361, type: !640)
!2241 = !DILocation(line: 0, scope: !2235)
!2242 = !DILocation(line: 363, column: 16, scope: !2235)
!2243 = !DILocation(line: 363, column: 10, scope: !2235)
!2244 = !DILocation(line: 363, column: 3, scope: !2235)
!2245 = distinct !DISubprogram(name: "atol", scope: !2236, file: !2236, line: 366, type: !2246, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2248)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{!716, !640}
!2248 = !{!2249}
!2249 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2245, file: !2236, line: 366, type: !640)
!2250 = !DILocation(line: 0, scope: !2245)
!2251 = !DILocation(line: 368, column: 10, scope: !2245)
!2252 = !DILocation(line: 368, column: 3, scope: !2245)
!2253 = distinct !DISubprogram(name: "atoll", scope: !2236, file: !2236, line: 373, type: !2254, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2257)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!2256, !640}
!2256 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2257 = !{!2258}
!2258 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2253, file: !2236, line: 373, type: !640)
!2259 = !DILocation(line: 0, scope: !2253)
!2260 = !DILocation(line: 375, column: 10, scope: !2253)
!2261 = !DILocation(line: 375, column: 3, scope: !2253)
!2262 = distinct !DISubprogram(name: "bsearch", scope: !2263, file: !2263, line: 20, type: !2264, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!2263 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!639, !1290, !1290, !1129, !1129, !2266}
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2236, line: 808, baseType: !1461)
!2267 = !{!2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277}
!2268 = !DILocalVariable(name: "__key", arg: 1, scope: !2262, file: !2263, line: 20, type: !1290)
!2269 = !DILocalVariable(name: "__base", arg: 2, scope: !2262, file: !2263, line: 20, type: !1290)
!2270 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2262, file: !2263, line: 20, type: !1129)
!2271 = !DILocalVariable(name: "__size", arg: 4, scope: !2262, file: !2263, line: 20, type: !1129)
!2272 = !DILocalVariable(name: "__compar", arg: 5, scope: !2262, file: !2263, line: 21, type: !2266)
!2273 = !DILocalVariable(name: "__l", scope: !2262, file: !2263, line: 23, type: !1129)
!2274 = !DILocalVariable(name: "__u", scope: !2262, file: !2263, line: 23, type: !1129)
!2275 = !DILocalVariable(name: "__idx", scope: !2262, file: !2263, line: 23, type: !1129)
!2276 = !DILocalVariable(name: "__p", scope: !2262, file: !2263, line: 24, type: !1290)
!2277 = !DILocalVariable(name: "__comparison", scope: !2262, file: !2263, line: 25, type: !635)
!2278 = !DILocation(line: 0, scope: !2262)
!2279 = !DILocation(line: 29, column: 3, scope: !2262)
!2280 = !DILocation(line: 27, column: 7, scope: !2262)
!2281 = !DILocation(line: 29, column: 14, scope: !2262)
!2282 = !DILocation(line: 31, column: 20, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2262, file: !2263, line: 30, column: 5)
!2284 = !DILocation(line: 31, column: 27, scope: !2283)
!2285 = !DILocation(line: 32, column: 56, scope: !2283)
!2286 = !DILocation(line: 32, column: 47, scope: !2283)
!2287 = !DILocation(line: 33, column: 22, scope: !2283)
!2288 = !DILocation(line: 34, column: 24, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2283, file: !2263, line: 34, column: 11)
!2290 = !DILocation(line: 34, column: 11, scope: !2283)
!2291 = !DILocation(line: 36, column: 29, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2289, file: !2263, line: 36, column: 16)
!2293 = !DILocation(line: 36, column: 16, scope: !2289)
!2294 = !DILocation(line: 37, column: 14, scope: !2292)
!2295 = distinct !{!2295, !2279, !2296}
!2296 = !DILocation(line: 40, column: 5, scope: !2262)
!2297 = !DILocation(line: 43, column: 1, scope: !2262)
!2298 = distinct !DISubprogram(name: "atof", scope: !2299, file: !2299, line: 25, type: !2300, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2303)
!2299 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!2302, !640}
!2302 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2303 = !{!2304}
!2304 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2298, file: !2299, line: 25, type: !640)
!2305 = !DILocation(line: 0, scope: !2298)
!2306 = !DILocation(line: 27, column: 10, scope: !2298)
!2307 = !DILocation(line: 27, column: 3, scope: !2298)
!2308 = distinct !DISubprogram(name: "strtoimax", scope: !2309, file: !2309, line: 324, type: !2310, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2316)
!2309 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!2312, !2069, !2315, !635}
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2313, line: 101, baseType: !2314)
!2313 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2121, line: 72, baseType: !716)
!2315 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !636)
!2316 = !{!2317, !2318, !2319}
!2317 = !DILocalVariable(name: "nptr", arg: 1, scope: !2308, file: !2309, line: 324, type: !2069)
!2318 = !DILocalVariable(name: "endptr", arg: 2, scope: !2308, file: !2309, line: 324, type: !2315)
!2319 = !DILocalVariable(name: "base", arg: 3, scope: !2308, file: !2309, line: 324, type: !635)
!2320 = !DILocation(line: 0, scope: !2308)
!2321 = !DILocation(line: 327, column: 10, scope: !2308)
!2322 = !DILocation(line: 327, column: 3, scope: !2308)
!2323 = distinct !DISubprogram(name: "strtoumax", scope: !2309, file: !2309, line: 336, type: !2324, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2328)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!2326, !2069, !2315, !635}
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2313, line: 102, baseType: !2327)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2121, line: 73, baseType: !714)
!2328 = !{!2329, !2330, !2331}
!2329 = !DILocalVariable(name: "nptr", arg: 1, scope: !2323, file: !2309, line: 336, type: !2069)
!2330 = !DILocalVariable(name: "endptr", arg: 2, scope: !2323, file: !2309, line: 336, type: !2315)
!2331 = !DILocalVariable(name: "base", arg: 3, scope: !2323, file: !2309, line: 336, type: !635)
!2332 = !DILocation(line: 0, scope: !2323)
!2333 = !DILocation(line: 339, column: 10, scope: !2323)
!2334 = !DILocation(line: 339, column: 3, scope: !2323)
!2335 = distinct !DISubprogram(name: "wcstoimax", scope: !2309, file: !2309, line: 348, type: !2336, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2345)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!2312, !2338, !2342, !635}
!2338 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2309, line: 34, baseType: !635)
!2342 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2343)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2345 = !{!2346, !2347, !2348}
!2346 = !DILocalVariable(name: "nptr", arg: 1, scope: !2335, file: !2309, line: 348, type: !2338)
!2347 = !DILocalVariable(name: "endptr", arg: 2, scope: !2335, file: !2309, line: 348, type: !2342)
!2348 = !DILocalVariable(name: "base", arg: 3, scope: !2335, file: !2309, line: 348, type: !635)
!2349 = !DILocation(line: 0, scope: !2335)
!2350 = !DILocation(line: 351, column: 10, scope: !2335)
!2351 = !DILocation(line: 351, column: 3, scope: !2335)
!2352 = distinct !DISubprogram(name: "wcstoumax", scope: !2309, file: !2309, line: 362, type: !2353, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2355)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!2326, !2338, !2342, !635}
!2355 = !{!2356, !2357, !2358}
!2356 = !DILocalVariable(name: "nptr", arg: 1, scope: !2352, file: !2309, line: 362, type: !2338)
!2357 = !DILocalVariable(name: "endptr", arg: 2, scope: !2352, file: !2309, line: 362, type: !2342)
!2358 = !DILocalVariable(name: "base", arg: 3, scope: !2352, file: !2309, line: 362, type: !635)
!2359 = !DILocation(line: 0, scope: !2352)
!2360 = !DILocation(line: 365, column: 10, scope: !2352)
!2361 = !DILocation(line: 365, column: 3, scope: !2352)
!2362 = distinct !DISubprogram(name: "stat", scope: !2363, file: !2363, line: 453, type: !2364, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2401)
!2363 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!635, !640, !2366}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2368, line: 46, size: 1152, elements: !2369)
!2368 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2369 = !{!2370, !2372, !2374, !2376, !2378, !2380, !2382, !2383, !2384, !2385, !2387, !2389, !2397, !2398, !2399}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2367, file: !2368, line: 48, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2121, line: 145, baseType: !714)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2367, file: !2368, line: 53, baseType: !2373, size: 64, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2121, line: 148, baseType: !714)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2367, file: !2368, line: 61, baseType: !2375, size: 64, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2121, line: 151, baseType: !714)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2367, file: !2368, line: 62, baseType: !2377, size: 32, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2121, line: 150, baseType: !7)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2367, file: !2368, line: 64, baseType: !2379, size: 32, offset: 224)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2121, line: 146, baseType: !7)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2367, file: !2368, line: 65, baseType: !2381, size: 32, offset: 256)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2121, line: 147, baseType: !7)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2367, file: !2368, line: 67, baseType: !635, size: 32, offset: 288)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2367, file: !2368, line: 69, baseType: !2371, size: 64, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2367, file: !2368, line: 74, baseType: !2120, size: 64, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2367, file: !2368, line: 78, baseType: !2386, size: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2121, line: 174, baseType: !716)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2367, file: !2368, line: 80, baseType: !2388, size: 64, offset: 512)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2121, line: 179, baseType: !716)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2367, file: !2368, line: 91, baseType: !2390, size: 128, offset: 576)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2391, line: 10, size: 128, elements: !2392)
!2391 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2392 = !{!2393, !2395}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2390, file: !2391, line: 12, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2121, line: 160, baseType: !716)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2390, file: !2391, line: 16, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2121, line: 196, baseType: !716)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2367, file: !2368, line: 92, baseType: !2390, size: 128, offset: 704)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2367, file: !2368, line: 93, baseType: !2390, size: 128, offset: 832)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2367, file: !2368, line: 106, baseType: !2400, size: 192, offset: 960)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 192, elements: !734)
!2401 = !{!2402, !2403}
!2402 = !DILocalVariable(name: "__path", arg: 1, scope: !2362, file: !2363, line: 453, type: !640)
!2403 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2362, file: !2363, line: 453, type: !2366)
!2404 = !DILocation(line: 0, scope: !2362)
!2405 = !DILocation(line: 455, column: 10, scope: !2362)
!2406 = !DILocation(line: 455, column: 3, scope: !2362)
!2407 = distinct !DISubprogram(name: "lstat", scope: !2363, file: !2363, line: 460, type: !2364, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2408)
!2408 = !{!2409, !2410}
!2409 = !DILocalVariable(name: "__path", arg: 1, scope: !2407, file: !2363, line: 460, type: !640)
!2410 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2407, file: !2363, line: 460, type: !2366)
!2411 = !DILocation(line: 0, scope: !2407)
!2412 = !DILocation(line: 462, column: 10, scope: !2407)
!2413 = !DILocation(line: 462, column: 3, scope: !2407)
!2414 = distinct !DISubprogram(name: "fstat", scope: !2363, file: !2363, line: 467, type: !2415, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2417)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!635, !635, !2366}
!2417 = !{!2418, !2419}
!2418 = !DILocalVariable(name: "__fd", arg: 1, scope: !2414, file: !2363, line: 467, type: !635)
!2419 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2414, file: !2363, line: 467, type: !2366)
!2420 = !DILocation(line: 0, scope: !2414)
!2421 = !DILocation(line: 469, column: 10, scope: !2414)
!2422 = !DILocation(line: 469, column: 3, scope: !2414)
!2423 = distinct !DISubprogram(name: "fstatat", scope: !2363, file: !2363, line: 474, type: !2424, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!635, !635, !640, !2366, !635}
!2426 = !{!2427, !2428, !2429, !2430}
!2427 = !DILocalVariable(name: "__fd", arg: 1, scope: !2423, file: !2363, line: 474, type: !635)
!2428 = !DILocalVariable(name: "__filename", arg: 2, scope: !2423, file: !2363, line: 474, type: !640)
!2429 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2423, file: !2363, line: 474, type: !2366)
!2430 = !DILocalVariable(name: "__flag", arg: 4, scope: !2423, file: !2363, line: 474, type: !635)
!2431 = !DILocation(line: 0, scope: !2423)
!2432 = !DILocation(line: 477, column: 10, scope: !2423)
!2433 = !DILocation(line: 477, column: 3, scope: !2423)
!2434 = distinct !DISubprogram(name: "mknod", scope: !2363, file: !2363, line: 483, type: !2435, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2437)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{!635, !640, !2377, !2371}
!2437 = !{!2438, !2439, !2440}
!2438 = !DILocalVariable(name: "__path", arg: 1, scope: !2434, file: !2363, line: 483, type: !640)
!2439 = !DILocalVariable(name: "__mode", arg: 2, scope: !2434, file: !2363, line: 483, type: !2377)
!2440 = !DILocalVariable(name: "__dev", arg: 3, scope: !2434, file: !2363, line: 483, type: !2371)
!2441 = !DILocation(line: 0, scope: !2434)
!2442 = !DILocation(line: 485, column: 10, scope: !2434)
!2443 = !DILocation(line: 485, column: 3, scope: !2434)
!2444 = distinct !DISubprogram(name: "mknodat", scope: !2363, file: !2363, line: 491, type: !2445, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2447)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!635, !635, !640, !2377, !2371}
!2447 = !{!2448, !2449, !2450, !2451}
!2448 = !DILocalVariable(name: "__fd", arg: 1, scope: !2444, file: !2363, line: 491, type: !635)
!2449 = !DILocalVariable(name: "__path", arg: 2, scope: !2444, file: !2363, line: 491, type: !640)
!2450 = !DILocalVariable(name: "__mode", arg: 3, scope: !2444, file: !2363, line: 491, type: !2377)
!2451 = !DILocalVariable(name: "__dev", arg: 4, scope: !2444, file: !2363, line: 491, type: !2371)
!2452 = !DILocation(line: 0, scope: !2444)
!2453 = !DILocation(line: 494, column: 10, scope: !2444)
!2454 = !DILocation(line: 494, column: 3, scope: !2444)
!2455 = distinct !DISubprogram(name: "stat64", scope: !2363, file: !2363, line: 502, type: !2456, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!635, !640, !2458}
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2368, line: 119, size: 1152, elements: !2460)
!2460 = !{!2461, !2462, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2474, !2475, !2476, !2477}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2459, file: !2368, line: 121, baseType: !2371, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2459, file: !2368, line: 123, baseType: !2463, size: 64, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2121, line: 149, baseType: !714)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2459, file: !2368, line: 124, baseType: !2375, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2459, file: !2368, line: 125, baseType: !2377, size: 32, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2459, file: !2368, line: 132, baseType: !2379, size: 32, offset: 224)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2459, file: !2368, line: 133, baseType: !2381, size: 32, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2459, file: !2368, line: 135, baseType: !635, size: 32, offset: 288)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2459, file: !2368, line: 136, baseType: !2371, size: 64, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2459, file: !2368, line: 137, baseType: !2120, size: 64, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2459, file: !2368, line: 143, baseType: !2386, size: 64, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2459, file: !2368, line: 144, baseType: !2473, size: 64, offset: 512)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2121, line: 180, baseType: !716)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2459, file: !2368, line: 152, baseType: !2390, size: 128, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2459, file: !2368, line: 153, baseType: !2390, size: 128, offset: 704)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2459, file: !2368, line: 154, baseType: !2390, size: 128, offset: 832)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2459, file: !2368, line: 164, baseType: !2400, size: 192, offset: 960)
!2478 = !{!2479, !2480}
!2479 = !DILocalVariable(name: "__path", arg: 1, scope: !2455, file: !2363, line: 502, type: !640)
!2480 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2455, file: !2363, line: 502, type: !2458)
!2481 = !DILocation(line: 0, scope: !2455)
!2482 = !DILocation(line: 504, column: 10, scope: !2455)
!2483 = !DILocation(line: 504, column: 3, scope: !2455)
!2484 = distinct !DISubprogram(name: "lstat64", scope: !2363, file: !2363, line: 509, type: !2456, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2485 = !{!2486, !2487}
!2486 = !DILocalVariable(name: "__path", arg: 1, scope: !2484, file: !2363, line: 509, type: !640)
!2487 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2484, file: !2363, line: 509, type: !2458)
!2488 = !DILocation(line: 0, scope: !2484)
!2489 = !DILocation(line: 511, column: 10, scope: !2484)
!2490 = !DILocation(line: 511, column: 3, scope: !2484)
!2491 = distinct !DISubprogram(name: "fstat64", scope: !2363, file: !2363, line: 516, type: !2492, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2494)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!635, !635, !2458}
!2494 = !{!2495, !2496}
!2495 = !DILocalVariable(name: "__fd", arg: 1, scope: !2491, file: !2363, line: 516, type: !635)
!2496 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2491, file: !2363, line: 516, type: !2458)
!2497 = !DILocation(line: 0, scope: !2491)
!2498 = !DILocation(line: 518, column: 10, scope: !2491)
!2499 = !DILocation(line: 518, column: 3, scope: !2491)
!2500 = distinct !DISubprogram(name: "fstatat64", scope: !2363, file: !2363, line: 523, type: !2501, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2503)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!635, !635, !640, !2458, !635}
!2503 = !{!2504, !2505, !2506, !2507}
!2504 = !DILocalVariable(name: "__fd", arg: 1, scope: !2500, file: !2363, line: 523, type: !635)
!2505 = !DILocalVariable(name: "__filename", arg: 2, scope: !2500, file: !2363, line: 523, type: !640)
!2506 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2500, file: !2363, line: 523, type: !2458)
!2507 = !DILocalVariable(name: "__flag", arg: 4, scope: !2500, file: !2363, line: 523, type: !635)
!2508 = !DILocation(line: 0, scope: !2500)
!2509 = !DILocation(line: 526, column: 10, scope: !2500)
!2510 = !DILocation(line: 526, column: 3, scope: !2500)
!2511 = distinct !DISubprogram(name: "redirect_edge_var_map_add", scope: !3, file: !3, line: 57, type: !2512, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2514)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !964, !660, !660, !787}
!2514 = !{!2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522}
!2515 = !DILocalVariable(name: "e", arg: 1, scope: !2511, file: !3, line: 57, type: !964)
!2516 = !DILocalVariable(name: "result", arg: 2, scope: !2511, file: !3, line: 57, type: !660)
!2517 = !DILocalVariable(name: "def", arg: 3, scope: !2511, file: !3, line: 57, type: !660)
!2518 = !DILocalVariable(name: "locus", arg: 4, scope: !2511, file: !3, line: 57, type: !787)
!2519 = !DILocalVariable(name: "slot", scope: !2511, file: !3, line: 59, type: !1470)
!2520 = !DILocalVariable(name: "old_head", scope: !2511, file: !3, line: 60, type: !642)
!2521 = !DILocalVariable(name: "head", scope: !2511, file: !3, line: 60, type: !642)
!2522 = !DILocalVariable(name: "new_node", scope: !2511, file: !3, line: 61, type: !656)
!2523 = !DILocation(line: 0, scope: !2511)
!2524 = !DILocation(line: 60, column: 3, scope: !2511)
!2525 = !DILocation(line: 61, column: 3, scope: !2511)
!2526 = !DILocation(line: 63, column: 7, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 63, column: 7)
!2528 = !DILocation(line: 63, column: 21, scope: !2527)
!2529 = !DILocation(line: 63, column: 7, scope: !2511)
!2530 = !DILocation(line: 64, column: 21, scope: !2527)
!2531 = !DILocation(line: 64, column: 19, scope: !2527)
!2532 = !DILocation(line: 64, column: 5, scope: !2527)
!2533 = !DILocation(line: 66, column: 30, scope: !2511)
!2534 = !DILocation(line: 66, column: 45, scope: !2511)
!2535 = !DILocation(line: 66, column: 10, scope: !2511)
!2536 = !DILocation(line: 67, column: 43, scope: !2511)
!2537 = !DILocation(line: 67, column: 19, scope: !2511)
!2538 = !DILocation(line: 68, column: 8, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 68, column: 7)
!2540 = !DILocation(line: 68, column: 7, scope: !2511)
!2541 = !DILocation(line: 70, column: 14, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2539, file: !3, line: 69, column: 5)
!2543 = !DILocation(line: 70, column: 12, scope: !2542)
!2544 = !DILocation(line: 71, column: 15, scope: !2542)
!2545 = !DILocation(line: 71, column: 13, scope: !2542)
!2546 = !DILocation(line: 72, column: 5, scope: !2542)
!2547 = !DILocation(line: 73, column: 12, scope: !2511)
!2548 = !DILocation(line: 73, column: 16, scope: !2511)
!2549 = !DILocation(line: 74, column: 12, scope: !2511)
!2550 = !DILocation(line: 74, column: 19, scope: !2511)
!2551 = !DILocation(line: 75, column: 12, scope: !2511)
!2552 = !DILocation(line: 75, column: 18, scope: !2511)
!2553 = !DILocation(line: 77, column: 3, scope: !2511)
!2554 = !DILocation(line: 78, column: 19, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 78, column: 7)
!2556 = !DILocation(line: 78, column: 16, scope: !2555)
!2557 = !DILocation(line: 78, column: 7, scope: !2511)
!2558 = !DILocation(line: 81, column: 13, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2555, file: !3, line: 79, column: 5)
!2560 = !DILocation(line: 82, column: 5, scope: !2559)
!2561 = !DILocation(line: 83, column: 1, scope: !2511)
!2562 = distinct !DISubprogram(name: "VEC_edge_var_map_heap_alloc", scope: !643, file: !643, line: 560, type: !2563, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2565)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!644, !635}
!2565 = !{!2566}
!2566 = !DILocalVariable(name: "alloc_", arg: 1, scope: !2562, file: !643, line: 560, type: !635)
!2567 = !DILocation(line: 0, scope: !2562)
!2568 = !DILocation(line: 560, column: 1, scope: !2562)
!2569 = distinct !DISubprogram(name: "VEC_edge_var_map_heap_safe_push", scope: !643, file: !643, line: 560, type: !2570, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2576)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!2572, !2573, !2574}
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !656)
!2576 = !{!2577, !2578}
!2577 = !DILocalVariable(name: "vec_", arg: 1, scope: !2569, file: !643, line: 560, type: !2573)
!2578 = !DILocalVariable(name: "obj_", arg: 2, scope: !2569, file: !643, line: 560, type: !2574)
!2579 = !DILocation(line: 0, scope: !2569)
!2580 = !DILocation(line: 560, column: 1, scope: !2569)
!2581 = distinct !DISubprogram(name: "redirect_edge_var_map_clear", scope: !3, file: !3, line: 89, type: !2582, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2584)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{null, !964}
!2584 = !{!2585, !2586, !2587}
!2585 = !DILocalVariable(name: "e", arg: 1, scope: !2581, file: !3, line: 89, type: !964)
!2586 = !DILocalVariable(name: "slot", scope: !2581, file: !3, line: 91, type: !1470)
!2587 = !DILocalVariable(name: "head", scope: !2581, file: !3, line: 92, type: !642)
!2588 = !DILocation(line: 0, scope: !2581)
!2589 = !DILocation(line: 92, column: 3, scope: !2581)
!2590 = !DILocation(line: 94, column: 8, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 94, column: 7)
!2592 = !DILocation(line: 94, column: 7, scope: !2581)
!2593 = !DILocation(line: 97, column: 47, scope: !2581)
!2594 = !DILocation(line: 97, column: 10, scope: !2581)
!2595 = !DILocation(line: 99, column: 7, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 99, column: 7)
!2597 = !DILocation(line: 99, column: 7, scope: !2581)
!2598 = !DILocation(line: 101, column: 36, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2596, file: !3, line: 100, column: 5)
!2600 = !DILocation(line: 101, column: 12, scope: !2599)
!2601 = !DILocation(line: 102, column: 7, scope: !2599)
!2602 = !DILocation(line: 103, column: 13, scope: !2599)
!2603 = !DILocation(line: 104, column: 5, scope: !2599)
!2604 = !DILocation(line: 105, column: 1, scope: !2581)
!2605 = distinct !DISubprogram(name: "VEC_edge_var_map_heap_free", scope: !643, file: !643, line: 560, type: !2606, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2608)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{null, !2573}
!2608 = !{!2609}
!2609 = !DILocalVariable(name: "vec_", arg: 1, scope: !2605, file: !643, line: 560, type: !2573)
!2610 = !DILocation(line: 0, scope: !2605)
!2611 = !DILocation(line: 560, column: 1, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2605, file: !643, line: 560, column: 1)
!2613 = !DILocation(line: 560, column: 1, scope: !2605)
!2614 = distinct !DISubprogram(name: "redirect_edge_var_map_dup", scope: !3, file: !3, line: 115, type: !2615, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2617)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{null, !964, !964}
!2617 = !{!2618, !2619, !2620, !2621, !2622}
!2618 = !DILocalVariable(name: "newe", arg: 1, scope: !2614, file: !3, line: 115, type: !964)
!2619 = !DILocalVariable(name: "olde", arg: 2, scope: !2614, file: !3, line: 115, type: !964)
!2620 = !DILocalVariable(name: "new_slot", scope: !2614, file: !3, line: 117, type: !1470)
!2621 = !DILocalVariable(name: "old_slot", scope: !2614, file: !3, line: 117, type: !1470)
!2622 = !DILocalVariable(name: "head", scope: !2614, file: !3, line: 118, type: !642)
!2623 = !DILocation(line: 0, scope: !2614)
!2624 = !DILocation(line: 120, column: 8, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 120, column: 7)
!2626 = !DILocation(line: 120, column: 7, scope: !2614)
!2627 = !DILocation(line: 123, column: 49, scope: !2614)
!2628 = !DILocation(line: 123, column: 14, scope: !2614)
!2629 = !DILocation(line: 124, column: 36, scope: !2614)
!2630 = !DILocation(line: 124, column: 51, scope: !2614)
!2631 = !DILocation(line: 124, column: 14, scope: !2614)
!2632 = !DILocation(line: 125, column: 8, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 125, column: 7)
!2634 = !DILocation(line: 125, column: 7, scope: !2614)
!2635 = !DILocation(line: 127, column: 32, scope: !2614)
!2636 = !DILocation(line: 129, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 129, column: 7)
!2638 = !DILocation(line: 129, column: 7, scope: !2614)
!2639 = !DILocation(line: 130, column: 17, scope: !2637)
!2640 = !DILocation(line: 130, column: 15, scope: !2637)
!2641 = !DILocation(line: 130, column: 5, scope: !2637)
!2642 = !DILocation(line: 132, column: 17, scope: !2637)
!2643 = !DILocation(line: 132, column: 15, scope: !2637)
!2644 = !DILocation(line: 133, column: 1, scope: !2614)
!2645 = distinct !DISubprogram(name: "VEC_edge_var_map_heap_copy", scope: !643, file: !643, line: 560, type: !2646, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2649)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!644, !2648}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!2649 = !{!2650, !2651, !2652}
!2650 = !DILocalVariable(name: "vec_", arg: 1, scope: !2645, file: !643, line: 560, type: !2648)
!2651 = !DILocalVariable(name: "len_", scope: !2645, file: !643, line: 560, type: !1129)
!2652 = !DILocalVariable(name: "new_vec_", scope: !2645, file: !643, line: 560, type: !644)
!2653 = !DILocation(line: 0, scope: !2645)
!2654 = !DILocation(line: 560, column: 1, scope: !2645)
!2655 = !DILocation(line: 560, column: 1, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2645, file: !643, line: 560, column: 1)
!2657 = !DILocation(line: 560, column: 1, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2656, file: !643, line: 560, column: 1)
!2659 = distinct !DISubprogram(name: "redirect_edge_var_map_vector", scope: !3, file: !3, line: 140, type: !2660, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2662)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!642, !964}
!2662 = !{!2663, !2664}
!2663 = !DILocalVariable(name: "e", arg: 1, scope: !2659, file: !3, line: 140, type: !964)
!2664 = !DILocalVariable(name: "slot", scope: !2659, file: !3, line: 142, type: !1470)
!2665 = !DILocation(line: 0, scope: !2659)
!2666 = !DILocation(line: 145, column: 8, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 145, column: 7)
!2668 = !DILocation(line: 145, column: 7, scope: !2659)
!2669 = !DILocation(line: 148, column: 47, scope: !2659)
!2670 = !DILocation(line: 148, column: 10, scope: !2659)
!2671 = !DILocation(line: 149, column: 8, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 149, column: 7)
!2673 = !DILocation(line: 149, column: 7, scope: !2659)
!2674 = !DILocation(line: 152, column: 32, scope: !2659)
!2675 = !DILocation(line: 152, column: 3, scope: !2659)
!2676 = !DILocation(line: 153, column: 1, scope: !2659)
!2677 = distinct !DISubprogram(name: "redirect_edge_var_map_destroy", scope: !3, file: !3, line: 170, type: !2678, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null}
!2680 = !DILocation(line: 172, column: 7, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 172, column: 7)
!2682 = !DILocation(line: 172, column: 7, scope: !2677)
!2683 = !DILocation(line: 174, column: 7, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 173, column: 5)
!2685 = !DILocation(line: 175, column: 28, scope: !2684)
!2686 = !DILocation(line: 175, column: 7, scope: !2684)
!2687 = !DILocation(line: 176, column: 21, scope: !2684)
!2688 = !DILocation(line: 177, column: 5, scope: !2684)
!2689 = !DILocation(line: 178, column: 1, scope: !2677)
!2690 = distinct !DISubprogram(name: "free_var_map_entry", scope: !3, file: !3, line: 158, type: !2691, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2693)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!634, !1290, !1470, !639}
!2693 = !{!2694, !2695, !2696, !2697}
!2694 = !DILocalVariable(name: "key", arg: 1, scope: !2690, file: !3, line: 158, type: !1290)
!2695 = !DILocalVariable(name: "value", arg: 2, scope: !2690, file: !3, line: 159, type: !1470)
!2696 = !DILocalVariable(name: "data", arg: 3, scope: !2690, file: !3, line: 160, type: !639)
!2697 = !DILocalVariable(name: "head", scope: !2690, file: !3, line: 162, type: !642)
!2698 = !DILocation(line: 0, scope: !2690)
!2699 = !DILocation(line: 162, column: 3, scope: !2690)
!2700 = !DILocation(line: 162, column: 52, scope: !2690)
!2701 = !DILocation(line: 162, column: 23, scope: !2690)
!2702 = !DILocation(line: 163, column: 3, scope: !2690)
!2703 = !DILocation(line: 165, column: 1, scope: !2690)
!2704 = !DILocation(line: 164, column: 3, scope: !2690)
!2705 = distinct !DISubprogram(name: "ssa_redirect_edge", scope: !3, file: !3, line: 187, type: !2706, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2708)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!964, !964, !1416}
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2717}
!2709 = !DILocalVariable(name: "e", arg: 1, scope: !2705, file: !3, line: 187, type: !964)
!2710 = !DILocalVariable(name: "dest", arg: 2, scope: !2705, file: !3, line: 187, type: !1416)
!2711 = !DILocalVariable(name: "gsi", scope: !2705, file: !3, line: 189, type: !2007)
!2712 = !DILocalVariable(name: "phi", scope: !2705, file: !3, line: 190, type: !984)
!2713 = !DILocalVariable(name: "def", scope: !2714, file: !3, line: 197, type: !660)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 196, column: 5)
!2715 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 195, column: 3)
!2716 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 195, column: 3)
!2717 = !DILocalVariable(name: "locus", scope: !2714, file: !3, line: 198, type: !787)
!2718 = !DILocation(line: 0, scope: !2705)
!2719 = !DILocation(line: 189, column: 3, scope: !2705)
!2720 = !DILocation(line: 192, column: 3, scope: !2705)
!2721 = !DILocation(line: 195, column: 14, scope: !2716)
!2722 = !DILocation(line: 195, column: 33, scope: !2716)
!2723 = !DILocation(line: 0, scope: !2714)
!2724 = !DILocation(line: 195, column: 8, scope: !2716)
!2725 = !DILocation(line: 195, column: 41, scope: !2715)
!2726 = !DILocation(line: 195, column: 40, scope: !2715)
!2727 = !DILocation(line: 195, column: 3, scope: !2716)
!2728 = !DILocation(line: 200, column: 13, scope: !2714)
!2729 = !DILocation(line: 201, column: 41, scope: !2714)
!2730 = !DILocation(line: 201, column: 38, scope: !2714)
!2731 = !DILocation(line: 201, column: 13, scope: !2714)
!2732 = !DILocation(line: 202, column: 48, scope: !2714)
!2733 = !DILocation(line: 202, column: 45, scope: !2714)
!2734 = !DILocation(line: 202, column: 15, scope: !2714)
!2735 = !DILocation(line: 204, column: 15, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 204, column: 11)
!2737 = !DILocation(line: 204, column: 11, scope: !2714)
!2738 = !DILocation(line: 207, column: 37, scope: !2714)
!2739 = !DILocation(line: 207, column: 7, scope: !2714)
!2740 = !DILocation(line: 208, column: 5, scope: !2715)
!2741 = !DILocation(line: 195, column: 58, scope: !2715)
!2742 = !DILocation(line: 195, column: 3, scope: !2715)
!2743 = distinct !{!2743, !2727, !2744}
!2744 = !DILocation(line: 208, column: 5, scope: !2716)
!2745 = !DILocation(line: 210, column: 7, scope: !2705)
!2746 = !DILocation(line: 213, column: 1, scope: !2705)
!2747 = !DILocation(line: 212, column: 3, scope: !2705)
!2748 = distinct !DISubprogram(name: "gsi_end_p", scope: !568, file: !568, line: 4467, type: !2749, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2751)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!634, !2007}
!2751 = !{!2752}
!2752 = !DILocalVariable(name: "i", arg: 1, scope: !2748, file: !568, line: 4467, type: !2007)
!2753 = !DILocation(line: 4467, column: 33, scope: !2748)
!2754 = !DILocation(line: 4469, column: 12, scope: !2748)
!2755 = !DILocation(line: 4469, column: 16, scope: !2748)
!2756 = !DILocation(line: 4469, column: 10, scope: !2748)
!2757 = !DILocation(line: 4469, column: 3, scope: !2748)
!2758 = distinct !DISubprogram(name: "gsi_stmt", scope: !568, file: !568, line: 4501, type: !2759, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2761)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!984, !2007}
!2761 = !{!2762}
!2762 = !DILocalVariable(name: "i", arg: 1, scope: !2758, file: !568, line: 4501, type: !2007)
!2763 = !DILocation(line: 4501, column: 32, scope: !2758)
!2764 = !DILocation(line: 4503, column: 12, scope: !2758)
!2765 = !DILocation(line: 4503, column: 17, scope: !2758)
!2766 = !DILocation(line: 4503, column: 3, scope: !2758)
!2767 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !2768, file: !2768, line: 450, type: !2769, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2771)
!2768 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!660, !984, !1129}
!2771 = !{!2772, !2773, !2774}
!2772 = !DILocalVariable(name: "gs", arg: 1, scope: !2767, file: !2768, line: 450, type: !984)
!2773 = !DILocalVariable(name: "index", arg: 2, scope: !2767, file: !2768, line: 450, type: !1129)
!2774 = !DILocalVariable(name: "pd", scope: !2767, file: !2768, line: 452, type: !2775)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!2776 = !DILocation(line: 0, scope: !2767)
!2777 = !DILocation(line: 452, column: 46, scope: !2767)
!2778 = !DILocation(line: 452, column: 26, scope: !2767)
!2779 = !DILocation(line: 453, column: 33, scope: !2767)
!2780 = !DILocation(line: 453, column: 10, scope: !2767)
!2781 = !DILocation(line: 453, column: 3, scope: !2767)
!2782 = distinct !DISubprogram(name: "gimple_phi_arg_location", scope: !2768, file: !2768, line: 475, type: !2783, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2785)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!787, !984, !1129}
!2785 = !{!2786, !2787}
!2786 = !DILocalVariable(name: "gs", arg: 1, scope: !2782, file: !2768, line: 475, type: !984)
!2787 = !DILocalVariable(name: "i", arg: 2, scope: !2782, file: !2768, line: 475, type: !1129)
!2788 = !DILocation(line: 0, scope: !2782)
!2789 = !DILocation(line: 477, column: 30, scope: !2782)
!2790 = !DILocation(line: 477, column: 10, scope: !2782)
!2791 = !DILocation(line: 477, column: 34, scope: !2782)
!2792 = !DILocation(line: 477, column: 3, scope: !2782)
!2793 = distinct !DISubprogram(name: "gimple_phi_result", scope: !568, file: !568, line: 3071, type: !2794, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2797)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!660, !2796}
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !661, line: 60, baseType: !2001)
!2797 = !{!2798}
!2798 = !DILocalVariable(name: "gs", arg: 1, scope: !2793, file: !568, line: 3071, type: !2796)
!2799 = !DILocation(line: 0, scope: !2793)
!2800 = !DILocation(line: 3074, column: 25, scope: !2793)
!2801 = !DILocation(line: 3074, column: 3, scope: !2793)
!2802 = distinct !DISubprogram(name: "gsi_next", scope: !568, file: !568, line: 4485, type: !2803, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2806)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{null, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2806 = !{!2807}
!2807 = !DILocalVariable(name: "i", arg: 1, scope: !2802, file: !568, line: 4485, type: !2805)
!2808 = !DILocation(line: 0, scope: !2802)
!2809 = !DILocation(line: 4487, column: 15, scope: !2802)
!2810 = !DILocation(line: 4487, column: 20, scope: !2802)
!2811 = !DILocation(line: 4487, column: 10, scope: !2802)
!2812 = !DILocation(line: 4488, column: 1, scope: !2802)
!2813 = distinct !DISubprogram(name: "flush_pending_stmts", scope: !3, file: !3, line: 220, type: !2582, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2814)
!2814 = !{!2815, !2816, !2817, !2818, !2819, !2820, !2821}
!2815 = !DILocalVariable(name: "e", arg: 1, scope: !2813, file: !3, line: 220, type: !964)
!2816 = !DILocalVariable(name: "phi", scope: !2813, file: !3, line: 222, type: !984)
!2817 = !DILocalVariable(name: "v", scope: !2813, file: !3, line: 223, type: !642)
!2818 = !DILocalVariable(name: "vm", scope: !2813, file: !3, line: 224, type: !2572)
!2819 = !DILocalVariable(name: "i", scope: !2813, file: !3, line: 225, type: !635)
!2820 = !DILocalVariable(name: "gsi", scope: !2813, file: !3, line: 226, type: !2007)
!2821 = !DILocalVariable(name: "def", scope: !2822, file: !3, line: 236, type: !660)
!2822 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 235, column: 5)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 232, column: 3)
!2824 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 232, column: 3)
!2825 = !DILocation(line: 0, scope: !2813)
!2826 = !DILocation(line: 224, column: 3, scope: !2813)
!2827 = !DILocation(line: 226, column: 3, scope: !2813)
!2828 = !DILocation(line: 228, column: 7, scope: !2813)
!2829 = !DILocation(line: 229, column: 8, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 229, column: 7)
!2831 = !DILocation(line: 229, column: 7, scope: !2813)
!2832 = !DILocation(line: 232, column: 14, scope: !2824)
!2833 = !DILocation(line: 232, column: 33, scope: !2824)
!2834 = !DILocation(line: 233, column: 28, scope: !2823)
!2835 = !DILocation(line: 232, column: 8, scope: !2824)
!2836 = !DILocation(line: 0, scope: !2824)
!2837 = !DILocation(line: 233, column: 9, scope: !2823)
!2838 = !DILocation(line: 233, column: 25, scope: !2823)
!2839 = !DILocation(line: 232, column: 3, scope: !2824)
!2840 = !DILocation(line: 238, column: 13, scope: !2822)
!2841 = !DILocation(line: 239, column: 40, scope: !2822)
!2842 = !DILocation(line: 239, column: 13, scope: !2822)
!2843 = !DILocation(line: 0, scope: !2822)
!2844 = !DILocation(line: 240, column: 65, scope: !2822)
!2845 = !DILocation(line: 240, column: 33, scope: !2822)
!2846 = !DILocation(line: 240, column: 7, scope: !2822)
!2847 = !DILocation(line: 234, column: 8, scope: !2823)
!2848 = !DILocation(line: 234, column: 26, scope: !2823)
!2849 = !DILocation(line: 232, column: 3, scope: !2823)
!2850 = distinct !{!2850, !2839, !2851}
!2851 = !DILocation(line: 241, column: 5, scope: !2824)
!2852 = !DILocation(line: 243, column: 3, scope: !2813)
!2853 = !DILocation(line: 244, column: 1, scope: !2813)
!2854 = distinct !DISubprogram(name: "VEC_edge_var_map_base_iterate", scope: !643, file: !643, line: 559, type: !2855, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2858)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{!635, !2648, !7, !2857}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2858 = !{!2859, !2860, !2861}
!2859 = !DILocalVariable(name: "vec_", arg: 1, scope: !2854, file: !643, line: 559, type: !2648)
!2860 = !DILocalVariable(name: "ix_", arg: 2, scope: !2854, file: !643, line: 559, type: !7)
!2861 = !DILocalVariable(name: "ptr", arg: 3, scope: !2854, file: !643, line: 559, type: !2857)
!2862 = !DILocation(line: 0, scope: !2854)
!2863 = !DILocation(line: 559, column: 1, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2854, file: !643, line: 559, column: 1)
!2865 = !DILocation(line: 559, column: 1, scope: !2854)
!2866 = !DILocation(line: 559, column: 1, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2864, file: !643, line: 559, column: 1)
!2868 = !DILocation(line: 559, column: 1, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2864, file: !643, line: 559, column: 1)
!2870 = !DILocation(line: 0, scope: !2864)
!2871 = distinct !DISubprogram(name: "redirect_edge_var_map_def", scope: !2768, file: !2768, line: 1219, type: !2872, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2874)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!660, !2572}
!2874 = !{!2875}
!2875 = !DILocalVariable(name: "v", arg: 1, scope: !2871, file: !2768, line: 1219, type: !2572)
!2876 = !DILocation(line: 0, scope: !2871)
!2877 = !DILocation(line: 1221, column: 13, scope: !2871)
!2878 = !DILocation(line: 1221, column: 3, scope: !2871)
!2879 = distinct !DISubprogram(name: "redirect_edge_var_map_location", scope: !2768, file: !2768, line: 1235, type: !2880, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2882)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!787, !2572}
!2882 = !{!2883}
!2883 = !DILocalVariable(name: "v", arg: 1, scope: !2879, file: !2768, line: 1235, type: !2572)
!2884 = !DILocation(line: 0, scope: !2879)
!2885 = !DILocation(line: 1237, column: 13, scope: !2879)
!2886 = !DILocation(line: 1237, column: 3, scope: !2879)
!2887 = distinct !DISubprogram(name: "target_for_debug_bind", scope: !3, file: !3, line: 253, type: !2888, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2890)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!660, !660}
!2890 = !{!2891}
!2891 = !DILocalVariable(name: "var", arg: 1, scope: !2887, file: !3, line: 253, type: !660)
!2892 = !DILocation(line: 263, column: 12, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 262, column: 7)
!2894 = !DILocation(line: 0, scope: !2887)
!2895 = !DILocation(line: 255, column: 8, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 255, column: 7)
!2897 = !DILocation(line: 255, column: 7, scope: !2887)
!2898 = !DILocation(line: 258, column: 7, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 258, column: 7)
!2900 = !DILocation(line: 258, column: 23, scope: !2899)
!2901 = !DILocation(line: 259, column: 7, scope: !2899)
!2902 = !DILocation(line: 259, column: 26, scope: !2899)
!2903 = !DILocation(line: 258, column: 7, scope: !2887)
!2904 = !DILocation(line: 262, column: 7, scope: !2893)
!2905 = !DILocation(line: 262, column: 7, scope: !2887)
!2906 = !DILocation(line: 263, column: 35, scope: !2893)
!2907 = !DILocation(line: 265, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 265, column: 7)
!2909 = !DILocation(line: 265, column: 7, scope: !2887)
!2910 = !DILocation(line: 268, column: 8, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 268, column: 7)
!2912 = !DILocation(line: 272, column: 1, scope: !2887)
!2913 = distinct !DISubprogram(name: "insert_debug_temp_for_var_def", scope: !3, file: !3, line: 303, type: !2914, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2916)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{null, !2805, !660}
!2916 = !{!2917, !2918, !2919, !2927, !2928, !2929, !2930, !2931, !2932, !2936, !2939, !2944, !2945}
!2917 = !DILocalVariable(name: "gsi", arg: 1, scope: !2913, file: !3, line: 303, type: !2805)
!2918 = !DILocalVariable(name: "var", arg: 2, scope: !2913, file: !3, line: 303, type: !660)
!2919 = !DILocalVariable(name: "imm_iter", scope: !2913, file: !3, line: 305, type: !2920)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !643, line: 249, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !643, line: 238, size: 448, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !2921, file: !643, line: 241, baseType: !1990, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !2921, file: !643, line: 243, baseType: !1990, size: 64, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !2921, file: !643, line: 245, baseType: !1991, size: 256, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !2921, file: !643, line: 248, baseType: !1990, size: 64, offset: 384)
!2927 = !DILocalVariable(name: "use_p", scope: !2913, file: !3, line: 306, type: !1989)
!2928 = !DILocalVariable(name: "stmt", scope: !2913, file: !3, line: 307, type: !984)
!2929 = !DILocalVariable(name: "def_stmt", scope: !2913, file: !3, line: 308, type: !984)
!2930 = !DILocalVariable(name: "usecount", scope: !2913, file: !3, line: 309, type: !635)
!2931 = !DILocalVariable(name: "value", scope: !2913, file: !3, line: 310, type: !660)
!2932 = !DILocalVariable(name: "no_value", scope: !2933, file: !3, line: 361, type: !634)
!2933 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 360, column: 5)
!2934 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 359, column: 12)
!2935 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 353, column: 7)
!2936 = !DILocalVariable(name: "wi", scope: !2937, file: !3, line: 365, type: !2004)
!2937 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 364, column: 2)
!2938 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 363, column: 11)
!2939 = !DILocalVariable(name: "def_temp", scope: !2940, file: !3, line: 429, type: !984)
!2940 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 428, column: 2)
!2941 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 420, column: 11)
!2942 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 405, column: 5)
!2943 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 404, column: 7)
!2944 = !DILocalVariable(name: "vexpr", scope: !2940, file: !3, line: 430, type: !660)
!2945 = !DILocalVariable(name: "ngsi", scope: !2946, file: !3, line: 447, type: !2007)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 446, column: 6)
!2947 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 443, column: 8)
!2948 = !DILocation(line: 0, scope: !2913)
!2949 = !DILocation(line: 305, column: 3, scope: !2913)
!2950 = !DILocation(line: 310, column: 3, scope: !2913)
!2951 = !DILocation(line: 310, column: 8, scope: !2913)
!2952 = !DILocation(line: 312, column: 8, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 312, column: 7)
!2954 = !DILocation(line: 312, column: 7, scope: !2913)
!2955 = !DILocation(line: 317, column: 7, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 317, column: 7)
!2957 = !DILocation(line: 317, column: 7, scope: !2913)
!2958 = !DILocation(line: 322, column: 3, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 322, column: 3)
!2960 = !DILocation(line: 0, scope: !2959)
!2961 = !DILocation(line: 322, column: 3, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 322, column: 3)
!2963 = !DILocation(line: 324, column: 14, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 323, column: 5)
!2965 = !DILocation(line: 326, column: 12, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 326, column: 11)
!2967 = !DILocation(line: 326, column: 11, scope: !2964)
!2968 = !DILocation(line: 329, column: 19, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 329, column: 11)
!2970 = !DILocation(line: 329, column: 11, scope: !2964)
!2971 = !DILocation(line: 332, column: 11, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 332, column: 11)
!2973 = !DILocation(line: 332, column: 46, scope: !2972)
!2974 = !DILocation(line: 332, column: 11, scope: !2964)
!2975 = !DILocation(line: 338, column: 4, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 333, column: 2)
!2977 = distinct !{!2977, !2958, !2978}
!2978 = !DILocation(line: 340, column: 5, scope: !2959)
!2979 = !DILocation(line: 342, column: 8, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 342, column: 7)
!2981 = !DILocation(line: 342, column: 7, scope: !2913)
!2982 = !DILocation(line: 345, column: 7, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 345, column: 7)
!2984 = !DILocation(line: 345, column: 7, scope: !2913)
!2985 = !DILocation(line: 346, column: 16, scope: !2983)
!2986 = !DILocation(line: 346, column: 5, scope: !2983)
!2987 = !DILocation(line: 348, column: 16, scope: !2983)
!2988 = !DILocation(line: 0, scope: !2983)
!2989 = !DILocation(line: 353, column: 7, scope: !2935)
!2990 = !DILocation(line: 353, column: 30, scope: !2935)
!2991 = !DILocation(line: 353, column: 7, scope: !2913)
!2992 = !DILocation(line: 355, column: 15, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 354, column: 5)
!2994 = !DILocation(line: 355, column: 13, scope: !2993)
!2995 = !DILocation(line: 356, column: 11, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 356, column: 11)
!2997 = !DILocation(line: 356, column: 17, scope: !2996)
!2998 = !DILocation(line: 356, column: 20, scope: !2996)
!2999 = !DILocation(line: 356, column: 11, scope: !2993)
!3000 = !DILocation(line: 357, column: 8, scope: !2996)
!3001 = !DILocation(line: 357, column: 2, scope: !2996)
!3002 = !DILocation(line: 359, column: 12, scope: !2934)
!3003 = !DILocation(line: 359, column: 12, scope: !2935)
!3004 = !DILocation(line: 0, scope: !2933)
!3005 = !DILocation(line: 363, column: 12, scope: !2938)
!3006 = !DILocation(line: 363, column: 11, scope: !2933)
!3007 = !DILocation(line: 365, column: 4, scope: !2937)
!3008 = !DILocation(line: 367, column: 4, scope: !2937)
!3009 = !DILocation(line: 395, column: 14, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 395, column: 8)
!3011 = !DILocation(line: 395, column: 18, scope: !3010)
!3012 = !DILocation(line: 396, column: 8, scope: !3010)
!3013 = !DILocation(line: 0, scope: !2937)
!3014 = !DILocation(line: 396, column: 11, scope: !3010)
!3015 = !DILocation(line: 395, column: 8, scope: !2937)
!3016 = !DILocation(line: 397, column: 6, scope: !3010)
!3017 = !DILocation(line: 398, column: 2, scope: !2938)
!3018 = !DILocation(line: 398, column: 2, scope: !2937)
!3019 = !DILocation(line: 400, column: 12, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 400, column: 11)
!3021 = !DILocation(line: 400, column: 11, scope: !2933)
!3022 = !DILocation(line: 401, column: 10, scope: !3020)
!3023 = !DILocation(line: 401, column: 8, scope: !3020)
!3024 = !DILocation(line: 401, column: 2, scope: !3020)
!3025 = !DILocation(line: 404, column: 7, scope: !2943)
!3026 = !DILocation(line: 404, column: 7, scope: !2913)
!3027 = !DILocation(line: 420, column: 11, scope: !2941)
!3028 = !DILocation(line: 421, column: 4, scope: !2941)
!3029 = !DILocation(line: 421, column: 7, scope: !2941)
!3030 = !DILocation(line: 421, column: 30, scope: !2941)
!3031 = !DILocation(line: 422, column: 4, scope: !2941)
!3032 = !DILocation(line: 422, column: 17, scope: !2941)
!3033 = !DILocation(line: 423, column: 8, scope: !2941)
!3034 = !DILocation(line: 423, column: 13, scope: !2941)
!3035 = !DILocation(line: 424, column: 5, scope: !2941)
!3036 = !DILocation(line: 424, column: 33, scope: !2941)
!3037 = !DILocation(line: 424, column: 8, scope: !2941)
!3038 = !DILocation(line: 425, column: 4, scope: !2941)
!3039 = !DILocation(line: 425, column: 22, scope: !2941)
!3040 = !DILocation(line: 425, column: 7, scope: !2941)
!3041 = !DILocation(line: 420, column: 11, scope: !2942)
!3042 = !DILocation(line: 426, column: 24, scope: !2941)
!3043 = !DILocation(line: 426, column: 10, scope: !2941)
!3044 = !DILocation(line: 426, column: 8, scope: !2941)
!3045 = !DILocation(line: 426, column: 2, scope: !2941)
!3046 = !DILocation(line: 430, column: 17, scope: !2940)
!3047 = !DILocation(line: 0, scope: !2940)
!3048 = !DILocation(line: 432, column: 15, scope: !2940)
!3049 = !DILocation(line: 436, column: 4, scope: !2940)
!3050 = !DILocation(line: 436, column: 28, scope: !2940)
!3051 = !DILocation(line: 437, column: 24, scope: !2940)
!3052 = !DILocation(line: 437, column: 4, scope: !2940)
!3053 = !DILocation(line: 437, column: 22, scope: !2940)
!3054 = !DILocation(line: 438, column: 8, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 438, column: 8)
!3056 = !DILocation(line: 438, column: 8, scope: !2940)
!3057 = !DILocation(line: 439, column: 26, scope: !3055)
!3058 = !DILocation(line: 439, column: 24, scope: !3055)
!3059 = !DILocation(line: 439, column: 6, scope: !3055)
!3060 = !DILocation(line: 441, column: 26, scope: !3055)
!3061 = !DILocation(line: 441, column: 24, scope: !3055)
!3062 = !DILocation(line: 0, scope: !3055)
!3063 = !DILocation(line: 443, column: 8, scope: !2940)
!3064 = !DILocation(line: 444, column: 6, scope: !2947)
!3065 = !DILocation(line: 447, column: 8, scope: !2946)
!3066 = !DILocation(line: 0, scope: !2946)
!3067 = !DILocation(line: 447, column: 36, scope: !2946)
!3068 = !DILocation(line: 448, column: 8, scope: !2946)
!3069 = !DILocation(line: 449, column: 6, scope: !2947)
!3070 = !DILocation(line: 451, column: 10, scope: !2940)
!3071 = !DILocation(line: 455, column: 3, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 455, column: 3)
!3073 = !DILocation(line: 0, scope: !3072)
!3074 = !DILocation(line: 455, column: 3, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 455, column: 3)
!3076 = !DILocation(line: 457, column: 12, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 457, column: 11)
!3078 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 456, column: 5)
!3079 = !DILocation(line: 457, column: 11, scope: !3078)
!3080 = !DILocation(line: 460, column: 11, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 460, column: 11)
!3082 = !DILocation(line: 460, column: 11, scope: !3078)
!3083 = !DILocation(line: 461, column: 2, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 461, column: 2)
!3085 = !DILocation(line: 0, scope: !3084)
!3086 = !DILocation(line: 461, column: 2, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 461, column: 2)
!3088 = !DILocation(line: 467, column: 4, scope: !3087)
!3089 = distinct !{!3089, !3083, !3090}
!3090 = !DILocation(line: 467, column: 4, scope: !3084)
!3091 = !DILocation(line: 469, column: 2, scope: !3081)
!3092 = !DILocation(line: 471, column: 7, scope: !3078)
!3093 = !DILocation(line: 472, column: 5, scope: !3078)
!3094 = distinct !{!3094, !3071, !3095}
!3095 = !DILocation(line: 472, column: 5, scope: !3072)
!3096 = !DILocation(line: 473, column: 1, scope: !2913)
!3097 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !2768, file: !2768, line: 292, type: !3098, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3101)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!1989, !3100, !660}
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!3101 = !{!3102, !3103}
!3102 = !DILocalVariable(name: "imm", arg: 1, scope: !3097, file: !2768, line: 292, type: !3100)
!3103 = !DILocalVariable(name: "var", arg: 2, scope: !3097, file: !2768, line: 292, type: !660)
!3104 = !DILocation(line: 0, scope: !3097)
!3105 = !DILocation(line: 294, column: 18, scope: !3097)
!3106 = !DILocation(line: 294, column: 8, scope: !3097)
!3107 = !DILocation(line: 294, column: 14, scope: !3097)
!3108 = !DILocation(line: 295, column: 30, scope: !3097)
!3109 = !DILocation(line: 295, column: 16, scope: !3097)
!3110 = !DILocation(line: 299, column: 7, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3097, file: !2768, line: 299, column: 7)
!3112 = !DILocation(line: 299, column: 7, scope: !3097)
!3113 = !DILocation(line: 301, column: 15, scope: !3097)
!3114 = !DILocation(line: 301, column: 3, scope: !3097)
!3115 = !DILocation(line: 302, column: 1, scope: !3097)
!3116 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !2768, file: !2768, line: 285, type: !3117, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3121)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!634, !3119}
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2920)
!3121 = !{!3122}
!3122 = !DILocalVariable(name: "imm", arg: 1, scope: !3116, file: !2768, line: 285, type: !3119)
!3123 = !DILocation(line: 0, scope: !3116)
!3124 = !DILocation(line: 287, column: 16, scope: !3116)
!3125 = !DILocation(line: 287, column: 32, scope: !3116)
!3126 = !DILocation(line: 287, column: 24, scope: !3116)
!3127 = !DILocation(line: 287, column: 10, scope: !3116)
!3128 = !DILocation(line: 287, column: 3, scope: !3116)
!3129 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !568, file: !568, line: 3257, type: !3130, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3132)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!634, !2796}
!3132 = !{!3133}
!3133 = !DILocalVariable(name: "s", arg: 1, scope: !3129, file: !568, line: 3257, type: !2796)
!3134 = !DILocation(line: 0, scope: !3129)
!3135 = !DILocation(line: 3259, column: 7, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3129, file: !568, line: 3259, column: 7)
!3137 = !DILocation(line: 3259, column: 7, scope: !3129)
!3138 = !DILocation(line: 3260, column: 22, scope: !3136)
!3139 = !DILocation(line: 3260, column: 30, scope: !3136)
!3140 = !DILocation(line: 3260, column: 12, scope: !3136)
!3141 = !DILocation(line: 3260, column: 5, scope: !3136)
!3142 = !DILocation(line: 3263, column: 1, scope: !3129)
!3143 = distinct !DISubprogram(name: "gimple_debug_bind_get_value", scope: !568, file: !568, line: 3281, type: !3144, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3146)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!660, !984}
!3146 = !{!3147}
!3147 = !DILocalVariable(name: "dbg", arg: 1, scope: !3143, file: !568, line: 3281, type: !984)
!3148 = !DILocation(line: 0, scope: !3143)
!3149 = !DILocation(line: 3287, column: 10, scope: !3143)
!3150 = !DILocation(line: 3287, column: 3, scope: !3143)
!3151 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !2768, file: !2768, line: 306, type: !3152, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3154)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!1989, !3100}
!3154 = !{!3155, !3156}
!3155 = !DILocalVariable(name: "imm", arg: 1, scope: !3151, file: !2768, line: 306, type: !3100)
!3156 = !DILocalVariable(name: "old", scope: !3151, file: !2768, line: 308, type: !1989)
!3157 = !DILocation(line: 0, scope: !3151)
!3158 = !DILocation(line: 308, column: 28, scope: !3151)
!3159 = !DILocation(line: 319, column: 23, scope: !3151)
!3160 = !DILocation(line: 319, column: 16, scope: !3151)
!3161 = !DILocation(line: 320, column: 7, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3151, file: !2768, line: 320, column: 7)
!3163 = !DILocation(line: 320, column: 7, scope: !3151)
!3164 = !DILocation(line: 322, column: 15, scope: !3151)
!3165 = !DILocation(line: 322, column: 3, scope: !3151)
!3166 = !DILocation(line: 323, column: 1, scope: !3151)
!3167 = distinct !DISubprogram(name: "gimple_code", scope: !568, file: !568, line: 1052, type: !3168, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3170)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!567, !2796}
!3170 = !{!3171}
!3171 = !DILocalVariable(name: "g", arg: 1, scope: !3167, file: !568, line: 1052, type: !2796)
!3172 = !DILocation(line: 0, scope: !3167)
!3173 = !DILocation(line: 1054, column: 20, scope: !3167)
!3174 = !DILocation(line: 1054, column: 3, scope: !3167)
!3175 = distinct !DISubprogram(name: "find_released_ssa_name", scope: !3, file: !3, line: 278, type: !3176, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3179)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!660, !1018, !3178, !639}
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!3179 = !{!3180, !3181, !3182, !3183}
!3180 = !DILocalVariable(name: "tp", arg: 1, scope: !3175, file: !3, line: 278, type: !1018)
!3181 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !3175, file: !3, line: 278, type: !3178)
!3182 = !DILocalVariable(name: "data_", arg: 3, scope: !3175, file: !3, line: 278, type: !639)
!3183 = !DILocalVariable(name: "wi", scope: !3175, file: !3, line: 280, type: !2003)
!3184 = !DILocation(line: 0, scope: !3175)
!3185 = !DILocation(line: 282, column: 7, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 282, column: 7)
!3187 = !DILocation(line: 282, column: 10, scope: !3186)
!3188 = !DILocation(line: 282, column: 17, scope: !3186)
!3189 = !DILocation(line: 282, column: 13, scope: !3186)
!3190 = !DILocation(line: 282, column: 7, scope: !3175)
!3191 = !DILocation(line: 285, column: 7, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 285, column: 7)
!3193 = !DILocation(line: 285, column: 23, scope: !3192)
!3194 = !DILocation(line: 285, column: 7, scope: !3175)
!3195 = !DILocation(line: 287, column: 11, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 287, column: 11)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 286, column: 5)
!3198 = !DILocation(line: 287, column: 11, scope: !3197)
!3199 = !DILocation(line: 288, column: 2, scope: !3196)
!3200 = !DILocation(line: 290, column: 22, scope: !3197)
!3201 = !DILocation(line: 291, column: 5, scope: !3197)
!3202 = !DILocation(line: 292, column: 12, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 292, column: 12)
!3204 = !DILocation(line: 292, column: 12, scope: !3192)
!3205 = !DILocation(line: 293, column: 20, scope: !3203)
!3206 = !DILocation(line: 293, column: 5, scope: !3203)
!3207 = !DILocation(line: 296, column: 1, scope: !3175)
!3208 = distinct !DISubprogram(name: "is_gimple_assign", scope: !568, file: !568, line: 1677, type: !3130, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3209)
!3209 = !{!3210}
!3210 = !DILocalVariable(name: "gs", arg: 1, scope: !3208, file: !568, line: 1677, type: !2796)
!3211 = !DILocation(line: 0, scope: !3208)
!3212 = !DILocation(line: 1679, column: 10, scope: !3208)
!3213 = !DILocation(line: 1679, column: 27, scope: !3208)
!3214 = !DILocation(line: 1679, column: 3, scope: !3208)
!3215 = distinct !DISubprogram(name: "gimple_bb", scope: !568, file: !568, line: 1112, type: !3216, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3218)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!948, !2796}
!3218 = !{!3219}
!3219 = !DILocalVariable(name: "g", arg: 1, scope: !3215, file: !568, line: 1112, type: !2796)
!3220 = !DILocation(line: 0, scope: !3215)
!3221 = !DILocation(line: 1114, column: 20, scope: !3215)
!3222 = !DILocation(line: 1114, column: 3, scope: !3215)
!3223 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !2768, file: !2768, line: 1058, type: !3224, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3226)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!984, !3100, !660}
!3226 = !{!3227, !3228}
!3227 = !DILocalVariable(name: "imm", arg: 1, scope: !3223, file: !2768, line: 1058, type: !3100)
!3228 = !DILocalVariable(name: "var", arg: 2, scope: !3223, file: !2768, line: 1058, type: !660)
!3229 = !DILocation(line: 0, scope: !3223)
!3230 = !DILocation(line: 1060, column: 18, scope: !3223)
!3231 = !DILocation(line: 1060, column: 8, scope: !3223)
!3232 = !DILocation(line: 1060, column: 14, scope: !3223)
!3233 = !DILocation(line: 1061, column: 30, scope: !3223)
!3234 = !DILocation(line: 1061, column: 16, scope: !3223)
!3235 = !DILocation(line: 1062, column: 8, scope: !3223)
!3236 = !DILocation(line: 1062, column: 22, scope: !3223)
!3237 = !DILocation(line: 1067, column: 18, scope: !3223)
!3238 = !DILocation(line: 1067, column: 23, scope: !3223)
!3239 = !DILocation(line: 1068, column: 18, scope: !3223)
!3240 = !DILocation(line: 1068, column: 23, scope: !3223)
!3241 = !DILocation(line: 1069, column: 22, scope: !3223)
!3242 = !DILocation(line: 1069, column: 27, scope: !3223)
!3243 = !DILocation(line: 1070, column: 18, scope: !3223)
!3244 = !DILocation(line: 1070, column: 22, scope: !3223)
!3245 = !DILocation(line: 1072, column: 7, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3223, file: !2768, line: 1072, column: 7)
!3247 = !DILocation(line: 1072, column: 7, scope: !3223)
!3248 = !DILocation(line: 1075, column: 30, scope: !3223)
!3249 = !DILocation(line: 1075, column: 3, scope: !3223)
!3250 = !DILocation(line: 1077, column: 10, scope: !3223)
!3251 = !DILocation(line: 1077, column: 3, scope: !3223)
!3252 = !DILocation(line: 1078, column: 1, scope: !3223)
!3253 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !2768, file: !2768, line: 969, type: !3117, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3254)
!3254 = !{!3255}
!3255 = !DILocalVariable(name: "imm", arg: 1, scope: !3253, file: !2768, line: 969, type: !3119)
!3256 = !DILocation(line: 0, scope: !3253)
!3257 = !DILocation(line: 971, column: 16, scope: !3253)
!3258 = !DILocation(line: 971, column: 32, scope: !3253)
!3259 = !DILocation(line: 971, column: 24, scope: !3253)
!3260 = !DILocation(line: 971, column: 10, scope: !3253)
!3261 = !DILocation(line: 971, column: 3, scope: !3253)
!3262 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !2768, file: !2768, line: 1101, type: !3152, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3263)
!3263 = !{!3264}
!3264 = !DILocalVariable(name: "imm", arg: 1, scope: !3262, file: !2768, line: 1101, type: !3100)
!3265 = !DILocation(line: 0, scope: !3262)
!3266 = !DILocation(line: 1103, column: 29, scope: !3262)
!3267 = !DILocation(line: 1103, column: 38, scope: !3262)
!3268 = !DILocation(line: 1103, column: 8, scope: !3262)
!3269 = !DILocation(line: 1103, column: 22, scope: !3262)
!3270 = !DILocation(line: 1104, column: 3, scope: !3262)
!3271 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !2768, file: !2768, line: 1110, type: !3117, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3272)
!3272 = !{!3273}
!3273 = !DILocalVariable(name: "imm", arg: 1, scope: !3271, file: !2768, line: 1110, type: !3119)
!3274 = !DILocation(line: 0, scope: !3271)
!3275 = !DILocation(line: 1112, column: 16, scope: !3271)
!3276 = !DILocation(line: 1112, column: 34, scope: !3271)
!3277 = !DILocation(line: 1112, column: 24, scope: !3271)
!3278 = !DILocation(line: 1112, column: 10, scope: !3271)
!3279 = !DILocation(line: 1112, column: 3, scope: !3271)
!3280 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !2768, file: !2768, line: 233, type: !3281, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3283)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{null, !1989, !660}
!3283 = !{!3284, !3285}
!3284 = !DILocalVariable(name: "use", arg: 1, scope: !3280, file: !2768, line: 233, type: !1989)
!3285 = !DILocalVariable(name: "val", arg: 2, scope: !3280, file: !2768, line: 233, type: !660)
!3286 = !DILocation(line: 0, scope: !3280)
!3287 = !DILocation(line: 235, column: 3, scope: !3280)
!3288 = !DILocation(line: 236, column: 10, scope: !3280)
!3289 = !DILocation(line: 236, column: 15, scope: !3280)
!3290 = !DILocation(line: 237, column: 3, scope: !3280)
!3291 = !DILocation(line: 238, column: 1, scope: !3280)
!3292 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !2768, file: !2768, line: 1118, type: !3152, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3293)
!3293 = !{!3294}
!3294 = !DILocalVariable(name: "imm", arg: 1, scope: !3292, file: !2768, line: 1118, type: !3100)
!3295 = !DILocation(line: 0, scope: !3292)
!3296 = !DILocation(line: 1120, column: 23, scope: !3292)
!3297 = !DILocation(line: 1120, column: 16, scope: !3292)
!3298 = !DILocation(line: 1121, column: 7, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3292, file: !2768, line: 1121, column: 7)
!3300 = !DILocation(line: 1121, column: 7, scope: !3292)
!3301 = !DILocation(line: 1125, column: 33, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3299, file: !2768, line: 1124, column: 5)
!3303 = !DILocation(line: 1125, column: 42, scope: !3302)
!3304 = !DILocation(line: 1125, column: 26, scope: !3302)
!3305 = !DILocation(line: 1126, column: 7, scope: !3302)
!3306 = !DILocation(line: 0, scope: !3299)
!3307 = !DILocation(line: 1128, column: 1, scope: !3292)
!3308 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !568, file: !568, line: 3336, type: !3309, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3311)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{null, !984}
!3311 = !{!3312}
!3312 = !DILocalVariable(name: "dbg", arg: 1, scope: !3308, file: !568, line: 3336, type: !984)
!3313 = !DILocation(line: 0, scope: !3308)
!3314 = !DILocation(line: 3342, column: 3, scope: !3308)
!3315 = !DILocation(line: 3343, column: 1, scope: !3308)
!3316 = distinct !DISubprogram(name: "update_stmt", scope: !568, file: !568, line: 1456, type: !3309, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3317)
!3317 = !{!3318}
!3318 = !DILocalVariable(name: "s", arg: 1, scope: !3316, file: !568, line: 1456, type: !984)
!3319 = !DILocation(line: 0, scope: !3316)
!3320 = !DILocation(line: 1458, column: 7, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !568, line: 1458, column: 7)
!3322 = !DILocation(line: 1458, column: 7, scope: !3316)
!3323 = !DILocation(line: 1460, column: 7, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3321, file: !568, line: 1459, column: 5)
!3325 = !DILocation(line: 1461, column: 7, scope: !3324)
!3326 = !DILocation(line: 1462, column: 5, scope: !3324)
!3327 = !DILocation(line: 1463, column: 1, scope: !3316)
!3328 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !2768, file: !2768, line: 1083, type: !3329, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!984, !3100}
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "imm", arg: 1, scope: !3328, file: !2768, line: 1083, type: !3100)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 1085, column: 33, scope: !3328)
!3335 = !DILocation(line: 1085, column: 16, scope: !3328)
!3336 = !DILocation(line: 1086, column: 7, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3328, file: !2768, line: 1086, column: 7)
!3338 = !DILocation(line: 1086, column: 7, scope: !3328)
!3339 = !DILocation(line: 1088, column: 26, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !2768, line: 1088, column: 11)
!3341 = distinct !DILexicalBlock(scope: !3337, file: !2768, line: 1087, column: 5)
!3342 = !DILocation(line: 1088, column: 31, scope: !3340)
!3343 = !DILocation(line: 1088, column: 11, scope: !3341)
!3344 = !DILocation(line: 1089, column: 24, scope: !3340)
!3345 = !DILocation(line: 1089, column: 2, scope: !3340)
!3346 = !DILocation(line: 1093, column: 30, scope: !3328)
!3347 = !DILocation(line: 1093, column: 3, scope: !3328)
!3348 = !DILocation(line: 1094, column: 10, scope: !3328)
!3349 = !DILocation(line: 1094, column: 3, scope: !3328)
!3350 = !DILocation(line: 1095, column: 1, scope: !3328)
!3351 = distinct !DISubprogram(name: "insert_debug_temps_for_defs", scope: !3, file: !3, line: 481, type: !2803, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3352)
!3352 = !{!3353, !3354, !3355, !3368, !3369}
!3353 = !DILocalVariable(name: "gsi", arg: 1, scope: !3351, file: !3, line: 481, type: !2805)
!3354 = !DILocalVariable(name: "stmt", scope: !3351, file: !3, line: 483, type: !984)
!3355 = !DILocalVariable(name: "op_iter", scope: !3351, file: !3, line: 484, type: !3356)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !378, line: 140, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !378, line: 131, size: 320, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3363, !3365, !3366, !3367}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3357, file: !378, line: 133, baseType: !634, size: 8)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !3357, file: !378, line: 134, baseType: !377, size: 32, offset: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !3357, file: !378, line: 135, baseType: !3362, size: 64, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !378, line: 42, baseType: !1013)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !3357, file: !378, line: 136, baseType: !3364, size: 64, offset: 128)
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !378, line: 50, baseType: !1020)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !3357, file: !378, line: 137, baseType: !635, size: 32, offset: 192)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !3357, file: !378, line: 138, baseType: !635, size: 32, offset: 224)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !3357, file: !378, line: 139, baseType: !984, size: 64, offset: 256)
!3368 = !DILocalVariable(name: "def_p", scope: !3351, file: !3, line: 485, type: !1988)
!3369 = !DILocalVariable(name: "var", scope: !3370, file: !3, line: 494, type: !660)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 493, column: 5)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 492, column: 3)
!3372 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 492, column: 3)
!3373 = !DILocation(line: 0, scope: !3351)
!3374 = !DILocation(line: 484, column: 3, scope: !3351)
!3375 = !DILocation(line: 487, column: 8, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 487, column: 7)
!3377 = !DILocation(line: 487, column: 7, scope: !3351)
!3378 = !DILocation(line: 490, column: 10, scope: !3351)
!3379 = !DILocation(line: 492, column: 3, scope: !3372)
!3380 = !DILocation(line: 0, scope: !3372)
!3381 = !DILocation(line: 492, column: 3, scope: !3371)
!3382 = !DILocation(line: 494, column: 18, scope: !3370)
!3383 = !DILocation(line: 0, scope: !3370)
!3384 = !DILocation(line: 496, column: 11, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 496, column: 11)
!3386 = !DILocation(line: 496, column: 27, scope: !3385)
!3387 = !DILocation(line: 496, column: 11, scope: !3370)
!3388 = !DILocation(line: 499, column: 7, scope: !3370)
!3389 = !DILocation(line: 500, column: 5, scope: !3371)
!3390 = distinct !{!3390, !3379, !3391}
!3391 = !DILocation(line: 500, column: 5, scope: !3372)
!3392 = !DILocation(line: 501, column: 1, scope: !3351)
!3393 = distinct !DISubprogram(name: "op_iter_init_phidef", scope: !2768, file: !2768, line: 939, type: !3394, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3397)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!1988, !3396, !984, !635}
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3397 = !{!3398, !3399, !3400, !3401, !3402}
!3398 = !DILocalVariable(name: "ptr", arg: 1, scope: !3393, file: !2768, line: 939, type: !3396)
!3399 = !DILocalVariable(name: "phi", arg: 2, scope: !3393, file: !2768, line: 939, type: !984)
!3400 = !DILocalVariable(name: "flags", arg: 3, scope: !3393, file: !2768, line: 939, type: !635)
!3401 = !DILocalVariable(name: "phi_def", scope: !3393, file: !2768, line: 941, type: !660)
!3402 = !DILocalVariable(name: "comp", scope: !3393, file: !2768, line: 942, type: !635)
!3403 = !DILocation(line: 0, scope: !3393)
!3404 = !DILocation(line: 941, column: 18, scope: !3393)
!3405 = !DILocation(line: 944, column: 3, scope: !3393)
!3406 = !DILocation(line: 945, column: 8, scope: !3393)
!3407 = !DILocation(line: 945, column: 13, scope: !3393)
!3408 = !DILocation(line: 949, column: 11, scope: !3393)
!3409 = !DILocation(line: 953, column: 7, scope: !3393)
!3410 = !DILocation(line: 955, column: 17, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !2768, line: 954, column: 5)
!3412 = distinct !DILexicalBlock(scope: !3393, file: !2768, line: 953, column: 7)
!3413 = !DILocation(line: 956, column: 7, scope: !3411)
!3414 = !DILocation(line: 959, column: 8, scope: !3393)
!3415 = !DILocation(line: 959, column: 18, scope: !3393)
!3416 = !DILocation(line: 963, column: 10, scope: !3393)
!3417 = !DILocation(line: 963, column: 3, scope: !3393)
!3418 = !DILocation(line: 964, column: 1, scope: !3393)
!3419 = distinct !DISubprogram(name: "op_iter_init_def", scope: !2768, file: !2768, line: 780, type: !3394, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3420)
!3420 = !{!3421, !3422, !3423}
!3421 = !DILocalVariable(name: "ptr", arg: 1, scope: !3419, file: !2768, line: 780, type: !3396)
!3422 = !DILocalVariable(name: "stmt", arg: 2, scope: !3419, file: !2768, line: 780, type: !984)
!3423 = !DILocalVariable(name: "flags", arg: 3, scope: !3419, file: !2768, line: 780, type: !635)
!3424 = !DILocation(line: 0, scope: !3419)
!3425 = !DILocation(line: 784, column: 3, scope: !3419)
!3426 = !DILocation(line: 785, column: 8, scope: !3419)
!3427 = !DILocation(line: 785, column: 18, scope: !3419)
!3428 = !DILocation(line: 786, column: 10, scope: !3419)
!3429 = !DILocation(line: 786, column: 3, scope: !3419)
!3430 = distinct !DISubprogram(name: "op_iter_done", scope: !2768, file: !2768, line: 652, type: !3431, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3435)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!634, !3433}
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3356)
!3435 = !{!3436}
!3436 = !DILocalVariable(name: "ptr", arg: 1, scope: !3430, file: !2768, line: 652, type: !3433)
!3437 = !DILocation(line: 0, scope: !3430)
!3438 = !DILocation(line: 654, column: 15, scope: !3430)
!3439 = !DILocation(line: 654, column: 3, scope: !3430)
!3440 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !2768, file: !2768, line: 434, type: !3441, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3443)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!660, !1988}
!3443 = !{!3444}
!3444 = !DILocalVariable(name: "def", arg: 1, scope: !3440, file: !2768, line: 434, type: !1988)
!3445 = !DILocation(line: 0, scope: !3440)
!3446 = !DILocation(line: 436, column: 10, scope: !3440)
!3447 = !DILocation(line: 436, column: 3, scope: !3440)
!3448 = distinct !DISubprogram(name: "op_iter_next_def", scope: !2768, file: !2768, line: 681, type: !3449, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3451)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!1988, !3396}
!3451 = !{!3452, !3453}
!3452 = !DILocalVariable(name: "ptr", arg: 1, scope: !3448, file: !2768, line: 681, type: !3396)
!3453 = !DILocalVariable(name: "def_p", scope: !3448, file: !2768, line: 683, type: !1988)
!3454 = !DILocation(line: 0, scope: !3448)
!3455 = !DILocation(line: 687, column: 12, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3448, file: !2768, line: 687, column: 7)
!3457 = !DILocation(line: 687, column: 7, scope: !3456)
!3458 = !DILocation(line: 687, column: 7, scope: !3448)
!3459 = !DILocation(line: 689, column: 15, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !2768, line: 688, column: 5)
!3461 = !DILocation(line: 690, column: 30, scope: !3460)
!3462 = !DILocation(line: 690, column: 17, scope: !3460)
!3463 = !DILocation(line: 691, column: 7, scope: !3460)
!3464 = !DILocation(line: 693, column: 8, scope: !3448)
!3465 = !DILocation(line: 693, column: 13, scope: !3448)
!3466 = !DILocation(line: 694, column: 3, scope: !3448)
!3467 = !DILocation(line: 695, column: 1, scope: !3448)
!3468 = distinct !DISubprogram(name: "release_defs_bitset", scope: !3, file: !3, line: 508, type: !3469, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3471)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !1532}
!3471 = !{!3472, !3473, !3474, !3482, !3486, !3487, !3488, !3489, !3493, !3494, !3498, !3501}
!3472 = !DILocalVariable(name: "toremove", arg: 1, scope: !3468, file: !3, line: 508, type: !1532)
!3473 = !DILocalVariable(name: "j", scope: !3468, file: !3, line: 510, type: !7)
!3474 = !DILocalVariable(name: "bi", scope: !3468, file: !3, line: 511, type: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !889, line: 218, baseType: !3476)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !889, line: 203, size: 256, elements: !3477)
!3477 = !{!3478, !3479, !3480, !3481}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3476, file: !889, line: 206, baseType: !892, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3476, file: !889, line: 209, baseType: !892, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3476, file: !889, line: 212, baseType: !7, size: 32, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3476, file: !889, line: 217, baseType: !902, size: 64, offset: 192)
!3482 = !DILocalVariable(name: "remove_now", scope: !3483, file: !3, line: 519, type: !634)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 518, column: 7)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 517, column: 5)
!3485 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 517, column: 5)
!3486 = !DILocalVariable(name: "var", scope: !3483, file: !3, line: 520, type: !660)
!3487 = !DILocalVariable(name: "stmt", scope: !3483, file: !3, line: 521, type: !984)
!3488 = !DILocalVariable(name: "uit", scope: !3483, file: !3, line: 522, type: !2920)
!3489 = !DILocalVariable(name: "dit", scope: !3490, file: !3, line: 526, type: !3356)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 525, column: 4)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 524, column: 2)
!3492 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 524, column: 2)
!3493 = !DILocalVariable(name: "def_p", scope: !3490, file: !3, line: 527, type: !1988)
!3494 = !DILocalVariable(name: "odef", scope: !3495, file: !3, line: 540, type: !660)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 539, column: 8)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 538, column: 6)
!3497 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 538, column: 6)
!3498 = !DILocalVariable(name: "def", scope: !3499, file: !3, line: 555, type: !984)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 554, column: 4)
!3500 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 553, column: 6)
!3501 = !DILocalVariable(name: "gsi", scope: !3499, file: !3, line: 556, type: !2007)
!3502 = !DILocation(line: 0, scope: !3468)
!3503 = !DILocation(line: 510, column: 3, scope: !3468)
!3504 = !DILocation(line: 511, column: 3, scope: !3468)
!3505 = !DILocation(line: 0, scope: !3483)
!3506 = !DILocation(line: 0, scope: !3490)
!3507 = !DILocation(line: 0, scope: !3499)
!3508 = !DILocation(line: 516, column: 3, scope: !3468)
!3509 = !DILocation(line: 516, column: 11, scope: !3468)
!3510 = !DILocation(line: 517, column: 5, scope: !3485)
!3511 = !DILocation(line: 517, column: 5, scope: !3484)
!3512 = distinct !{!3512, !3508, !3513}
!3513 = !DILocation(line: 568, column: 7, scope: !3468)
!3514 = !DILocation(line: 520, column: 13, scope: !3483)
!3515 = !DILocation(line: 522, column: 2, scope: !3483)
!3516 = !DILocation(line: 524, column: 2, scope: !3492)
!3517 = !DILocation(line: 0, scope: !3492)
!3518 = !DILocation(line: 519, column: 7, scope: !3483)
!3519 = !DILocation(line: 524, column: 2, scope: !3491)
!3520 = !DILocation(line: 526, column: 6, scope: !3490)
!3521 = !DILocation(line: 530, column: 10, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 530, column: 10)
!3523 = !DILocation(line: 530, column: 29, scope: !3522)
!3524 = !DILocation(line: 531, column: 3, scope: !3522)
!3525 = !DILocation(line: 531, column: 6, scope: !3522)
!3526 = !DILocation(line: 530, column: 10, scope: !3490)
!3527 = !DILocation(line: 538, column: 6, scope: !3497)
!3528 = !DILocation(line: 0, scope: !3497)
!3529 = !DILocation(line: 538, column: 6, scope: !3496)
!3530 = !DILocation(line: 540, column: 15, scope: !3495)
!3531 = !DILocation(line: 0, scope: !3495)
!3532 = !DILocation(line: 542, column: 31, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 542, column: 7)
!3534 = !DILocation(line: 542, column: 7, scope: !3533)
!3535 = !DILocation(line: 0, scope: !3496)
!3536 = distinct !{!3536, !3527, !3537}
!3537 = !DILocation(line: 547, column: 8, scope: !3497)
!3538 = !DILocation(line: 549, column: 11, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 549, column: 10)
!3540 = !DILocation(line: 549, column: 10, scope: !3490)
!3541 = !DILocation(line: 550, column: 8, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 550, column: 8)
!3543 = !DILocation(line: 551, column: 4, scope: !3491)
!3544 = distinct !{!3544, !3516, !3545}
!3545 = !DILocation(line: 551, column: 4, scope: !3492)
!3546 = !DILocation(line: 553, column: 6, scope: !3500)
!3547 = !DILocation(line: 553, column: 6, scope: !3483)
!3548 = !DILocation(line: 555, column: 19, scope: !3499)
!3549 = !DILocation(line: 556, column: 6, scope: !3499)
!3550 = !DILocation(line: 556, column: 33, scope: !3499)
!3551 = !DILocation(line: 558, column: 10, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 558, column: 10)
!3553 = !DILocation(line: 558, column: 28, scope: !3552)
!3554 = !DILocation(line: 558, column: 10, scope: !3499)
!3555 = !DILocation(line: 559, column: 8, scope: !3552)
!3556 = !DILocation(line: 562, column: 3, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 561, column: 8)
!3558 = !DILocation(line: 563, column: 3, scope: !3557)
!3559 = !DILocation(line: 566, column: 34, scope: !3499)
!3560 = !DILocation(line: 566, column: 6, scope: !3499)
!3561 = !DILocation(line: 567, column: 4, scope: !3500)
!3562 = !DILocation(line: 567, column: 4, scope: !3499)
!3563 = !DILocation(line: 568, column: 7, scope: !3484)
!3564 = distinct !{!3564, !3510, !3565}
!3565 = !DILocation(line: 568, column: 7, scope: !3485)
!3566 = !DILocation(line: 569, column: 1, scope: !3468)
!3567 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !889, file: !889, line: 224, type: !3568, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3575)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{null, !3570, !3571, !7, !3574}
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !661, line: 48, baseType: !3572)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3575 = !{!3576, !3577, !3578, !3579}
!3576 = !DILocalVariable(name: "bi", arg: 1, scope: !3567, file: !889, line: 224, type: !3570)
!3577 = !DILocalVariable(name: "map", arg: 2, scope: !3567, file: !889, line: 224, type: !3571)
!3578 = !DILocalVariable(name: "start_bit", arg: 3, scope: !3567, file: !889, line: 225, type: !7)
!3579 = !DILocalVariable(name: "bit_no", arg: 4, scope: !3567, file: !889, line: 225, type: !3574)
!3580 = !DILocation(line: 0, scope: !3567)
!3581 = !DILocation(line: 227, column: 19, scope: !3567)
!3582 = !DILocation(line: 227, column: 12, scope: !3567)
!3583 = !DILocation(line: 228, column: 7, scope: !3567)
!3584 = !DILocation(line: 228, column: 12, scope: !3567)
!3585 = !DILocation(line: 0, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !889, line: 233, column: 11)
!3587 = distinct !DILexicalBlock(scope: !3567, file: !889, line: 232, column: 5)
!3588 = !DILocation(line: 231, column: 3, scope: !3567)
!3589 = !DILocation(line: 233, column: 12, scope: !3586)
!3590 = !DILocation(line: 233, column: 11, scope: !3587)
!3591 = !DILocation(line: 235, column: 13, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3586, file: !889, line: 234, column: 2)
!3593 = !DILocation(line: 236, column: 4, scope: !3592)
!3594 = !DILocation(line: 239, column: 11, scope: !3587)
!3595 = distinct !{!3595, !3588, !3596}
!3596 = !DILocation(line: 242, column: 5, scope: !3567)
!3597 = !DILocation(line: 245, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3567, file: !889, line: 245, column: 7)
!3599 = !DILocation(line: 245, column: 17, scope: !3598)
!3600 = !DILocation(line: 245, column: 22, scope: !3598)
!3601 = !DILocation(line: 245, column: 7, scope: !3567)
!3602 = !DILocation(line: 246, column: 27, scope: !3598)
!3603 = !DILocation(line: 246, column: 32, scope: !3598)
!3604 = !DILocation(line: 246, column: 5, scope: !3598)
!3605 = !DILocation(line: 249, column: 7, scope: !3567)
!3606 = !DILocation(line: 249, column: 15, scope: !3567)
!3607 = !DILocation(line: 250, column: 14, scope: !3567)
!3608 = !DILocation(line: 251, column: 7, scope: !3567)
!3609 = !DILocation(line: 251, column: 12, scope: !3567)
!3610 = !DILocation(line: 257, column: 16, scope: !3567)
!3611 = !DILocation(line: 257, column: 13, scope: !3567)
!3612 = !DILocation(line: 259, column: 11, scope: !3567)
!3613 = !DILocation(line: 260, column: 1, scope: !3567)
!3614 = distinct !DISubprogram(name: "bmp_iter_set", scope: !889, file: !889, line: 393, type: !3615, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3617)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!634, !3570, !3574}
!3617 = !{!3618, !3619, !3620}
!3618 = !DILocalVariable(name: "bi", arg: 1, scope: !3614, file: !889, line: 393, type: !3570)
!3619 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3614, file: !889, line: 393, type: !3574)
!3620 = !DILabel(scope: !3621, name: "next_bit", file: !889, line: 398)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !889, line: 397, column: 5)
!3622 = distinct !DILexicalBlock(scope: !3614, file: !889, line: 396, column: 7)
!3623 = !DILocation(line: 0, scope: !3614)
!3624 = !DILocation(line: 396, column: 11, scope: !3622)
!3625 = !DILocation(line: 396, column: 7, scope: !3622)
!3626 = !DILocation(line: 396, column: 7, scope: !3614)
!3627 = !DILocation(line: 419, column: 15, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !889, line: 418, column: 2)
!3629 = distinct !DILexicalBlock(scope: !3614, file: !889, line: 415, column: 5)
!3630 = !DILocation(line: 399, column: 7, scope: !3621)
!3631 = !DILocation(line: 398, column: 5, scope: !3621)
!3632 = !DILocation(line: 399, column: 20, scope: !3621)
!3633 = !DILocation(line: 399, column: 25, scope: !3621)
!3634 = !DILocation(line: 399, column: 14, scope: !3621)
!3635 = !DILocation(line: 401, column: 13, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3621, file: !889, line: 400, column: 2)
!3637 = !DILocation(line: 402, column: 12, scope: !3636)
!3638 = distinct !{!3638, !3630, !3639}
!3639 = !DILocation(line: 403, column: 2, scope: !3621)
!3640 = !DILocation(line: 410, column: 15, scope: !3614)
!3641 = !DILocation(line: 410, column: 42, scope: !3614)
!3642 = !DILocation(line: 411, column: 26, scope: !3614)
!3643 = !DILocation(line: 410, column: 11, scope: !3614)
!3644 = !DILocation(line: 412, column: 7, scope: !3614)
!3645 = !DILocation(line: 412, column: 14, scope: !3614)
!3646 = !DILocation(line: 0, scope: !3629)
!3647 = !DILocation(line: 414, column: 3, scope: !3614)
!3648 = !DILocation(line: 417, column: 7, scope: !3629)
!3649 = !DILocation(line: 417, column: 18, scope: !3629)
!3650 = !DILocation(line: 417, column: 26, scope: !3629)
!3651 = !DILocation(line: 419, column: 13, scope: !3628)
!3652 = !DILocation(line: 420, column: 8, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3628, file: !889, line: 420, column: 8)
!3654 = !DILocation(line: 420, column: 8, scope: !3628)
!3655 = !DILocation(line: 422, column: 12, scope: !3628)
!3656 = !DILocation(line: 423, column: 15, scope: !3628)
!3657 = distinct !{!3657, !3648, !3658}
!3658 = !DILocation(line: 424, column: 2, scope: !3629)
!3659 = !DILocation(line: 427, column: 28, scope: !3629)
!3660 = !DILocation(line: 427, column: 16, scope: !3629)
!3661 = !DILocation(line: 428, column: 12, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3629, file: !889, line: 428, column: 11)
!3663 = !DILocation(line: 428, column: 11, scope: !3629)
!3664 = !DILocation(line: 430, column: 27, scope: !3629)
!3665 = !DILocation(line: 430, column: 32, scope: !3629)
!3666 = !DILocation(line: 430, column: 15, scope: !3629)
!3667 = !DILocation(line: 431, column: 19, scope: !3629)
!3668 = distinct !{!3668, !3647, !3669}
!3669 = !DILocation(line: 432, column: 5, scope: !3614)
!3670 = !DILocation(line: 433, column: 1, scope: !3614)
!3671 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !151, file: !151, line: 182, type: !3672, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3676)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!660, !3674, !7}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!3676 = !{!3677, !3678}
!3677 = !DILocalVariable(name: "vec_", arg: 1, scope: !3671, file: !151, line: 182, type: !3674)
!3678 = !DILocalVariable(name: "ix_", arg: 2, scope: !3671, file: !151, line: 182, type: !7)
!3679 = !DILocation(line: 0, scope: !3671)
!3680 = !DILocation(line: 182, column: 1, scope: !3671)
!3681 = distinct !DISubprogram(name: "is_gimple_debug", scope: !568, file: !568, line: 3249, type: !3130, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3682)
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "gs", arg: 1, scope: !3681, file: !568, line: 3249, type: !2796)
!3684 = !DILocation(line: 0, scope: !3681)
!3685 = !DILocation(line: 3251, column: 10, scope: !3681)
!3686 = !DILocation(line: 3251, column: 27, scope: !3681)
!3687 = !DILocation(line: 3251, column: 3, scope: !3681)
!3688 = distinct !DISubprogram(name: "end_imm_use_stmt_traverse", scope: !2768, file: !2768, line: 978, type: !3689, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3691)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !3100}
!3691 = !{!3692}
!3692 = !DILocalVariable(name: "imm", arg: 1, scope: !3688, file: !2768, line: 978, type: !3100)
!3693 = !DILocation(line: 0, scope: !3688)
!3694 = !DILocation(line: 980, column: 26, scope: !3688)
!3695 = !DILocation(line: 980, column: 3, scope: !3688)
!3696 = !DILocation(line: 981, column: 1, scope: !3688)
!3697 = distinct !DISubprogram(name: "bmp_iter_next", scope: !889, file: !889, line: 382, type: !3698, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3700)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{null, !3570, !3574}
!3700 = !{!3701, !3702}
!3701 = !DILocalVariable(name: "bi", arg: 1, scope: !3697, file: !889, line: 382, type: !3570)
!3702 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3697, file: !889, line: 382, type: !3574)
!3703 = !DILocation(line: 0, scope: !3697)
!3704 = !DILocation(line: 384, column: 7, scope: !3697)
!3705 = !DILocation(line: 384, column: 12, scope: !3697)
!3706 = !DILocation(line: 385, column: 11, scope: !3697)
!3707 = !DILocation(line: 386, column: 1, scope: !3697)
!3708 = distinct !DISubprogram(name: "verify_ssa", scope: !3, file: !3, line: 862, type: !3709, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3711)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !634}
!3711 = !{!3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3724, !3727, !3730, !3734, !3735, !3742, !3743, !3747, !3748, !3749, !3752, !3753}
!3712 = !DILocalVariable(name: "check_modified_stmt", arg: 1, scope: !3708, file: !3, line: 862, type: !634)
!3713 = !DILocalVariable(name: "i", scope: !3708, file: !3, line: 864, type: !1129)
!3714 = !DILocalVariable(name: "bb", scope: !3708, file: !3, line: 865, type: !1416)
!3715 = !DILocalVariable(name: "definition_block", scope: !3708, file: !3, line: 866, type: !1987)
!3716 = !DILocalVariable(name: "iter", scope: !3708, file: !3, line: 867, type: !3356)
!3717 = !DILocalVariable(name: "op", scope: !3708, file: !3, line: 868, type: !660)
!3718 = !DILocalVariable(name: "orig_dom_state", scope: !3708, file: !3, line: 869, type: !140)
!3719 = !DILocalVariable(name: "names_defined_in_bb", scope: !3708, file: !3, line: 870, type: !1532)
!3720 = !DILocalVariable(name: "name", scope: !3721, file: !3, line: 881, type: !660)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 880, column: 5)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 879, column: 3)
!3723 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 879, column: 3)
!3724 = !DILocalVariable(name: "stmt", scope: !3725, file: !3, line: 884, type: !984)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 883, column: 2)
!3726 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 882, column: 11)
!3727 = !DILocalVariable(name: "bb", scope: !3728, file: !3, line: 890, type: !1416)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 889, column: 6)
!3729 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 888, column: 8)
!3730 = !DILocalVariable(name: "e", scope: !3731, file: !3, line: 904, type: !964)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 903, column: 5)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 902, column: 3)
!3733 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 902, column: 3)
!3734 = !DILocalVariable(name: "phi", scope: !3731, file: !3, line: 905, type: !984)
!3735 = !DILocalVariable(name: "ei", scope: !3731, file: !3, line: 906, type: !3736)
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !3737)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !3738)
!3738 = !{!3739, !3740}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3737, file: !135, line: 680, baseType: !7, size: 32)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3737, file: !135, line: 681, baseType: !3741, size: 64, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!3742 = !DILocalVariable(name: "gsi", scope: !3731, file: !3, line: 907, type: !2007)
!3743 = !DILocalVariable(name: "stmt", scope: !3744, file: !3, line: 934, type: !984)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 933, column: 2)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 932, column: 7)
!3746 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 932, column: 7)
!3747 = !DILocalVariable(name: "use_p", scope: !3744, file: !3, line: 935, type: !1989)
!3748 = !DILocalVariable(name: "has_err", scope: !3744, file: !3, line: 936, type: !634)
!3749 = !DILocalVariable(name: "lhs", scope: !3750, file: !3, line: 949, type: !660)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 948, column: 6)
!3751 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 946, column: 8)
!3752 = !DILocalVariable(name: "base_address", scope: !3750, file: !3, line: 949, type: !660)
!3753 = !DILabel(scope: !3708, name: "err", file: !3, line: 1056)
!3754 = !DILocation(line: 0, scope: !3708)
!3755 = !DILocation(line: 866, column: 35, scope: !3708)
!3756 = !DILocation(line: 867, column: 3, scope: !3708)
!3757 = !DILocation(line: 869, column: 35, scope: !3708)
!3758 = !DILocation(line: 870, column: 32, scope: !3708)
!3759 = !DILocation(line: 872, column: 3, scope: !3708)
!3760 = !DILocation(line: 874, column: 3, scope: !3708)
!3761 = !DILocation(line: 876, column: 3, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 876, column: 3)
!3763 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 876, column: 3)
!3764 = !DILocation(line: 876, column: 3, scope: !3763)
!3765 = !DILocation(line: 879, column: 8, scope: !3723)
!3766 = !DILocation(line: 0, scope: !3723)
!3767 = !DILocation(line: 879, column: 19, scope: !3722)
!3768 = !DILocation(line: 879, column: 17, scope: !3722)
!3769 = !DILocation(line: 879, column: 3, scope: !3723)
!3770 = !DILocation(line: 881, column: 19, scope: !3721)
!3771 = !DILocation(line: 0, scope: !3721)
!3772 = !DILocation(line: 882, column: 11, scope: !3726)
!3773 = !DILocation(line: 882, column: 11, scope: !3721)
!3774 = !DILocation(line: 885, column: 4, scope: !3725)
!3775 = !DILocation(line: 885, column: 24, scope: !3725)
!3776 = !DILocation(line: 887, column: 11, scope: !3725)
!3777 = !DILocation(line: 0, scope: !3725)
!3778 = !DILocation(line: 888, column: 9, scope: !3729)
!3779 = !DILocation(line: 888, column: 8, scope: !3725)
!3780 = !DILocation(line: 890, column: 25, scope: !3728)
!3781 = !DILocation(line: 0, scope: !3728)
!3782 = !DILocation(line: 892, column: 19, scope: !3728)
!3783 = !DILocation(line: 892, column: 18, scope: !3728)
!3784 = !DILocation(line: 891, column: 8, scope: !3728)
!3785 = !DILocation(line: 894, column: 6, scope: !3728)
!3786 = !DILocation(line: 879, column: 35, scope: !3722)
!3787 = !DILocation(line: 879, column: 3, scope: !3722)
!3788 = distinct !{!3788, !3769, !3789}
!3789 = !DILocation(line: 896, column: 5, scope: !3723)
!3790 = !DILocation(line: 898, column: 3, scope: !3708)
!3791 = !DILocation(line: 902, column: 3, scope: !3733)
!3792 = !DILocation(line: 0, scope: !3731)
!3793 = !DILocation(line: 0, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 910, column: 7)
!3795 = !DILocation(line: 0, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 910, column: 7)
!3797 = !DILocation(line: 0, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 921, column: 7)
!3799 = !DILocation(line: 0, scope: !3746)
!3800 = !DILocation(line: 0, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 938, column: 8)
!3802 = !DILocation(line: 902, column: 3, scope: !3732)
!3803 = !DILocation(line: 0, scope: !3733)
!3804 = !DILocation(line: 904, column: 7, scope: !3731)
!3805 = !DILocation(line: 906, column: 7, scope: !3731)
!3806 = !DILocation(line: 907, column: 7, scope: !3731)
!3807 = !DILocation(line: 910, column: 7, scope: !3794)
!3808 = !DILocation(line: 910, column: 7, scope: !3796)
!3809 = !DILocation(line: 912, column: 8, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 912, column: 8)
!3811 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 911, column: 2)
!3812 = !DILocation(line: 912, column: 11, scope: !3810)
!3813 = !DILocation(line: 912, column: 8, scope: !3811)
!3814 = !DILocation(line: 914, column: 61, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 913, column: 6)
!3816 = !DILocation(line: 914, column: 66, scope: !3815)
!3817 = !DILocation(line: 915, column: 12, scope: !3815)
!3818 = !DILocation(line: 915, column: 18, scope: !3815)
!3819 = !DILocation(line: 914, column: 8, scope: !3815)
!3820 = !DILocation(line: 916, column: 8, scope: !3815)
!3821 = distinct !{!3821, !3807, !3822}
!3822 = !DILocation(line: 918, column: 2, scope: !3794)
!3823 = !DILocation(line: 921, column: 18, scope: !3798)
!3824 = !DILocation(line: 921, column: 12, scope: !3798)
!3825 = !DILocation(line: 921, column: 40, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 921, column: 7)
!3827 = !DILocation(line: 921, column: 39, scope: !3826)
!3828 = !DILocation(line: 921, column: 7, scope: !3798)
!3829 = !DILocation(line: 923, column: 10, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 922, column: 2)
!3831 = !DILocation(line: 924, column: 8, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 924, column: 8)
!3833 = !DILocation(line: 924, column: 8, scope: !3830)
!3834 = !DILocation(line: 928, column: 6, scope: !3830)
!3835 = !DILocation(line: 927, column: 4, scope: !3830)
!3836 = !DILocation(line: 921, column: 57, scope: !3826)
!3837 = !DILocation(line: 921, column: 7, scope: !3826)
!3838 = distinct !{!3838, !3828, !3839}
!3839 = !DILocation(line: 929, column: 2, scope: !3798)
!3840 = !DILocation(line: 932, column: 18, scope: !3746)
!3841 = !DILocation(line: 932, column: 12, scope: !3746)
!3842 = !DILocation(line: 932, column: 38, scope: !3745)
!3843 = !DILocation(line: 932, column: 37, scope: !3745)
!3844 = !DILocation(line: 932, column: 7, scope: !3746)
!3845 = !DILocation(line: 934, column: 18, scope: !3744)
!3846 = !DILocation(line: 0, scope: !3744)
!3847 = !DILocation(line: 938, column: 28, scope: !3801)
!3848 = !DILocation(line: 938, column: 31, scope: !3801)
!3849 = !DILocation(line: 938, column: 8, scope: !3744)
!3850 = !DILocation(line: 940, column: 8, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 939, column: 6)
!3852 = !DILocation(line: 942, column: 27, scope: !3851)
!3853 = !DILocation(line: 942, column: 8, scope: !3851)
!3854 = !DILocation(line: 943, column: 8, scope: !3851)
!3855 = !DILocation(line: 946, column: 8, scope: !3751)
!3856 = !DILocation(line: 947, column: 8, scope: !3751)
!3857 = !DILocation(line: 947, column: 11, scope: !3751)
!3858 = !DILocation(line: 947, column: 48, scope: !3751)
!3859 = !DILocation(line: 946, column: 8, scope: !3744)
!3860 = !DILocation(line: 951, column: 14, scope: !3750)
!3861 = !DILocation(line: 0, scope: !3750)
!3862 = !DILocation(line: 952, column: 23, scope: !3750)
!3863 = !DILocation(line: 954, column: 12, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 954, column: 12)
!3865 = !DILocation(line: 955, column: 5, scope: !3864)
!3866 = !DILocation(line: 955, column: 8, scope: !3864)
!3867 = !DILocation(line: 956, column: 5, scope: !3864)
!3868 = !DILocation(line: 956, column: 9, scope: !3864)
!3869 = !DILocation(line: 957, column: 8, scope: !3864)
!3870 = !DILocation(line: 957, column: 17, scope: !3864)
!3871 = !DILocation(line: 957, column: 5, scope: !3864)
!3872 = !DILocation(line: 959, column: 5, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 958, column: 3)
!3874 = !DILocation(line: 960, column: 24, scope: !3873)
!3875 = !DILocation(line: 960, column: 5, scope: !3873)
!3876 = !DILocation(line: 961, column: 5, scope: !3873)
!3877 = !DILocation(line: 964, column: 13, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 964, column: 13)
!3879 = !DILocation(line: 965, column: 6, scope: !3878)
!3880 = !DILocation(line: 965, column: 10, scope: !3878)
!3881 = !DILocation(line: 964, column: 13, scope: !3751)
!3882 = !DILocation(line: 970, column: 8, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 970, column: 8)
!3884 = !DILocation(line: 970, column: 8, scope: !3744)
!3885 = !DILocation(line: 972, column: 12, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 972, column: 12)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 971, column: 6)
!3888 = !DILocation(line: 972, column: 34, scope: !3886)
!3889 = !DILocation(line: 972, column: 12, scope: !3887)
!3890 = !DILocation(line: 974, column: 5, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 973, column: 3)
!3892 = !DILocation(line: 976, column: 3, scope: !3891)
!3893 = !DILocation(line: 977, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 977, column: 12)
!3895 = !DILocation(line: 977, column: 12, scope: !3887)
!3896 = !DILocation(line: 979, column: 5, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 978, column: 3)
!3898 = !DILocation(line: 981, column: 3, scope: !3897)
!3899 = !DILocation(line: 982, column: 17, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 982, column: 17)
!3901 = !DILocation(line: 983, column: 13, scope: !3900)
!3902 = !DILocation(line: 983, column: 10, scope: !3900)
!3903 = !DILocation(line: 982, column: 17, scope: !3894)
!3904 = !DILocation(line: 985, column: 5, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 984, column: 3)
!3906 = !DILocation(line: 987, column: 3, scope: !3905)
!3907 = !DILocation(line: 0, scope: !3894)
!3908 = !DILocation(line: 988, column: 36, scope: !3887)
!3909 = !DILocation(line: 988, column: 19, scope: !3887)
!3910 = !DILocation(line: 988, column: 16, scope: !3887)
!3911 = !DILocation(line: 989, column: 6, scope: !3887)
!3912 = !DILocation(line: 990, column: 8, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 990, column: 8)
!3914 = !DILocation(line: 990, column: 8, scope: !3744)
!3915 = !DILocation(line: 992, column: 13, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 992, column: 13)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 991, column: 6)
!3918 = !DILocation(line: 992, column: 35, scope: !3916)
!3919 = !DILocation(line: 992, column: 13, scope: !3917)
!3920 = !DILocation(line: 994, column: 5, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 993, column: 3)
!3922 = !DILocation(line: 996, column: 3, scope: !3921)
!3923 = !DILocation(line: 997, column: 36, scope: !3917)
!3924 = !DILocation(line: 997, column: 19, scope: !3917)
!3925 = !DILocation(line: 997, column: 16, scope: !3917)
!3926 = !DILocation(line: 998, column: 6, scope: !3917)
!3927 = !DILocation(line: 999, column: 8, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 999, column: 8)
!3929 = !DILocation(line: 999, column: 8, scope: !3744)
!3930 = !DILocation(line: 1001, column: 8, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1000, column: 6)
!3932 = !DILocation(line: 1002, column: 27, scope: !3931)
!3933 = !DILocation(line: 1002, column: 8, scope: !3931)
!3934 = !DILocation(line: 1003, column: 8, scope: !3931)
!3935 = !DILocation(line: 1006, column: 4, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 1006, column: 4)
!3937 = !DILocation(line: 0, scope: !3936)
!3938 = !DILocation(line: 1006, column: 4, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1006, column: 4)
!3940 = !DILocation(line: 1008, column: 12, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 1008, column: 12)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1007, column: 6)
!3943 = !DILocation(line: 1008, column: 12, scope: !3942)
!3944 = !DILocation(line: 1010, column: 5, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1009, column: 3)
!3946 = !DILocation(line: 1011, column: 24, scope: !3945)
!3947 = !DILocation(line: 1011, column: 5, scope: !3945)
!3948 = !DILocation(line: 1012, column: 5, scope: !3945)
!3949 = distinct !{!3949, !3935, !3950}
!3950 = !DILocation(line: 1014, column: 6, scope: !3936)
!3951 = !DILocation(line: 1016, column: 4, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 1016, column: 4)
!3953 = !DILocation(line: 0, scope: !3952)
!3954 = !DILocation(line: 1016, column: 4, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 1016, column: 4)
!3956 = !DILocation(line: 1018, column: 13, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 1017, column: 6)
!3958 = !DILocation(line: 1019, column: 45, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 1019, column: 12)
!3960 = !DILocation(line: 1019, column: 28, scope: !3959)
!3961 = !DILocation(line: 1019, column: 12, scope: !3959)
!3962 = !DILocation(line: 1019, column: 12, scope: !3957)
!3963 = distinct !{!3963, !3951, !3964}
!3964 = !DILocation(line: 1022, column: 6, scope: !3952)
!3965 = !DILocation(line: 1024, column: 4, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 1024, column: 4)
!3967 = !DILocation(line: 0, scope: !3966)
!3968 = !DILocation(line: 1024, column: 4, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 1024, column: 4)
!3970 = !DILocation(line: 1026, column: 12, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1026, column: 12)
!3972 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1025, column: 6)
!3973 = !DILocation(line: 1026, column: 35, scope: !3971)
!3974 = !DILocation(line: 1026, column: 12, scope: !3972)
!3975 = !DILocation(line: 1028, column: 5, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1027, column: 3)
!3977 = !DILocation(line: 1029, column: 14, scope: !3976)
!3978 = !DILocation(line: 1029, column: 5, scope: !3976)
!3979 = !DILocation(line: 1030, column: 24, scope: !3976)
!3980 = !DILocation(line: 1030, column: 5, scope: !3976)
!3981 = !DILocation(line: 1031, column: 14, scope: !3976)
!3982 = !DILocation(line: 1031, column: 5, scope: !3976)
!3983 = !DILocation(line: 1032, column: 24, scope: !3976)
!3984 = !DILocation(line: 1032, column: 32, scope: !3976)
!3985 = !DILocation(line: 1032, column: 5, scope: !3976)
!3986 = !DILocation(line: 1034, column: 5, scope: !3976)
!3987 = !DILocation(line: 1036, column: 45, scope: !3972)
!3988 = !DILocation(line: 1036, column: 8, scope: !3972)
!3989 = distinct !{!3989, !3965, !3990}
!3990 = !DILocation(line: 1037, column: 6, scope: !3966)
!3991 = !DILocation(line: 932, column: 55, scope: !3745)
!3992 = !DILocation(line: 932, column: 7, scope: !3745)
!3993 = distinct !{!3993, !3844, !3994}
!3994 = !DILocation(line: 1038, column: 2, scope: !3746)
!3995 = !DILocation(line: 1040, column: 7, scope: !3731)
!3996 = !DILocation(line: 1041, column: 5, scope: !3732)
!3997 = !DILocation(line: 0, scope: !3732)
!3998 = distinct !{!3998, !3791, !3999}
!3999 = !DILocation(line: 1041, column: 5, scope: !3733)
!4000 = !DILocation(line: 1043, column: 3, scope: !3708)
!4001 = !DILocation(line: 1047, column: 22, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1047, column: 7)
!4003 = !DILocation(line: 1047, column: 7, scope: !3708)
!4004 = !DILocation(line: 1048, column: 5, scope: !4002)
!4005 = !DILocation(line: 1050, column: 5, scope: !4002)
!4006 = !DILocation(line: 1052, column: 3, scope: !3708)
!4007 = !DILocation(line: 1053, column: 3, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1053, column: 3)
!4009 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1053, column: 3)
!4010 = !DILocation(line: 1053, column: 3, scope: !4009)
!4011 = !DILocation(line: 1056, column: 1, scope: !3708)
!4012 = !DILocation(line: 1057, column: 3, scope: !3708)
!4013 = !DILocation(line: 1058, column: 1, scope: !3708)
!4014 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !151, file: !151, line: 182, type: !4015, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4017)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!7, !3674}
!4017 = !{!4018}
!4018 = !DILocalVariable(name: "vec_", arg: 1, scope: !4014, file: !151, line: 182, type: !3674)
!4019 = !DILocation(line: 0, scope: !4014)
!4020 = !DILocation(line: 182, column: 1, scope: !4014)
!4021 = distinct !DISubprogram(name: "gimple_nop_p", scope: !568, file: !568, line: 4304, type: !3130, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4022)
!4022 = !{!4023}
!4023 = !DILocalVariable(name: "g", arg: 1, scope: !4021, file: !568, line: 4304, type: !2796)
!4024 = !DILocation(line: 0, scope: !4021)
!4025 = !DILocation(line: 4306, column: 10, scope: !4021)
!4026 = !DILocation(line: 4306, column: 26, scope: !4021)
!4027 = !DILocation(line: 4306, column: 3, scope: !4021)
!4028 = distinct !DISubprogram(name: "verify_def", scope: !3, file: !3, line: 638, type: !4029, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4031)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!634, !1416, !1987, !660, !984, !634}
!4031 = !{!4032, !4033, !4034, !4035, !4036, !4037}
!4032 = !DILocalVariable(name: "bb", arg: 1, scope: !4028, file: !3, line: 638, type: !1416)
!4033 = !DILocalVariable(name: "definition_block", arg: 2, scope: !4028, file: !3, line: 638, type: !1987)
!4034 = !DILocalVariable(name: "ssa_name", arg: 3, scope: !4028, file: !3, line: 638, type: !660)
!4035 = !DILocalVariable(name: "stmt", arg: 4, scope: !4028, file: !3, line: 639, type: !984)
!4036 = !DILocalVariable(name: "is_virtual", arg: 5, scope: !4028, file: !3, line: 639, type: !634)
!4037 = !DILabel(scope: !4028, name: "err", file: !3, line: 665)
!4038 = !DILocation(line: 0, scope: !4028)
!4039 = !DILocation(line: 641, column: 7, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 641, column: 7)
!4041 = !DILocation(line: 641, column: 7, scope: !4028)
!4042 = !DILocation(line: 644, column: 24, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 644, column: 7)
!4044 = !DILocation(line: 644, column: 7, scope: !4043)
!4045 = !DILocation(line: 644, column: 7, scope: !4028)
!4046 = !DILocation(line: 647, column: 54, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 645, column: 5)
!4048 = !DILocation(line: 647, column: 65, scope: !4047)
!4049 = !DILocation(line: 646, column: 7, scope: !4047)
!4050 = !DILocation(line: 648, column: 7, scope: !4047)
!4051 = !DILocation(line: 651, column: 49, scope: !4028)
!4052 = !DILocation(line: 653, column: 7, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 653, column: 7)
!4054 = !DILocation(line: 653, column: 36, scope: !4053)
!4055 = !DILocation(line: 653, column: 7, scope: !4028)
!4056 = !DILocation(line: 655, column: 7, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 654, column: 5)
!4058 = !DILocation(line: 656, column: 16, scope: !4057)
!4059 = !DILocation(line: 656, column: 7, scope: !4057)
!4060 = !DILocation(line: 657, column: 26, scope: !4057)
!4061 = !DILocation(line: 657, column: 34, scope: !4057)
!4062 = !DILocation(line: 657, column: 7, scope: !4057)
!4063 = !DILocation(line: 658, column: 16, scope: !4057)
!4064 = !DILocation(line: 658, column: 7, scope: !4057)
!4065 = !DILocation(line: 659, column: 26, scope: !4057)
!4066 = !DILocation(line: 659, column: 7, scope: !4057)
!4067 = !DILocation(line: 660, column: 7, scope: !4057)
!4068 = !DILocation(line: 665, column: 1, scope: !4028)
!4069 = !DILocation(line: 666, column: 12, scope: !4028)
!4070 = !DILocation(line: 666, column: 3, scope: !4028)
!4071 = !DILocation(line: 667, column: 23, scope: !4028)
!4072 = !DILocation(line: 667, column: 3, scope: !4028)
!4073 = !DILocation(line: 668, column: 12, scope: !4028)
!4074 = !DILocation(line: 668, column: 3, scope: !4028)
!4075 = !DILocation(line: 669, column: 22, scope: !4028)
!4076 = !DILocation(line: 669, column: 3, scope: !4028)
!4077 = !DILocation(line: 671, column: 3, scope: !4028)
!4078 = !DILocation(line: 672, column: 1, scope: !4028)
!4079 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !4080, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4082)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!3736, !3741}
!4082 = !{!4083, !4084}
!4083 = !DILocalVariable(name: "ev", arg: 1, scope: !4079, file: !135, line: 696, type: !3741)
!4084 = !DILocalVariable(name: "i", scope: !4079, file: !135, line: 698, type: !3736)
!4085 = !DILocation(line: 0, scope: !4079)
!4086 = !DILocation(line: 700, column: 5, scope: !4079)
!4087 = !DILocation(line: 700, column: 11, scope: !4079)
!4088 = !DILocation(line: 701, column: 5, scope: !4079)
!4089 = !DILocation(line: 701, column: 15, scope: !4079)
!4090 = !DILocation(line: 703, column: 3, scope: !4079)
!4091 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !4092, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4095)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!634, !3736, !4094}
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!4095 = !{!4096, !4097}
!4096 = !DILocalVariable(name: "ei", arg: 1, scope: !4091, file: !135, line: 771, type: !3736)
!4097 = !DILocalVariable(name: "p", arg: 2, scope: !4091, file: !135, line: 771, type: !4094)
!4098 = !DILocation(line: 0, scope: !4091)
!4099 = !DILocation(line: 773, column: 8, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4091, file: !135, line: 773, column: 7)
!4101 = !DILocation(line: 773, column: 7, scope: !4091)
!4102 = !DILocation(line: 775, column: 12, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4100, file: !135, line: 774, column: 5)
!4104 = !DILocation(line: 776, column: 7, scope: !4103)
!4105 = !DILocation(line: 781, column: 7, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4100, file: !135, line: 779, column: 5)
!4107 = !DILocation(line: 0, scope: !4100)
!4108 = !DILocation(line: 783, column: 1, scope: !4091)
!4109 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !4110, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4113)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !4112}
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!4113 = !{!4114}
!4114 = !DILocalVariable(name: "i", arg: 1, scope: !4109, file: !135, line: 736, type: !4112)
!4115 = !DILocation(line: 0, scope: !4109)
!4116 = !DILocation(line: 738, column: 3, scope: !4109)
!4117 = !DILocation(line: 739, column: 11, scope: !4109)
!4118 = !DILocation(line: 740, column: 1, scope: !4109)
!4119 = distinct !DISubprogram(name: "verify_phi_args", scope: !3, file: !3, line: 774, type: !4120, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4122)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!634, !984, !1416, !1987}
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4134, !4135, !4138}
!4123 = !DILocalVariable(name: "phi", arg: 1, scope: !4119, file: !3, line: 774, type: !984)
!4124 = !DILocalVariable(name: "bb", arg: 2, scope: !4119, file: !3, line: 774, type: !1416)
!4125 = !DILocalVariable(name: "definition_block", arg: 3, scope: !4119, file: !3, line: 774, type: !1987)
!4126 = !DILocalVariable(name: "e", scope: !4119, file: !3, line: 776, type: !964)
!4127 = !DILocalVariable(name: "err", scope: !4119, file: !3, line: 777, type: !634)
!4128 = !DILocalVariable(name: "i", scope: !4119, file: !3, line: 778, type: !1129)
!4129 = !DILocalVariable(name: "phi_num_args", scope: !4119, file: !3, line: 778, type: !1129)
!4130 = !DILocalVariable(name: "op_p", scope: !4131, file: !3, line: 789, type: !1989)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 788, column: 5)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 787, column: 3)
!4133 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 787, column: 3)
!4134 = !DILocalVariable(name: "op", scope: !4131, file: !3, line: 790, type: !660)
!4135 = !DILocalVariable(name: "base", scope: !4136, file: !3, line: 818, type: !660)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 817, column: 2)
!4137 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 816, column: 11)
!4138 = !DILabel(scope: !4119, name: "error", file: !3, line: 846)
!4139 = !DILocation(line: 0, scope: !4119)
!4140 = !DILocation(line: 778, column: 28, scope: !4119)
!4141 = !DILocation(line: 780, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 780, column: 7)
!4143 = !DILocation(line: 780, column: 30, scope: !4142)
!4144 = !DILocation(line: 780, column: 7, scope: !4119)
!4145 = !DILocation(line: 787, column: 3, scope: !4133)
!4146 = !DILocation(line: 782, column: 7, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 781, column: 5)
!4148 = !DILocation(line: 784, column: 7, scope: !4147)
!4149 = !DILocation(line: 0, scope: !4133)
!4150 = !DILocation(line: 787, column: 17, scope: !4132)
!4151 = !DILocation(line: 789, column: 61, scope: !4131)
!4152 = !DILocation(line: 789, column: 28, scope: !4131)
!4153 = !DILocation(line: 0, scope: !4131)
!4154 = !DILocation(line: 790, column: 17, scope: !4131)
!4155 = !DILocation(line: 792, column: 11, scope: !4131)
!4156 = !DILocation(line: 794, column: 14, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 794, column: 11)
!4158 = !DILocation(line: 794, column: 11, scope: !4131)
!4159 = !DILocation(line: 797, column: 14, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 795, column: 2)
!4161 = !DILocation(line: 797, column: 19, scope: !4160)
!4162 = !DILocation(line: 798, column: 7, scope: !4160)
!4163 = !DILocation(line: 798, column: 13, scope: !4160)
!4164 = !DILocation(line: 796, column: 4, scope: !4160)
!4165 = !DILocation(line: 800, column: 4, scope: !4160)
!4166 = !DILocation(line: 803, column: 11, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 803, column: 11)
!4168 = !DILocation(line: 803, column: 26, scope: !4167)
!4169 = !DILocation(line: 803, column: 38, scope: !4167)
!4170 = !DILocation(line: 803, column: 42, scope: !4167)
!4171 = !DILocation(line: 803, column: 11, scope: !4131)
!4172 = !DILocation(line: 805, column: 4, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 804, column: 2)
!4174 = !DILocation(line: 807, column: 2, scope: !4173)
!4175 = !DILocation(line: 809, column: 11, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 809, column: 11)
!4177 = !DILocation(line: 809, column: 26, scope: !4176)
!4178 = !DILocation(line: 809, column: 11, scope: !4131)
!4179 = !DILocation(line: 811, column: 47, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 810, column: 2)
!4181 = !DILocation(line: 811, column: 32, scope: !4180)
!4182 = !DILocation(line: 811, column: 31, scope: !4180)
!4183 = !DILocation(line: 811, column: 10, scope: !4180)
!4184 = !DILocation(line: 812, column: 26, scope: !4180)
!4185 = !DILocation(line: 812, column: 48, scope: !4180)
!4186 = !DILocation(line: 812, column: 31, scope: !4180)
!4187 = !DILocation(line: 813, column: 23, scope: !4180)
!4188 = !DILocation(line: 813, column: 20, scope: !4180)
!4189 = !DILocation(line: 812, column: 11, scope: !4180)
!4190 = !DILocation(line: 812, column: 8, scope: !4180)
!4191 = !DILocation(line: 816, column: 11, scope: !4137)
!4192 = !DILocation(line: 814, column: 2, scope: !4180)
!4193 = !DILocation(line: 816, column: 26, scope: !4137)
!4194 = !DILocation(line: 816, column: 11, scope: !4131)
!4195 = !DILocation(line: 819, column: 4, scope: !4136)
!4196 = !DILocation(line: 0, scope: !4136)
!4197 = !DILocation(line: 819, column: 11, scope: !4136)
!4198 = distinct !{!4198, !4195, !4199}
!4199 = !DILocation(line: 820, column: 13, scope: !4136)
!4200 = !DILocation(line: 821, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 821, column: 8)
!4202 = !DILocation(line: 821, column: 26, scope: !4201)
!4203 = !DILocation(line: 822, column: 9, scope: !4201)
!4204 = !DILocation(line: 822, column: 29, scope: !4201)
!4205 = !DILocation(line: 823, column: 9, scope: !4201)
!4206 = !DILocation(line: 823, column: 29, scope: !4201)
!4207 = !DILocation(line: 824, column: 8, scope: !4201)
!4208 = !DILocation(line: 824, column: 12, scope: !4201)
!4209 = !DILocation(line: 821, column: 8, scope: !4136)
!4210 = !DILocation(line: 826, column: 8, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 825, column: 6)
!4212 = !DILocation(line: 828, column: 6, scope: !4211)
!4213 = !DILocation(line: 831, column: 14, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 831, column: 11)
!4215 = !DILocation(line: 831, column: 19, scope: !4214)
!4216 = !DILocation(line: 831, column: 11, scope: !4131)
!4217 = !DILocation(line: 834, column: 14, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 832, column: 2)
!4219 = !DILocation(line: 834, column: 19, scope: !4218)
!4220 = !DILocation(line: 834, column: 35, scope: !4218)
!4221 = !DILocation(line: 833, column: 4, scope: !4218)
!4222 = !DILocation(line: 836, column: 2, scope: !4218)
!4223 = !DILocation(line: 838, column: 11, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 838, column: 11)
!4225 = !DILocation(line: 838, column: 11, scope: !4131)
!4226 = !DILocation(line: 840, column: 13, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 839, column: 2)
!4228 = !DILocation(line: 840, column: 4, scope: !4227)
!4229 = !DILocation(line: 841, column: 24, scope: !4227)
!4230 = !DILocation(line: 841, column: 4, scope: !4227)
!4231 = !DILocation(line: 842, column: 4, scope: !4227)
!4232 = !DILocation(line: 787, column: 34, scope: !4132)
!4233 = !DILocation(line: 787, column: 3, scope: !4132)
!4234 = distinct !{!4234, !4145, !4235}
!4235 = !DILocation(line: 844, column: 5, scope: !4133)
!4236 = !DILocation(line: 847, column: 7, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 847, column: 7)
!4238 = !DILocation(line: 846, column: 1, scope: !4119)
!4239 = !DILocation(line: 847, column: 7, scope: !4119)
!4240 = !DILocation(line: 849, column: 16, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 848, column: 5)
!4242 = !DILocation(line: 849, column: 7, scope: !4241)
!4243 = !DILocation(line: 850, column: 26, scope: !4241)
!4244 = !DILocation(line: 850, column: 7, scope: !4241)
!4245 = !DILocation(line: 851, column: 5, scope: !4241)
!4246 = !DILocation(line: 855, column: 1, scope: !4119)
!4247 = distinct !DISubprogram(name: "gsi_start_bb", scope: !568, file: !568, line: 4418, type: !4248, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4250)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!2007, !1416}
!4250 = !{!4251, !4252, !4253}
!4251 = !DILocalVariable(name: "bb", arg: 1, scope: !4247, file: !568, line: 4418, type: !1416)
!4252 = !DILocalVariable(name: "i", scope: !4247, file: !568, line: 4420, type: !2007)
!4253 = !DILocalVariable(name: "seq", scope: !4247, file: !568, line: 4421, type: !974)
!4254 = !DILocation(line: 0, scope: !4247)
!4255 = !DILocation(line: 4420, column: 24, scope: !4247)
!4256 = !DILocation(line: 4423, column: 9, scope: !4247)
!4257 = !DILocation(line: 4424, column: 11, scope: !4247)
!4258 = !DILocation(line: 4424, column: 5, scope: !4247)
!4259 = !DILocation(line: 4424, column: 9, scope: !4247)
!4260 = !DILocation(line: 4425, column: 5, scope: !4247)
!4261 = !DILocation(line: 4425, column: 9, scope: !4247)
!4262 = !DILocation(line: 4426, column: 5, scope: !4247)
!4263 = !DILocation(line: 4426, column: 8, scope: !4247)
!4264 = !DILocation(line: 4429, column: 1, scope: !4247)
!4265 = distinct !DISubprogram(name: "gimple_modified_p", scope: !568, file: !568, line: 1425, type: !3130, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4266)
!4266 = !{!4267}
!4267 = !DILocalVariable(name: "g", arg: 1, scope: !4265, file: !568, line: 1425, type: !2796)
!4268 = !DILocation(line: 0, scope: !4265)
!4269 = !DILocation(line: 1427, column: 11, scope: !4265)
!4270 = !DILocation(line: 1427, column: 10, scope: !4265)
!4271 = !DILocation(line: 1427, column: 50, scope: !4265)
!4272 = !DILocation(line: 1427, column: 33, scope: !4265)
!4273 = !DILocation(line: 1427, column: 3, scope: !4265)
!4274 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !568, file: !568, line: 1694, type: !2794, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4275)
!4275 = !{!4276}
!4276 = !DILocalVariable(name: "gs", arg: 1, scope: !4274, file: !568, line: 1694, type: !2796)
!4277 = !DILocation(line: 0, scope: !4274)
!4278 = !DILocation(line: 1697, column: 10, scope: !4274)
!4279 = !DILocation(line: 1697, column: 3, scope: !4274)
!4280 = distinct !DISubprogram(name: "gimple_vdef", scope: !568, file: !568, line: 1375, type: !2794, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4281)
!4281 = !{!4282}
!4282 = !DILocalVariable(name: "g", arg: 1, scope: !4280, file: !568, line: 1375, type: !2796)
!4283 = !DILocation(line: 0, scope: !4280)
!4284 = !DILocation(line: 1377, column: 8, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4280, file: !568, line: 1377, column: 7)
!4286 = !DILocation(line: 1377, column: 7, scope: !4280)
!4287 = !DILocation(line: 1379, column: 23, scope: !4280)
!4288 = !DILocation(line: 1379, column: 3, scope: !4280)
!4289 = !DILocation(line: 1380, column: 1, scope: !4280)
!4290 = distinct !DISubprogram(name: "gimple_debug_bind_has_value_p", scope: !568, file: !568, line: 3349, type: !4291, scopeLine: 3350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!634, !984}
!4293 = !{!4294}
!4294 = !DILocalVariable(name: "dbg", arg: 1, scope: !4290, file: !568, line: 3349, type: !984)
!4295 = !DILocation(line: 0, scope: !4290)
!4296 = !DILocation(line: 3355, column: 10, scope: !4290)
!4297 = !DILocation(line: 3355, column: 29, scope: !4290)
!4298 = !DILocation(line: 3355, column: 3, scope: !4290)
!4299 = distinct !DISubprogram(name: "gimple_vdef_op", scope: !568, file: !568, line: 1349, type: !4300, scopeLine: 1350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!1988, !2796}
!4302 = !{!4303, !4304}
!4303 = !DILocalVariable(name: "g", arg: 1, scope: !4299, file: !568, line: 1349, type: !2796)
!4304 = !DILocalVariable(name: "ops", scope: !4299, file: !568, line: 1351, type: !1013)
!4305 = !DILocation(line: 0, scope: !4299)
!4306 = !DILocation(line: 1352, column: 8, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4299, file: !568, line: 1352, column: 7)
!4308 = !DILocation(line: 1352, column: 7, scope: !4299)
!4309 = !DILocation(line: 1354, column: 25, scope: !4299)
!4310 = !DILocation(line: 1355, column: 7, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4299, file: !568, line: 1355, column: 7)
!4312 = !DILocation(line: 1356, column: 7, scope: !4311)
!4313 = !DILocation(line: 1356, column: 10, scope: !4311)
!4314 = !DILocation(line: 1356, column: 44, scope: !4311)
!4315 = !DILocation(line: 1356, column: 27, scope: !4311)
!4316 = !DILocation(line: 1355, column: 7, scope: !4299)
!4317 = !DILocation(line: 1357, column: 5, scope: !4311)
!4318 = !DILocation(line: 1359, column: 1, scope: !4299)
!4319 = distinct !DISubprogram(name: "gimple_vuse", scope: !568, file: !568, line: 1365, type: !2794, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4320)
!4320 = !{!4321}
!4321 = !DILocalVariable(name: "g", arg: 1, scope: !4319, file: !568, line: 1365, type: !2796)
!4322 = !DILocation(line: 0, scope: !4319)
!4323 = !DILocation(line: 1367, column: 8, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4319, file: !568, line: 1367, column: 7)
!4325 = !DILocation(line: 1367, column: 7, scope: !4319)
!4326 = !DILocation(line: 1369, column: 23, scope: !4319)
!4327 = !DILocation(line: 1369, column: 3, scope: !4319)
!4328 = !DILocation(line: 1370, column: 1, scope: !4319)
!4329 = distinct !DISubprogram(name: "verify_ssa_name", scope: !3, file: !3, line: 577, type: !4330, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!634, !660, !634}
!4332 = !{!4333, !4334}
!4333 = !DILocalVariable(name: "ssa_name", arg: 1, scope: !4329, file: !3, line: 577, type: !660)
!4334 = !DILocalVariable(name: "is_virtual", arg: 2, scope: !4329, file: !3, line: 577, type: !634)
!4335 = !DILocation(line: 0, scope: !4329)
!4336 = !DILocation(line: 579, column: 7, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 579, column: 7)
!4338 = !DILocation(line: 579, column: 28, scope: !4337)
!4339 = !DILocation(line: 579, column: 7, scope: !4329)
!4340 = !DILocation(line: 581, column: 7, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 580, column: 5)
!4342 = !DILocation(line: 582, column: 7, scope: !4341)
!4343 = !DILocation(line: 585, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 585, column: 7)
!4345 = !DILocation(line: 585, column: 31, scope: !4344)
!4346 = !DILocation(line: 585, column: 28, scope: !4344)
!4347 = !DILocation(line: 585, column: 7, scope: !4329)
!4348 = !DILocation(line: 587, column: 7, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 586, column: 5)
!4350 = !DILocation(line: 588, column: 7, scope: !4349)
!4351 = !DILocation(line: 591, column: 7, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 591, column: 7)
!4353 = !DILocation(line: 591, column: 7, scope: !4329)
!4354 = !DILocation(line: 593, column: 7, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 592, column: 5)
!4356 = !DILocation(line: 594, column: 7, scope: !4355)
!4357 = !DILocation(line: 597, column: 7, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 597, column: 7)
!4359 = !DILocation(line: 597, column: 18, scope: !4358)
!4360 = !DILocation(line: 597, column: 21, scope: !4358)
!4361 = !DILocation(line: 597, column: 7, scope: !4329)
!4362 = !DILocation(line: 599, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 598, column: 5)
!4364 = !DILocation(line: 600, column: 7, scope: !4363)
!4365 = !DILocation(line: 603, column: 18, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 603, column: 7)
!4367 = !DILocation(line: 603, column: 21, scope: !4366)
!4368 = !DILocation(line: 603, column: 60, scope: !4366)
!4369 = !DILocation(line: 603, column: 48, scope: !4366)
!4370 = !DILocation(line: 603, column: 45, scope: !4366)
!4371 = !DILocation(line: 603, column: 7, scope: !4329)
!4372 = !DILocation(line: 605, column: 7, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 604, column: 5)
!4374 = !DILocation(line: 606, column: 7, scope: !4373)
!4375 = !DILocation(line: 609, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 609, column: 7)
!4377 = !DILocation(line: 609, column: 23, scope: !4376)
!4378 = !DILocation(line: 609, column: 7, scope: !4329)
!4379 = !DILocation(line: 611, column: 7, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 610, column: 5)
!4381 = !DILocation(line: 612, column: 7, scope: !4380)
!4382 = !DILocation(line: 615, column: 7, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 615, column: 7)
!4384 = !DILocation(line: 616, column: 7, scope: !4383)
!4385 = !DILocation(line: 616, column: 25, scope: !4383)
!4386 = !DILocation(line: 616, column: 11, scope: !4383)
!4387 = !DILocation(line: 615, column: 7, scope: !4329)
!4388 = !DILocation(line: 618, column: 7, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 617, column: 5)
!4390 = !DILocation(line: 619, column: 7, scope: !4389)
!4391 = !DILocation(line: 623, column: 1, scope: !4329)
!4392 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !568, file: !568, line: 1334, type: !4393, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4395)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!1989, !2796}
!4395 = !{!4396, !4397}
!4396 = !DILocalVariable(name: "g", arg: 1, scope: !4392, file: !568, line: 1334, type: !2796)
!4397 = !DILocalVariable(name: "ops", scope: !4392, file: !568, line: 1336, type: !1020)
!4398 = !DILocation(line: 0, scope: !4392)
!4399 = !DILocation(line: 1337, column: 8, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4392, file: !568, line: 1337, column: 7)
!4401 = !DILocation(line: 1337, column: 7, scope: !4392)
!4402 = !DILocation(line: 1339, column: 25, scope: !4392)
!4403 = !DILocation(line: 1340, column: 7, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4392, file: !568, line: 1340, column: 7)
!4405 = !DILocation(line: 1341, column: 7, scope: !4404)
!4406 = !DILocation(line: 1341, column: 28, scope: !4404)
!4407 = !DILocation(line: 1341, column: 49, scope: !4404)
!4408 = !DILocation(line: 1341, column: 32, scope: !4404)
!4409 = !DILocation(line: 1342, column: 12, scope: !4404)
!4410 = !DILocation(line: 1340, column: 7, scope: !4392)
!4411 = !DILocation(line: 1344, column: 1, scope: !4392)
!4412 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !2768, file: !2768, line: 792, type: !4413, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4415)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!660, !3396, !984, !635}
!4415 = !{!4416, !4417, !4418}
!4416 = !DILocalVariable(name: "ptr", arg: 1, scope: !4412, file: !2768, line: 792, type: !3396)
!4417 = !DILocalVariable(name: "stmt", arg: 2, scope: !4412, file: !2768, line: 792, type: !984)
!4418 = !DILocalVariable(name: "flags", arg: 3, scope: !4412, file: !2768, line: 792, type: !635)
!4419 = !DILocation(line: 0, scope: !4412)
!4420 = !DILocation(line: 794, column: 3, scope: !4412)
!4421 = !DILocation(line: 795, column: 8, scope: !4412)
!4422 = !DILocation(line: 795, column: 18, scope: !4412)
!4423 = !DILocation(line: 796, column: 10, scope: !4412)
!4424 = !DILocation(line: 796, column: 3, scope: !4412)
!4425 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !2768, file: !2768, line: 699, type: !4426, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!660, !3396}
!4428 = !{!4429, !4430}
!4429 = !DILocalVariable(name: "ptr", arg: 1, scope: !4425, file: !2768, line: 699, type: !3396)
!4430 = !DILocalVariable(name: "val", scope: !4425, file: !2768, line: 701, type: !660)
!4431 = !DILocation(line: 0, scope: !4425)
!4432 = !DILocation(line: 705, column: 12, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4425, file: !2768, line: 705, column: 7)
!4434 = !DILocation(line: 705, column: 7, scope: !4433)
!4435 = !DILocation(line: 705, column: 7, scope: !4425)
!4436 = !DILocation(line: 707, column: 13, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4433, file: !2768, line: 706, column: 5)
!4438 = !DILocation(line: 708, column: 24, scope: !4437)
!4439 = !DILocation(line: 708, column: 30, scope: !4437)
!4440 = !DILocation(line: 708, column: 17, scope: !4437)
!4441 = !DILocation(line: 709, column: 7, scope: !4437)
!4442 = !DILocation(line: 711, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4425, file: !2768, line: 711, column: 7)
!4444 = !DILocation(line: 711, column: 7, scope: !4443)
!4445 = !DILocation(line: 711, column: 7, scope: !4425)
!4446 = !DILocation(line: 713, column: 13, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !2768, line: 712, column: 5)
!4448 = !DILocation(line: 714, column: 24, scope: !4447)
!4449 = !DILocation(line: 714, column: 30, scope: !4447)
!4450 = !DILocation(line: 714, column: 17, scope: !4447)
!4451 = !DILocation(line: 715, column: 7, scope: !4447)
!4452 = !DILocation(line: 718, column: 8, scope: !4425)
!4453 = !DILocation(line: 718, column: 13, scope: !4425)
!4454 = !DILocation(line: 719, column: 3, scope: !4425)
!4455 = !DILocation(line: 721, column: 1, scope: !4425)
!4456 = distinct !DISubprogram(name: "op_iter_init_use", scope: !2768, file: !2768, line: 768, type: !4457, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!1989, !3396, !984, !635}
!4459 = !{!4460, !4461, !4462}
!4460 = !DILocalVariable(name: "ptr", arg: 1, scope: !4456, file: !2768, line: 768, type: !3396)
!4461 = !DILocalVariable(name: "stmt", arg: 2, scope: !4456, file: !2768, line: 768, type: !984)
!4462 = !DILocalVariable(name: "flags", arg: 3, scope: !4456, file: !2768, line: 768, type: !635)
!4463 = !DILocation(line: 0, scope: !4456)
!4464 = !DILocation(line: 770, column: 3, scope: !4456)
!4465 = !DILocation(line: 772, column: 3, scope: !4456)
!4466 = !DILocation(line: 773, column: 8, scope: !4456)
!4467 = !DILocation(line: 773, column: 18, scope: !4456)
!4468 = !DILocation(line: 774, column: 10, scope: !4456)
!4469 = !DILocation(line: 774, column: 3, scope: !4456)
!4470 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2768, file: !2768, line: 427, type: !4471, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4473)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!660, !1989}
!4473 = !{!4474}
!4474 = !DILocalVariable(name: "use", arg: 1, scope: !4470, file: !2768, line: 427, type: !1989)
!4475 = !DILocation(line: 0, scope: !4470)
!4476 = !DILocation(line: 429, column: 17, scope: !4470)
!4477 = !DILocation(line: 429, column: 10, scope: !4470)
!4478 = !DILocation(line: 429, column: 3, scope: !4470)
!4479 = distinct !DISubprogram(name: "verify_use", scope: !3, file: !3, line: 690, type: !4480, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!634, !1416, !1416, !1989, !984, !634, !1532}
!4482 = !{!4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491}
!4483 = !DILocalVariable(name: "bb", arg: 1, scope: !4479, file: !3, line: 690, type: !1416)
!4484 = !DILocalVariable(name: "def_bb", arg: 2, scope: !4479, file: !3, line: 690, type: !1416)
!4485 = !DILocalVariable(name: "use_p", arg: 3, scope: !4479, file: !3, line: 690, type: !1989)
!4486 = !DILocalVariable(name: "stmt", arg: 4, scope: !4479, file: !3, line: 691, type: !984)
!4487 = !DILocalVariable(name: "check_abnormal", arg: 5, scope: !4479, file: !3, line: 691, type: !634)
!4488 = !DILocalVariable(name: "names_defined_in_bb", arg: 6, scope: !4479, file: !3, line: 691, type: !1532)
!4489 = !DILocalVariable(name: "err", scope: !4479, file: !3, line: 693, type: !634)
!4490 = !DILocalVariable(name: "ssa_name", scope: !4479, file: !3, line: 694, type: !660)
!4491 = !DILocalVariable(name: "listvar", scope: !4492, file: !3, line: 741, type: !660)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 740, column: 5)
!4493 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 734, column: 7)
!4494 = !DILocation(line: 0, scope: !4479)
!4495 = !DILocation(line: 694, column: 19, scope: !4479)
!4496 = !DILocation(line: 696, column: 8, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 696, column: 7)
!4498 = !DILocation(line: 696, column: 7, scope: !4479)
!4499 = !DILocation(line: 697, column: 27, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 697, column: 9)
!4501 = !DILocation(line: 697, column: 9, scope: !4500)
!4502 = !DILocation(line: 697, column: 9, scope: !4497)
!4503 = !DILocation(line: 700, column: 27, scope: !4479)
!4504 = !DILocation(line: 697, column: 43, scope: !4500)
!4505 = !DILocation(line: 702, column: 21, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 702, column: 7)
!4507 = !DILocation(line: 702, column: 7, scope: !4506)
!4508 = !DILocation(line: 703, column: 7, scope: !4506)
!4509 = !DILocation(line: 703, column: 10, scope: !4506)
!4510 = !DILocation(line: 702, column: 7, scope: !4479)
!4511 = !DILocation(line: 705, column: 13, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 705, column: 12)
!4513 = !DILocation(line: 705, column: 12, scope: !4506)
!4514 = !DILocation(line: 707, column: 7, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 706, column: 5)
!4516 = !DILocation(line: 709, column: 5, scope: !4515)
!4517 = !DILocation(line: 710, column: 15, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 710, column: 12)
!4519 = !DILocation(line: 711, column: 5, scope: !4518)
!4520 = !DILocation(line: 711, column: 9, scope: !4518)
!4521 = !DILocation(line: 710, column: 12, scope: !4512)
!4522 = !DILocation(line: 714, column: 15, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 712, column: 5)
!4524 = !DILocation(line: 714, column: 26, scope: !4523)
!4525 = !DILocation(line: 713, column: 7, scope: !4523)
!4526 = !DILocation(line: 716, column: 5, scope: !4523)
!4527 = !DILocation(line: 718, column: 28, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 717, column: 12)
!4529 = !DILocation(line: 718, column: 5, scope: !4528)
!4530 = !DILocation(line: 719, column: 44, scope: !4528)
!4531 = !DILocation(line: 719, column: 9, scope: !4528)
!4532 = !DILocation(line: 717, column: 12, scope: !4518)
!4533 = !DILocation(line: 721, column: 64, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 720, column: 5)
!4535 = !DILocation(line: 721, column: 7, scope: !4534)
!4536 = !DILocation(line: 723, column: 5, scope: !4534)
!4537 = !DILocation(line: 693, column: 8, scope: !4479)
!4538 = !DILocation(line: 725, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 725, column: 7)
!4540 = !DILocation(line: 726, column: 7, scope: !4539)
!4541 = !DILocation(line: 726, column: 11, scope: !4539)
!4542 = !DILocation(line: 725, column: 7, scope: !4479)
!4543 = !DILocation(line: 728, column: 7, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 727, column: 5)
!4545 = !DILocation(line: 730, column: 5, scope: !4544)
!4546 = !DILocation(line: 734, column: 14, scope: !4493)
!4547 = !DILocation(line: 734, column: 19, scope: !4493)
!4548 = !DILocation(line: 734, column: 7, scope: !4479)
!4549 = !DILocation(line: 736, column: 7, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 735, column: 5)
!4551 = !DILocation(line: 738, column: 5, scope: !4550)
!4552 = !DILocation(line: 742, column: 24, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 742, column: 11)
!4554 = !DILocation(line: 742, column: 28, scope: !4553)
!4555 = !DILocation(line: 742, column: 11, scope: !4492)
!4556 = !DILocation(line: 743, column: 25, scope: !4553)
!4557 = !DILocation(line: 743, column: 29, scope: !4553)
!4558 = !DILocation(line: 0, scope: !4492)
!4559 = !DILocation(line: 743, column: 2, scope: !4553)
!4560 = !DILocation(line: 745, column: 12, scope: !4553)
!4561 = !DILocation(line: 0, scope: !4553)
!4562 = !DILocation(line: 746, column: 19, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 746, column: 11)
!4564 = !DILocation(line: 746, column: 11, scope: !4492)
!4565 = !DILocation(line: 748, column: 4, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 747, column: 9)
!4567 = !DILocation(line: 750, column: 2, scope: !4566)
!4568 = !DILocation(line: 0, scope: !4493)
!4569 = !DILocation(line: 753, column: 7, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 753, column: 7)
!4571 = !DILocation(line: 753, column: 7, scope: !4479)
!4572 = !DILocation(line: 755, column: 16, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 754, column: 5)
!4574 = !DILocation(line: 755, column: 7, scope: !4573)
!4575 = !DILocation(line: 756, column: 27, scope: !4573)
!4576 = !DILocation(line: 756, column: 7, scope: !4573)
!4577 = !DILocation(line: 757, column: 16, scope: !4573)
!4578 = !DILocation(line: 757, column: 7, scope: !4573)
!4579 = !DILocation(line: 758, column: 26, scope: !4573)
!4580 = !DILocation(line: 758, column: 7, scope: !4573)
!4581 = !DILocation(line: 759, column: 5, scope: !4573)
!4582 = !DILocation(line: 761, column: 3, scope: !4479)
!4583 = distinct !DISubprogram(name: "op_iter_next_use", scope: !2768, file: !2768, line: 659, type: !4584, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4586)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!1989, !3396}
!4586 = !{!4587, !4588}
!4587 = !DILocalVariable(name: "ptr", arg: 1, scope: !4583, file: !2768, line: 659, type: !3396)
!4588 = !DILocalVariable(name: "use_p", scope: !4583, file: !2768, line: 661, type: !1989)
!4589 = !DILocation(line: 0, scope: !4583)
!4590 = !DILocation(line: 665, column: 12, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4583, file: !2768, line: 665, column: 7)
!4592 = !DILocation(line: 665, column: 7, scope: !4591)
!4593 = !DILocation(line: 665, column: 7, scope: !4583)
!4594 = !DILocation(line: 667, column: 15, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !2768, line: 666, column: 5)
!4596 = !DILocation(line: 668, column: 30, scope: !4595)
!4597 = !DILocation(line: 668, column: 17, scope: !4595)
!4598 = !DILocation(line: 669, column: 7, scope: !4595)
!4599 = !DILocation(line: 671, column: 12, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4583, file: !2768, line: 671, column: 7)
!4601 = !DILocation(line: 671, column: 25, scope: !4600)
!4602 = !DILocation(line: 671, column: 18, scope: !4600)
!4603 = !DILocation(line: 671, column: 7, scope: !4583)
!4604 = !DILocation(line: 673, column: 14, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4600, file: !2768, line: 672, column: 5)
!4606 = !DILocation(line: 673, column: 7, scope: !4605)
!4607 = !DILocation(line: 675, column: 8, scope: !4583)
!4608 = !DILocation(line: 675, column: 13, scope: !4583)
!4609 = !DILocation(line: 676, column: 3, scope: !4583)
!4610 = !DILocation(line: 677, column: 1, scope: !4583)
!4611 = distinct !DISubprogram(name: "int_tree_map_eq", scope: !3, file: !3, line: 1063, type: !1462, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4612)
!4612 = !{!4613, !4614, !4615, !4616}
!4613 = !DILocalVariable(name: "va", arg: 1, scope: !4611, file: !3, line: 1063, type: !1290)
!4614 = !DILocalVariable(name: "vb", arg: 2, scope: !4611, file: !3, line: 1063, type: !1290)
!4615 = !DILocalVariable(name: "a", scope: !4611, file: !3, line: 1065, type: !1992)
!4616 = !DILocalVariable(name: "b", scope: !4611, file: !3, line: 1066, type: !1992)
!4617 = !DILocation(line: 0, scope: !4611)
!4618 = !DILocation(line: 1067, column: 14, scope: !4611)
!4619 = !DILocation(line: 1067, column: 24, scope: !4611)
!4620 = !DILocation(line: 1067, column: 18, scope: !4611)
!4621 = !DILocation(line: 1067, column: 3, scope: !4611)
!4622 = distinct !DISubprogram(name: "int_tree_map_hash", scope: !3, file: !3, line: 1073, type: !4623, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4625)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!7, !1290}
!4625 = !{!4626}
!4626 = !DILocalVariable(name: "item", arg: 1, scope: !4622, file: !3, line: 1073, type: !1290)
!4627 = !DILocation(line: 0, scope: !4622)
!4628 = !DILocation(line: 1075, column: 47, scope: !4622)
!4629 = !DILocation(line: 1075, column: 3, scope: !4622)
!4630 = distinct !DISubprogram(name: "uid_decl_map_eq", scope: !3, file: !3, line: 1081, type: !1462, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4631)
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "va", arg: 1, scope: !4630, file: !3, line: 1081, type: !1290)
!4633 = !DILocalVariable(name: "vb", arg: 2, scope: !4630, file: !3, line: 1081, type: !1290)
!4634 = !DILocalVariable(name: "a", scope: !4630, file: !3, line: 1083, type: !1998)
!4635 = !DILocalVariable(name: "b", scope: !4630, file: !3, line: 1084, type: !1998)
!4636 = !DILocation(line: 0, scope: !4630)
!4637 = !DILocation(line: 1085, column: 27, scope: !4630)
!4638 = !DILocation(line: 1085, column: 50, scope: !4630)
!4639 = !DILocation(line: 1085, column: 31, scope: !4630)
!4640 = !DILocation(line: 1085, column: 3, scope: !4630)
!4641 = distinct !DISubprogram(name: "uid_decl_map_hash", scope: !3, file: !3, line: 1091, type: !4623, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4642)
!4642 = !{!4643}
!4643 = !DILocalVariable(name: "item", arg: 1, scope: !4641, file: !3, line: 1091, type: !1290)
!4644 = !DILocation(line: 0, scope: !4641)
!4645 = !DILocation(line: 1093, column: 43, scope: !4641)
!4646 = !DILocation(line: 1093, column: 3, scope: !4641)
!4647 = distinct !DISubprogram(name: "init_tree_ssa", scope: !3, file: !3, line: 1118, type: !4648, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !1404}
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "fn", arg: 1, scope: !4647, file: !3, line: 1118, type: !1404)
!4652 = !DILocation(line: 0, scope: !4647)
!4653 = !DILocation(line: 1120, column: 19, scope: !4647)
!4654 = !DILocation(line: 1120, column: 7, scope: !4647)
!4655 = !DILocation(line: 1120, column: 17, scope: !4647)
!4656 = !DILocation(line: 1121, column: 36, scope: !4647)
!4657 = !DILocation(line: 1121, column: 7, scope: !4647)
!4658 = !DILocation(line: 1121, column: 18, scope: !4647)
!4659 = !DILocation(line: 1121, column: 34, scope: !4647)
!4660 = !DILocation(line: 1123, column: 33, scope: !4647)
!4661 = !DILocation(line: 1123, column: 7, scope: !4647)
!4662 = !DILocation(line: 1123, column: 18, scope: !4647)
!4663 = !DILocation(line: 1123, column: 31, scope: !4647)
!4664 = !DILocation(line: 1125, column: 27, scope: !4647)
!4665 = !DILocation(line: 1125, column: 38, scope: !4647)
!4666 = !DILocation(line: 1125, column: 3, scope: !4647)
!4667 = !DILocation(line: 1126, column: 27, scope: !4647)
!4668 = !DILocation(line: 1126, column: 38, scope: !4647)
!4669 = !DILocation(line: 1126, column: 3, scope: !4647)
!4670 = !DILocation(line: 1127, column: 3, scope: !4647)
!4671 = !DILocation(line: 1128, column: 3, scope: !4647)
!4672 = !DILocation(line: 1129, column: 1, scope: !4647)
!4673 = distinct !DISubprogram(name: "uid_ssaname_map_hash", scope: !3, file: !3, line: 1109, type: !4623, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4674)
!4674 = !{!4675}
!4675 = !DILocalVariable(name: "item", arg: 1, scope: !4673, file: !3, line: 1109, type: !1290)
!4676 = !DILocation(line: 0, scope: !4673)
!4677 = !DILocation(line: 1111, column: 39, scope: !4673)
!4678 = !DILocation(line: 1111, column: 57, scope: !4673)
!4679 = !DILocation(line: 1111, column: 3, scope: !4673)
!4680 = distinct !DISubprogram(name: "uid_ssaname_map_eq", scope: !3, file: !3, line: 1099, type: !1462, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4681)
!4681 = !{!4682, !4683, !4684, !4685}
!4682 = !DILocalVariable(name: "va", arg: 1, scope: !4680, file: !3, line: 1099, type: !1290)
!4683 = !DILocalVariable(name: "vb", arg: 2, scope: !4680, file: !3, line: 1099, type: !1290)
!4684 = !DILocalVariable(name: "a", scope: !4680, file: !3, line: 1101, type: !1998)
!4685 = !DILocalVariable(name: "b", scope: !4680, file: !3, line: 1102, type: !1998)
!4686 = !DILocation(line: 0, scope: !4680)
!4687 = !DILocation(line: 1103, column: 23, scope: !4680)
!4688 = !DILocation(line: 1103, column: 41, scope: !4680)
!4689 = !DILocation(line: 1103, column: 60, scope: !4680)
!4690 = !DILocation(line: 1103, column: 78, scope: !4680)
!4691 = !DILocation(line: 1103, column: 45, scope: !4680)
!4692 = !DILocation(line: 1103, column: 3, scope: !4680)
!4693 = distinct !DISubprogram(name: "delete_tree_ssa", scope: !3, file: !3, line: 1135, type: !2678, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4694)
!4694 = !{!4695, !4706}
!4695 = !DILocalVariable(name: "rvi", scope: !4693, file: !3, line: 1137, type: !4696)
!4696 = !DIDerivedType(tag: DW_TAG_typedef, name: "referenced_var_iterator", file: !643, line: 336, baseType: !4697)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !643, line: 333, size: 192, elements: !4698)
!4698 = !{!4699}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "hti", scope: !4697, file: !643, line: 335, baseType: !4700, size: 192)
!4700 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_iterator", file: !643, line: 98, baseType: !4701)
!4701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !643, line: 93, size: 192, elements: !4702)
!4702 = !{!4703, !4704, !4705}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !4701, file: !643, line: 95, baseType: !1448, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4701, file: !643, line: 96, baseType: !1470, size: 64, offset: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !4701, file: !643, line: 97, baseType: !1470, size: 64, offset: 128)
!4706 = !DILocalVariable(name: "var", scope: !4693, file: !3, line: 1138, type: !660)
!4707 = !DILocation(line: 1137, column: 3, scope: !4693)
!4708 = !DILocation(line: 0, scope: !4693)
!4709 = !DILocation(line: 1141, column: 3, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1141, column: 3)
!4711 = !DILocation(line: 0, scope: !4710)
!4712 = !DILocation(line: 1141, column: 3, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 1141, column: 3)
!4714 = !DILocation(line: 1143, column: 11, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 1143, column: 11)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1142, column: 5)
!4717 = !DILocation(line: 1143, column: 11, scope: !4716)
!4718 = !DILocation(line: 1145, column: 11, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 1145, column: 11)
!4720 = !DILocation(line: 1145, column: 11, scope: !4716)
!4721 = !DILocation(line: 1147, column: 14, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1146, column: 2)
!4723 = !DILocation(line: 1147, column: 4, scope: !4722)
!4724 = !DILocation(line: 1148, column: 5, scope: !4722)
!4725 = !DILocation(line: 1148, column: 28, scope: !4722)
!4726 = !DILocation(line: 1149, column: 2, scope: !4722)
!4727 = distinct !{!4727, !4709, !4728}
!4728 = !DILocation(line: 1150, column: 5, scope: !4710)
!4729 = !DILocation(line: 1151, column: 40, scope: !4693)
!4730 = !DILocation(line: 1151, column: 16, scope: !4693)
!4731 = !DILocation(line: 1151, column: 3, scope: !4693)
!4732 = !DILocation(line: 1152, column: 3, scope: !4693)
!4733 = !DILocation(line: 1152, column: 9, scope: !4693)
!4734 = !DILocation(line: 1152, column: 20, scope: !4693)
!4735 = !DILocation(line: 1152, column: 36, scope: !4693)
!4736 = !DILocation(line: 1154, column: 3, scope: !4693)
!4737 = !DILocation(line: 1155, column: 3, scope: !4693)
!4738 = !DILocation(line: 1158, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1158, column: 7)
!4740 = !DILocation(line: 1158, column: 7, scope: !4693)
!4741 = !DILocation(line: 1159, column: 5, scope: !4739)
!4742 = !DILocation(line: 1161, column: 3, scope: !4693)
!4743 = !DILocation(line: 1163, column: 16, scope: !4693)
!4744 = !DILocation(line: 1163, column: 22, scope: !4693)
!4745 = !DILocation(line: 1163, column: 33, scope: !4693)
!4746 = !DILocation(line: 1163, column: 3, scope: !4693)
!4747 = !DILocation(line: 1164, column: 3, scope: !4693)
!4748 = !DILocation(line: 1164, column: 9, scope: !4693)
!4749 = !DILocation(line: 1164, column: 20, scope: !4693)
!4750 = !DILocation(line: 1164, column: 33, scope: !4693)
!4751 = !DILocation(line: 1165, column: 29, scope: !4693)
!4752 = !DILocation(line: 1165, column: 40, scope: !4693)
!4753 = !DILocation(line: 1165, column: 3, scope: !4693)
!4754 = !DILocation(line: 1166, column: 23, scope: !4693)
!4755 = !DILocation(line: 1166, column: 29, scope: !4693)
!4756 = !DILocation(line: 1166, column: 40, scope: !4693)
!4757 = !DILocation(line: 1166, column: 3, scope: !4693)
!4758 = !DILocation(line: 1167, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1167, column: 7)
!4760 = !DILocation(line: 1167, column: 13, scope: !4759)
!4761 = !DILocation(line: 1167, column: 24, scope: !4759)
!4762 = !DILocation(line: 1167, column: 42, scope: !4759)
!4763 = !DILocation(line: 1167, column: 7, scope: !4693)
!4764 = !DILocation(line: 1168, column: 5, scope: !4759)
!4765 = !DILocation(line: 1169, column: 3, scope: !4693)
!4766 = !DILocation(line: 1169, column: 9, scope: !4693)
!4767 = !DILocation(line: 1171, column: 3, scope: !4693)
!4768 = !DILocation(line: 1169, column: 20, scope: !4693)
!4769 = !DILocation(line: 1169, column: 38, scope: !4693)
!4770 = !DILocation(line: 1170, column: 9, scope: !4693)
!4771 = !DILocation(line: 1170, column: 20, scope: !4693)
!4772 = !DILocation(line: 1170, column: 44, scope: !4693)
!4773 = !DILocation(line: 1171, column: 19, scope: !4693)
!4774 = !DILocation(line: 1174, column: 3, scope: !4693)
!4775 = !DILocation(line: 1175, column: 1, scope: !4693)
!4776 = distinct !DISubprogram(name: "first_referenced_var", scope: !2768, file: !2768, line: 105, type: !4777, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4780)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!660, !4779}
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4780 = !{!4781}
!4781 = !DILocalVariable(name: "iter", arg: 1, scope: !4776, file: !2768, line: 105, type: !4779)
!4782 = !DILocation(line: 0, scope: !4776)
!4783 = !DILocation(line: 107, column: 44, scope: !4776)
!4784 = !DILocation(line: 108, column: 33, scope: !4776)
!4785 = !DILocation(line: 108, column: 9, scope: !4776)
!4786 = !DILocation(line: 107, column: 17, scope: !4776)
!4787 = !DILocation(line: 107, column: 10, scope: !4776)
!4788 = !DILocation(line: 107, column: 3, scope: !4776)
!4789 = distinct !DISubprogram(name: "end_referenced_vars_p", scope: !2768, file: !2768, line: 115, type: !4790, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4794)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!634, !4792}
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4696)
!4794 = !{!4795}
!4795 = !DILocalVariable(name: "iter", arg: 1, scope: !4789, file: !2768, line: 115, type: !4792)
!4796 = !DILocation(line: 0, scope: !4789)
!4797 = !DILocation(line: 117, column: 29, scope: !4789)
!4798 = !DILocation(line: 117, column: 10, scope: !4789)
!4799 = !DILocation(line: 117, column: 3, scope: !4789)
!4800 = distinct !DISubprogram(name: "is_global_var", scope: !2768, file: !2768, line: 575, type: !4801, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4803)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{!634, !1998}
!4803 = !{!4804}
!4804 = !DILocalVariable(name: "t", arg: 1, scope: !4800, file: !2768, line: 575, type: !1998)
!4805 = !DILocation(line: 0, scope: !4800)
!4806 = !DILocation(line: 577, column: 11, scope: !4800)
!4807 = !DILocation(line: 577, column: 27, scope: !4800)
!4808 = !DILocation(line: 577, column: 30, scope: !4800)
!4809 = !DILocation(line: 577, column: 3, scope: !4800)
!4810 = distinct !DISubprogram(name: "var_ann", scope: !2768, file: !2768, line: 132, type: !4811, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4814)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!4813, !1998}
!4813 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_ann_t", file: !643, line: 297, baseType: !1355)
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "t", arg: 1, scope: !4810, file: !2768, line: 132, type: !1998)
!4816 = !DILocalVariable(name: "p", scope: !4810, file: !2768, line: 134, type: !4817)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4813)
!4819 = !DILocation(line: 0, scope: !4810)
!4820 = !DILocation(line: 134, column: 24, scope: !4810)
!4821 = !DILocation(line: 135, column: 10, scope: !4810)
!4822 = !DILocation(line: 135, column: 14, scope: !4810)
!4823 = !DILocation(line: 135, column: 3, scope: !4810)
!4824 = distinct !DISubprogram(name: "next_referenced_var", scope: !2768, file: !2768, line: 124, type: !4777, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4825)
!4825 = !{!4826}
!4826 = !DILocalVariable(name: "iter", arg: 1, scope: !4824, file: !2768, line: 124, type: !4779)
!4827 = !DILocation(line: 0, scope: !4824)
!4828 = !DILocation(line: 126, column: 43, scope: !4824)
!4829 = !DILocation(line: 126, column: 17, scope: !4824)
!4830 = !DILocation(line: 126, column: 10, scope: !4824)
!4831 = !DILocation(line: 126, column: 3, scope: !4824)
!4832 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !2768, file: !2768, line: 40, type: !4833, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4837)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!1448, !4835}
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!4837 = !{!4838}
!4838 = !DILocalVariable(name: "fun", arg: 1, scope: !4832, file: !2768, line: 40, type: !4835)
!4839 = !DILocation(line: 0, scope: !4832)
!4840 = !DILocation(line: 42, column: 13, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4832, file: !2768, line: 42, column: 7)
!4842 = !DILocation(line: 42, column: 8, scope: !4841)
!4843 = !DILocation(line: 42, column: 7, scope: !4832)
!4844 = !DILocation(line: 44, column: 26, scope: !4832)
!4845 = !DILocation(line: 44, column: 3, scope: !4832)
!4846 = !DILocation(line: 45, column: 1, scope: !4832)
!4847 = distinct !DISubprogram(name: "useless_type_conversion_p", scope: !3, file: !3, line: 1201, type: !4848, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4850)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!634, !660, !660}
!4850 = !{!4851, !4852, !4853, !4864, !4865, !4866, !4867, !4870}
!4851 = !DILocalVariable(name: "outer_type", arg: 1, scope: !4847, file: !3, line: 1201, type: !660)
!4852 = !DILocalVariable(name: "inner_type", arg: 2, scope: !4847, file: !3, line: 1201, type: !660)
!4853 = !DILocalVariable(name: "inner_min", scope: !4854, file: !3, line: 1363, type: !660)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1362, column: 2)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1359, column: 11)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 1333, column: 5)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 1331, column: 12)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 1325, column: 12)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 1319, column: 12)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1278, column: 12)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1273, column: 12)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1268, column: 12)
!4863 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1253, column: 7)
!4864 = !DILocalVariable(name: "outer_min", scope: !4854, file: !3, line: 1364, type: !660)
!4865 = !DILocalVariable(name: "inner_max", scope: !4854, file: !3, line: 1365, type: !660)
!4866 = !DILocalVariable(name: "outer_max", scope: !4854, file: !3, line: 1366, type: !660)
!4867 = !DILocalVariable(name: "outer_parm", scope: !4868, file: !3, line: 1401, type: !660)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1400, column: 5)
!4869 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 1397, column: 12)
!4870 = !DILocalVariable(name: "inner_parm", scope: !4868, file: !3, line: 1401, type: !660)
!4871 = !DILocation(line: 1321, column: 12, scope: !4859)
!4872 = !DILocation(line: 0, scope: !4847)
!4873 = !DILocation(line: 1204, column: 7, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1204, column: 7)
!4875 = !DILocation(line: 1205, column: 7, scope: !4874)
!4876 = !DILocation(line: 1205, column: 10, scope: !4874)
!4877 = !DILocation(line: 1204, column: 7, scope: !4847)
!4878 = !DILocation(line: 1208, column: 11, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1208, column: 11)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1206, column: 5)
!4881 = !DILocation(line: 1209, column: 7, scope: !4879)
!4882 = !DILocation(line: 1209, column: 4, scope: !4879)
!4883 = !DILocation(line: 1208, column: 11, scope: !4880)
!4884 = !DILocation(line: 1215, column: 11, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1215, column: 11)
!4886 = !DILocation(line: 1216, column: 4, scope: !4885)
!4887 = !DILocation(line: 1216, column: 44, scope: !4885)
!4888 = !DILocation(line: 1217, column: 9, scope: !4885)
!4889 = !DILocation(line: 1217, column: 47, scope: !4885)
!4890 = !DILocation(line: 1218, column: 8, scope: !4885)
!4891 = !DILocation(line: 1219, column: 5, scope: !4885)
!4892 = !DILocation(line: 1220, column: 8, scope: !4885)
!4893 = !DILocation(line: 1220, column: 12, scope: !4885)
!4894 = !DILocation(line: 1221, column: 8, scope: !4885)
!4895 = !DILocation(line: 1221, column: 38, scope: !4885)
!4896 = !DILocation(line: 1222, column: 10, scope: !4885)
!4897 = !DILocation(line: 1221, column: 11, scope: !4885)
!4898 = !DILocation(line: 1215, column: 11, scope: !4880)
!4899 = !DILocation(line: 1226, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1226, column: 11)
!4901 = !DILocation(line: 1227, column: 8, scope: !4900)
!4902 = !DILocation(line: 1227, column: 5, scope: !4900)
!4903 = !DILocation(line: 1228, column: 4, scope: !4900)
!4904 = !DILocation(line: 1228, column: 7, scope: !4900)
!4905 = !DILocation(line: 1226, column: 11, scope: !4880)
!4906 = !DILocation(line: 1233, column: 16, scope: !4847)
!4907 = !DILocation(line: 1234, column: 16, scope: !4847)
!4908 = !DILocation(line: 1236, column: 18, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1236, column: 7)
!4910 = !DILocation(line: 1236, column: 7, scope: !4847)
!4911 = !DILocation(line: 1240, column: 7, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1240, column: 7)
!4913 = !DILocation(line: 1241, column: 7, scope: !4912)
!4914 = !DILocation(line: 1241, column: 41, scope: !4912)
!4915 = !DILocation(line: 1241, column: 38, scope: !4912)
!4916 = !DILocation(line: 1240, column: 7, scope: !4847)
!4917 = !DILocation(line: 1246, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1246, column: 7)
!4919 = !DILocation(line: 1246, column: 33, scope: !4918)
!4920 = !DILocation(line: 1246, column: 30, scope: !4918)
!4921 = !DILocation(line: 1247, column: 7, scope: !4918)
!4922 = !DILocation(line: 1253, column: 7, scope: !4863)
!4923 = !DILocation(line: 1247, column: 11, scope: !4918)
!4924 = !DILocation(line: 1246, column: 7, scope: !4847)
!4925 = !DILocation(line: 1254, column: 7, scope: !4863)
!4926 = !DILocation(line: 1254, column: 10, scope: !4863)
!4927 = !DILocation(line: 1253, column: 7, scope: !4847)
!4928 = !DILocation(line: 1257, column: 38, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 1257, column: 11)
!4930 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1255, column: 5)
!4931 = !DILocation(line: 1258, column: 4, scope: !4929)
!4932 = !DILocation(line: 1258, column: 7, scope: !4929)
!4933 = !DILocation(line: 1258, column: 38, scope: !4929)
!4934 = !DILocation(line: 1258, column: 35, scope: !4929)
!4935 = !DILocation(line: 1257, column: 11, scope: !4930)
!4936 = !DILocation(line: 1268, column: 12, scope: !4862)
!4937 = !DILocation(line: 1269, column: 5, scope: !4862)
!4938 = !DILocation(line: 1269, column: 8, scope: !4862)
!4939 = !DILocation(line: 1268, column: 12, scope: !4863)
!4940 = !DILocation(line: 1273, column: 12, scope: !4861)
!4941 = !DILocation(line: 1274, column: 5, scope: !4861)
!4942 = !DILocation(line: 1274, column: 8, scope: !4861)
!4943 = !DILocation(line: 1273, column: 12, scope: !4862)
!4944 = !DILocation(line: 1278, column: 12, scope: !4860)
!4945 = !DILocation(line: 1279, column: 5, scope: !4860)
!4946 = !DILocation(line: 1279, column: 8, scope: !4860)
!4947 = !DILocation(line: 1278, column: 12, scope: !4861)
!4948 = !DILocation(line: 1285, column: 11, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 1285, column: 11)
!4950 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 1280, column: 5)
!4951 = !DILocation(line: 1285, column: 46, scope: !4949)
!4952 = !DILocation(line: 1286, column: 4, scope: !4949)
!4953 = !DILocation(line: 1286, column: 42, scope: !4949)
!4954 = !DILocation(line: 1287, column: 4, scope: !4949)
!4955 = !DILocation(line: 1287, column: 7, scope: !4949)
!4956 = !DILocation(line: 1287, column: 42, scope: !4949)
!4957 = !DILocation(line: 1288, column: 4, scope: !4949)
!4958 = !DILocation(line: 1288, column: 42, scope: !4949)
!4959 = !DILocation(line: 1289, column: 4, scope: !4949)
!4960 = !DILocation(line: 1290, column: 8, scope: !4949)
!4961 = !DILocation(line: 1291, column: 4, scope: !4949)
!4962 = !DILocation(line: 1291, column: 7, scope: !4949)
!4963 = !DILocation(line: 1285, column: 11, scope: !4950)
!4964 = !DILocation(line: 1295, column: 12, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 1295, column: 11)
!4966 = !DILocation(line: 1296, column: 4, scope: !4965)
!4967 = !DILocation(line: 1296, column: 7, scope: !4965)
!4968 = !DILocation(line: 1295, column: 11, scope: !4950)
!4969 = !DILocation(line: 1301, column: 11, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 1301, column: 11)
!4971 = !DILocation(line: 1301, column: 47, scope: !4970)
!4972 = !DILocation(line: 1301, column: 44, scope: !4970)
!4973 = !DILocation(line: 1301, column: 11, scope: !4950)
!4974 = !DILocation(line: 1314, column: 34, scope: !4950)
!4975 = !DILocation(line: 1315, column: 6, scope: !4950)
!4976 = !DILocation(line: 1314, column: 14, scope: !4950)
!4977 = !DILocation(line: 1314, column: 7, scope: !4950)
!4978 = !DILocation(line: 1319, column: 35, scope: !4859)
!4979 = !DILocation(line: 1320, column: 5, scope: !4859)
!4980 = !DILocation(line: 1320, column: 8, scope: !4859)
!4981 = !DILocation(line: 1320, column: 31, scope: !4859)
!4982 = !DILocation(line: 1319, column: 12, scope: !4860)
!4983 = !DILocation(line: 0, scope: !4859)
!4984 = !DILocation(line: 1325, column: 35, scope: !4858)
!4985 = !DILocation(line: 1326, column: 5, scope: !4858)
!4986 = !DILocation(line: 1326, column: 8, scope: !4858)
!4987 = !DILocation(line: 1326, column: 31, scope: !4858)
!4988 = !DILocation(line: 1327, column: 5, scope: !4858)
!4989 = !DILocation(line: 1327, column: 8, scope: !4858)
!4990 = !DILocation(line: 1327, column: 39, scope: !4858)
!4991 = !DILocation(line: 1327, column: 36, scope: !4858)
!4992 = !DILocation(line: 1325, column: 12, scope: !4859)
!4993 = !DILocation(line: 1328, column: 12, scope: !4858)
!4994 = !DILocation(line: 1331, column: 35, scope: !4857)
!4995 = !DILocation(line: 1332, column: 5, scope: !4857)
!4996 = !DILocation(line: 1332, column: 8, scope: !4857)
!4997 = !DILocation(line: 1332, column: 31, scope: !4857)
!4998 = !DILocation(line: 1331, column: 12, scope: !4858)
!4999 = !DILocation(line: 1335, column: 11, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1335, column: 11)
!5001 = !DILocation(line: 1335, column: 44, scope: !5000)
!5002 = !DILocation(line: 1335, column: 41, scope: !5000)
!5003 = !DILocation(line: 1335, column: 11, scope: !4856)
!5004 = !DILocation(line: 1340, column: 12, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1340, column: 11)
!5006 = !DILocation(line: 1341, column: 4, scope: !5005)
!5007 = !DILocation(line: 1341, column: 7, scope: !5005)
!5008 = !DILocation(line: 1340, column: 11, scope: !4856)
!5009 = !DILocation(line: 1346, column: 11, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1346, column: 11)
!5011 = !DILocation(line: 1347, column: 4, scope: !5010)
!5012 = !DILocation(line: 1347, column: 7, scope: !5010)
!5013 = !DILocation(line: 1347, column: 42, scope: !5010)
!5014 = !DILocation(line: 1348, column: 4, scope: !5010)
!5015 = !DILocation(line: 1348, column: 9, scope: !5010)
!5016 = !DILocation(line: 1349, column: 8, scope: !5010)
!5017 = !DILocation(line: 1349, column: 11, scope: !5010)
!5018 = !DILocation(line: 1349, column: 46, scope: !5010)
!5019 = !DILocation(line: 1350, column: 8, scope: !5010)
!5020 = !DILocation(line: 1350, column: 12, scope: !5010)
!5021 = !DILocation(line: 1346, column: 11, scope: !4856)
!5022 = !DILocation(line: 1359, column: 11, scope: !4855)
!5023 = !DILocation(line: 1360, column: 4, scope: !4855)
!5024 = !DILocation(line: 1360, column: 7, scope: !4855)
!5025 = !DILocation(line: 1361, column: 4, scope: !4855)
!5026 = !DILocation(line: 1361, column: 32, scope: !4855)
!5027 = !DILocation(line: 1359, column: 11, scope: !4856)
!5028 = !DILocation(line: 1363, column: 21, scope: !4854)
!5029 = !DILocation(line: 0, scope: !4854)
!5030 = !DILocation(line: 1364, column: 21, scope: !4854)
!5031 = !DILocation(line: 1365, column: 21, scope: !4854)
!5032 = !DILocation(line: 1366, column: 21, scope: !4854)
!5033 = !DILocation(line: 1371, column: 8, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1371, column: 8)
!5035 = !DILocation(line: 1371, column: 18, scope: !5034)
!5036 = !DILocation(line: 1371, column: 21, scope: !5034)
!5037 = !DILocation(line: 1371, column: 43, scope: !5034)
!5038 = !DILocation(line: 1371, column: 8, scope: !4854)
!5039 = !DILocation(line: 1373, column: 8, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1373, column: 8)
!5041 = !DILocation(line: 1373, column: 18, scope: !5040)
!5042 = !DILocation(line: 1373, column: 21, scope: !5040)
!5043 = !DILocation(line: 1373, column: 43, scope: !5040)
!5044 = !DILocation(line: 1373, column: 8, scope: !4854)
!5045 = !DILocation(line: 1375, column: 8, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1375, column: 8)
!5047 = !DILocation(line: 1375, column: 18, scope: !5046)
!5048 = !DILocation(line: 1375, column: 21, scope: !5046)
!5049 = !DILocation(line: 1375, column: 43, scope: !5046)
!5050 = !DILocation(line: 1375, column: 8, scope: !4854)
!5051 = !DILocation(line: 1377, column: 8, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1377, column: 8)
!5053 = !DILocation(line: 1377, column: 18, scope: !5052)
!5054 = !DILocation(line: 1377, column: 21, scope: !5052)
!5055 = !DILocation(line: 1377, column: 43, scope: !5052)
!5056 = !DILocation(line: 1377, column: 8, scope: !4854)
!5057 = !DILocation(line: 1382, column: 8, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1382, column: 8)
!5059 = !DILocation(line: 1383, column: 8, scope: !5058)
!5060 = !DILocation(line: 1383, column: 13, scope: !5058)
!5061 = !DILocation(line: 1384, column: 5, scope: !5058)
!5062 = !DILocation(line: 1384, column: 9, scope: !5058)
!5063 = !DILocation(line: 1382, column: 8, scope: !4854)
!5064 = !DILocation(line: 1386, column: 8, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1386, column: 8)
!5066 = !DILocation(line: 1387, column: 8, scope: !5065)
!5067 = !DILocation(line: 1387, column: 13, scope: !5065)
!5068 = !DILocation(line: 1388, column: 5, scope: !5065)
!5069 = !DILocation(line: 1388, column: 9, scope: !5065)
!5070 = !DILocation(line: 1386, column: 8, scope: !4854)
!5071 = !DILocation(line: 1390, column: 2, scope: !4855)
!5072 = !DILocation(line: 1393, column: 14, scope: !4856)
!5073 = !DILocation(line: 1397, column: 36, scope: !4869)
!5074 = !DILocation(line: 1398, column: 6, scope: !4869)
!5075 = !DILocation(line: 1398, column: 32, scope: !4869)
!5076 = !DILocation(line: 1399, column: 5, scope: !4869)
!5077 = !DILocation(line: 1399, column: 34, scope: !4869)
!5078 = !DILocation(line: 1399, column: 31, scope: !4869)
!5079 = !DILocation(line: 1397, column: 12, scope: !4857)
!5080 = !DILocation(line: 1404, column: 39, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1404, column: 11)
!5082 = !DILocation(line: 1405, column: 11, scope: !5081)
!5083 = !DILocation(line: 1404, column: 12, scope: !5081)
!5084 = !DILocation(line: 1404, column: 11, scope: !4868)
!5085 = !DILocation(line: 1409, column: 11, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1409, column: 11)
!5087 = !DILocation(line: 1409, column: 34, scope: !5086)
!5088 = !DILocation(line: 1410, column: 4, scope: !5086)
!5089 = !DILocation(line: 1410, column: 35, scope: !5086)
!5090 = !DILocation(line: 1411, column: 7, scope: !5086)
!5091 = !DILocation(line: 1410, column: 8, scope: !5086)
!5092 = !DILocation(line: 1409, column: 11, scope: !4868)
!5093 = !DILocation(line: 1415, column: 12, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1415, column: 11)
!5095 = !DILocation(line: 1415, column: 11, scope: !4868)
!5096 = !DILocation(line: 1420, column: 42, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1420, column: 11)
!5098 = !DILocation(line: 1420, column: 39, scope: !5097)
!5099 = !DILocation(line: 1420, column: 11, scope: !4868)
!5100 = !DILocation(line: 1423, column: 12, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1423, column: 7)
!5102 = !DILocation(line: 0, scope: !5101)
!5103 = !DILocation(line: 0, scope: !4868)
!5104 = !DILocation(line: 1425, column: 5, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1423, column: 7)
!5106 = !DILocation(line: 1425, column: 16, scope: !5105)
!5107 = !DILocation(line: 1423, column: 7, scope: !5101)
!5108 = !DILocation(line: 1429, column: 10, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1428, column: 6)
!5110 = !DILocation(line: 1430, column: 3, scope: !5109)
!5111 = !DILocation(line: 1428, column: 7, scope: !5109)
!5112 = !DILocation(line: 1428, column: 6, scope: !5105)
!5113 = !DILocation(line: 1426, column: 18, scope: !5105)
!5114 = !DILocation(line: 1427, column: 18, scope: !5105)
!5115 = !DILocation(line: 1423, column: 7, scope: !5105)
!5116 = distinct !{!5116, !5107, !5117}
!5117 = !DILocation(line: 1431, column: 11, scope: !5101)
!5118 = !DILocation(line: 1435, column: 22, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1435, column: 11)
!5120 = !DILocation(line: 1439, column: 11, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1439, column: 11)
!5122 = !DILocation(line: 1439, column: 40, scope: !5121)
!5123 = !DILocation(line: 1439, column: 43, scope: !5121)
!5124 = !DILocation(line: 1439, column: 11, scope: !4868)
!5125 = !DILocation(line: 1440, column: 17, scope: !5121)
!5126 = !DILocation(line: 1440, column: 9, scope: !5121)
!5127 = !DILocation(line: 1440, column: 63, scope: !5121)
!5128 = !DILocation(line: 1440, column: 2, scope: !5121)
!5129 = !DILocation(line: 0, scope: !4869)
!5130 = !DILocation(line: 1453, column: 1, scope: !4847)
!5131 = distinct !DISubprogram(name: "types_compatible_p", scope: !3, file: !3, line: 1459, type: !4848, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5132)
!5132 = !{!5133, !5134}
!5133 = !DILocalVariable(name: "type1", arg: 1, scope: !5131, file: !3, line: 1459, type: !660)
!5134 = !DILocalVariable(name: "type2", arg: 2, scope: !5131, file: !3, line: 1459, type: !660)
!5135 = !DILocation(line: 0, scope: !5131)
!5136 = !DILocation(line: 1461, column: 17, scope: !5131)
!5137 = !DILocation(line: 1462, column: 4, scope: !5131)
!5138 = !DILocation(line: 1462, column: 8, scope: !5131)
!5139 = !DILocation(line: 1463, column: 8, scope: !5131)
!5140 = !DILocation(line: 1463, column: 11, scope: !5131)
!5141 = !DILocation(line: 1461, column: 3, scope: !5131)
!5142 = distinct !DISubprogram(name: "tree_ssa_useless_type_conversion", scope: !3, file: !3, line: 1470, type: !5143, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5145)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!634, !660}
!5145 = !{!5146}
!5146 = !DILocalVariable(name: "expr", arg: 1, scope: !5142, file: !3, line: 1470, type: !660)
!5147 = !DILocation(line: 0, scope: !5142)
!5148 = !DILocation(line: 1476, column: 7, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1476, column: 7)
!5150 = !DILocation(line: 1477, column: 7, scope: !5149)
!5151 = !DILocation(line: 1477, column: 27, scope: !5149)
!5152 = !DILocation(line: 1478, column: 7, scope: !5149)
!5153 = !DILocation(line: 1478, column: 27, scope: !5149)
!5154 = !DILocation(line: 1476, column: 7, scope: !5142)
!5155 = !DILocation(line: 1480, column: 8, scope: !5149)
!5156 = !DILocation(line: 1481, column: 8, scope: !5149)
!5157 = !DILocation(line: 1479, column: 12, scope: !5149)
!5158 = !DILocation(line: 1479, column: 5, scope: !5149)
!5159 = !DILocation(line: 1484, column: 1, scope: !5142)
!5160 = distinct !DISubprogram(name: "tree_ssa_strip_useless_type_conversions", scope: !3, file: !3, line: 1491, type: !2888, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5161)
!5161 = !{!5162}
!5162 = !DILocalVariable(name: "exp", arg: 1, scope: !5160, file: !3, line: 1491, type: !660)
!5163 = !DILocation(line: 0, scope: !5160)
!5164 = !DILocation(line: 1493, column: 3, scope: !5160)
!5165 = !DILocation(line: 1493, column: 10, scope: !5160)
!5166 = !DILocation(line: 1494, column: 11, scope: !5160)
!5167 = distinct !{!5167, !5164, !5166}
!5168 = !DILocation(line: 1495, column: 3, scope: !5160)
!5169 = distinct !DISubprogram(name: "walk_use_def_chains", scope: !3, file: !3, line: 1586, type: !5170, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5176)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{null, !660, !5172, !639, !634}
!5172 = !DIDerivedType(tag: DW_TAG_typedef, name: "walk_use_def_chains_fn", file: !643, line: 581, baseType: !5173)
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!634, !660, !984, !639}
!5176 = !{!5177, !5178, !5179, !5180, !5181, !5182}
!5177 = !DILocalVariable(name: "var", arg: 1, scope: !5169, file: !3, line: 1586, type: !660)
!5178 = !DILocalVariable(name: "fn", arg: 2, scope: !5169, file: !3, line: 1586, type: !5172)
!5179 = !DILocalVariable(name: "data", arg: 3, scope: !5169, file: !3, line: 1586, type: !639)
!5180 = !DILocalVariable(name: "is_dfs", arg: 4, scope: !5169, file: !3, line: 1587, type: !634)
!5181 = !DILocalVariable(name: "def_stmt", scope: !5169, file: !3, line: 1589, type: !984)
!5182 = !DILocalVariable(name: "visited", scope: !5183, file: !3, line: 1601, type: !2015)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1600, column: 5)
!5184 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1597, column: 7)
!5185 = !DILocation(line: 0, scope: !5169)
!5186 = !DILocation(line: 1591, column: 3, scope: !5169)
!5187 = !DILocation(line: 1593, column: 14, scope: !5169)
!5188 = !DILocation(line: 1597, column: 7, scope: !5184)
!5189 = !DILocation(line: 1597, column: 30, scope: !5184)
!5190 = !DILocation(line: 1597, column: 7, scope: !5169)
!5191 = !DILocation(line: 1598, column: 5, scope: !5184)
!5192 = !DILocation(line: 1601, column: 39, scope: !5183)
!5193 = !DILocation(line: 0, scope: !5183)
!5194 = !DILocation(line: 1602, column: 7, scope: !5183)
!5195 = !DILocation(line: 1603, column: 7, scope: !5183)
!5196 = !DILocation(line: 1605, column: 1, scope: !5169)
!5197 = distinct !DISubprogram(name: "walk_use_def_chains_1", scope: !3, file: !3, line: 1514, type: !5198, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5200)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{!634, !660, !5172, !639, !2015, !634}
!5200 = !{!5201, !5202, !5203, !5204, !5205, !5206, !5207, !5210}
!5201 = !DILocalVariable(name: "var", arg: 1, scope: !5197, file: !3, line: 1514, type: !660)
!5202 = !DILocalVariable(name: "fn", arg: 2, scope: !5197, file: !3, line: 1514, type: !5172)
!5203 = !DILocalVariable(name: "data", arg: 3, scope: !5197, file: !3, line: 1514, type: !639)
!5204 = !DILocalVariable(name: "visited", arg: 4, scope: !5197, file: !3, line: 1515, type: !2015)
!5205 = !DILocalVariable(name: "is_dfs", arg: 5, scope: !5197, file: !3, line: 1515, type: !634)
!5206 = !DILocalVariable(name: "def_stmt", scope: !5197, file: !3, line: 1517, type: !984)
!5207 = !DILocalVariable(name: "i", scope: !5208, file: !3, line: 1531, type: !1129)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1530, column: 5)
!5209 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 1524, column: 7)
!5210 = !DILocalVariable(name: "arg", scope: !5211, file: !3, line: 1543, type: !660)
!5211 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1542, column: 2)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 1541, column: 7)
!5213 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1541, column: 7)
!5214 = !DILocation(line: 0, scope: !5197)
!5215 = !DILocation(line: 1519, column: 36, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 1519, column: 7)
!5217 = !DILocation(line: 1519, column: 7, scope: !5216)
!5218 = !DILocation(line: 1519, column: 7, scope: !5197)
!5219 = !DILocation(line: 1522, column: 14, scope: !5197)
!5220 = !DILocation(line: 1524, column: 7, scope: !5209)
!5221 = !DILocation(line: 1524, column: 30, scope: !5209)
!5222 = !DILocation(line: 1524, column: 7, scope: !5197)
!5223 = !DILocation(line: 1527, column: 14, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1525, column: 5)
!5225 = !DILocation(line: 1527, column: 7, scope: !5224)
!5226 = !DILocation(line: 1535, column: 12, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1535, column: 11)
!5228 = !DILocation(line: 1535, column: 11, scope: !5208)
!5229 = !DILocation(line: 1536, column: 2, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1536, column: 2)
!5231 = !DILocation(line: 0, scope: !5230)
!5232 = !DILocation(line: 0, scope: !5208)
!5233 = !DILocation(line: 1536, column: 18, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 1536, column: 2)
!5235 = !DILocation(line: 1536, column: 16, scope: !5234)
!5236 = !DILocation(line: 1537, column: 12, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1537, column: 8)
!5238 = !DILocation(line: 1537, column: 8, scope: !5237)
!5239 = !DILocation(line: 1537, column: 8, scope: !5234)
!5240 = !DILocation(line: 1536, column: 51, scope: !5234)
!5241 = !DILocation(line: 1536, column: 2, scope: !5234)
!5242 = distinct !{!5242, !5229, !5243}
!5243 = !DILocation(line: 1538, column: 13, scope: !5230)
!5244 = !DILocation(line: 1541, column: 12, scope: !5213)
!5245 = !DILocation(line: 0, scope: !5213)
!5246 = !DILocation(line: 1541, column: 23, scope: !5212)
!5247 = !DILocation(line: 1541, column: 21, scope: !5212)
!5248 = !DILocation(line: 1541, column: 7, scope: !5213)
!5249 = !DILocation(line: 1543, column: 15, scope: !5211)
!5250 = !DILocation(line: 0, scope: !5211)
!5251 = !DILocation(line: 1546, column: 8, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 1546, column: 8)
!5253 = !DILocation(line: 1547, column: 8, scope: !5252)
!5254 = !DILocation(line: 1547, column: 11, scope: !5252)
!5255 = !DILocation(line: 1547, column: 27, scope: !5252)
!5256 = !DILocation(line: 1548, column: 8, scope: !5252)
!5257 = !DILocation(line: 1548, column: 11, scope: !5252)
!5258 = !DILocation(line: 1546, column: 8, scope: !5211)
!5259 = !DILocation(line: 1550, column: 2, scope: !5212)
!5260 = !DILocation(line: 1541, column: 56, scope: !5212)
!5261 = !DILocation(line: 1541, column: 7, scope: !5212)
!5262 = distinct !{!5262, !5248, !5263}
!5263 = !DILocation(line: 1550, column: 2, scope: !5213)
!5264 = !DILocation(line: 1554, column: 11, scope: !5208)
!5265 = !DILocation(line: 1555, column: 2, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1555, column: 2)
!5267 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1554, column: 11)
!5268 = !DILocation(line: 0, scope: !5266)
!5269 = !DILocation(line: 1555, column: 18, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 1555, column: 2)
!5271 = !DILocation(line: 1555, column: 16, scope: !5270)
!5272 = !DILocation(line: 1556, column: 12, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1556, column: 8)
!5274 = !DILocation(line: 1556, column: 8, scope: !5273)
!5275 = !DILocation(line: 1556, column: 8, scope: !5270)
!5276 = !DILocation(line: 1555, column: 51, scope: !5270)
!5277 = !DILocation(line: 1555, column: 2, scope: !5270)
!5278 = distinct !{!5278, !5265, !5279}
!5279 = !DILocation(line: 1557, column: 13, scope: !5266)
!5280 = !DILocation(line: 1561, column: 1, scope: !5197)
!5281 = distinct !DISubprogram(name: "ssa_undefined_value_p", scope: !3, file: !3, line: 1611, type: !5143, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5282)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "t", arg: 1, scope: !5281, file: !3, line: 1611, type: !660)
!5284 = !DILocalVariable(name: "var", scope: !5281, file: !3, line: 1613, type: !660)
!5285 = !DILocation(line: 0, scope: !5281)
!5286 = !DILocation(line: 1613, column: 14, scope: !5281)
!5287 = !DILocation(line: 1616, column: 7, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1616, column: 7)
!5289 = !DILocation(line: 1616, column: 23, scope: !5288)
!5290 = !DILocation(line: 1616, column: 7, scope: !5281)
!5291 = !DILocation(line: 1620, column: 23, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1620, column: 7)
!5293 = !DILocation(line: 1620, column: 35, scope: !5292)
!5294 = !DILocation(line: 1620, column: 38, scope: !5292)
!5295 = !DILocation(line: 1620, column: 7, scope: !5281)
!5296 = !DILocation(line: 1624, column: 24, scope: !5281)
!5297 = !DILocation(line: 1624, column: 10, scope: !5281)
!5298 = !DILocation(line: 1624, column: 3, scope: !5281)
!5299 = !DILocation(line: 1625, column: 1, scope: !5281)
!5300 = distinct !DISubprogram(name: "gate_warn_uninitialized", scope: !3, file: !3, line: 1862, type: !2040, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!5301 = !DILocation(line: 1864, column: 10, scope: !5300)
!5302 = !DILocation(line: 1864, column: 29, scope: !5300)
!5303 = !DILocation(line: 1864, column: 3, scope: !5300)
!5304 = distinct !DISubprogram(name: "execute_early_warn_uninitialized", scope: !3, file: !3, line: 1831, type: !2044, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!5305 = !DILocation(line: 1839, column: 61, scope: !5304)
!5306 = !DILocation(line: 1839, column: 60, scope: !5304)
!5307 = !DILocation(line: 1839, column: 3, scope: !5304)
!5308 = !DILocation(line: 1840, column: 3, scope: !5304)
!5309 = distinct !DISubprogram(name: "execute_late_warn_uninitialized", scope: !3, file: !3, line: 1844, type: !2044, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5310)
!5310 = !{!5311, !5312}
!5311 = !DILocalVariable(name: "bb", scope: !5309, file: !3, line: 1846, type: !1416)
!5312 = !DILocalVariable(name: "gsi", scope: !5309, file: !3, line: 1847, type: !2007)
!5313 = !DILocation(line: 1847, column: 3, scope: !5309)
!5314 = !DILocation(line: 1852, column: 3, scope: !5309)
!5315 = !DILocation(line: 1854, column: 3, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 1854, column: 3)
!5317 = !DILocation(line: 0, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1855, column: 5)
!5319 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 1854, column: 3)
!5320 = !DILocation(line: 1854, column: 3, scope: !5319)
!5321 = !DILocation(line: 0, scope: !5316)
!5322 = !DILocation(line: 0, scope: !5309)
!5323 = !DILocation(line: 1855, column: 16, scope: !5318)
!5324 = !DILocation(line: 1855, column: 10, scope: !5318)
!5325 = !DILocation(line: 1855, column: 38, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 1855, column: 5)
!5327 = !DILocation(line: 1855, column: 37, scope: !5326)
!5328 = !DILocation(line: 1855, column: 5, scope: !5318)
!5329 = !DILocation(line: 1856, column: 31, scope: !5326)
!5330 = !DILocation(line: 1856, column: 7, scope: !5326)
!5331 = !DILocation(line: 1855, column: 55, scope: !5326)
!5332 = !DILocation(line: 1855, column: 5, scope: !5326)
!5333 = distinct !{!5333, !5328, !5334}
!5334 = !DILocation(line: 1856, column: 45, scope: !5318)
!5335 = !DILocation(line: 0, scope: !5319)
!5336 = distinct !{!5336, !5315, !5337}
!5337 = !DILocation(line: 1856, column: 45, scope: !5316)
!5338 = !DILocation(line: 1859, column: 1, scope: !5309)
!5339 = !DILocation(line: 1858, column: 3, scope: !5309)
!5340 = distinct !DISubprogram(name: "execute_update_addresses_taken", scope: !3, file: !3, line: 1908, type: !3709, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5341)
!5341 = !{!5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5357, !5358, !5361, !5365, !5366, !5370, !5371}
!5342 = !DILocalVariable(name: "do_optimize", arg: 1, scope: !5340, file: !3, line: 1908, type: !634)
!5343 = !DILocalVariable(name: "var", scope: !5340, file: !3, line: 1910, type: !660)
!5344 = !DILocalVariable(name: "rvi", scope: !5340, file: !3, line: 1911, type: !4696)
!5345 = !DILocalVariable(name: "gsi", scope: !5340, file: !3, line: 1912, type: !2007)
!5346 = !DILocalVariable(name: "bb", scope: !5340, file: !3, line: 1913, type: !1416)
!5347 = !DILocalVariable(name: "addresses_taken", scope: !5340, file: !3, line: 1914, type: !1532)
!5348 = !DILocalVariable(name: "not_reg_needs", scope: !5340, file: !3, line: 1915, type: !1532)
!5349 = !DILocalVariable(name: "update_vops", scope: !5340, file: !3, line: 1916, type: !634)
!5350 = !DILocalVariable(name: "stmt", scope: !5351, file: !3, line: 1924, type: !984)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 1923, column: 2)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 1922, column: 7)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1922, column: 7)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1921, column: 5)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1920, column: 3)
!5356 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1920, column: 3)
!5357 = !DILocalVariable(name: "code", scope: !5351, file: !3, line: 1925, type: !567)
!5358 = !DILocalVariable(name: "lhs", scope: !5359, file: !3, line: 1934, type: !660)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 1933, column: 6)
!5360 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 1932, column: 8)
!5361 = !DILocalVariable(name: "i", scope: !5362, file: !3, line: 1953, type: !1129)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 1952, column: 2)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1951, column: 7)
!5364 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1951, column: 7)
!5365 = !DILocalVariable(name: "phi", scope: !5362, file: !3, line: 1954, type: !984)
!5366 = !DILocalVariable(name: "op", scope: !5367, file: !3, line: 1958, type: !660)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1957, column: 6)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1956, column: 4)
!5369 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1956, column: 4)
!5370 = !DILocalVariable(name: "var", scope: !5367, file: !3, line: 1958, type: !660)
!5371 = !DILocalVariable(name: "stmt", scope: !5372, file: !3, line: 2022, type: !984)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2021, column: 6)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2020, column: 4)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 2020, column: 4)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 2019, column: 7)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2019, column: 7)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 2018, column: 5)
!5378 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 2017, column: 7)
!5379 = !DILocation(line: 0, scope: !5340)
!5380 = !DILocation(line: 1911, column: 3, scope: !5340)
!5381 = !DILocation(line: 1912, column: 3, scope: !5340)
!5382 = !DILocation(line: 1914, column: 28, scope: !5340)
!5383 = !DILocation(line: 1915, column: 26, scope: !5340)
!5384 = !DILocation(line: 1920, column: 3, scope: !5356)
!5385 = !DILocation(line: 0, scope: !5353)
!5386 = !DILocation(line: 0, scope: !5364)
!5387 = !DILocation(line: 1920, column: 3, scope: !5355)
!5388 = !DILocation(line: 0, scope: !5356)
!5389 = !DILocation(line: 1922, column: 18, scope: !5353)
!5390 = !DILocation(line: 1922, column: 12, scope: !5353)
!5391 = !DILocation(line: 1922, column: 38, scope: !5352)
!5392 = !DILocation(line: 1922, column: 37, scope: !5352)
!5393 = !DILocation(line: 1922, column: 7, scope: !5353)
!5394 = !DILocation(line: 1924, column: 18, scope: !5351)
!5395 = !DILocation(line: 0, scope: !5351)
!5396 = !DILocation(line: 1925, column: 28, scope: !5351)
!5397 = !DILocation(line: 1928, column: 4, scope: !5351)
!5398 = !DILocation(line: 1932, column: 30, scope: !5360)
!5399 = !DILocation(line: 1934, column: 26, scope: !5359)
!5400 = !DILocation(line: 0, scope: !5359)
!5401 = !DILocation(line: 1937, column: 23, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 1937, column: 19)
!5403 = !DILocation(line: 1937, column: 26, scope: !5402)
!5404 = !DILocation(line: 1937, column: 42, scope: !5402)
!5405 = !DILocation(line: 1938, column: 19, scope: !5402)
!5406 = !DILocation(line: 1938, column: 22, scope: !5402)
!5407 = !DILocation(line: 1937, column: 19, scope: !5359)
!5408 = !DILocation(line: 1939, column: 48, scope: !5402)
!5409 = !DILocation(line: 1939, column: 17, scope: !5402)
!5410 = !DILocation(line: 1942, column: 31, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 1942, column: 24)
!5412 = !DILocation(line: 1942, column: 24, scope: !5402)
!5413 = !DILocation(line: 1944, column: 25, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 1943, column: 17)
!5415 = !DILocation(line: 1945, column: 23, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 1945, column: 23)
!5417 = !DILocation(line: 1945, column: 23, scope: !5414)
!5418 = !DILocation(line: 1946, column: 52, scope: !5416)
!5419 = !DILocation(line: 1946, column: 21, scope: !5416)
!5420 = !DILocation(line: 1922, column: 55, scope: !5352)
!5421 = !DILocation(line: 1922, column: 7, scope: !5352)
!5422 = distinct !{!5422, !5393, !5423}
!5423 = !DILocation(line: 1949, column: 2, scope: !5353)
!5424 = !DILocation(line: 1951, column: 18, scope: !5364)
!5425 = !DILocation(line: 1951, column: 12, scope: !5364)
!5426 = !DILocation(line: 1951, column: 40, scope: !5363)
!5427 = !DILocation(line: 1951, column: 39, scope: !5363)
!5428 = !DILocation(line: 1951, column: 7, scope: !5364)
!5429 = !DILocation(line: 1954, column: 17, scope: !5362)
!5430 = !DILocation(line: 0, scope: !5362)
!5431 = !DILocation(line: 1956, column: 9, scope: !5369)
!5432 = !DILocation(line: 0, scope: !5369)
!5433 = !DILocation(line: 1956, column: 20, scope: !5368)
!5434 = !DILocation(line: 1956, column: 18, scope: !5368)
!5435 = !DILocation(line: 1956, column: 4, scope: !5369)
!5436 = !DILocation(line: 1958, column: 18, scope: !5367)
!5437 = !DILocation(line: 0, scope: !5367)
!5438 = !DILocation(line: 1959, column: 12, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1959, column: 12)
!5440 = !DILocation(line: 1959, column: 27, scope: !5439)
!5441 = !DILocation(line: 1960, column: 5, scope: !5439)
!5442 = !DILocation(line: 1960, column: 33, scope: !5439)
!5443 = !DILocation(line: 1960, column: 15, scope: !5439)
!5444 = !DILocation(line: 1960, column: 56, scope: !5439)
!5445 = !DILocation(line: 1961, column: 5, scope: !5439)
!5446 = !DILocation(line: 1961, column: 8, scope: !5439)
!5447 = !DILocation(line: 1959, column: 12, scope: !5367)
!5448 = !DILocation(line: 1962, column: 36, scope: !5439)
!5449 = !DILocation(line: 1962, column: 3, scope: !5439)
!5450 = !DILocation(line: 1956, column: 48, scope: !5368)
!5451 = !DILocation(line: 1956, column: 4, scope: !5368)
!5452 = distinct !{!5452, !5435, !5453}
!5453 = !DILocation(line: 1963, column: 6, scope: !5369)
!5454 = !DILocation(line: 1951, column: 57, scope: !5363)
!5455 = !DILocation(line: 1951, column: 7, scope: !5363)
!5456 = distinct !{!5456, !5428, !5457}
!5457 = !DILocation(line: 1964, column: 2, scope: !5364)
!5458 = !DILocation(line: 0, scope: !5355)
!5459 = distinct !{!5459, !5384, !5460}
!5460 = !DILocation(line: 1965, column: 5, scope: !5356)
!5461 = !DILocation(line: 1969, column: 7, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1969, column: 7)
!5463 = !DILocation(line: 1969, column: 19, scope: !5462)
!5464 = !DILocation(line: 1969, column: 16, scope: !5462)
!5465 = !DILocation(line: 1970, column: 5, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 1970, column: 5)
!5467 = !DILocation(line: 1916, column: 8, scope: !5340)
!5468 = !DILocation(line: 0, scope: !5466)
!5469 = !DILocation(line: 1970, column: 5, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1970, column: 5)
!5471 = !DILocation(line: 1973, column: 6, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 1973, column: 6)
!5473 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1971, column: 7)
!5474 = !DILocation(line: 1974, column: 6, scope: !5472)
!5475 = !DILocation(line: 1974, column: 9, scope: !5472)
!5476 = !DILocation(line: 1974, column: 25, scope: !5472)
!5477 = !DILocation(line: 1975, column: 6, scope: !5472)
!5478 = !DILocation(line: 1975, column: 40, scope: !5472)
!5479 = !DILocation(line: 1975, column: 9, scope: !5472)
!5480 = !DILocation(line: 1973, column: 6, scope: !5473)
!5481 = !DILocation(line: 1978, column: 6, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 1978, column: 6)
!5483 = !DILocation(line: 1982, column: 6, scope: !5482)
!5484 = !DILocation(line: 1982, column: 31, scope: !5482)
!5485 = !DILocation(line: 1982, column: 11, scope: !5482)
!5486 = !DILocation(line: 1983, column: 3, scope: !5482)
!5487 = !DILocation(line: 1983, column: 36, scope: !5482)
!5488 = !DILocation(line: 1983, column: 7, scope: !5482)
!5489 = !DILocation(line: 1978, column: 6, scope: !5473)
!5490 = !DILocation(line: 1985, column: 29, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1984, column: 4)
!5492 = !DILocation(line: 1986, column: 10, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 1986, column: 10)
!5494 = !DILocation(line: 1986, column: 10, scope: !5491)
!5495 = !DILocation(line: 1987, column: 8, scope: !5493)
!5496 = !DILocation(line: 1989, column: 10, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 1989, column: 10)
!5498 = !DILocation(line: 1989, column: 10, scope: !5491)
!5499 = !DILocation(line: 1991, column: 3, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 1990, column: 8)
!5501 = !DILocation(line: 1992, column: 23, scope: !5500)
!5502 = !DILocation(line: 1992, column: 3, scope: !5500)
!5503 = !DILocation(line: 1993, column: 12, scope: !5500)
!5504 = !DILocation(line: 1993, column: 3, scope: !5500)
!5505 = !DILocation(line: 1994, column: 8, scope: !5500)
!5506 = !DILocation(line: 1996, column: 7, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 1996, column: 6)
!5508 = !DILocation(line: 1997, column: 6, scope: !5507)
!5509 = !DILocation(line: 1997, column: 39, scope: !5507)
!5510 = !DILocation(line: 1997, column: 10, scope: !5507)
!5511 = !DILocation(line: 1998, column: 6, scope: !5507)
!5512 = !DILocation(line: 1998, column: 10, scope: !5507)
!5513 = !DILocation(line: 1998, column: 38, scope: !5507)
!5514 = !DILocation(line: 1999, column: 3, scope: !5507)
!5515 = !DILocation(line: 1999, column: 34, scope: !5507)
!5516 = !DILocation(line: 2000, column: 6, scope: !5507)
!5517 = !DILocation(line: 2000, column: 10, scope: !5507)
!5518 = !DILocation(line: 2001, column: 6, scope: !5507)
!5519 = !DILocation(line: 2001, column: 26, scope: !5507)
!5520 = !DILocation(line: 2001, column: 38, scope: !5507)
!5521 = !DILocation(line: 2001, column: 42, scope: !5507)
!5522 = !DILocation(line: 1996, column: 6, scope: !5473)
!5523 = !DILocation(line: 2003, column: 30, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 2002, column: 4)
!5525 = !DILocation(line: 2004, column: 6, scope: !5524)
!5526 = !DILocation(line: 2006, column: 10, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 2006, column: 10)
!5528 = !DILocation(line: 2006, column: 10, scope: !5524)
!5529 = !DILocation(line: 2008, column: 3, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2007, column: 8)
!5531 = !DILocation(line: 2009, column: 23, scope: !5530)
!5532 = !DILocation(line: 2009, column: 3, scope: !5530)
!5533 = !DILocation(line: 2010, column: 12, scope: !5530)
!5534 = !DILocation(line: 2010, column: 3, scope: !5530)
!5535 = !DILocation(line: 2011, column: 8, scope: !5530)
!5536 = distinct !{!5536, !5465, !5537}
!5537 = !DILocation(line: 2013, column: 7, scope: !5466)
!5538 = !DILocation(line: 2017, column: 7, scope: !5378)
!5539 = !DILocation(line: 2017, column: 7, scope: !5340)
!5540 = !DILocation(line: 2019, column: 7, scope: !5376)
!5541 = !DILocation(line: 0, scope: !5374)
!5542 = !DILocation(line: 2019, column: 7, scope: !5375)
!5543 = !DILocation(line: 0, scope: !5376)
!5544 = !DILocation(line: 2020, column: 15, scope: !5374)
!5545 = !DILocation(line: 2020, column: 9, scope: !5374)
!5546 = !DILocation(line: 2020, column: 35, scope: !5373)
!5547 = !DILocation(line: 2020, column: 34, scope: !5373)
!5548 = !DILocation(line: 2020, column: 4, scope: !5374)
!5549 = !DILocation(line: 2022, column: 22, scope: !5372)
!5550 = !DILocation(line: 0, scope: !5372)
!5551 = !DILocation(line: 2024, column: 12, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 2024, column: 12)
!5553 = !DILocation(line: 2025, column: 5, scope: !5552)
!5554 = !DILocation(line: 2025, column: 8, scope: !5552)
!5555 = !DILocation(line: 2024, column: 12, scope: !5372)
!5556 = !DILocation(line: 2026, column: 3, scope: !5552)
!5557 = !DILocation(line: 2020, column: 52, scope: !5373)
!5558 = !DILocation(line: 2020, column: 4, scope: !5373)
!5559 = distinct !{!5559, !5548, !5560}
!5560 = !DILocation(line: 2027, column: 6, scope: !5374)
!5561 = !DILocation(line: 0, scope: !5375)
!5562 = distinct !{!5562, !5540, !5563}
!5563 = !DILocation(line: 2027, column: 6, scope: !5376)
!5564 = !DILocation(line: 2030, column: 7, scope: !5377)
!5565 = !DILocation(line: 2031, column: 5, scope: !5377)
!5566 = !DILocation(line: 2033, column: 3, scope: !5340)
!5567 = !DILocation(line: 2034, column: 3, scope: !5340)
!5568 = !DILocation(line: 2035, column: 1, scope: !5340)
!5569 = distinct !DISubprogram(name: "handled_component_p", scope: !151, file: !151, line: 4551, type: !4801, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5570)
!5570 = !{!5571}
!5571 = !DILocalVariable(name: "t", arg: 1, scope: !5569, file: !151, line: 4551, type: !1998)
!5572 = !DILocation(line: 0, scope: !5569)
!5573 = !DILocation(line: 4553, column: 11, scope: !5569)
!5574 = !DILocation(line: 4553, column: 3, scope: !5569)
!5575 = !DILocation(line: 4565, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5569, file: !151, line: 4554, column: 5)
!5577 = !DILocation(line: 0, scope: !5576)
!5578 = !DILocation(line: 4567, column: 1, scope: !5569)
!5579 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !568, file: !568, line: 3061, type: !5580, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5582)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!7, !2796}
!5582 = !{!5583}
!5583 = !DILocalVariable(name: "gs", arg: 1, scope: !5579, file: !568, line: 3061, type: !2796)
!5584 = !DILocation(line: 0, scope: !5579)
!5585 = !DILocation(line: 3064, column: 25, scope: !5579)
!5586 = !DILocation(line: 3064, column: 3, scope: !5579)
!5587 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2768, file: !2768, line: 442, type: !5588, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5590)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!1989, !984, !635}
!5590 = !{!5591, !5592}
!5591 = !DILocalVariable(name: "gs", arg: 1, scope: !5587, file: !2768, line: 442, type: !984)
!5592 = !DILocalVariable(name: "i", arg: 2, scope: !5587, file: !2768, line: 442, type: !635)
!5593 = !DILocation(line: 0, scope: !5587)
!5594 = !DILocation(line: 444, column: 11, scope: !5587)
!5595 = !DILocation(line: 444, column: 35, scope: !5587)
!5596 = !DILocation(line: 444, column: 3, scope: !5587)
!5597 = distinct !DISubprogram(name: "gimple_references_memory_p", scope: !568, file: !568, line: 1499, type: !4291, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5598)
!5598 = !{!5599}
!5599 = !DILocalVariable(name: "stmt", arg: 1, scope: !5597, file: !568, line: 1499, type: !984)
!5600 = !DILocation(line: 0, scope: !5597)
!5601 = !DILocation(line: 1501, column: 10, scope: !5597)
!5602 = !DILocation(line: 1501, column: 36, scope: !5597)
!5603 = !DILocation(line: 1501, column: 39, scope: !5597)
!5604 = !DILocation(line: 1501, column: 3, scope: !5597)
!5605 = distinct !DISubprogram(name: "VEC_edge_var_map_heap_reserve", scope: !643, file: !643, line: 560, type: !5606, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!635, !2573, !635}
!5608 = !{!5609, !5610, !5611}
!5609 = !DILocalVariable(name: "vec_", arg: 1, scope: !5605, file: !643, line: 560, type: !2573)
!5610 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5605, file: !643, line: 560, type: !635)
!5611 = !DILocalVariable(name: "extend", scope: !5605, file: !643, line: 560, type: !635)
!5612 = !DILocation(line: 0, scope: !5605)
!5613 = !DILocation(line: 560, column: 1, scope: !5605)
!5614 = !DILocation(line: 560, column: 1, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5605, file: !643, line: 560, column: 1)
!5616 = distinct !DISubprogram(name: "VEC_edge_var_map_base_quick_push", scope: !643, file: !643, line: 559, type: !5617, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5619)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!2572, !2648, !2574}
!5619 = !{!5620, !5621, !5622}
!5620 = !DILocalVariable(name: "vec_", arg: 1, scope: !5616, file: !643, line: 559, type: !2648)
!5621 = !DILocalVariable(name: "obj_", arg: 2, scope: !5616, file: !643, line: 559, type: !2574)
!5622 = !DILocalVariable(name: "slot_", scope: !5616, file: !643, line: 559, type: !2572)
!5623 = !DILocation(line: 0, scope: !5616)
!5624 = !DILocation(line: 559, column: 1, scope: !5616)
!5625 = !DILocation(line: 559, column: 1, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5616, file: !643, line: 559, column: 1)
!5627 = distinct !DISubprogram(name: "VEC_edge_var_map_base_space", scope: !643, file: !643, line: 559, type: !5628, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5630)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!635, !2648, !635}
!5630 = !{!5631, !5632}
!5631 = !DILocalVariable(name: "vec_", arg: 1, scope: !5627, file: !643, line: 559, type: !2648)
!5632 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5627, file: !643, line: 559, type: !635)
!5633 = !DILocation(line: 0, scope: !5627)
!5634 = !DILocation(line: 559, column: 1, scope: !5627)
!5635 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !568, file: !568, line: 3100, type: !5636, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5638)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!2775, !984, !7}
!5638 = !{!5639, !5640}
!5639 = !DILocalVariable(name: "gs", arg: 1, scope: !5635, file: !568, line: 3100, type: !984)
!5640 = !DILocalVariable(name: "index", arg: 2, scope: !5635, file: !568, line: 3100, type: !7)
!5641 = !DILocation(line: 0, scope: !5635)
!5642 = !DILocation(line: 3103, column: 3, scope: !5635)
!5643 = !DILocation(line: 3104, column: 12, scope: !5635)
!5644 = !DILocation(line: 3104, column: 3, scope: !5635)
!5645 = distinct !DISubprogram(name: "gimple_op", scope: !568, file: !568, line: 1631, type: !5646, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5648)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!660, !2796, !7}
!5648 = !{!5649, !5650}
!5649 = !DILocalVariable(name: "gs", arg: 1, scope: !5645, file: !568, line: 1631, type: !2796)
!5650 = !DILocalVariable(name: "i", arg: 2, scope: !5645, file: !568, line: 1631, type: !7)
!5651 = !DILocation(line: 0, scope: !5645)
!5652 = !DILocation(line: 1633, column: 7, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5645, file: !568, line: 1633, column: 7)
!5654 = !DILocation(line: 1633, column: 7, scope: !5645)
!5655 = !DILocation(line: 1638, column: 14, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !568, line: 1634, column: 5)
!5657 = !DILocation(line: 1638, column: 7, scope: !5656)
!5658 = !DILocation(line: 0, scope: !5653)
!5659 = !DILocation(line: 1642, column: 1, scope: !5645)
!5660 = distinct !DISubprogram(name: "gimple_has_ops", scope: !568, file: !568, line: 1274, type: !3130, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5661 = !{!5662}
!5662 = !DILocalVariable(name: "g", arg: 1, scope: !5660, file: !568, line: 1274, type: !2796)
!5663 = !DILocation(line: 0, scope: !5660)
!5664 = !DILocation(line: 1276, column: 10, scope: !5660)
!5665 = !DILocation(line: 1276, column: 26, scope: !5660)
!5666 = !DILocation(line: 1276, column: 41, scope: !5660)
!5667 = !DILocation(line: 1276, column: 44, scope: !5660)
!5668 = !DILocation(line: 1276, column: 60, scope: !5660)
!5669 = !DILocation(line: 1276, column: 3, scope: !5660)
!5670 = distinct !DISubprogram(name: "gimple_ops", scope: !568, file: !568, line: 1614, type: !5671, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!1018, !984}
!5673 = !{!5674, !5675}
!5674 = !DILocalVariable(name: "gs", arg: 1, scope: !5670, file: !568, line: 1614, type: !984)
!5675 = !DILocalVariable(name: "off", scope: !5670, file: !568, line: 1616, type: !1129)
!5676 = !DILocation(line: 0, scope: !5670)
!5677 = !DILocation(line: 1621, column: 28, scope: !5670)
!5678 = !DILocation(line: 1621, column: 9, scope: !5670)
!5679 = !DILocation(line: 1622, column: 3, scope: !5670)
!5680 = !DILocation(line: 1624, column: 20, scope: !5670)
!5681 = !DILocation(line: 1624, column: 32, scope: !5670)
!5682 = !DILocation(line: 1624, column: 10, scope: !5670)
!5683 = !DILocation(line: 1624, column: 3, scope: !5670)
!5684 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !568, file: !568, line: 1073, type: !5685, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5687)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!606, !984}
!5687 = !{!5688}
!5688 = !DILocalVariable(name: "gs", arg: 1, scope: !5684, file: !568, line: 1073, type: !984)
!5689 = !DILocation(line: 0, scope: !5684)
!5690 = !DILocation(line: 1075, column: 24, scope: !5684)
!5691 = !DILocation(line: 1075, column: 10, scope: !5684)
!5692 = !DILocation(line: 1075, column: 3, scope: !5684)
!5693 = distinct !DISubprogram(name: "gss_for_code", scope: !568, file: !568, line: 1061, type: !5694, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5696)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{!606, !567}
!5696 = !{!5697}
!5697 = !DILocalVariable(name: "code", arg: 1, scope: !5693, file: !568, line: 1061, type: !567)
!5698 = !DILocation(line: 0, scope: !5693)
!5699 = !DILocation(line: 1066, column: 10, scope: !5693)
!5700 = !DILocation(line: 1066, column: 3, scope: !5693)
!5701 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !2768, file: !2768, line: 1018, type: !5702, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{null, !1989, !3100}
!5704 = !{!5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712}
!5705 = !DILocalVariable(name: "head", arg: 1, scope: !5701, file: !2768, line: 1018, type: !1989)
!5706 = !DILocalVariable(name: "imm", arg: 2, scope: !5701, file: !2768, line: 1018, type: !3100)
!5707 = !DILocalVariable(name: "use_p", scope: !5701, file: !2768, line: 1020, type: !1989)
!5708 = !DILocalVariable(name: "last_p", scope: !5701, file: !2768, line: 1021, type: !1989)
!5709 = !DILocalVariable(name: "head_stmt", scope: !5701, file: !2768, line: 1022, type: !984)
!5710 = !DILocalVariable(name: "use", scope: !5701, file: !2768, line: 1023, type: !660)
!5711 = !DILocalVariable(name: "op_iter", scope: !5701, file: !2768, line: 1024, type: !3356)
!5712 = !DILocalVariable(name: "flag", scope: !5701, file: !2768, line: 1025, type: !635)
!5713 = !DILocation(line: 0, scope: !5701)
!5714 = !DILocation(line: 1022, column: 22, scope: !5701)
!5715 = !DILocation(line: 1023, column: 14, scope: !5701)
!5716 = !DILocation(line: 1024, column: 3, scope: !5701)
!5717 = !DILocation(line: 1028, column: 11, scope: !5701)
!5718 = !DILocation(line: 1030, column: 7, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5701, file: !2768, line: 1030, column: 7)
!5720 = !DILocation(line: 1030, column: 31, scope: !5719)
!5721 = !DILocation(line: 1030, column: 7, scope: !5701)
!5722 = !DILocation(line: 1032, column: 7, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !2768, line: 1032, column: 7)
!5724 = distinct !DILexicalBlock(scope: !5719, file: !2768, line: 1031, column: 5)
!5725 = !DILocation(line: 0, scope: !5723)
!5726 = !DILocation(line: 1032, column: 7, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5723, file: !2768, line: 1032, column: 7)
!5728 = !DILocation(line: 1033, column: 6, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5727, file: !2768, line: 1033, column: 6)
!5730 = !DILocation(line: 1033, column: 27, scope: !5729)
!5731 = !DILocation(line: 1033, column: 6, scope: !5727)
!5732 = !DILocation(line: 1034, column: 13, scope: !5729)
!5733 = !DILocation(line: 1034, column: 4, scope: !5729)
!5734 = distinct !{!5734, !5722, !5735}
!5735 = !DILocation(line: 1034, column: 53, scope: !5723)
!5736 = !DILocation(line: 1038, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5719, file: !2768, line: 1037, column: 5)
!5738 = !DILocation(line: 1040, column: 4, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !2768, line: 1040, column: 4)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !2768, line: 1039, column: 2)
!5741 = distinct !DILexicalBlock(scope: !5737, file: !2768, line: 1038, column: 11)
!5742 = !DILocation(line: 0, scope: !5739)
!5743 = !DILocation(line: 1040, column: 4, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5739, file: !2768, line: 1040, column: 4)
!5745 = !DILocation(line: 1041, column: 10, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5744, file: !2768, line: 1041, column: 10)
!5747 = !DILocation(line: 1041, column: 31, scope: !5746)
!5748 = !DILocation(line: 1041, column: 10, scope: !5744)
!5749 = !DILocation(line: 1042, column: 17, scope: !5746)
!5750 = !DILocation(line: 1042, column: 8, scope: !5746)
!5751 = distinct !{!5751, !5738, !5752}
!5752 = !DILocation(line: 1042, column: 57, scope: !5739)
!5753 = !DILocation(line: 1044, column: 25, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5741, file: !2768, line: 1044, column: 16)
!5755 = !DILocation(line: 1044, column: 53, scope: !5754)
!5756 = !DILocation(line: 1044, column: 16, scope: !5741)
!5757 = !DILocation(line: 1046, column: 8, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !2768, line: 1046, column: 8)
!5759 = distinct !DILexicalBlock(scope: !5754, file: !2768, line: 1045, column: 2)
!5760 = !DILocation(line: 1046, column: 29, scope: !5758)
!5761 = !DILocation(line: 1046, column: 8, scope: !5759)
!5762 = !DILocation(line: 1047, column: 15, scope: !5758)
!5763 = !DILocation(line: 1047, column: 6, scope: !5758)
!5764 = !DILocation(line: 1051, column: 22, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5701, file: !2768, line: 1051, column: 7)
!5766 = !DILocation(line: 1021, column: 17, scope: !5701)
!5767 = !DILocation(line: 1051, column: 27, scope: !5765)
!5768 = !DILocation(line: 1051, column: 7, scope: !5701)
!5769 = !DILocation(line: 1052, column: 27, scope: !5765)
!5770 = !DILocation(line: 1052, column: 5, scope: !5765)
!5771 = !DILocation(line: 1053, column: 32, scope: !5701)
!5772 = !DILocation(line: 1053, column: 3, scope: !5701)
!5773 = !DILocation(line: 1054, column: 1, scope: !5701)
!5774 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !2768, file: !2768, line: 910, type: !4457, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5775)
!5775 = !{!5776, !5777, !5778, !5779, !5780}
!5776 = !DILocalVariable(name: "ptr", arg: 1, scope: !5774, file: !2768, line: 910, type: !3396)
!5777 = !DILocalVariable(name: "phi", arg: 2, scope: !5774, file: !2768, line: 910, type: !984)
!5778 = !DILocalVariable(name: "flags", arg: 3, scope: !5774, file: !2768, line: 910, type: !635)
!5779 = !DILocalVariable(name: "phi_def", scope: !5774, file: !2768, line: 912, type: !660)
!5780 = !DILocalVariable(name: "comp", scope: !5774, file: !2768, line: 913, type: !635)
!5781 = !DILocation(line: 0, scope: !5774)
!5782 = !DILocation(line: 912, column: 18, scope: !5774)
!5783 = !DILocation(line: 915, column: 3, scope: !5774)
!5784 = !DILocation(line: 916, column: 8, scope: !5774)
!5785 = !DILocation(line: 916, column: 13, scope: !5774)
!5786 = !DILocation(line: 918, column: 3, scope: !5774)
!5787 = !DILocation(line: 920, column: 11, scope: !5774)
!5788 = !DILocation(line: 923, column: 14, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5774, file: !2768, line: 923, column: 7)
!5790 = !DILocation(line: 923, column: 22, scope: !5789)
!5791 = !DILocation(line: 923, column: 7, scope: !5774)
!5792 = !DILocation(line: 925, column: 17, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !2768, line: 924, column: 5)
!5794 = !DILocation(line: 926, column: 7, scope: !5793)
!5795 = !DILocation(line: 929, column: 8, scope: !5774)
!5796 = !DILocation(line: 929, column: 17, scope: !5774)
!5797 = !DILocation(line: 930, column: 18, scope: !5774)
!5798 = !DILocation(line: 930, column: 8, scope: !5774)
!5799 = !DILocation(line: 930, column: 16, scope: !5774)
!5800 = !DILocation(line: 931, column: 8, scope: !5774)
!5801 = !DILocation(line: 931, column: 18, scope: !5774)
!5802 = !DILocation(line: 932, column: 10, scope: !5774)
!5803 = !DILocation(line: 932, column: 3, scope: !5774)
!5804 = !DILocation(line: 933, column: 1, scope: !5774)
!5805 = distinct !DISubprogram(name: "move_use_after_head", scope: !2768, file: !2768, line: 990, type: !5806, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5808)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!1989, !1989, !1989, !1989}
!5808 = !{!5809, !5810, !5811}
!5809 = !DILocalVariable(name: "use_p", arg: 1, scope: !5805, file: !2768, line: 990, type: !1989)
!5810 = !DILocalVariable(name: "head", arg: 2, scope: !5805, file: !2768, line: 990, type: !1989)
!5811 = !DILocalVariable(name: "last_p", arg: 3, scope: !5805, file: !2768, line: 991, type: !1989)
!5812 = !DILocation(line: 0, scope: !5805)
!5813 = !DILocation(line: 997, column: 13, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5805, file: !2768, line: 997, column: 7)
!5815 = !DILocation(line: 997, column: 7, scope: !5805)
!5816 = !DILocation(line: 1000, column: 19, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !2768, line: 1000, column: 11)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !2768, line: 998, column: 5)
!5819 = !DILocation(line: 1000, column: 24, scope: !5817)
!5820 = !DILocation(line: 1000, column: 11, scope: !5818)
!5821 = !DILocation(line: 1005, column: 4, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5817, file: !2768, line: 1003, column: 2)
!5823 = !DILocation(line: 1006, column: 4, scope: !5822)
!5824 = !DILocation(line: 1010, column: 3, scope: !5805)
!5825 = distinct !DISubprogram(name: "delink_imm_use", scope: !2768, file: !2768, line: 188, type: !5826, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5828)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !1990}
!5828 = !{!5829}
!5829 = !DILocalVariable(name: "linknode", arg: 1, scope: !5825, file: !2768, line: 188, type: !1990)
!5830 = !DILocation(line: 0, scope: !5825)
!5831 = !DILocation(line: 191, column: 17, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5825, file: !2768, line: 191, column: 7)
!5833 = !DILocation(line: 191, column: 22, scope: !5832)
!5834 = !DILocation(line: 191, column: 7, scope: !5825)
!5835 = !DILocation(line: 194, column: 36, scope: !5825)
!5836 = !DILocation(line: 194, column: 19, scope: !5825)
!5837 = !DILocation(line: 194, column: 24, scope: !5825)
!5838 = !DILocation(line: 195, column: 36, scope: !5825)
!5839 = !DILocation(line: 195, column: 13, scope: !5825)
!5840 = !DILocation(line: 195, column: 24, scope: !5825)
!5841 = !DILocation(line: 196, column: 18, scope: !5825)
!5842 = !DILocation(line: 197, column: 18, scope: !5825)
!5843 = !DILocation(line: 198, column: 1, scope: !5825)
!5844 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !2768, file: !2768, line: 202, type: !5845, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5847)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !1990, !1990}
!5847 = !{!5848, !5849}
!5848 = !DILocalVariable(name: "linknode", arg: 1, scope: !5844, file: !2768, line: 202, type: !1990)
!5849 = !DILocalVariable(name: "list", arg: 2, scope: !5844, file: !2768, line: 202, type: !1990)
!5850 = !DILocation(line: 0, scope: !5844)
!5851 = !DILocation(line: 206, column: 13, scope: !5844)
!5852 = !DILocation(line: 206, column: 18, scope: !5844)
!5853 = !DILocation(line: 207, column: 26, scope: !5844)
!5854 = !DILocation(line: 207, column: 13, scope: !5844)
!5855 = !DILocation(line: 207, column: 18, scope: !5844)
!5856 = !DILocation(line: 208, column: 9, scope: !5844)
!5857 = !DILocation(line: 208, column: 15, scope: !5844)
!5858 = !DILocation(line: 208, column: 20, scope: !5844)
!5859 = !DILocation(line: 209, column: 14, scope: !5844)
!5860 = !DILocation(line: 210, column: 1, scope: !5844)
!5861 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !2768, file: !2768, line: 729, type: !5862, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5864)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{null, !3396}
!5864 = !{!5865}
!5865 = !DILocalVariable(name: "ptr", arg: 1, scope: !5861, file: !2768, line: 729, type: !3396)
!5866 = !DILocation(line: 0, scope: !5861)
!5867 = !DILocation(line: 731, column: 8, scope: !5861)
!5868 = !DILocation(line: 731, column: 13, scope: !5861)
!5869 = !DILocation(line: 732, column: 8, scope: !5861)
!5870 = !DILocation(line: 732, column: 13, scope: !5861)
!5871 = !DILocation(line: 733, column: 8, scope: !5861)
!5872 = !DILocation(line: 733, column: 18, scope: !5861)
!5873 = !DILocation(line: 734, column: 8, scope: !5861)
!5874 = !DILocation(line: 734, column: 14, scope: !5861)
!5875 = !DILocation(line: 735, column: 8, scope: !5861)
!5876 = !DILocation(line: 735, column: 16, scope: !5861)
!5877 = !DILocation(line: 736, column: 8, scope: !5861)
!5878 = !DILocation(line: 736, column: 17, scope: !5861)
!5879 = !DILocation(line: 737, column: 8, scope: !5861)
!5880 = !DILocation(line: 737, column: 13, scope: !5861)
!5881 = !DILocation(line: 738, column: 1, scope: !5861)
!5882 = distinct !DISubprogram(name: "link_imm_use", scope: !2768, file: !2768, line: 214, type: !5883, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5885)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !1990, !660}
!5885 = !{!5886, !5887, !5888}
!5886 = !DILocalVariable(name: "linknode", arg: 1, scope: !5882, file: !2768, line: 214, type: !1990)
!5887 = !DILocalVariable(name: "def", arg: 2, scope: !5882, file: !2768, line: 214, type: !660)
!5888 = !DILocalVariable(name: "root", scope: !5882, file: !2768, line: 216, type: !1990)
!5889 = !DILocation(line: 0, scope: !5882)
!5890 = !DILocation(line: 218, column: 8, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5882, file: !2768, line: 218, column: 7)
!5892 = !DILocation(line: 218, column: 12, scope: !5891)
!5893 = !DILocation(line: 218, column: 15, scope: !5891)
!5894 = !DILocation(line: 218, column: 31, scope: !5891)
!5895 = !DILocation(line: 218, column: 7, scope: !5882)
!5896 = !DILocation(line: 219, column: 15, scope: !5891)
!5897 = !DILocation(line: 219, column: 20, scope: !5891)
!5898 = !DILocation(line: 219, column: 5, scope: !5891)
!5899 = !DILocation(line: 222, column: 16, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5891, file: !2768, line: 221, column: 5)
!5901 = !DILocation(line: 227, column: 7, scope: !5900)
!5902 = !DILocation(line: 229, column: 1, scope: !5882)
!5903 = distinct !DISubprogram(name: "gimple_set_op", scope: !568, file: !568, line: 1663, type: !5904, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5906)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{null, !984, !7, !660}
!5906 = !{!5907, !5908, !5909}
!5907 = !DILocalVariable(name: "gs", arg: 1, scope: !5903, file: !568, line: 1663, type: !984)
!5908 = !DILocalVariable(name: "i", arg: 2, scope: !5903, file: !568, line: 1663, type: !7)
!5909 = !DILocalVariable(name: "op", arg: 3, scope: !5903, file: !568, line: 1663, type: !660)
!5910 = !DILocation(line: 0, scope: !5903)
!5911 = !DILocation(line: 1665, column: 3, scope: !5903)
!5912 = !DILocation(line: 1671, column: 3, scope: !5903)
!5913 = !DILocation(line: 1671, column: 22, scope: !5903)
!5914 = !DILocation(line: 1672, column: 1, scope: !5903)
!5915 = distinct !DISubprogram(name: "gimple_num_ops", scope: !568, file: !568, line: 1596, type: !5580, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5916)
!5916 = !{!5917}
!5917 = !DILocalVariable(name: "gs", arg: 1, scope: !5915, file: !568, line: 1596, type: !2796)
!5918 = !DILocation(line: 0, scope: !5915)
!5919 = !DILocation(line: 1598, column: 21, scope: !5915)
!5920 = !DILocation(line: 1598, column: 3, scope: !5915)
!5921 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !568, file: !568, line: 3080, type: !5671, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5922)
!5922 = !{!5923}
!5923 = !DILocalVariable(name: "gs", arg: 1, scope: !5921, file: !568, line: 3080, type: !984)
!5924 = !DILocation(line: 0, scope: !5921)
!5925 = !DILocation(line: 3083, column: 26, scope: !5921)
!5926 = !DILocation(line: 3083, column: 3, scope: !5921)
!5927 = distinct !DISubprogram(name: "op_iter_init", scope: !2768, file: !2768, line: 742, type: !5928, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5930)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{null, !3396, !984, !635}
!5930 = !{!5931, !5932, !5933}
!5931 = !DILocalVariable(name: "ptr", arg: 1, scope: !5927, file: !2768, line: 742, type: !3396)
!5932 = !DILocalVariable(name: "stmt", arg: 2, scope: !5927, file: !2768, line: 742, type: !984)
!5933 = !DILocalVariable(name: "flags", arg: 3, scope: !5927, file: !2768, line: 742, type: !635)
!5934 = !DILocation(line: 0, scope: !5927)
!5935 = !DILocation(line: 746, column: 3, scope: !5927)
!5936 = !DILocation(line: 748, column: 22, scope: !5927)
!5937 = !DILocation(line: 748, column: 15, scope: !5927)
!5938 = !DILocation(line: 748, column: 52, scope: !5927)
!5939 = !DILocation(line: 748, column: 8, scope: !5927)
!5940 = !DILocation(line: 748, column: 13, scope: !5927)
!5941 = !DILocation(line: 749, column: 15, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5927, file: !2768, line: 749, column: 7)
!5943 = !DILocation(line: 750, column: 7, scope: !5942)
!5944 = !DILocation(line: 750, column: 10, scope: !5942)
!5945 = !DILocation(line: 751, column: 7, scope: !5942)
!5946 = !DILocation(line: 751, column: 10, scope: !5942)
!5947 = !DILocation(line: 751, column: 29, scope: !5942)
!5948 = !DILocation(line: 749, column: 7, scope: !5927)
!5949 = !DILocation(line: 752, column: 22, scope: !5942)
!5950 = !DILocation(line: 752, column: 28, scope: !5942)
!5951 = !DILocation(line: 752, column: 15, scope: !5942)
!5952 = !DILocation(line: 752, column: 5, scope: !5942)
!5953 = !DILocation(line: 753, column: 22, scope: !5927)
!5954 = !DILocation(line: 753, column: 15, scope: !5927)
!5955 = !DILocation(line: 753, column: 52, scope: !5927)
!5956 = !DILocation(line: 753, column: 8, scope: !5927)
!5957 = !DILocation(line: 753, column: 13, scope: !5927)
!5958 = !DILocation(line: 754, column: 15, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5927, file: !2768, line: 754, column: 7)
!5960 = !DILocation(line: 755, column: 7, scope: !5959)
!5961 = !DILocation(line: 755, column: 10, scope: !5959)
!5962 = !DILocation(line: 756, column: 7, scope: !5959)
!5963 = !DILocation(line: 756, column: 10, scope: !5959)
!5964 = !DILocation(line: 756, column: 29, scope: !5959)
!5965 = !DILocation(line: 754, column: 7, scope: !5927)
!5966 = !DILocation(line: 757, column: 22, scope: !5959)
!5967 = !DILocation(line: 757, column: 28, scope: !5959)
!5968 = !DILocation(line: 757, column: 15, scope: !5959)
!5969 = !DILocation(line: 757, column: 5, scope: !5959)
!5970 = !DILocation(line: 758, column: 8, scope: !5927)
!5971 = !DILocation(line: 758, column: 13, scope: !5927)
!5972 = !DILocation(line: 760, column: 8, scope: !5927)
!5973 = !DILocation(line: 760, column: 14, scope: !5927)
!5974 = !DILocation(line: 761, column: 8, scope: !5927)
!5975 = !DILocation(line: 761, column: 16, scope: !5927)
!5976 = !DILocation(line: 762, column: 8, scope: !5927)
!5977 = !DILocation(line: 762, column: 17, scope: !5927)
!5978 = !DILocation(line: 763, column: 1, scope: !5927)
!5979 = distinct !DISubprogram(name: "gimple_def_ops", scope: !568, file: !568, line: 1292, type: !5980, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5982)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!1013, !2796}
!5982 = !{!5983}
!5983 = !DILocalVariable(name: "g", arg: 1, scope: !5979, file: !568, line: 1292, type: !2796)
!5984 = !DILocation(line: 0, scope: !5979)
!5985 = !DILocation(line: 1294, column: 8, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5979, file: !568, line: 1294, column: 7)
!5987 = !DILocation(line: 1294, column: 7, scope: !5979)
!5988 = !DILocation(line: 1296, column: 26, scope: !5979)
!5989 = !DILocation(line: 1296, column: 3, scope: !5979)
!5990 = !DILocation(line: 1297, column: 1, scope: !5979)
!5991 = distinct !DISubprogram(name: "gimple_use_ops", scope: !568, file: !568, line: 1313, type: !5992, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!1020, !2796}
!5994 = !{!5995}
!5995 = !DILocalVariable(name: "g", arg: 1, scope: !5991, file: !568, line: 1313, type: !2796)
!5996 = !DILocation(line: 0, scope: !5991)
!5997 = !DILocation(line: 1315, column: 8, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5991, file: !568, line: 1315, column: 7)
!5999 = !DILocation(line: 1315, column: 7, scope: !5991)
!6000 = !DILocation(line: 1317, column: 26, scope: !5991)
!6001 = !DILocation(line: 1317, column: 3, scope: !5991)
!6002 = !DILocation(line: 1318, column: 1, scope: !5991)
!6003 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !6004, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!634, !3736}
!6006 = !{!6007}
!6007 = !DILocalVariable(name: "i", arg: 1, scope: !6003, file: !135, line: 721, type: !3736)
!6008 = !DILocation(line: 723, column: 22, scope: !6003)
!6009 = !DILocation(line: 723, column: 19, scope: !6003)
!6010 = !DILocation(line: 723, column: 10, scope: !6003)
!6011 = !DILocation(line: 723, column: 3, scope: !6003)
!6012 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !6013, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!964, !3736}
!6015 = !{!6016}
!6016 = !DILocalVariable(name: "i", arg: 1, scope: !6012, file: !135, line: 752, type: !3736)
!6017 = !DILocation(line: 754, column: 10, scope: !6012)
!6018 = !DILocation(line: 754, column: 3, scope: !6012)
!6019 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !6020, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6024)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!7, !6022}
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!6024 = !{!6025}
!6025 = !DILocalVariable(name: "vec_", arg: 1, scope: !6019, file: !135, line: 150, type: !6022)
!6026 = !DILocation(line: 0, scope: !6019)
!6027 = !DILocation(line: 150, column: 1, scope: !6019)
!6028 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !6029, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6031)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!952, !3736}
!6031 = !{!6032}
!6032 = !DILocalVariable(name: "i", arg: 1, scope: !6028, file: !135, line: 685, type: !3736)
!6033 = !DILocation(line: 687, column: 3, scope: !6028)
!6034 = !DILocation(line: 688, column: 10, scope: !6028)
!6035 = !DILocation(line: 688, column: 3, scope: !6028)
!6036 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !6037, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6039)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!964, !6022, !7}
!6039 = !{!6040, !6041}
!6040 = !DILocalVariable(name: "vec_", arg: 1, scope: !6036, file: !135, line: 150, type: !6022)
!6041 = !DILocalVariable(name: "ix_", arg: 2, scope: !6036, file: !135, line: 150, type: !7)
!6042 = !DILocation(line: 0, scope: !6036)
!6043 = !DILocation(line: 150, column: 1, scope: !6036)
!6044 = distinct !DISubprogram(name: "bb_seq", scope: !568, file: !568, line: 237, type: !6045, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6050)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!974, !6047}
!6047 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !661, line: 112, baseType: !6048)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!6050 = !{!6051}
!6051 = !DILocalVariable(name: "bb", arg: 1, scope: !6044, file: !568, line: 237, type: !6047)
!6052 = !DILocation(line: 0, scope: !6044)
!6053 = !DILocation(line: 239, column: 17, scope: !6044)
!6054 = !DILocation(line: 239, column: 23, scope: !6044)
!6055 = !DILocation(line: 239, column: 33, scope: !6044)
!6056 = !DILocation(line: 239, column: 43, scope: !6044)
!6057 = !DILocation(line: 239, column: 36, scope: !6044)
!6058 = !DILocation(line: 239, column: 10, scope: !6044)
!6059 = !DILocation(line: 239, column: 68, scope: !6044)
!6060 = !DILocation(line: 239, column: 3, scope: !6044)
!6061 = distinct !DISubprogram(name: "gimple_seq_first", scope: !568, file: !568, line: 159, type: !6062, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6067)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{!979, !6064}
!6064 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !661, line: 67, baseType: !6065)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!6067 = !{!6068}
!6068 = !DILocalVariable(name: "s", arg: 1, scope: !6061, file: !568, line: 159, type: !6064)
!6069 = !DILocation(line: 0, scope: !6061)
!6070 = !DILocation(line: 161, column: 10, scope: !6061)
!6071 = !DILocation(line: 161, column: 17, scope: !6061)
!6072 = !DILocation(line: 161, column: 3, scope: !6061)
!6073 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !568, file: !568, line: 1283, type: !3130, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6074)
!6074 = !{!6075}
!6075 = !DILocalVariable(name: "g", arg: 1, scope: !6073, file: !568, line: 1283, type: !2796)
!6076 = !DILocation(line: 0, scope: !6073)
!6077 = !DILocation(line: 1285, column: 10, scope: !6073)
!6078 = !DILocation(line: 1285, column: 26, scope: !6073)
!6079 = !DILocation(line: 1285, column: 43, scope: !6073)
!6080 = !DILocation(line: 1285, column: 46, scope: !6073)
!6081 = !DILocation(line: 1285, column: 62, scope: !6073)
!6082 = !DILocation(line: 1285, column: 3, scope: !6073)
!6083 = distinct !DISubprogram(name: "gimple_vop", scope: !2768, file: !2768, line: 49, type: !6084, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6086)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!660, !4835}
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "fun", arg: 1, scope: !6083, file: !2768, line: 49, type: !4835)
!6088 = !DILocation(line: 0, scope: !6083)
!6089 = !DILocation(line: 51, column: 3, scope: !6083)
!6090 = !DILocation(line: 52, column: 15, scope: !6083)
!6091 = !DILocation(line: 52, column: 26, scope: !6083)
!6092 = !DILocation(line: 52, column: 3, scope: !6083)
!6093 = distinct !DISubprogram(name: "first_htab_element", scope: !2768, file: !2768, line: 58, type: !6094, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6097)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{!639, !6096, !1448}
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!6097 = !{!6098, !6099, !6100}
!6098 = !DILocalVariable(name: "hti", arg: 1, scope: !6093, file: !2768, line: 58, type: !6096)
!6099 = !DILocalVariable(name: "table", arg: 2, scope: !6093, file: !2768, line: 58, type: !1448)
!6100 = !DILocalVariable(name: "x", scope: !6101, file: !2768, line: 65, type: !639)
!6101 = distinct !DILexicalBlock(scope: !6093, file: !2768, line: 64, column: 5)
!6102 = !DILocation(line: 0, scope: !6093)
!6103 = !DILocation(line: 60, column: 8, scope: !6093)
!6104 = !DILocation(line: 60, column: 13, scope: !6093)
!6105 = !DILocation(line: 61, column: 22, scope: !6093)
!6106 = !DILocation(line: 61, column: 8, scope: !6093)
!6107 = !DILocation(line: 61, column: 13, scope: !6093)
!6108 = !DILocation(line: 62, column: 21, scope: !6093)
!6109 = !DILocation(line: 62, column: 28, scope: !6093)
!6110 = !DILocation(line: 62, column: 26, scope: !6093)
!6111 = !DILocation(line: 62, column: 8, scope: !6093)
!6112 = !DILocation(line: 62, column: 14, scope: !6093)
!6113 = !DILocation(line: 65, column: 22, scope: !6101)
!6114 = !DILocation(line: 63, column: 3, scope: !6093)
!6115 = !DILocation(line: 65, column: 15, scope: !6101)
!6116 = !DILocation(line: 66, column: 33, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6101, file: !2768, line: 66, column: 11)
!6118 = !DILocation(line: 68, column: 14, scope: !6093)
!6119 = !DILocation(line: 68, column: 28, scope: !6093)
!6120 = !DILocation(line: 68, column: 5, scope: !6101)
!6121 = distinct !{!6121, !6114, !6122}
!6122 = !DILocation(line: 68, column: 40, scope: !6093)
!6123 = !DILocation(line: 70, column: 12, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6093, file: !2768, line: 70, column: 7)
!6125 = !DILocation(line: 70, column: 17, scope: !6124)
!6126 = !DILocation(line: 70, column: 7, scope: !6093)
!6127 = !DILocation(line: 71, column: 12, scope: !6124)
!6128 = !DILocation(line: 71, column: 5, scope: !6124)
!6129 = !DILocation(line: 73, column: 1, scope: !6093)
!6130 = distinct !DISubprogram(name: "end_htab_p", scope: !2768, file: !2768, line: 79, type: !6131, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6135)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!634, !6133}
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 64)
!6134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4700)
!6135 = !{!6136}
!6136 = !DILocalVariable(name: "hti", arg: 1, scope: !6130, file: !2768, line: 79, type: !6133)
!6137 = !DILocation(line: 0, scope: !6130)
!6138 = !DILocation(line: 81, column: 12, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6130, file: !2768, line: 81, column: 7)
!6140 = !DILocation(line: 81, column: 25, scope: !6139)
!6141 = !DILocation(line: 81, column: 17, scope: !6139)
!6142 = !DILocation(line: 84, column: 1, scope: !6130)
!6143 = distinct !DISubprogram(name: "next_htab_element", scope: !2768, file: !2768, line: 90, type: !6144, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{!639, !6096}
!6146 = !{!6147, !6148}
!6147 = !DILocalVariable(name: "hti", arg: 1, scope: !6143, file: !2768, line: 90, type: !6096)
!6148 = !DILocalVariable(name: "x", scope: !6149, file: !2768, line: 94, type: !639)
!6149 = distinct !DILexicalBlock(scope: !6143, file: !2768, line: 93, column: 5)
!6150 = !DILocation(line: 0, scope: !6143)
!6151 = !DILocation(line: 94, column: 22, scope: !6149)
!6152 = !DILocation(line: 92, column: 10, scope: !6143)
!6153 = !DILocation(line: 92, column: 31, scope: !6143)
!6154 = !DILocation(line: 92, column: 3, scope: !6143)
!6155 = !DILocation(line: 92, column: 24, scope: !6143)
!6156 = !DILocation(line: 94, column: 15, scope: !6149)
!6157 = !DILocation(line: 0, scope: !6149)
!6158 = !DILocation(line: 95, column: 33, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6149, file: !2768, line: 95, column: 11)
!6160 = distinct !{!6160, !6154, !6161}
!6161 = !DILocation(line: 97, column: 5, scope: !6143)
!6162 = !DILocation(line: 99, column: 1, scope: !6143)
!6163 = distinct !DISubprogram(name: "warn_uninitialized_vars", scope: !3, file: !3, line: 1797, type: !6164, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6166)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!7, !634}
!6166 = !{!6167, !6168, !6169, !6170, !6171}
!6167 = !DILocalVariable(name: "warn_possibly_uninitialized", arg: 1, scope: !6163, file: !3, line: 1797, type: !634)
!6168 = !DILocalVariable(name: "gsi", scope: !6163, file: !3, line: 1799, type: !2007)
!6169 = !DILocalVariable(name: "bb", scope: !6163, file: !3, line: 1800, type: !1416)
!6170 = !DILocalVariable(name: "data", scope: !6163, file: !3, line: 1801, type: !2023)
!6171 = !DILocalVariable(name: "wi", scope: !6172, file: !3, line: 1813, type: !2004)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1812, column: 2)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1811, column: 7)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1811, column: 7)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 1808, column: 5)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 1807, column: 3)
!6177 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1807, column: 3)
!6178 = !DILocation(line: 0, scope: !6163)
!6179 = !DILocation(line: 1799, column: 3, scope: !6163)
!6180 = !DILocation(line: 1801, column: 3, scope: !6163)
!6181 = !DILocation(line: 1803, column: 8, scope: !6163)
!6182 = !DILocation(line: 1803, column: 36, scope: !6163)
!6183 = !DILocation(line: 1805, column: 3, scope: !6163)
!6184 = !DILocation(line: 1807, column: 3, scope: !6177)
!6185 = !DILocation(line: 0, scope: !6175)
!6186 = !DILocation(line: 0, scope: !6174)
!6187 = !DILocation(line: 0, scope: !6172)
!6188 = !DILocation(line: 1807, column: 3, scope: !6176)
!6189 = !DILocation(line: 0, scope: !6177)
!6190 = !DILocation(line: 1810, column: 24, scope: !6175)
!6191 = !DILocation(line: 1810, column: 11, scope: !6175)
!6192 = !DILocation(line: 1809, column: 30, scope: !6175)
!6193 = !DILocation(line: 1809, column: 28, scope: !6175)
!6194 = !DILocation(line: 1811, column: 18, scope: !6174)
!6195 = !DILocation(line: 1811, column: 12, scope: !6174)
!6196 = !DILocation(line: 1811, column: 38, scope: !6173)
!6197 = !DILocation(line: 1811, column: 37, scope: !6173)
!6198 = !DILocation(line: 1811, column: 7, scope: !6174)
!6199 = !DILocation(line: 1813, column: 4, scope: !6172)
!6200 = !DILocation(line: 1814, column: 16, scope: !6172)
!6201 = !DILocation(line: 1814, column: 14, scope: !6172)
!6202 = !DILocation(line: 1815, column: 8, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1815, column: 8)
!6204 = !DILocation(line: 1815, column: 8, scope: !6172)
!6205 = !DILocation(line: 1817, column: 4, scope: !6172)
!6206 = !DILocation(line: 1818, column: 12, scope: !6172)
!6207 = !DILocation(line: 1819, column: 20, scope: !6172)
!6208 = !DILocation(line: 1819, column: 4, scope: !6172)
!6209 = !DILocation(line: 1820, column: 2, scope: !6173)
!6210 = !DILocation(line: 1811, column: 55, scope: !6173)
!6211 = !DILocation(line: 1811, column: 7, scope: !6173)
!6212 = distinct !{!6212, !6198, !6213}
!6213 = !DILocation(line: 1820, column: 2, scope: !6174)
!6214 = !DILocation(line: 0, scope: !6176)
!6215 = distinct !{!6215, !6184, !6216}
!6216 = !DILocation(line: 1821, column: 5, scope: !6177)
!6217 = !DILocation(line: 1826, column: 3, scope: !6163)
!6218 = !DILocation(line: 1828, column: 1, scope: !6163)
!6219 = !DILocation(line: 1827, column: 3, scope: !6163)
!6220 = distinct !DISubprogram(name: "single_succ", scope: !135, file: !135, line: 663, type: !6221, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!1416, !6047}
!6223 = !{!6224}
!6224 = !DILocalVariable(name: "bb", arg: 1, scope: !6220, file: !135, line: 663, type: !6047)
!6225 = !DILocation(line: 0, scope: !6220)
!6226 = !DILocation(line: 665, column: 10, scope: !6220)
!6227 = !DILocation(line: 665, column: 33, scope: !6220)
!6228 = !DILocation(line: 665, column: 3, scope: !6220)
!6229 = distinct !DISubprogram(name: "warn_uninitialized_var", scope: !3, file: !3, line: 1691, type: !3176, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6230)
!6230 = !{!6231, !6232, !6233, !6234, !6235, !6236, !6237, !6240}
!6231 = !DILocalVariable(name: "tp", arg: 1, scope: !6229, file: !3, line: 1691, type: !1018)
!6232 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !6229, file: !3, line: 1691, type: !3178)
!6233 = !DILocalVariable(name: "data_", arg: 3, scope: !6229, file: !3, line: 1691, type: !639)
!6234 = !DILocalVariable(name: "wi", scope: !6229, file: !3, line: 1693, type: !2003)
!6235 = !DILocalVariable(name: "data", scope: !6229, file: !3, line: 1694, type: !2022)
!6236 = !DILocalVariable(name: "t", scope: !6229, file: !3, line: 1695, type: !660)
!6237 = !DILocalVariable(name: "vuse", scope: !6238, file: !3, line: 1718, type: !1989)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1715, column: 7)
!6239 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1707, column: 5)
!6240 = !DILocalVariable(name: "op", scope: !6238, file: !3, line: 1719, type: !660)
!6241 = !DILocation(line: 0, scope: !6229)
!6242 = !DILocation(line: 1694, column: 53, scope: !6229)
!6243 = !DILocation(line: 1695, column: 12, scope: !6229)
!6244 = !DILocation(line: 1698, column: 11, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1698, column: 7)
!6246 = !DILocation(line: 1698, column: 7, scope: !6245)
!6247 = !DILocation(line: 1698, column: 7, scope: !6229)
!6248 = !DILocation(line: 1701, column: 12, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 1701, column: 11)
!6250 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1699, column: 5)
!6251 = !DILocation(line: 1701, column: 11, scope: !6250)
!6252 = !DILocation(line: 1703, column: 11, scope: !6250)
!6253 = !DILocation(line: 1704, column: 5, scope: !6250)
!6254 = !DILocation(line: 1706, column: 11, scope: !6229)
!6255 = !DILocation(line: 1706, column: 3, scope: !6229)
!6256 = !DILocation(line: 1711, column: 22, scope: !6239)
!6257 = !DILocation(line: 1712, column: 7, scope: !6239)
!6258 = !DILocation(line: 1724, column: 12, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1724, column: 6)
!6260 = !DILocation(line: 1724, column: 17, scope: !6259)
!6261 = !DILocation(line: 1724, column: 6, scope: !6238)
!6262 = !DILocation(line: 1728, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1728, column: 6)
!6264 = !DILocation(line: 1728, column: 6, scope: !6238)
!6265 = !DILocation(line: 1731, column: 31, scope: !6238)
!6266 = !DILocation(line: 1731, column: 9, scope: !6238)
!6267 = !DILocation(line: 0, scope: !6238)
!6268 = !DILocation(line: 1732, column: 11, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1732, column: 6)
!6270 = !DILocation(line: 1732, column: 6, scope: !6238)
!6271 = !DILocation(line: 1735, column: 7, scope: !6238)
!6272 = !DILocation(line: 1736, column: 11, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1736, column: 6)
!6274 = !DILocation(line: 1736, column: 8, scope: !6273)
!6275 = !DILocation(line: 1737, column: 6, scope: !6273)
!6276 = !DILocation(line: 1737, column: 10, scope: !6273)
!6277 = !DILocation(line: 1736, column: 6, scope: !6238)
!6278 = !DILocation(line: 1703, column: 9, scope: !6250)
!6279 = !DILocation(line: 1748, column: 17, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1748, column: 11)
!6281 = !DILocation(line: 1748, column: 11, scope: !6280)
!6282 = !DILocation(line: 1748, column: 11, scope: !6239)
!6283 = !DILocation(line: 1750, column: 14, scope: !6280)
!6284 = !DILocation(line: 1749, column: 9, scope: !6280)
!6285 = !DILocation(line: 1751, column: 22, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1751, column: 16)
!6287 = !DILocation(line: 1751, column: 16, scope: !6286)
!6288 = !DILocation(line: 1751, column: 16, scope: !6280)
!6289 = !DILocation(line: 1753, column: 14, scope: !6286)
!6290 = !DILocation(line: 1752, column: 9, scope: !6286)
!6291 = !DILocation(line: 1754, column: 22, scope: !6239)
!6292 = !DILocation(line: 1755, column: 7, scope: !6239)
!6293 = !DILocation(line: 1762, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1762, column: 11)
!6295 = !DILocation(line: 1762, column: 43, scope: !6294)
!6296 = !DILocation(line: 1762, column: 11, scope: !6239)
!6297 = !DILocation(line: 1763, column: 17, scope: !6294)
!6298 = !DILocation(line: 1763, column: 2, scope: !6294)
!6299 = !DILocation(line: 1767, column: 11, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1767, column: 11)
!6301 = !DILocation(line: 1767, column: 11, scope: !6239)
!6302 = !DILocation(line: 1768, column: 17, scope: !6300)
!6303 = !DILocation(line: 1768, column: 2, scope: !6300)
!6304 = !DILocation(line: 1773, column: 1, scope: !6229)
!6305 = distinct !DISubprogram(name: "single_succ_edge", scope: !135, file: !135, line: 643, type: !6306, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6308)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!964, !6047}
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "bb", arg: 1, scope: !6305, file: !135, line: 643, type: !6047)
!6310 = !DILocation(line: 0, scope: !6305)
!6311 = !DILocation(line: 645, column: 3, scope: !6305)
!6312 = !DILocation(line: 646, column: 10, scope: !6305)
!6313 = !DILocation(line: 646, column: 3, scope: !6305)
!6314 = distinct !DISubprogram(name: "single_succ_p", scope: !135, file: !135, line: 626, type: !6315, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!634, !6047}
!6317 = !{!6318}
!6318 = !DILocalVariable(name: "bb", arg: 1, scope: !6314, file: !135, line: 626, type: !6047)
!6319 = !DILocation(line: 0, scope: !6314)
!6320 = !DILocation(line: 628, column: 10, scope: !6314)
!6321 = !DILocation(line: 628, column: 33, scope: !6314)
!6322 = !DILocation(line: 628, column: 3, scope: !6314)
!6323 = distinct !DISubprogram(name: "is_gimple_call", scope: !568, file: !568, line: 1870, type: !3130, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6324)
!6324 = !{!6325}
!6325 = !DILocalVariable(name: "gs", arg: 1, scope: !6323, file: !568, line: 1870, type: !2796)
!6326 = !DILocation(line: 0, scope: !6323)
!6327 = !DILocation(line: 1872, column: 10, scope: !6323)
!6328 = !DILocation(line: 1872, column: 27, scope: !6323)
!6329 = !DILocation(line: 1872, column: 3, scope: !6323)
!6330 = distinct !DISubprogram(name: "warn_uninit", scope: !3, file: !3, line: 1646, type: !6331, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6333)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{null, !660, !640, !639}
!6333 = !{!6334, !6335, !6336, !6337, !6338, !6339, !6340, !6348}
!6334 = !DILocalVariable(name: "t", arg: 1, scope: !6330, file: !3, line: 1646, type: !660)
!6335 = !DILocalVariable(name: "gmsgid", arg: 2, scope: !6330, file: !3, line: 1646, type: !640)
!6336 = !DILocalVariable(name: "data", arg: 3, scope: !6330, file: !3, line: 1646, type: !639)
!6337 = !DILocalVariable(name: "var", scope: !6330, file: !3, line: 1648, type: !660)
!6338 = !DILocalVariable(name: "context", scope: !6330, file: !3, line: 1649, type: !984)
!6339 = !DILocalVariable(name: "location", scope: !6330, file: !3, line: 1650, type: !785)
!6340 = !DILocalVariable(name: "xloc", scope: !6330, file: !3, line: 1651, type: !6341)
!6341 = !DIDerivedType(tag: DW_TAG_typedef, name: "expanded_location", file: !786, line: 52, baseType: !6342)
!6342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !786, line: 40, size: 192, elements: !6343)
!6343 = !{!6344, !6345, !6346, !6347}
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6342, file: !786, line: 43, baseType: !640, size: 64)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !6342, file: !786, line: 46, baseType: !635, size: 32, offset: 64)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !6342, file: !786, line: 48, baseType: !635, size: 32, offset: 96)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !6342, file: !786, line: 51, baseType: !634, size: 8, offset: 128)
!6348 = !DILocalVariable(name: "floc", scope: !6330, file: !3, line: 1651, type: !6341)
!6349 = !DILocation(line: 0, scope: !6330)
!6350 = !DILocation(line: 1648, column: 14, scope: !6330)
!6351 = !DILocation(line: 1649, column: 20, scope: !6330)
!6352 = !DILocation(line: 1651, column: 3, scope: !6330)
!6353 = !DILocation(line: 1653, column: 8, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1653, column: 7)
!6355 = !DILocation(line: 1653, column: 7, scope: !6330)
!6356 = !DILocation(line: 1658, column: 7, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1658, column: 7)
!6358 = !DILocation(line: 1658, column: 7, scope: !6330)
!6359 = !DILocation(line: 1662, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1662, column: 7)
!6361 = !DILocation(line: 1662, column: 7, scope: !6330)
!6362 = !DILocation(line: 1665, column: 23, scope: !6330)
!6363 = !DILocation(line: 1665, column: 31, scope: !6330)
!6364 = !DILocation(line: 1665, column: 34, scope: !6330)
!6365 = !DILocation(line: 1665, column: 14, scope: !6330)
!6366 = !DILocation(line: 1666, column: 9, scope: !6330)
!6367 = !DILocation(line: 1667, column: 9, scope: !6330)
!6368 = !DILocation(line: 1668, column: 10, scope: !6330)
!6369 = !DILocation(line: 1669, column: 10, scope: !6330)
!6370 = !DILocation(line: 1669, column: 27, scope: !6330)
!6371 = !DILocation(line: 1670, column: 7, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1670, column: 7)
!6373 = !DILocation(line: 1670, column: 7, scope: !6330)
!6374 = !DILocation(line: 1672, column: 29, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1671, column: 5)
!6376 = !DILocation(line: 1674, column: 16, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 1674, column: 11)
!6378 = !DILocation(line: 1674, column: 29, scope: !6377)
!6379 = !DILocation(line: 1674, column: 21, scope: !6377)
!6380 = !DILocation(line: 1675, column: 4, scope: !6377)
!6381 = !DILocation(line: 1675, column: 12, scope: !6377)
!6382 = !DILocation(line: 1675, column: 24, scope: !6377)
!6383 = !DILocation(line: 1675, column: 17, scope: !6377)
!6384 = !DILocation(line: 1676, column: 4, scope: !6377)
!6385 = !DILocation(line: 1676, column: 19, scope: !6377)
!6386 = !DILocation(line: 1676, column: 17, scope: !6377)
!6387 = !DILocation(line: 1674, column: 11, scope: !6375)
!6388 = !DILocation(line: 1677, column: 10, scope: !6377)
!6389 = !DILocation(line: 1677, column: 2, scope: !6377)
!6390 = !DILocation(line: 1679, column: 1, scope: !6330)
!6391 = distinct !DISubprogram(name: "gimple_has_location", scope: !568, file: !568, line: 1165, type: !3130, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6392)
!6392 = !{!6393}
!6393 = !DILocalVariable(name: "g", arg: 1, scope: !6391, file: !568, line: 1165, type: !2796)
!6394 = !DILocation(line: 0, scope: !6391)
!6395 = !DILocation(line: 1167, column: 10, scope: !6391)
!6396 = !DILocation(line: 1167, column: 30, scope: !6391)
!6397 = !DILocation(line: 1167, column: 3, scope: !6391)
!6398 = distinct !DISubprogram(name: "gimple_location", scope: !568, file: !568, line: 1139, type: !6399, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!785, !2796}
!6401 = !{!6402}
!6402 = !DILocalVariable(name: "g", arg: 1, scope: !6398, file: !568, line: 1139, type: !2796)
!6403 = !DILocation(line: 0, scope: !6398)
!6404 = !DILocation(line: 1141, column: 20, scope: !6398)
!6405 = !DILocation(line: 1141, column: 3, scope: !6398)
!6406 = distinct !DISubprogram(name: "warn_uninitialized_phi", scope: !3, file: !3, line: 1779, type: !3309, scopeLine: 1780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6407)
!6407 = !{!6408, !6409, !6410, !6411}
!6408 = !DILocalVariable(name: "phi", arg: 1, scope: !6406, file: !3, line: 1779, type: !984)
!6409 = !DILocalVariable(name: "i", scope: !6406, file: !3, line: 1781, type: !1129)
!6410 = !DILocalVariable(name: "n", scope: !6406, file: !3, line: 1781, type: !1129)
!6411 = !DILocalVariable(name: "op", scope: !6412, file: !3, line: 1789, type: !660)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 1788, column: 5)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1787, column: 3)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1787, column: 3)
!6415 = !DILocation(line: 0, scope: !6406)
!6416 = !DILocation(line: 1781, column: 17, scope: !6406)
!6417 = !DILocation(line: 1784, column: 23, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1784, column: 7)
!6419 = !DILocation(line: 1784, column: 8, scope: !6418)
!6420 = !DILocation(line: 1784, column: 7, scope: !6406)
!6421 = !DILocation(line: 1787, column: 3, scope: !6414)
!6422 = !DILocation(line: 0, scope: !6414)
!6423 = !DILocation(line: 1787, column: 17, scope: !6413)
!6424 = !DILocation(line: 1789, column: 17, scope: !6412)
!6425 = !DILocation(line: 0, scope: !6412)
!6426 = !DILocation(line: 1790, column: 11, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 1790, column: 11)
!6428 = !DILocation(line: 1790, column: 26, scope: !6427)
!6429 = !DILocation(line: 1790, column: 11, scope: !6412)
!6430 = !DILocation(line: 1791, column: 2, scope: !6427)
!6431 = !DILocation(line: 1787, column: 22, scope: !6413)
!6432 = !DILocation(line: 1787, column: 3, scope: !6413)
!6433 = distinct !{!6433, !6421, !6434}
!6434 = !DILocation(line: 1793, column: 5, scope: !6414)
!6435 = !DILocation(line: 1794, column: 1, scope: !6406)
