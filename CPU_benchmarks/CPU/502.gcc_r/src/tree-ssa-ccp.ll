; ModuleID = 'tree-ssa-ccp.bc'
source_filename = "tree-ssa-ccp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.prop_value_d = type { i32, %union.tree_node* }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.double_int = type { i64, i64 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.gimplify_ctx = type { %struct.gimplify_ctx*, %struct.VEC_gimple_heap*, %union.tree_node*, %struct.gimple_seq_d*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_heap*, %struct.htab*, i32, i8, i8, i8 }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.2 = private unnamed_addr constant [15 x i8] c"tree-ssa-ccp.c\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@.str.4 = private unnamed_addr constant [4 x i8] c"ccp\00", align 1
@pass_ccp = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i8 ()* @gate_ccp, i32 ()* @do_ssa_ccp, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 65, i32 40, i32 0, i32 0, i32 0, i32 23 } }, align 8, !dbg !0
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.5 = private unnamed_addr constant [4 x i8] c"fab\00", align 1
@pass_fold_builtins = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8 ()* null, i32 ()* @execute_fold_all_builtins, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 40, i32 0, i32 0, i32 0, i32 2053 } }, align 8, !dbg !2753
@.str.6 = private unnamed_addr constant [16 x i8] c"%sUNINITIALIZED\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"%sUNDEFINED\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"%sVARYING\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"%sCONSTANT \00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@const_val = internal unnamed_addr global %struct.prop_value_d* null, align 8, !dbg !2781
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.10 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@dconst0 = external dso_local global %struct.real_value, align 8
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@flag_tree_ccp = external dso_local local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.12 = private unnamed_addr constant [22 x i8] c"\0AVisiting statement:\0A\00", align 1
@.str.13 = private unnamed_addr constant [50 x i8] c"No interesting values produced.  Marked VARYING.\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"which is likely \00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"CONSTANT\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"UNDEFINED\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"VARYING\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Lattice value changed to \00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c".  Adding SSA edges to worklist.\0A\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"\0AVisiting PHI node: \00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"\0A    Argument #%d (%d -> %d %sexecutable)\0A\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"\09Value: \00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"\0A    PHI node value: \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.27 = private unnamed_addr constant [14 x i8] c"Simplified\0A  \00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"to\0A  \00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2787 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2800, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2801, metadata !DIExpression()), !dbg !2802
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2803
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2804
  ret i32 %call, !dbg !2805
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2806 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2810
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2811
  ret i32 %call, !dbg !2812
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2813 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2867, metadata !DIExpression()), !dbg !2868
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2869
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2869
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2869
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2869
  %cmp = icmp uge i8* %0, %1, !dbg !2869
  %conv1 = zext i1 %cmp to i64, !dbg !2869
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2869
  %tobool = icmp eq i64 %expval, 0, !dbg !2869
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2869

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2869
  br label %cond.end, !dbg !2869

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2869
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2869
  %2 = load i8, i8* %0, align 1, !dbg !2869
  %conv3 = zext i8 %2 to i32, !dbg !2869
  br label %cond.end, !dbg !2869

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2869
  ret i32 %cond, !dbg !2870
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2871 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2873, metadata !DIExpression()), !dbg !2874
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2875
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2875
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2875
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2875
  %cmp = icmp uge i8* %0, %1, !dbg !2875
  %conv1 = zext i1 %cmp to i64, !dbg !2875
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2875
  %tobool = icmp eq i64 %expval, 0, !dbg !2875
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2875

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2875
  br label %cond.end, !dbg !2875

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2875
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2875
  %2 = load i8, i8* %0, align 1, !dbg !2875
  %conv3 = zext i8 %2 to i32, !dbg !2875
  br label %cond.end, !dbg !2875

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2875
  ret i32 %cond, !dbg !2876
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2877 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2878
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2878
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2878
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2878
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2878
  %cmp = icmp uge i8* %1, %2, !dbg !2878
  %conv1 = zext i1 %cmp to i64, !dbg !2878
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2878
  %tobool = icmp eq i64 %expval, 0, !dbg !2878
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2878

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2878
  br label %cond.end, !dbg !2878

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2878
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2878
  %3 = load i8, i8* %1, align 1, !dbg !2878
  %conv3 = zext i8 %3 to i32, !dbg !2878
  br label %cond.end, !dbg !2878

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2878
  ret i32 %cond, !dbg !2879
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2880 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2884, metadata !DIExpression()), !dbg !2885
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2886
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2887
  ret i32 %call, !dbg !2888
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2889 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2894, metadata !DIExpression()), !dbg !2895
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2896
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2896
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2896
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2896
  %cmp = icmp uge i8* %0, %1, !dbg !2896
  %conv1 = zext i1 %cmp to i64, !dbg !2896
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2896
  %tobool = icmp eq i64 %expval, 0, !dbg !2896
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2896

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2896
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2896
  br label %cond.end, !dbg !2896

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2896
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2896
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2896
  store i8 %conv2, i8* %0, align 1, !dbg !2896
  %conv6 = and i32 %__c, 255, !dbg !2896
  br label %cond.end, !dbg !2896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2896
  ret i32 %cond, !dbg !2897
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2898 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2900, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2901, metadata !DIExpression()), !dbg !2902
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2903
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2903
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2903
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2903
  %cmp = icmp uge i8* %0, %1, !dbg !2903
  %conv1 = zext i1 %cmp to i64, !dbg !2903
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2903
  %tobool = icmp eq i64 %expval, 0, !dbg !2903
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2903

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2903
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2903
  br label %cond.end, !dbg !2903

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2903
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2903
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2903
  store i8 %conv2, i8* %0, align 1, !dbg !2903
  %conv6 = and i32 %__c, 255, !dbg !2903
  br label %cond.end, !dbg !2903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2903
  ret i32 %cond, !dbg !2904
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2905 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2907, metadata !DIExpression()), !dbg !2908
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2909
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2909
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2909
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2909
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2909
  %cmp = icmp uge i8* %1, %2, !dbg !2909
  %conv1 = zext i1 %cmp to i64, !dbg !2909
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2909
  %tobool = icmp eq i64 %expval, 0, !dbg !2909
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2909

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2909
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2909
  br label %cond.end, !dbg !2909

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2909
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2909
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2909
  store i8 %conv4, i8* %1, align 1, !dbg !2909
  %conv6 = and i32 %__c, 255, !dbg !2909
  br label %cond.end, !dbg !2909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2909
  ret i32 %cond, !dbg !2910
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2911 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2917, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2918, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2919, metadata !DIExpression()), !dbg !2920
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2921
  ret i64 %call, !dbg !2922
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2923 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2925, metadata !DIExpression()), !dbg !2926
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2927
  %0 = load i32, i32* %_flags, align 8, !dbg !2927
  %and = lshr i32 %0, 4, !dbg !2927
  %and.lobit = and i32 %and, 1, !dbg !2927
  ret i32 %and.lobit, !dbg !2928
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2929 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2931, metadata !DIExpression()), !dbg !2932
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2933
  %0 = load i32, i32* %_flags, align 8, !dbg !2933
  %and = lshr i32 %0, 5, !dbg !2933
  %and.lobit = and i32 %and, 1, !dbg !2933
  ret i32 %and.lobit, !dbg !2934
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2935 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2938, metadata !DIExpression()), !dbg !2939
  %__c.off = add i32 %__c, 128, !dbg !2940
  %0 = icmp ult i32 %__c.off, 384, !dbg !2940
  br i1 %0, label %cond.true, label %cond.end, !dbg !2940

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2941
  %1 = load i32*, i32** %call, align 8, !dbg !2942
  %idxprom = sext i32 %__c to i64, !dbg !2943
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2943
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2943
  br label %cond.end, !dbg !2944

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2944
  ret i32 %cond, !dbg !2945
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2946 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2948, metadata !DIExpression()), !dbg !2949
  %__c.off = add i32 %__c, 128, !dbg !2950
  %0 = icmp ult i32 %__c.off, 384, !dbg !2950
  br i1 %0, label %cond.true, label %cond.end, !dbg !2950

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2951
  %1 = load i32*, i32** %call, align 8, !dbg !2952
  %idxprom = sext i32 %__c to i64, !dbg !2953
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2953
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2953
  br label %cond.end, !dbg !2954

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2954
  ret i32 %cond, !dbg !2955
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2956 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2961, metadata !DIExpression()), !dbg !2962
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2963
  %conv = trunc i64 %call to i32, !dbg !2964
  ret i32 %conv, !dbg !2965
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2966 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2970, metadata !DIExpression()), !dbg !2971
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2972
  ret i64 %call, !dbg !2973
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2974 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2979, metadata !DIExpression()), !dbg !2980
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2981
  ret i64 %call, !dbg !2982
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2983 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2989, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2990, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2991, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2992, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2993, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 0, metadata !2994, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2995, metadata !DIExpression()), !dbg !2999
  br label %while.cond, !dbg !3000

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3001
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2995, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2994, metadata !DIExpression()), !dbg !2999
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3002
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3000

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3003
  %div = lshr i64 %add, 1, !dbg !3005
  call void @llvm.dbg.value(metadata i64 %div, metadata !2996, metadata !DIExpression()), !dbg !2999
  %mul = mul i64 %div, %__size, !dbg !3006
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3007
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2997, metadata !DIExpression()), !dbg !2999
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %call, metadata !2998, metadata !DIExpression()), !dbg !2999
  %cmp1 = icmp slt i32 %call, 0, !dbg !3009
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3011

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3012
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3014

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3015
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2994, metadata !DIExpression()), !dbg !2999
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2999
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2995, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2994, metadata !DIExpression()), !dbg !2999
  br label %while.cond, !dbg !3000, !llvm.loop !3016

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2999
  ret i8* %retval.0, !dbg !3018
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3019 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3025, metadata !DIExpression()), !dbg !3026
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !3027
  ret double %call, !dbg !3028
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3029 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3038, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3039, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.value(metadata i32 %base, metadata !3040, metadata !DIExpression()), !dbg !3041
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3042
  ret i64 %call, !dbg !3043
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3044 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3050, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3051, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata i32 %base, metadata !3052, metadata !DIExpression()), !dbg !3053
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3054
  ret i64 %call, !dbg !3055
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3056 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3067, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3068, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.value(metadata i32 %base, metadata !3069, metadata !DIExpression()), !dbg !3070
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3071
  ret i64 %call, !dbg !3072
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3073 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3077, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3078, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata i32 %base, metadata !3079, metadata !DIExpression()), !dbg !3080
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3081
  ret i64 %call, !dbg !3082
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3083 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3123, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3124, metadata !DIExpression()), !dbg !3125
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3126
  ret i32 %call, !dbg !3127
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3128 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3130, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3131, metadata !DIExpression()), !dbg !3132
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3133
  ret i32 %call, !dbg !3134
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3135 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3139, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3140, metadata !DIExpression()), !dbg !3141
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !3142
  ret i32 %call, !dbg !3143
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3144 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3148, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3149, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3150, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3151, metadata !DIExpression()), !dbg !3152
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !3153
  ret i32 %call, !dbg !3154
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3155 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3159, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3160, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3161, metadata !DIExpression()), !dbg !3162
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3161, metadata !DIExpression(DW_OP_deref)), !dbg !3162
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3163
  ret i32 %call, !dbg !3164
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3165 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3169, metadata !DIExpression()), !dbg !3173
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3170, metadata !DIExpression()), !dbg !3173
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3171, metadata !DIExpression()), !dbg !3173
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3172, metadata !DIExpression()), !dbg !3173
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3172, metadata !DIExpression(DW_OP_deref)), !dbg !3173
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3174
  ret i32 %call, !dbg !3175
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3176 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3200, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3201, metadata !DIExpression()), !dbg !3202
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3203
  ret i32 %call, !dbg !3204
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3205 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3207, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3208, metadata !DIExpression()), !dbg !3209
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3210
  ret i32 %call, !dbg !3211
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3212 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3216, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3217, metadata !DIExpression()), !dbg !3218
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !3219
  ret i32 %call, !dbg !3220
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3221 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3225, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3226, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3228, metadata !DIExpression()), !dbg !3229
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !3230
  ret i32 %call, !dbg !3231
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_lattice_value(i32 %val.coerce0, %union.tree_node* %val.coerce1) local_unnamed_addr #5 !dbg !3232 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3237
  tail call fastcc void @dump_lattice_value(%struct._IO_FILE* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 %val.coerce0, %union.tree_node* %val.coerce1) #7, !dbg !3238
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3239
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3240
  ret void, !dbg !3241
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_lattice_value(%struct._IO_FILE* %outf, i8* %prefix, i32 %val.coerce0, %union.tree_node* %val.coerce1) unnamed_addr #5 !dbg !3242 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !3246, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !3247, metadata !DIExpression()), !dbg !3249
  switch i32 %val.coerce0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb3
    i32 2, label %sw.bb5
  ], !dbg !3250

sw.bb:                                            ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* %prefix) #6, !dbg !3251
  br label %sw.epilog, !dbg !3253

sw.bb1:                                           ; preds = %entry
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* %prefix) #6, !dbg !3254
  br label %sw.epilog, !dbg !3255

sw.bb3:                                           ; preds = %entry
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* %prefix) #6, !dbg !3256
  br label %sw.epilog, !dbg !3257

sw.bb5:                                           ; preds = %entry
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i8* %prefix) #6, !dbg !3258
  %0 = load i32, i32* @dump_flags, align 4, !dbg !3259
  tail call void @print_generic_expr(%struct._IO_FILE* %outf, %union.tree_node* %val.coerce1, i32 %0) #6, !dbg !3260
  br label %sw.epilog, !dbg !3261

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3262
  br label %sw.epilog, !dbg !3263

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !3264
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_symbol_constant_value(%union.tree_node* %sym) local_unnamed_addr #5 !dbg !3265 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !3269, metadata !DIExpression()), !dbg !3280
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3281
  %bf.load = load i64, i64* %0, align 8, !dbg !3281
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !3281
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !3281
  br i1 %tobool, label %if.end93, label %land.lhs.true, !dbg !3282

land.lhs.true:                                    ; preds = %entry
  %bf.cast52 = and i64 %bf.load, 1048576, !dbg !3283
  %tobool6 = icmp eq i64 %bf.cast52, 0, !dbg !3283
  br i1 %tobool6, label %lor.lhs.false, label %if.then, !dbg !3284

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.cast103 = and i64 %bf.load, 65535, !dbg !3285
  %cmp = icmp eq i64 %bf.cast103, 33, !dbg !3285
  br i1 %cmp, label %if.then, label %if.end93, !dbg !3286

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3287
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3270, metadata !DIExpression()), !dbg !3288
  %tobool11 = icmp eq %union.tree_node* %1, null, !dbg !3289
  br i1 %tobool11, label %if.end42, label %if.then12, !dbg !3290

if.then12:                                        ; preds = %if.then
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* nonnull %1) #6, !dbg !3291
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3270, metadata !DIExpression()), !dbg !3288
  %call13 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call) #6, !dbg !3292
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3292
  br i1 %tobool14, label %if.end42, label %if.then15, !dbg !3293

if.then15:                                        ; preds = %if.then12
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3294
  %bf.load17 = load i64, i64* %2, align 8, !dbg !3294
  %bf.cast199 = and i64 %bf.load17, 65535, !dbg !3295
  %cmp20 = icmp eq i64 %bf.cast199, 121, !dbg !3295
  br i1 %cmp20, label %if.then21, label %cleanup, !dbg !3296

if.then21:                                        ; preds = %if.then15
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3297
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3297
  %call23 = tail call %union.tree_node* @get_base_address(%union.tree_node* %3) #6, !dbg !3298
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !3273, metadata !DIExpression()), !dbg !3299
  %tobool24 = icmp eq %union.tree_node* %call23, null, !dbg !3300
  br i1 %tobool24, label %cleanup, label %land.lhs.true25, !dbg !3302

land.lhs.true25:                                  ; preds = %if.then21
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3303
  %bf.load27 = load i64, i64* %4, align 8, !dbg !3303
  %bf.cast2910 = and i64 %bf.load27, 65535, !dbg !3304
  %cmp30 = icmp eq i64 %bf.cast2910, 32, !dbg !3304
  br i1 %cmp30, label %if.then31, label %cleanup, !dbg !3305

if.then31:                                        ; preds = %land.lhs.true25
  %bf.set = or i64 %bf.load27, 262144, !dbg !3306
  store i64 %bf.set, i64* %4, align 8, !dbg !3306
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3308
  %call35 = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %5) #7, !dbg !3310
  %tobool36 = icmp eq %struct.htab* %call35, null, !dbg !3310
  br i1 %tobool36, label %cleanup, label %if.then37, !dbg !3311

if.then37:                                        ; preds = %if.then31
  %call38 = tail call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %call23) #6, !dbg !3312
  br label %cleanup, !dbg !3312

if.end42:                                         ; preds = %if.then12, %if.then
  %val.0 = phi %union.tree_node* [ null, %if.then ], [ %call, %if.then12 ], !dbg !3288
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !3270, metadata !DIExpression()), !dbg !3288
  %tobool43 = icmp eq %union.tree_node* %val.0, null, !dbg !3313
  br i1 %tobool43, label %land.lhs.true44, label %cleanup, !dbg !3315

land.lhs.true44:                                  ; preds = %if.end42
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3316
  %6 = bitcast i40* %decl_flag_1 to i64*, !dbg !3316
  %bf.load46 = load i64, i64* %6, align 8, !dbg !3316
  %bf.cast494 = and i64 %bf.load46, 33554432, !dbg !3316
  %tobool50 = icmp eq i64 %bf.cast494, 0, !dbg !3316
  br i1 %tobool50, label %land.lhs.true51, label %cleanup, !dbg !3317

land.lhs.true51:                                  ; preds = %land.lhs.true44
  %7 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !3318
  %call52 = tail call zeroext i8 %7(%union.tree_node* %sym) #6, !dbg !3319
  %tobool53 = icmp eq i8 %call52, 0, !dbg !3319
  br i1 %tobool53, label %cleanup, label %land.lhs.true54, !dbg !3320

land.lhs.true54:                                  ; preds = %land.lhs.true51
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3321
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !3321
  %9 = load i64*, i64** %8, align 8, !dbg !3321
  %bf.load56 = load i64, i64* %9, align 8, !dbg !3321
  %bf.cast585 = and i64 %bf.load56, 65535, !dbg !3321
  %cmp59 = icmp eq i64 %bf.cast585, 6, !dbg !3321
  %10 = bitcast i64* %9 to %union.tree_node*, !dbg !3321
  br i1 %cmp59, label %if.then88, label %lor.lhs.false61, !dbg !3321

lor.lhs.false61:                                  ; preds = %land.lhs.true54
  %cmp68 = icmp eq i64 %bf.cast585, 7, !dbg !3321
  br i1 %cmp68, label %if.then88, label %lor.lhs.false70, !dbg !3321

lor.lhs.false70:                                  ; preds = %lor.lhs.false61
  %cmp77 = icmp eq i64 %bf.cast585, 8, !dbg !3321
  br i1 %cmp77, label %if.then88, label %lor.lhs.false79, !dbg !3322

lor.lhs.false79:                                  ; preds = %lor.lhs.false70
  %cmp86 = icmp eq i64 %bf.cast585, 9, !dbg !3323
  br i1 %cmp86, label %if.then88, label %cleanup, !dbg !3324

if.then88:                                        ; preds = %lor.lhs.false79, %lor.lhs.false70, %lor.lhs.false61, %land.lhs.true54
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !3325
  %call91 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %10, %union.tree_node* %11) #6, !dbg !3325
  br label %cleanup, !dbg !3326

cleanup:                                          ; preds = %if.then31, %if.then21, %land.lhs.true51, %land.lhs.true44, %if.end42, %lor.lhs.false79, %if.then15, %if.then37, %land.lhs.true25, %if.then88
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then88 ], [ false, %if.then21 ], [ false, %land.lhs.true25 ], [ false, %if.then37 ], [ false, %if.then31 ], [ false, %if.then15 ], [ true, %lor.lhs.false79 ], [ true, %land.lhs.true51 ], [ true, %land.lhs.true44 ], [ true, %if.end42 ]
  %retval.0 = phi %union.tree_node* [ %call91, %if.then88 ], [ %call, %if.then21 ], [ %call, %land.lhs.true25 ], [ %call, %if.then37 ], [ %call, %if.then31 ], [ %call, %if.then15 ], [ undef, %lor.lhs.false79 ], [ undef, %land.lhs.true51 ], [ undef, %land.lhs.true44 ], [ undef, %if.end42 ]
  br i1 %cleanup.dest.slot.0, label %if.end93, label %return

if.end93:                                         ; preds = %entry, %cleanup, %lor.lhs.false
  br label %return, !dbg !3327

return:                                           ; preds = %cleanup, %if.end93
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ null, %if.end93 ], !dbg !3280
  ret %union.tree_node* %retval.1, !dbg !3328
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !3329 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !3336, metadata !DIExpression()), !dbg !3337
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !3338
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3338
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !3340
  br i1 %tobool, label %return, label %if.end, !dbg !3341

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !3342
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !3342
  br label %return, !dbg !3343

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !3337
  ret %struct.htab* %retval.0, !dbg !3344
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @may_propagate_address_into_dereference(%union.tree_node* %addr, %union.tree_node* %deref) local_unnamed_addr #5 !dbg !3345 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !3349, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata %union.tree_node* %deref, metadata !3350, metadata !DIExpression()), !dbg !3351
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %deref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3352
  %bf.load = load i64, i64* %0, align 8, !dbg !3352
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3352
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !3352
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3352

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 48, !dbg !3352
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !3352

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 49, !dbg !3352
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !3352

land.lhs.true:                                    ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3352
  %bf.load13 = load i64, i64* %1, align 8, !dbg !3352
  %bf.cast156 = and i64 %bf.load13, 65535, !dbg !3352
  %cmp16 = icmp eq i64 %bf.cast156, 121, !dbg !3352
  br i1 %cmp16, label %cond.end, label %cond.true, !dbg !3352

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false6
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 895, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3352
  br label %cond.end, !dbg !3352

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3353
  %2 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !3353
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3353
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !3353
  %4 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3353
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !3353
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 2, !dbg !3353
  %6 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3353
  %cmp18 = icmp eq %union.tree_node* %6, null, !dbg !3353
  br i1 %cmp18, label %return, label %if.end, !dbg !3355

if.end:                                           ; preds = %cond.end
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %addr) #6, !dbg !3356
  %tobool = icmp eq i8 %call, 0, !dbg !3356
  br i1 %tobool, label %if.end.if.end43_crit_edge, label %land.lhs.true19, !dbg !3358

if.end.if.end43_crit_edge:                        ; preds = %if.end
  %type50.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3351
  %.pre = load %union.tree_node*, %union.tree_node** %type50.phi.trans.insert, align 8, !dbg !3359
  br label %if.end43, !dbg !3358

land.lhs.true19:                                  ; preds = %if.end
  %bf.load21 = load i64, i64* %0, align 8, !dbg !3360
  %bf.cast234 = and i64 %bf.load21, 524288, !dbg !3360
  %tobool24 = icmp eq i64 %bf.cast234, 0, !dbg !3360
  br i1 %tobool24, label %if.then34, label %lor.lhs.false25, !dbg !3361

lor.lhs.false25:                                  ; preds = %land.lhs.true19
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3362
  %7 = bitcast %union.tree_node** %type27 to i64**, !dbg !3362
  %8 = load i64*, i64** %7, align 8, !dbg !3362
  %bf.load29 = load i64, i64* %8, align 8, !dbg !3362
  %bf.cast325 = and i64 %bf.load29, 524288, !dbg !3362
  %tobool33 = icmp eq i64 %bf.cast325, 0, !dbg !3362
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !3363
  br i1 %tobool33, label %if.end43, label %if.then34, !dbg !3363

if.then34:                                        ; preds = %lor.lhs.false25, %land.lhs.true19
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %deref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3364
  %10 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !3364
  %11 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3365
  %type41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !3365
  %12 = load %union.tree_node*, %union.tree_node** %type41, align 8, !dbg !3365
  %call42 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %10, %union.tree_node* %12) #6, !dbg !3366
  br label %return, !dbg !3367

if.end43:                                         ; preds = %if.end.if.end43_crit_edge, %lor.lhs.false25
  %13 = phi %union.tree_node* [ %.pre, %if.end.if.end43_crit_edge ], [ %9, %lor.lhs.false25 ], !dbg !3359
  %operands45 = getelementptr inbounds %union.tree_node, %union.tree_node* %deref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3368
  %14 = bitcast %union.tree_node** %operands45 to %struct.tree_common**, !dbg !3368
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !3368
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !3368
  %16 = load %union.tree_node*, %union.tree_node** %type48, align 8, !dbg !3368
  %call51 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %16, %union.tree_node* %13) #6, !dbg !3369
  %tobool53 = icmp eq i8 %call51, 0, !dbg !3369
  br i1 %tobool53, label %land.end, label %land.rhs, !dbg !3370

land.rhs:                                         ; preds = %if.end43
  %type55 = getelementptr inbounds %union.tree_node, %union.tree_node* %deref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3371
  %17 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !3371
  %18 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3372
  %type60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !3372
  %19 = load %union.tree_node*, %union.tree_node** %type60, align 8, !dbg !3372
  %call61 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %17, %union.tree_node* %19) #6, !dbg !3373
  %tobool63 = icmp ne i8 %call61, 0, !dbg !3370
  %phitmp = zext i1 %tobool63 to i8
  br label %land.end

land.end:                                         ; preds = %if.end43, %land.rhs
  %20 = phi i8 [ 0, %if.end43 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !3374

return:                                           ; preds = %cond.end, %land.end, %if.then34
  %retval.0 = phi i8 [ %call42, %if.then34 ], [ %20, %land.end ], [ 0, %cond.end ], !dbg !3351
  ret i8 %retval.0, !dbg !3375
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %t) local_unnamed_addr #5 !dbg !3376 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3378, metadata !DIExpression()), !dbg !3406
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3407
  %bf.load = load i64, i64* %0, align 8, !dbg !3407
  %bf.cast = and i64 %bf.load, 65535, !dbg !3407
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3407
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3407
  %cmp = icmp eq i32 %1, 3, !dbg !3409
  br i1 %cmp, label %if.then, label %if.end, !dbg !3410

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %t) #7, !dbg !3411
  br label %cleanup511, !dbg !3412

if.end:                                           ; preds = %entry
  %2 = trunc i64 %bf.load to i16, !dbg !3413
  switch i16 %2, label %sw.epilog510 [
    i16 45, label %sw.bb
    i16 41, label %sw.bb277
    i16 43, label %sw.bb419
    i16 44, label %sw.bb419
    i16 47, label %sw.bb463
  ], !dbg !3414

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3415
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3415
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3380, metadata !DIExpression()), !dbg !3406
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3416
  %bf.load8 = load i64, i64* %4, align 8, !dbg !3416
  %5 = trunc i64 %bf.load8 to i16, !dbg !3416
  switch i16 %5, label %cleanup511 [
    i16 32, label %sw.bb11
    i16 45, label %sw.bb26
    i16 41, label %sw.bb26
    i16 28, label %sw.epilog
    i16 51, label %sw.epilog
  ], !dbg !3417

sw.bb11:                                          ; preds = %sw.bb
  %bf.cast1524 = and i64 %bf.load8, 1048576, !dbg !3418
  %tobool = icmp eq i64 %bf.cast1524, 0, !dbg !3418
  br i1 %tobool, label %cleanup511, label %lor.lhs.false, !dbg !3421

lor.lhs.false:                                    ; preds = %sw.bb11
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3422
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !3422
  %7 = load i64*, i64** %6, align 8, !dbg !3422
  %bf.load17 = load i64, i64* %7, align 8, !dbg !3422
  %bf.cast1925 = and i64 %bf.load17, 65535, !dbg !3423
  %cmp20 = icmp eq i64 %bf.cast1925, 15, !dbg !3423
  br i1 %cmp20, label %lor.lhs.false21, label %cleanup511, !dbg !3424

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %8 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !3425
  %call22 = tail call zeroext i8 %8(%union.tree_node* %3) #6, !dbg !3426
  %tobool23 = icmp eq i8 %call22, 0, !dbg !3426
  br i1 %tobool23, label %cleanup511, label %if.end25, !dbg !3427

if.end25:                                         ; preds = %lor.lhs.false21
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3428
  %9 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3428
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3381, metadata !DIExpression()), !dbg !3406
  br label %sw.epilog, !dbg !3429

sw.bb26:                                          ; preds = %sw.bb, %sw.bb
  %call27 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %3) #7, !dbg !3430
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3381, metadata !DIExpression()), !dbg !3406
  br label %sw.epilog, !dbg !3431

sw.epilog:                                        ; preds = %sw.bb, %sw.bb, %sw.bb26, %if.end25
  %ctor.0 = phi %union.tree_node* [ %call27, %sw.bb26 ], [ %9, %if.end25 ], [ %3, %sw.bb ], [ %3, %sw.bb ], !dbg !3432
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.0, metadata !3381, metadata !DIExpression()), !dbg !3406
  %cmp29 = icmp eq %union.tree_node* %ctor.0, null, !dbg !3433
  br i1 %cmp29, label %cleanup511, label %lor.lhs.false30, !dbg !3435

lor.lhs.false30:                                  ; preds = %sw.epilog
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3436
  %bf.load32 = load i64, i64* %10, align 8, !dbg !3436
  %bf.cast3413 = and i64 %bf.load32, 65535, !dbg !3437
  %cmp35 = icmp eq i64 %bf.cast3413, 51, !dbg !3437
  br i1 %cmp35, label %lor.lhs.false41, label %land.lhs.true, !dbg !3438

land.lhs.true:                                    ; preds = %lor.lhs.false30
  %cmp40 = icmp eq i64 %bf.cast3413, 28, !dbg !3439
  br i1 %cmp40, label %lor.lhs.false41, label %cleanup511, !dbg !3440

lor.lhs.false41:                                  ; preds = %land.lhs.true, %lor.lhs.false30
  %bf.cast4614 = and i64 %bf.load32, 67108864, !dbg !3441
  %tobool47 = icmp eq i64 %bf.cast4614, 0, !dbg !3441
  br i1 %tobool47, label %cleanup511, label %if.end49, !dbg !3442

if.end49:                                         ; preds = %lor.lhs.false41
  %arrayidx52 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3443
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8, !dbg !3443
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3382, metadata !DIExpression()), !dbg !3406
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3444
  %bf.load54 = load i64, i64* %12, align 8, !dbg !3444
  %13 = trunc i64 %bf.load54 to i16, !dbg !3444
  switch i16 %13, label %cleanup511 [
    i16 141, label %sw.bb57
    i16 23, label %sw.epilog73
  ], !dbg !3445

sw.bb57:                                          ; preds = %if.end49
  %call58 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %11) #7, !dbg !3446
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call58, metadata !3379, metadata !DIExpression()), !dbg !3406
  %tobool59 = icmp eq %struct.prop_value_d* %call58, null, !dbg !3449
  br i1 %tobool59, label %cleanup511, label %land.lhs.true60, !dbg !3450

land.lhs.true60:                                  ; preds = %sw.bb57
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call58, i64 0, i32 0, !dbg !3451
  %14 = load i32, i32* %lattice_val, align 8, !dbg !3451
  %cmp61 = icmp eq i32 %14, 2, !dbg !3452
  br i1 %cmp61, label %land.lhs.true62, label %cleanup511, !dbg !3453

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %value63 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call58, i64 0, i32 1, !dbg !3454
  %15 = bitcast %union.tree_node** %value63 to i64**, !dbg !3454
  %16 = load i64*, i64** %15, align 8, !dbg !3454
  %bf.load65 = load i64, i64* %16, align 8, !dbg !3454
  %bf.cast6722 = and i64 %bf.load65, 65535, !dbg !3455
  %cmp68 = icmp eq i64 %bf.cast6722, 23, !dbg !3455
  br i1 %cmp68, label %if.then69, label %cleanup511, !dbg !3456

if.then69:                                        ; preds = %land.lhs.true62
  %17 = bitcast i64* %16 to %union.tree_node*, !dbg !3456
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3382, metadata !DIExpression()), !dbg !3406
  %bf.load75.pre = load i64, i64* %10, align 8, !dbg !3457
  br label %sw.epilog73, !dbg !3459

sw.epilog73:                                      ; preds = %if.end49, %if.then69
  %bf.load75 = phi i64 [ %bf.load32, %if.end49 ], [ %bf.load75.pre, %if.then69 ], !dbg !3457
  %idx.0 = phi %union.tree_node* [ %11, %if.end49 ], [ %17, %if.then69 ], !dbg !3460
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.0, metadata !3382, metadata !DIExpression()), !dbg !3406
  %bf.cast7715 = and i64 %bf.load75, 65535, !dbg !3461
  %cmp78 = icmp eq i64 %bf.cast7715, 28, !dbg !3461
  br i1 %cmp78, label %if.then79, label %for.cond.preheader, !dbg !3462

for.cond.preheader:                               ; preds = %sw.epilog73
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3463
  %18 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !3463
  br label %for.cond, !dbg !3464

if.then79:                                        ; preds = %sw.epilog73
  %type81 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3465
  %19 = bitcast %union.tree_node** %type81 to i64**, !dbg !3465
  %20 = load i64*, i64** %19, align 8, !dbg !3465
  %bf.load83 = load i64, i64* %20, align 8, !dbg !3465
  %bf.cast8518 = and i64 %bf.load83, 65535, !dbg !3465
  %cmp86 = icmp eq i64 %bf.cast8518, 14, !dbg !3465
  br i1 %cmp86, label %cond.true, label %cond.false, !dbg !3465

cond.true:                                        ; preds = %if.then79
  %.cast = bitcast i64* %20 to %union.tree_node*, !dbg !3465
  %call89 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !3465
  br label %cond.end, !dbg !3465

cond.false:                                       ; preds = %if.then79
  %type92 = bitcast i64* %20 to %struct.tree_type*, !dbg !3465
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type92, i64 0, i32 6, !dbg !3465
  %bf.load93 = load i32, i32* %mode, align 4, !dbg !3465
  %bf.lshr94 = lshr i32 %bf.load93, 16, !dbg !3465
  %bf.clear95 = and i32 %bf.lshr94, 255, !dbg !3465
  br label %cond.end, !dbg !3465

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call89, %cond.true ], [ %bf.clear95, %cond.false ], !dbg !3465
  %type97 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3468
  %21 = bitcast %union.tree_node** %type97 to %struct.tree_common**, !dbg !3468
  %22 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !3468
  %type99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %22, i64 0, i32 2, !dbg !3468
  %23 = bitcast %union.tree_node** %type99 to i64**, !dbg !3468
  %24 = load i64*, i64** %23, align 8, !dbg !3468
  %bf.load101 = load i64, i64* %24, align 8, !dbg !3468
  %bf.cast10319 = and i64 %bf.load101, 65535, !dbg !3468
  %cmp104 = icmp eq i64 %bf.cast10319, 14, !dbg !3468
  br i1 %cmp104, label %cond.true105, label %cond.false111, !dbg !3468

cond.true105:                                     ; preds = %cond.end
  %25 = bitcast i64* %24 to %union.tree_node*, !dbg !3468
  %call110 = tail call i32 @vector_type_mode(%union.tree_node* %25) #6, !dbg !3468
  br label %cond.end121, !dbg !3468

cond.false111:                                    ; preds = %cond.end
  %type116 = bitcast i64* %24 to %struct.tree_type*, !dbg !3468
  %mode117 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i64 0, i32 6, !dbg !3468
  %bf.load118 = load i32, i32* %mode117, align 4, !dbg !3468
  %bf.lshr119 = lshr i32 %bf.load118, 16, !dbg !3468
  %bf.clear120 = and i32 %bf.lshr119, 255, !dbg !3468
  br label %cond.end121, !dbg !3468

cond.end121:                                      ; preds = %cond.false111, %cond.true105
  %cond122 = phi i32 [ %call110, %cond.true105 ], [ %bf.clear120, %cond.false111 ], !dbg !3468
  %cmp123 = icmp eq i32 %cond, %cond122, !dbg !3469
  br i1 %cmp123, label %land.lhs.true124, label %cleanup511, !dbg !3470

land.lhs.true124:                                 ; preds = %cond.end121
  %26 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !3471
  %type128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 2, !dbg !3471
  %27 = bitcast %union.tree_node** %type128 to i64**, !dbg !3471
  %28 = load i64*, i64** %27, align 8, !dbg !3471
  %bf.load130 = load i64, i64* %28, align 8, !dbg !3471
  %bf.cast13220 = and i64 %bf.load130, 65535, !dbg !3471
  %cmp133 = icmp eq i64 %bf.cast13220, 14, !dbg !3471
  br i1 %cmp133, label %cond.true134, label %cond.false140, !dbg !3471

cond.true134:                                     ; preds = %land.lhs.true124
  %29 = bitcast i64* %28 to %union.tree_node*, !dbg !3471
  %call139 = tail call i32 @vector_type_mode(%union.tree_node* %29) #6, !dbg !3471
  br label %cond.end150, !dbg !3471

cond.false140:                                    ; preds = %land.lhs.true124
  %type145 = bitcast i64* %28 to %struct.tree_type*, !dbg !3471
  %mode146 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type145, i64 0, i32 6, !dbg !3471
  %bf.load147 = load i32, i32* %mode146, align 4, !dbg !3471
  %bf.lshr148 = lshr i32 %bf.load147, 16, !dbg !3471
  %bf.clear149 = and i32 %bf.lshr148, 255, !dbg !3471
  br label %cond.end150, !dbg !3471

cond.end150:                                      ; preds = %cond.false140, %cond.true134
  %cond151 = phi i32 [ %call139, %cond.true134 ], [ %bf.clear149, %cond.false140 ], !dbg !3471
  %idxprom152 = zext i32 %cond151 to i64, !dbg !3471
  %arrayidx153 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom152, !dbg !3471
  %30 = load i8, i8* %arrayidx153, align 1, !dbg !3471
  %cmp154 = icmp eq i8 %30, 2, !dbg !3472
  br i1 %cmp154, label %land.lhs.true156, label %cleanup511, !dbg !3473

land.lhs.true156:                                 ; preds = %cond.end150
  %31 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !3474
  %type160 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !3474
  %32 = bitcast %union.tree_node** %type160 to i64**, !dbg !3474
  %33 = load i64*, i64** %32, align 8, !dbg !3474
  %bf.load162 = load i64, i64* %33, align 8, !dbg !3474
  %bf.cast16421 = and i64 %bf.load162, 65535, !dbg !3474
  %cmp165 = icmp eq i64 %bf.cast16421, 14, !dbg !3474
  br i1 %cmp165, label %cond.true167, label %cond.false173, !dbg !3474

cond.true167:                                     ; preds = %land.lhs.true156
  %34 = bitcast i64* %33 to %union.tree_node*, !dbg !3474
  %call172 = tail call i32 @vector_type_mode(%union.tree_node* %34) #6, !dbg !3474
  br label %cond.end183, !dbg !3474

cond.false173:                                    ; preds = %land.lhs.true156
  %type178 = bitcast i64* %33 to %struct.tree_type*, !dbg !3474
  %mode179 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type178, i64 0, i32 6, !dbg !3474
  %bf.load180 = load i32, i32* %mode179, align 4, !dbg !3474
  %bf.lshr181 = lshr i32 %bf.load180, 16, !dbg !3474
  %bf.clear182 = and i32 %bf.lshr181, 255, !dbg !3474
  br label %cond.end183, !dbg !3474

cond.end183:                                      ; preds = %cond.false173, %cond.true167
  %cond184 = phi i32 [ %call172, %cond.true167 ], [ %bf.clear182, %cond.false173 ], !dbg !3474
  %idxprom185 = zext i32 %cond184 to i64, !dbg !3474
  %arrayidx186 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom185, !dbg !3474
  %35 = load i8, i8* %arrayidx186, align 1, !dbg !3474
  %cmp189 = icmp eq i8 %35, 1, !dbg !3475
  br i1 %cmp189, label %land.lhs.true191, label %cleanup511, !dbg !3476

land.lhs.true191:                                 ; preds = %cond.end183
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3477
  %37 = load i32, i32* %36, align 8, !dbg !3477
  %conv192 = sext i32 %37 to i64, !dbg !3477
  %call193 = tail call i32 @compare_tree_int(%union.tree_node* %idx.0, i64 %conv192) #6, !dbg !3478
  %cmp194 = icmp slt i32 %call193, 0, !dbg !3479
  br i1 %cmp194, label %if.then196, label %cleanup511, !dbg !3480

if.then196:                                       ; preds = %land.lhs.true191
  %38 = load %union.tree_node*, %union.tree_node** %type81, align 8, !dbg !3481
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3482
  %arraydecay = bitcast i32* %str to i8*, !dbg !3482
  %int_cst200 = getelementptr inbounds %union.tree_node, %union.tree_node* %idx.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3483
  %low = bitcast i32* %int_cst200 to i64*, !dbg !3483
  %39 = load i64, i64* %low, align 8, !dbg !3483
  %arrayidx201 = getelementptr inbounds i8, i8* %arraydecay, i64 %39, !dbg !3482
  %40 = load i8, i8* %arrayidx201, align 1, !dbg !3482
  %conv202 = sext i8 %40 to i64, !dbg !3484
  %call203 = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %38, i64 %conv202) #6, !dbg !3485
  br label %cleanup511, !dbg !3486

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %cfield.0 = phi %union.tree_node* [ %cfield.1, %for.inc ], [ undef, %for.cond.preheader ]
  %cnt.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !3487
  %cval.0 = phi %union.tree_node* [ %cval.1, %for.inc ], [ undef, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.0, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64 %cnt.0, metadata !3384, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cfield.0, metadata !3385, metadata !DIExpression()), !dbg !3406
  %41 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %18, align 8, !dbg !3488
  %tobool206 = icmp eq %struct.VEC_constructor_elt_gc* %41, null, !dbg !3488
  br i1 %tobool206, label %cond.end212, label %cond.true207, !dbg !3488

cond.true207:                                     ; preds = %for.cond
  %base210 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %41, i64 0, i32 0, !dbg !3488
  br label %cond.end212, !dbg !3488

cond.end212:                                      ; preds = %for.cond, %cond.true207
  %cond213 = phi %struct.VEC_constructor_elt_base* [ %base210, %cond.true207 ], [ null, %for.cond ], !dbg !3488
  %call214 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond213) #7, !dbg !3488
  %conv215 = zext i32 %call214 to i64, !dbg !3488
  %cmp216 = icmp ult i64 %cnt.0, %conv215, !dbg !3488
  br i1 %cmp216, label %cond.false219, label %cond.end245, !dbg !3488

cond.false219:                                    ; preds = %cond.end212
  %42 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %18, align 8, !dbg !3488
  %tobool222 = icmp eq %struct.VEC_constructor_elt_gc* %42, null, !dbg !3488
  br i1 %tobool222, label %cond.end228, label %cond.true223, !dbg !3488

cond.true223:                                     ; preds = %cond.false219
  %base226 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %42, i64 0, i32 0, !dbg !3488
  br label %cond.end228, !dbg !3488

cond.end228:                                      ; preds = %cond.false219, %cond.true223
  %cond229 = phi %struct.VEC_constructor_elt_base* [ %base226, %cond.true223 ], [ null, %cond.false219 ], !dbg !3488
  %conv230 = trunc i64 %cnt.0 to i32, !dbg !3488
  %call231 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond229, i32 %conv230) #7, !dbg !3488
  %value232 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call231, i64 0, i32 1, !dbg !3488
  %43 = load %union.tree_node*, %union.tree_node** %value232, align 8, !dbg !3488
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !3386, metadata !DIExpression()), !dbg !3406
  %44 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %18, align 8, !dbg !3488
  %tobool235 = icmp eq %struct.VEC_constructor_elt_gc* %44, null, !dbg !3488
  br i1 %tobool235, label %cond.end241, label %cond.true236, !dbg !3488

cond.true236:                                     ; preds = %cond.end228
  %base239 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %44, i64 0, i32 0, !dbg !3488
  br label %cond.end241, !dbg !3488

cond.end241:                                      ; preds = %cond.end228, %cond.true236
  %cond242 = phi %struct.VEC_constructor_elt_base* [ %base239, %cond.true236 ], [ null, %cond.end228 ], !dbg !3488
  %call244 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond242, i32 %conv230) #7, !dbg !3488
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call244, i64 0, i32 0, !dbg !3488
  %45 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !3488
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !3385, metadata !DIExpression()), !dbg !3406
  br label %cond.end245, !dbg !3488

cond.end245:                                      ; preds = %cond.end212, %cond.end241
  %cfield.1 = phi %union.tree_node* [ %45, %cond.end241 ], [ %cfield.0, %cond.end212 ]
  %cval.1 = phi %union.tree_node* [ %43, %cond.end241 ], [ %cval.0, %cond.end212 ]
  %cond246 = phi i1 [ true, %cond.end241 ], [ false, %cond.end212 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.1, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cfield.1, metadata !3385, metadata !DIExpression()), !dbg !3406
  br i1 %cond246, label %for.body, label %sw.epilog510.loopexit, !dbg !3464

for.body:                                         ; preds = %cond.end245
  %call248 = tail call i32 @tree_int_cst_equal(%union.tree_node* %cfield.1, %union.tree_node* %idx.0) #6, !dbg !3489
  %tobool249 = icmp eq i32 %call248, 0, !dbg !3489
  br i1 %tobool249, label %for.inc, label %if.then250, !dbg !3490

if.then250:                                       ; preds = %for.body
  %cval.1.lcssa32 = phi %union.tree_node* [ %cval.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.1.lcssa32, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.1.lcssa32, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.1.lcssa32, metadata !3386, metadata !DIExpression()), !dbg !3406
  %call251 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %cval.1.lcssa32) #6, !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %call251, metadata !3386, metadata !DIExpression()), !dbg !3406
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3492
  %bf.load253 = load i64, i64* %46, align 8, !dbg !3492
  %bf.cast25516 = and i64 %bf.load253, 65535, !dbg !3493
  %cmp256 = icmp eq i64 %bf.cast25516, 121, !dbg !3493
  br i1 %cmp256, label %if.then258, label %cleanup511, !dbg !3494

if.then258:                                       ; preds = %if.then250
  %operands261 = getelementptr inbounds %union.tree_node, %union.tree_node* %call251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3495
  %47 = load %union.tree_node*, %union.tree_node** %operands261, align 8, !dbg !3495
  %call263 = tail call %union.tree_node* @get_base_address(%union.tree_node* %47) #6, !dbg !3496
  call void @llvm.dbg.value(metadata %union.tree_node* %call263, metadata !3387, metadata !DIExpression()), !dbg !3497
  %tobool264 = icmp eq %union.tree_node* %call263, null, !dbg !3498
  br i1 %tobool264, label %cleanup511, label %land.lhs.true265, !dbg !3500

land.lhs.true265:                                 ; preds = %if.then258
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %call263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3501
  %bf.load267 = load i64, i64* %48, align 8, !dbg !3501
  %bf.cast26917 = and i64 %bf.load267, 65535, !dbg !3502
  %cmp270 = icmp eq i64 %bf.cast26917, 32, !dbg !3502
  br i1 %cmp270, label %if.then272, label %cleanup511, !dbg !3503

if.then272:                                       ; preds = %land.lhs.true265
  %call273 = tail call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %call263) #6, !dbg !3504
  br label %cleanup511, !dbg !3504

for.inc:                                          ; preds = %for.body
  %inc = add i64 %cnt.0, 1, !dbg !3488
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3384, metadata !DIExpression()), !dbg !3406
  br label %for.cond, !dbg !3488, !llvm.loop !3505

sw.bb277:                                         ; preds = %if.end
  %operands279 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3507
  %49 = load %union.tree_node*, %union.tree_node** %operands279, align 8, !dbg !3507
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !3380, metadata !DIExpression()), !dbg !3406
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3508
  %bf.load282 = load i64, i64* %50, align 8, !dbg !3508
  %51 = trunc i64 %bf.load282 to i16, !dbg !3508
  switch i16 %51, label %cleanup511 [
    i16 32, label %sw.bb285
    i16 45, label %sw.bb308
    i16 41, label %sw.bb308
  ], !dbg !3509

sw.bb285:                                         ; preds = %sw.bb277
  %bf.cast29011 = and i64 %bf.load282, 1048576, !dbg !3510
  %tobool291 = icmp eq i64 %bf.cast29011, 0, !dbg !3510
  br i1 %tobool291, label %cleanup511, label %lor.lhs.false292, !dbg !3513

lor.lhs.false292:                                 ; preds = %sw.bb285
  %type294 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3514
  %52 = bitcast %union.tree_node** %type294 to i64**, !dbg !3514
  %53 = load i64*, i64** %52, align 8, !dbg !3514
  %bf.load296 = load i64, i64* %53, align 8, !dbg !3514
  %bf.cast29812 = and i64 %bf.load296, 65535, !dbg !3515
  %cmp299 = icmp eq i64 %bf.cast29812, 16, !dbg !3515
  br i1 %cmp299, label %lor.lhs.false301, label %cleanup511, !dbg !3516

lor.lhs.false301:                                 ; preds = %lor.lhs.false292
  %54 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !3517
  %call302 = tail call zeroext i8 %54(%union.tree_node* %49) #6, !dbg !3518
  %tobool303 = icmp eq i8 %call302, 0, !dbg !3518
  br i1 %tobool303, label %cleanup511, label %if.end305, !dbg !3519

if.end305:                                        ; preds = %lor.lhs.false301
  %initial307 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3520
  %55 = load %union.tree_node*, %union.tree_node** %initial307, align 8, !dbg !3520
  call void @llvm.dbg.value(metadata %union.tree_node* %55, metadata !3381, metadata !DIExpression()), !dbg !3406
  br label %sw.epilog311, !dbg !3521

sw.bb308:                                         ; preds = %sw.bb277, %sw.bb277
  %call309 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %49) #7, !dbg !3522
  call void @llvm.dbg.value(metadata %union.tree_node* %call309, metadata !3381, metadata !DIExpression()), !dbg !3406
  br label %sw.epilog311, !dbg !3523

sw.epilog311:                                     ; preds = %sw.bb308, %if.end305
  %ctor.1 = phi %union.tree_node* [ %call309, %sw.bb308 ], [ %55, %if.end305 ], !dbg !3524
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor.1, metadata !3381, metadata !DIExpression()), !dbg !3406
  %cmp312 = icmp eq %union.tree_node* %ctor.1, null, !dbg !3525
  br i1 %cmp312, label %cleanup511, label %lor.lhs.false314, !dbg !3527

lor.lhs.false314:                                 ; preds = %sw.epilog311
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3528
  %bf.load316 = load i64, i64* %56, align 8, !dbg !3528
  %bf.cast3186 = and i64 %bf.load316, 65535, !dbg !3529
  %cmp319 = icmp eq i64 %bf.cast3186, 51, !dbg !3529
  br i1 %cmp319, label %lor.lhs.false321, label %cleanup511, !dbg !3530

lor.lhs.false321:                                 ; preds = %lor.lhs.false314
  %bf.cast3267 = and i64 %bf.load316, 67108864, !dbg !3531
  %tobool327 = icmp eq i64 %bf.cast3267, 0, !dbg !3531
  br i1 %tobool327, label %cleanup511, label %if.end329, !dbg !3532

if.end329:                                        ; preds = %lor.lhs.false321
  %arrayidx332 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands279, i64 1, !dbg !3533
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx332, align 8, !dbg !3533
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !3383, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64 0, metadata !3384, metadata !DIExpression()), !dbg !3406
  %elts335 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3534
  %58 = bitcast i32* %elts335 to %struct.VEC_constructor_elt_gc**, !dbg !3534
  br label %for.cond333, !dbg !3535

for.cond333:                                      ; preds = %for.inc416, %if.end329
  %cfield.2 = phi %union.tree_node* [ undef, %if.end329 ], [ %cfield.3, %for.inc416 ]
  %cnt.1 = phi i64 [ 0, %if.end329 ], [ %inc417, %for.inc416 ], !dbg !3536
  %cval.2 = phi %union.tree_node* [ undef, %if.end329 ], [ %cval.3, %for.inc416 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.2, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64 %cnt.1, metadata !3384, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cfield.2, metadata !3385, metadata !DIExpression()), !dbg !3406
  %59 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %58, align 8, !dbg !3537
  %tobool336 = icmp eq %struct.VEC_constructor_elt_gc* %59, null, !dbg !3537
  br i1 %tobool336, label %cond.end342, label %cond.true337, !dbg !3537

cond.true337:                                     ; preds = %for.cond333
  %base340 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %59, i64 0, i32 0, !dbg !3537
  br label %cond.end342, !dbg !3537

cond.end342:                                      ; preds = %for.cond333, %cond.true337
  %cond343 = phi %struct.VEC_constructor_elt_base* [ %base340, %cond.true337 ], [ null, %for.cond333 ], !dbg !3537
  %call344 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond343) #7, !dbg !3537
  %conv345 = zext i32 %call344 to i64, !dbg !3537
  %cmp346 = icmp ult i64 %cnt.1, %conv345, !dbg !3537
  br i1 %cmp346, label %cond.false349, label %cond.end376, !dbg !3537

cond.false349:                                    ; preds = %cond.end342
  %60 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %58, align 8, !dbg !3537
  %tobool352 = icmp eq %struct.VEC_constructor_elt_gc* %60, null, !dbg !3537
  br i1 %tobool352, label %cond.end358, label %cond.true353, !dbg !3537

cond.true353:                                     ; preds = %cond.false349
  %base356 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %60, i64 0, i32 0, !dbg !3537
  br label %cond.end358, !dbg !3537

cond.end358:                                      ; preds = %cond.false349, %cond.true353
  %cond359 = phi %struct.VEC_constructor_elt_base* [ %base356, %cond.true353 ], [ null, %cond.false349 ], !dbg !3537
  %conv360 = trunc i64 %cnt.1 to i32, !dbg !3537
  %call361 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond359, i32 %conv360) #7, !dbg !3537
  %value362 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call361, i64 0, i32 1, !dbg !3537
  %61 = load %union.tree_node*, %union.tree_node** %value362, align 8, !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node* %61, metadata !3386, metadata !DIExpression()), !dbg !3406
  %62 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %58, align 8, !dbg !3537
  %tobool365 = icmp eq %struct.VEC_constructor_elt_gc* %62, null, !dbg !3537
  br i1 %tobool365, label %cond.end371, label %cond.true366, !dbg !3537

cond.true366:                                     ; preds = %cond.end358
  %base369 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %62, i64 0, i32 0, !dbg !3537
  br label %cond.end371, !dbg !3537

cond.end371:                                      ; preds = %cond.end358, %cond.true366
  %cond372 = phi %struct.VEC_constructor_elt_base* [ %base369, %cond.true366 ], [ null, %cond.end358 ], !dbg !3537
  %call374 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond372, i32 %conv360) #7, !dbg !3537
  %index375 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call374, i64 0, i32 0, !dbg !3537
  %63 = load %union.tree_node*, %union.tree_node** %index375, align 8, !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node* %63, metadata !3385, metadata !DIExpression()), !dbg !3406
  br label %cond.end376, !dbg !3537

cond.end376:                                      ; preds = %cond.end342, %cond.end371
  %cfield.3 = phi %union.tree_node* [ %63, %cond.end371 ], [ %cfield.2, %cond.end342 ]
  %cval.3 = phi %union.tree_node* [ %61, %cond.end371 ], [ %cval.2, %cond.end342 ]
  %cond377 = phi i1 [ true, %cond.end371 ], [ false, %cond.end342 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.3, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cfield.3, metadata !3385, metadata !DIExpression()), !dbg !3406
  br i1 %cond377, label %for.body379, label %sw.epilog510.loopexit26, !dbg !3535

for.body379:                                      ; preds = %cond.end376
  %cmp380 = icmp eq %union.tree_node* %cfield.3, %57, !dbg !3538
  br i1 %cmp380, label %land.lhs.true382, label %for.inc416, !dbg !3539

land.lhs.true382:                                 ; preds = %for.body379
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3540
  %64 = bitcast i40* %decl_flag_1 to i64*, !dbg !3540
  %bf.load384 = load i64, i64* %64, align 8, !dbg !3540
  %bf.cast3878 = and i64 %bf.load384, 33554432, !dbg !3540
  %tobool388 = icmp eq i64 %bf.cast3878, 0, !dbg !3540
  br i1 %tobool388, label %if.then389, label %for.inc416, !dbg !3541

if.then389:                                       ; preds = %land.lhs.true382
  %cval.3.lcssa33 = phi %union.tree_node* [ %cval.3, %land.lhs.true382 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.3.lcssa33, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.3.lcssa33, metadata !3386, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cval.3.lcssa33, metadata !3386, metadata !DIExpression()), !dbg !3406
  %call390 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %cval.3.lcssa33) #6, !dbg !3542
  call void @llvm.dbg.value(metadata %union.tree_node* %call390, metadata !3386, metadata !DIExpression()), !dbg !3406
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %call390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3543
  %bf.load392 = load i64, i64* %65, align 8, !dbg !3543
  %bf.cast3949 = and i64 %bf.load392, 65535, !dbg !3544
  %cmp395 = icmp eq i64 %bf.cast3949, 121, !dbg !3544
  br i1 %cmp395, label %if.then397, label %cleanup511, !dbg !3545

if.then397:                                       ; preds = %if.then389
  %operands400 = getelementptr inbounds %union.tree_node, %union.tree_node* %call390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3546
  %66 = load %union.tree_node*, %union.tree_node** %operands400, align 8, !dbg !3546
  %call402 = tail call %union.tree_node* @get_base_address(%union.tree_node* %66) #6, !dbg !3547
  call void @llvm.dbg.value(metadata %union.tree_node* %call402, metadata !3395, metadata !DIExpression()), !dbg !3548
  %tobool403 = icmp eq %union.tree_node* %call402, null, !dbg !3549
  br i1 %tobool403, label %cleanup511, label %land.lhs.true404, !dbg !3551

land.lhs.true404:                                 ; preds = %if.then397
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call402, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3552
  %bf.load406 = load i64, i64* %67, align 8, !dbg !3552
  %bf.cast40810 = and i64 %bf.load406, 65535, !dbg !3553
  %cmp409 = icmp eq i64 %bf.cast40810, 32, !dbg !3553
  br i1 %cmp409, label %if.then411, label %cleanup511, !dbg !3554

if.then411:                                       ; preds = %land.lhs.true404
  %call412 = tail call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %call402) #6, !dbg !3555
  br label %cleanup511, !dbg !3555

for.inc416:                                       ; preds = %land.lhs.true382, %for.body379
  %inc417 = add i64 %cnt.1, 1, !dbg !3537
  call void @llvm.dbg.value(metadata i64 %inc417, metadata !3384, metadata !DIExpression()), !dbg !3406
  br label %for.cond333, !dbg !3537, !llvm.loop !3556

sw.bb419:                                         ; preds = %if.end, %if.end
  %operands421 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3558
  %68 = load %union.tree_node*, %union.tree_node** %operands421, align 8, !dbg !3558
  %call423 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %68) #7, !dbg !3559
  call void @llvm.dbg.value(metadata %union.tree_node* %call423, metadata !3402, metadata !DIExpression()), !dbg !3560
  %tobool424 = icmp eq %union.tree_node* %call423, null, !dbg !3561
  br i1 %tobool424, label %cleanup, label %land.lhs.true425, !dbg !3563

land.lhs.true425:                                 ; preds = %sw.bb419
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call423, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3564
  %bf.load427 = load i64, i64* %69, align 8, !dbg !3564
  %bf.cast4295 = and i64 %bf.load427, 65535, !dbg !3565
  %cmp430 = icmp eq i64 %bf.cast4295, 26, !dbg !3565
  br i1 %cmp430, label %if.then432, label %cleanup, !dbg !3566

if.then432:                                       ; preds = %land.lhs.true425
  %bf.load434 = load i64, i64* %0, align 8, !dbg !3567
  %bf.cast436 = and i64 %bf.load434, 65535, !dbg !3567
  %arrayidx438 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast436, !dbg !3567
  %70 = load i32, i32* %arrayidx438, align 4, !dbg !3567
  %cmp439 = icmp ugt i32 %70, 3, !dbg !3567
  br i1 %cmp439, label %land.lhs.true441, label %cond.end453, !dbg !3567

land.lhs.true441:                                 ; preds = %if.then432
  %cmp448 = icmp ult i32 %70, 11, !dbg !3567
  br i1 %cmp448, label %cond.true450, label %cond.end453, !dbg !3567

cond.true450:                                     ; preds = %land.lhs.true441
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3567
  %72 = load i32, i32* %71, align 8, !dbg !3567
  br label %cond.end453, !dbg !3567

cond.end453:                                      ; preds = %if.then432, %land.lhs.true441, %cond.true450
  %cond454 = phi i32 [ %72, %cond.true450 ], [ 0, %land.lhs.true441 ], [ 0, %if.then432 ], !dbg !3567
  %73 = trunc i64 %bf.load434 to i32, !dbg !3567
  %bf.cast458 = and i32 %73, 65535, !dbg !3567
  %type460 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3567
  %74 = load %union.tree_node*, %union.tree_node** %type460, align 8, !dbg !3567
  %call461 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond454, i32 %bf.cast458, %union.tree_node* %74, %union.tree_node* nonnull %call423) #6, !dbg !3567
  br label %cleanup, !dbg !3568

cleanup:                                          ; preds = %sw.bb419, %land.lhs.true425, %cond.end453
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end453 ], [ true, %land.lhs.true425 ], [ true, %sw.bb419 ]
  %retval.0 = phi %union.tree_node* [ %call461, %cond.end453 ], [ undef, %land.lhs.true425 ], [ undef, %sw.bb419 ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog510, label %cleanup511

sw.bb463:                                         ; preds = %if.end
  %operands466 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3569
  %75 = load %union.tree_node*, %union.tree_node** %operands466, align 8, !dbg !3569
  call void @llvm.dbg.value(metadata %union.tree_node* %75, metadata !3404, metadata !DIExpression()), !dbg !3570
  %76 = getelementptr inbounds %union.tree_node, %union.tree_node* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3571
  %bf.load469 = load i64, i64* %76, align 8, !dbg !3571
  %bf.cast4713 = and i64 %bf.load469, 65535, !dbg !3573
  %cmp472 = icmp eq i64 %bf.cast4713, 141, !dbg !3573
  br i1 %cmp472, label %land.lhs.true474, label %cleanup507, !dbg !3574

land.lhs.true474:                                 ; preds = %sw.bb463
  %call475 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %75) #7, !dbg !3575
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call475, metadata !3379, metadata !DIExpression()), !dbg !3406
  %tobool476 = icmp eq %struct.prop_value_d* %call475, null, !dbg !3576
  br i1 %tobool476, label %cleanup507, label %land.lhs.true477, !dbg !3577

land.lhs.true477:                                 ; preds = %land.lhs.true474
  %lattice_val478 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call475, i64 0, i32 0, !dbg !3578
  %77 = load i32, i32* %lattice_val478, align 8, !dbg !3578
  %cmp479 = icmp eq i32 %77, 2, !dbg !3579
  br i1 %cmp479, label %land.lhs.true481, label %cleanup507, !dbg !3580

land.lhs.true481:                                 ; preds = %land.lhs.true477
  %value482 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call475, i64 0, i32 1, !dbg !3581
  %78 = bitcast %union.tree_node** %value482 to i64**, !dbg !3581
  %79 = load i64*, i64** %78, align 8, !dbg !3581
  %bf.load484 = load i64, i64* %79, align 8, !dbg !3581
  %bf.cast4864 = and i64 %bf.load484, 65535, !dbg !3582
  %cmp487 = icmp eq i64 %bf.cast4864, 121, !dbg !3582
  br i1 %cmp487, label %land.lhs.true489, label %cleanup507, !dbg !3583

land.lhs.true489:                                 ; preds = %land.lhs.true481
  %type491 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3584
  %80 = load %union.tree_node*, %union.tree_node** %type491, align 8, !dbg !3584
  %type494 = getelementptr inbounds i64, i64* %79, i64 2, !dbg !3585
  %81 = bitcast i64* %type494 to %struct.tree_common**, !dbg !3585
  %82 = load %struct.tree_common*, %struct.tree_common** %81, align 8, !dbg !3585
  %type496 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %82, i64 0, i32 2, !dbg !3585
  %83 = load %union.tree_node*, %union.tree_node** %type496, align 8, !dbg !3585
  %call497 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %80, %union.tree_node* %83) #6, !dbg !3586
  %tobool499 = icmp eq i8 %call497, 0, !dbg !3586
  br i1 %tobool499, label %cleanup507, label %if.then500, !dbg !3587

if.then500:                                       ; preds = %land.lhs.true489
  %84 = bitcast %union.tree_node** %value482 to %struct.tree_exp**, !dbg !3588
  %85 = load %struct.tree_exp*, %struct.tree_exp** %84, align 8, !dbg !3588
  %arrayidx504 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %85, i64 0, i32 3, i64 0, !dbg !3588
  %86 = load %union.tree_node*, %union.tree_node** %arrayidx504, align 8, !dbg !3588
  %call505 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %86) #7, !dbg !3589
  br label %cleanup507, !dbg !3590

cleanup507:                                       ; preds = %land.lhs.true489, %land.lhs.true474, %sw.bb463, %land.lhs.true477, %land.lhs.true481, %if.then500
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then500 ], [ true, %land.lhs.true489 ], [ true, %land.lhs.true481 ], [ true, %land.lhs.true477 ], [ true, %land.lhs.true474 ], [ true, %sw.bb463 ]
  %retval.1 = phi %union.tree_node* [ %call505, %if.then500 ], [ undef, %land.lhs.true489 ], [ undef, %land.lhs.true481 ], [ undef, %land.lhs.true477 ], [ undef, %land.lhs.true474 ], [ undef, %sw.bb463 ]
  br i1 %cleanup.dest.slot.1, label %sw.epilog510, label %cleanup511

sw.epilog510.loopexit:                            ; preds = %cond.end245
  br label %sw.epilog510, !dbg !3591

sw.epilog510.loopexit26:                          ; preds = %cond.end376
  br label %sw.epilog510, !dbg !3591

sw.epilog510:                                     ; preds = %sw.epilog510.loopexit26, %sw.epilog510.loopexit, %if.end, %cleanup, %cleanup507
  br label %cleanup511, !dbg !3591

cleanup511:                                       ; preds = %lor.lhs.false21, %lor.lhs.false, %sw.bb11, %land.lhs.true, %sw.bb57, %if.then258, %lor.lhs.false41, %lor.lhs.false301, %lor.lhs.false292, %sw.bb285, %if.then397, %lor.lhs.false321, %lor.lhs.false314, %if.then389, %if.then411, %land.lhs.true404, %sw.epilog311, %sw.bb277, %if.then250, %if.then272, %land.lhs.true265, %cond.end121, %cond.end150, %cond.end183, %land.lhs.true191, %if.end49, %land.lhs.true60, %land.lhs.true62, %sw.epilog, %sw.bb, %cleanup, %cleanup507, %sw.epilog510, %if.then196, %if.then
  %retval.2 = phi %union.tree_node* [ %call, %if.then ], [ null, %sw.epilog510 ], [ %retval.1, %cleanup507 ], [ %retval.0, %cleanup ], [ %call203, %if.then196 ], [ null, %lor.lhs.false21 ], [ null, %lor.lhs.false ], [ null, %sw.bb11 ], [ null, %sw.bb ], [ null, %lor.lhs.false41 ], [ null, %land.lhs.true ], [ null, %sw.epilog ], [ null, %land.lhs.true62 ], [ null, %land.lhs.true60 ], [ null, %sw.bb57 ], [ null, %if.end49 ], [ null, %land.lhs.true191 ], [ null, %cond.end183 ], [ null, %cond.end150 ], [ null, %cond.end121 ], [ %call251, %if.then258 ], [ %call251, %land.lhs.true265 ], [ %call251, %if.then272 ], [ %call251, %if.then250 ], [ null, %lor.lhs.false301 ], [ null, %lor.lhs.false292 ], [ null, %sw.bb285 ], [ null, %sw.bb277 ], [ null, %lor.lhs.false321 ], [ null, %lor.lhs.false314 ], [ null, %sw.epilog311 ], [ %call390, %if.then397 ], [ %call390, %land.lhs.true404 ], [ %call390, %if.then411 ], [ %call390, %if.then389 ], !dbg !3406
  ret %union.tree_node* %retval.2, !dbg !3592
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.prop_value_d* @get_value(%union.tree_node* %var) unnamed_addr #0 !dbg !3593 {
entry:
  %tmp = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3597, metadata !DIExpression()), !dbg !3599
  %0 = load %struct.prop_value_d*, %struct.prop_value_d** @const_val, align 8, !dbg !3600
  %cmp = icmp eq %struct.prop_value_d* %0, null, !dbg !3602
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3603

if.end:                                           ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3604
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !3604
  %2 = load i32, i32* %1, align 8, !dbg !3604
  %idxprom = zext i32 %2 to i64, !dbg !3605
  %arrayidx = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %0, i64 %idxprom, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %arrayidx, metadata !3598, metadata !DIExpression()), !dbg !3599
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %arrayidx, i64 0, i32 0, !dbg !3606
  %3 = load i32, i32* %lattice_val, align 8, !dbg !3606
  %cmp1 = icmp eq i32 %3, 0, !dbg !3608
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3609

if.then2:                                         ; preds = %if.end
  %4 = bitcast %struct.prop_value_d* %tmp to i8*, !dbg !3610
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3610
  %call = tail call fastcc { i32, %union.tree_node* } @get_default_value(%union.tree_node* %var) #7, !dbg !3610
  %5 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 0, !dbg !3610
  %6 = extractvalue { i32, %union.tree_node* } %call, 0, !dbg !3610
  store i32 %6, i32* %5, align 8, !dbg !3610
  %7 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 1, !dbg !3610
  %8 = extractvalue { i32, %union.tree_node* } %call, 1, !dbg !3610
  store %union.tree_node* %8, %union.tree_node** %7, align 8, !dbg !3610
  %9 = bitcast %struct.prop_value_d* %arrayidx to i8*, !dbg !3610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !3610
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3610
  br label %if.end3, !dbg !3611

if.end3:                                          ; preds = %if.then2, %if.end
  tail call fastcc void @canonicalize_float_value(%struct.prop_value_d* nonnull %arrayidx) #7, !dbg !3612
  br label %cleanup, !dbg !3613

cleanup:                                          ; preds = %entry, %if.end3
  %retval.0 = phi %struct.prop_value_d* [ %arrayidx, %if.end3 ], [ null, %entry ], !dbg !3599
  ret %struct.prop_value_d* %retval.0, !dbg !3614
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !3615 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !3621, metadata !DIExpression()), !dbg !3622
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !3623
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3623

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !3623
  %0 = load i32, i32* %num, align 8, !dbg !3623
  br label %cond.end, !dbg !3623

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3623
  ret i32 %cond, !dbg !3623
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3624 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !3630, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %land.end, !dbg !3633

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3633
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3633
  ret %struct.constructor_elt_d* %arrayidx, !dbg !3633
}

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_ccp() #5 !dbg !3634 {
entry:
  %0 = load i32, i32* @flag_tree_ccp, align 4, !dbg !3635
  %cmp = icmp ne i32 %0, 0, !dbg !3636
  %conv1 = zext i1 %cmp to i8, !dbg !3635
  ret i8 %conv1, !dbg !3637
}

; Function Attrs: nounwind uwtable
define internal i32 @do_ssa_ccp() #5 !dbg !3638 {
entry:
  tail call fastcc void @ccp_initialize() #7, !dbg !3639
  tail call void @ssa_propagate(i32 (%union.gimple_statement_d*, %struct.edge_def**, %union.tree_node**)* nonnull @ccp_visit_stmt, i32 (%union.gimple_statement_d*)* nonnull @ccp_visit_phi_node) #6, !dbg !3640
  %call = tail call fastcc zeroext i8 @ccp_finalize() #7, !dbg !3641
  %tobool = icmp eq i8 %call, 0, !dbg !3641
  %. = select i1 %tobool, i32 0, i32 34848, !dbg !3643
  ret i32 %., !dbg !3644
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @maybe_fold_offset_to_reference(i32 %loc, %union.tree_node* %base, %union.tree_node* %offset, %union.tree_node* %orig_type) local_unnamed_addr #5 !dbg !3645 {
entry:
  %sub_offset = alloca i64, align 8
  %size = alloca i64, align 8
  %maxsize = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3649, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !3650, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !3651, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !3652, metadata !DIExpression()), !dbg !3661
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %base) #6, !dbg !3662
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3650, metadata !DIExpression()), !dbg !3661
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3663
  %bf.load = load i64, i64* %0, align 8, !dbg !3663
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3665
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !3665
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3666

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3667
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3667
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3650, metadata !DIExpression()), !dbg !3661
  %call2 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %1) #7, !dbg !3668
  %tobool = icmp eq i8 %call2, 0, !dbg !3668
  br i1 %tobool, label %if.end18, label %if.then3, !dbg !3669

if.then3:                                         ; preds = %if.end
  %2 = bitcast i64* %sub_offset to i8*, !dbg !3670
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3670
  %3 = bitcast i64* %size to i8*, !dbg !3670
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3670
  %4 = bitcast i64* %maxsize to i8*, !dbg !3670
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3670
  call void @llvm.dbg.value(metadata i64* %sub_offset, metadata !3655, metadata !DIExpression(DW_OP_deref)), !dbg !3671
  call void @llvm.dbg.value(metadata i64* %size, metadata !3658, metadata !DIExpression(DW_OP_deref)), !dbg !3671
  call void @llvm.dbg.value(metadata i64* %maxsize, metadata !3659, metadata !DIExpression(DW_OP_deref)), !dbg !3671
  %call4 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %1, i64* nonnull %sub_offset, i64* nonnull %size, i64* nonnull %maxsize) #6, !dbg !3672
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3660, metadata !DIExpression()), !dbg !3671
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !3673
  br i1 %tobool5, label %cond.true, label %cond.end, !dbg !3673

cond.true:                                        ; preds = %if.then3
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 2075, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3673
  br label %cond.end, !dbg !3673

cond.end:                                         ; preds = %if.then3, %cond.true
  %5 = load i64, i64* %size, align 8, !dbg !3674
  call void @llvm.dbg.value(metadata i64 %5, metadata !3658, metadata !DIExpression()), !dbg !3671
  %6 = load i64, i64* %maxsize, align 8, !dbg !3676
  call void @llvm.dbg.value(metadata i64 %6, metadata !3659, metadata !DIExpression()), !dbg !3671
  %cmp6 = icmp eq i64 %5, %6, !dbg !3677
  call void @llvm.dbg.value(metadata i64 %5, metadata !3658, metadata !DIExpression()), !dbg !3671
  %cmp7 = icmp ne i64 %5, -1, !dbg !3678
  %or.cond = and i1 %cmp6, %cmp7, !dbg !3679
  br i1 %or.cond, label %land.lhs.true8, label %if.end17, !dbg !3679

land.lhs.true8:                                   ; preds = %cond.end
  %7 = load i64, i64* %sub_offset, align 8, !dbg !3680
  call void @llvm.dbg.value(metadata i64 %7, metadata !3655, metadata !DIExpression()), !dbg !3671
  %and = and i64 %7, 7, !dbg !3681
  %tobool9 = icmp eq i64 %and, 0, !dbg !3681
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !3682

if.then10:                                        ; preds = %land.lhs.true8
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3650, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i64 %7, metadata !3655, metadata !DIExpression()), !dbg !3671
  %tobool11 = icmp eq i64 %7, 0, !dbg !3683
  br i1 %tobool11, label %if.end17, label %if.then12, !dbg !3686

if.then12:                                        ; preds = %if.then10
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3687
  %8 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !3687
  call void @llvm.dbg.value(metadata i64 %7, metadata !3655, metadata !DIExpression()), !dbg !3671
  %div = sdiv i64 %7, 8, !dbg !3688
  %call14 = call %union.tree_node* @build_int_cst(%union.tree_node* %8, i64 %div) #6, !dbg !3689
  %call15 = call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %offset, %union.tree_node* %call14, i32 1) #6, !dbg !3690
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3651, metadata !DIExpression()), !dbg !3661
  br label %if.end17, !dbg !3691

if.end17:                                         ; preds = %if.then10, %land.lhs.true8, %if.then12, %cond.end
  %offset.addr.1 = phi %union.tree_node* [ %offset, %land.lhs.true8 ], [ %offset, %cond.end ], [ %call15, %if.then12 ], [ %offset, %if.then10 ]
  %base.addr.0 = phi %union.tree_node* [ %1, %land.lhs.true8 ], [ %1, %cond.end ], [ %call4, %if.then12 ], [ %call4, %if.then10 ], !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0, metadata !3650, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.1, metadata !3651, metadata !DIExpression()), !dbg !3661
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3692
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3692
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3692
  br label %if.end18, !dbg !3693

if.end18:                                         ; preds = %if.end, %if.end17
  %offset.addr.2 = phi %union.tree_node* [ %offset.addr.1, %if.end17 ], [ %offset, %if.end ]
  %base.addr.1 = phi %union.tree_node* [ %base.addr.0, %if.end17 ], [ %1, %if.end ], !dbg !3694
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.1, metadata !3650, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.2, metadata !3651, metadata !DIExpression()), !dbg !3661
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3695
  %9 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !3695
  %call21 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %orig_type, %union.tree_node* %9) #6, !dbg !3697
  %tobool22 = icmp eq i8 %call21, 0, !dbg !3697
  br i1 %tobool22, label %if.end27, label %land.lhs.true23, !dbg !3698

land.lhs.true23:                                  ; preds = %if.end18
  %call24 = call i32 @integer_zerop(%union.tree_node* %offset.addr.2) #6, !dbg !3699
  %tobool25 = icmp eq i32 %call24, 0, !dbg !3699
  br i1 %tobool25, label %if.end27, label %cleanup, !dbg !3700

if.end27:                                         ; preds = %land.lhs.true23, %if.end18
  %10 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !3701
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3654, metadata !DIExpression()), !dbg !3661
  %call30 = call fastcc %union.tree_node* @maybe_fold_offset_to_component_ref(i32 %loc, %union.tree_node* %10, %union.tree_node* %base.addr.1, %union.tree_node* %offset.addr.2, %union.tree_node* %orig_type) #7, !dbg !3702
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3653, metadata !DIExpression()), !dbg !3661
  %tobool31 = icmp eq %union.tree_node* %call30, null, !dbg !3703
  br i1 %tobool31, label %if.then32, label %cleanup, !dbg !3705

if.then32:                                        ; preds = %if.end27
  %call33 = call fastcc %union.tree_node* @maybe_fold_offset_to_array_ref(i32 %loc, %union.tree_node* %base.addr.1, %union.tree_node* %offset.addr.2, %union.tree_node* %orig_type, i8 zeroext 1) #7, !dbg !3706
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !3653, metadata !DIExpression()), !dbg !3661
  br label %cleanup, !dbg !3707

cleanup:                                          ; preds = %land.lhs.true23, %if.end27, %entry, %if.then32
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %base.addr.1, %land.lhs.true23 ], [ %call30, %if.end27 ], [ %call33, %if.then32 ], !dbg !3661
  ret %union.tree_node* %retval.0, !dbg !3708
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !3709 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3714, metadata !DIExpression()), !dbg !3715
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3716
  %bf.load = load i64, i64* %0, align 8, !dbg !3716
  %1 = trunc i64 %bf.load to i16, !dbg !3716
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !3717

sw.default:                                       ; preds = %entry
  br label %return, !dbg !3718

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !3720
  ret i8 %retval.0, !dbg !3721
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #2

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @maybe_fold_offset_to_component_ref(i32 %loc, %union.tree_node* %record_type, %union.tree_node* %base, %union.tree_node* %offset, %union.tree_node* %orig_type) unnamed_addr #5 !dbg !3722 {
entry:
  br label %tailrecurse, !dbg !3742

tailrecurse:                                      ; preds = %if.end146, %entry
  %record_type.tr = phi %union.tree_node* [ %record_type, %entry ], [ %15, %if.end146 ]
  %base.tr = phi %union.tree_node* [ %base, %entry ], [ %call135, %if.end146 ]
  %offset.tr = phi %union.tree_node* [ %offset, %entry ], [ %call134, %if.end146 ]
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3726, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %record_type.tr, metadata !3727, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %base.tr, metadata !3728, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.tr, metadata !3729, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !3730, metadata !DIExpression()), !dbg !3743
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %record_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3744
  %bf.load = load i64, i64* %0, align 8, !dbg !3744
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3746
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !3746
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3747

land.lhs.true:                                    ; preds = %tailrecurse
  %cmp6 = icmp eq i64 %bf.cast1, 17, !dbg !3748
  br i1 %cmp6, label %if.end, label %land.lhs.true7, !dbg !3749

land.lhs.true7:                                   ; preds = %land.lhs.true
  %cmp12 = icmp eq i64 %bf.cast1, 18, !dbg !3750
  br i1 %cmp12, label %if.end, label %cleanup148.loopexit13, !dbg !3751

if.end:                                           ; preds = %land.lhs.true7, %land.lhs.true, %tailrecurse
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %record_type.tr, %union.tree_node* %orig_type) #6, !dbg !3752
  %tobool = icmp eq i8 %call, 0, !dbg !3752
  br i1 %tobool, label %if.end14, label %cleanup148.loopexit13, !dbg !3754

if.end14:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3734, metadata !DIExpression()), !dbg !3743
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %record_type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3755
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !3755
  br label %for.cond, !dbg !3756

for.cond:                                         ; preds = %for.inc, %if.end14
  %f.0.in = phi %union.tree_node** [ %1, %if.end14 ], [ %chain, %for.inc ]
  %tail_array_field.0 = phi %union.tree_node* [ null, %if.end14 ], [ %tail_array_field.2, %for.inc ], !dbg !3757
  %retval.0 = phi %union.tree_node* [ undef, %if.end14 ], [ %retval.1, %for.inc ]
  %f.0 = load %union.tree_node*, %union.tree_node** %f.0.in, align 8, !dbg !3758
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.0, metadata !3734, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %f.0, metadata !3731, metadata !DIExpression()), !dbg !3743
  %tobool15 = icmp eq %union.tree_node* %f.0, null, !dbg !3759
  br i1 %tobool15, label %for.end, label %for.body, !dbg !3759

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3760
  %bf.load18 = load i64, i64* %2, align 8, !dbg !3760
  %bf.cast202 = and i64 %bf.load18, 65535, !dbg !3762
  %cmp21 = icmp eq i64 %bf.cast202, 31, !dbg !3762
  br i1 %cmp21, label %if.end23, label %cleanup, !dbg !3763

if.end23:                                         ; preds = %for.body
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3764
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !3764
  %bf.load24 = load i64, i64* %3, align 8, !dbg !3764
  %bf.cast263 = and i64 %bf.load24, 33554432, !dbg !3764
  %tobool27 = icmp eq i64 %bf.cast263, 0, !dbg !3764
  br i1 %tobool27, label %if.end29, label %cleanup, !dbg !3766

if.end29:                                         ; preds = %if.end23
  %offset30 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3767
  %4 = bitcast %struct.rtx_def** %offset30 to %union.tree_node**, !dbg !3767
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3767
  %tobool31 = icmp eq %union.tree_node* %5, null, !dbg !3767
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !3769

if.end33:                                         ; preds = %if.end29
  %call34 = tail call %union.tree_node* @byte_position(%union.tree_node* nonnull %f.0) #6, !dbg !3770
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !3735, metadata !DIExpression()), !dbg !3743
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3771
  %bf.load36 = load i64, i64* %6, align 8, !dbg !3771
  %bf.cast384 = and i64 %bf.load36, 65535, !dbg !3773
  %cmp39 = icmp eq i64 %bf.cast384, 23, !dbg !3773
  br i1 %cmp39, label %if.end41, label %cleanup, !dbg !3774

if.end41:                                         ; preds = %if.end33
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3775
  %7 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3775
  %tobool42 = icmp eq %union.tree_node* %7, null, !dbg !3775
  br i1 %tobool42, label %cleanup, label %if.end44, !dbg !3777

if.end44:                                         ; preds = %if.end41
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3734, metadata !DIExpression()), !dbg !3743
  %call45 = tail call i32 @tree_int_cst_compare(%union.tree_node* %call34, %union.tree_node* %offset.tr) #6, !dbg !3778
  call void @llvm.dbg.value(metadata i32 %call45, metadata !3738, metadata !DIExpression()), !dbg !3779
  %cmp46 = icmp sgt i32 %call45, 0, !dbg !3780
  br i1 %cmp46, label %cleanup, label %if.end48, !dbg !3782

if.end48:                                         ; preds = %if.end44
  %type49 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3783
  %8 = load %union.tree_node*, %union.tree_node** %type49, align 8, !dbg !3783
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3733, metadata !DIExpression()), !dbg !3743
  %cmp50 = icmp eq i32 %call45, 0, !dbg !3784
  br i1 %cmp50, label %land.lhs.true51, label %if.end56, !dbg !3786

land.lhs.true51:                                  ; preds = %if.end48
  %call52 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %orig_type, %union.tree_node* %8) #6, !dbg !3787
  %tobool53 = icmp eq i8 %call52, 0, !dbg !3787
  br i1 %tobool53, label %if.end56, label %if.then54, !dbg !3788

if.then54:                                        ; preds = %land.lhs.true51
  %call55 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %8, %union.tree_node* %base.tr, %union.tree_node* nonnull %f.0, %union.tree_node* null) #6, !dbg !3789
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !3732, metadata !DIExpression()), !dbg !3743
  br label %cleanup, !dbg !3791

if.end56:                                         ; preds = %land.lhs.true51, %if.end48
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3792
  %bf.load58 = load i64, i64* %9, align 8, !dbg !3792
  %bf.cast605 = and i64 %bf.load58, 65535, !dbg !3792
  %cmp61 = icmp eq i64 %bf.cast605, 15, !dbg !3792
  br i1 %cmp61, label %if.end84, label %lor.lhs.false, !dbg !3792

lor.lhs.false:                                    ; preds = %if.end56
  %cmp67 = icmp eq i64 %bf.cast605, 16, !dbg !3792
  br i1 %cmp67, label %if.end84, label %lor.lhs.false69, !dbg !3792

lor.lhs.false69:                                  ; preds = %lor.lhs.false
  %cmp74 = icmp eq i64 %bf.cast605, 17, !dbg !3792
  br i1 %cmp74, label %if.end84, label %lor.lhs.false76, !dbg !3792

lor.lhs.false76:                                  ; preds = %lor.lhs.false69
  %cmp81 = icmp eq i64 %bf.cast605, 18, !dbg !3792
  br i1 %cmp81, label %if.end84, label %cleanup, !dbg !3794

if.end84:                                         ; preds = %lor.lhs.false76, %lor.lhs.false69, %lor.lhs.false, %if.end56
  %spec.select = select i1 %cmp61, %union.tree_node* %f.0, %union.tree_node* null, !dbg !3795
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !3734, metadata !DIExpression()), !dbg !3743
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3796
  %10 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3796
  %tobool94 = icmp eq %union.tree_node* %10, null, !dbg !3796
  br i1 %tobool94, label %cleanup, label %lor.lhs.false95, !dbg !3798

lor.lhs.false95:                                  ; preds = %if.end84
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3798
  %bf.load99 = load i64, i64* %11, align 8, !dbg !3799
  %bf.cast10110 = and i64 %bf.load99, 65535, !dbg !3800
  %cmp102 = icmp eq i64 %bf.cast10110, 23, !dbg !3800
  br i1 %cmp102, label %if.end105, label %cleanup, !dbg !3801

if.end105:                                        ; preds = %lor.lhs.false95
  %call106 = tail call %union.tree_node* @int_const_binop(i32 64, %union.tree_node* %offset.tr, %union.tree_node* %call34, i32 1) #6, !dbg !3802
  call void @llvm.dbg.value(metadata %union.tree_node* %call106, metadata !3732, metadata !DIExpression()), !dbg !3743
  %12 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3803
  %call109 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call106, %union.tree_node* %12) #6, !dbg !3805
  %tobool110 = icmp eq i32 %call109, 0, !dbg !3805
  br i1 %tobool110, label %cleanup, label %if.end112, !dbg !3806

if.end112:                                        ; preds = %if.end105
  %call113 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %8, %union.tree_node* %base.tr, %union.tree_node* nonnull %f.0, %union.tree_node* null) #6, !dbg !3807
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !3737, metadata !DIExpression()), !dbg !3743
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3808
  store i32 %loc, i32* %13, align 8, !dbg !3808
  %14 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3809
  %cmp116 = icmp eq %union.tree_node* %f.0, %14, !dbg !3810
  %conv118 = zext i1 %cmp116 to i8, !dbg !3811
  %call119 = tail call fastcc %union.tree_node* @maybe_fold_offset_to_array_ref(i32 %loc, %union.tree_node* %call113, %union.tree_node* %call106, %union.tree_node* %orig_type, i8 zeroext %conv118) #7, !dbg !3812
  call void @llvm.dbg.value(metadata %union.tree_node* %call119, metadata !3736, metadata !DIExpression()), !dbg !3743
  %tobool120 = icmp eq %union.tree_node* %call119, null, !dbg !3813
  br i1 %tobool120, label %if.end122, label %cleanup, !dbg !3815

if.end122:                                        ; preds = %if.end112
  %call123 = tail call fastcc %union.tree_node* @maybe_fold_offset_to_component_ref(i32 %loc, %union.tree_node* %8, %union.tree_node* %call113, %union.tree_node* %call106, %union.tree_node* %orig_type) #7, !dbg !3816
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !3736, metadata !DIExpression()), !dbg !3743
  %tobool124 = icmp ne %union.tree_node* %call123, null, !dbg !3817
  %. = zext i1 %tobool124 to i32, !dbg !3819
  %call123.retval.0 = select i1 %tobool124, %union.tree_node* %call123, %union.tree_node* %retval.0, !dbg !3819
  br label %cleanup, !dbg !3819

cleanup:                                          ; preds = %if.end112, %if.end105, %lor.lhs.false95, %if.end84, %if.end41, %if.end33, %if.end29, %if.end23, %for.body, %if.end122, %lor.lhs.false76, %if.end44, %if.then54
  %tail_array_field.2 = phi %union.tree_node* [ null, %if.then54 ], [ %tail_array_field.0, %for.body ], [ %tail_array_field.0, %if.end23 ], [ %tail_array_field.0, %if.end29 ], [ %tail_array_field.0, %if.end33 ], [ %tail_array_field.0, %if.end41 ], [ null, %if.end44 ], [ null, %lor.lhs.false76 ], [ %spec.select, %lor.lhs.false95 ], [ %spec.select, %if.end84 ], [ %spec.select, %if.end105 ], [ %spec.select, %if.end112 ], [ %spec.select, %if.end122 ], !dbg !3743
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then54 ], [ 4, %for.body ], [ 4, %if.end23 ], [ 4, %if.end29 ], [ 4, %if.end33 ], [ 4, %if.end41 ], [ 4, %if.end44 ], [ 4, %lor.lhs.false76 ], [ 4, %lor.lhs.false95 ], [ 4, %if.end84 ], [ 4, %if.end105 ], [ 1, %if.end112 ], [ %., %if.end122 ]
  %retval.1 = phi %union.tree_node* [ %call55, %if.then54 ], [ %retval.0, %for.body ], [ %retval.0, %if.end23 ], [ %retval.0, %if.end29 ], [ %retval.0, %if.end33 ], [ %retval.0, %if.end41 ], [ %retval.0, %if.end44 ], [ %retval.0, %lor.lhs.false76 ], [ %retval.0, %lor.lhs.false95 ], [ %retval.0, %if.end84 ], [ %retval.0, %if.end105 ], [ %call119, %if.end112 ], [ %call123.retval.0, %if.end122 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.2, metadata !3734, metadata !DIExpression()), !dbg !3743
  switch i32 %cleanup.dest.slot.0, label %cleanup148.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3820
  br label %for.cond, !dbg !3821, !llvm.loop !3822

for.end:                                          ; preds = %for.cond
  %tail_array_field.0.lcssa = phi %union.tree_node* [ %tail_array_field.0, %for.cond ], !dbg !3757
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.0.lcssa, metadata !3734, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.0.lcssa, metadata !3734, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.0.lcssa, metadata !3734, metadata !DIExpression()), !dbg !3743
  %tobool128 = icmp eq %union.tree_node* %tail_array_field.0.lcssa, null, !dbg !3824
  br i1 %tobool128, label %cleanup148.loopexit13, label %if.end130, !dbg !3826

if.end130:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %union.tree_node* %tail_array_field.0.lcssa, metadata !3731, metadata !DIExpression()), !dbg !3743
  %type132 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail_array_field.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3827
  %15 = load %union.tree_node*, %union.tree_node** %type132, align 8, !dbg !3827
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3733, metadata !DIExpression()), !dbg !3743
  %call133 = tail call %union.tree_node* @byte_position(%union.tree_node* nonnull %tail_array_field.0.lcssa) #6, !dbg !3828
  %call134 = tail call %union.tree_node* @int_const_binop(i32 64, %union.tree_node* %offset.tr, %union.tree_node* %call133, i32 1) #6, !dbg !3829
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !3729, metadata !DIExpression()), !dbg !3743
  %call135 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %15, %union.tree_node* %base.tr, %union.tree_node* nonnull %tail_array_field.0.lcssa, %union.tree_node* null) #6, !dbg !3830
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !3728, metadata !DIExpression()), !dbg !3743
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3831
  store i32 %loc, i32* %16, align 8, !dbg !3831
  %17 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3832
  %cmp140 = icmp eq %union.tree_node* %tail_array_field.0.lcssa, %17, !dbg !3833
  %conv142 = zext i1 %cmp140 to i8, !dbg !3834
  %call143 = tail call fastcc %union.tree_node* @maybe_fold_offset_to_array_ref(i32 %loc, %union.tree_node* %call135, %union.tree_node* %call134, %union.tree_node* %orig_type, i8 zeroext %conv142) #7, !dbg !3835
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !3732, metadata !DIExpression()), !dbg !3743
  %tobool144 = icmp eq %union.tree_node* %call143, null, !dbg !3836
  br i1 %tobool144, label %if.end146, label %cleanup148.loopexit13, !dbg !3838

if.end146:                                        ; preds = %if.end130
  br label %tailrecurse, !dbg !3742

cleanup148.loopexit:                              ; preds = %cleanup
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %cleanup ]
  br label %cleanup148, !dbg !3839

cleanup148.loopexit13:                            ; preds = %if.end, %for.end, %if.end130, %land.lhs.true7
  %retval.2.ph = phi %union.tree_node* [ %call143, %if.end130 ], [ null, %for.end ], [ null, %if.end ], [ null, %land.lhs.true7 ]
  br label %cleanup148, !dbg !3839

cleanup148:                                       ; preds = %cleanup148.loopexit13, %cleanup148.loopexit
  %retval.2 = phi %union.tree_node* [ %retval.1.lcssa, %cleanup148.loopexit ], [ %retval.2.ph, %cleanup148.loopexit13 ]
  ret %union.tree_node* %retval.2, !dbg !3839
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @maybe_fold_offset_to_array_ref(i32 %loc, %union.tree_node* %base, %union.tree_node* %offset, %union.tree_node* %orig_type, i8 zeroext %allow_negative_idx) unnamed_addr #5 !dbg !3840 {
entry:
  %lquo = alloca i64, align 8
  %lrem = alloca i64, align 8
  %hquo = alloca i64, align 8
  %hrem = alloca i64, align 8
  %soffset = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3844, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !3845, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !3846, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !3847, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata i8 %allow_negative_idx, metadata !3848, metadata !DIExpression()), !dbg !3872
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !3873
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3852, metadata !DIExpression()), !dbg !3872
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3874
  %bf.load = load i64, i64* %1, align 8, !dbg !3874
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !3875
  %cmp = icmp eq i64 %bf.cast6, 45, !dbg !3875
  br i1 %cmp, label %if.then, label %if.end17, !dbg !3876

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %base) #6, !dbg !3877
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3857, metadata !DIExpression()), !dbg !3878
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3879
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3879
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3879
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3852, metadata !DIExpression()), !dbg !3872
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3880
  %bf.load3 = load i64, i64* %3, align 8, !dbg !3880
  %bf.cast513 = and i64 %bf.load3, 65535, !dbg !3882
  %cmp6 = icmp eq i64 %bf.cast513, 23, !dbg !3882
  br i1 %cmp6, label %lor.lhs.false, label %cleanup, !dbg !3883

lor.lhs.false:                                    ; preds = %if.then
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3884
  %bf.load8 = load i64, i64* %4, align 8, !dbg !3884
  %bf.cast1014 = and i64 %bf.load8, 65535, !dbg !3885
  %cmp11 = icmp eq i64 %bf.cast1014, 23, !dbg !3885
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !3886

if.end:                                           ; preds = %lor.lhs.false
  %call13 = tail call %union.tree_node* @int_const_binop(i32 64, %union.tree_node* %2, %union.tree_node* %call, i32 0) #6, !dbg !3887
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3852, metadata !DIExpression()), !dbg !3872
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3888
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3845, metadata !DIExpression()), !dbg !3872
  br label %cleanup, !dbg !3889

cleanup:                                          ; preds = %lor.lhs.false, %if.then, %if.end
  %elt_offset.0 = phi %union.tree_node* [ %call13, %if.end ], [ %2, %lor.lhs.false ], [ %2, %if.then ], !dbg !3878
  %base.addr.0 = phi %union.tree_node* [ %5, %if.end ], [ %base, %lor.lhs.false ], [ %base, %if.then ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %lor.lhs.false ], [ false, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0, metadata !3845, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %elt_offset.0, metadata !3852, metadata !DIExpression()), !dbg !3872
  br i1 %cleanup.dest.slot.0, label %if.end17, label %cleanup179

if.end17:                                         ; preds = %cleanup, %entry
  %elt_offset.1 = phi %union.tree_node* [ %0, %entry ], [ %elt_offset.0, %cleanup ], !dbg !3872
  %base.addr.1 = phi %union.tree_node* [ %base, %entry ], [ %base.addr.0, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.1, metadata !3845, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %elt_offset.1, metadata !3852, metadata !DIExpression()), !dbg !3872
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3890
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3890
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3853, metadata !DIExpression()), !dbg !3872
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3891
  %bf.load19 = load i64, i64* %7, align 8, !dbg !3891
  %bf.cast217 = and i64 %bf.load19, 65535, !dbg !3893
  %cmp22 = icmp eq i64 %bf.cast217, 15, !dbg !3893
  br i1 %cmp22, label %if.end24, label %cleanup179, !dbg !3894

if.end24:                                         ; preds = %if.end17
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3895
  %8 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3854, metadata !DIExpression()), !dbg !3872
  %call27 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %orig_type, %union.tree_node* %8) #6, !dbg !3896
  %tobool = icmp eq i8 %call27, 0, !dbg !3896
  br i1 %tobool, label %cleanup179, label %if.end29, !dbg !3898

if.end29:                                         ; preds = %if.end24
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !3899
  %call30 = tail call %union.tree_node* @signed_type_for(%union.tree_node* %9) #6, !dbg !3900
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3851, metadata !DIExpression()), !dbg !3872
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3901
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3901
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3855, metadata !DIExpression()), !dbg !3872
  %tobool32 = icmp eq %union.tree_node* %11, null, !dbg !3902
  br i1 %tobool32, label %cleanup179, label %if.end34, !dbg !3904

if.end34:                                         ; preds = %if.end29
  %call35 = tail call i32 @integer_zerop(%union.tree_node* %offset) #6, !dbg !3905
  %tobool36 = icmp eq i32 %call35, 0, !dbg !3905
  br i1 %tobool36, label %if.else, label %if.then37, !dbg !3906

if.then37:                                        ; preds = %if.end34
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3907
  %bf.load39 = load i64, i64* %12, align 8, !dbg !3907
  %bf.cast4112 = and i64 %bf.load39, 65535, !dbg !3910
  %cmp42 = icmp eq i64 %bf.cast4112, 23, !dbg !3910
  br i1 %cmp42, label %if.end46, label %if.then43, !dbg !3911

if.then43:                                        ; preds = %if.then37
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3912
  %14 = load i32, i32* %13, align 8, !dbg !3912
  %conv = zext i32 %14 to i64, !dbg !3912
  %call45 = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #6, !dbg !3912
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !3855, metadata !DIExpression()), !dbg !3872
  br label %if.end46, !dbg !3913

if.end46:                                         ; preds = %if.then37, %if.then43
  %call47 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call30, i64 0) #6, !dbg !3914
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !3850, metadata !DIExpression()), !dbg !3872
  br label %if.end83, !dbg !3915

if.else:                                          ; preds = %if.end34
  %15 = bitcast i64* %lquo to i8*, !dbg !3916
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !3916
  %16 = bitcast i64* %lrem to i8*, !dbg !3916
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8, !dbg !3916
  %17 = bitcast i64* %hquo to i8*, !dbg !3917
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8, !dbg !3917
  %18 = bitcast i64* %hrem to i8*, !dbg !3917
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8, !dbg !3917
  %19 = bitcast %struct.double_int* %soffset to i8*, !dbg !3918
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !3918
  %20 = bitcast %struct.double_int* %tmp to i8*, !dbg !3919
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8, !dbg !3919
  %call48 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %offset) #6, !dbg !3920
  %21 = extractvalue { i64, i64 } %call48, 0, !dbg !3920
  %22 = extractvalue { i64, i64 } %call48, 1, !dbg !3920
  %type50 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3921
  %23 = bitcast %union.tree_node** %type50 to %struct.tree_type**, !dbg !3921
  %24 = load %struct.tree_type*, %struct.tree_type** %23, align 8, !dbg !3921
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !3921
  %bf.load52 = load i32, i32* %precision, align 4, !dbg !3921
  %bf.clear53 = and i32 %bf.load52, 1023, !dbg !3921
  %call54 = tail call { i64, i64 } @double_int_sext(i64 %21, i64 %22, i32 %bf.clear53) #6, !dbg !3919
  %25 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !3919
  %26 = extractvalue { i64, i64 } %call54, 0, !dbg !3919
  store i64 %26, i64* %25, align 8, !dbg !3919
  %27 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !3919
  %28 = extractvalue { i64, i64 } %call54, 1, !dbg !3919
  store i64 %28, i64* %27, align 8, !dbg !3919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %20, i64 16, i1 false), !dbg !3919
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8, !dbg !3919
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3922
  %bf.load56 = load i64, i64* %29, align 8, !dbg !3922
  %bf.cast588 = and i64 %bf.load56, 65535, !dbg !3924
  %cmp59 = icmp eq i64 %bf.cast588, 23, !dbg !3924
  br i1 %cmp59, label %lor.lhs.false61, label %cleanup76, !dbg !3925

lor.lhs.false61:                                  ; preds = %if.else
  %low = getelementptr inbounds %struct.double_int, %struct.double_int* %soffset, i64 0, i32 0, !dbg !3926
  %30 = load i64, i64* %low, align 8, !dbg !3926
  %high = getelementptr inbounds %struct.double_int, %struct.double_int* %soffset, i64 0, i32 1, !dbg !3927
  %31 = load i64, i64* %high, align 8, !dbg !3927
  %int_cst62 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3928
  %low63 = bitcast i32* %int_cst62 to i64*, !dbg !3928
  %32 = load i64, i64* %low63, align 8, !dbg !3928
  %high66 = getelementptr inbounds i32, i32* %int_cst62, i64 2, !dbg !3929
  %33 = bitcast i32* %high66 to i64*, !dbg !3929
  %34 = load i64, i64* %33, align 8, !dbg !3929
  call void @llvm.dbg.value(metadata i64* %lquo, metadata !3860, metadata !DIExpression(DW_OP_deref)), !dbg !3930
  call void @llvm.dbg.value(metadata i64* %lrem, metadata !3863, metadata !DIExpression(DW_OP_deref)), !dbg !3930
  call void @llvm.dbg.value(metadata i64* %hquo, metadata !3864, metadata !DIExpression(DW_OP_deref)), !dbg !3930
  call void @llvm.dbg.value(metadata i64* %hrem, metadata !3865, metadata !DIExpression(DW_OP_deref)), !dbg !3930
  %call67 = call i32 @div_and_round_double(i32 67, i32 0, i64 %30, i64 %31, i64 %32, i64 %34, i64* nonnull %lquo, i64* nonnull %hquo, i64* nonnull %lrem, i64* nonnull %hrem) #6, !dbg !3931
  %tobool68 = icmp ne i32 %call67, 0, !dbg !3931
  %35 = load i64, i64* %lrem, align 8, !dbg !3932
  call void @llvm.dbg.value(metadata i64 %35, metadata !3863, metadata !DIExpression()), !dbg !3930
  %36 = load i64, i64* %hrem, align 8, !dbg !3933
  call void @llvm.dbg.value(metadata i64 %36, metadata !3865, metadata !DIExpression()), !dbg !3930
  %37 = or i64 %35, %36, !dbg !3934
  %38 = icmp ne i64 %37, 0, !dbg !3934
  %39 = or i1 %38, %tobool68, !dbg !3934
  br i1 %39, label %cleanup76, label %if.end74, !dbg !3934

if.end74:                                         ; preds = %lor.lhs.false61
  %40 = load i64, i64* %lquo, align 8, !dbg !3935
  call void @llvm.dbg.value(metadata i64 %40, metadata !3860, metadata !DIExpression()), !dbg !3930
  %41 = load i64, i64* %hquo, align 8, !dbg !3936
  call void @llvm.dbg.value(metadata i64 %41, metadata !3864, metadata !DIExpression()), !dbg !3930
  %call75 = call %union.tree_node* @build_int_cst_wide(%union.tree_node* %call30, i64 %40, i64 %41) #6, !dbg !3937
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !3850, metadata !DIExpression()), !dbg !3872
  br label %cleanup76, !dbg !3938

cleanup76:                                        ; preds = %if.else, %lor.lhs.false61, %if.end74
  %idx.0 = phi %union.tree_node* [ %call75, %if.end74 ], [ undef, %lor.lhs.false61 ], [ undef, %if.else ]
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end74 ], [ false, %lor.lhs.false61 ], [ false, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.0, metadata !3850, metadata !DIExpression()), !dbg !3872
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !3938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8, !dbg !3938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8, !dbg !3938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8, !dbg !3938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !3938
  br i1 %cleanup.dest.slot.1, label %if.end83, label %cleanup179

if.end83:                                         ; preds = %cleanup76, %if.end46
  %idx.1 = phi %union.tree_node* [ %call47, %if.end46 ], [ %idx.0, %cleanup76 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.1, metadata !3850, metadata !DIExpression()), !dbg !3872
  %call84 = call %union.tree_node* @build_int_cst(%union.tree_node* %call30, i64 0) #6, !dbg !3939
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !3849, metadata !DIExpression()), !dbg !3872
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3940
  %42 = bitcast i32* %values to %union.tree_node**, !dbg !3940
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8, !dbg !3940
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !3856, metadata !DIExpression()), !dbg !3872
  %tobool86 = icmp eq %union.tree_node* %43, null, !dbg !3941
  br i1 %tobool86, label %if.end105, label %if.then87, !dbg !3943

if.then87:                                        ; preds = %if.end83
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !3851, metadata !DIExpression()), !dbg !3872
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3944
  %44 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !3944
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !3944
  %tobool89 = icmp eq %union.tree_node* %45, null, !dbg !3944
  br i1 %tobool89, label %if.else93, label %if.then90, !dbg !3947

if.then90:                                        ; preds = %if.then87
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !3849, metadata !DIExpression()), !dbg !3872
  br label %if.end95, !dbg !3948

if.else93:                                        ; preds = %if.then87
  %call94 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* nonnull %43, %union.tree_node* %call84) #6, !dbg !3949
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !3849, metadata !DIExpression()), !dbg !3872
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then90
  %min_idx.0 = phi %union.tree_node* [ %45, %if.then90 ], [ %call94, %if.else93 ], !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %min_idx.0, metadata !3849, metadata !DIExpression()), !dbg !3872
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %min_idx.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3951
  %bf.load97 = load i64, i64* %46, align 8, !dbg !3951
  %bf.cast9911 = and i64 %bf.load97, 65535, !dbg !3953
  %cmp100 = icmp eq i64 %bf.cast9911, 23, !dbg !3953
  br i1 %cmp100, label %if.end103, label %cleanup179, !dbg !3954

if.end103:                                        ; preds = %if.end95
  %call104 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* nonnull %43, %union.tree_node* %elt_offset.1) #6, !dbg !3955
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !3852, metadata !DIExpression()), !dbg !3872
  br label %if.end105, !dbg !3956

if.end105:                                        ; preds = %if.end83, %if.end103
  %min_idx.1 = phi %union.tree_node* [ %min_idx.0, %if.end103 ], [ %call84, %if.end83 ], !dbg !3872
  %idx_type.0 = phi %union.tree_node* [ %43, %if.end103 ], [ %call30, %if.end83 ], !dbg !3872
  %elt_offset.2 = phi %union.tree_node* [ %call104, %if.end103 ], [ %elt_offset.1, %if.end83 ], !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %elt_offset.2, metadata !3852, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %idx_type.0, metadata !3851, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %min_idx.1, metadata !3849, metadata !DIExpression()), !dbg !3872
  %call106 = call i32 @integer_zerop(%union.tree_node* %min_idx.1) #6, !dbg !3957
  %tobool107 = icmp eq i32 %call106, 0, !dbg !3957
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !3959

if.then108:                                       ; preds = %if.end105
  %call109 = call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %idx.1, %union.tree_node* %min_idx.1, i32 0) #6, !dbg !3960
  call void @llvm.dbg.value(metadata %union.tree_node* %call109, metadata !3850, metadata !DIExpression()), !dbg !3872
  br label %if.end110, !dbg !3961

if.end110:                                        ; preds = %if.end105, %if.then108
  %idx.2 = phi %union.tree_node* [ %idx.1, %if.end105 ], [ %call109, %if.then108 ], !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.2, metadata !3850, metadata !DIExpression()), !dbg !3872
  %call111 = call i32 @integer_zerop(%union.tree_node* %elt_offset.2) #6, !dbg !3962
  %tobool112 = icmp eq i32 %call111, 0, !dbg !3962
  br i1 %tobool112, label %if.then113, label %if.end115, !dbg !3964

if.then113:                                       ; preds = %if.end110
  %call114 = call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %idx.2, %union.tree_node* %elt_offset.2, i32 0) #6, !dbg !3965
  call void @llvm.dbg.value(metadata %union.tree_node* %call114, metadata !3850, metadata !DIExpression()), !dbg !3872
  br label %if.end115, !dbg !3966

if.end115:                                        ; preds = %if.end110, %if.then113
  %idx.3 = phi %union.tree_node* [ %idx.2, %if.end110 ], [ %call114, %if.then113 ], !dbg !3872
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.3, metadata !3850, metadata !DIExpression()), !dbg !3872
  %call116 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %idx_type.0, %union.tree_node* %idx.3) #6, !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !3850, metadata !DIExpression()), !dbg !3872
  br i1 %tobool86, label %if.else167, label %land.lhs.true, !dbg !3968

land.lhs.true:                                    ; preds = %if.end115
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3969
  %47 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !3969
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !3969
  %tobool119 = icmp eq %union.tree_node* %48, null, !dbg !3969
  br i1 %tobool119, label %if.end143, label %land.lhs.true120, !dbg !3970

land.lhs.true120:                                 ; preds = %land.lhs.true
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3970
  %bf.load124 = load i64, i64* %49, align 8, !dbg !3971
  %bf.cast12610 = and i64 %bf.load124, 65535, !dbg !3972
  %cmp127 = icmp eq i64 %bf.cast12610, 23, !dbg !3972
  br i1 %cmp127, label %if.then129, label %if.end143, !dbg !3973

if.then129:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !3867, metadata !DIExpression()), !dbg !3974
  %call132 = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %48, %union.tree_node* %call116) #6, !dbg !3975
  %tobool133 = icmp eq i32 %call132, 0, !dbg !3975
  br i1 %tobool133, label %if.end139, label %land.lhs.true134, !dbg !3977

land.lhs.true134:                                 ; preds = %if.then129
  %call135 = call i32 @compare_tree_int(%union.tree_node* nonnull %48, i64 1) #6, !dbg !3978
  %cmp136 = icmp sgt i32 %call135, 0, !dbg !3979
  br i1 %cmp136, label %cleanup140, label %if.end139, !dbg !3980

if.end139:                                        ; preds = %if.then129, %land.lhs.true134
  br label %cleanup140, !dbg !3981

cleanup140:                                       ; preds = %land.lhs.true134, %if.end139
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end139 ], [ false, %land.lhs.true134 ]
  br i1 %cleanup.dest.slot.2, label %if.end143, label %cleanup179

if.end143:                                        ; preds = %land.lhs.true, %cleanup140, %land.lhs.true120
  %minval147 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3982
  %50 = bitcast %struct.lang_decl** %minval147 to %union.tree_node**, !dbg !3982
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !3982
  %tobool148 = icmp eq %union.tree_node* %51, null, !dbg !3982
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3984
  br i1 %tobool148, label %if.else167, label %if.then149, !dbg !3984

if.then149:                                       ; preds = %if.end143
  %tobool150 = icmp eq i8 %allow_negative_idx, 0, !dbg !3985
  br i1 %tobool150, label %land.lhs.true151, label %if.end175, !dbg !3988

land.lhs.true151:                                 ; preds = %if.then149
  %bf.load155 = load i64, i64* %52, align 8, !dbg !3989
  %bf.cast1579 = and i64 %bf.load155, 65535, !dbg !3990
  %cmp158 = icmp eq i64 %bf.cast1579, 23, !dbg !3990
  br i1 %cmp158, label %land.lhs.true160, label %if.end175, !dbg !3991

land.lhs.true160:                                 ; preds = %land.lhs.true151
  %call163 = call i32 @tree_int_cst_lt(%union.tree_node* %call116, %union.tree_node* nonnull %51) #6, !dbg !3992
  %tobool164 = icmp eq i32 %call163, 0, !dbg !3992
  br i1 %tobool164, label %if.end175, label %cleanup179, !dbg !3993

if.else167:                                       ; preds = %if.end143, %if.end115
  %tobool168 = icmp eq i8 %allow_negative_idx, 0, !dbg !3994
  br i1 %tobool168, label %land.lhs.true169, label %if.end175, !dbg !3996

land.lhs.true169:                                 ; preds = %if.else167
  %call170 = call i32 @compare_tree_int(%union.tree_node* %call116, i64 0) #6, !dbg !3997
  %cmp171 = icmp slt i32 %call170, 0, !dbg !3998
  br i1 %cmp171, label %cleanup179, label %if.end175, !dbg !3999

if.end175:                                        ; preds = %land.lhs.true160, %if.then149, %if.else167, %land.lhs.true169, %land.lhs.true151
  %call176 = call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %8, %union.tree_node* %base.addr.1, %union.tree_node* %call116, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4000
  call void @llvm.dbg.value(metadata %union.tree_node* %call176, metadata !3870, metadata !DIExpression()), !dbg !4001
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4002
  store i32 %loc, i32* %53, align 8, !dbg !4002
  br label %cleanup179

cleanup179:                                       ; preds = %if.end95, %land.lhs.true160, %if.end29, %if.end24, %if.end17, %land.lhs.true169, %cleanup, %cleanup140, %cleanup76, %if.end175
  %retval.5 = phi %union.tree_node* [ null, %cleanup ], [ null, %cleanup140 ], [ %call176, %if.end175 ], [ null, %cleanup76 ], [ null, %if.end17 ], [ null, %if.end24 ], [ null, %if.end29 ], [ null, %if.end95 ], [ null, %land.lhs.true160 ], [ null, %land.lhs.true169 ], !dbg !3872
  ret %union.tree_node* %retval.5, !dbg !4003
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @maybe_fold_offset_to_address(i32 %loc, %union.tree_node* %addr, %union.tree_node* %offset, %union.tree_node* %orig_type) local_unnamed_addr #5 !dbg !4004 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4006, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !4007, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !4008, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !4009, metadata !DIExpression()), !dbg !4015
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4016
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !4016
  %1 = load i64*, i64** %0, align 8, !dbg !4016
  %bf.load = load i64, i64* %1, align 8, !dbg !4016
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4016
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !4016
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4016

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 12, !dbg !4016
  br i1 %cmp7, label %land.lhs.true, label %cond.true, !dbg !4016

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4016
  %bf.load9 = load i64, i64* %2, align 8, !dbg !4016
  %bf.cast1111 = and i64 %bf.load9, 65535, !dbg !4016
  %cmp12 = icmp eq i64 %bf.cast1111, 10, !dbg !4016
  br i1 %cmp12, label %cond.end, label %lor.lhs.false13, !dbg !4016

lor.lhs.false13:                                  ; preds = %land.lhs.true
  %cmp18 = icmp eq i64 %bf.cast1111, 12, !dbg !4016
  br i1 %cmp18, label %cond.end, label %cond.true, !dbg !4016

cond.true:                                        ; preds = %lor.lhs.false13, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 2113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4016
  br label %cond.end, !dbg !4016

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false13, %cond.true
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4017
  %3 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !4017
  %call = tail call %union.tree_node* @maybe_fold_offset_to_reference(i32 %loc, %union.tree_node* %addr, %union.tree_node* %offset, %union.tree_node* %3) #7, !dbg !4018
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4010, metadata !DIExpression()), !dbg !4015
  %cmp21 = icmp eq %union.tree_node* %call, null, !dbg !4019
  br i1 %cmp21, label %cleanup101, label %if.then, !dbg !4020

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !4011, metadata !DIExpression()), !dbg !4021
  %call22 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %addr) #6, !dbg !4022
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4011, metadata !DIExpression()), !dbg !4021
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4023
  %bf.load24 = load i64, i64* %4, align 8, !dbg !4023
  %bf.cast263 = and i64 %bf.load24, 65535, !dbg !4025
  %cmp27 = icmp eq i64 %bf.cast263, 121, !dbg !4025
  br i1 %cmp27, label %if.then28, label %if.end, !dbg !4026

if.then28:                                        ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4027
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4027
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4011, metadata !DIExpression()), !dbg !4021
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4028
  %bf.load30.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4030
  br label %if.end, !dbg !4031

if.end:                                           ; preds = %if.then28, %if.then
  %bf.load65 = phi i64 [ %bf.load30.pre, %if.then28 ], [ %bf.load24, %if.then ], !dbg !4030
  %orig.0 = phi %union.tree_node* [ %5, %if.then28 ], [ %call22, %if.then ], !dbg !4021
  call void @llvm.dbg.value(metadata %union.tree_node* %orig.0, metadata !4011, metadata !DIExpression()), !dbg !4021
  %bf.cast324 = and i64 %bf.load65, 65535, !dbg !4032
  %cmp33 = icmp eq i64 %bf.cast324, 45, !dbg !4032
  br i1 %cmp33, label %land.lhs.true51, label %lor.lhs.false34, !dbg !4033

lor.lhs.false34:                                  ; preds = %if.end
  %cmp39 = icmp eq i64 %bf.cast324, 41, !dbg !4034
  br i1 %cmp39, label %land.lhs.true40, label %if.end90, !dbg !4035

land.lhs.true40:                                  ; preds = %lor.lhs.false34
  %operands42 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4036
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands42, i64 1, !dbg !4036
  %6 = bitcast %union.tree_node** %arrayidx43 to %struct.tree_common**, !dbg !4036
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !4036
  %type45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !4036
  %8 = bitcast %union.tree_node** %type45 to i64**, !dbg !4036
  %9 = load i64*, i64** %8, align 8, !dbg !4036
  %bf.load47 = load i64, i64* %9, align 8, !dbg !4036
  %bf.cast496 = and i64 %bf.load47, 65535, !dbg !4037
  %cmp50 = icmp eq i64 %bf.cast496, 15, !dbg !4037
  br i1 %cmp50, label %land.lhs.true51, label %if.end90, !dbg !4038

land.lhs.true51:                                  ; preds = %land.lhs.true40, %if.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4039
  %bf.load53 = load i64, i64* %10, align 8, !dbg !4039
  %bf.cast557 = and i64 %bf.load53, 65535, !dbg !4040
  %cmp56 = icmp eq i64 %bf.cast557, 45, !dbg !4040
  br i1 %cmp56, label %land.lhs.true63, label %lor.lhs.false57, !dbg !4041

lor.lhs.false57:                                  ; preds = %land.lhs.true51
  %cmp62 = icmp eq i64 %bf.cast557, 41, !dbg !4042
  br i1 %cmp62, label %land.lhs.true63, label %if.end90, !dbg !4043

land.lhs.true63:                                  ; preds = %lor.lhs.false57, %land.lhs.true51
  br i1 %cmp33, label %cond.true69, label %cond.end74, !dbg !4044

cond.true69:                                      ; preds = %land.lhs.true63
  %operands71 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4045
  %11 = load %union.tree_node*, %union.tree_node** %operands71, align 8, !dbg !4045
  br label %cond.end74, !dbg !4044

cond.end74:                                       ; preds = %land.lhs.true63, %cond.true69
  %cond75 = phi %union.tree_node* [ %11, %cond.true69 ], [ %orig.0, %land.lhs.true63 ], !dbg !4044
  br i1 %cmp56, label %cond.true81, label %cond.end86, !dbg !4046

cond.true81:                                      ; preds = %cond.end74
  %operands83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4047
  %12 = load %union.tree_node*, %union.tree_node** %operands83, align 8, !dbg !4047
  br label %cond.end86, !dbg !4046

cond.end86:                                       ; preds = %cond.end74, %cond.true81
  %cond87 = phi %union.tree_node* [ %12, %cond.true81 ], [ %call, %cond.end74 ], !dbg !4046
  %call88 = tail call i32 @operand_equal_p(%union.tree_node* %cond75, %union.tree_node* %cond87, i32 0) #6, !dbg !4048
  %tobool = icmp eq i32 %call88, 0, !dbg !4048
  br i1 %tobool, label %cleanup101, label %if.end90, !dbg !4049

if.end90:                                         ; preds = %cond.end86, %lor.lhs.false57, %land.lhs.true40, %lor.lhs.false34
  %type92 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4050
  %13 = load %union.tree_node*, %union.tree_node** %type92, align 8, !dbg !4050
  %call93 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %13) #6, !dbg !4051
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4014, metadata !DIExpression()), !dbg !4021
  %call94 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %orig_type, %union.tree_node* %call93) #6, !dbg !4052
  %tobool95 = icmp eq i8 %call94, 0, !dbg !4052
  br i1 %tobool95, label %cleanup101, label %if.end97, !dbg !4054

if.end97:                                         ; preds = %if.end90
  %call98 = tail call %union.tree_node* @build_fold_addr_expr_with_type_loc(i32 %loc, %union.tree_node* nonnull %call, %union.tree_node* %call93) #6, !dbg !4055
  br label %cleanup101, !dbg !4056

cleanup101:                                       ; preds = %cond.end86, %if.end90, %cond.end, %if.end97
  %retval.1 = phi %union.tree_node* [ %call98, %if.end97 ], [ null, %cond.end86 ], [ null, %if.end90 ], [ null, %cond.end ], !dbg !4015
  ret %union.tree_node* %retval.1, !dbg !4057
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_with_type_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @maybe_fold_stmt_addition(i32 %loc, %union.tree_node* %res_type, %union.tree_node* %op0, %union.tree_node* %op1) local_unnamed_addr #5 !dbg !4058 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4060, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %res_type, metadata !4061, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !4062, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !4063, metadata !DIExpression()), !dbg !4077
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4078
  %bf.load = load i64, i64* %0, align 8, !dbg !4078
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4080
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4080
  br i1 %cmp, label %if.end, label %cleanup186, !dbg !4081

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4082
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4062, metadata !DIExpression()), !dbg !4077
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4083
  %bf.load2 = load i64, i64* %2, align 8, !dbg !4083
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !4084
  %cmp5 = icmp eq i64 %bf.cast42, 23, !dbg !4084
  br i1 %cmp5, label %while.cond.preheader, label %if.then6, !dbg !4085

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !4086

if.then6:                                         ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4087
  %bf.load8 = load i64, i64* %3, align 8, !dbg !4087
  %bf.cast109 = and i64 %bf.load8, 65535, !dbg !4088
  %cmp11 = icmp eq i64 %bf.cast109, 45, !dbg !4088
  br i1 %cmp11, label %land.lhs.true, label %if.end87, !dbg !4089

land.lhs.true:                                    ; preds = %if.then6
  %operands13 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4090
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 1, !dbg !4090
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !4090
  %call = tail call i32 @integer_zerop(%union.tree_node* %4) #6, !dbg !4091
  %tobool = icmp eq i32 %call, 0, !dbg !4091
  br i1 %tobool, label %if.end87, label %land.lhs.true15, !dbg !4092

land.lhs.true15:                                  ; preds = %land.lhs.true
  %bf.load17 = load i64, i64* %2, align 8, !dbg !4093
  %bf.cast1910 = and i64 %bf.load17, 65535, !dbg !4094
  %cmp20 = icmp eq i64 %bf.cast1910, 141, !dbg !4094
  br i1 %cmp20, label %land.lhs.true21, label %if.end87, !dbg !4095

land.lhs.true21:                                  ; preds = %land.lhs.true15
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4096
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !4096
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !4096
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 3, !dbg !4096
  %7 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4096
  %call23 = tail call i32 @host_integerp(%union.tree_node* %7, i32 1) #6, !dbg !4097
  %tobool24 = icmp eq i32 %call23, 0, !dbg !4097
  br i1 %tobool24, label %if.end87, label %if.then25, !dbg !4098

if.then25:                                        ; preds = %land.lhs.true21
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4099
  %8 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4099
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %8, align 8, !dbg !4099
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %9, metadata !4066, metadata !DIExpression()), !dbg !4100
  %call26 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %9) #7, !dbg !4101
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4101
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !4103

if.end29:                                         ; preds = %if.then25
  %call30 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %9) #7, !dbg !4104
  %cmp31 = icmp eq i32 %call30, 65, !dbg !4106
  br i1 %cmp31, label %land.lhs.true32, label %if.else, !dbg !4107

land.lhs.true32:                                  ; preds = %if.end29
  %call33 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %9) #7, !dbg !4108
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4108
  %bf.load35 = load i64, i64* %10, align 8, !dbg !4108
  %bf.cast3711 = and i64 %bf.load35, 65535, !dbg !4109
  %cmp38 = icmp eq i64 %bf.cast3711, 23, !dbg !4109
  br i1 %cmp38, label %land.lhs.true39, label %if.else, !dbg !4110

land.lhs.true39:                                  ; preds = %land.lhs.true32
  %call40 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %9) #7, !dbg !4111
  %11 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !4112
  %size_unit44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 3, !dbg !4112
  %12 = load %union.tree_node*, %union.tree_node** %size_unit44, align 8, !dbg !4112
  %call45 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call40, %union.tree_node* %12) #6, !dbg !4113
  %tobool46 = icmp eq i32 %call45, 0, !dbg !4113
  br i1 %tobool46, label %if.else, label %if.then47, !dbg !4114

if.then47:                                        ; preds = %land.lhs.true39
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4115
  %14 = load %union.tree_node*, %union.tree_node** %operands13, align 8, !dbg !4115
  %call53 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %9) #7, !dbg !4115
  %arrayidx56 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 2, !dbg !4115
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx56, align 8, !dbg !4115
  %arrayidx59 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 3, !dbg !4115
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !4115
  %call60 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %13, %union.tree_node* %14, %union.tree_node* %call53, %union.tree_node* %15, %union.tree_node* %16) #6, !dbg !4115
  %call61 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call60) #6, !dbg !4115
  br label %cleanup, !dbg !4116

if.else:                                          ; preds = %land.lhs.true39, %land.lhs.true32, %if.end29
  %17 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !4117
  %size_unit65 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %17, i64 0, i32 3, !dbg !4117
  %18 = load %union.tree_node*, %union.tree_node** %size_unit65, align 8, !dbg !4117
  %call66 = tail call i32 @integer_onep(%union.tree_node* %18) #6, !dbg !4119
  %tobool67 = icmp eq i32 %call66, 0, !dbg !4119
  br i1 %tobool67, label %cleanup, label %land.lhs.true68, !dbg !4120

land.lhs.true68:                                  ; preds = %if.else
  %call69 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %9) #7, !dbg !4121
  %cmp70 = icmp eq i32 %call69, 65, !dbg !4122
  br i1 %cmp70, label %cleanup, label %if.then71, !dbg !4123

if.then71:                                        ; preds = %land.lhs.true68
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4124
  %20 = load %union.tree_node*, %union.tree_node** %operands13, align 8, !dbg !4124
  %arrayidx79 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 2, !dbg !4124
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx79, align 8, !dbg !4124
  %arrayidx82 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 3, !dbg !4124
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx82, align 8, !dbg !4124
  %call83 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %19, %union.tree_node* %20, %union.tree_node* %op1, %union.tree_node* %21, %union.tree_node* %22) #6, !dbg !4124
  %call84 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call83) #6, !dbg !4124
  br label %cleanup, !dbg !4125

cleanup:                                          ; preds = %land.lhs.true68, %if.else, %if.then25, %if.then71, %if.then47
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then47 ], [ false, %if.then71 ], [ false, %if.then25 ], [ true, %if.else ], [ true, %land.lhs.true68 ]
  %retval.0 = phi %union.tree_node* [ %call61, %if.then47 ], [ %call84, %if.then71 ], [ null, %if.then25 ], [ undef, %if.else ], [ undef, %land.lhs.true68 ]
  br i1 %cleanup.dest.slot.0, label %if.end87, label %cleanup186

if.end87:                                         ; preds = %land.lhs.true21, %land.lhs.true, %cleanup, %land.lhs.true15, %if.then6
  br label %cleanup186, !dbg !4126

while.cond:                                       ; preds = %while.cond.preheader, %cleanup146
  %op1.addr.0 = phi %union.tree_node* [ %op1.addr.1, %cleanup146 ], [ %op1, %while.cond.preheader ]
  %op0.addr.0 = phi %union.tree_node* [ %op0.addr.1, %cleanup146 ], [ %1, %while.cond.preheader ], !dbg !4127
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.0, metadata !4062, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.0, metadata !4063, metadata !DIExpression()), !dbg !4077
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4128
  %bf.load90 = load i64, i64* %23, align 8, !dbg !4128
  %bf.cast923 = and i64 %bf.load90, 65535, !dbg !4129
  %cmp93 = icmp eq i64 %bf.cast923, 45, !dbg !4129
  br i1 %cmp93, label %while.body, label %while.end, !dbg !4086

while.body:                                       ; preds = %while.cond
  %operands95 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4130
  %24 = load %union.tree_node*, %union.tree_node** %operands95, align 8, !dbg !4130
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !4071, metadata !DIExpression()), !dbg !4131
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands95, i64 1, !dbg !4132
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx99, align 8, !dbg !4132
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !4073, metadata !DIExpression()), !dbg !4131
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4133
  %26 = bitcast %union.tree_node** %type101 to %struct.tree_type**, !dbg !4133
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !4133
  %size_unit103 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 3, !dbg !4134
  %28 = load %union.tree_node*, %union.tree_node** %size_unit103, align 8, !dbg !4134
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !4075, metadata !DIExpression()), !dbg !4131
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4135
  %bf.load105 = load i64, i64* %29, align 8, !dbg !4135
  %bf.cast1076 = and i64 %bf.load105, 65535, !dbg !4137
  %cmp108 = icmp eq i64 %bf.cast1076, 23, !dbg !4137
  br i1 %cmp108, label %if.end110, label %cleanup146, !dbg !4138

if.end110:                                        ; preds = %while.body
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4139
  %bf.load112 = load i64, i64* %30, align 8, !dbg !4139
  %bf.cast1147 = and i64 %bf.load112, 65535, !dbg !4141
  %cmp115 = icmp eq i64 %bf.cast1147, 23, !dbg !4141
  br i1 %cmp115, label %if.end117, label %cleanup146, !dbg !4142

if.end117:                                        ; preds = %if.end110
  %type119 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4143
  %31 = bitcast %union.tree_node** %type119 to %struct.tree_type**, !dbg !4143
  %32 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !4143
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 1, !dbg !4143
  %33 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !4143
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !4076, metadata !DIExpression()), !dbg !4131
  %tobool121 = icmp eq %union.tree_node* %33, null, !dbg !4144
  br i1 %tobool121, label %if.end142, label %if.then122, !dbg !4146

if.then122:                                       ; preds = %if.end117
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !4147
  %34 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !4147
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !4147
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !4076, metadata !DIExpression()), !dbg !4131
  %tobool124 = icmp eq %union.tree_node* %35, null, !dbg !4149
  br i1 %tobool124, label %if.end142, label %if.then125, !dbg !4151

if.then125:                                       ; preds = %if.then122
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4152
  %bf.load127 = load i64, i64* %36, align 8, !dbg !4152
  %bf.cast1298 = and i64 %bf.load127, 65535, !dbg !4155
  %cmp130 = icmp eq i64 %bf.cast1298, 23, !dbg !4155
  br i1 %cmp130, label %if.end132, label %cleanup146, !dbg !4156

if.end132:                                        ; preds = %if.then125
  %type134 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4157
  %37 = load %union.tree_node*, %union.tree_node** %type134, align 8, !dbg !4157
  %call135 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %37, %union.tree_node* %25) #6, !dbg !4157
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !4073, metadata !DIExpression()), !dbg !4131
  %call136 = tail call i32 @integer_zerop(%union.tree_node* nonnull %35) #6, !dbg !4158
  %tobool137 = icmp eq i32 %call136, 0, !dbg !4158
  br i1 %tobool137, label %if.then138, label %if.end142, !dbg !4160

if.then138:                                       ; preds = %if.end132
  %call139 = tail call %union.tree_node* @int_const_binop(i32 64, %union.tree_node* %call135, %union.tree_node* nonnull %35, i32 0) #6, !dbg !4161
  call void @llvm.dbg.value(metadata %union.tree_node* %call139, metadata !4073, metadata !DIExpression()), !dbg !4131
  br label %if.end142, !dbg !4162

if.end142:                                        ; preds = %if.end132, %if.then122, %if.end117, %if.then138
  %array_idx.2 = phi %union.tree_node* [ %25, %if.end117 ], [ %25, %if.then122 ], [ %call135, %if.end132 ], [ %call139, %if.then138 ], !dbg !4131
  call void @llvm.dbg.value(metadata %union.tree_node* %array_idx.2, metadata !4073, metadata !DIExpression()), !dbg !4131
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4163
  %call143 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %38, %union.tree_node* %array_idx.2) #6, !dbg !4163
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !4073, metadata !DIExpression()), !dbg !4131
  %call144 = tail call %union.tree_node* @int_const_binop(i32 65, %union.tree_node* %call143, %union.tree_node* %28, i32 0) #6, !dbg !4164
  call void @llvm.dbg.value(metadata %union.tree_node* %call144, metadata !4073, metadata !DIExpression()), !dbg !4131
  %call145 = tail call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %call144, %union.tree_node* %op1.addr.0, i32 0) #6, !dbg !4165
  call void @llvm.dbg.value(metadata %union.tree_node* %call145, metadata !4063, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !4062, metadata !DIExpression()), !dbg !4077
  br label %cleanup146, !dbg !4166

cleanup146:                                       ; preds = %if.then125, %if.end110, %while.body, %if.end142
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end142 ], [ false, %while.body ], [ false, %if.end110 ], [ false, %if.then125 ]
  %op1.addr.1 = phi %union.tree_node* [ %call145, %if.end142 ], [ %op1.addr.0, %while.body ], [ %op1.addr.0, %if.end110 ], [ %op1.addr.0, %if.then125 ]
  %op0.addr.1 = phi %union.tree_node* [ %24, %if.end142 ], [ %op0.addr.0, %while.body ], [ %op0.addr.0, %if.end110 ], [ %op0.addr.0, %if.then125 ], !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.1, metadata !4062, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.1, metadata !4063, metadata !DIExpression()), !dbg !4077
  br i1 %cleanup.dest.slot.1, label %while.cond, label %while.end, !llvm.loop !4167

while.end:                                        ; preds = %cleanup146, %while.cond
  %op1.addr.2 = phi %union.tree_node* [ %op1.addr.1, %cleanup146 ], [ %op1.addr.0, %while.cond ]
  %op0.addr.2 = phi %union.tree_node* [ %op0.addr.1, %cleanup146 ], [ %op0.addr.0, %while.cond ], !dbg !4127
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.2, metadata !4062, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.2, metadata !4063, metadata !DIExpression()), !dbg !4077
  %type154 = getelementptr inbounds %union.tree_node, %union.tree_node* %res_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4168
  %39 = load %union.tree_node*, %union.tree_node** %type154, align 8, !dbg !4168
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !4064, metadata !DIExpression()), !dbg !4077
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4169
  %bf.load156 = load i64, i64* %40, align 8, !dbg !4169
  %bf.cast1584 = and i64 %bf.load156, 65535, !dbg !4169
  %cmp159 = icmp eq i64 %bf.cast1584, 19, !dbg !4169
  br i1 %cmp159, label %land.lhs.true160, label %if.end173, !dbg !4171

land.lhs.true160:                                 ; preds = %while.end
  %type162 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4172
  %41 = bitcast %union.tree_node** %type162 to i64**, !dbg !4172
  %42 = load i64*, i64** %41, align 8, !dbg !4172
  %bf.load164 = load i64, i64* %42, align 8, !dbg !4172
  %bf.cast1665 = and i64 %bf.load164, 65535, !dbg !4173
  %cmp167 = icmp eq i64 %bf.cast1665, 15, !dbg !4173
  br i1 %cmp167, label %if.then168, label %if.end173, !dbg !4174

if.then168:                                       ; preds = %land.lhs.true160
  %type172 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !4175
  %43 = bitcast i64* %type172 to %union.tree_node**, !dbg !4175
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !4175
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !4064, metadata !DIExpression()), !dbg !4077
  br label %if.end173, !dbg !4176

if.end173:                                        ; preds = %if.then168, %land.lhs.true160, %while.end
  %ptd_type.0 = phi %union.tree_node* [ %44, %if.then168 ], [ %39, %land.lhs.true160 ], [ %39, %while.end ], !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %ptd_type.0, metadata !4064, metadata !DIExpression()), !dbg !4077
  %call174 = tail call fastcc %union.tree_node* @maybe_fold_offset_to_array_ref(i32 %loc, %union.tree_node* %op0.addr.2, %union.tree_node* %op1.addr.2, %union.tree_node* %ptd_type.0, i8 zeroext 1) #7, !dbg !4177
  call void @llvm.dbg.value(metadata %union.tree_node* %call174, metadata !4065, metadata !DIExpression()), !dbg !4077
  %tobool175 = icmp eq %union.tree_node* %call174, null, !dbg !4178
  br i1 %tobool175, label %if.then176, label %if.end180, !dbg !4180

if.then176:                                       ; preds = %if.end173
  %type178 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4181
  %45 = load %union.tree_node*, %union.tree_node** %type178, align 8, !dbg !4181
  %call179 = tail call fastcc %union.tree_node* @maybe_fold_offset_to_component_ref(i32 %loc, %union.tree_node* %45, %union.tree_node* %op0.addr.2, %union.tree_node* %op1.addr.2, %union.tree_node* %ptd_type.0) #7, !dbg !4182
  call void @llvm.dbg.value(metadata %union.tree_node* %call179, metadata !4065, metadata !DIExpression()), !dbg !4077
  br label %if.end180, !dbg !4183

if.end180:                                        ; preds = %if.end173, %if.then176
  %t.0 = phi %union.tree_node* [ %call174, %if.end173 ], [ %call179, %if.then176 ], !dbg !4077
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4065, metadata !DIExpression()), !dbg !4077
  %tobool181 = icmp eq %union.tree_node* %t.0, null, !dbg !4184
  br i1 %tobool181, label %cleanup186, label %if.then182, !dbg !4186

if.then182:                                       ; preds = %if.end180
  %call183 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %res_type, %union.tree_node* nonnull %t.0) #6, !dbg !4187
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !4065, metadata !DIExpression()), !dbg !4077
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4189
  store i32 %loc, i32* %46, align 8, !dbg !4189
  br label %cleanup186, !dbg !4190

cleanup186:                                       ; preds = %if.end180, %entry, %if.then182, %cleanup, %if.end87
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ null, %if.end87 ], [ null, %entry ], [ %call183, %if.then182 ], [ null, %if.end180 ], !dbg !4077
  ret %union.tree_node* %retval.1, !dbg !4191
}

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4192 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4197, metadata !DIExpression()), !dbg !4198
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4199
  %cmp = icmp eq i32 %call, 6, !dbg !4200
  %conv1 = zext i1 %cmp to i8, !dbg !4199
  ret i8 %conv1, !dbg !4201
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4202 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4206, metadata !DIExpression()), !dbg !4208
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %call, metadata !4207, metadata !DIExpression()), !dbg !4208
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !4210
  %cmp = icmp eq i32 %call1, 3, !dbg !4212
  br i1 %cmp, label %if.then, label %if.end, !dbg !4213

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !4214
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4214
  %bf.load = load i64, i64* %0, align 8, !dbg !4214
  %1 = trunc i64 %bf.load to i32, !dbg !4214
  %bf.cast = and i32 %1, 65535, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4207, metadata !DIExpression()), !dbg !4208
  br label %if.end, !dbg !4215

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4207, metadata !DIExpression()), !dbg !4208
  ret i32 %code.0, !dbg !4216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4217 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4221, metadata !DIExpression()), !dbg !4222
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !4223
  %cmp = icmp ugt i32 %call, 2, !dbg !4225
  br i1 %cmp, label %if.then, label %return, !dbg !4226

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !4227
  br label %return, !dbg !4228

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !4229
  ret %union.tree_node* %retval.0, !dbg !4230
}

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4231 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4233, metadata !DIExpression()), !dbg !4234
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4235
  ret %union.tree_node* %call, !dbg !4236
}

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @fold_stmt(%struct.gimple_stmt_iterator* %gsi) local_unnamed_addr #5 !dbg !4237 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4248, metadata !DIExpression()), !dbg !4249
  %call = tail call fastcc zeroext i8 @fold_stmt_1(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 0) #7, !dbg !4250
  ret i8 %call, !dbg !4251
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @fold_stmt_1(%struct.gimple_stmt_iterator* %gsi, i8 zeroext %inplace) unnamed_addr #5 !dbg !4252 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4256, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %inplace, metadata !4257, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 0, metadata !4258, metadata !DIExpression()), !dbg !4287
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4288
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4259, metadata !DIExpression()), !dbg !4287
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !4289
  switch i32 %call1, label %sw.epilog [
    i32 6, label %sw.bb
    i32 1, label %sw.bb18
    i32 8, label %for.cond.preheader
    i32 7, label %for.cond49.preheader
  ], !dbg !4290

for.cond49.preheader:                             ; preds = %entry
  br label %for.cond49, !dbg !4291

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !4292

sw.bb:                                            ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %call) #7, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %call2, metadata !4261, metadata !DIExpression()), !dbg !4294
  %call3 = tail call fastcc %union.tree_node* @fold_gimple_assign(%struct.gimple_stmt_iterator* %gsi) #7, !dbg !4295
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4264, metadata !DIExpression()), !dbg !4294
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !4296
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4265, metadata !DIExpression()), !dbg !4294
  %tobool = icmp eq %union.tree_node* %call3, null, !dbg !4297
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4299

land.lhs.true:                                    ; preds = %sw.bb
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4300
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4300
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4301
  %1 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !4301
  %call7 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !4302
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4302
  br i1 %tobool8, label %if.then, label %if.end, !dbg !4303

if.then:                                          ; preds = %land.lhs.true
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4304
  %call11 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %2, %union.tree_node* nonnull %call3) #6, !dbg !4304
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4264, metadata !DIExpression()), !dbg !4294
  br label %if.end, !dbg !4305

if.end:                                           ; preds = %land.lhs.true, %sw.bb, %if.then
  %new_rhs.0 = phi %union.tree_node* [ %call3, %land.lhs.true ], [ %call11, %if.then ], [ null, %sw.bb ], !dbg !4294
  call void @llvm.dbg.value(metadata %union.tree_node* %new_rhs.0, metadata !4264, metadata !DIExpression()), !dbg !4294
  %tobool12 = icmp eq %union.tree_node* %new_rhs.0, null, !dbg !4306
  br i1 %tobool12, label %sw.epilog, label %land.lhs.true13, !dbg !4308

land.lhs.true13:                                  ; preds = %if.end
  %tobool14 = icmp eq i8 %inplace, 0, !dbg !4309
  br i1 %tobool14, label %if.then16, label %lor.lhs.false, !dbg !4310

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4311
  %bf.load = load i64, i64* %3, align 8, !dbg !4311
  %4 = trunc i64 %bf.load to i32, !dbg !4311
  %bf.cast = and i32 %4, 65535, !dbg !4311
  %call15 = tail call i32 @get_gimple_rhs_num_ops(i32 %bf.cast) #6, !dbg !4312
  %cmp = icmp ult i32 %call15, %call2, !dbg !4313
  br i1 %cmp, label %if.then16, label %sw.epilog, !dbg !4314

if.then16:                                        ; preds = %land.lhs.true13, %lor.lhs.false
  tail call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* nonnull %new_rhs.0) #6, !dbg !4315
  call void @llvm.dbg.value(metadata i8 1, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %sw.epilog, !dbg !4317

sw.bb18:                                          ; preds = %entry
  %call19 = tail call fastcc zeroext i8 @fold_gimple_cond(%union.gimple_statement_d* %call) #7, !dbg !4318
  call void @llvm.dbg.value(metadata i8 %call19, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %sw.epilog, !dbg !4319

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4320
  %changed.1 = phi i8 [ %changed.3, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4260, metadata !DIExpression()), !dbg !4287
  %call23 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !4321
  %cmp24 = icmp ult i32 %i.0, %call23, !dbg !4322
  br i1 %cmp24, label %for.body, label %for.end, !dbg !4292

for.body:                                         ; preds = %for.cond
  %call26 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %i.0) #7, !dbg !4323
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4323
  %bf.load28 = load i64, i64* %5, align 8, !dbg !4323
  %bf.cast30 = and i64 %bf.load28, 65535, !dbg !4323
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast30, !dbg !4323
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4323
  %cmp31 = icmp eq i32 %6, 4, !dbg !4323
  br i1 %cmp31, label %if.then33, label %for.inc, !dbg !4324

if.then33:                                        ; preds = %for.body
  %call34 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %i.0) #7, !dbg !4325
  %call35 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %call34, i8 zeroext 0) #7, !dbg !4326
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !4266, metadata !DIExpression()), !dbg !4327
  %tobool36 = icmp eq %union.tree_node* %call35, null, !dbg !4328
  br i1 %tobool36, label %for.inc, label %if.then37, !dbg !4330

if.then37:                                        ; preds = %if.then33
  tail call fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %call, i32 %i.0, %union.tree_node* nonnull %call35) #7, !dbg !4331
  call void @llvm.dbg.value(metadata i8 1, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %for.inc, !dbg !4333

for.inc:                                          ; preds = %if.then33, %for.body, %if.then37
  %changed.3 = phi i8 [ %changed.1, %for.body ], [ 1, %if.then37 ], [ %changed.1, %if.then33 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !4258, metadata !DIExpression()), !dbg !4287
  %inc = add i32 %i.0, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4260, metadata !DIExpression()), !dbg !4287
  br label %for.cond, !dbg !4335, !llvm.loop !4336

for.end:                                          ; preds = %for.cond
  %changed.1.lcssa = phi i8 [ %changed.1, %for.cond ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  %tobool40 = icmp eq i8 %inplace, 0, !dbg !4338
  br i1 %tobool40, label %if.then41, label %sw.epilog, !dbg !4340

if.then41:                                        ; preds = %for.end
  %call42 = tail call fastcc zeroext i8 @fold_gimple_call(%struct.gimple_stmt_iterator* %gsi) #7, !dbg !4341
  %or451 = or i8 %changed.1.lcssa, %call42, !dbg !4342
  call void @llvm.dbg.value(metadata i8 %or451, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %sw.epilog, !dbg !4343

for.cond49:                                       ; preds = %for.cond49.preheader, %for.inc71
  %i.1 = phi i32 [ %inc72, %for.inc71 ], [ 0, %for.cond49.preheader ], !dbg !4344
  %changed.5 = phi i8 [ %changed.6, %for.inc71 ], [ 0, %for.cond49.preheader ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.5, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4260, metadata !DIExpression()), !dbg !4287
  %call50 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %call) #7, !dbg !4345
  %cmp51 = icmp ult i32 %i.1, %call50, !dbg !4346
  br i1 %cmp51, label %for.body53, label %for.cond74.preheader, !dbg !4291

for.cond74.preheader:                             ; preds = %for.cond49
  %changed.5.lcssa = phi i8 [ %changed.5, %for.cond49 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.5.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.5.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.5.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %for.cond74, !dbg !4347

for.body53:                                       ; preds = %for.cond49
  %call54 = tail call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %call, i32 %i.1) #7, !dbg !4348
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !4271, metadata !DIExpression()), !dbg !4349
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4350
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4350
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4275, metadata !DIExpression()), !dbg !4349
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4351
  %bf.load56 = load i64, i64* %9, align 8, !dbg !4351
  %bf.cast58 = and i64 %bf.load56, 65535, !dbg !4351
  %arrayidx60 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast58, !dbg !4351
  %10 = load i32, i32* %arrayidx60, align 4, !dbg !4351
  %cmp61 = icmp eq i32 %10, 4, !dbg !4351
  br i1 %cmp61, label %land.lhs.true63, label %for.inc71, !dbg !4353

land.lhs.true63:                                  ; preds = %for.body53
  %call64 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %8, i8 zeroext 1) #7, !dbg !4354
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !4275, metadata !DIExpression()), !dbg !4349
  %cmp65 = icmp eq %union.tree_node* %call64, null, !dbg !4355
  br i1 %cmp65, label %for.inc71, label %if.then67, !dbg !4356

if.then67:                                        ; preds = %land.lhs.true63
  store %union.tree_node* %call64, %union.tree_node** %7, align 8, !dbg !4357
  call void @llvm.dbg.value(metadata i8 1, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %for.inc71, !dbg !4359

for.inc71:                                        ; preds = %land.lhs.true63, %for.body53, %if.then67
  %changed.6 = phi i8 [ 1, %if.then67 ], [ %changed.5, %land.lhs.true63 ], [ %changed.5, %for.body53 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.6, metadata !4258, metadata !DIExpression()), !dbg !4287
  %inc72 = add i32 %i.1, 1, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %inc72, metadata !4260, metadata !DIExpression()), !dbg !4287
  br label %for.cond49, !dbg !4361, !llvm.loop !4362

for.cond74:                                       ; preds = %for.cond74.preheader, %for.inc100
  %i.2 = phi i32 [ %inc101, %for.inc100 ], [ 0, %for.cond74.preheader ], !dbg !4364
  %changed.7 = phi i8 [ %changed.8, %for.inc100 ], [ %changed.5.lcssa, %for.cond74.preheader ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.7, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !4260, metadata !DIExpression()), !dbg !4287
  %call75 = tail call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %call) #7, !dbg !4365
  %cmp76 = icmp ult i32 %i.2, %call75, !dbg !4366
  br i1 %cmp76, label %for.body78, label %sw.epilog.loopexit, !dbg !4347

for.body78:                                       ; preds = %for.cond74
  %call80 = tail call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %call, i32 %i.2) #7, !dbg !4367
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !4276, metadata !DIExpression()), !dbg !4368
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4369
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4369
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4280, metadata !DIExpression()), !dbg !4368
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4370
  %bf.load85 = load i64, i64* %13, align 8, !dbg !4370
  %bf.cast87 = and i64 %bf.load85, 65535, !dbg !4370
  %arrayidx89 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast87, !dbg !4370
  %14 = load i32, i32* %arrayidx89, align 4, !dbg !4370
  %cmp90 = icmp eq i32 %14, 4, !dbg !4370
  br i1 %cmp90, label %land.lhs.true92, label %for.inc100, !dbg !4372

land.lhs.true92:                                  ; preds = %for.body78
  %call93 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %12, i8 zeroext 0) #7, !dbg !4373
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4280, metadata !DIExpression()), !dbg !4368
  %cmp94 = icmp eq %union.tree_node* %call93, null, !dbg !4374
  br i1 %cmp94, label %for.inc100, label %if.then96, !dbg !4375

if.then96:                                        ; preds = %land.lhs.true92
  store %union.tree_node* %call93, %union.tree_node** %11, align 8, !dbg !4376
  call void @llvm.dbg.value(metadata i8 1, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %for.inc100, !dbg !4378

for.inc100:                                       ; preds = %land.lhs.true92, %for.body78, %if.then96
  %changed.8 = phi i8 [ 1, %if.then96 ], [ %changed.7, %land.lhs.true92 ], [ %changed.7, %for.body78 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.8, metadata !4258, metadata !DIExpression()), !dbg !4287
  %inc101 = add i32 %i.2, 1, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %inc101, metadata !4260, metadata !DIExpression()), !dbg !4287
  br label %for.cond74, !dbg !4380, !llvm.loop !4381

sw.epilog.loopexit:                               ; preds = %for.cond74
  %changed.7.lcssa = phi i8 [ %changed.7, %for.cond74 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.7.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.7.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.7.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %sw.epilog, !dbg !4383

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end, %for.end, %entry, %if.then41, %lor.lhs.false, %if.then16, %sw.bb18
  %changed.9 = phi i8 [ %call19, %sw.bb18 ], [ 1, %if.then16 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ %changed.1.lcssa, %for.end ], [ %or451, %if.then41 ], [ 0, %entry ], [ %changed.7.lcssa, %sw.epilog.loopexit ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.9, metadata !4258, metadata !DIExpression()), !dbg !4287
  %call103 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call103, metadata !4259, metadata !DIExpression()), !dbg !4287
  %call104 = tail call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %call103) #7, !dbg !4384
  %tobool105 = icmp eq i8 %call104, 0, !dbg !4384
  br i1 %tobool105, label %if.end125, label %if.then106, !dbg !4385

if.then106:                                       ; preds = %sw.epilog
  %call108 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call103) #6, !dbg !4386
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !4281, metadata !DIExpression()), !dbg !4387
  %tobool109 = icmp eq %union.tree_node* %call108, null, !dbg !4388
  br i1 %tobool109, label %if.end125, label %land.lhs.true110, !dbg !4389

land.lhs.true110:                                 ; preds = %if.then106
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4390
  %bf.load112 = load i64, i64* %15, align 8, !dbg !4390
  %bf.cast114 = and i64 %bf.load112, 65535, !dbg !4390
  %arrayidx116 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast114, !dbg !4390
  %16 = load i32, i32* %arrayidx116, align 4, !dbg !4390
  %cmp117 = icmp eq i32 %16, 4, !dbg !4390
  br i1 %cmp117, label %if.then119, label %if.end125, !dbg !4391

if.then119:                                       ; preds = %land.lhs.true110
  %call120 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* nonnull %call108, i8 zeroext 1) #7, !dbg !4392
  call void @llvm.dbg.value(metadata %union.tree_node* %call120, metadata !4284, metadata !DIExpression()), !dbg !4393
  %tobool121 = icmp eq %union.tree_node* %call120, null, !dbg !4394
  br i1 %tobool121, label %if.end125, label %if.then122, !dbg !4396

if.then122:                                       ; preds = %if.then119
  tail call void @gimple_set_lhs(%union.gimple_statement_d* %call103, %union.tree_node* nonnull %call120) #6, !dbg !4397
  call void @llvm.dbg.value(metadata i8 1, metadata !4258, metadata !DIExpression()), !dbg !4287
  br label %if.end125, !dbg !4399

if.end125:                                        ; preds = %if.then119, %if.then106, %sw.epilog, %land.lhs.true110, %if.then122
  %changed.12 = phi i8 [ %changed.9, %sw.epilog ], [ %changed.9, %land.lhs.true110 ], [ %changed.9, %if.then106 ], [ 1, %if.then122 ], [ %changed.9, %if.then119 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %changed.12, metadata !4258, metadata !DIExpression()), !dbg !4287
  ret i8 %changed.12, !dbg !4400
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @fold_stmt_inplace(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !4401 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4405, metadata !DIExpression()), !dbg !4408
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4409
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4409
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4406, metadata !DIExpression(DW_OP_deref)), !dbg !4408
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %gsi, %union.gimple_statement_d* %stmt) #6, !dbg !4410
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4406, metadata !DIExpression(DW_OP_deref)), !dbg !4408
  %call = call fastcc zeroext i8 @fold_stmt_1(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #7, !dbg !4411
  call void @llvm.dbg.value(metadata i8 %call, metadata !4407, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4406, metadata !DIExpression(DW_OP_deref)), !dbg !4408
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4412
  %cmp = icmp eq %union.gimple_statement_d* %call1, %stmt, !dbg !4412
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4412

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 3178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4412
  br label %cond.end, !dbg !4412

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4413
  ret i8 %call, !dbg !4414
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4415 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4419, metadata !DIExpression()), !dbg !4420
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4421
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4421
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4422
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4422
  ret %union.gimple_statement_d* %1, !dbg !4423
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_fold_all_builtins() #5 !dbg !4424 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 0, metadata !4428, metadata !DIExpression()), !dbg !4441
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4442
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4442
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4442
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4442
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4442
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !4443
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4444
  br label %for.cond, !dbg !4442

for.cond:                                         ; preds = %for.end, %entry
  %5 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.end ], !dbg !4445
  %todoflags.0 = phi i32 [ 0, %entry ], [ %todoflags.1.lcssa, %for.end ], !dbg !4446
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.end ]
  %cfg_changed.0 = phi i8 [ 0, %entry ], [ %cfg_changed.1.lcssa, %for.end ], !dbg !4447
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4448
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4448
  call void @llvm.dbg.value(metadata i8 %cfg_changed.0, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4427, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.0, metadata !4428, metadata !DIExpression()), !dbg !4441
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !4445
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4445
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !4445
  br i1 %cmp, label %for.end93, label %for.body, !dbg !4442

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4449
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4450
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !4450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4450
  br label %for.cond3, !dbg !4451

for.cond3:                                        ; preds = %cleanup, %for.body
  %todoflags.1 = phi i32 [ %todoflags.0, %for.body ], [ %todoflags.3, %cleanup ], !dbg !4446
  %cfg_changed.1 = phi i8 [ %cfg_changed.0, %for.body ], [ %cfg_changed.3, %cleanup ], !dbg !4447
  call void @llvm.dbg.value(metadata i8 %cfg_changed.1, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.1, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4452
  %tobool = icmp eq i8 %call, 0, !dbg !4453
  br i1 %tobool, label %for.body4, label %for.end, !dbg !4454

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4455
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !4433, metadata !DIExpression()), !dbg !4456
  %call6 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5) #7, !dbg !4457
  %cmp7 = icmp eq i32 %call6, 8, !dbg !4459
  br i1 %cmp7, label %if.end, label %if.then, !dbg !4460

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4461
  br label %cleanup, !dbg !4463, !llvm.loop !4464

if.end:                                           ; preds = %for.body4
  %call8 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call5) #7, !dbg !4466
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4438, metadata !DIExpression()), !dbg !4456
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !4467
  br i1 %tobool9, label %if.then11, label %lor.lhs.false, !dbg !4469

lor.lhs.false:                                    ; preds = %if.end
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 5, !dbg !4470
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !4470
  %bf.clear = and i32 %bf.load, 6144, !dbg !4470
  %cmp10 = icmp eq i32 %bf.clear, 6144, !dbg !4471
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !4472

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4473
  br label %cleanup, !dbg !4475, !llvm.loop !4464

if.end12:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !4440, metadata !DIExpression(DW_OP_constu, 2047, DW_OP_and, DW_OP_stack_value)), !dbg !4456
  %call16 = call fastcc %union.tree_node* @ccp_fold_builtin(%union.gimple_statement_d* %call5) #7, !dbg !4476
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4439, metadata !DIExpression()), !dbg !4456
  %cond = icmp eq %union.tree_node* %call16, null, !dbg !4477
  br i1 %cond, label %if.then22, label %if.then18, !dbg !4477

if.then18:                                        ; preds = %if.end12
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4478
  call void @gimple_remove_stmt_histograms(%struct.function* %7, %union.gimple_statement_d* %call5) #6, !dbg !4480
  br label %if.end37, !dbg !4481

if.then22:                                        ; preds = %if.end12
  %bf.load25 = load i32, i32* %built_in_class, align 8, !dbg !4482
  %bf.clear26 = and i32 %bf.load25, 2047, !dbg !4482
  switch i32 %bf.clear26, label %sw.default [
    i32 428, label %sw.bb
    i32 527, label %sw.bb27
    i32 515, label %sw.bb32
    i32 514, label %sw.bb32
    i32 513, label %sw.bb32
  ], !dbg !4484

sw.bb:                                            ; preds = %if.then22
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4485
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4439, metadata !DIExpression()), !dbg !4456
  br label %if.end37, !dbg !4487

sw.bb27:                                          ; preds = %if.then22
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  %call28 = call fastcc %union.tree_node* @optimize_stack_restore(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4488
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4439, metadata !DIExpression()), !dbg !4456
  %tobool29 = icmp eq %union.tree_node* %call28, null, !dbg !4489
  br i1 %tobool29, label %if.end31, label %if.end37, !dbg !4491

if.end31:                                         ; preds = %sw.bb27
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4492
  br label %cleanup, !dbg !4493, !llvm.loop !4464

sw.bb32:                                          ; preds = %if.then22, %if.then22, %if.then22
  %call33 = call fastcc %union.tree_node* @optimize_stdarg_builtin(%union.gimple_statement_d* %call5) #7, !dbg !4494
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !4439, metadata !DIExpression()), !dbg !4456
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !4495
  br i1 %tobool34, label %sw.default, label %if.end37, !dbg !4497

sw.default:                                       ; preds = %sw.bb32, %if.then22
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4498
  br label %cleanup, !dbg !4499, !llvm.loop !4464

if.end37:                                         ; preds = %sw.bb27, %sw.bb32, %if.then18, %sw.bb
  %result.1 = phi %union.tree_node* [ %call16, %if.then18 ], [ %8, %sw.bb ], [ %call28, %sw.bb27 ], [ %call33, %sw.bb32 ], !dbg !4456
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !4439, metadata !DIExpression()), !dbg !4456
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4500
  %tobool38 = icmp eq %struct._IO_FILE* %9, null, !dbg !4500
  br i1 %tobool38, label %if.end42, label %land.lhs.true, !dbg !4502

land.lhs.true:                                    ; preds = %if.end37
  %10 = load i32, i32* @dump_flags, align 4, !dbg !4503
  %and = and i32 %10, 8, !dbg !4504
  %tobool39 = icmp eq i32 %and, 0, !dbg !4504
  br i1 %tobool39, label %if.end42, label %if.then40, !dbg !4505

if.then40:                                        ; preds = %land.lhs.true
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4506
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4508
  %12 = load i32, i32* @dump_flags, align 4, !dbg !4509
  call void @print_gimple_stmt(%struct._IO_FILE* %11, %union.gimple_statement_d* %call5, i32 0, i32 %12) #6, !dbg !4510
  br label %if.end42, !dbg !4511

if.end42:                                         ; preds = %land.lhs.true, %if.end37, %if.then40
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !4437, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  %call43 = call zeroext i8 @update_call_from_tree(%struct.gimple_stmt_iterator* nonnull %i, %union.tree_node* %result.1) #6, !dbg !4512
  %tobool44 = icmp eq i8 %call43, 0, !dbg !4512
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !4514

if.then45:                                        ; preds = %if.end42
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gimplify_and_update_call_from_tree(%struct.gimple_stmt_iterator* nonnull %i, %union.tree_node* %result.1) #7, !dbg !4515
  %or = or i32 %todoflags.1, 2097152, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %or, metadata !4428, metadata !DIExpression()), !dbg !4441
  br label %if.end46, !dbg !4518

if.end46:                                         ; preds = %if.end42, %if.then45
  %todoflags.2 = phi i32 [ %todoflags.1, %if.end42 ], [ %or, %if.then45 ], !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.2, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  %call47 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4519
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call47, metadata !4433, metadata !DIExpression()), !dbg !4456
  call fastcc void @update_stmt(%union.gimple_statement_d* %call47) #7, !dbg !4520
  %call48 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %call5, %union.gimple_statement_d* %call47) #6, !dbg !4521
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4521
  br i1 %tobool49, label %if.end55, label %land.lhs.true50, !dbg !4523

land.lhs.true50:                                  ; preds = %if.end46
  %call51 = call zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* %bb.0) #6, !dbg !4524
  %tobool53 = icmp eq i8 %call51, 0, !dbg !4524
  %spec.select = select i1 %tobool53, i8 %cfg_changed.1, i8 1, !dbg !4525
  br label %if.end55, !dbg !4525

if.end55:                                         ; preds = %if.end46, %land.lhs.true50
  %cfg_changed.2 = phi i8 [ %cfg_changed.1, %if.end46 ], [ %spec.select, %land.lhs.true50 ], !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.2, metadata !4426, metadata !DIExpression()), !dbg !4441
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4526
  %tobool56 = icmp eq %struct._IO_FILE* %13, null, !dbg !4526
  br i1 %tobool56, label %if.end63, label %land.lhs.true57, !dbg !4528

land.lhs.true57:                                  ; preds = %if.end55
  %14 = load i32, i32* @dump_flags, align 4, !dbg !4529
  %and58 = and i32 %14, 8, !dbg !4530
  %tobool59 = icmp eq i32 %and58, 0, !dbg !4530
  br i1 %tobool59, label %if.end63, label %if.then60, !dbg !4531

if.then60:                                        ; preds = %land.lhs.true57
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4532
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4534
  %16 = load i32, i32* @dump_flags, align 4, !dbg !4535
  call void @print_gimple_stmt(%struct._IO_FILE* %15, %union.gimple_statement_d* %call47, i32 0, i32 %16) #6, !dbg !4536
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4537
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4538
  br label %if.end63, !dbg !4539

if.end63:                                         ; preds = %land.lhs.true57, %if.end55, %if.then60
  %call64 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call47) #7, !dbg !4540
  %cmp65 = icmp eq i32 %call64, 8, !dbg !4542
  br i1 %cmp65, label %if.end68, label %if.then67, !dbg !4543

if.then67:                                        ; preds = %if.end63
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4544
  br label %cleanup, !dbg !4546, !llvm.loop !4464

if.end68:                                         ; preds = %if.end63
  %call69 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call47) #7, !dbg !4547
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !4438, metadata !DIExpression()), !dbg !4456
  %tobool70 = icmp eq %union.tree_node* %call69, null, !dbg !4548
  br i1 %tobool70, label %if.then86, label %lor.lhs.false71, !dbg !4550

lor.lhs.false71:                                  ; preds = %if.end68
  %built_in_class73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call69, i64 0, i32 0, i32 5, !dbg !4551
  %bf.load74 = load i32, i32* %built_in_class73, align 8, !dbg !4551
  %bf.clear76 = and i32 %bf.load74, 6144, !dbg !4551
  %cmp77 = icmp eq i32 %bf.clear76, 6144, !dbg !4552
  br i1 %cmp77, label %lor.lhs.false79, label %if.then86, !dbg !4553

lor.lhs.false79:                                  ; preds = %lor.lhs.false71
  %18 = xor i32 %bf.load74, %bf.load, !dbg !4554
  %19 = and i32 %18, 2047, !dbg !4554
  %cmp84 = icmp eq i32 %19, 0, !dbg !4554
  br i1 %cmp84, label %if.then86, label %cleanup, !dbg !4555

if.then86:                                        ; preds = %lor.lhs.false71, %if.end68, %lor.lhs.false79
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4443
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4556
  br label %cleanup, !dbg !4556

cleanup:                                          ; preds = %lor.lhs.false79, %if.then86, %if.then67, %sw.default, %if.end31, %if.then11, %if.then
  %todoflags.3 = phi i32 [ %todoflags.1, %if.then ], [ %todoflags.1, %if.then11 ], [ %todoflags.2, %if.then67 ], [ %todoflags.1, %sw.default ], [ %todoflags.1, %if.end31 ], [ %todoflags.2, %if.then86 ], [ %todoflags.2, %lor.lhs.false79 ], !dbg !4446
  %cfg_changed.3 = phi i8 [ %cfg_changed.1, %if.then ], [ %cfg_changed.1, %if.then11 ], [ %cfg_changed.2, %if.then67 ], [ %cfg_changed.1, %sw.default ], [ %cfg_changed.1, %if.end31 ], [ %cfg_changed.2, %if.then86 ], [ %cfg_changed.2, %lor.lhs.false79 ], !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.3, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.3, metadata !4428, metadata !DIExpression()), !dbg !4441
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  %todoflags.1.lcssa = phi i32 [ %todoflags.1, %for.cond3 ], !dbg !4446
  %cfg_changed.1.lcssa = phi i8 [ %cfg_changed.1, %for.cond3 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %todoflags.1.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.1.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.1.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.1.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.1.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.1.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4557
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4445
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4558
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !4445
  br label %for.cond, !dbg !4445, !llvm.loop !4559

for.end93:                                        ; preds = %for.cond
  %todoflags.0.lcssa = phi i32 [ %todoflags.0, %for.cond ], !dbg !4446
  %cfg_changed.0.lcssa = phi i8 [ %cfg_changed.0, %for.cond ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %todoflags.0.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.0.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %todoflags.0.lcssa, metadata !4428, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8 %cfg_changed.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4441
  %tobool94 = icmp eq i8 %cfg_changed.0.lcssa, 0, !dbg !4561
  %or96 = or i32 %todoflags.0.lcssa, 32, !dbg !4563
  %spec.select1 = select i1 %tobool94, i32 %todoflags.0.lcssa, i32 %or96, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4428, metadata !DIExpression()), !dbg !4441
  ret i32 %spec.select1, !dbg !4565
}

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc { i32, %union.tree_node* } @get_default_value(%union.tree_node* %var) unnamed_addr #5 !dbg !4566 {
entry:
  %retval = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4570, metadata !DIExpression()), !dbg !4578
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4579
  %0 = bitcast i32* %var1 to %union.tree_node**, !dbg !4579
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4579
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4571, metadata !DIExpression()), !dbg !4578
  %2 = bitcast %struct.prop_value_d* %retval to i8*, !dbg !4580
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !4580
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4581
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4581
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !4581
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !4573, metadata !DIExpression()), !dbg !4578
  %call = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %4) #7, !dbg !4582
  %tobool = icmp eq i8 %call, 0, !dbg !4582
  br i1 %tobool, label %if.else8, label %if.then, !dbg !4583

if.then:                                          ; preds = %entry
  %call3 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %1) #6, !dbg !4584
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4584
  br i1 %tobool4, label %if.else, label %land.lhs.true, !dbg !4587

land.lhs.true:                                    ; preds = %if.then
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4588
  %bf.load = load i64, i64* %5, align 8, !dbg !4588
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4589
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !4589
  br i1 %cmp, label %if.else, label %if.then6, !dbg !4590

if.then6:                                         ; preds = %land.lhs.true
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !4591
  store i32 1, i32* %lattice_val, align 8, !dbg !4592
  br label %if.end47, !dbg !4593

if.else:                                          ; preds = %land.lhs.true, %if.then
  %lattice_val7 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !4594
  store i32 3, i32* %lattice_val7, align 8, !dbg !4595
  br label %if.end47

if.else8:                                         ; preds = %entry
  %call9 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %4) #7, !dbg !4596
  %tobool11 = icmp eq i8 %call9, 0, !dbg !4596
  br i1 %tobool11, label %lor.lhs.false, label %if.then23, !dbg !4597

lor.lhs.false:                                    ; preds = %if.else8
  %call12 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %4) #7, !dbg !4598
  %tobool14 = icmp eq i8 %call12, 0, !dbg !4598
  br i1 %tobool14, label %lor.lhs.false19, label %land.lhs.true15, !dbg !4599

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %call16 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %4) #7, !dbg !4600
  %cmp17 = icmp eq %union.tree_node* %call16, null, !dbg !4601
  br i1 %cmp17, label %lor.lhs.false19, label %if.then23, !dbg !4602

lor.lhs.false19:                                  ; preds = %land.lhs.true15, %lor.lhs.false
  %call20 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %4) #7, !dbg !4603
  %cmp21 = icmp eq i32 %call20, 16, !dbg !4604
  br i1 %cmp21, label %if.then23, label %if.else44, !dbg !4605

if.then23:                                        ; preds = %land.lhs.true15, %if.else8, %lor.lhs.false19
  %call24 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %4) #6, !dbg !4606
  %tobool26 = icmp eq i8 %call24, 0, !dbg !4606
  br i1 %tobool26, label %if.else41, label %land.lhs.true27, !dbg !4608

land.lhs.true27:                                  ; preds = %if.then23
  %call28 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %4) #7, !dbg !4609
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4609
  %bf.load30 = load i64, i64* %6, align 8, !dbg !4609
  %bf.cast32 = and i64 %bf.load30, 65535, !dbg !4609
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast32, !dbg !4609
  %7 = load i32, i32* %arrayidx, align 4, !dbg !4609
  %cmp33 = icmp eq i32 %7, 3, !dbg !4609
  br i1 %cmp33, label %land.lhs.true35, label %if.else41, !dbg !4610

land.lhs.true35:                                  ; preds = %land.lhs.true27
  %call36 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %4) #7, !dbg !4611
  %call37 = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %call36) #7, !dbg !4612
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !4574, metadata !DIExpression()), !dbg !4613
  %tobool38 = icmp eq %union.tree_node* %call37, null, !dbg !4614
  br i1 %tobool38, label %if.else41, label %if.then39, !dbg !4615

if.then39:                                        ; preds = %land.lhs.true35
  %lattice_val40 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !4616
  store i32 2, i32* %lattice_val40, align 8, !dbg !4618
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 1, !dbg !4619
  store %union.tree_node* %call37, %union.tree_node** %value, align 8, !dbg !4620
  br label %if.end47, !dbg !4621

if.else41:                                        ; preds = %land.lhs.true35, %if.then23, %land.lhs.true27
  %lattice_val42 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !4622
  store i32 1, i32* %lattice_val42, align 8, !dbg !4623
  br label %if.end47

if.else44:                                        ; preds = %lor.lhs.false19
  %lattice_val45 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !4624
  store i32 3, i32* %lattice_val45, align 8, !dbg !4626
  br label %if.end47

if.end47:                                         ; preds = %if.else44, %if.else41, %if.then39, %if.then6, %if.else
  %8 = bitcast %struct.prop_value_d* %retval to { i32, %union.tree_node* }*, !dbg !4627
  %9 = load { i32, %union.tree_node* }, { i32, %union.tree_node* }* %8, align 8, !dbg !4627
  ret { i32, %union.tree_node* } %9, !dbg !4627
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc void @canonicalize_float_value(%struct.prop_value_d* %val) unnamed_addr #5 !dbg !4628 {
entry:
  %d = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %val, metadata !4632, metadata !DIExpression()), !dbg !4636
  %0 = bitcast %struct.real_value* %d to i8*, !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4637
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 0, !dbg !4638
  %1 = load i32, i32* %lattice_val, align 8, !dbg !4638
  %cmp = icmp eq i32 %1, 2, !dbg !4640
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !4641

lor.lhs.false:                                    ; preds = %entry
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 1, !dbg !4642
  %2 = bitcast %union.tree_node** %value to i64**, !dbg !4642
  %3 = load i64*, i64** %2, align 8, !dbg !4642
  %bf.load = load i64, i64* %3, align 8, !dbg !4642
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4643
  %cmp1 = icmp eq i64 %bf.cast2, 24, !dbg !4643
  br i1 %cmp1, label %if.end, label %cleanup, !dbg !4644

if.end:                                           ; preds = %lor.lhs.false
  %real_cst_ptr = getelementptr inbounds i64, i64* %3, i64 3, !dbg !4645
  %4 = bitcast i64* %real_cst_ptr to i8**, !dbg !4645
  %5 = load i8*, i8** %4, align 8, !dbg !4645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %5, i64 32, i1 false), !dbg !4645
  %type4 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !4646
  %6 = bitcast i64* %type4 to %union.tree_node**, !dbg !4646
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4646
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4634, metadata !DIExpression()), !dbg !4636
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4647
  %bf.load6 = load i64, i64* %8, align 8, !dbg !4647
  %bf.cast83 = and i64 %bf.load6, 65535, !dbg !4647
  %cmp9 = icmp eq i64 %bf.cast83, 14, !dbg !4647
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !4647

cond.true:                                        ; preds = %if.end
  %call = tail call i32 @vector_type_mode(%union.tree_node* %7) #6, !dbg !4647
  br label %cond.end, !dbg !4647

cond.false:                                       ; preds = %if.end
  %type10 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !4647
  %mode11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !4647
  %bf.load12 = load i32, i32* %mode11, align 4, !dbg !4647
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4647
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4647
  br label %cond.end, !dbg !4647

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear13, %cond.false ], !dbg !4647
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4633, metadata !DIExpression()), !dbg !4636
  %idxprom = zext i32 %cond to i64, !dbg !4648
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4648
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4648
  %cmp14 = icmp eq i8 %9, 8, !dbg !4648
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false16, !dbg !4648

lor.lhs.false16:                                  ; preds = %cond.end
  %cmp20 = icmp eq i8 %9, 9, !dbg !4648
  br i1 %cmp20, label %land.lhs.true, label %lor.lhs.false22, !dbg !4648

lor.lhs.false22:                                  ; preds = %lor.lhs.false16
  %cmp26 = icmp eq i8 %9, 11, !dbg !4648
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false28, !dbg !4648

lor.lhs.false28:                                  ; preds = %lor.lhs.false22
  %cmp32 = icmp eq i8 %9, 17, !dbg !4648
  br i1 %cmp32, label %land.lhs.true, label %land.lhs.true103, !dbg !4648

land.lhs.true:                                    ; preds = %lor.lhs.false28, %lor.lhs.false22, %lor.lhs.false16, %cond.end
  br i1 %cmp14, label %cond.end50, label %lor.lhs.false39, !dbg !4648

lor.lhs.false39:                                  ; preds = %land.lhs.true
  %cmp43 = icmp eq i8 %9, 9, !dbg !4648
  br i1 %cmp43, label %cond.end50, label %cond.false46, !dbg !4648

cond.false46:                                     ; preds = %lor.lhs.false39
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4648
  %10 = load i8, i8* %arrayidx48, align 1, !dbg !4648
  %.pre = zext i8 %10 to i64, !dbg !4648
  %arrayidx53.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !4650
  %.pre4 = load i8, i8* %arrayidx53.phi.trans.insert, align 1, !dbg !4648
  br label %cond.end50, !dbg !4648

cond.end50:                                       ; preds = %land.lhs.true, %lor.lhs.false39, %cond.false46
  %11 = phi i8 [ 8, %land.lhs.true ], [ 9, %lor.lhs.false39 ], [ %.pre4, %cond.false46 ], !dbg !4648
  %cmp55 = icmp eq i8 %11, 9, !dbg !4648
  br i1 %cmp55, label %cond.true57, label %cond.false76, !dbg !4648

cond.true57:                                      ; preds = %cond.end50
  br i1 %cmp14, label %cond.end74, label %lor.lhs.false63, !dbg !4648

lor.lhs.false63:                                  ; preds = %cond.true57
  %cmp67 = icmp eq i8 %9, 9, !dbg !4648
  br i1 %cmp67, label %cond.end74, label %cond.false70, !dbg !4648

cond.false70:                                     ; preds = %lor.lhs.false63
  %arrayidx72 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4648
  %12 = load i8, i8* %arrayidx72, align 1, !dbg !4648
  %conv73 = zext i8 %12 to i32, !dbg !4648
  br label %cond.end74, !dbg !4648

cond.end74:                                       ; preds = %cond.true57, %lor.lhs.false63, %cond.false70
  %cond75 = phi i32 [ %conv73, %cond.false70 ], [ %cond, %lor.lhs.false63 ], [ %cond, %cond.true57 ], !dbg !4648
  br label %cond.end96, !dbg !4648

cond.false76:                                     ; preds = %cond.end50
  br i1 %cmp14, label %cond.end93, label %lor.lhs.false82, !dbg !4648

lor.lhs.false82:                                  ; preds = %cond.false76
  %cmp86 = icmp eq i8 %9, 9, !dbg !4648
  br i1 %cmp86, label %cond.end93, label %cond.false89, !dbg !4648

cond.false89:                                     ; preds = %lor.lhs.false82
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4648
  %13 = load i8, i8* %arrayidx91, align 1, !dbg !4648
  %conv92 = zext i8 %13 to i32, !dbg !4648
  br label %cond.end93, !dbg !4648

cond.end93:                                       ; preds = %cond.false76, %lor.lhs.false82, %cond.false89
  %cond94 = phi i32 [ %conv92, %cond.false89 ], [ %cond, %lor.lhs.false82 ], [ %cond, %cond.false76 ], !dbg !4648
  br label %cond.end96, !dbg !4648

cond.end96:                                       ; preds = %cond.end93, %cond.end74
  %cond97.in = phi i32 [ %cond75, %cond.end74 ], [ %cond94, %cond.end93 ]
  %cond97 = add i32 %cond97.in, -38, !dbg !4648
  %idxprom98 = zext i32 %cond97 to i64, !dbg !4648
  %arrayidx99 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom98, !dbg !4648
  %14 = load %struct.real_format*, %struct.real_format** %arrayidx99, align 8, !dbg !4648
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %14, i64 0, i32 14, !dbg !4648
  %15 = load i8, i8* %has_signed_zero, align 1, !dbg !4648
  %tobool = icmp ne i8 %15, 0, !dbg !4648
  %16 = load i32, i32* @flag_signed_zeros, align 4, !dbg !4648
  %tobool102 = icmp ne i32 %16, 0, !dbg !4648
  %or.cond = and i1 %tobool, %tobool102, !dbg !4648
  br i1 %or.cond, label %if.end110, label %land.lhs.true103, !dbg !4648

land.lhs.true103:                                 ; preds = %cond.end96, %lor.lhs.false28
  call void @llvm.dbg.value(metadata %struct.real_value* %d, metadata !4635, metadata !DIExpression(DW_OP_deref)), !dbg !4636
  %call104 = call zeroext i8 @real_isnegzero(%struct.real_value* nonnull %d) #6, !dbg !4651
  %tobool106 = icmp eq i8 %call104, 0, !dbg !4651
  br i1 %tobool106, label %if.end110, label %if.then107, !dbg !4652

if.then107:                                       ; preds = %land.lhs.true103
  %call108 = call %union.tree_node* @build_real(%union.tree_node* %7, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst0) #6, !dbg !4653
  store %union.tree_node* %call108, %union.tree_node** %value, align 8, !dbg !4655
  br label %cleanup, !dbg !4656

if.end110:                                        ; preds = %land.lhs.true103, %cond.end96
  br i1 %cmp14, label %land.lhs.true134, label %lor.lhs.false116, !dbg !4657

lor.lhs.false116:                                 ; preds = %if.end110
  %cmp120 = icmp eq i8 %9, 9, !dbg !4657
  br i1 %cmp120, label %land.lhs.true134, label %lor.lhs.false122, !dbg !4657

lor.lhs.false122:                                 ; preds = %lor.lhs.false116
  %cmp126 = icmp eq i8 %9, 11, !dbg !4657
  br i1 %cmp126, label %land.lhs.true134, label %lor.lhs.false128, !dbg !4657

lor.lhs.false128:                                 ; preds = %lor.lhs.false122
  %cmp132 = icmp eq i8 %9, 17, !dbg !4657
  br i1 %cmp132, label %land.lhs.true134, label %land.lhs.true207, !dbg !4657

land.lhs.true134:                                 ; preds = %lor.lhs.false128, %lor.lhs.false122, %lor.lhs.false116, %if.end110
  br i1 %cmp14, label %cond.end151, label %lor.lhs.false140, !dbg !4657

lor.lhs.false140:                                 ; preds = %land.lhs.true134
  %cmp144 = icmp eq i8 %9, 9, !dbg !4657
  br i1 %cmp144, label %cond.end151, label %cond.false147, !dbg !4657

cond.false147:                                    ; preds = %lor.lhs.false140
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4657
  %17 = load i8, i8* %arrayidx149, align 1, !dbg !4657
  %.pre5 = zext i8 %17 to i64, !dbg !4657
  %arrayidx154.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre5, !dbg !4659
  %.pre6 = load i8, i8* %arrayidx154.phi.trans.insert, align 1, !dbg !4657
  %phitmp = icmp eq i8 %.pre6, 9, !dbg !4657
  br label %cond.end151, !dbg !4657

cond.end151:                                      ; preds = %land.lhs.true134, %lor.lhs.false140, %cond.false147
  %18 = phi i1 [ false, %land.lhs.true134 ], [ true, %lor.lhs.false140 ], [ %phitmp, %cond.false147 ]
  br i1 %18, label %cond.true158, label %cond.false179, !dbg !4657

cond.true158:                                     ; preds = %cond.end151
  br i1 %cmp14, label %cond.end175, label %lor.lhs.false164, !dbg !4657

lor.lhs.false164:                                 ; preds = %cond.true158
  %cmp168 = icmp eq i8 %9, 9, !dbg !4657
  br i1 %cmp168, label %cond.end175, label %cond.false171, !dbg !4657

cond.false171:                                    ; preds = %lor.lhs.false164
  %arrayidx173 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4657
  %19 = load i8, i8* %arrayidx173, align 1, !dbg !4657
  %conv174 = zext i8 %19 to i32, !dbg !4657
  br label %cond.end175, !dbg !4657

cond.end175:                                      ; preds = %cond.true158, %lor.lhs.false164, %cond.false171
  %cond176 = phi i32 [ %conv174, %cond.false171 ], [ %cond, %lor.lhs.false164 ], [ %cond, %cond.true158 ], !dbg !4657
  br label %cond.end199, !dbg !4657

cond.false179:                                    ; preds = %cond.end151
  br i1 %cmp14, label %cond.end196, label %lor.lhs.false185, !dbg !4657

lor.lhs.false185:                                 ; preds = %cond.false179
  %cmp189 = icmp eq i8 %9, 9, !dbg !4657
  br i1 %cmp189, label %cond.end196, label %cond.false192, !dbg !4657

cond.false192:                                    ; preds = %lor.lhs.false185
  %arrayidx194 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4657
  %20 = load i8, i8* %arrayidx194, align 1, !dbg !4657
  %conv195 = zext i8 %20 to i32, !dbg !4657
  br label %cond.end196, !dbg !4657

cond.end196:                                      ; preds = %cond.false179, %lor.lhs.false185, %cond.false192
  %cond197 = phi i32 [ %conv195, %cond.false192 ], [ %cond, %lor.lhs.false185 ], [ %cond, %cond.false179 ], !dbg !4657
  br label %cond.end199, !dbg !4657

cond.end199:                                      ; preds = %cond.end196, %cond.end175
  %cond200.in = phi i32 [ %cond176, %cond.end175 ], [ %cond197, %cond.end196 ]
  %cond200 = add i32 %cond200.in, -38, !dbg !4657
  %idxprom201 = zext i32 %cond200 to i64, !dbg !4657
  %arrayidx202 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom201, !dbg !4657
  %21 = load %struct.real_format*, %struct.real_format** %arrayidx202, align 8, !dbg !4657
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %21, i64 0, i32 11, !dbg !4657
  %22 = load i8, i8* %has_nans, align 2, !dbg !4657
  %tobool204 = icmp eq i8 %22, 0, !dbg !4657
  %23 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4657
  %tobool206 = icmp ne i32 %23, 0, !dbg !4657
  %or.cond1 = or i1 %tobool204, %tobool206, !dbg !4657
  br i1 %or.cond1, label %land.lhs.true207, label %cleanup, !dbg !4657

land.lhs.true207:                                 ; preds = %cond.end199, %lor.lhs.false128
  call void @llvm.dbg.value(metadata %struct.real_value* %d, metadata !4635, metadata !DIExpression(DW_OP_deref)), !dbg !4636
  %call208 = call zeroext i8 @real_isnan(%struct.real_value* nonnull %d) #6, !dbg !4660
  %tobool210 = icmp eq i8 %call208, 0, !dbg !4660
  br i1 %tobool210, label %cleanup, label %if.then211, !dbg !4661

if.then211:                                       ; preds = %land.lhs.true207
  store i32 1, i32* %lattice_val, align 8, !dbg !4662
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !4664
  br label %cleanup, !dbg !4665

cleanup:                                          ; preds = %land.lhs.true207, %lor.lhs.false, %entry, %cond.end199, %if.then211, %if.then107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4666
  ret void, !dbg !4666
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4667 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4669, metadata !DIExpression()), !dbg !4670
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4671
  %cmp = icmp eq i32 %call, 18, !dbg !4672
  %conv1 = zext i1 %cmp to i8, !dbg !4671
  ret i8 %conv1, !dbg !4673
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4674 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4676, metadata !DIExpression()), !dbg !4677
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4678
  %cmp = icmp eq i32 %call, 8, !dbg !4679
  %conv1 = zext i1 %cmp to i8, !dbg !4678
  ret i8 %conv1, !dbg !4680
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4681 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4683, metadata !DIExpression()), !dbg !4684
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4685
  ret %union.tree_node* %call, !dbg !4686
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4687 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4691, metadata !DIExpression()), !dbg !4692
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4693
  %bf.load = load i32, i32* %0, align 8, !dbg !4693
  %bf.clear = and i32 %bf.load, 255, !dbg !4693
  ret i32 %bf.clear, !dbg !4694
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4695 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4699, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.value(metadata i32 %i, metadata !4700, metadata !DIExpression()), !dbg !4701
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4702
  %tobool = icmp eq i8 %call, 0, !dbg !4702
  br i1 %tobool, label %return, label %if.then, !dbg !4704

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4705
  %idxprom = zext i32 %i to i64, !dbg !4705
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4705
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4705
  br label %return, !dbg !4707

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4708
  ret %union.tree_node* %retval.0, !dbg !4709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4710 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4712, metadata !DIExpression()), !dbg !4713
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4714
  %cmp = icmp eq i32 %call, 0, !dbg !4715
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4716

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4717
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4718
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4719
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4720 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4724, metadata !DIExpression()), !dbg !4726
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4727
  %idxprom = zext i32 %call to i64, !dbg !4728
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4728
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4728
  call void @llvm.dbg.value(metadata i64 %0, metadata !4725, metadata !DIExpression()), !dbg !4726
  %cmp = icmp eq i64 %0, 0, !dbg !4729
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4729

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4729
  br label %cond.end, !dbg !4729

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4730
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4731
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4732
  ret %union.tree_node** %2, !dbg !4733
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4734 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4738, metadata !DIExpression()), !dbg !4739
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4740
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4741
  ret i32 %call1, !dbg !4742
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4743 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4747, metadata !DIExpression()), !dbg !4748
  %idxprom = zext i32 %code to i64, !dbg !4749
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4749
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4749
  ret i32 %0, !dbg !4750
}

declare dso_local zeroext i8 @real_isnegzero(%struct.real_value*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_real(%union.tree_node*, %struct.real_value* byval(%struct.real_value) align 8) local_unnamed_addr #2

declare dso_local zeroext i8 @real_isnan(%struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ccp_initialize() unnamed_addr #5 !dbg !4751 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %i46 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp47 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4789
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !4789
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4789
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !4789
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4789
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !4789
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4789

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !4789
  br label %cond.end, !dbg !4789

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4789
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !4789
  %conv = zext i32 %call to i64, !dbg !4789
  %call4 = tail call i8* @xcalloc(i64 %conv, i64 16) #6, !dbg !4789
  store i8* %call4, i8** bitcast (%struct.prop_value_d** @const_val to i8**), align 8, !dbg !4790
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4791
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4791
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4791
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4791
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4791
  %6 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !4792
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4793
  %8 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4794
  br label %for.cond, !dbg !4791

for.cond:                                         ; preds = %for.end31, %cond.end
  %9 = phi %struct.control_flow_graph* [ %4, %cond.end ], [ %.pre2, %for.end31 ], !dbg !4795
  %.pn = phi %struct.basic_block_def* [ %5, %cond.end ], [ %bb.0, %for.end31 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4796
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4796
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4755, metadata !DIExpression()), !dbg !4797
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !4795
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4795
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !4795
  br i1 %cmp, label %for.end34, label %for.body, !dbg !4791

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4798
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4799
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !4799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4799
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4799
  br label %for.cond9, !dbg !4800

for.cond9:                                        ; preds = %if.end26, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4756, metadata !DIExpression(DW_OP_deref)), !dbg !4792
  %call10 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4801
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4802
  br i1 %tobool11, label %for.body12, label %for.end31, !dbg !4803

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4756, metadata !DIExpression(DW_OP_deref)), !dbg !4792
  %call13 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4804
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !4760, metadata !DIExpression()), !dbg !4805
  %call14 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call13) #6, !dbg !4806
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4806
  br i1 %tobool15, label %if.else, label %if.end, !dbg !4808

if.else:                                          ; preds = %for.body12
  %call16 = call fastcc zeroext i8 @surely_varying_stmt_p(%union.gimple_statement_d* %call13) #7, !dbg !4809
  call void @llvm.dbg.value(metadata i8 %call16, metadata !4764, metadata !DIExpression()), !dbg !4805
  br label %if.end

if.end:                                           ; preds = %for.body12, %if.else
  %is_varying.0 = phi i8 [ %call16, %if.else ], [ 0, %for.body12 ], !dbg !4810
  call void @llvm.dbg.value(metadata i8 %is_varying.0, metadata !4764, metadata !DIExpression()), !dbg !4805
  %tobool17 = icmp eq i8 %is_varying.0, 0, !dbg !4811
  br i1 %tobool17, label %if.end26, label %if.then18, !dbg !4812

if.then18:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #8, !dbg !4813
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4768, metadata !DIExpression(DW_OP_deref)), !dbg !4794
  %call19 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call13, i32 10) #7, !dbg !4814
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !4765, metadata !DIExpression()), !dbg !4794
  br label %for.cond20, !dbg !4814

for.cond20:                                       ; preds = %for.body24, %if.then18
  %def.0 = phi %union.tree_node* [ %call19, %if.then18 ], [ %call25, %for.body24 ], !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !4765, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4768, metadata !DIExpression(DW_OP_deref)), !dbg !4794
  %call21 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4817
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4817
  br i1 %tobool22, label %for.body24, label %for.end, !dbg !4814

for.body24:                                       ; preds = %for.cond20
  call fastcc void @set_value_varying(%union.tree_node* %def.0) #7, !dbg !4819
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4768, metadata !DIExpression(DW_OP_deref)), !dbg !4794
  %call25 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4817
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !4765, metadata !DIExpression()), !dbg !4794
  br label %for.cond20, !dbg !4817, !llvm.loop !4820

for.end:                                          ; preds = %for.cond20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #8, !dbg !4822
  br label %if.end26, !dbg !4823

if.end26:                                         ; preds = %if.end, %for.end
  %conv29 = zext i1 %tobool17 to i8, !dbg !4824
  call fastcc void @prop_set_simulate_again(%union.gimple_statement_d* %call13, i8 zeroext %conv29) #7, !dbg !4825
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4756, metadata !DIExpression(DW_OP_deref)), !dbg !4792
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4826
  br label %for.cond9, !dbg !4827, !llvm.loop !4828

for.end31:                                        ; preds = %for.cond9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4830
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4795
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4831
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !4795
  br label %for.cond, !dbg !4795, !llvm.loop !4832

for.end34:                                        ; preds = %for.cond
  %.lcssa = phi %struct.control_flow_graph* [ %9, %for.cond ], !dbg !4795
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !4796
  %x_entry_block_ptr37 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !4834
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr37, align 8, !dbg !4834
  %12 = bitcast %struct.gimple_stmt_iterator* %i46 to i8*, !dbg !4835
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp47 to i8*, !dbg !4836
  br label %for.cond39, !dbg !4834

for.cond39:                                       ; preds = %for.end62, %for.end34
  %14 = phi %struct.basic_block_def* [ %bb.0.lcssa, %for.end34 ], [ %.pre5, %for.end62 ], !dbg !4837
  %.pn1 = phi %struct.basic_block_def* [ %11, %for.end34 ], [ %bb.1, %for.end62 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !4838
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4838
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4755, metadata !DIExpression()), !dbg !4797
  %cmp43 = icmp eq %struct.basic_block_def* %bb.1, %14, !dbg !4837
  br i1 %cmp43, label %for.end65, label %for.body45, !dbg !4834

for.body45:                                       ; preds = %for.cond39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4839
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4840
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp47, %struct.basic_block_def* %bb.1) #6, !dbg !4840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !4840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4840
  br label %for.cond48, !dbg !4841

for.cond48:                                       ; preds = %for.inc61, %for.body45
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i46, metadata !4781, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  %call49 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i46) #7, !dbg !4842
  %tobool50 = icmp eq i8 %call49, 0, !dbg !4843
  br i1 %tobool50, label %for.body53, label %for.end62, !dbg !4844

for.body53:                                       ; preds = %for.cond48
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i46, metadata !4781, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  %call54 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i46) #7, !dbg !4845
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call54, metadata !4785, metadata !DIExpression()), !dbg !4846
  %call55 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call54) #7, !dbg !4847
  %call56 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call55) #6, !dbg !4849
  %tobool57 = icmp eq i8 %call56, 0, !dbg !4849
  br i1 %tobool57, label %if.then58, label %if.else59, !dbg !4850

if.then58:                                        ; preds = %for.body53
  call fastcc void @prop_set_simulate_again(%union.gimple_statement_d* %call54, i8 zeroext 0) #7, !dbg !4851
  br label %for.inc61, !dbg !4851

if.else59:                                        ; preds = %for.body53
  call fastcc void @prop_set_simulate_again(%union.gimple_statement_d* %call54, i8 zeroext 1) #7, !dbg !4852
  br label %for.inc61

for.inc61:                                        ; preds = %if.then58, %if.else59
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i46, metadata !4781, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i46) #7, !dbg !4853
  br label %for.cond48, !dbg !4854, !llvm.loop !4855

for.end62:                                        ; preds = %for.cond48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4857
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4837
  %cfg41.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !4858
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41.phi.trans.insert, align 8, !dbg !4837
  %x_exit_block_ptr42.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre4, i64 0, i32 1, !dbg !4858
  %.pre5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr42.phi.trans.insert, align 8, !dbg !4837
  br label %for.cond39, !dbg !4837, !llvm.loop !4859

for.end65:                                        ; preds = %for.cond39
  ret void, !dbg !4861
}

declare dso_local void @ssa_propagate(i32 (%union.gimple_statement_d*, %struct.edge_def**, %union.tree_node**)*, i32 (%union.gimple_statement_d*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @ccp_visit_stmt(%union.gimple_statement_d* %stmt, %struct.edge_def** %taken_edge_p, %union.tree_node** %output_p) #5 !dbg !4862 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4867, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata %struct.edge_def** %taken_edge_p, metadata !4868, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata %union.tree_node** %output_p, metadata !4869, metadata !DIExpression()), !dbg !4876
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4877
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !4877
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4878
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !4878
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4880

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4881
  %and = and i32 %2, 8, !dbg !4882
  %tobool1 = icmp eq i32 %and, 0, !dbg !4882
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4883

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4884
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4886
  %4 = load i32, i32* @dump_flags, align 4, !dbg !4887
  tail call void @print_gimple_stmt(%struct._IO_FILE* %3, %union.gimple_statement_d* %stmt, i32 0, i32 %4) #6, !dbg !4888
  br label %if.end, !dbg !4889

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4890
  switch i32 %call2, label %sw.epilog [
    i32 6, label %sw.bb
    i32 8, label %sw.bb4
    i32 1, label %sw.bb9
    i32 5, label %sw.bb9
  ], !dbg !4891

sw.bb:                                            ; preds = %if.end
  %call3 = tail call fastcc i32 @visit_assignment(%union.gimple_statement_d* %stmt, %union.tree_node** %output_p) #7, !dbg !4892
  br label %cleanup, !dbg !4894

sw.bb4:                                           ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !4895
  %cmp = icmp eq %union.tree_node* %call5, null, !dbg !4897
  br i1 %cmp, label %sw.epilog, label %if.then6, !dbg !4898

if.then6:                                         ; preds = %sw.bb4
  %call7 = tail call fastcc i32 @visit_assignment(%union.gimple_statement_d* %stmt, %union.tree_node** %output_p) #7, !dbg !4899
  br label %cleanup, !dbg !4900

sw.bb9:                                           ; preds = %if.end, %if.end
  %call10 = tail call fastcc i32 @visit_cond_stmt(%union.gimple_statement_d* %stmt, %struct.edge_def** %taken_edge_p) #7, !dbg !4901
  br label %cleanup, !dbg !4902

sw.epilog:                                        ; preds = %sw.bb4, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4903
  %tobool11 = icmp eq %struct._IO_FILE* %5, null, !dbg !4903
  br i1 %tobool11, label %if.end17, label %land.lhs.true12, !dbg !4905

land.lhs.true12:                                  ; preds = %sw.epilog
  %6 = load i32, i32* @dump_flags, align 4, !dbg !4906
  %and13 = and i32 %6, 8, !dbg !4907
  %tobool14 = icmp eq i32 %and13, 0, !dbg !4907
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !4908

if.then15:                                        ; preds = %land.lhs.true12
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4909
  br label %if.end17, !dbg !4909

if.end17:                                         ; preds = %land.lhs.true12, %sw.epilog, %if.then15
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4871, metadata !DIExpression(DW_OP_deref)), !dbg !4876
  %call18 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !4910
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4870, metadata !DIExpression()), !dbg !4876
  br label %for.cond, !dbg !4910

for.cond:                                         ; preds = %for.body, %if.end17
  %def.0 = phi %union.tree_node* [ %call18, %if.end17 ], [ %call22, %for.body ], !dbg !4911
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !4870, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4871, metadata !DIExpression(DW_OP_deref)), !dbg !4876
  %call19 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4912
  %tobool20 = icmp eq i8 %call19, 0, !dbg !4912
  br i1 %tobool20, label %for.body, label %cleanup.loopexit, !dbg !4910

for.body:                                         ; preds = %for.cond
  %call21 = call fastcc zeroext i8 @set_lattice_value(%union.tree_node* %def.0, i32 3, %union.tree_node* null) #7, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4871, metadata !DIExpression(DW_OP_deref)), !dbg !4876
  %call22 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4912
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4870, metadata !DIExpression()), !dbg !4876
  br label %for.cond, !dbg !4912, !llvm.loop !4914

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4916

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb9, %if.then6, %sw.bb
  %retval.0 = phi i32 [ %call10, %sw.bb9 ], [ %call7, %if.then6 ], [ %call3, %sw.bb ], [ 2, %cleanup.loopexit ], !dbg !4876
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !4916
  ret i32 %retval.0, !dbg !4916
}

; Function Attrs: nounwind uwtable
define internal i32 @ccp_visit_phi_node(%union.gimple_statement_d* %phi) #5 !dbg !4917 {
entry:
  %new_val = alloca %struct.prop_value_d, align 8
  %arg_val = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !4921, metadata !DIExpression()), !dbg !4933
  %0 = bitcast %struct.prop_value_d* %new_val to i8*, !dbg !4934
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4934
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4935
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !4935
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4937

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4938
  %and = and i32 %2, 8, !dbg !4939
  %tobool1 = icmp eq i32 %and, 0, !dbg !4939
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4940

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4941
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4943
  %4 = load i32, i32* @dump_flags, align 4, !dbg !4944
  tail call void @print_gimple_stmt(%struct._IO_FILE* %3, %union.gimple_statement_d* %phi, i32 0, i32 %4) #6, !dbg !4945
  br label %if.end, !dbg !4946

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !4947
  %call3 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call2) #7, !dbg !4948
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call3, metadata !4923, metadata !DIExpression()), !dbg !4933
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call3, i64 0, i32 0, !dbg !4949
  %5 = load i32, i32* %lattice_val, align 8, !dbg !4949
  switch i32 %5, label %sw.default [
    i32 3, label %cleanup66
    i32 2, label %sw.bb4
    i32 1, label %sw.bb5
  ], !dbg !4950

sw.bb4:                                           ; preds = %if.end
  %6 = bitcast %struct.prop_value_d* %call3 to i8*, !dbg !4951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %6, i64 16, i1 false), !dbg !4951
  br label %sw.epilog, !dbg !4953

sw.bb5:                                           ; preds = %if.end
  %lattice_val6 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 0, !dbg !4954
  store i32 1, i32* %lattice_val6, align 8, !dbg !4955
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 1, !dbg !4956
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !4957
  br label %sw.epilog, !dbg !4958

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 823, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4959
  br label %sw.epilog, !dbg !4960

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb4
  call void @llvm.dbg.value(metadata i32 0, metadata !4922, metadata !DIExpression()), !dbg !4933
  %7 = bitcast %struct.prop_value_d* %arg_val to i8*, !dbg !4961
  %lattice_val27 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %arg_val, i64 0, i32 0, !dbg !4962
  %value28 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %arg_val, i64 0, i32 1, !dbg !4962
  %lattice_val39 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 0, !dbg !4965
  br label %for.cond, !dbg !4967

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %sw.epilog ], !dbg !4968
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4922, metadata !DIExpression()), !dbg !4933
  %call7 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !4969
  %8 = zext i32 %call7 to i64, !dbg !4970
  %cmp = icmp ult i64 %indvars.iv, %8, !dbg !4970
  br i1 %cmp, label %for.body, label %for.end, !dbg !4971

for.body:                                         ; preds = %for.cond
  %call8 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !4972
  call void @llvm.dbg.value(metadata %struct.edge_def* %call8, metadata !4925, metadata !DIExpression()), !dbg !4973
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4974
  %tobool9 = icmp eq %struct._IO_FILE* %9, null, !dbg !4974
  br i1 %tobool9, label %if.end18, label %land.lhs.true10, !dbg !4976

land.lhs.true10:                                  ; preds = %for.body
  %10 = load i32, i32* @dump_flags, align 4, !dbg !4977
  %and11 = and i32 %10, 8, !dbg !4978
  %tobool12 = icmp eq i32 %and11, 0, !dbg !4978
  br i1 %tobool12, label %if.end18, label %if.then13, !dbg !4979

if.then13:                                        ; preds = %land.lhs.true10
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 0, !dbg !4980
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4980
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !4982
  %12 = load i32, i32* %index, align 8, !dbg !4982
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 1, !dbg !4983
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4983
  %index14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 9, !dbg !4984
  %14 = load i32, i32* %index14, align 8, !dbg !4984
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 7, !dbg !4985
  %15 = load i32, i32* %flags, align 8, !dbg !4985
  %and15 = and i32 %15, 4096, !dbg !4986
  %tobool16 = icmp eq i32 %and15, 0, !dbg !4987
  %cond = select i1 %tobool16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !4987
  %16 = trunc i64 %indvars.iv to i32, !dbg !4988
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i32 %16, i32 %12, i32 %14, i8* %cond) #6, !dbg !4988
  br label %if.end18, !dbg !4989

if.end18:                                         ; preds = %land.lhs.true10, %for.body, %if.then13
  %flags19 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 7, !dbg !4990
  %17 = load i32, i32* %flags19, align 8, !dbg !4990
  %and20 = and i32 %17, 4096, !dbg !4991
  %tobool21 = icmp eq i32 %and20, 0, !dbg !4991
  br i1 %tobool21, label %if.end45, label %if.then22, !dbg !4992

if.then22:                                        ; preds = %if.end18
  %18 = trunc i64 %indvars.iv to i32, !dbg !4993
  %call23 = call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %phi, i32 %18) #7, !dbg !4993
  %def = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call23, i64 0, i32 1, !dbg !4994
  %19 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !4994
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !4929, metadata !DIExpression()), !dbg !4961
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !4995
  %call24 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %19) #6, !dbg !4996
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4996
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !4997

if.then26:                                        ; preds = %if.then22
  store i32 2, i32* %lattice_val27, align 8, !dbg !4998
  store %union.tree_node* %19, %union.tree_node** %value28, align 8, !dbg !4999
  br label %if.end30, !dbg !5000

if.else:                                          ; preds = %if.then22
  %call29 = call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %19) #7, !dbg !5001
  %20 = bitcast %struct.prop_value_d* %call29 to i8*, !dbg !5002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %20, i64 16, i1 false), !dbg !5002
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then26
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %new_val, metadata !4924, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %arg_val, metadata !4932, metadata !DIExpression(DW_OP_deref)), !dbg !4961
  call fastcc void @ccp_lattice_meet(%struct.prop_value_d* nonnull %new_val, %struct.prop_value_d* nonnull %arg_val) #7, !dbg !5003
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5004
  %tobool31 = icmp eq %struct._IO_FILE* %21, null, !dbg !5004
  br i1 %tobool31, label %if.end38, label %land.lhs.true32, !dbg !5006

land.lhs.true32:                                  ; preds = %if.end30
  %22 = load i32, i32* @dump_flags, align 4, !dbg !5007
  %and33 = and i32 %22, 8, !dbg !5008
  %tobool34 = icmp eq i32 %and33, 0, !dbg !5008
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !5009

if.then35:                                        ; preds = %land.lhs.true32
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5010
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5012
  %24 = load i32, i32* @dump_flags, align 4, !dbg !5013
  call void @print_generic_expr(%struct._IO_FILE* %23, %union.tree_node* %19, i32 %24) #6, !dbg !5014
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5015
  %26 = load i32, i32* %lattice_val27, align 8, !dbg !5016
  %27 = load %union.tree_node*, %union.tree_node** %value28, align 8, !dbg !5016
  call fastcc void @dump_lattice_value(%struct._IO_FILE* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i32 %26, %union.tree_node* %27) #7, !dbg !5016
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5017
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5018
  br label %if.end38, !dbg !5019

if.end38:                                         ; preds = %land.lhs.true32, %if.end30, %if.then35
  %29 = load i32, i32* %lattice_val39, align 8, !dbg !5020
  %cmp40 = icmp eq i32 %29, 3, !dbg !5021
  %. = select i1 %cmp40, i32 3, i32 0, !dbg !5022
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !5023
  br i1 %cmp40, label %cleanup46, label %if.end45

if.end45:                                         ; preds = %if.end38, %if.end18
  br label %cleanup46, !dbg !5024

cleanup46:                                        ; preds = %if.end38, %if.end45
  %cleanup.dest.slot.1 = phi i32 [ %., %if.end38 ], [ 0, %if.end45 ]
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup46
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5025
  br label %for.cond, !dbg !5026, !llvm.loop !5027

for.end:                                          ; preds = %cleanup46, %for.cond
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5029
  %tobool49 = icmp eq %struct._IO_FILE* %30, null, !dbg !5029
  br i1 %tobool49, label %if.end55, label %land.lhs.true50, !dbg !5031

land.lhs.true50:                                  ; preds = %for.end
  %31 = load i32, i32* @dump_flags, align 4, !dbg !5032
  %and51 = and i32 %31, 8, !dbg !5033
  %tobool52 = icmp eq i32 %and51, 0, !dbg !5033
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !5034

if.then53:                                        ; preds = %land.lhs.true50
  %32 = load i32, i32* %lattice_val39, align 8, !dbg !5035
  %33 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 1, !dbg !5035
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !5035
  call fastcc void @dump_lattice_value(%struct._IO_FILE* nonnull %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i32 %32, %union.tree_node* %34) #7, !dbg !5035
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5037
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5038
  br label %if.end55, !dbg !5039

if.end55:                                         ; preds = %land.lhs.true50, %for.end, %if.then53
  %call56 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !5040
  %36 = load i32, i32* %lattice_val39, align 8, !dbg !5042
  %37 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 1, !dbg !5042
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !5042
  %call57 = call fastcc zeroext i8 @set_lattice_value(%union.tree_node* %call56, i32 %36, %union.tree_node* %38) #7, !dbg !5042
  %tobool58 = icmp eq i8 %call57, 0, !dbg !5042
  br i1 %tobool58, label %cleanup66, label %if.then59, !dbg !5043

if.then59:                                        ; preds = %if.end55
  %39 = load i32, i32* %lattice_val39, align 8, !dbg !5044
  %cmp61 = icmp eq i32 %39, 3, !dbg !5047
  %.2 = select i1 %cmp61, i32 2, i32 1, !dbg !5048
  br label %cleanup66, !dbg !5048

cleanup66:                                        ; preds = %if.end55, %if.then59, %if.end
  %retval.0 = phi i32 [ 2, %if.end ], [ %.2, %if.then59 ], [ 0, %if.end55 ], !dbg !4933
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5049
  ret i32 %retval.0, !dbg !5049
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ccp_finalize() unnamed_addr #5 !dbg !5050 {
entry:
  tail call fastcc void @do_dbg_cnt() #7, !dbg !5053
  %0 = load %struct.prop_value_d*, %struct.prop_value_d** @const_val, align 8, !dbg !5054
  %call = tail call zeroext i8 @substitute_and_fold(%struct.prop_value_d* %0, i8 (%struct.gimple_stmt_iterator*)* nonnull @ccp_fold_stmt) #6, !dbg !5055
  call void @llvm.dbg.value(metadata i8 %call, metadata !5052, metadata !DIExpression()), !dbg !5056
  %1 = load i8*, i8** bitcast (%struct.prop_value_d** @const_val to i8**), align 8, !dbg !5057
  tail call void @free(i8* %1) #6, !dbg !5058
  store %struct.prop_value_d* null, %struct.prop_value_d** @const_val, align 8, !dbg !5059
  ret i8 %call, !dbg !5060
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5061 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5067, metadata !DIExpression()), !dbg !5068
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5069
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5069

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5069
  %0 = load i32, i32* %num, align 8, !dbg !5069
  br label %cond.end, !dbg !5069

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5069
  ret i32 %cond, !dbg !5069
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5070 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5074, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5075, metadata !DIExpression()), !dbg !5078
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5079
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5076, metadata !DIExpression()), !dbg !5077
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5080
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5081
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5082
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5083
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5084
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5085
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5086
  ret void, !dbg !5087
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5088 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5092, metadata !DIExpression()), !dbg !5093
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5094
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5094
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5095
  %conv1 = zext i1 %cmp to i8, !dbg !5096
  ret i8 %conv1, !dbg !5097
}

declare dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @surely_varying_stmt_p(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5098 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5100, metadata !DIExpression()), !dbg !5104
  %call = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5105
  %tobool = icmp eq i8 %call, 0, !dbg !5105
  br i1 %tobool, label %if.end, label %return, !dbg !5107

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !5108
  %tobool2 = icmp eq i8 %call1, 0, !dbg !5108
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !5109

if.then3:                                         ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5110
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !5110
  br i1 %tobool5, label %cleanup, label %lor.lhs.false, !dbg !5112

lor.lhs.false:                                    ; preds = %if.then3
  %call6 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !5113
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5101, metadata !DIExpression()), !dbg !5114
  %cmp = icmp eq %union.tree_node* %call6, null, !dbg !5115
  br i1 %cmp, label %if.end9, label %land.lhs.true, !dbg !5116

land.lhs.true:                                    ; preds = %lor.lhs.false
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 5, !dbg !5117
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !5117
  %bf.clear = and i32 %bf.load, 6144, !dbg !5117
  %cmp7 = icmp eq i32 %bf.clear, 0, !dbg !5117
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !5118

if.end9:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %cleanup, !dbg !5119

cleanup:                                          ; preds = %land.lhs.true, %if.then3, %if.end9
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end9 ], [ false, %land.lhs.true ], [ false, %if.then3 ]
  br i1 %cleanup.dest.slot.0, label %if.end14, label %return

if.else:                                          ; preds = %if.end
  %call10 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !5120
  %tobool11 = icmp eq %union.tree_node* %call10, null, !dbg !5120
  br i1 %tobool11, label %if.end14, label %return, !dbg !5122

if.end14:                                         ; preds = %if.else, %cleanup
  %call15 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5123
  %cmp16 = icmp eq i32 %call15, 6, !dbg !5125
  br i1 %cmp16, label %if.end27, label %land.lhs.true17, !dbg !5126

land.lhs.true17:                                  ; preds = %if.end14
  %call18 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5127
  %cmp19 = icmp eq i32 %call18, 1, !dbg !5128
  br i1 %cmp19, label %if.end27, label %land.lhs.true20, !dbg !5129

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %call21 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5130
  %cmp22 = icmp eq i32 %call21, 5, !dbg !5131
  br i1 %cmp22, label %if.end27, label %land.lhs.true23, !dbg !5132

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %call24 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5133
  %cmp25 = icmp eq i32 %call24, 8, !dbg !5134
  br i1 %cmp25, label %if.end27, label %return, !dbg !5135

if.end27:                                         ; preds = %land.lhs.true23, %land.lhs.true20, %land.lhs.true17, %if.end14
  br label %return, !dbg !5136

return:                                           ; preds = %land.lhs.true23, %if.else, %entry, %cleanup, %if.end27
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end27 ], [ 1, %entry ], [ 1, %if.else ], [ 1, %land.lhs.true23 ]
  ret i8 %retval.1, !dbg !5137
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5138 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5143, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5144, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5145, metadata !DIExpression()), !dbg !5146
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !5147
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5148
  store i32 1, i32* %iter_type, align 4, !dbg !5149
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5150
  ret %union.tree_node* %call, !dbg !5151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5152 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5158, metadata !DIExpression()), !dbg !5159
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5160
  %0 = load i8, i8* %done, align 8, !dbg !5160
  ret i8 %0, !dbg !5161
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_value_varying(%union.tree_node* %var) unnamed_addr #0 !dbg !5162 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5166, metadata !DIExpression()), !dbg !5168
  %0 = load %struct.prop_value_d*, %struct.prop_value_d** @const_val, align 8, !dbg !5169
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5170
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !5170
  %2 = load i32, i32* %1, align 8, !dbg !5170
  %idxprom = zext i32 %2 to i64, !dbg !5169
  call void @llvm.dbg.value(metadata %struct.prop_value_d* undef, metadata !5167, metadata !DIExpression()), !dbg !5168
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %0, i64 %idxprom, i32 0, !dbg !5171
  store i32 3, i32* %lattice_val, align 8, !dbg !5172
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %0, i64 %idxprom, i32 1, !dbg !5173
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !5174
  ret void, !dbg !5175
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5176 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5180, metadata !DIExpression()), !dbg !5182
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5183
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5183
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5185
  br i1 %tobool, label %if.end, label %if.then, !dbg !5186

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5187
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !5187
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5181, metadata !DIExpression()), !dbg !5182
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5189
  %2 = load i64*, i64** %1, align 8, !dbg !5189
  %3 = load i64, i64* %2, align 8, !dbg !5190
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5191
  store i64 %3, i64* %4, align 8, !dbg !5191
  br label %cleanup, !dbg !5192

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5193
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5193
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !5195
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5196

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !5197
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5197
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !5197
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5181, metadata !DIExpression()), !dbg !5182
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5199
  %8 = load i64*, i64** %7, align 8, !dbg !5199
  %9 = load i64, i64* %8, align 8, !dbg !5200
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5201
  store i64 %9, i64* %10, align 8, !dbg !5201
  br label %cleanup, !dbg !5202

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5203
  store i8 1, i8* %done, align 8, !dbg !5204
  br label %cleanup, !dbg !5205

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !5182
  ret %union.tree_node* %retval.0, !dbg !5206
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @prop_set_simulate_again(%union.gimple_statement_d* %s, i8 zeroext %visit_p) unnamed_addr #0 !dbg !5207 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5211, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8 %visit_p, metadata !5212, metadata !DIExpression()), !dbg !5213
  tail call fastcc void @gimple_set_visited(%union.gimple_statement_d* %s, i8 zeroext %visit_p) #7, !dbg !5214
  ret void, !dbg !5215
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5216 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5220, metadata !DIExpression()), !dbg !5221
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5222
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5222
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5223
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5223
  %2 = load i64, i64* %1, align 8, !dbg !5223
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5224
  store i64 %2, i64* %3, align 8, !dbg !5224
  ret void, !dbg !5225
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5226 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5228, metadata !DIExpression()), !dbg !5229
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5230
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5230
  ret %union.tree_node* %0, !dbg !5231
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5232 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5239, metadata !DIExpression()), !dbg !5240
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5241
  %0 = load i32, i32* %flags, align 8, !dbg !5241
  %and = and i32 %0, 512, !dbg !5242
  %tobool = icmp eq i32 %and, 0, !dbg !5242
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5243

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5244
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5244
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5245
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5246

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5247
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5247
  br label %cond.end, !dbg !5246

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5246
  ret %struct.gimple_seq_d* %cond, !dbg !5248
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5249 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5256, metadata !DIExpression()), !dbg !5257
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5258
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5258

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5259
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5259
  br label %cond.end, !dbg !5258

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5258
  ret %struct.gimple_seq_node_d* %cond, !dbg !5260
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5261 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5263, metadata !DIExpression()), !dbg !5264
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5265
  %tobool = icmp eq i8 %call, 0, !dbg !5265
  br i1 %tobool, label %return, label %if.then, !dbg !5267

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5268
  %bf.load = load i32, i32* %0, align 8, !dbg !5268
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !5268
  %1 = trunc i32 %bf.lshr to i8, !dbg !5269
  %conv = and i8 %1, 1, !dbg !5269
  br label %return, !dbg !5270

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !5271
  ret i8 %retval.0, !dbg !5272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5273 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5275, metadata !DIExpression()), !dbg !5277
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5278
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5276, metadata !DIExpression()), !dbg !5277
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5279
  %bf.load = load i64, i64* %0, align 8, !dbg !5279
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5281
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !5281
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5282

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5283
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5283
  br label %cleanup, !dbg !5284

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !5277
  ret %union.tree_node* %retval.0, !dbg !5285
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5286 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5288, metadata !DIExpression()), !dbg !5289
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5290
  %tobool = icmp eq i8 %call, 0, !dbg !5290
  br i1 %tobool, label %return, label %if.end, !dbg !5292

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5293
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5293
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5293
  br label %return, !dbg !5294

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5289
  ret %union.tree_node* %retval.0, !dbg !5295
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5296 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5298, metadata !DIExpression()), !dbg !5299
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5300
  %cmp = icmp ugt i32 %call, 5, !dbg !5301
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5302

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5303
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5304
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5305
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5306 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5308, metadata !DIExpression()), !dbg !5309
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5310
  ret %union.tree_node* %call, !dbg !5311
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5312 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5318, metadata !DIExpression()), !dbg !5319
  %0 = and i32 %flags, 10, !dbg !5320
  %1 = icmp eq i32 %0, 8, !dbg !5320
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5320

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5320
  %3 = icmp eq i32 %2, 4, !dbg !5320
  br i1 %3, label %cond.true, label %cond.end, !dbg !5320

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5320
  br label %cond.end, !dbg !5320

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5321
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5322

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5323
  br label %cond.end12, !dbg !5322

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5322
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5324
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5325
  %and14 = and i32 %flags, 8, !dbg !5326
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5326
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5328

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5329
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5330

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !5331
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5332
  br i1 %cmp, label %if.end, label %if.then, !dbg !5333

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5334
  %6 = load i64*, i64** %5, align 8, !dbg !5334
  %7 = load i64, i64* %6, align 8, !dbg !5335
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5336
  store i64 %7, i64* %8, align 8, !dbg !5336
  br label %if.end, !dbg !5337

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5338
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5338
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5339

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5340
  br label %cond.end28, !dbg !5339

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5339
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5341
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5342
  %and30 = and i32 %flags, 4, !dbg !5343
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5343
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5345

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5346
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5347

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5348
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5349
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5350

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5351
  %11 = load i64*, i64** %10, align 8, !dbg !5351
  %12 = load i64, i64* %11, align 8, !dbg !5352
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5353
  store i64 %12, i64* %13, align 8, !dbg !5353
  br label %if.end42, !dbg !5354

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5355
  store i8 0, i8* %done, align 8, !dbg !5356
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5357
  store i32 0, i32* %phi_i, align 8, !dbg !5358
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5359
  store i32 0, i32* %num_phi, align 4, !dbg !5360
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5361
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5362
  ret void, !dbg !5363
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5364 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5368, metadata !DIExpression()), !dbg !5369
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5370
  %tobool = icmp eq i8 %call, 0, !dbg !5370
  br i1 %tobool, label %return, label %if.end, !dbg !5372

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5373
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5373
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5373
  br label %return, !dbg !5374

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5369
  ret %struct.def_optype_d* %retval.0, !dbg !5375
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5376 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5380, metadata !DIExpression()), !dbg !5381
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5382
  %tobool = icmp eq i8 %call, 0, !dbg !5382
  br i1 %tobool, label %return, label %if.end, !dbg !5384

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5385
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5385
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5385
  br label %return, !dbg !5386

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5381
  ret %struct.use_optype_d* %retval.0, !dbg !5387
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5388 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5390, metadata !DIExpression()), !dbg !5391
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5392
  %tobool = icmp eq i8 %call, 0, !dbg !5392
  br i1 %tobool, label %return, label %if.end, !dbg !5394

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5395
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5395
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5395
  br label %return, !dbg !5396

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5391
  ret %union.tree_node* %retval.0, !dbg !5397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5398 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5405, metadata !DIExpression()), !dbg !5406
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5407
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5407
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5408
  ret %union.tree_node* %1, !dbg !5409
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5410 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5415, metadata !DIExpression()), !dbg !5416
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5417
  ret %union.tree_node* %0, !dbg !5418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_visited(%union.gimple_statement_d* %stmt, i8 zeroext %visited_p) unnamed_addr #0 !dbg !5419 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5421, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8 %visited_p, metadata !5422, metadata !DIExpression()), !dbg !5423
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5424
  %bf.load = load i32, i32* %0, align 8, !dbg !5425
  %1 = and i8 %visited_p, 1, !dbg !5425
  %bf.value = zext i8 %1 to i32, !dbg !5425
  %bf.shl = shl nuw nsw i32 %bf.value, 9, !dbg !5425
  %bf.clear = and i32 %bf.load, -513, !dbg !5425
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !5425
  store i32 %bf.set, i32* %0, align 8, !dbg !5425
  ret void, !dbg !5426
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @visit_assignment(%union.gimple_statement_d* %stmt, %union.tree_node** %output_p) unnamed_addr #5 !dbg !5427 {
entry:
  %val = alloca %struct.prop_value_d, align 8
  %tmp = alloca %struct.prop_value_d, align 8
  %tmp12 = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5431, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.value(metadata %union.tree_node** %output_p, metadata !5432, metadata !DIExpression()), !dbg !5442
  %0 = bitcast %struct.prop_value_d* %val to i8*, !dbg !5443
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5443
  %call = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5444
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5435, metadata !DIExpression()), !dbg !5442
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5445
  %cmp = icmp eq i32 %call2, 8, !dbg !5445
  br i1 %cmp, label %lor.lhs.false, label %cond.end, !dbg !5445

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5445
  %cmp4 = icmp eq %union.tree_node* %call3, null, !dbg !5445
  br i1 %cmp4, label %cond.true, label %cond.end, !dbg !5445

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 1604, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5445
  br label %cond.end, !dbg !5445

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %call5 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %stmt) #6, !dbg !5446
  %tobool = icmp eq i8 %call5, 0, !dbg !5446
  br i1 %tobool, label %if.else11, label %if.then, !dbg !5447

if.then:                                          ; preds = %cond.end
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5448
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5436, metadata !DIExpression()), !dbg !5449
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5450
  %bf.load = load i64, i64* %1, align 8, !dbg !5450
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5451
  %cmp7 = icmp eq i64 %bf.cast2, 141, !dbg !5451
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !5452

if.then8:                                         ; preds = %if.then
  %call9 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call6) #7, !dbg !5453
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call9, metadata !5439, metadata !DIExpression()), !dbg !5454
  %2 = bitcast %struct.prop_value_d* %call9 to i8*, !dbg !5455
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %2, i64 16, i1 false), !dbg !5455
  br label %if.end14, !dbg !5456

if.else:                                          ; preds = %if.then
  %3 = bitcast %struct.prop_value_d* %tmp to i8*, !dbg !5457
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5457
  %call10 = tail call fastcc { i32, %union.tree_node* } @evaluate_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5457
  %4 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 0, !dbg !5457
  %5 = extractvalue { i32, %union.tree_node* } %call10, 0, !dbg !5457
  store i32 %5, i32* %4, align 8, !dbg !5457
  %6 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 1, !dbg !5457
  %7 = extractvalue { i32, %union.tree_node* } %call10, 1, !dbg !5457
  store %union.tree_node* %7, %union.tree_node** %6, align 8, !dbg !5457
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !5457
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5457
  br label %if.end14

if.else11:                                        ; preds = %cond.end
  %8 = bitcast %struct.prop_value_d* %tmp12 to i8*, !dbg !5458
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !5458
  %call13 = tail call fastcc { i32, %union.tree_node* } @evaluate_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5458
  %9 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp12, i64 0, i32 0, !dbg !5458
  %10 = extractvalue { i32, %union.tree_node* } %call13, 0, !dbg !5458
  store i32 %10, i32* %9, align 8, !dbg !5458
  %11 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp12, i64 0, i32 1, !dbg !5458
  %12 = extractvalue { i32, %union.tree_node* } %call13, 1, !dbg !5458
  store %union.tree_node* %12, %union.tree_node** %11, align 8, !dbg !5458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !5458
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !5458
  br label %if.end14

if.end14:                                         ; preds = %if.then8, %if.else, %if.else11
  call void @llvm.dbg.value(metadata i32 0, metadata !5434, metadata !DIExpression()), !dbg !5442
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5459
  %bf.load16 = load i64, i64* %13, align 8, !dbg !5459
  %bf.cast181 = and i64 %bf.load16, 65535, !dbg !5461
  %cmp19 = icmp eq i64 %bf.cast181, 141, !dbg !5461
  br i1 %cmp19, label %if.then20, label %if.end29, !dbg !5462

if.then20:                                        ; preds = %if.end14
  %14 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 0, !dbg !5463
  %15 = load i32, i32* %14, align 8, !dbg !5463
  %16 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 1, !dbg !5463
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !5463
  %call21 = tail call fastcc zeroext i8 @set_lattice_value(%union.tree_node* %call, i32 %15, %union.tree_node* %17) #7, !dbg !5463
  %tobool22 = icmp eq i8 %call21, 0, !dbg !5463
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !5466

if.then23:                                        ; preds = %if.then20
  store %union.tree_node* %call, %union.tree_node** %output_p, align 8, !dbg !5467
  %cmp24 = icmp eq i32 %15, 3, !dbg !5469
  %. = select i1 %cmp24, i32 2, i32 1
  call void @llvm.dbg.value(metadata i32 %., metadata !5434, metadata !DIExpression()), !dbg !5442
  br label %if.end29, !dbg !5471

if.end29:                                         ; preds = %if.then20, %if.then23, %if.end14
  %retval1.2 = phi i32 [ 0, %if.end14 ], [ %., %if.then23 ], [ 0, %if.then20 ], !dbg !5442
  call void @llvm.dbg.value(metadata i32 %retval1.2, metadata !5434, metadata !DIExpression()), !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5472
  ret i32 %retval1.2, !dbg !5473
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @visit_cond_stmt(%union.gimple_statement_d* %stmt, %struct.edge_def** %taken_edge_p) unnamed_addr #5 !dbg !5474 {
entry:
  %val = alloca %struct.prop_value_d, align 8
  %tmp = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5478, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata %struct.edge_def** %taken_edge_p, metadata !5479, metadata !DIExpression()), !dbg !5482
  %0 = bitcast %struct.prop_value_d* %val to i8*, !dbg !5483
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5483
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5484
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5481, metadata !DIExpression()), !dbg !5482
  %1 = bitcast %struct.prop_value_d* %tmp to i8*, !dbg !5485
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5485
  %call1 = tail call fastcc { i32, %union.tree_node* } @evaluate_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5485
  %2 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 0, !dbg !5485
  %3 = extractvalue { i32, %union.tree_node* } %call1, 0, !dbg !5485
  store i32 %3, i32* %2, align 8, !dbg !5485
  %4 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 1, !dbg !5485
  %5 = extractvalue { i32, %union.tree_node* } %call1, 1, !dbg !5485
  store %union.tree_node* %5, %union.tree_node** %4, align 8, !dbg !5485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !5485
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5485
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 1, !dbg !5486
  %6 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5486
  %tobool = icmp eq %union.tree_node* %6, null, !dbg !5487
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5487

cond.true:                                        ; preds = %entry
  %call3 = tail call %struct.edge_def* @find_taken_edge(%struct.basic_block_def* %call, %union.tree_node* nonnull %6) #6, !dbg !5488
  br label %cond.end, !dbg !5487

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call3, %cond.true ], [ null, %entry ], !dbg !5487
  store %struct.edge_def* %cond, %struct.edge_def** %taken_edge_p, align 8, !dbg !5489
  %tobool4 = icmp eq %struct.edge_def* %cond, null, !dbg !5490
  %. = select i1 %tobool4, i32 2, i32 1, !dbg !5492
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5493
  ret i32 %., !dbg !5493
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @set_lattice_value(%union.tree_node* %var, i32 %new_val.coerce0, %union.tree_node* %new_val.coerce1) unnamed_addr #5 !dbg !5494 {
entry:
  %new_val = alloca %struct.prop_value_d, align 8
  %0 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 0
  store i32 %new_val.coerce0, i32* %0, align 8
  %1 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %new_val, i64 0, i32 1
  store %union.tree_node* %new_val.coerce1, %union.tree_node** %1, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5498, metadata !DIExpression()), !dbg !5501
  %call = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %var) #7, !dbg !5502
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %new_val, metadata !5499, metadata !DIExpression(DW_OP_deref)), !dbg !5501
  call fastcc void @canonicalize_float_value(%struct.prop_value_d* nonnull %new_val) #7, !dbg !5503
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call, i64 0, i32 0, !dbg !5504
  %2 = load i32, i32* %lattice_val, align 8, !dbg !5504
  %3 = load i32, i32* %0, align 8, !dbg !5504
  %cmp = icmp ult i32 %2, %3, !dbg !5504
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !5504

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %2, %3, !dbg !5504
  br i1 %cmp4, label %land.lhs.true, label %cond.true, !dbg !5504

land.lhs.true:                                    ; preds = %lor.lhs.false
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call, i64 0, i32 1, !dbg !5504
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5504
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !5504
  br i1 %tobool, label %land.lhs.true5, label %land.lhs.true.lor.lhs.false8_crit_edge, !dbg !5504

land.lhs.true.lor.lhs.false8_crit_edge:           ; preds = %land.lhs.true
  %.pre = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5504
  br label %lor.lhs.false8, !dbg !5504

land.lhs.true5:                                   ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5504
  %tobool7 = icmp eq %union.tree_node* %5, null, !dbg !5504
  br i1 %tobool7, label %cond.end, label %lor.lhs.false8, !dbg !5504

lor.lhs.false8:                                   ; preds = %land.lhs.true.lor.lhs.false8_crit_edge, %land.lhs.true5
  %6 = phi %union.tree_node* [ %.pre, %land.lhs.true.lor.lhs.false8_crit_edge ], [ %5, %land.lhs.true5 ], !dbg !5504
  %call11 = call i32 @operand_equal_p(%union.tree_node* %4, %union.tree_node* %6, i32 0) #6, !dbg !5504
  %tobool12 = icmp eq i32 %call11, 0, !dbg !5504
  br i1 %tobool12, label %cond.true, label %cond.end, !dbg !5504

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5504
  br label %cond.end, !dbg !5504

cond.end:                                         ; preds = %lor.lhs.false8, %land.lhs.true5, %entry, %cond.true
  %7 = load i32, i32* %lattice_val, align 8, !dbg !5505
  %8 = load i32, i32* %0, align 8, !dbg !5507
  %cmp15 = icmp eq i32 %7, %8, !dbg !5508
  br i1 %cmp15, label %cleanup, label %if.then, !dbg !5509

if.then:                                          ; preds = %cond.end
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5510
  %tobool16 = icmp eq %struct._IO_FILE* %9, null, !dbg !5510
  br i1 %tobool16, label %if.end, label %land.lhs.true17, !dbg !5513

land.lhs.true17:                                  ; preds = %if.then
  %10 = load i32, i32* @dump_flags, align 4, !dbg !5514
  %and = and i32 %10, 8, !dbg !5515
  %tobool18 = icmp eq i32 %and, 0, !dbg !5515
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !5516

if.then19:                                        ; preds = %land.lhs.true17
  %11 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5517
  call fastcc void @dump_lattice_value(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0), i32 %8, %union.tree_node* %11) #7, !dbg !5517
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5519
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !5520
  %.pre1 = load i32, i32* %0, align 8, !dbg !5521
  br label %if.end, !dbg !5522

if.end:                                           ; preds = %land.lhs.true17, %if.then, %if.then19
  %13 = phi i32 [ %8, %land.lhs.true17 ], [ %8, %if.then ], [ %.pre1, %if.then19 ], !dbg !5521
  %14 = bitcast %struct.prop_value_d* %call to i8*, !dbg !5523
  %15 = bitcast %struct.prop_value_d* %new_val to i8*, !dbg !5523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %15, i64 16, i1 false), !dbg !5523
  %cmp22 = icmp eq i32 %13, 1, !dbg !5521
  br i1 %cmp22, label %cond.true23, label %cleanup, !dbg !5521

cond.true23:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 490, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5521
  br label %cleanup, !dbg !5521

cleanup:                                          ; preds = %if.end, %cond.end, %cond.true23
  %retval.0 = phi i8 [ 1, %if.end ], [ 1, %cond.true23 ], [ 0, %cond.end ], !dbg !5501
  ret i8 %retval.0, !dbg !5524
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc { i32, %union.tree_node* } @evaluate_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5525 {
entry:
  %retval = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5529, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5531, metadata !DIExpression()), !dbg !5542
  %call = tail call fastcc i32 @likely_value(%union.gimple_statement_d* %stmt) #7, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %call, metadata !5532, metadata !DIExpression()), !dbg !5542
  tail call void @fold_defer_overflow_warnings() #6, !dbg !5544
  switch i32 %call, label %if.end22 [
    i32 2, label %if.then
    i32 3, label %if.then3
  ], !dbg !5545

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @ccp_fold(%union.gimple_statement_d* %stmt) #7, !dbg !5546
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5531, metadata !DIExpression()), !dbg !5542
  br label %if.end22, !dbg !5547

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %call4, metadata !5535, metadata !DIExpression()), !dbg !5549
  switch i32 %call4, label %cond.true [
    i32 6, label %if.then6
    i32 5, label %if.then14
    i32 8, label %if.end22
    i32 1, label %if.end22
  ], !dbg !5550

if.then6:                                         ; preds = %if.then3
  %call7 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %call7, metadata !5539, metadata !DIExpression()), !dbg !5552
  %call8 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call7) #7, !dbg !5553
  %cmp9 = icmp eq i32 %call8, 3, !dbg !5555
  br i1 %cmp9, label %if.then10, label %if.end22, !dbg !5556

if.then10:                                        ; preds = %if.then6
  %call11 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5557
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5531, metadata !DIExpression()), !dbg !5542
  br label %if.end22, !dbg !5558

if.then14:                                        ; preds = %if.then3
  %call15 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #7, !dbg !5559
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5531, metadata !DIExpression()), !dbg !5542
  br label %if.end22, !dbg !5561

cond.true:                                        ; preds = %if.then3
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 1434, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5562
  br label %if.end22, !dbg !5562

if.end22:                                         ; preds = %entry, %if.then14, %if.then3, %if.then3, %cond.true, %if.then6, %if.then10, %if.then
  %simplified.4 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], [ %call11, %if.then10 ], [ null, %if.then6 ], [ %call15, %if.then14 ], [ null, %if.then3 ], [ null, %if.then3 ], [ null, %cond.true ], !dbg !5563
  call void @llvm.dbg.value(metadata %union.tree_node* %simplified.4, metadata !5531, metadata !DIExpression()), !dbg !5542
  %tobool = icmp eq %union.tree_node* %simplified.4, null, !dbg !5564
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5565

land.rhs:                                         ; preds = %if.end22
  %call23 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %simplified.4) #6, !dbg !5566
  %tobool24 = icmp ne i8 %call23, 0, !dbg !5565
  %phitmp = zext i1 %tobool24 to i8
  br label %land.end

land.end:                                         ; preds = %if.end22, %land.rhs
  %0 = phi i8 [ 0, %if.end22 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %0, metadata !5534, metadata !DIExpression()), !dbg !5542
  tail call void @fold_undefer_overflow_warnings(i8 zeroext %0, %union.gimple_statement_d* %stmt, i32 0) #6, !dbg !5567
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5568
  %tobool26 = icmp eq %struct._IO_FILE* %1, null, !dbg !5568
  br i1 %tobool26, label %if.end36, label %land.lhs.true, !dbg !5570

land.lhs.true:                                    ; preds = %land.end
  %2 = load i32, i32* @dump_flags, align 4, !dbg !5571
  %and = and i32 %2, 8, !dbg !5572
  %tobool27 = icmp eq i32 %and, 0, !dbg !5572
  br i1 %tobool27, label %if.end36, label %if.then28, !dbg !5573

if.then28:                                        ; preds = %land.lhs.true
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5574
  switch i32 %call, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb31
    i32 3, label %sw.bb33
  ], !dbg !5576

sw.bb:                                            ; preds = %if.then28
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5577
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5579
  br label %sw.epilog, !dbg !5580

sw.bb31:                                          ; preds = %if.then28
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5581
  %call32 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !5582
  br label %sw.epilog, !dbg !5583

sw.bb33:                                          ; preds = %if.then28
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5584
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5585
  br label %sw.epilog, !dbg !5586

sw.epilog:                                        ; preds = %if.then28, %sw.bb33, %sw.bb31, %sw.bb
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5587
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5588
  br label %if.end36, !dbg !5589

if.end36:                                         ; preds = %land.lhs.true, %land.end, %sw.epilog
  %tobool37 = icmp eq i8 %0, 0, !dbg !5590
  br i1 %tobool37, label %if.else39, label %if.then38, !dbg !5592

if.then38:                                        ; preds = %if.end36
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !5593
  store i32 2, i32* %lattice_val, align 8, !dbg !5595
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 1, !dbg !5596
  store %union.tree_node* %simplified.4, %union.tree_node** %value, align 8, !dbg !5597
  br label %if.end48, !dbg !5598

if.else39:                                        ; preds = %if.end36
  %cmp40 = icmp eq i32 %call, 1, !dbg !5599
  %lattice_val43 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 0, !dbg !5602
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !5603

if.then42:                                        ; preds = %if.else39
  br label %if.end46, !dbg !5604

if.else44:                                        ; preds = %if.else39
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42
  %storemerge = phi i32 [ 3, %if.else44 ], [ 1, %if.then42 ], !dbg !5602
  store i32 %storemerge, i32* %lattice_val43, align 8, !dbg !5602
  %value47 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %retval, i64 0, i32 1, !dbg !5605
  store %union.tree_node* null, %union.tree_node** %value47, align 8, !dbg !5606
  br label %if.end48

if.end48:                                         ; preds = %if.end46, %if.then38
  %7 = bitcast %struct.prop_value_d* %retval to { i32, %union.tree_node* }*, !dbg !5607
  %8 = load { i32, %union.tree_node* }, { i32, %union.tree_node* }* %7, align 8, !dbg !5607
  ret { i32, %union.tree_node* } %8, !dbg !5607
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @likely_value(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5608 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5612, metadata !DIExpression()), !dbg !5628
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5629
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5629
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5630
  call void @llvm.dbg.value(metadata i32 %call, metadata !5619, metadata !DIExpression()), !dbg !5628
  switch i32 %call, label %cond.true [
    i32 6, label %cond.end
    i32 8, label %cond.end
    i32 1, label %cond.end
    i32 5, label %cond.end
  ], !dbg !5631

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 524, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5631
  br label %cond.end, !dbg !5631

cond.end:                                         ; preds = %entry, %entry, %entry, %entry, %cond.true
  %call6 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5632
  %tobool = icmp eq i8 %call6, 0, !dbg !5632
  br i1 %tobool, label %if.end, label %cleanup71, !dbg !5634

if.end:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8 0, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 0, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 1, metadata !5615, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5617, metadata !DIExpression(DW_OP_deref)), !dbg !5628
  %call7 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5635
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5616, metadata !DIExpression()), !dbg !5628
  br label %for.cond, !dbg !5635

for.cond:                                         ; preds = %for.body, %if.end
  %use.0 = phi %union.tree_node* [ %call7, %if.end ], [ %call18, %for.body ], !dbg !5636
  %all_undefined_operands.0 = phi i8 [ 1, %if.end ], [ %all_undefined_operands.0., %for.body ], !dbg !5637
  %has_undefined_operand.0 = phi i8 [ 0, %if.end ], [ %.has_undefined_operand.0, %for.body ], !dbg !5628
  %has_constant_operand.0 = phi i8 [ 0, %if.end ], [ %has_constant_operand.1, %for.body ], !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.0, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_undefined_operand.0, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %all_undefined_operands.0, metadata !5615, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0, metadata !5616, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5617, metadata !DIExpression(DW_OP_deref)), !dbg !5628
  %call8 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5638
  %tobool9 = icmp eq i8 %call8, 0, !dbg !5638
  br i1 %tobool9, label %for.body, label %for.end, !dbg !5635

for.body:                                         ; preds = %for.cond
  %call10 = call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %use.0) #7, !dbg !5639
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call10, metadata !5620, metadata !DIExpression()), !dbg !5640
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call10, i64 0, i32 0, !dbg !5641
  %1 = load i32, i32* %lattice_val, align 8, !dbg !5641
  %cmp11 = icmp eq i32 %1, 1, !dbg !5643
  %all_undefined_operands.0. = select i1 %cmp11, i8 %all_undefined_operands.0, i8 0
  %.has_undefined_operand.0 = select i1 %cmp11, i8 1, i8 %has_undefined_operand.0
  call void @llvm.dbg.value(metadata i8 %.has_undefined_operand.0, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %all_undefined_operands.0., metadata !5615, metadata !DIExpression()), !dbg !5628
  %cmp15 = icmp eq i32 %1, 2, !dbg !5644
  %has_constant_operand.1 = select i1 %cmp15, i8 1, i8 %has_constant_operand.0, !dbg !5646
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.1, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5617, metadata !DIExpression(DW_OP_deref)), !dbg !5628
  %call18 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5638
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5616, metadata !DIExpression()), !dbg !5628
  br label %for.cond, !dbg !5638, !llvm.loop !5647

for.end:                                          ; preds = %for.cond
  %all_undefined_operands.0.lcssa = phi i8 [ %all_undefined_operands.0, %for.cond ], !dbg !5637
  %has_undefined_operand.0.lcssa = phi i8 [ %has_undefined_operand.0, %for.cond ], !dbg !5628
  %has_constant_operand.0.lcssa = phi i8 [ %has_constant_operand.0, %for.cond ], !dbg !5628
  call void @llvm.dbg.value(metadata i8 %all_undefined_operands.0.lcssa, metadata !5615, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_undefined_operand.0.lcssa, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.0.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %all_undefined_operands.0.lcssa, metadata !5615, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_undefined_operand.0.lcssa, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.0.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %all_undefined_operands.0.lcssa, metadata !5615, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_undefined_operand.0.lcssa, metadata !5614, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.0.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  %call19 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !5649
  %tobool20 = icmp eq i8 %call19, 0, !dbg !5649
  %cond21 = select i1 %tobool20, i32 0, i32 2, !dbg !5649
  %call22 = call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5650
  %conv23 = zext i8 %call22 to i32, !dbg !5650
  %add = add nuw nsw i32 %cond21, %conv23, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %add, metadata !5618, metadata !DIExpression()), !dbg !5628
  br label %for.cond24, !dbg !5652

for.cond24:                                       ; preds = %cleanup, %for.end
  %i.0 = phi i32 [ %add, %for.end ], [ %inc, %cleanup ], !dbg !5653
  %has_constant_operand.2 = phi i8 [ %has_constant_operand.0.lcssa, %for.end ], [ %has_constant_operand.4, %cleanup ], !dbg !5654
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.2, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5618, metadata !DIExpression()), !dbg !5628
  %call25 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5655
  %cmp26 = icmp ult i32 %i.0, %call25, !dbg !5656
  br i1 %cmp26, label %for.body28, label %for.end41, !dbg !5657

for.body28:                                       ; preds = %for.cond24
  %call29 = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !5658
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !5624, metadata !DIExpression()), !dbg !5659
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !5660
  br i1 %tobool30, label %cleanup, label %lor.lhs.false31, !dbg !5662

lor.lhs.false31:                                  ; preds = %for.body28
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5663
  %bf.load = load i64, i64* %2, align 8, !dbg !5663
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !5664
  %cmp32 = icmp eq i64 %bf.cast5, 141, !dbg !5664
  br i1 %cmp32, label %cleanup, label %if.end35, !dbg !5665

if.end35:                                         ; preds = %lor.lhs.false31
  %call36 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call29) #6, !dbg !5666
  %tobool37 = icmp eq i8 %call36, 0, !dbg !5666
  %spec.select = select i1 %tobool37, i8 %has_constant_operand.2, i8 1, !dbg !5668
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !5613, metadata !DIExpression()), !dbg !5628
  br label %cleanup, !dbg !5669

cleanup:                                          ; preds = %for.body28, %lor.lhs.false31, %if.end35
  %has_constant_operand.4 = phi i8 [ %spec.select, %if.end35 ], [ %has_constant_operand.2, %lor.lhs.false31 ], [ %has_constant_operand.2, %for.body28 ], !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.4, metadata !5613, metadata !DIExpression()), !dbg !5628
  %inc = add i32 %i.0, 1, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5618, metadata !DIExpression()), !dbg !5628
  br label %for.cond24, !dbg !5671, !llvm.loop !5672

for.end41:                                        ; preds = %for.cond24
  %has_constant_operand.2.lcssa = phi i8 [ %has_constant_operand.2, %for.cond24 ], !dbg !5654
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.2.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.2.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i8 %has_constant_operand.2.lcssa, metadata !5613, metadata !DIExpression()), !dbg !5628
  %tobool42 = icmp eq i8 %has_constant_operand.2.lcssa, 0, !dbg !5674
  %tobool46 = icmp ne i8 %has_undefined_operand.0.lcssa, 0, !dbg !5676
  %tobool484 = icmp ne i8 %all_undefined_operands.0.lcssa, 0, !dbg !5678
  %tobool48 = and i1 %tobool42, %tobool484, !dbg !5678
  %or.cond = and i1 %tobool46, %tobool48, !dbg !5679
  br i1 %or.cond, label %cleanup71, label %if.else50, !dbg !5679

if.else50:                                        ; preds = %for.end41
  %cmp51 = icmp eq i32 %call, 6, !dbg !5680
  %or.cond2 = and i1 %cmp51, %tobool46, !dbg !5682
  br i1 %or.cond2, label %if.then56, label %if.end59, !dbg !5682

if.then56:                                        ; preds = %if.else50
  %call57 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5683
  switch i32 %call57, label %if.end59 [
    i32 63, label %cleanup71
    i32 64, label %cleanup71
    i32 66, label %cleanup71
  ], !dbg !5685

if.end59:                                         ; preds = %if.else50, %if.then56
  %tobool60 = icmp eq i8 %has_undefined_operand.0.lcssa, 0, !dbg !5686
  br i1 %tobool60, label %if.end62, label %cleanup71, !dbg !5688

if.end62:                                         ; preds = %if.end59
  br i1 %tobool42, label %lor.lhs.false65, label %cleanup71, !dbg !5689

lor.lhs.false65:                                  ; preds = %if.end62
  %call66 = call fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) #7, !dbg !5691
  %tobool68 = icmp eq i8 %call66, 0, !dbg !5691
  %spec.select3 = select i1 %tobool68, i32 3, i32 2, !dbg !5692
  br label %cleanup71, !dbg !5692

cleanup71:                                        ; preds = %if.end62, %if.end59, %cond.end, %lor.lhs.false65, %if.then56, %if.then56, %if.then56, %for.end41
  %retval.0 = phi i32 [ 3, %cond.end ], [ 1, %for.end41 ], [ 1, %if.then56 ], [ 1, %if.then56 ], [ 1, %if.then56 ], [ 3, %if.end59 ], [ 2, %if.end62 ], [ %spec.select3, %lor.lhs.false65 ], !dbg !5628
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5693
  ret i32 %retval.0, !dbg !5693
}

declare dso_local void @fold_defer_overflow_warnings() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ccp_fold(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5694 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5698, metadata !DIExpression()), !dbg !5773
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !5774
  call void @llvm.dbg.value(metadata i32 %call, metadata !5699, metadata !DIExpression()), !dbg !5773
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5775
  switch i32 %call1, label %sw.default657 [
    i32 6, label %sw.bb
    i32 8, label %sw.bb482
    i32 1, label %sw.bb601
    i32 5, label %sw.bb643
  ], !dbg !5776

sw.bb:                                            ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5700, metadata !DIExpression()), !dbg !5778
  %call3 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call2) #7, !dbg !5779
  switch i32 %call3, label %sw.default [
    i32 3, label %sw.bb4
    i32 2, label %sw.bb307
    i32 1, label %sw.bb409
  ], !dbg !5780

sw.bb4:                                           ; preds = %sw.bb
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5781
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5703, metadata !DIExpression()), !dbg !5782
  %idxprom = sext i32 %call2 to i64, !dbg !5783
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5783
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %0, metadata !5706, metadata !DIExpression()), !dbg !5782
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5784
  %bf.load = load i64, i64* %1, align 8, !dbg !5784
  %bf.cast23 = and i64 %bf.load, 65535, !dbg !5785
  %cmp = icmp eq i64 %bf.cast23, 141, !dbg !5785
  br i1 %cmp, label %if.then, label %if.else, !dbg !5786

if.then:                                          ; preds = %sw.bb4
  %call6 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call5) #7, !dbg !5787
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call6, i64 0, i32 1, !dbg !5789
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5789
  br label %cleanup479, !dbg !5790

if.else:                                          ; preds = %sw.bb4
  %cmp11 = icmp eq i64 %bf.cast23, 121, !dbg !5791
  br i1 %cmp11, label %if.then12, label %if.else59, !dbg !5792

if.then12:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5707, metadata !DIExpression(DW_OP_plus_uconst, 40, DW_OP_stack_value)), !dbg !5793
  br label %while.cond, !dbg !5794

while.cond:                                       ; preds = %while.body, %if.then12
  %call5.pn = phi %union.tree_node* [ %call5, %if.then12 ], [ %4, %while.body ]
  %base13.0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node** %base13.0, metadata !5707, metadata !DIExpression()), !dbg !5793
  %3 = load %union.tree_node*, %union.tree_node** %base13.0, align 8, !dbg !5795
  %call15 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %3) #7, !dbg !5796
  %tobool = icmp eq i8 %call15, 0, !dbg !5794
  %4 = load %union.tree_node*, %union.tree_node** %base13.0, align 8, !dbg !5793
  br i1 %tobool, label %while.end, label %while.body, !dbg !5794

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5707, metadata !DIExpression(DW_OP_plus_uconst, 40, DW_OP_stack_value)), !dbg !5793
  br label %while.cond, !dbg !5794, !llvm.loop !5797

while.end:                                        ; preds = %while.cond
  %base13.0.lcssa = phi %union.tree_node** [ %base13.0, %while.cond ], !dbg !5793
  %.lcssa = phi %union.tree_node* [ %4, %while.cond ], !dbg !5793
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5799
  %bf.load20 = load i64, i64* %5, align 8, !dbg !5799
  %bf.cast2238 = and i64 %bf.load20, 65535, !dbg !5800
  %cmp23 = icmp eq i64 %bf.cast2238, 47, !dbg !5800
  br i1 %cmp23, label %land.lhs.true, label %if.end55, !dbg !5801

land.lhs.true:                                    ; preds = %while.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5802
  %7 = bitcast %union.tree_node** %6 to i64**, !dbg !5802
  %8 = load i64*, i64** %7, align 8, !dbg !5802
  %bf.load28 = load i64, i64* %8, align 8, !dbg !5802
  %bf.cast3039 = and i64 %bf.load28, 65535, !dbg !5803
  %cmp31 = icmp eq i64 %bf.cast3039, 141, !dbg !5803
  br i1 %cmp31, label %if.then32, label %if.end55, !dbg !5804

if.then32:                                        ; preds = %land.lhs.true
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !5804
  %call36 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %9) #7, !dbg !5805
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call36, metadata !5711, metadata !DIExpression()), !dbg !5806
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call36, i64 0, i32 0, !dbg !5807
  %10 = load i32, i32* %lattice_val, align 8, !dbg !5807
  %cmp37 = icmp eq i32 %10, 2, !dbg !5808
  br i1 %cmp37, label %land.lhs.true38, label %cleanup, !dbg !5809

land.lhs.true38:                                  ; preds = %if.then32
  %value39 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call36, i64 0, i32 1, !dbg !5810
  %11 = bitcast %union.tree_node** %value39 to i64**, !dbg !5810
  %12 = load i64*, i64** %11, align 8, !dbg !5810
  %bf.load41 = load i64, i64* %12, align 8, !dbg !5810
  %bf.cast4340 = and i64 %bf.load41, 65535, !dbg !5811
  %cmp44 = icmp eq i64 %bf.cast4340, 121, !dbg !5811
  br i1 %cmp44, label %land.lhs.true45, label %cleanup, !dbg !5812

land.lhs.true45:                                  ; preds = %land.lhs.true38
  %13 = bitcast i64* %12 to %union.tree_node*, !dbg !5812
  %14 = load %union.tree_node*, %union.tree_node** %base13.0.lcssa, align 8, !dbg !5813
  %call47 = tail call zeroext i8 @may_propagate_address_into_dereference(%union.tree_node* %13, %union.tree_node* %14) #7, !dbg !5814
  %tobool48 = icmp eq i8 %call47, 0, !dbg !5814
  br i1 %tobool48, label %cleanup, label %if.then49, !dbg !5815

if.then49:                                        ; preds = %land.lhs.true45
  %15 = bitcast %union.tree_node** %base13.0.lcssa to i64*, !dbg !5816
  %16 = load i64, i64* %15, align 8, !dbg !5816
  %17 = bitcast %union.tree_node** %value39 to %struct.tree_exp**, !dbg !5817
  %18 = load %struct.tree_exp*, %struct.tree_exp** %17, align 8, !dbg !5817
  %arrayidx53 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i64 0, i32 3, i64 0, !dbg !5817
  %19 = bitcast %union.tree_node** %arrayidx53 to i64*, !dbg !5817
  %20 = load i64, i64* %19, align 8, !dbg !5817
  store i64 %20, i64* %15, align 8, !dbg !5818
  %call54 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %call5) #6, !dbg !5819
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !5714, metadata !DIExpression()), !dbg !5820
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %call54) #6, !dbg !5821
  store i64 %16, i64* %15, align 8, !dbg !5822
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true45, %if.then32, %land.lhs.true38, %if.then49
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then49 ], [ 0, %land.lhs.true45 ], [ 0, %land.lhs.true38 ], [ 0, %if.then32 ]
  %retval.0 = phi %union.tree_node* [ %call54, %if.then49 ], [ undef, %land.lhs.true45 ], [ undef, %land.lhs.true38 ], [ undef, %if.then32 ]
  %cond5 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond5, label %if.end55, label %cleanup56

if.end55:                                         ; preds = %cleanup, %land.lhs.true, %while.end
  %retval.1 = phi %union.tree_node* [ undef, %land.lhs.true ], [ undef, %while.end ], [ %retval.0, %cleanup ]
  br label %cleanup56, !dbg !5823

cleanup56:                                        ; preds = %cleanup, %if.end55
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end55 ]
  %retval.2 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %retval.1, %if.end55 ], !dbg !5824
  %cond4 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond4, label %if.end166, label %cleanup479

if.else59:                                        ; preds = %if.else
  %cmp64 = icmp eq i64 %bf.cast23, 51, !dbg !5825
  br i1 %cmp64, label %land.lhs.true66, label %if.end166, !dbg !5826

land.lhs.true66:                                  ; preds = %if.else59
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5827
  %21 = bitcast %union.tree_node** %type to i64**, !dbg !5827
  %22 = load i64*, i64** %21, align 8, !dbg !5827
  %bf.load68 = load i64, i64* %22, align 8, !dbg !5827
  %bf.cast7033 = and i64 %bf.load68, 65535, !dbg !5828
  %cmp71 = icmp eq i64 %bf.cast7033, 14, !dbg !5828
  br i1 %cmp71, label %land.lhs.true73, label %if.end166, !dbg !5829

land.lhs.true73:                                  ; preds = %land.lhs.true66
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5830
  %23 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5830
  %24 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %23, align 8, !dbg !5830
  %tobool74 = icmp eq %struct.VEC_constructor_elt_gc* %24, null, !dbg !5830
  br i1 %tobool74, label %cond.end, label %cond.true, !dbg !5830

cond.true:                                        ; preds = %land.lhs.true73
  %base77 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %24, i64 0, i32 0, !dbg !5830
  br label %cond.end, !dbg !5830

cond.end:                                         ; preds = %land.lhs.true73, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base77, %cond.true ], [ null, %land.lhs.true73 ], !dbg !5830
  %call78 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #7, !dbg !5830
  %conv79 = zext i32 %call78 to i64, !dbg !5830
  %25 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5831
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !5831
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 6, !dbg !5831
  %bf.load83 = load i32, i32* %precision, align 4, !dbg !5831
  %bf.clear84 = and i32 %bf.load83, 1023, !dbg !5831
  %sh_prom = zext i32 %bf.clear84 to i64, !dbg !5831
  %shl = shl i64 1, %sh_prom, !dbg !5831
  %cmp85 = icmp eq i64 %shl, %conv79, !dbg !5832
  br i1 %cmp85, label %for.cond.preheader, label %if.end166, !dbg !5833

for.cond.preheader:                               ; preds = %cond.end
  br label %for.cond, !dbg !5834

for.cond:                                         ; preds = %for.cond.preheader, %if.then153
  %list.0 = phi %union.tree_node* [ %call154, %if.then153 ], [ null, %for.cond.preheader ], !dbg !5836
  %val88.0 = phi %union.tree_node* [ %val88.2, %if.then153 ], [ undef, %for.cond.preheader ]
  %i.0 = phi i32 [ %inc, %if.then153 ], [ 0, %for.cond.preheader ], !dbg !5837
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5718, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata %union.tree_node* %val88.0, metadata !5721, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !5722, metadata !DIExpression()), !dbg !5836
  %27 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %23, align 8, !dbg !5838
  %tobool91 = icmp eq %struct.VEC_constructor_elt_gc* %27, null, !dbg !5838
  br i1 %tobool91, label %cond.end97, label %cond.true92, !dbg !5838

cond.true92:                                      ; preds = %for.cond
  %base95 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %27, i64 0, i32 0, !dbg !5838
  br label %cond.end97, !dbg !5838

cond.end97:                                       ; preds = %for.cond, %cond.true92
  %cond98 = phi %struct.VEC_constructor_elt_base* [ %base95, %cond.true92 ], [ null, %for.cond ], !dbg !5838
  %call99 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond98) #7, !dbg !5838
  %cmp100 = icmp ult i32 %i.0, %call99, !dbg !5838
  br i1 %cmp100, label %cond.false103, label %cond.end116, !dbg !5838

cond.false103:                                    ; preds = %cond.end97
  %28 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %23, align 8, !dbg !5838
  %tobool106 = icmp eq %struct.VEC_constructor_elt_gc* %28, null, !dbg !5838
  br i1 %tobool106, label %cond.end112, label %cond.true107, !dbg !5838

cond.true107:                                     ; preds = %cond.false103
  %base110 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %28, i64 0, i32 0, !dbg !5838
  br label %cond.end112, !dbg !5838

cond.end112:                                      ; preds = %cond.false103, %cond.true107
  %cond113 = phi %struct.VEC_constructor_elt_base* [ %base110, %cond.true107 ], [ null, %cond.false103 ], !dbg !5838
  %call114 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond113, i32 %i.0) #7, !dbg !5838
  %value115 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call114, i64 0, i32 1, !dbg !5838
  %29 = load %union.tree_node*, %union.tree_node** %value115, align 8, !dbg !5838
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5721, metadata !DIExpression()), !dbg !5836
  br label %cond.end116, !dbg !5838

cond.end116:                                      ; preds = %cond.end97, %cond.end112
  %val88.1 = phi %union.tree_node* [ %29, %cond.end112 ], [ %val88.0, %cond.end97 ]
  %cond117 = phi i1 [ true, %cond.end112 ], [ false, %cond.end97 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val88.1, metadata !5721, metadata !DIExpression()), !dbg !5836
  br i1 %cond117, label %for.body, label %for.end, !dbg !5834

for.body:                                         ; preds = %cond.end116
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %val88.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5840
  %bf.load120 = load i64, i64* %30, align 8, !dbg !5840
  %bf.cast12234 = and i64 %bf.load120, 65535, !dbg !5843
  %cmp123 = icmp eq i64 %bf.cast12234, 141, !dbg !5843
  br i1 %cmp123, label %land.lhs.true125, label %if.end133, !dbg !5844

land.lhs.true125:                                 ; preds = %for.body
  %call126 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %val88.1) #7, !dbg !5845
  %lattice_val127 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call126, i64 0, i32 0, !dbg !5846
  %31 = load i32, i32* %lattice_val127, align 8, !dbg !5846
  %cmp128 = icmp eq i32 %31, 2, !dbg !5847
  br i1 %cmp128, label %if.then130, label %if.end133, !dbg !5848

if.then130:                                       ; preds = %land.lhs.true125
  %call131 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %val88.1) #7, !dbg !5849
  %value132 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call131, i64 0, i32 1, !dbg !5850
  %32 = load %union.tree_node*, %union.tree_node** %value132, align 8, !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !5721, metadata !DIExpression()), !dbg !5836
  br label %if.end133, !dbg !5851

if.end133:                                        ; preds = %if.then130, %land.lhs.true125, %for.body
  %val88.2 = phi %union.tree_node* [ %32, %if.then130 ], [ %val88.1, %land.lhs.true125 ], [ %val88.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val88.2, metadata !5721, metadata !DIExpression()), !dbg !5836
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %val88.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5852
  %bf.load135 = load i64, i64* %33, align 8, !dbg !5852
  %bf.cast13735 = and i64 %bf.load135, 65535, !dbg !5854
  %cmp138 = icmp eq i64 %bf.cast13735, 23, !dbg !5854
  br i1 %cmp138, label %if.then153, label %lor.lhs.false, !dbg !5855

lor.lhs.false:                                    ; preds = %if.end133
  %cmp144 = icmp eq i64 %bf.cast13735, 24, !dbg !5856
  br i1 %cmp144, label %if.then153, label %lor.lhs.false146, !dbg !5857

lor.lhs.false146:                                 ; preds = %lor.lhs.false
  %cmp151 = icmp eq i64 %bf.cast13735, 25, !dbg !5858
  br i1 %cmp151, label %if.then153, label %cleanup479.loopexit, !dbg !5859

if.then153:                                       ; preds = %lor.lhs.false146, %lor.lhs.false, %if.end133
  %call154 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %val88.2, %union.tree_node* %list.0) #6, !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !5722, metadata !DIExpression()), !dbg !5836
  %inc = add i32 %i.0, 1, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5718, metadata !DIExpression()), !dbg !5836
  br label %for.cond, !dbg !5838, !llvm.loop !5861

for.end:                                          ; preds = %cond.end116
  %list.0.lcssa = phi %union.tree_node* [ %list.0, %cond.end116 ], !dbg !5836
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5722, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5722, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5722, metadata !DIExpression()), !dbg !5836
  %34 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5863
  %call159 = tail call %union.tree_node* @nreverse(%union.tree_node* %list.0.lcssa) #6, !dbg !5864
  %call160 = tail call %union.tree_node* @build_vector(%union.tree_node* %34, %union.tree_node* %call159) #6, !dbg !5865
  br label %cleanup479, !dbg !5866

if.end166:                                        ; preds = %cleanup56, %cond.end, %land.lhs.true66, %if.else59
  %retval.4 = phi %union.tree_node* [ %retval.2, %cleanup56 ], [ undef, %cond.end ], [ undef, %land.lhs.true66 ], [ undef, %if.else59 ]
  switch i32 %0, label %cleanup479 [
    i32 4, label %if.then169
    i32 3, label %if.then301
  ], !dbg !5867

if.then169:                                       ; preds = %if.end166
  %bf.load171 = load i64, i64* %1, align 8, !dbg !5868
  %bf.cast17326 = and i64 %bf.load171, 65535, !dbg !5869
  %cmp174 = icmp eq i64 %bf.cast17326, 118, !dbg !5869
  br i1 %cmp174, label %land.lhs.true190, label %lor.lhs.false176, !dbg !5870

lor.lhs.false176:                                 ; preds = %if.then169
  %cmp181 = icmp eq i64 %bf.cast17326, 43, !dbg !5871
  br i1 %cmp181, label %land.lhs.true190, label %lor.lhs.false183, !dbg !5872

lor.lhs.false183:                                 ; preds = %lor.lhs.false176
  %cmp188 = icmp eq i64 %bf.cast17326, 44, !dbg !5873
  br i1 %cmp188, label %land.lhs.true190, label %if.else244, !dbg !5874

land.lhs.true190:                                 ; preds = %lor.lhs.false183, %lor.lhs.false176, %if.then169
  %operands192 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5875
  %35 = bitcast %union.tree_node** %operands192 to i64**, !dbg !5875
  %36 = load i64*, i64** %35, align 8, !dbg !5875
  %bf.load195 = load i64, i64* %36, align 8, !dbg !5875
  %bf.cast19732 = and i64 %bf.load195, 65535, !dbg !5876
  %cmp198 = icmp eq i64 %bf.cast19732, 141, !dbg !5876
  br i1 %cmp198, label %if.then200, label %if.else244, !dbg !5877

if.then200:                                       ; preds = %land.lhs.true190
  %37 = bitcast i64* %36 to %union.tree_node*, !dbg !5877
  %call205 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %37) #7, !dbg !5878
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call205, metadata !5723, metadata !DIExpression()), !dbg !5879
  %lattice_val206 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call205, i64 0, i32 0, !dbg !5880
  %38 = load i32, i32* %lattice_val206, align 8, !dbg !5880
  %cmp207 = icmp eq i32 %38, 2, !dbg !5882
  br i1 %cmp207, label %if.then209, label %cleanup241, !dbg !5883

if.then209:                                       ; preds = %if.then200
  %bf.load211 = load i64, i64* %1, align 8, !dbg !5884
  %bf.cast213 = and i64 %bf.load211, 65535, !dbg !5884
  %arrayidx215 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast213, !dbg !5884
  %39 = load i32, i32* %arrayidx215, align 4, !dbg !5884
  %cmp216 = icmp ugt i32 %39, 3, !dbg !5884
  br i1 %cmp216, label %land.lhs.true218, label %cond.end230, !dbg !5884

land.lhs.true218:                                 ; preds = %if.then209
  %cmp225 = icmp ult i32 %39, 11, !dbg !5884
  br i1 %cmp225, label %cond.true227, label %cond.end230, !dbg !5884

cond.true227:                                     ; preds = %land.lhs.true218
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5884
  %41 = load i32, i32* %40, align 8, !dbg !5884
  br label %cond.end230, !dbg !5884

cond.end230:                                      ; preds = %if.then209, %land.lhs.true218, %cond.true227
  %cond231 = phi i32 [ %41, %cond.true227 ], [ 0, %land.lhs.true218 ], [ 0, %if.then209 ], !dbg !5884
  %42 = trunc i64 %bf.load211 to i32, !dbg !5885
  %bf.cast235 = and i32 %42, 65535, !dbg !5885
  %type237 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5886
  %43 = load %union.tree_node*, %union.tree_node** %type237, align 8, !dbg !5886
  %value238 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call205, i64 0, i32 1, !dbg !5887
  %44 = load %union.tree_node*, %union.tree_node** %value238, align 8, !dbg !5887
  %call239 = tail call %union.tree_node* @fold_unary_loc(i32 %cond231, i32 %bf.cast235, %union.tree_node* %43, %union.tree_node* %44) #6, !dbg !5888
  br label %cleanup241, !dbg !5889

cleanup241:                                       ; preds = %if.then200, %cond.end230
  %cleanup.dest.slot.3 = phi i32 [ 1, %cond.end230 ], [ 0, %if.then200 ]
  %retval.5 = phi %union.tree_node* [ %call239, %cond.end230 ], [ %retval.4, %if.then200 ], !dbg !5782
  %cond3 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond3, label %if.end296, label %cleanup479

if.else244:                                       ; preds = %land.lhs.true190, %lor.lhs.false183
  %cmp249 = icmp eq i64 %bf.cast17326, 47, !dbg !5890
  br i1 %cmp249, label %land.lhs.true251, label %if.end296, !dbg !5891

land.lhs.true251:                                 ; preds = %if.else244
  %operands253 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5892
  %45 = bitcast %union.tree_node** %operands253 to i64**, !dbg !5892
  %46 = load i64*, i64** %45, align 8, !dbg !5892
  %bf.load256 = load i64, i64* %46, align 8, !dbg !5892
  %bf.cast25830 = and i64 %bf.load256, 65535, !dbg !5893
  %cmp259 = icmp eq i64 %bf.cast25830, 141, !dbg !5893
  br i1 %cmp259, label %if.then261, label %if.end296, !dbg !5894

if.then261:                                       ; preds = %land.lhs.true251
  %47 = bitcast i64* %46 to %union.tree_node*, !dbg !5894
  %call266 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %47) #7, !dbg !5895
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call266, metadata !5728, metadata !DIExpression()), !dbg !5896
  %lattice_val267 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call266, i64 0, i32 0, !dbg !5897
  %48 = load i32, i32* %lattice_val267, align 8, !dbg !5897
  %cmp268 = icmp eq i32 %48, 2, !dbg !5899
  br i1 %cmp268, label %land.lhs.true270, label %if.end296, !dbg !5900

land.lhs.true270:                                 ; preds = %if.then261
  %value271 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call266, i64 0, i32 1, !dbg !5901
  %49 = bitcast %union.tree_node** %value271 to i64**, !dbg !5901
  %50 = load i64*, i64** %49, align 8, !dbg !5901
  %bf.load273 = load i64, i64* %50, align 8, !dbg !5901
  %bf.cast27531 = and i64 %bf.load273, 65535, !dbg !5902
  %cmp276 = icmp eq i64 %bf.cast27531, 121, !dbg !5902
  br i1 %cmp276, label %land.lhs.true278, label %if.end296, !dbg !5903

land.lhs.true278:                                 ; preds = %land.lhs.true270
  %type280 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5904
  %51 = load %union.tree_node*, %union.tree_node** %type280, align 8, !dbg !5904
  %type283 = getelementptr inbounds i64, i64* %50, i64 2, !dbg !5905
  %52 = bitcast i64* %type283 to %struct.tree_common**, !dbg !5905
  %53 = load %struct.tree_common*, %struct.tree_common** %52, align 8, !dbg !5905
  %type285 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i64 0, i32 2, !dbg !5905
  %54 = load %union.tree_node*, %union.tree_node** %type285, align 8, !dbg !5905
  %call286 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %51, %union.tree_node* %54) #6, !dbg !5906
  %tobool288 = icmp eq i8 %call286, 0, !dbg !5906
  br i1 %tobool288, label %if.end296, label %if.then289, !dbg !5907

if.then289:                                       ; preds = %land.lhs.true278
  %55 = bitcast %union.tree_node** %value271 to %struct.tree_exp**, !dbg !5908
  %56 = load %struct.tree_exp*, %struct.tree_exp** %55, align 8, !dbg !5908
  %arrayidx293 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %56, i64 0, i32 3, i64 0, !dbg !5908
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx293, align 8, !dbg !5908
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !5703, metadata !DIExpression()), !dbg !5782
  br label %if.end296, !dbg !5909

if.end296:                                        ; preds = %land.lhs.true278, %if.else244, %land.lhs.true251, %if.then289, %land.lhs.true270, %if.then261, %cleanup241
  %rhs.2 = phi %union.tree_node* [ %call5, %cleanup241 ], [ %call5, %land.lhs.true251 ], [ %call5, %if.else244 ], [ %57, %if.then289 ], [ %call5, %land.lhs.true278 ], [ %call5, %land.lhs.true270 ], [ %call5, %if.then261 ], !dbg !5782
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.2, metadata !5703, metadata !DIExpression()), !dbg !5782
  %call297 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %rhs.2) #7, !dbg !5910
  br label %cleanup479, !dbg !5911

if.then301:                                       ; preds = %if.end166
  %call302 = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %call5) #7, !dbg !5912
  br label %cleanup479, !dbg !5914

sw.bb307:                                         ; preds = %sw.bb
  %call308 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5915
  call void @llvm.dbg.value(metadata %union.tree_node* %call308, metadata !5731, metadata !DIExpression()), !dbg !5916
  %call309 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5917
  call void @llvm.dbg.value(metadata %union.tree_node* %call309, metadata !5733, metadata !DIExpression()), !dbg !5916
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5918
  %bf.load311 = load i64, i64* %58, align 8, !dbg !5918
  %bf.cast31317 = and i64 %bf.load311, 65535, !dbg !5919
  %cmp314 = icmp eq i64 %bf.cast31317, 141, !dbg !5919
  br i1 %cmp314, label %if.then316, label %if.end326, !dbg !5920

if.then316:                                       ; preds = %sw.bb307
  %call318 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call309) #7, !dbg !5921
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call318, metadata !5734, metadata !DIExpression()), !dbg !5922
  %lattice_val319 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call318, i64 0, i32 0, !dbg !5923
  %59 = load i32, i32* %lattice_val319, align 8, !dbg !5923
  %cmp320 = icmp eq i32 %59, 2, !dbg !5925
  br i1 %cmp320, label %if.then322, label %if.end326, !dbg !5926

if.then322:                                       ; preds = %if.then316
  %call323 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call309) #7, !dbg !5927
  %value324 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call323, i64 0, i32 1, !dbg !5928
  %60 = load %union.tree_node*, %union.tree_node** %value324, align 8, !dbg !5928
  call void @llvm.dbg.value(metadata %union.tree_node* %60, metadata !5733, metadata !DIExpression()), !dbg !5916
  br label %if.end326, !dbg !5929

if.end326:                                        ; preds = %if.then316, %if.then322, %sw.bb307
  %op0.1 = phi %union.tree_node* [ %call309, %sw.bb307 ], [ %60, %if.then322 ], [ %call309, %if.then316 ], !dbg !5916
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !5733, metadata !DIExpression()), !dbg !5916
  switch i32 %call2, label %if.end404 [
    i32 116, label %land.lhs.true332
    i32 113, label %land.lhs.true332
  ], !dbg !5930

land.lhs.true332:                                 ; preds = %if.end326, %if.end326
  %type334 = getelementptr inbounds %union.tree_node, %union.tree_node* %call308, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5931
  %61 = bitcast %union.tree_node** %type334 to i64**, !dbg !5931
  %62 = load i64*, i64** %61, align 8, !dbg !5931
  %bf.load336 = load i64, i64* %62, align 8, !dbg !5931
  %bf.cast33818 = and i64 %bf.load336, 65535, !dbg !5931
  %cmp339 = icmp eq i64 %bf.cast33818, 10, !dbg !5931
  %63 = bitcast i64* %62 to %union.tree_node*, !dbg !5931
  br i1 %cmp339, label %land.lhs.true350, label %lor.lhs.false341, !dbg !5931

lor.lhs.false341:                                 ; preds = %land.lhs.true332
  %cmp348 = icmp eq i64 %bf.cast33818, 12, !dbg !5931
  br i1 %cmp348, label %land.lhs.true350, label %if.end404, !dbg !5932

land.lhs.true350:                                 ; preds = %lor.lhs.false341, %land.lhs.true332
  %type352 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5933
  %64 = bitcast %union.tree_node** %type352 to i64**, !dbg !5933
  %65 = load i64*, i64** %64, align 8, !dbg !5933
  %bf.load354 = load i64, i64* %65, align 8, !dbg !5933
  %bf.cast35620 = and i64 %bf.load354, 65535, !dbg !5933
  %cmp357 = icmp eq i64 %bf.cast35620, 10, !dbg !5933
  %66 = bitcast i64* %65 to %union.tree_node*, !dbg !5933
  br i1 %cmp357, label %land.lhs.true368, label %lor.lhs.false359, !dbg !5933

lor.lhs.false359:                                 ; preds = %land.lhs.true350
  %cmp366 = icmp eq i64 %bf.cast35620, 12, !dbg !5933
  br i1 %cmp366, label %land.lhs.true368, label %if.end404, !dbg !5934

land.lhs.true368:                                 ; preds = %lor.lhs.false359, %land.lhs.true350
  %type372 = getelementptr inbounds i64, i64* %62, i64 2, !dbg !5935
  %67 = bitcast i64* %type372 to i64**, !dbg !5935
  %68 = load i64*, i64** %67, align 8, !dbg !5935
  %bf.load374 = load i64, i64* %68, align 8, !dbg !5935
  %type380 = getelementptr inbounds i64, i64* %65, i64 2, !dbg !5936
  %69 = bitcast i64* %type380 to i64**, !dbg !5936
  %70 = load i64*, i64** %69, align 8, !dbg !5936
  %bf.load382 = load i64, i64* %70, align 8, !dbg !5936
  %bf.lshr41 = xor i64 %bf.load374, %bf.load382, !dbg !5937
  %71 = and i64 %bf.lshr41, 524288, !dbg !5937
  %cmp386 = icmp eq i64 %71, 0, !dbg !5937
  br i1 %cmp386, label %if.then388, label %if.end404, !dbg !5938

if.then388:                                       ; preds = %land.lhs.true368
  %call393 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %63, %union.tree_node* %66) #6, !dbg !5939
  %tobool394 = icmp eq i8 %call393, 0, !dbg !5939
  br i1 %tobool394, label %land.lhs.true395, label %if.end402, !dbg !5941

land.lhs.true395:                                 ; preds = %if.then388
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5942
  %73 = load %union.tree_node*, %union.tree_node** %type334, align 8, !dbg !5943
  %call398 = tail call %union.tree_node* @maybe_fold_offset_to_address(i32 %call, %union.tree_node* %op0.1, %union.tree_node* %72, %union.tree_node* %73) #7, !dbg !5944
  call void @llvm.dbg.value(metadata %union.tree_node* %call398, metadata !5737, metadata !DIExpression()), !dbg !5945
  %cmp399 = icmp eq %union.tree_node* %call398, null, !dbg !5946
  br i1 %cmp399, label %if.end402, label %cleanup479, !dbg !5947

if.end402:                                        ; preds = %land.lhs.true395, %if.then388
  br label %cleanup479, !dbg !5948

if.end404:                                        ; preds = %if.end326, %land.lhs.true368, %lor.lhs.false359, %lor.lhs.false341
  %call405 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !5949
  %call406 = tail call %union.tree_node* @fold_unary_ignore_overflow_loc(i32 %call, i32 %call2, %union.tree_node* %call405, %union.tree_node* %op0.1) #6, !dbg !5950
  br label %cleanup479, !dbg !5951

sw.bb409:                                         ; preds = %sw.bb
  %call411 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5952
  call void @llvm.dbg.value(metadata %union.tree_node* %call411, metadata !5740, metadata !DIExpression()), !dbg !5953
  %call412 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !5954
  call void @llvm.dbg.value(metadata %union.tree_node* %call412, metadata !5742, metadata !DIExpression()), !dbg !5953
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %call411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5955
  %bf.load414 = load i64, i64* %74, align 8, !dbg !5955
  %bf.cast41613 = and i64 %bf.load414, 65535, !dbg !5956
  %cmp417 = icmp eq i64 %bf.cast41613, 141, !dbg !5956
  br i1 %cmp417, label %if.then419, label %if.end428, !dbg !5957

if.then419:                                       ; preds = %sw.bb409
  %call421 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call411) #7, !dbg !5958
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call421, metadata !5743, metadata !DIExpression()), !dbg !5959
  %lattice_val422 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call421, i64 0, i32 0, !dbg !5960
  %75 = load i32, i32* %lattice_val422, align 8, !dbg !5960
  %cmp423 = icmp eq i32 %75, 2, !dbg !5962
  br i1 %cmp423, label %if.then425, label %if.end428, !dbg !5963

if.then425:                                       ; preds = %if.then419
  %value426 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call421, i64 0, i32 1, !dbg !5964
  %76 = load %union.tree_node*, %union.tree_node** %value426, align 8, !dbg !5964
  call void @llvm.dbg.value(metadata %union.tree_node* %76, metadata !5740, metadata !DIExpression()), !dbg !5953
  br label %if.end428, !dbg !5965

if.end428:                                        ; preds = %if.then419, %if.then425, %sw.bb409
  %op0410.1 = phi %union.tree_node* [ %call411, %sw.bb409 ], [ %76, %if.then425 ], [ %call411, %if.then419 ], !dbg !5953
  call void @llvm.dbg.value(metadata %union.tree_node* %op0410.1, metadata !5740, metadata !DIExpression()), !dbg !5953
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %call412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5966
  %bf.load430 = load i64, i64* %77, align 8, !dbg !5966
  %bf.cast43214 = and i64 %bf.load430, 65535, !dbg !5967
  %cmp433 = icmp eq i64 %bf.cast43214, 141, !dbg !5967
  br i1 %cmp433, label %if.then435, label %if.end444, !dbg !5968

if.then435:                                       ; preds = %if.end428
  %call437 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call412) #7, !dbg !5969
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call437, metadata !5746, metadata !DIExpression()), !dbg !5970
  %lattice_val438 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call437, i64 0, i32 0, !dbg !5971
  %78 = load i32, i32* %lattice_val438, align 8, !dbg !5971
  %cmp439 = icmp eq i32 %78, 2, !dbg !5973
  br i1 %cmp439, label %if.then441, label %if.end444, !dbg !5974

if.then441:                                       ; preds = %if.then435
  %value442 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call437, i64 0, i32 1, !dbg !5975
  %79 = load %union.tree_node*, %union.tree_node** %value442, align 8, !dbg !5975
  call void @llvm.dbg.value(metadata %union.tree_node* %79, metadata !5742, metadata !DIExpression()), !dbg !5953
  br label %if.end444, !dbg !5976

if.end444:                                        ; preds = %if.then435, %if.then441, %if.end428
  %op1.1 = phi %union.tree_node* [ %call412, %if.end428 ], [ %79, %if.then441 ], [ %call412, %if.then435 ], !dbg !5953
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.1, metadata !5742, metadata !DIExpression()), !dbg !5953
  %call445 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5977
  %cmp446 = icmp eq i32 %call445, 66, !dbg !5978
  br i1 %cmp446, label %land.lhs.true448, label %if.end474, !dbg !5979

land.lhs.true448:                                 ; preds = %if.end444
  %80 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0410.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5980
  %bf.load450 = load i64, i64* %80, align 8, !dbg !5980
  %bf.cast45215 = and i64 %bf.load450, 65535, !dbg !5981
  %cmp453 = icmp eq i64 %bf.cast45215, 121, !dbg !5981
  br i1 %cmp453, label %land.lhs.true455, label %if.end474, !dbg !5982

land.lhs.true455:                                 ; preds = %land.lhs.true448
  %81 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5983
  %bf.load457 = load i64, i64* %81, align 8, !dbg !5983
  %bf.cast45916 = and i64 %bf.load457, 65535, !dbg !5984
  %cmp460 = icmp eq i64 %bf.cast45916, 23, !dbg !5984
  br i1 %cmp460, label %if.then462, label %if.end474, !dbg !5985

if.then462:                                       ; preds = %land.lhs.true455
  %type465 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0410.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5986
  %82 = load %union.tree_node*, %union.tree_node** %type465, align 8, !dbg !5986
  %call466 = tail call %union.tree_node* @maybe_fold_offset_to_address(i32 %call, %union.tree_node* %op0410.1, %union.tree_node* %op1.1, %union.tree_node* %82) #7, !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %call466, metadata !5749, metadata !DIExpression()), !dbg !5988
  %cmp467 = icmp ne %union.tree_node* %call466, null, !dbg !5989
  %. = zext i1 %cmp467 to i32, !dbg !5991
  br i1 %cmp467, label %cleanup479, label %if.end474

if.end474:                                        ; preds = %if.then462, %land.lhs.true455, %land.lhs.true448, %if.end444
  %call475 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !5992
  %call476 = tail call %union.tree_node* @fold_binary_loc(i32 %call, i32 %call2, %union.tree_node* %call475, %union.tree_node* %op0410.1, %union.tree_node* %op1.1) #6, !dbg !5993
  br label %cleanup479, !dbg !5994

sw.default:                                       ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 1119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5995
  br label %cleanup479, !dbg !5996

cleanup479.loopexit:                              ; preds = %lor.lhs.false146
  br label %cleanup479

cleanup479:                                       ; preds = %cleanup479.loopexit, %land.lhs.true395, %if.then462, %if.end474, %if.end404, %if.end402, %if.then, %if.end296, %if.then301, %cleanup241, %cleanup56, %for.end, %if.end166, %sw.default
  %cleanup.dest.slot.9 = phi i32 [ 0, %sw.default ], [ 1, %if.then ], [ %cleanup.dest.slot.1, %cleanup56 ], [ %cleanup.dest.slot.3, %cleanup241 ], [ 1, %if.end296 ], [ 1, %if.then301 ], [ 1, %for.end ], [ 1, %if.end166 ], [ 1, %if.end402 ], [ 1, %land.lhs.true395 ], [ 1, %if.end404 ], [ %., %if.then462 ], [ 1, %if.end474 ], [ 1, %cleanup479.loopexit ]
  %retval.11 = phi %union.tree_node* [ undef, %sw.default ], [ %2, %if.then ], [ %retval.2, %cleanup56 ], [ %retval.5, %cleanup241 ], [ %call297, %if.end296 ], [ %call302, %if.then301 ], [ %call160, %for.end ], [ %call5, %if.end166 ], [ %op0.1, %if.end402 ], [ %call398, %land.lhs.true395 ], [ %call406, %if.end404 ], [ %call466, %if.then462 ], [ %call476, %if.end474 ], [ null, %cleanup479.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.9, 0
  br i1 %cond1, label %sw.epilog658, label %cleanup659

sw.bb482:                                         ; preds = %entry
  %call483 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %stmt) #7, !dbg !5997
  call void @llvm.dbg.value(metadata %union.tree_node* %call483, metadata !5752, metadata !DIExpression()), !dbg !5998
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call483, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5999
  %bf.load486 = load i64, i64* %83, align 8, !dbg !5999
  %bf.cast4889 = and i64 %bf.load486, 65535, !dbg !6001
  %cmp489 = icmp eq i64 %bf.cast4889, 141, !dbg !6001
  br i1 %cmp489, label %if.then491, label %if.end499, !dbg !6002

if.then491:                                       ; preds = %sw.bb482
  %call492 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call483) #7, !dbg !6003
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call492, metadata !5754, metadata !DIExpression()), !dbg !5998
  %lattice_val493 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call492, i64 0, i32 0, !dbg !6005
  %84 = load i32, i32* %lattice_val493, align 8, !dbg !6005
  %cmp494 = icmp eq i32 %84, 2, !dbg !6007
  br i1 %cmp494, label %if.then496, label %if.end499, !dbg !6008

if.then496:                                       ; preds = %if.then491
  %value497 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call492, i64 0, i32 1, !dbg !6009
  %85 = load %union.tree_node*, %union.tree_node** %value497, align 8, !dbg !6009
  call void @llvm.dbg.value(metadata %union.tree_node* %85, metadata !5752, metadata !DIExpression()), !dbg !5998
  br label %if.end499, !dbg !6010

if.end499:                                        ; preds = %if.then491, %if.then496, %sw.bb482
  %fn.1 = phi %union.tree_node* [ %call483, %sw.bb482 ], [ %85, %if.then496 ], [ %call483, %if.then491 ], !dbg !5998
  call void @llvm.dbg.value(metadata %union.tree_node* %fn.1, metadata !5752, metadata !DIExpression()), !dbg !5998
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %fn.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6011
  %bf.load501 = load i64, i64* %86, align 8, !dbg !6011
  %bf.cast50310 = and i64 %bf.load501, 65535, !dbg !6012
  %cmp504 = icmp eq i64 %bf.cast50310, 121, !dbg !6012
  br i1 %cmp504, label %land.lhs.true506, label %cleanup659, !dbg !6013

land.lhs.true506:                                 ; preds = %if.end499
  %operands508 = getelementptr inbounds %union.tree_node, %union.tree_node* %fn.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6014
  %87 = bitcast %union.tree_node** %operands508 to i64**, !dbg !6014
  %88 = load i64*, i64** %87, align 8, !dbg !6014
  %bf.load511 = load i64, i64* %88, align 8, !dbg !6014
  %bf.cast51311 = and i64 %bf.load511, 65535, !dbg !6015
  %cmp514 = icmp eq i64 %bf.cast51311, 29, !dbg !6015
  br i1 %cmp514, label %land.lhs.true516, label %cleanup659, !dbg !6016

land.lhs.true516:                                 ; preds = %land.lhs.true506
  %built_in_class = getelementptr inbounds i64, i64* %88, i64 27, !dbg !6017
  %89 = bitcast i64* %built_in_class to i32*, !dbg !6017
  %bf.load520 = load i32, i32* %89, align 8, !dbg !6017
  %bf.clear522 = and i32 %bf.load520, 6144, !dbg !6017
  %cmp523 = icmp eq i32 %bf.clear522, 0, !dbg !6017
  br i1 %cmp523, label %cleanup659, label %if.then525, !dbg !6018

if.then525:                                       ; preds = %land.lhs.true516
  %call526 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !6019
  %conv527 = zext i32 %call526 to i64, !dbg !6019
  %90 = alloca %union.tree_node*, i64 %conv527, align 16, !dbg !6019
  call void @llvm.dbg.value(metadata %union.tree_node** %90, metadata !5755, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 0, metadata !5760, metadata !DIExpression()), !dbg !6020
  br label %for.cond531, !dbg !6021

for.cond531:                                      ; preds = %for.inc560, %if.then525
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc560 ], [ 0, %if.then525 ], !dbg !6023
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5760, metadata !DIExpression()), !dbg !6020
  %call532 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !6024
  %91 = zext i32 %call532 to i64, !dbg !6026
  %cmp533 = icmp ult i64 %indvars.iv, %91, !dbg !6026
  br i1 %cmp533, label %for.body535, label %for.end562, !dbg !6027

for.body535:                                      ; preds = %for.cond531
  %92 = trunc i64 %indvars.iv to i32, !dbg !6028
  %call536 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %92) #7, !dbg !6028
  %arrayidx538 = getelementptr inbounds %union.tree_node*, %union.tree_node** %90, i64 %indvars.iv, !dbg !6030
  store %union.tree_node* %call536, %union.tree_node** %arrayidx538, align 8, !dbg !6031
  %93 = getelementptr inbounds %union.tree_node, %union.tree_node* %call536, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6032
  %bf.load542 = load i64, i64* %93, align 8, !dbg !6032
  %bf.cast54412 = and i64 %bf.load542, 65535, !dbg !6034
  %cmp545 = icmp eq i64 %bf.cast54412, 141, !dbg !6034
  br i1 %cmp545, label %if.then547, label %for.inc560, !dbg !6035

if.then547:                                       ; preds = %for.body535
  %call550 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call536) #7, !dbg !6036
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call550, metadata !5754, metadata !DIExpression()), !dbg !5998
  %lattice_val551 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call550, i64 0, i32 0, !dbg !6038
  %94 = load i32, i32* %lattice_val551, align 8, !dbg !6038
  %cmp552 = icmp eq i32 %94, 2, !dbg !6040
  br i1 %cmp552, label %if.then554, label %for.inc560, !dbg !6041

if.then554:                                       ; preds = %if.then547
  %value555 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call550, i64 0, i32 1, !dbg !6042
  %95 = bitcast %union.tree_node** %value555 to i64*, !dbg !6042
  %96 = load i64, i64* %95, align 8, !dbg !6042
  %97 = bitcast %union.tree_node** %arrayidx538 to i64*, !dbg !6043
  store i64 %96, i64* %97, align 8, !dbg !6043
  br label %for.inc560, !dbg !6044

for.inc560:                                       ; preds = %for.body535, %if.then554, %if.then547
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6045
  br label %for.cond531, !dbg !6046, !llvm.loop !6047

for.end562:                                       ; preds = %for.cond531
  %call563 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !6049
  %call564 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !6050
  %call565 = call %union.tree_node* @build_call_array_loc(i32 %call, %union.tree_node* %call563, %union.tree_node* %fn.1, i32 %call564, %union.tree_node** nonnull %90) #6, !dbg !6051
  call void @llvm.dbg.value(metadata %union.tree_node* %call565, metadata !5758, metadata !DIExpression()), !dbg !6020
  %98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call565, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6052
  %bf.load567 = load i64, i64* %98, align 8, !dbg !6052
  %bf.cast569 = and i64 %bf.load567, 65535, !dbg !6052
  %arrayidx571 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast569, !dbg !6052
  %99 = load i32, i32* %arrayidx571, align 4, !dbg !6052
  %cmp572 = icmp ugt i32 %99, 3, !dbg !6052
  br i1 %cmp572, label %land.lhs.true574, label %cond.end587, !dbg !6052

land.lhs.true574:                                 ; preds = %for.end562
  %cmp581 = icmp ult i32 %99, 11, !dbg !6052
  br i1 %cmp581, label %cond.true583, label %cond.end587, !dbg !6052

cond.true583:                                     ; preds = %land.lhs.true574
  %100 = getelementptr inbounds %union.tree_node, %union.tree_node* %call565, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6052
  %101 = load i32, i32* %100, align 8, !dbg !6052
  br label %cond.end587, !dbg !6052

cond.end587:                                      ; preds = %for.end562, %land.lhs.true574, %cond.true583
  %cond588 = phi i32 [ %101, %cond.true583 ], [ 0, %land.lhs.true574 ], [ 0, %for.end562 ], !dbg !6052
  %call589 = call %union.tree_node* @fold_call_expr(i32 %cond588, %union.tree_node* %call565, i8 zeroext 0) #6, !dbg !6053
  call void @llvm.dbg.value(metadata %union.tree_node* %call589, metadata !5759, metadata !DIExpression()), !dbg !6020
  %tobool590 = icmp eq %union.tree_node* %call589, null, !dbg !6054
  br i1 %tobool590, label %cleanup659, label %if.then591, !dbg !6056

if.then591:                                       ; preds = %cond.end587
  %call592 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* nonnull %call589) #6, !dbg !6057
  call void @llvm.dbg.value(metadata %union.tree_node* %call592, metadata !5759, metadata !DIExpression()), !dbg !6020
  br label %cleanup659, !dbg !6057

sw.bb601:                                         ; preds = %entry
  %call603 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6058
  call void @llvm.dbg.value(metadata %union.tree_node* %call603, metadata !5761, metadata !DIExpression()), !dbg !6059
  %call605 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #7, !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %call605, metadata !5763, metadata !DIExpression()), !dbg !6059
  %call606 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !6061
  call void @llvm.dbg.value(metadata i32 %call606, metadata !5764, metadata !DIExpression()), !dbg !6059
  %102 = getelementptr inbounds %union.tree_node, %union.tree_node* %call603, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6062
  %bf.load608 = load i64, i64* %102, align 8, !dbg !6062
  %bf.cast6107 = and i64 %bf.load608, 65535, !dbg !6063
  %cmp611 = icmp eq i64 %bf.cast6107, 141, !dbg !6063
  br i1 %cmp611, label %if.then613, label %if.end622, !dbg !6064

if.then613:                                       ; preds = %sw.bb601
  %call615 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call603) #7, !dbg !6065
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call615, metadata !5765, metadata !DIExpression()), !dbg !6066
  %lattice_val616 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call615, i64 0, i32 0, !dbg !6067
  %103 = load i32, i32* %lattice_val616, align 8, !dbg !6067
  %cmp617 = icmp eq i32 %103, 2, !dbg !6069
  br i1 %cmp617, label %if.then619, label %if.end622, !dbg !6070

if.then619:                                       ; preds = %if.then613
  %value620 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call615, i64 0, i32 1, !dbg !6071
  %104 = load %union.tree_node*, %union.tree_node** %value620, align 8, !dbg !6071
  call void @llvm.dbg.value(metadata %union.tree_node* %104, metadata !5761, metadata !DIExpression()), !dbg !6059
  br label %if.end622, !dbg !6072

if.end622:                                        ; preds = %if.then613, %if.then619, %sw.bb601
  %op0602.1 = phi %union.tree_node* [ %call603, %sw.bb601 ], [ %104, %if.then619 ], [ %call603, %if.then613 ], !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %op0602.1, metadata !5761, metadata !DIExpression()), !dbg !6059
  %105 = getelementptr inbounds %union.tree_node, %union.tree_node* %call605, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6073
  %bf.load624 = load i64, i64* %105, align 8, !dbg !6073
  %bf.cast6268 = and i64 %bf.load624, 65535, !dbg !6074
  %cmp627 = icmp eq i64 %bf.cast6268, 141, !dbg !6074
  br i1 %cmp627, label %if.then629, label %if.end638, !dbg !6075

if.then629:                                       ; preds = %if.end622
  %call631 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call605) #7, !dbg !6076
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call631, metadata !5768, metadata !DIExpression()), !dbg !6077
  %lattice_val632 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call631, i64 0, i32 0, !dbg !6078
  %106 = load i32, i32* %lattice_val632, align 8, !dbg !6078
  %cmp633 = icmp eq i32 %106, 2, !dbg !6080
  br i1 %cmp633, label %if.then635, label %if.end638, !dbg !6081

if.then635:                                       ; preds = %if.then629
  %value636 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call631, i64 0, i32 1, !dbg !6082
  %107 = load %union.tree_node*, %union.tree_node** %value636, align 8, !dbg !6082
  call void @llvm.dbg.value(metadata %union.tree_node* %107, metadata !5763, metadata !DIExpression()), !dbg !6059
  br label %if.end638, !dbg !6083

if.end638:                                        ; preds = %if.then629, %if.then635, %if.end622
  %op1604.1 = phi %union.tree_node* [ %call605, %if.end622 ], [ %107, %if.then635 ], [ %call605, %if.then629 ], !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %op1604.1, metadata !5763, metadata !DIExpression()), !dbg !6059
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6084
  %call639 = tail call %union.tree_node* @fold_binary_loc(i32 %call, i32 %call606, %union.tree_node* %108, %union.tree_node* %op0602.1, %union.tree_node* %op1604.1) #6, !dbg !6085
  br label %cleanup659

sw.bb643:                                         ; preds = %entry
  %call645 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #7, !dbg !6086
  call void @llvm.dbg.value(metadata %union.tree_node* %call645, metadata !5771, metadata !DIExpression()), !dbg !6087
  %109 = getelementptr inbounds %union.tree_node, %union.tree_node* %call645, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6088
  %bf.load647 = load i64, i64* %109, align 8, !dbg !6088
  %bf.cast6496 = and i64 %bf.load647, 65535, !dbg !6090
  %cmp650 = icmp eq i64 %bf.cast6496, 141, !dbg !6090
  br i1 %cmp650, label %if.then652, label %cleanup659, !dbg !6091

if.then652:                                       ; preds = %sw.bb643
  %call653 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call645) #7, !dbg !6092
  %value654 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call653, i64 0, i32 1, !dbg !6094
  %110 = load %union.tree_node*, %union.tree_node** %value654, align 8, !dbg !6094
  br label %cleanup659, !dbg !6095

sw.default657:                                    ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 1204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6096
  br label %sw.epilog658, !dbg !6097

sw.epilog658:                                     ; preds = %cleanup479, %sw.default657
  br label %cleanup659, !dbg !6098

cleanup659:                                       ; preds = %cond.end587, %land.lhs.true516, %if.then652, %sw.bb643, %if.then591, %land.lhs.true506, %if.end499, %cleanup479, %sw.epilog658, %if.end638
  %retval.14 = phi %union.tree_node* [ null, %sw.epilog658 ], [ %call639, %if.end638 ], [ %retval.11, %cleanup479 ], [ %call592, %if.then591 ], [ null, %cond.end587 ], [ null, %land.lhs.true516 ], [ null, %land.lhs.true506 ], [ null, %if.end499 ], [ %110, %if.then652 ], [ %call645, %sw.bb643 ]
  ret %union.tree_node* %retval.14, !dbg !6099
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6100 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6104, metadata !DIExpression()), !dbg !6105
  %idxprom = sext i32 %code to i64, !dbg !6106
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6106
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6106
  %conv = zext i8 %0 to i32, !dbg !6107
  ret i32 %conv, !dbg !6108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6109 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6111, metadata !DIExpression()), !dbg !6112
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6113
  ret %union.tree_node* %call, !dbg !6114
}

declare dso_local void @fold_undefer_overflow_warnings(i8 zeroext, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6115 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6117, metadata !DIExpression()), !dbg !6118
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !6119
  %tobool = icmp eq i8 %call, 0, !dbg !6119
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6120

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !6121
  %tobool3 = icmp eq i8 %call1, 0, !dbg !6121
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !6122

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6123
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !6124
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6125
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6126 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6130, metadata !DIExpression()), !dbg !6131
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6132
  %0 = load i32, i32* %num_ops, align 4, !dbg !6132
  ret i32 %0, !dbg !6133
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6134 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6136, metadata !DIExpression()), !dbg !6137
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6138
  %tobool = icmp eq i8 %call, 0, !dbg !6138
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6139

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6140
  %tobool2 = icmp ne %union.tree_node* %call1, null, !dbg !6139
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6141
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6142 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6146, metadata !DIExpression()), !dbg !6147
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6148
  %0 = load i32, i32* %location, align 8, !dbg !6148
  ret i32 %0, !dbg !6149
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_unary_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6150 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6152, metadata !DIExpression()), !dbg !6153
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6154
  ret %union.tree_node* %call, !dbg !6155
}

declare dso_local %union.tree_node* @fold_unary_ignore_overflow_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6156 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6158, metadata !DIExpression()), !dbg !6163
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %call, metadata !6159, metadata !DIExpression()), !dbg !6163
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !6165

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !6166
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6160, metadata !DIExpression()), !dbg !6168
  br label %cleanup, !dbg !6169

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !6170
  %cond = icmp eq i32 %call5, 66, !dbg !6171
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !6171

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !6172
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6172
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !6172
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6160, metadata !DIExpression()), !dbg !6168
  br label %cleanup, !dbg !6174

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !6175
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6175
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !6175
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6160, metadata !DIExpression()), !dbg !6168
  br label %cleanup, !dbg !6176

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6177
  br label %cleanup, !dbg !6179

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6180
  br label %cleanup, !dbg !6181

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !6182
  ret %union.tree_node* %retval.0, !dbg !6183
}

declare dso_local %union.tree_node* @fold_binary_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6184 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6186, metadata !DIExpression()), !dbg !6188
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %call, metadata !6187, metadata !DIExpression()), !dbg !6188
  %sub = add i32 %call, -3, !dbg !6190
  ret i32 %sub, !dbg !6191
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6192 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32 %index, metadata !6195, metadata !DIExpression()), !dbg !6196
  %add = add i32 %index, 3, !dbg !6197
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !6198
  ret %union.tree_node* %call, !dbg !6199
}

declare dso_local %union.tree_node* @build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6200 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6202, metadata !DIExpression()), !dbg !6205
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !6206
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6203, metadata !DIExpression()), !dbg !6205
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6207
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !6207
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6207
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6208
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !6208
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !6208
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !6209
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6209
  ret %union.tree_node* %4, !dbg !6210
}

declare dso_local %union.tree_node* @fold_call_expr(i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6211 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6213, metadata !DIExpression()), !dbg !6214
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6215
  ret %union.tree_node* %call, !dbg !6216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6217 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6219, metadata !DIExpression()), !dbg !6220
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6221
  ret %union.tree_node* %call, !dbg !6222
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6223 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6227
  %bf.load = load i32, i32* %0, align 8, !dbg !6227
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6227
  ret i32 %bf.lshr, !dbg !6228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6229 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6233, metadata !DIExpression()), !dbg !6234
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !6235
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6235
  ret %struct.basic_block_def* %0, !dbg !6236
}

declare dso_local %struct.edge_def* @find_taken_edge(%struct.basic_block_def*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6237 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6239, metadata !DIExpression()), !dbg !6240
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6241
  %0 = load i32, i32* %nargs, align 4, !dbg !6241
  ret i32 %0, !dbg !6242
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !6243 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6247, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i64 %i, metadata !6248, metadata !DIExpression()), !dbg !6249
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6250
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !6250
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6250
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6250
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6250

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6250
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !6250
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !6250
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !6250
  br label %cond.end, !dbg !6250

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6250
  %conv = trunc i64 %i to i32, !dbg !6250
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !6250
  ret %struct.edge_def* %call3, !dbg !6251
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6252 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6257, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i32 %index, metadata !6258, metadata !DIExpression()), !dbg !6259
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6260
  %0 = load i32, i32* %capacity, align 8, !dbg !6260
  %cmp = icmp ult i32 %0, %index, !dbg !6260
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6260

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6260
  br label %cond.end, !dbg !6260

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !6261
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !6261
  ret %struct.phi_arg_d* %arrayidx, !dbg !6262
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ccp_lattice_meet(%struct.prop_value_d* %val1, %struct.prop_value_d* %val2) unnamed_addr #5 !dbg !6263 {
entry:
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %val1, metadata !6267, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %val2, metadata !6268, metadata !DIExpression()), !dbg !6269
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val1, i64 0, i32 0, !dbg !6270
  %0 = load i32, i32* %lattice_val, align 8, !dbg !6270
  %cmp = icmp eq i32 %0, 1, !dbg !6272
  br i1 %cmp, label %if.then, label %if.else, !dbg !6273

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.prop_value_d* %val1 to i8*, !dbg !6274
  %2 = bitcast %struct.prop_value_d* %val2 to i8*, !dbg !6274
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !6274
  br label %if.end29, !dbg !6276

if.else:                                          ; preds = %entry
  %lattice_val1 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val2, i64 0, i32 0, !dbg !6277
  %3 = load i32, i32* %lattice_val1, align 8, !dbg !6277
  %cmp2 = icmp eq i32 %3, 1, !dbg !6279
  br i1 %cmp2, label %if.end29, label %if.else4, !dbg !6280

if.else4:                                         ; preds = %if.else
  %cmp6 = icmp eq i32 %0, 3, !dbg !6281
  br i1 %cmp6, label %if.then9, label %lor.lhs.false, !dbg !6283

lor.lhs.false:                                    ; preds = %if.else4
  %cmp8 = icmp eq i32 %3, 3, !dbg !6284
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !6285

if.then9:                                         ; preds = %lor.lhs.false, %if.else4
  store i32 3, i32* %lattice_val, align 8, !dbg !6286
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val1, i64 0, i32 1, !dbg !6288
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !6289
  br label %if.end29, !dbg !6290

if.else11:                                        ; preds = %lor.lhs.false
  %cmp13 = icmp eq i32 %0, 2, !dbg !6291
  br i1 %cmp13, label %land.lhs.true, label %if.else24, !dbg !6293

land.lhs.true:                                    ; preds = %if.else11
  %cmp15 = icmp eq i32 %3, 2, !dbg !6294
  br i1 %cmp15, label %land.lhs.true16, label %if.else24, !dbg !6295

land.lhs.true16:                                  ; preds = %land.lhs.true
  %value17 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val1, i64 0, i32 1, !dbg !6296
  %4 = load %union.tree_node*, %union.tree_node** %value17, align 8, !dbg !6296
  %value18 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val2, i64 0, i32 1, !dbg !6297
  %5 = load %union.tree_node*, %union.tree_node** %value18, align 8, !dbg !6297
  %call = tail call i32 @simple_cst_equal(%union.tree_node* %4, %union.tree_node* %5) #6, !dbg !6298
  %cmp19 = icmp eq i32 %call, 1, !dbg !6299
  br i1 %cmp19, label %if.then20, label %if.else24, !dbg !6300

if.then20:                                        ; preds = %land.lhs.true16
  store i32 2, i32* %lattice_val, align 8, !dbg !6301
  br label %if.end29, !dbg !6303

if.else24:                                        ; preds = %land.lhs.true16, %land.lhs.true, %if.else11
  store i32 3, i32* %lattice_val, align 8, !dbg !6304
  %value26 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val1, i64 0, i32 1, !dbg !6306
  store %union.tree_node* null, %union.tree_node** %value26, align 8, !dbg !6307
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then20, %if.else24, %if.then9, %if.then
  ret void, !dbg !6308
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6309 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6315, metadata !DIExpression()), !dbg !6317
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6316, metadata !DIExpression()), !dbg !6317
  br label %land.end, !dbg !6318

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6318
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6318
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6318
  ret %struct.edge_def* %0, !dbg !6318
}

declare dso_local i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @do_dbg_cnt() unnamed_addr #5 !dbg !6319 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  br label %for.cond, !dbg !6323

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6325
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6321, metadata !DIExpression()), !dbg !6322
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6326
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !6326
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !6326
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !6326
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !6326
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !6326
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6326

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !6326
  br label %cond.end, !dbg !6326

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6326
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !6326
  %3 = zext i32 %call to i64, !dbg !6328
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !6328
  br i1 %cmp, label %for.body, label %for.end, !dbg !6329

for.body:                                         ; preds = %cond.end
  %call4 = tail call zeroext i8 @dbg_cnt(i32 1) #6, !dbg !6330
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6330
  br i1 %tobool5, label %if.then, label %for.inc, !dbg !6333

if.then:                                          ; preds = %for.body
  %4 = load %struct.prop_value_d*, %struct.prop_value_d** @const_val, align 8, !dbg !6334
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %4, i64 %indvars.iv, i32 0, !dbg !6336
  store i32 3, i32* %lattice_val, align 8, !dbg !6337
  %5 = load %struct.prop_value_d*, %struct.prop_value_d** @const_val, align 8, !dbg !6338
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %5, i64 %indvars.iv, i32 1, !dbg !6339
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !6340
  br label %for.inc, !dbg !6341

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6342
  br label %for.cond, !dbg !6343, !llvm.loop !6344

for.end:                                          ; preds = %cond.end
  ret void, !dbg !6346
}

declare dso_local zeroext i8 @substitute_and_fold(%struct.prop_value_d*, i8 (%struct.gimple_stmt_iterator*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @ccp_fold_stmt(%struct.gimple_stmt_iterator* %gsi) #5 !dbg !6347 {
entry:
  %val = alloca %struct.prop_value_d, align 8
  %tmp = alloca %struct.prop_value_d, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6349, metadata !DIExpression()), !dbg !6374
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6375
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6350, metadata !DIExpression()), !dbg !6374
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !6376
  switch i32 %call1, label %cleanup120 [
    i32 1, label %sw.bb
    i32 8, label %sw.bb8
    i32 6, label %sw.bb81
  ], !dbg !6377

sw.bb:                                            ; preds = %entry
  %0 = bitcast %struct.prop_value_d* %val to i8*, !dbg !6378
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6378
  %1 = bitcast %struct.prop_value_d* %tmp to i8*, !dbg !6379
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6379
  %call2 = tail call fastcc { i32, %union.tree_node* } @evaluate_stmt(%union.gimple_statement_d* %call) #7, !dbg !6379
  %2 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 0, !dbg !6379
  %3 = extractvalue { i32, %union.tree_node* } %call2, 0, !dbg !6379
  store i32 %3, i32* %2, align 8, !dbg !6379
  %4 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %tmp, i64 0, i32 1, !dbg !6379
  %5 = extractvalue { i32, %union.tree_node* } %call2, 1, !dbg !6379
  store %union.tree_node* %5, %union.tree_node** %4, align 8, !dbg !6379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !6379
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6379
  %lattice_val = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 0, !dbg !6380
  %6 = load i32, i32* %lattice_val, align 8, !dbg !6380
  %cmp = icmp eq i32 %6, 2, !dbg !6382
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !6383

lor.lhs.false:                                    ; preds = %sw.bb
  %value = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %val, i64 0, i32 1, !dbg !6384
  %7 = bitcast %union.tree_node** %value to i64**, !dbg !6384
  %8 = load i64*, i64** %7, align 8, !dbg !6384
  %bf.load = load i64, i64* %8, align 8, !dbg !6384
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6385
  %cmp3 = icmp eq i64 %bf.cast4, 23, !dbg !6385
  br i1 %cmp3, label %if.end, label %cleanup, !dbg !6386

if.end:                                           ; preds = %lor.lhs.false
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !6386
  %call5 = tail call i32 @integer_zerop(%union.tree_node* %9) #6, !dbg !6387
  %tobool = icmp eq i32 %call5, 0, !dbg !6387
  br i1 %tobool, label %if.else, label %if.then6, !dbg !6389

if.then6:                                         ; preds = %if.end
  tail call fastcc void @gimple_cond_make_false(%union.gimple_statement_d* %call) #7, !dbg !6390
  br label %cleanup, !dbg !6390

if.else:                                          ; preds = %if.end
  tail call fastcc void @gimple_cond_make_true(%union.gimple_statement_d* %call) #7, !dbg !6391
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false, %sw.bb, %if.then6, %if.else
  %retval.0 = phi i8 [ 0, %lor.lhs.false ], [ 0, %sw.bb ], [ 1, %if.else ], [ 1, %if.then6 ], !dbg !6392
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6393
  br label %cleanup120

sw.bb8:                                           ; preds = %entry
  %call9 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call) #7, !dbg !6394
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6354, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8 0, metadata !6358, metadata !DIExpression()), !dbg !6395
  %tobool11 = icmp eq %union.tree_node* %call9, null, !dbg !6396
  br i1 %tobool11, label %if.end39, label %land.lhs.true, !dbg !6397

land.lhs.true:                                    ; preds = %sw.bb8
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6398
  %bf.load13 = load i64, i64* %10, align 8, !dbg !6398
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !6399
  %cmp16 = icmp eq i64 %bf.cast153, 141, !dbg !6399
  br i1 %cmp16, label %land.lhs.true17, label %if.end39, !dbg !6400

land.lhs.true17:                                  ; preds = %land.lhs.true
  %call18 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* nonnull %call9) #7, !dbg !6401
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call18, metadata !6356, metadata !DIExpression()), !dbg !6395
  %tobool19 = icmp eq %struct.prop_value_d* %call18, null, !dbg !6402
  br i1 %tobool19, label %if.end39, label %land.lhs.true20, !dbg !6403

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %lattice_val21 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call18, i64 0, i32 0, !dbg !6404
  %11 = load i32, i32* %lattice_val21, align 8, !dbg !6404
  %cmp22 = icmp eq i32 %11, 2, !dbg !6405
  br i1 %cmp22, label %if.then23, label %if.end39, !dbg !6406

if.then23:                                        ; preds = %land.lhs.true20
  %value24 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call18, i64 0, i32 1, !dbg !6407
  %12 = load %union.tree_node*, %union.tree_node** %value24, align 8, !dbg !6407
  %call25 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %12) #6, !dbg !6408
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !6360, metadata !DIExpression()), !dbg !6409
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6410
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6410
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6412
  %14 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !6412
  %call28 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %13, %union.tree_node* %14) #6, !dbg !6413
  %tobool29 = icmp eq i8 %call28, 0, !dbg !6413
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !6414

if.then30:                                        ; preds = %if.then23
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6415
  %call33 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %15, %union.tree_node* %call25) #6, !dbg !6415
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !6360, metadata !DIExpression()), !dbg !6409
  br label %if.end34, !dbg !6416

if.end34:                                         ; preds = %if.then23, %if.then30
  %new_rhs.0 = phi %union.tree_node* [ %call25, %if.then23 ], [ %call33, %if.then30 ], !dbg !6409
  call void @llvm.dbg.value(metadata %union.tree_node* %new_rhs.0, metadata !6360, metadata !DIExpression()), !dbg !6409
  %call35 = tail call zeroext i8 @update_call_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %new_rhs.0) #6, !dbg !6417
  call void @llvm.dbg.value(metadata i8 %call35, metadata !6363, metadata !DIExpression()), !dbg !6409
  %tobool36 = icmp eq i8 %call35, 0, !dbg !6418
  br i1 %tobool36, label %cond.true, label %cleanup120, !dbg !6418

cond.true:                                        ; preds = %if.end34
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 1533, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6418
  br label %cleanup120, !dbg !6418

if.end39:                                         ; preds = %land.lhs.true17, %sw.bb8, %land.lhs.true20, %land.lhs.true
  %call40 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call) #7, !dbg !6419
  %type42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6419
  %16 = bitcast %union.tree_node** %type42 to %struct.tree_common**, !dbg !6419
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !6419
  %type44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !6419
  %18 = bitcast %union.tree_node** %type44 to %struct.tree_type**, !dbg !6419
  %19 = load %struct.tree_type*, %struct.tree_type** %18, align 8, !dbg !6419
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 1, !dbg !6419
  call void @llvm.dbg.value(metadata i32 0, metadata !6359, metadata !DIExpression()), !dbg !6395
  br label %for.cond, !dbg !6420

for.cond:                                         ; preds = %for.inc, %if.end39
  %changed.0 = phi i8 [ 0, %if.end39 ], [ %changed.1, %for.inc ], !dbg !6395
  %argt.0.in = phi %union.tree_node** [ %values, %if.end39 ], [ %chain, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end39 ], [ %inc, %for.inc ], !dbg !6421
  %argt.0 = load %union.tree_node*, %union.tree_node** %argt.0.in, align 8, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6359, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata %union.tree_node* %argt.0, metadata !6357, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !6358, metadata !DIExpression()), !dbg !6395
  %call46 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !6422
  %cmp47 = icmp ult i32 %i.0, %call46, !dbg !6423
  %tobool48 = icmp ne %union.tree_node* %argt.0, null, !dbg !6424
  %spec.select = and i1 %cmp47, %tobool48, !dbg !6424
  br i1 %spec.select, label %for.body, label %cleanup120.loopexit, !dbg !6425

for.body:                                         ; preds = %for.cond
  %call49 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %i.0) #7, !dbg !6426
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !6364, metadata !DIExpression()), !dbg !6427
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6428
  %bf.load51 = load i64, i64* %20, align 8, !dbg !6428
  %bf.cast532 = and i64 %bf.load51, 65535, !dbg !6430
  %cmp54 = icmp eq i64 %bf.cast532, 141, !dbg !6430
  br i1 %cmp54, label %land.lhs.true55, label %for.inc, !dbg !6431

land.lhs.true55:                                  ; preds = %for.body
  %call56 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call49) #7, !dbg !6432
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call56, metadata !6356, metadata !DIExpression()), !dbg !6395
  %tobool57 = icmp eq %struct.prop_value_d* %call56, null, !dbg !6433
  br i1 %tobool57, label %for.inc, label %land.lhs.true58, !dbg !6434

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %lattice_val59 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call56, i64 0, i32 0, !dbg !6435
  %21 = load i32, i32* %lattice_val59, align 8, !dbg !6435
  %cmp60 = icmp eq i32 %21, 2, !dbg !6436
  br i1 %cmp60, label %land.lhs.true61, label %for.inc, !dbg !6437

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %argt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6438
  %23 = bitcast %union.tree_node** %22 to %struct.tree_type**, !dbg !6438
  %24 = load %struct.tree_type*, %struct.tree_type** %23, align 8, !dbg !6438
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 16, !dbg !6438
  %25 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !6438
  %value64 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call56, i64 0, i32 1, !dbg !6439
  %26 = bitcast %union.tree_node** %value64 to %struct.tree_common**, !dbg !6439
  %27 = load %struct.tree_common*, %struct.tree_common** %26, align 8, !dbg !6439
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %27, i64 0, i32 2, !dbg !6439
  %28 = bitcast %union.tree_node** %type66 to %struct.tree_type**, !dbg !6439
  %29 = load %struct.tree_type*, %struct.tree_type** %28, align 8, !dbg !6439
  %main_variant68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %29, i64 0, i32 16, !dbg !6439
  %30 = load %union.tree_node*, %union.tree_node** %main_variant68, align 8, !dbg !6439
  %call69 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %25, %union.tree_node* %30) #6, !dbg !6440
  %tobool70 = icmp eq i8 %call69, 0, !dbg !6440
  br i1 %tobool70, label %for.inc, label %if.then71, !dbg !6441

if.then71:                                        ; preds = %land.lhs.true61
  %31 = load %union.tree_node*, %union.tree_node** %value64, align 8, !dbg !6442
  %call73 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %31) #6, !dbg !6444
  tail call fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %call, i32 %i.0, %union.tree_node* %call73) #7, !dbg !6445
  call void @llvm.dbg.value(metadata i8 1, metadata !6358, metadata !DIExpression()), !dbg !6395
  br label %for.inc, !dbg !6446

for.inc:                                          ; preds = %land.lhs.true61, %land.lhs.true55, %for.body, %land.lhs.true58, %if.then71
  %changed.1 = phi i8 [ 1, %if.then71 ], [ %changed.0, %land.lhs.true61 ], [ %changed.0, %land.lhs.true58 ], [ %changed.0, %land.lhs.true55 ], [ %changed.0, %for.body ], !dbg !6395
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !6358, metadata !DIExpression()), !dbg !6395
  %inc = add i32 %i.0, 1, !dbg !6447
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6359, metadata !DIExpression()), !dbg !6395
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %argt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6448
  br label %for.cond, !dbg !6449, !llvm.loop !6450

sw.bb81:                                          ; preds = %entry
  %call83 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !6452
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !6368, metadata !DIExpression()), !dbg !6453
  %call85 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %call) #6, !dbg !6454
  %tobool87 = icmp eq i8 %call85, 0, !dbg !6454
  br i1 %tobool87, label %cleanup120, label %land.lhs.true88, !dbg !6455

land.lhs.true88:                                  ; preds = %sw.bb81
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6456
  %bf.load90 = load i64, i64* %32, align 8, !dbg !6456
  %bf.cast921 = and i64 %bf.load90, 65535, !dbg !6457
  %cmp93 = icmp eq i64 %bf.cast921, 141, !dbg !6457
  br i1 %cmp93, label %land.lhs.true95, label %cleanup120, !dbg !6458

land.lhs.true95:                                  ; preds = %land.lhs.true88
  %call96 = tail call fastcc %struct.prop_value_d* @get_value(%union.tree_node* %call83) #7, !dbg !6459
  call void @llvm.dbg.value(metadata %struct.prop_value_d* %call96, metadata !6370, metadata !DIExpression()), !dbg !6453
  %tobool97 = icmp eq %struct.prop_value_d* %call96, null, !dbg !6460
  br i1 %tobool97, label %cleanup120, label %land.lhs.true98, !dbg !6461

land.lhs.true98:                                  ; preds = %land.lhs.true95
  %lattice_val99 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call96, i64 0, i32 0, !dbg !6462
  %33 = load i32, i32* %lattice_val99, align 8, !dbg !6462
  %cmp100 = icmp eq i32 %33, 2, !dbg !6463
  br i1 %cmp100, label %if.then102, label %cleanup120, !dbg !6464

if.then102:                                       ; preds = %land.lhs.true98
  %value103 = getelementptr inbounds %struct.prop_value_d, %struct.prop_value_d* %call96, i64 0, i32 1, !dbg !6465
  %34 = load %union.tree_node*, %union.tree_node** %value103, align 8, !dbg !6465
  %call104 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %34) #6, !dbg !6466
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !6371, metadata !DIExpression()), !dbg !6467
  %type106 = getelementptr inbounds %union.tree_node, %union.tree_node* %call83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6468
  %35 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !6468
  %type108 = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6470
  %36 = load %union.tree_node*, %union.tree_node** %type108, align 8, !dbg !6470
  %call109 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %35, %union.tree_node* %36) #6, !dbg !6471
  %tobool110 = icmp eq i8 %call109, 0, !dbg !6471
  br i1 %tobool110, label %if.then111, label %if.end115, !dbg !6472

if.then111:                                       ; preds = %if.then102
  %37 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !6473
  %call114 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %37, %union.tree_node* %call104) #6, !dbg !6473
  call void @llvm.dbg.value(metadata %union.tree_node* %call114, metadata !6371, metadata !DIExpression()), !dbg !6467
  br label %if.end115, !dbg !6474

if.end115:                                        ; preds = %if.then102, %if.then111
  %rhs.0 = phi %union.tree_node* [ %call104, %if.then102 ], [ %call114, %if.then111 ], !dbg !6467
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !6371, metadata !DIExpression()), !dbg !6467
  tail call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %rhs.0) #6, !dbg !6475
  br label %cleanup120

cleanup120.loopexit:                              ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !6395
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6358, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6358, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6358, metadata !DIExpression()), !dbg !6395
  br label %cleanup120, !dbg !6476

cleanup120:                                       ; preds = %cleanup120.loopexit, %if.end34, %land.lhs.true95, %sw.bb81, %entry, %if.end115, %land.lhs.true98, %land.lhs.true88, %cond.true, %cleanup
  %retval.3 = phi i8 [ %retval.0, %cleanup ], [ 1, %if.end34 ], [ 1, %cond.true ], [ 1, %if.end115 ], [ 0, %land.lhs.true98 ], [ 0, %land.lhs.true95 ], [ 0, %land.lhs.true88 ], [ 0, %sw.bb81 ], [ 0, %entry ], [ %changed.0.lcssa, %cleanup120.loopexit ], !dbg !6477
  ret i8 %retval.3, !dbg !6476
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_false(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6478 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !6484
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !6485
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !6486
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !6487
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6488
  %bf.load = load i32, i32* %2, align 8, !dbg !6489
  %bf.clear = and i32 %bf.load, 65535, !dbg !6489
  %bf.set = or i32 %bf.clear, 6619136, !dbg !6489
  store i32 %bf.set, i32* %2, align 8, !dbg !6489
  ret void, !dbg !6490
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_true(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6491 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6493, metadata !DIExpression()), !dbg !6494
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !6495
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !6496
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !6497
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !6498
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6499
  %bf.load = load i32, i32* %2, align 8, !dbg !6500
  %bf.clear = and i32 %bf.load, 65535, !dbg !6500
  %bf.set = or i32 %bf.clear, 6619136, !dbg !6500
  store i32 %bf.set, i32* %2, align 8, !dbg !6500
  ret void, !dbg !6501
}

declare dso_local zeroext i8 @update_call_from_tree(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %gs, i32 %index, %union.tree_node* %arg) unnamed_addr #0 !dbg !6502 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %index, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !6508, metadata !DIExpression()), !dbg !6509
  %add = add i32 %index, 3, !dbg !6510
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %add, %union.tree_node* %arg) #7, !dbg !6511
  ret void, !dbg !6512
}

declare dso_local void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6513 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6517, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6518, metadata !DIExpression()), !dbg !6519
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !6520
  ret void, !dbg !6521
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !6522 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6524, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6525, metadata !DIExpression()), !dbg !6526
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !6527
  ret void, !dbg !6528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6529 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6531, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32 %i, metadata !6532, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6533, metadata !DIExpression()), !dbg !6534
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6535
  %tobool = icmp eq i8 %call, 0, !dbg !6535
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6535

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6535
  %cmp = icmp ugt i32 %call1, %i, !dbg !6535
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6535

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6535
  br label %cond.end, !dbg !6535

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6536
  %idxprom = zext i32 %i to i64, !dbg !6536
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !6536
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !6537
  ret void, !dbg !6538
}

declare dso_local %union.tree_node* @byte_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @signed_type_for(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_sext(i64, i64, i32) local_unnamed_addr #2

declare dso_local { i64, i64 } @tree_to_double_int(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @div_and_round_double(i32, i32, i64, i64, i64, i64, i64*, i64*, i64*, i64*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6539 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6541, metadata !DIExpression()), !dbg !6543
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %call, metadata !6542, metadata !DIExpression()), !dbg !6543
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6545

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6547
  %bf.load = load i32, i32* %0, align 8, !dbg !6547
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6547
  br label %cleanup, !dbg !6548

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6549
  br label %cleanup, !dbg !6551

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6543
  ret i32 %retval.0, !dbg !6552
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_gimple_assign(%struct.gimple_stmt_iterator* %si) unnamed_addr #5 !dbg !6553 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6557, metadata !DIExpression()), !dbg !6590
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6591
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6558, metadata !DIExpression()), !dbg !6590
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call) #7, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %call1, metadata !6559, metadata !DIExpression()), !dbg !6590
  %call2 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !6593
  call void @llvm.dbg.value(metadata i32 %call2, metadata !6560, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6561, metadata !DIExpression()), !dbg !6590
  %call3 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call1) #7, !dbg !6594
  switch i32 %call3, label %sw.epilog [
    i32 3, label %sw.bb
    i32 2, label %sw.bb231
    i32 1, label %sw.bb329
    i32 0, label %sw.bb402
  ], !dbg !6595

sw.bb:                                            ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6596
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6562, metadata !DIExpression()), !dbg !6597
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6598
  %bf.load = load i64, i64* %0, align 8, !dbg !6598
  %bf.cast12 = and i64 %bf.load, 65535, !dbg !6599
  %cmp = icmp eq i64 %bf.cast12, 56, !dbg !6599
  br i1 %cmp, label %if.then, label %if.else65, !dbg !6600

if.then:                                          ; preds = %sw.bb
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6601
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6601
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6565, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i8 0, metadata !6569, metadata !DIExpression()), !dbg !6602
  %2 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 56), align 4, !dbg !6603
  %cmp10 = icmp ugt i32 %2, 3, !dbg !6603
  br i1 %cmp10, label %land.lhs.true, label %cond.end, !dbg !6603

land.lhs.true:                                    ; preds = %if.then
  %cmp17 = icmp ult i32 %2, 11, !dbg !6603
  br i1 %cmp17, label %cond.true, label %cond.end, !dbg !6603

cond.true:                                        ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6603
  %4 = load i32, i32* %3, align 8, !dbg !6603
  br label %cond.end, !dbg !6603

cond.end:                                         ; preds = %if.then, %land.lhs.true, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %land.lhs.true ], [ 0, %if.then ], !dbg !6603
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6570, metadata !DIExpression()), !dbg !6602
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6604
  %bf.load20 = load i64, i64* %5, align 8, !dbg !6604
  %bf.cast22 = and i64 %bf.load20, 65535, !dbg !6604
  %arrayidx24 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast22, !dbg !6604
  %6 = load i32, i32* %arrayidx24, align 4, !dbg !6604
  %cmp25 = icmp eq i32 %6, 5, !dbg !6604
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !6606

if.then26:                                        ; preds = %cond.end
  tail call void @fold_defer_overflow_warnings() #6, !dbg !6607
  %bf.load28 = load i64, i64* %5, align 8, !dbg !6609
  %7 = trunc i64 %bf.load28 to i32, !dbg !6609
  %bf.cast30 = and i32 %7, 65535, !dbg !6609
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6610
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6610
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6611
  %9 = load %union.tree_node*, %union.tree_node** %operands32, align 8, !dbg !6611
  %arrayidx36 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands32, i64 1, !dbg !6612
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8, !dbg !6612
  %call37 = tail call %union.tree_node* @fold_binary_loc(i32 %cond, i32 %bf.cast30, %union.tree_node* %8, %union.tree_node* %9, %union.tree_node* %10) #6, !dbg !6613
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !6568, metadata !DIExpression()), !dbg !6602
  %tobool = icmp eq %union.tree_node* %call37, null, !dbg !6614
  br i1 %tobool, label %land.end, label %land.lhs.true38, !dbg !6615

land.lhs.true38:                                  ; preds = %if.then26
  %call39 = tail call zeroext i8 @is_gimple_condexpr(%union.tree_node* nonnull %call37) #6, !dbg !6616
  %tobool40 = icmp eq i8 %call39, 0, !dbg !6616
  br i1 %tobool40, label %land.end, label %land.rhs, !dbg !6617

land.rhs:                                         ; preds = %land.lhs.true38
  %call41 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* nonnull %call37) #6, !dbg !6618
  %tobool43 = icmp ne i8 %call41, 0, !dbg !6617
  %phitmp20 = zext i1 %tobool43 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true38, %if.then26, %land.rhs
  %11 = phi i8 [ 0, %land.lhs.true38 ], [ 0, %if.then26 ], [ %phitmp20, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !6569, metadata !DIExpression()), !dbg !6602
  tail call void @fold_undefer_overflow_warnings(i8 zeroext %11, %union.gimple_statement_d* %call, i32 0) #6, !dbg !6619
  %phitmp = icmp ne i8 %11, 0, !dbg !6620
  br label %if.end49, !dbg !6620

if.else:                                          ; preds = %cond.end
  %call45 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %1) #6, !dbg !6621
  %tobool46 = icmp eq i8 %call45, 0, !dbg !6621
  br i1 %tobool46, label %cleanup, label %if.end49, !dbg !6623

if.end49:                                         ; preds = %if.else, %land.end
  %tem.0 = phi %union.tree_node* [ %call37, %land.end ], [ %1, %if.else ], !dbg !6624
  %set.0 = phi i1 [ %phitmp, %land.end ], [ true, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !6568, metadata !DIExpression()), !dbg !6602
  br i1 %set.0, label %if.then51, label %cleanup, !dbg !6625

if.then51:                                        ; preds = %if.end49
  %type53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6626
  %12 = load %union.tree_node*, %union.tree_node** %type53, align 8, !dbg !6626
  %arrayidx56 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6626
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx56, align 8, !dbg !6626
  %arrayidx59 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6626
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !6626
  %call60 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %cond, i32 56, %union.tree_node* %12, %union.tree_node* %tem.0, %union.tree_node* %13, %union.tree_node* %14) #6, !dbg !6626
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !6561, metadata !DIExpression()), !dbg !6590
  br label %cleanup, !dbg !6628

cleanup:                                          ; preds = %if.else, %if.end49, %if.then51
  %result.1 = phi %union.tree_node* [ null, %if.else ], [ %call60, %if.then51 ], [ null, %if.end49 ], !dbg !6590
  %cleanup.dest.slot.0 = phi i1 [ false, %if.else ], [ true, %if.then51 ], [ true, %if.end49 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !6561, metadata !DIExpression()), !dbg !6590
  br i1 %cleanup.dest.slot.0, label %if.end215, label %cleanup403

if.else65:                                        ; preds = %sw.bb
  %cmp70 = icmp eq i64 %bf.cast12, 152, !dbg !6629
  br i1 %cmp70, label %if.then72, label %if.else74, !dbg !6630

if.then72:                                        ; preds = %if.else65
  %call73 = tail call %union.tree_node* @maybe_fold_tmr(%union.tree_node* %call4) #6, !dbg !6631
  br label %cleanup403, !dbg !6632

if.else74:                                        ; preds = %if.else65
  %arrayidx80 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast12, !dbg !6633
  %15 = load i32, i32* %arrayidx80, align 4, !dbg !6633
  %cmp81 = icmp eq i32 %15, 4, !dbg !6633
  br i1 %cmp81, label %if.then83, label %if.else85, !dbg !6634

if.then83:                                        ; preds = %if.else74
  %call84 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %call4, i8 zeroext 0) #7, !dbg !6635
  br label %cleanup403, !dbg !6636

if.else85:                                        ; preds = %if.else74
  %cmp90 = icmp eq i64 %bf.cast12, 121, !dbg !6637
  br i1 %cmp90, label %if.then92, label %if.else105, !dbg !6638

if.then92:                                        ; preds = %if.else85
  %operands95 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6639
  %16 = load %union.tree_node*, %union.tree_node** %operands95, align 8, !dbg !6639
  %call97 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %16, i8 zeroext 1) #7, !dbg !6640
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !6571, metadata !DIExpression()), !dbg !6641
  %tobool98 = icmp eq %union.tree_node* %call97, null, !dbg !6642
  br i1 %tobool98, label %if.end215, label %if.then99, !dbg !6644

if.then99:                                        ; preds = %if.then92
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6645
  %17 = load %union.tree_node*, %union.tree_node** %type101, align 8, !dbg !6645
  %call102 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %call2, %union.tree_node* nonnull %call97) #6, !dbg !6645
  %call103 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %17, %union.tree_node* %call102) #6, !dbg !6645
  call void @llvm.dbg.value(metadata %union.tree_node* %call103, metadata !6561, metadata !DIExpression()), !dbg !6590
  br label %if.end215, !dbg !6646

if.else105:                                       ; preds = %if.else85
  %cmp110 = icmp eq i64 %bf.cast12, 51, !dbg !6647
  br i1 %cmp110, label %land.lhs.true112, label %if.else198, !dbg !6648

land.lhs.true112:                                 ; preds = %if.else105
  %type114 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6649
  %18 = bitcast %union.tree_node** %type114 to i64**, !dbg !6649
  %19 = load i64*, i64** %18, align 8, !dbg !6649
  %bf.load116 = load i64, i64* %19, align 8, !dbg !6649
  %bf.cast11816 = and i64 %bf.load116, 65535, !dbg !6650
  %cmp119 = icmp eq i64 %bf.cast11816, 14, !dbg !6650
  br i1 %cmp119, label %land.lhs.true121, label %if.else198, !dbg !6651

land.lhs.true121:                                 ; preds = %land.lhs.true112
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6652
  %20 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6652
  %21 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !6652
  %tobool122 = icmp eq %struct.VEC_constructor_elt_gc* %21, null, !dbg !6652
  br i1 %tobool122, label %cond.end128, label %cond.true123, !dbg !6652

cond.true123:                                     ; preds = %land.lhs.true121
  %base126 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %21, i64 0, i32 0, !dbg !6652
  br label %cond.end128, !dbg !6652

cond.end128:                                      ; preds = %land.lhs.true121, %cond.true123
  %cond129 = phi %struct.VEC_constructor_elt_base* [ %base126, %cond.true123 ], [ null, %land.lhs.true121 ], !dbg !6652
  %call130 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond129) #7, !dbg !6652
  %conv131 = zext i32 %call130 to i64, !dbg !6652
  %22 = bitcast %union.tree_node** %type114 to %struct.tree_type**, !dbg !6653
  %23 = load %struct.tree_type*, %struct.tree_type** %22, align 8, !dbg !6653
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %23, i64 0, i32 6, !dbg !6653
  %bf.load135 = load i32, i32* %precision, align 4, !dbg !6653
  %bf.clear136 = and i32 %bf.load135, 1023, !dbg !6653
  %sh_prom = zext i32 %bf.clear136 to i64, !dbg !6653
  %shl = shl i64 1, %sh_prom, !dbg !6653
  %cmp137 = icmp eq i64 %shl, %conv131, !dbg !6654
  br i1 %cmp137, label %for.cond.preheader, label %cond.end128.if.else198_crit_edge, !dbg !6655

cond.end128.if.else198_crit_edge:                 ; preds = %cond.end128
  %bf.load200.pre = load i64, i64* %0, align 8, !dbg !6656
  %.pre = and i64 %bf.load200.pre, 65535, !dbg !6656
  br label %if.else198, !dbg !6655

for.cond.preheader:                               ; preds = %cond.end128
  br label %for.cond, !dbg !6658

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6660
  %val.0 = phi %union.tree_node* [ %val.1, %for.inc ], [ undef, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !6579, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6576, metadata !DIExpression()), !dbg !6661
  %24 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !6662
  %tobool142 = icmp eq %struct.VEC_constructor_elt_gc* %24, null, !dbg !6662
  br i1 %tobool142, label %cond.end148, label %cond.true143, !dbg !6662

cond.true143:                                     ; preds = %for.cond
  %base146 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %24, i64 0, i32 0, !dbg !6662
  br label %cond.end148, !dbg !6662

cond.end148:                                      ; preds = %for.cond, %cond.true143
  %cond149 = phi %struct.VEC_constructor_elt_base* [ %base146, %cond.true143 ], [ null, %for.cond ], !dbg !6662
  %call150 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond149) #7, !dbg !6662
  %cmp151 = icmp ult i32 %i.0, %call150, !dbg !6662
  br i1 %cmp151, label %cond.false154, label %cond.end166, !dbg !6662

cond.false154:                                    ; preds = %cond.end148
  %25 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !6662
  %tobool157 = icmp eq %struct.VEC_constructor_elt_gc* %25, null, !dbg !6662
  br i1 %tobool157, label %cond.end163, label %cond.true158, !dbg !6662

cond.true158:                                     ; preds = %cond.false154
  %base161 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %25, i64 0, i32 0, !dbg !6662
  br label %cond.end163, !dbg !6662

cond.end163:                                      ; preds = %cond.false154, %cond.true158
  %cond164 = phi %struct.VEC_constructor_elt_base* [ %base161, %cond.true158 ], [ null, %cond.false154 ], !dbg !6662
  %call165 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond164, i32 %i.0) #7, !dbg !6662
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call165, i64 0, i32 1, !dbg !6662
  %26 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !6662
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !6579, metadata !DIExpression()), !dbg !6661
  br label %cond.end166, !dbg !6662

cond.end166:                                      ; preds = %cond.end148, %cond.end163
  %val.1 = phi %union.tree_node* [ %26, %cond.end163 ], [ %val.0, %cond.end148 ]
  %cond167 = phi i1 [ true, %cond.end163 ], [ false, %cond.end148 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !6579, metadata !DIExpression()), !dbg !6661
  br i1 %cond167, label %for.body, label %for.end, !dbg !6658

for.body:                                         ; preds = %cond.end166
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6664
  %bf.load170 = load i64, i64* %27, align 8, !dbg !6664
  %bf.cast17217 = and i64 %bf.load170, 65535, !dbg !6666
  %cmp173 = icmp eq i64 %bf.cast17217, 23, !dbg !6666
  br i1 %cmp173, label %for.inc, label %land.lhs.true175, !dbg !6667

land.lhs.true175:                                 ; preds = %for.body
  %cmp180 = icmp eq i64 %bf.cast17217, 24, !dbg !6668
  br i1 %cmp180, label %for.inc, label %land.lhs.true182, !dbg !6669

land.lhs.true182:                                 ; preds = %land.lhs.true175
  %cmp187 = icmp eq i64 %bf.cast17217, 25, !dbg !6670
  br i1 %cmp187, label %for.inc, label %cleanup403.loopexit, !dbg !6671

for.inc:                                          ; preds = %land.lhs.true182, %land.lhs.true175, %for.body
  %inc = add i32 %i.0, 1, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6576, metadata !DIExpression()), !dbg !6661
  br label %for.cond, !dbg !6662, !llvm.loop !6672

for.end:                                          ; preds = %cond.end166
  %28 = load %union.tree_node*, %union.tree_node** %type114, align 8, !dbg !6674
  %29 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !6675
  %call195 = tail call %union.tree_node* @build_vector_from_ctor(%union.tree_node* %28, %struct.VEC_constructor_elt_gc* %29) #6, !dbg !6676
  br label %cleanup403, !dbg !6677

if.else198:                                       ; preds = %cond.end128.if.else198_crit_edge, %land.lhs.true112, %if.else105
  %bf.cast202.pre-phi = phi i64 [ %.pre, %cond.end128.if.else198_crit_edge ], [ 51, %land.lhs.true112 ], [ %bf.cast12, %if.else105 ], !dbg !6656
  %arrayidx204 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast202.pre-phi, !dbg !6656
  %30 = load i32, i32* %arrayidx204, align 4, !dbg !6656
  %cmp205 = icmp eq i32 %30, 3, !dbg !6656
  br i1 %cmp205, label %if.then207, label %if.end215, !dbg !6678

if.then207:                                       ; preds = %if.else198
  %call208 = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %call4) #7, !dbg !6679
  %call209 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %call208) #6, !dbg !6680
  br label %cleanup403, !dbg !6681

if.end215:                                        ; preds = %if.then92, %if.then99, %if.else198, %cleanup
  %result.4 = phi %union.tree_node* [ %result.1, %cleanup ], [ %call103, %if.then99 ], [ null, %if.then92 ], [ null, %if.else198 ], !dbg !6682
  call void @llvm.dbg.value(metadata %union.tree_node* %result.4, metadata !6561, metadata !DIExpression()), !dbg !6590
  %cmp216 = icmp eq %union.tree_node* %result.4, null, !dbg !6683
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !6685

if.then218:                                       ; preds = %if.end215
  %call219 = tail call %union.tree_node* @fold(%union.tree_node* %call4) #6, !dbg !6686
  call void @llvm.dbg.value(metadata %union.tree_node* %call219, metadata !6561, metadata !DIExpression()), !dbg !6590
  br label %if.end220, !dbg !6687

if.end220:                                        ; preds = %if.then218, %if.end215
  %result.5 = phi %union.tree_node* [ %call219, %if.then218 ], [ %result.4, %if.end215 ], !dbg !6597
  call void @llvm.dbg.value(metadata %union.tree_node* %result.5, metadata !6561, metadata !DIExpression()), !dbg !6590
  %call221 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %result.5) #6, !dbg !6688
  call void @llvm.dbg.value(metadata %union.tree_node* %call221, metadata !6561, metadata !DIExpression()), !dbg !6590
  %cmp222 = icmp eq %union.tree_node* %call221, %call4, !dbg !6689
  br i1 %cmp222, label %if.end229, label %land.lhs.true224, !dbg !6691

land.lhs.true224:                                 ; preds = %if.end220
  %call225 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* %call221) #6, !dbg !6692
  %tobool227 = icmp eq i8 %call225, 0, !dbg !6692
  br i1 %tobool227, label %if.end229, label %cleanup403, !dbg !6693

if.end229:                                        ; preds = %land.lhs.true224, %if.end220
  br label %cleanup403, !dbg !6694

sw.bb231:                                         ; preds = %entry
  %call233 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6695
  call void @llvm.dbg.value(metadata %union.tree_node* %call233, metadata !6580, metadata !DIExpression()), !dbg !6696
  %call234 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call) #7, !dbg !6697
  %call235 = tail call %union.tree_node* @fold_unary_loc(i32 %call2, i32 %call1, %union.tree_node* %call234, %union.tree_node* %call233) #6, !dbg !6698
  call void @llvm.dbg.value(metadata %union.tree_node* %call235, metadata !6561, metadata !DIExpression()), !dbg !6590
  %tobool236 = icmp eq %union.tree_node* %call235, null, !dbg !6699
  br i1 %tobool236, label %if.else270, label %if.then237, !dbg !6700

if.then237:                                       ; preds = %sw.bb231
  switch i32 %call1, label %if.end264 [
    i32 116, label %land.lhs.true242
    i32 113, label %land.lhs.true242
  ], !dbg !6701

land.lhs.true242:                                 ; preds = %if.then237, %if.then237
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6704
  %bf.load244 = load i64, i64* %31, align 8, !dbg !6704
  %bf.cast24610 = and i64 %bf.load244, 65535, !dbg !6705
  %cmp247 = icmp eq i64 %bf.cast24610, 23, !dbg !6705
  br i1 %cmp247, label %land.lhs.true249, label %if.end264, !dbg !6706

land.lhs.true249:                                 ; preds = %land.lhs.true242
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6707
  %bf.load251 = load i64, i64* %32, align 8, !dbg !6707
  %bf.cast25311 = and i64 %bf.load251, 65535, !dbg !6708
  %cmp254 = icmp eq i64 %bf.cast25311, 23, !dbg !6708
  br i1 %cmp254, label %if.then256, label %if.end264, !dbg !6709

if.then256:                                       ; preds = %land.lhs.true249
  %bf.cast260 = and i64 %bf.load251, 134217728, !dbg !6710
  %bf.clear263 = and i64 %bf.load244, -134217729, !dbg !6711
  %bf.set = or i64 %bf.clear263, %bf.cast260, !dbg !6711
  store i64 %bf.set, i64* %31, align 8, !dbg !6711
  br label %if.end264, !dbg !6712

if.end264:                                        ; preds = %if.then237, %if.then256, %land.lhs.true249, %land.lhs.true242
  %call265 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* nonnull %call235) #6, !dbg !6713
  call void @llvm.dbg.value(metadata %union.tree_node* %call265, metadata !6561, metadata !DIExpression()), !dbg !6590
  %call266 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* %call265) #6, !dbg !6714
  %tobool267 = icmp eq i8 %call266, 0, !dbg !6714
  br i1 %tobool267, label %if.end325, label %cleanup326, !dbg !6716

if.else270:                                       ; preds = %sw.bb231
  switch i32 %call1, label %if.end325 [
    i32 116, label %land.lhs.true276
    i32 113, label %land.lhs.true276
  ], !dbg !6717

land.lhs.true276:                                 ; preds = %if.else270, %if.else270
  %call277 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call) #7, !dbg !6718
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %call277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6718
  %bf.load279 = load i64, i64* %33, align 8, !dbg !6718
  %bf.cast2816 = and i64 %bf.load279, 65535, !dbg !6718
  %cmp282 = icmp eq i64 %bf.cast2816, 10, !dbg !6718
  br i1 %cmp282, label %land.lhs.true292, label %lor.lhs.false284, !dbg !6718

lor.lhs.false284:                                 ; preds = %land.lhs.true276
  %call285 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call) #7, !dbg !6718
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call285, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6718
  %bf.load287 = load i64, i64* %34, align 8, !dbg !6718
  %bf.cast2897 = and i64 %bf.load287, 65535, !dbg !6718
  %cmp290 = icmp eq i64 %bf.cast2897, 12, !dbg !6718
  br i1 %cmp290, label %land.lhs.true292, label %if.end325, !dbg !6719

land.lhs.true292:                                 ; preds = %lor.lhs.false284, %land.lhs.true276
  %call293 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6720
  %type295 = getelementptr inbounds %union.tree_node, %union.tree_node* %call293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6720
  %35 = bitcast %union.tree_node** %type295 to i64**, !dbg !6720
  %36 = load i64*, i64** %35, align 8, !dbg !6720
  %bf.load297 = load i64, i64* %36, align 8, !dbg !6720
  %bf.cast2998 = and i64 %bf.load297, 65535, !dbg !6720
  %cmp300 = icmp eq i64 %bf.cast2998, 10, !dbg !6720
  br i1 %cmp300, label %if.then312, label %lor.lhs.false302, !dbg !6720

lor.lhs.false302:                                 ; preds = %land.lhs.true292
  %call303 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6720
  %type305 = getelementptr inbounds %union.tree_node, %union.tree_node* %call303, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6720
  %37 = bitcast %union.tree_node** %type305 to i64**, !dbg !6720
  %38 = load i64*, i64** %37, align 8, !dbg !6720
  %bf.load307 = load i64, i64* %38, align 8, !dbg !6720
  %bf.cast3099 = and i64 %bf.load307, 65535, !dbg !6720
  %cmp310 = icmp eq i64 %bf.cast3099, 12, !dbg !6720
  br i1 %cmp310, label %if.then312, label %if.end325, !dbg !6721

if.then312:                                       ; preds = %lor.lhs.false302, %land.lhs.true292
  %call314 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call) #7, !dbg !6722
  call void @llvm.dbg.value(metadata %union.tree_node* %call314, metadata !6582, metadata !DIExpression()), !dbg !6723
  %call315 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6724
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6725
  %call316 = tail call %union.tree_node* @maybe_fold_offset_to_address(i32 %call2, %union.tree_node* %call315, %union.tree_node* %39, %union.tree_node* %call314) #7, !dbg !6726
  call void @llvm.dbg.value(metadata %union.tree_node* %call316, metadata !6586, metadata !DIExpression()), !dbg !6723
  %tobool317 = icmp ne %union.tree_node* %call316, null, !dbg !6727
  %. = zext i1 %tobool317 to i32, !dbg !6729
  br i1 %tobool317, label %cleanup326, label %if.end325

if.end325:                                        ; preds = %if.end264, %if.then312, %if.else270, %lor.lhs.false284, %lor.lhs.false302
  br label %cleanup326, !dbg !6730

cleanup326:                                       ; preds = %if.end264, %if.then312, %if.end325
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end325 ], [ %., %if.then312 ], [ 1, %if.end264 ]
  %retval.6 = phi %union.tree_node* [ null, %if.end325 ], [ %call316, %if.then312 ], [ %call265, %if.end264 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %sw.epilog, label %cleanup403

sw.bb329:                                         ; preds = %entry
  %call330 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call) #7, !dbg !6731
  %cmp331 = icmp eq i32 %call330, 66, !dbg !6732
  br i1 %cmp331, label %if.then333, label %if.end367, !dbg !6733

if.then333:                                       ; preds = %sw.bb329
  %call335 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6734
  %type337 = getelementptr inbounds %union.tree_node, %union.tree_node* %call335, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6734
  %40 = load %union.tree_node*, %union.tree_node** %type337, align 8, !dbg !6734
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6587, metadata !DIExpression()), !dbg !6735
  %type339 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6736
  %41 = bitcast %union.tree_node** %type339 to i64**, !dbg !6736
  %42 = load i64*, i64** %41, align 8, !dbg !6736
  %bf.load341 = load i64, i64* %42, align 8, !dbg !6736
  %bf.cast3435 = and i64 %bf.load341, 65535, !dbg !6738
  %cmp344 = icmp eq i64 %bf.cast3435, 15, !dbg !6738
  br i1 %cmp344, label %if.then346, label %if.end362, !dbg !6739

if.then346:                                       ; preds = %if.then333
  %type350 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !6740
  %43 = bitcast i64* %type350 to %union.tree_node**, !dbg !6740
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !6740
  %call351 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %44) #6, !dbg !6742
  call void @llvm.dbg.value(metadata %union.tree_node* %call351, metadata !6587, metadata !DIExpression()), !dbg !6735
  %call352 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !6743
  %type354 = getelementptr inbounds %union.tree_node, %union.tree_node* %call352, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6743
  %45 = load %union.tree_node*, %union.tree_node** %type354, align 8, !dbg !6743
  %call355 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %45, %union.tree_node* %call351) #6, !dbg !6745
  %tobool356 = icmp eq i8 %call355, 0, !dbg !6745
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !6746

if.then357:                                       ; preds = %if.then346
  %call358 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6747
  %type360 = getelementptr inbounds %union.tree_node, %union.tree_node* %call358, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6747
  %46 = load %union.tree_node*, %union.tree_node** %type360, align 8, !dbg !6747
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !6587, metadata !DIExpression()), !dbg !6735
  br label %if.end362, !dbg !6748

if.end362:                                        ; preds = %if.then346, %if.then357, %if.then333
  %type334.1 = phi %union.tree_node* [ %40, %if.then333 ], [ %call351, %if.then346 ], [ %46, %if.then357 ], !dbg !6735
  call void @llvm.dbg.value(metadata %union.tree_node* %type334.1, metadata !6587, metadata !DIExpression()), !dbg !6735
  %call363 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !6749
  %call364 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6750
  %call365 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call) #7, !dbg !6751
  %call366 = tail call %union.tree_node* @maybe_fold_stmt_addition(i32 %call363, %union.tree_node* %type334.1, %union.tree_node* %call364, %union.tree_node* %call365) #7, !dbg !6752
  call void @llvm.dbg.value(metadata %union.tree_node* %call366, metadata !6561, metadata !DIExpression()), !dbg !6590
  br label %if.end367, !dbg !6753

if.end367:                                        ; preds = %if.end362, %sw.bb329
  %result.6 = phi %union.tree_node* [ %call366, %if.end362 ], [ null, %sw.bb329 ], !dbg !6590
  call void @llvm.dbg.value(metadata %union.tree_node* %result.6, metadata !6561, metadata !DIExpression()), !dbg !6590
  %tobool368 = icmp eq %union.tree_node* %result.6, null, !dbg !6754
  br i1 %tobool368, label %if.then369, label %if.end376, !dbg !6756

if.then369:                                       ; preds = %if.end367
  %call370 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !6757
  %type372 = getelementptr inbounds %union.tree_node, %union.tree_node* %call370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6757
  %47 = load %union.tree_node*, %union.tree_node** %type372, align 8, !dbg !6757
  %call373 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6758
  %call374 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call) #7, !dbg !6759
  %call375 = tail call %union.tree_node* @fold_binary_loc(i32 %call2, i32 %call1, %union.tree_node* %47, %union.tree_node* %call373, %union.tree_node* %call374) #6, !dbg !6760
  call void @llvm.dbg.value(metadata %union.tree_node* %call375, metadata !6561, metadata !DIExpression()), !dbg !6590
  br label %if.end376, !dbg !6761

if.end376:                                        ; preds = %if.end367, %if.then369
  %result.7 = phi %union.tree_node* [ %result.6, %if.end367 ], [ %call375, %if.then369 ], !dbg !6762
  call void @llvm.dbg.value(metadata %union.tree_node* %result.7, metadata !6561, metadata !DIExpression()), !dbg !6590
  %tobool377 = icmp eq %union.tree_node* %result.7, null, !dbg !6763
  br i1 %tobool377, label %sw.epilog, label %if.then378, !dbg !6765

if.then378:                                       ; preds = %if.end376
  %call379 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* nonnull %result.7) #6, !dbg !6766
  call void @llvm.dbg.value(metadata %union.tree_node* %call379, metadata !6561, metadata !DIExpression()), !dbg !6590
  %call380 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* %call379) #6, !dbg !6768
  %tobool381 = icmp eq i8 %call380, 0, !dbg !6768
  br i1 %tobool381, label %if.end383, label %cleanup403, !dbg !6770

if.end383:                                        ; preds = %if.then378
  %call384 = tail call zeroext i8 @commutative_tree_code(i32 %call1) #6, !dbg !6771
  %tobool386 = icmp eq i8 %call384, 0, !dbg !6771
  br i1 %tobool386, label %sw.epilog, label %land.lhs.true387, !dbg !6773

land.lhs.true387:                                 ; preds = %if.end383
  %call388 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6774
  %call389 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call) #7, !dbg !6775
  %call390 = tail call zeroext i8 @tree_swap_operands_p(%union.tree_node* %call388, %union.tree_node* %call389, i8 zeroext 0) #6, !dbg !6776
  %tobool392 = icmp eq i8 %call390, 0, !dbg !6776
  br i1 %tobool392, label %sw.epilog, label %if.then393, !dbg !6777

if.then393:                                       ; preds = %land.lhs.true387
  %call394 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !6778
  %type396 = getelementptr inbounds %union.tree_node, %union.tree_node* %call394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6778
  %48 = load %union.tree_node*, %union.tree_node** %type396, align 8, !dbg !6778
  %call397 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call) #7, !dbg !6778
  %call398 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !6778
  %call399 = tail call %union.tree_node* @build2_stat(i32 %call1, %union.tree_node* %48, %union.tree_node* %call397, %union.tree_node* %call398) #6, !dbg !6778
  br label %cleanup403, !dbg !6779

sw.bb402:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6780
  br label %sw.epilog, !dbg !6781

sw.epilog:                                        ; preds = %land.lhs.true387, %if.end383, %if.end376, %cleanup326, %sw.bb402, %entry
  br label %cleanup403, !dbg !6782

cleanup403.loopexit:                              ; preds = %land.lhs.true182
  br label %cleanup403, !dbg !6783

cleanup403:                                       ; preds = %cleanup403.loopexit, %land.lhs.true224, %if.then378, %if.then72, %if.then83, %if.then207, %if.end229, %cleanup, %for.end, %cleanup326, %sw.epilog, %if.then393
  %retval.7 = phi %union.tree_node* [ null, %sw.epilog ], [ %call399, %if.then393 ], [ %retval.6, %cleanup326 ], [ null, %cleanup ], [ null, %if.end229 ], [ %call73, %if.then72 ], [ %call84, %if.then83 ], [ %call209, %if.then207 ], [ %call195, %for.end ], [ %call221, %land.lhs.true224 ], [ %call379, %if.then378 ], [ null, %cleanup403.loopexit ]
  ret %union.tree_node* %retval.7, !dbg !6783
}

declare dso_local i32 @get_gimple_rhs_num_ops(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @fold_gimple_cond(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6784 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6786, metadata !DIExpression()), !dbg !6788
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !6789
  %call1 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !6790
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6791
  %call2 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6792
  %call3 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #7, !dbg !6793
  %call4 = tail call %union.tree_node* @fold_binary_loc(i32 %call, i32 %call1, %union.tree_node* %0, %union.tree_node* %call2, %union.tree_node* %call3) #6, !dbg !6794
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6787, metadata !DIExpression()), !dbg !6788
  %tobool = icmp eq %union.tree_node* %call4, null, !dbg !6795
  br i1 %tobool, label %cleanup, label %if.then, !dbg !6797

if.then:                                          ; preds = %entry
  %call5 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* nonnull %call4) #6, !dbg !6798
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !6787, metadata !DIExpression()), !dbg !6788
  %call6 = tail call zeroext i8 @is_gimple_condexpr(%union.tree_node* %call5) #6, !dbg !6800
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6800
  br i1 %tobool7, label %cleanup, label %land.lhs.true, !dbg !6802

land.lhs.true:                                    ; preds = %if.then
  %call8 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* %call5) #6, !dbg !6803
  %tobool10 = icmp eq i8 %call8, 0, !dbg !6803
  br i1 %tobool10, label %cleanup, label %if.then11, !dbg !6804

if.then11:                                        ; preds = %land.lhs.true
  tail call void @gimple_cond_set_condition_from_tree(%union.gimple_statement_d* %stmt, %union.tree_node* %call5) #6, !dbg !6805
  br label %cleanup, !dbg !6807

cleanup:                                          ; preds = %land.lhs.true, %if.then, %entry, %if.then11
  %retval.0 = phi i8 [ 1, %if.then11 ], [ 0, %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !6788
  ret i8 %retval.0, !dbg !6808
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %expr, i8 zeroext %is_lhs) unnamed_addr #5 !dbg !6809 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6813, metadata !DIExpression()), !dbg !6828
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.value(metadata i8 %is_lhs, metadata !6814, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !6815, metadata !DIExpression()), !dbg !6828
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6829
  %bf.load = load i64, i64* %.cast, align 8, !dbg !6829
  %bf.cast8 = and i64 %bf.load, 65535, !dbg !6830
  %cmp = icmp ne i64 %bf.cast8, 45, !dbg !6830
  %tobool = icmp ne i8 %is_lhs, 0, !dbg !6831
  %or.cond = or i1 %cmp, %tobool, !dbg !6832
  br i1 %or.cond, label %if.end3, label %if.then, !dbg !6832

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6813, metadata !DIExpression()), !dbg !6828
  %call = tail call %union.tree_node* @fold_read_from_constant_string(%union.tree_node* %expr) #6, !dbg !6833
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6816, metadata !DIExpression()), !dbg !6834
  %tobool1 = icmp eq %union.tree_node* %call, null, !dbg !6835
  br i1 %tobool1, label %if.end3, label %cleanup118

if.end3:                                          ; preds = %if.then, %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6813, metadata !DIExpression()), !dbg !6828
  %call4 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %expr) #7, !dbg !6837
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6837
  br i1 %tobool5, label %if.end24, label %land.lhs.true6, !dbg !6838

land.lhs.true6:                                   ; preds = %if.end3
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6839
  %1 = bitcast %union.tree_node** %0 to i64**, !dbg !6839
  %2 = load i64*, i64** %1, align 8, !dbg !6839
  %bf.load8 = load i64, i64* %2, align 8, !dbg !6839
  %bf.cast10 = and i64 %bf.load8, 65535, !dbg !6839
  %arrayidx11 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast10, !dbg !6839
  %3 = load i32, i32* %arrayidx11, align 4, !dbg !6839
  %cmp12 = icmp eq i32 %3, 1, !dbg !6839
  br i1 %cmp12, label %if.then14, label %if.end24, !dbg !6840

if.then14:                                        ; preds = %land.lhs.true6
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6813, metadata !DIExpression()), !dbg !6828
  %call16 = tail call %union.tree_node* @fold(%union.tree_node* %expr) #6, !dbg !6841
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !6819, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6813, metadata !DIExpression()), !dbg !6828
  %cmp17 = icmp ne %union.tree_node* %call16, %expr, !dbg !6843
  %call16.retval.1 = select i1 %cmp17, %union.tree_node* %call16, %union.tree_node* null, !dbg !6845
  br i1 %cmp17, label %cleanup118, label %if.end24

if.end24:                                         ; preds = %if.then14, %if.end3, %land.lhs.true6
  %retval.3 = phi %union.tree_node* [ null, %land.lhs.true6 ], [ null, %if.end3 ], [ %call16.retval.1, %if.then14 ]
  br label %while.cond, !dbg !6846

while.cond:                                       ; preds = %while.body, %if.end24
  %4 = phi %union.tree_node* [ %expr, %if.end24 ], [ %.pre, %while.body ], !dbg !6847
  %t.0 = phi %union.tree_node** [ %expr.addr, %if.end24 ], [ %operands28, %while.body ], !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node** %t.0, metadata !6815, metadata !DIExpression()), !dbg !6828
  %call25 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %4) #7, !dbg !6848
  %tobool26 = icmp eq i8 %call25, 0, !dbg !6846
  %5 = load %union.tree_node*, %union.tree_node** %t.0, align 8, !dbg !6828
  br i1 %tobool26, label %while.end, label %while.body, !dbg !6846

while.body:                                       ; preds = %while.cond
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6849
  call void @llvm.dbg.value(metadata %union.tree_node** %operands28, metadata !6815, metadata !DIExpression()), !dbg !6828
  %.pre = load %union.tree_node*, %union.tree_node** %operands28, align 8, !dbg !6847
  br label %while.cond, !dbg !6846, !llvm.loop !6850

while.end:                                        ; preds = %while.cond
  %t.0.lcssa = phi %union.tree_node** [ %t.0, %while.cond ], !dbg !6828
  %.lcssa = phi %union.tree_node* [ %5, %while.cond ], !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node** %t.0.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node** %t.0.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node** %t.0.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6828
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6851
  %bf.load31 = load i64, i64* %6, align 8, !dbg !6851
  %bf.cast339 = and i64 %bf.load31, 65535, !dbg !6852
  %cmp34 = icmp eq i64 %bf.cast339, 47, !dbg !6852
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !6853

if.then36:                                        ; preds = %while.end
  %operands39 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6854
  %7 = load %union.tree_node*, %union.tree_node** %operands39, align 8, !dbg !6854
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6855
  %call41 = tail call fastcc %union.tree_node* @maybe_fold_stmt_indirect(%union.tree_node* %.lcssa, %union.tree_node* %7, %union.tree_node* %8) #7, !dbg !6856
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !6822, metadata !DIExpression()), !dbg !6857
  %tobool45 = icmp ne %union.tree_node* %call41, null, !dbg !6858
  %or.cond5 = and i1 %tobool, %tobool45, !dbg !6860
  br i1 %or.cond5, label %land.lhs.true46, label %if.end56, !dbg !6860

land.lhs.true46:                                  ; preds = %if.then36
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6861
  %bf.load48 = load i64, i64* %9, align 8, !dbg !6861
  %bf.cast50 = and i64 %bf.load48, 65535, !dbg !6861
  %arrayidx52 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast50, !dbg !6861
  %10 = load i32, i32* %arrayidx52, align 4, !dbg !6861
  %cmp53 = icmp eq i32 %10, 1, !dbg !6861
  %spec.select = select i1 %cmp53, %union.tree_node* null, %union.tree_node* %call41, !dbg !6862
  br label %if.end56, !dbg !6862

if.end56:                                         ; preds = %land.lhs.true46, %if.then36
  %tem37.0 = phi %union.tree_node* [ %call41, %if.then36 ], [ %spec.select, %land.lhs.true46 ], !dbg !6857
  call void @llvm.dbg.value(metadata %union.tree_node* %tem37.0, metadata !6822, metadata !DIExpression()), !dbg !6857
  %tobool57 = icmp eq %union.tree_node* %tem37.0, null, !dbg !6863
  br i1 %tobool57, label %land.lhs.true58, label %if.end75, !dbg !6865

land.lhs.true58:                                  ; preds = %if.end56
  %11 = bitcast %union.tree_node** %t.0.lcssa to %struct.tree_exp**, !dbg !6866
  %12 = load %struct.tree_exp*, %struct.tree_exp** %11, align 8, !dbg !6866
  %arrayidx61 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %12, i64 0, i32 3, i64 0, !dbg !6866
  %13 = bitcast %union.tree_node** %arrayidx61 to i64**, !dbg !6866
  %14 = load i64*, i64** %13, align 8, !dbg !6866
  %bf.load63 = load i64, i64* %14, align 8, !dbg !6866
  %bf.cast6511 = and i64 %bf.load63, 65535, !dbg !6867
  %cmp66 = icmp eq i64 %bf.cast6511, 121, !dbg !6867
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !6868

if.then68:                                        ; preds = %land.lhs.true58
  %arrayidx74 = getelementptr inbounds i64, i64* %14, i64 5, !dbg !6869
  %15 = bitcast i64* %arrayidx74 to %union.tree_node**, !dbg !6869
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !6869
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6822, metadata !DIExpression()), !dbg !6857
  br label %if.end75, !dbg !6870

if.end75:                                         ; preds = %if.end56, %if.then68, %land.lhs.true58
  %tem37.1 = phi %union.tree_node* [ %tem37.0, %if.end56 ], [ %16, %if.then68 ], [ null, %land.lhs.true58 ], !dbg !6857
  call void @llvm.dbg.value(metadata %union.tree_node* %tem37.1, metadata !6822, metadata !DIExpression()), !dbg !6857
  %tobool76 = icmp eq %union.tree_node* %tem37.1, null, !dbg !6871
  br i1 %tobool76, label %cleanup83, label %if.then77, !dbg !6873

if.then77:                                        ; preds = %if.end75
  store %union.tree_node* %tem37.1, %union.tree_node** %t.0.lcssa, align 8, !dbg !6874
  %17 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !6876
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6813, metadata !DIExpression()), !dbg !6828
  %call78 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %17, i8 zeroext %is_lhs) #7, !dbg !6877
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !6822, metadata !DIExpression()), !dbg !6857
  %tobool79 = icmp eq %union.tree_node* %call78, null, !dbg !6878
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6813, metadata !DIExpression()), !dbg !6828
  %spec.select6 = select i1 %tobool79, %union.tree_node* %17, %union.tree_node* %call78, !dbg !6880
  br label %cleanup83, !dbg !6880

cleanup83:                                        ; preds = %if.end75, %if.then77
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end75 ], [ false, %if.then77 ]
  %retval.4 = phi %union.tree_node* [ %retval.3, %if.end75 ], [ %spec.select6, %if.then77 ], !dbg !6828
  br i1 %cleanup.dest.slot.2, label %if.end117, label %cleanup118

if.else:                                          ; preds = %while.end
  %tobool86 = icmp eq i8 %is_lhs, 0, !dbg !6881
  br i1 %tobool86, label %land.lhs.true87, label %if.end117, !dbg !6882

land.lhs.true87:                                  ; preds = %if.else
  %arrayidx93 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast339, !dbg !6883
  %18 = load i32, i32* %arrayidx93, align 4, !dbg !6883
  %cmp94 = icmp eq i32 %18, 3, !dbg !6883
  br i1 %cmp94, label %if.then96, label %if.end117, !dbg !6884

if.then96:                                        ; preds = %land.lhs.true87
  %call98 = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %.lcssa) #7, !dbg !6885
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !6825, metadata !DIExpression()), !dbg !6886
  %tobool99 = icmp eq %union.tree_node* %call98, null, !dbg !6887
  br i1 %tobool99, label %cleanup113, label %land.lhs.true100, !dbg !6889

land.lhs.true100:                                 ; preds = %if.then96
  %19 = bitcast %union.tree_node** %t.0.lcssa to %struct.tree_common**, !dbg !6890
  %20 = load %struct.tree_common*, %struct.tree_common** %19, align 8, !dbg !6890
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !6890
  %21 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6890
  %type102 = getelementptr inbounds %union.tree_node, %union.tree_node* %call98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6891
  %22 = load %union.tree_node*, %union.tree_node** %type102, align 8, !dbg !6891
  %call103 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %21, %union.tree_node* %22) #6, !dbg !6892
  %tobool105 = icmp eq i8 %call103, 0, !dbg !6892
  br i1 %tobool105, label %cleanup113, label %if.then106, !dbg !6893

if.then106:                                       ; preds = %land.lhs.true100
  %call107 = tail call %union.tree_node* @unshare_expr(%union.tree_node* nonnull %call98) #6, !dbg !6894
  store %union.tree_node* %call107, %union.tree_node** %t.0.lcssa, align 8, !dbg !6896
  %23 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !6897
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !6813, metadata !DIExpression()), !dbg !6828
  %call108 = tail call fastcc %union.tree_node* @maybe_fold_reference(%union.tree_node* %23, i8 zeroext 0) #7, !dbg !6898
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !6825, metadata !DIExpression()), !dbg !6886
  %tobool109 = icmp eq %union.tree_node* %call108, null, !dbg !6899
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !6813, metadata !DIExpression()), !dbg !6828
  %spec.select7 = select i1 %tobool109, %union.tree_node* %23, %union.tree_node* %call108, !dbg !6901
  br label %cleanup113, !dbg !6901

cleanup113:                                       ; preds = %land.lhs.true100, %if.then96, %if.then106
  %cleanup.dest.slot.3 = phi i1 [ true, %land.lhs.true100 ], [ true, %if.then96 ], [ false, %if.then106 ]
  %retval.5 = phi %union.tree_node* [ %retval.3, %land.lhs.true100 ], [ %retval.3, %if.then96 ], [ %spec.select7, %if.then106 ], !dbg !6828
  br i1 %cleanup.dest.slot.3, label %if.end117, label %cleanup118

if.end117:                                        ; preds = %if.else, %land.lhs.true87, %cleanup113, %cleanup83
  br label %cleanup118, !dbg !6902

cleanup118:                                       ; preds = %if.then14, %if.then, %cleanup83, %cleanup113, %if.end117
  %retval.6 = phi %union.tree_node* [ %call16.retval.1, %if.then14 ], [ %retval.4, %cleanup83 ], [ null, %if.end117 ], [ %retval.5, %cleanup113 ], [ %call, %if.then ], !dbg !6828
  ret %union.tree_node* %retval.6, !dbg !6903
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @fold_gimple_call(%struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !6904 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6906, metadata !DIExpression()), !dbg !6916
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6917
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6907, metadata !DIExpression()), !dbg !6916
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #7, !dbg !6918
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6908, metadata !DIExpression()), !dbg !6916
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !6919
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6920

land.lhs.true:                                    ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 5, !dbg !6921
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !6921
  %bf.clear = and i32 %bf.load, 6144, !dbg !6921
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !6921
  br i1 %cmp, label %if.else, label %if.then, !dbg !6922

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call fastcc %union.tree_node* @ccp_fold_builtin(%union.gimple_statement_d* %call) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6909, metadata !DIExpression()), !dbg !6924
  %tobool3 = icmp eq %union.tree_node* %call2, null, !dbg !6925
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !6927

if.then4:                                         ; preds = %if.then
  %call5 = tail call zeroext i8 @update_call_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* nonnull %call2) #6, !dbg !6928
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6928
  br i1 %tobool6, label %if.then7, label %cleanup, !dbg !6931

if.then7:                                         ; preds = %if.then4
  tail call fastcc void @gimplify_and_update_call_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* nonnull %call2) #7, !dbg !6932
  br label %cleanup, !dbg !6932

cleanup:                                          ; preds = %if.then4, %if.then, %if.then7
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then7 ], [ false, %if.then4 ], [ true, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end48, label %cleanup49

if.else:                                          ; preds = %land.lhs.true, %entry
  %call9 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call) #7, !dbg !6933
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6908, metadata !DIExpression()), !dbg !6916
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6934
  %bf.load10 = load i64, i64* %0, align 8, !dbg !6934
  %bf.cast2 = and i64 %bf.load10, 65535, !dbg !6935
  %cmp12 = icmp eq i64 %bf.cast2, 50, !dbg !6935
  %1 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 40), align 8, !dbg !6936
  %tobool14 = icmp ne %union.tree_node* (%union.tree_node*, %union.tree_node*)* %1, null, !dbg !6937
  %or.cond = and i1 %cmp12, %tobool14, !dbg !6938
  br i1 %or.cond, label %land.lhs.true15, label %if.end48, !dbg !6938

land.lhs.true15:                                  ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6939
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6939
  %2 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !6939
  %3 = load i64*, i64** %2, align 8, !dbg !6939
  %bf.load17 = load i64, i64* %3, align 8, !dbg !6939
  %bf.cast193 = and i64 %bf.load17, 65535, !dbg !6940
  %cmp20 = icmp eq i64 %bf.cast193, 121, !dbg !6940
  br i1 %cmp20, label %land.lhs.true21, label %if.end48, !dbg !6941

land.lhs.true21:                                  ; preds = %land.lhs.true15
  %arrayidx27 = getelementptr inbounds i64, i64* %3, i64 5, !dbg !6942
  %4 = bitcast i64* %arrayidx27 to i64**, !dbg !6942
  %5 = load i64*, i64** %4, align 8, !dbg !6942
  %bf.load29 = load i64, i64* %5, align 8, !dbg !6942
  %bf.cast31 = and i64 %bf.load29, 65535, !dbg !6942
  %arrayidx32 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast31, !dbg !6942
  %6 = load i32, i32* %arrayidx32, align 4, !dbg !6942
  %cmp33 = icmp eq i32 %6, 3, !dbg !6942
  br i1 %cmp33, label %if.then34, label %if.end48, !dbg !6943

if.then34:                                        ; preds = %land.lhs.true21
  %type = getelementptr inbounds i64, i64* %3, i64 2, !dbg !6944
  %7 = bitcast i64* %type to %struct.tree_common**, !dbg !6944
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !6944
  %type39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !6944
  %9 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !6944
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6912, metadata !DIExpression()), !dbg !6945
  %call40 = tail call %union.tree_node* %1(%union.tree_node* %call9, %union.tree_node* %9) #6, !dbg !6946
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !6912, metadata !DIExpression()), !dbg !6945
  %tobool41 = icmp eq %union.tree_node* %call40, null, !dbg !6947
  br i1 %tobool41, label %cleanup44, label %if.then42, !dbg !6949

if.then42:                                        ; preds = %if.then34
  tail call fastcc void @gimple_call_set_fn(%union.gimple_statement_d* %call, %union.tree_node* nonnull %call40) #7, !dbg !6950
  br label %cleanup44, !dbg !6952

cleanup44:                                        ; preds = %if.then34, %if.then42
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then42 ], [ true, %if.then34 ]
  br i1 %cleanup.dest.slot.1, label %if.end48, label %cleanup49

if.end48:                                         ; preds = %if.else, %land.lhs.true15, %land.lhs.true21, %cleanup44, %cleanup
  br label %cleanup49, !dbg !6953

cleanup49:                                        ; preds = %cleanup, %cleanup44, %if.end48
  %retval.2 = phi i8 [ 1, %cleanup ], [ 0, %if.end48 ], [ 1, %cleanup44 ], !dbg !6916
  ret i8 %retval.2, !dbg !6954
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6955 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6957, metadata !DIExpression()), !dbg !6958
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6959
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !6960
  %0 = load i8, i8* %no, align 1, !dbg !6960
  %conv = zext i8 %0 to i32, !dbg !6961
  ret i32 %conv, !dbg !6962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6963 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6965, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %index, metadata !6966, metadata !DIExpression()), !dbg !6967
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6968
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !6968
  %0 = load i8, i8* %no, align 1, !dbg !6968
  %conv = zext i8 %0 to i32, !dbg !6968
  %cmp = icmp ult i32 %conv, %index, !dbg !6968
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6968

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6968
  br label %cond.end, !dbg !6968

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !6969
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !6969
  %2 = load i8, i8* %1, align 8, !dbg !6969
  %conv3 = zext i8 %2 to i32, !dbg !6970
  %add = add i32 %conv3, %index, !dbg !6971
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !6972
  ret %union.tree_node* %call, !dbg !6973
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6974 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6976, metadata !DIExpression()), !dbg !6977
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !6978
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !6978
  %1 = load i8, i8* %0, align 8, !dbg !6978
  %conv = zext i8 %1 to i32, !dbg !6979
  ret i32 %conv, !dbg !6980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6981 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6983, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.value(metadata i32 %index, metadata !6984, metadata !DIExpression()), !dbg !6985
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !6986
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !6986
  %1 = load i8, i8* %0, align 8, !dbg !6986
  %conv = zext i8 %1 to i32, !dbg !6986
  %cmp = icmp ult i32 %conv, %index, !dbg !6986
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6986

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6986
  br label %cond.end, !dbg !6986

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %index) #7, !dbg !6987
  ret %union.tree_node* %call, !dbg !6988
}

declare dso_local void @gimple_set_lhs(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_condexpr(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @valid_gimple_rhs_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @maybe_fold_tmr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_from_ctor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @commutative_tree_code(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_swap_operands_p(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimple_cond_set_condition_from_tree(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_read_from_constant_string(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @maybe_fold_stmt_indirect(%union.tree_node* %expr, %union.tree_node* %base, %union.tree_node* %offset) unnamed_addr #5 !dbg !6989 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6993, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !6995, metadata !DIExpression()), !dbg !7005
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7006
  %bf.load = load i64, i64* %0, align 8, !dbg !7006
  %bf.cast = and i64 %bf.load, 524288, !dbg !7006
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !7007
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast5, !dbg !7007
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7007
  %cmp = icmp ugt i32 %1, 3, !dbg !7007
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !7007

land.lhs.true:                                    ; preds = %entry
  %cmp13 = icmp ult i32 %1, 11, !dbg !7007
  br i1 %cmp13, label %cond.true, label %cond.end, !dbg !7007

cond.true:                                        ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7007
  %3 = load i32, i32* %2, align 8, !dbg !7007
  br label %cond.end, !dbg !7007

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !7007
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6998, metadata !DIExpression()), !dbg !7005
  %call = tail call %union.tree_node* @fold(%union.tree_node* %base) #6, !dbg !7008
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6994, metadata !DIExpression()), !dbg !7005
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7005
  br label %while.cond, !dbg !7009

while.cond:                                       ; preds = %while.body, %cond.end
  %base.addr.0 = phi %union.tree_node* [ %call, %cond.end ], [ %8, %while.body ], !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0, metadata !6994, metadata !DIExpression()), !dbg !7005
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7009
  %bf.load16 = load i64, i64* %5, align 8, !dbg !7009
  %bf.cast184 = and i64 %bf.load16, 65535, !dbg !7009
  %cmp19 = icmp eq i64 %bf.cast184, 116, !dbg !7009
  br i1 %cmp19, label %land.lhs.true34, label %lor.lhs.false, !dbg !7009

lor.lhs.false:                                    ; preds = %while.cond
  %6 = or i64 %bf.cast184, 4, !dbg !7009
  %7 = icmp eq i64 %6, 117, !dbg !7009
  br i1 %7, label %land.lhs.true34, label %while.end, !dbg !7009

land.lhs.true34:                                  ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7009
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7009
  %cmp37 = icmp eq %union.tree_node* %8, %4, !dbg !7009
  br i1 %cmp37, label %while.end, label %land.rhs, !dbg !7009

land.rhs:                                         ; preds = %land.lhs.true34
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7009
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7009
  %type43 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7009
  %10 = load %union.tree_node*, %union.tree_node** %type43, align 8, !dbg !7009
  %cmp44 = icmp eq %union.tree_node* %9, %10, !dbg !7009
  br i1 %cmp44, label %while.body, label %while.end, !dbg !7009

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6994, metadata !DIExpression()), !dbg !7005
  br label %while.cond, !dbg !7009, !llvm.loop !7010

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true34, %land.rhs
  %base.addr.0.lcssa = phi %union.tree_node* [ %base.addr.0, %lor.lhs.false ], [ %base.addr.0, %land.lhs.true34 ], [ %base.addr.0, %land.rhs ], !dbg !7005
  %.lcssa = phi i64* [ %5, %lor.lhs.false ], [ %5, %land.lhs.true34 ], [ %5, %land.rhs ], !dbg !7009
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.0.lcssa, metadata !6994, metadata !DIExpression()), !dbg !7005
  %operands50 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7011
  store %union.tree_node* %base.addr.0.lcssa, %union.tree_node** %operands50, align 8, !dbg !7012
  %call52 = tail call %union.tree_node* @fold_read_from_constant_string(%union.tree_node* %expr) #6, !dbg !7013
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !6996, metadata !DIExpression()), !dbg !7005
  %tobool = icmp eq %union.tree_node* %call52, null, !dbg !7014
  br i1 %tobool, label %if.end, label %cleanup217, !dbg !7016

if.end:                                           ; preds = %while.end
  %bf.load54 = load i64, i64* %.lcssa, align 8, !dbg !7017
  %bf.cast567 = and i64 %bf.load54, 65535, !dbg !7018
  %cmp57 = icmp eq i64 %bf.cast567, 66, !dbg !7018
  br i1 %cmp57, label %if.then59, label %if.end76, !dbg !7019

if.then59:                                        ; preds = %if.end
  %operands61 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7020
  %arrayidx62 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands61, i64 1, !dbg !7020
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx62, align 8, !dbg !7020
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6999, metadata !DIExpression()), !dbg !7021
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7022
  %bf.load64 = load i64, i64* %12, align 8, !dbg !7022
  %bf.cast6621 = and i64 %bf.load64, 65535, !dbg !7024
  %cmp67 = icmp eq i64 %bf.cast6621, 23, !dbg !7024
  br i1 %cmp67, label %if.end70, label %cleanup, !dbg !7025

if.end70:                                         ; preds = %if.then59
  %13 = load %union.tree_node*, %union.tree_node** %operands61, align 8, !dbg !7026
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6994, metadata !DIExpression()), !dbg !7005
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7027
  %call74 = tail call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %offset, %union.tree_node* %11, i32 1) #6, !dbg !7027
  %call75 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %14, %union.tree_node* %call74) #6, !dbg !7027
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !6995, metadata !DIExpression()), !dbg !7005
  br label %cleanup, !dbg !7028

cleanup:                                          ; preds = %if.then59, %if.end70
  %offset.addr.0 = phi %union.tree_node* [ %call75, %if.end70 ], [ %offset, %if.then59 ]
  %base.addr.1 = phi %union.tree_node* [ %13, %if.end70 ], [ %base.addr.0.lcssa, %if.then59 ], !dbg !7005
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end70 ], [ false, %if.then59 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.1, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.0, metadata !6995, metadata !DIExpression()), !dbg !7005
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end76_crit_edge, label %cleanup217

cleanup.if.end76_crit_edge:                       ; preds = %cleanup
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7029
  %bf.load78.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !7030
  br label %if.end76

if.end76:                                         ; preds = %cleanup.if.end76_crit_edge, %if.end
  %bf.load78 = phi i64 [ %bf.load54, %if.end ], [ %bf.load78.pre, %cleanup.if.end76_crit_edge ], !dbg !7030
  %offset.addr.1 = phi %union.tree_node* [ %offset, %if.end ], [ %offset.addr.0, %cleanup.if.end76_crit_edge ]
  %base.addr.2 = phi %union.tree_node* [ %base.addr.0.lcssa, %if.end ], [ %base.addr.1, %cleanup.if.end76_crit_edge ], !dbg !7031
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.2, metadata !6994, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.1, metadata !6995, metadata !DIExpression()), !dbg !7005
  %bf.cast808 = and i64 %bf.load78, 65535, !dbg !7032
  %cmp81 = icmp eq i64 %bf.cast808, 121, !dbg !7032
  br i1 %cmp81, label %if.then83, label %if.else, !dbg !7033

if.then83:                                        ; preds = %if.end76
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.2, metadata !7002, metadata !DIExpression()), !dbg !7034
  %operands85 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7035
  %15 = load %union.tree_node*, %union.tree_node** %operands85, align 8, !dbg !7035
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !6994, metadata !DIExpression()), !dbg !7005
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7036
  %bf.load88 = load i64, i64* %16, align 8, !dbg !7036
  %bf.cast9013 = and i64 %bf.load88, 65535, !dbg !7038
  %cmp91 = icmp eq i64 %bf.cast9013, 33, !dbg !7038
  br i1 %cmp91, label %land.lhs.true93, label %if.end100, !dbg !7039

land.lhs.true93:                                  ; preds = %if.then83
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7040
  %17 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7040
  %call94 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %17) #6, !dbg !7041
  %tobool96 = icmp eq i8 %call94, 0, !dbg !7041
  br i1 %tobool96, label %if.end100, label %if.then97, !dbg !7042

if.then97:                                        ; preds = %land.lhs.true93
  %18 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7043
  br label %cleanup169, !dbg !7044

if.end100:                                        ; preds = %land.lhs.true93, %if.then83
  %call101 = tail call i32 @integer_zerop(%union.tree_node* %offset.addr.1) #6, !dbg !7045
  %tobool102 = icmp eq i32 %call101, 0, !dbg !7045
  br i1 %tobool102, label %if.end104, label %cleanup169, !dbg !7047

if.end104:                                        ; preds = %if.end100
  %type106 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7048
  %19 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !7048
  %call107 = tail call %union.tree_node* @maybe_fold_offset_to_reference(i32 %cond, %union.tree_node* %base.addr.2, %union.tree_node* %offset.addr.1, %union.tree_node* %19) #7, !dbg !7049
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !6996, metadata !DIExpression()), !dbg !7005
  %tobool108 = icmp eq %union.tree_node* %call107, null, !dbg !7050
  br i1 %tobool108, label %cleanup169, label %if.then109, !dbg !7052

if.then109:                                       ; preds = %if.end104
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7053
  %bf.load111 = load i64, i64* %20, align 8, !dbg !7053
  %bf.cast11314 = and i64 %bf.load111, 65535, !dbg !7053
  %cmp114 = icmp eq i64 %bf.cast11314, 32, !dbg !7053
  br i1 %cmp114, label %cleanup169, label %lor.lhs.false116, !dbg !7053

lor.lhs.false116:                                 ; preds = %if.then109
  %cmp121 = icmp eq i64 %bf.cast11314, 34, !dbg !7053
  br i1 %cmp121, label %cleanup169, label %lor.lhs.false123, !dbg !7053

lor.lhs.false123:                                 ; preds = %lor.lhs.false116
  %cmp128 = icmp eq i64 %bf.cast11314, 36, !dbg !7053
  br i1 %cmp128, label %cleanup169, label %lor.lhs.false130, !dbg !7053

lor.lhs.false130:                                 ; preds = %lor.lhs.false123
  %cmp135 = icmp eq i64 %bf.cast11314, 141, !dbg !7053
  br i1 %cmp135, label %land.lhs.true137, label %if.then162, !dbg !7053

land.lhs.true137:                                 ; preds = %lor.lhs.false130
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7053
  %21 = bitcast i32* %var to i64**, !dbg !7053
  %22 = load i64*, i64** %21, align 8, !dbg !7053
  %bf.load139 = load i64, i64* %22, align 8, !dbg !7053
  %bf.cast14118 = and i64 %bf.load139, 65535, !dbg !7053
  %cmp142 = icmp eq i64 %bf.cast14118, 32, !dbg !7053
  br i1 %cmp142, label %cleanup169, label %lor.lhs.false144, !dbg !7053

lor.lhs.false144:                                 ; preds = %land.lhs.true137
  %cmp151 = icmp eq i64 %bf.cast14118, 34, !dbg !7053
  br i1 %cmp151, label %cleanup169, label %lor.lhs.false153, !dbg !7053

lor.lhs.false153:                                 ; preds = %lor.lhs.false144
  %cmp160 = icmp eq i64 %bf.cast14118, 36, !dbg !7053
  br i1 %cmp160, label %cleanup169, label %if.then162, !dbg !7056

if.then162:                                       ; preds = %lor.lhs.false153, %lor.lhs.false130
  %bf.clear166 = and i64 %bf.load111, -524289, !dbg !7057
  %bf.set = or i64 %bf.clear166, %bf.cast, !dbg !7057
  store i64 %bf.set, i64* %20, align 8, !dbg !7057
  br label %cleanup169, !dbg !7058

cleanup169:                                       ; preds = %if.end104, %if.end100, %if.then109, %lor.lhs.false116, %lor.lhs.false123, %land.lhs.true137, %lor.lhs.false144, %lor.lhs.false153, %if.then162, %if.then97
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then97 ], [ false, %if.end100 ], [ false, %if.then162 ], [ false, %lor.lhs.false153 ], [ false, %lor.lhs.false144 ], [ false, %land.lhs.true137 ], [ false, %lor.lhs.false123 ], [ false, %lor.lhs.false116 ], [ false, %if.then109 ], [ true, %if.end104 ]
  %retval.2 = phi %union.tree_node* [ %18, %if.then97 ], [ %15, %if.end100 ], [ %call107, %if.then162 ], [ %call107, %lor.lhs.false153 ], [ %call107, %lor.lhs.false144 ], [ %call107, %land.lhs.true137 ], [ %call107, %lor.lhs.false123 ], [ %call107, %lor.lhs.false116 ], [ %call107, %if.then109 ], [ null, %if.end104 ], !dbg !7005
  br i1 %cleanup.dest.slot.1, label %if.end216, label %cleanup217

if.else:                                          ; preds = %if.end76
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.2, metadata !6996, metadata !DIExpression()), !dbg !7005
  %call172 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %base.addr.2) #6, !dbg !7059
  call void @llvm.dbg.value(metadata %union.tree_node* %call172, metadata !6996, metadata !DIExpression()), !dbg !7005
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7061
  %bf.load174 = load i64, i64* %23, align 8, !dbg !7061
  %bf.cast1769 = and i64 %bf.load174, 65535, !dbg !7063
  %cmp177 = icmp eq i64 %bf.cast1769, 121, !dbg !7063
  br i1 %cmp177, label %land.lhs.true179, label %if.end190, !dbg !7064

land.lhs.true179:                                 ; preds = %if.else
  %operands181 = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7065
  %24 = bitcast %union.tree_node** %operands181 to i64**, !dbg !7065
  %25 = load i64*, i64** %24, align 8, !dbg !7065
  %bf.load184 = load i64, i64* %25, align 8, !dbg !7065
  %bf.cast18612 = and i64 %bf.load184, 65535, !dbg !7066
  %cmp187 = icmp eq i64 %bf.cast18612, 28, !dbg !7066
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !7067

if.then189:                                       ; preds = %land.lhs.true179
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7068
  br label %cleanup217, !dbg !7070

if.end190:                                        ; preds = %land.lhs.true179, %if.else
  %type192 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7071
  %27 = bitcast %union.tree_node** %type192 to i64**, !dbg !7071
  %28 = load i64*, i64** %27, align 8, !dbg !7071
  %bf.load194 = load i64, i64* %28, align 8, !dbg !7071
  %bf.cast19610 = and i64 %bf.load194, 65535, !dbg !7071
  %cmp197 = icmp eq i64 %bf.cast19610, 10, !dbg !7071
  br i1 %cmp197, label %if.then208, label %lor.lhs.false199, !dbg !7071

lor.lhs.false199:                                 ; preds = %if.end190
  %cmp206 = icmp eq i64 %bf.cast19610, 12, !dbg !7071
  br i1 %cmp206, label %if.then208, label %if.end216, !dbg !7073

if.then208:                                       ; preds = %lor.lhs.false199, %if.end190
  %type210 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7074
  %29 = load %union.tree_node*, %union.tree_node** %type210, align 8, !dbg !7074
  %call211 = tail call %union.tree_node* @maybe_fold_offset_to_reference(i32 %cond, %union.tree_node* %base.addr.2, %union.tree_node* %offset.addr.1, %union.tree_node* %29) #7, !dbg !7076
  call void @llvm.dbg.value(metadata %union.tree_node* %call211, metadata !6996, metadata !DIExpression()), !dbg !7005
  %tobool212 = icmp eq %union.tree_node* %call211, null, !dbg !7077
  br i1 %tobool212, label %if.end216, label %cleanup217, !dbg !7079

if.end216:                                        ; preds = %if.then208, %lor.lhs.false199, %cleanup169
  br label %cleanup217, !dbg !7080

cleanup217:                                       ; preds = %if.then208, %while.end, %cleanup, %cleanup169, %if.end216, %if.then189
  %retval.3 = phi %union.tree_node* [ null, %cleanup ], [ %retval.2, %cleanup169 ], [ null, %if.end216 ], [ %26, %if.then189 ], [ %call52, %while.end ], [ %call211, %if.then208 ], !dbg !7005
  ret %union.tree_node* %retval.3, !dbg !7081
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ccp_fold_builtin(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7082 {
entry:
  %val = alloca [3 x %union.tree_node*], align 16
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7084, metadata !DIExpression()), !dbg !7100
  %0 = bitcast [3 x %union.tree_node*]* %val to i8*, !dbg !7101
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7101
  call void @llvm.dbg.declare(metadata [3 x %union.tree_node*]* %val, metadata !7086, metadata !DIExpression()), !dbg !7102
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !7103
  call void @llvm.dbg.value(metadata i32 %call, metadata !7095, metadata !DIExpression()), !dbg !7100
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !7104
  %tobool = icmp eq i8 %call1, 0, !dbg !7104
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7104

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 2593, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7104
  br label %cond.end, !dbg !7104

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7105
  %cmp = icmp eq %union.tree_node* %call2, null, !dbg !7106
  %conv3 = zext i1 %cmp to i8, !dbg !7107
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !7093, metadata !DIExpression()), !dbg !7100
  %call4 = tail call %union.tree_node* @fold_call_stmt(%union.gimple_statement_d* %stmt, i8 zeroext %conv3) #6, !dbg !7108
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7085, metadata !DIExpression()), !dbg !7100
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !7109
  br i1 %tobool5, label %if.end9, label %if.then, !dbg !7111

if.then:                                          ; preds = %cond.end
  br i1 %cmp, label %if.then7, label %cleanup210, !dbg !7112

if.then7:                                         ; preds = %if.then
  %call8 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* nonnull %call4) #6, !dbg !7114
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %cleanup210, !dbg !7114

if.end9:                                          ; preds = %cond.end
  %call10 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !7116
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7088, metadata !DIExpression()), !dbg !7100
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 5, !dbg !7117
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !7117
  %bf.clear = and i32 %bf.load, 6144, !dbg !7117
  %cmp11 = icmp eq i32 %bf.clear, 4096, !dbg !7119
  br i1 %cmp11, label %cleanup210, label %if.end14, !dbg !7120

if.end14:                                         ; preds = %if.end9
  %call15 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7121
  call void @llvm.dbg.value(metadata i32 %call15, metadata !7094, metadata !DIExpression()), !dbg !7100
  %cmp16 = icmp eq i32 %call15, 0, !dbg !7122
  br i1 %cmp16, label %cleanup210, label %if.end19, !dbg !7124

if.end19:                                         ; preds = %if.end14
  %bf.load21 = load i32, i32* %built_in_class, align 8, !dbg !7125
  %bf.clear22 = and i32 %bf.load21, 2047, !dbg !7125
  switch i32 %bf.clear22, label %cleanup210 [
    i32 345, label %sw.epilog
    i32 360, label %sw.epilog
    i32 361, label %sw.epilog
    i32 341, label %sw.bb23
    i32 349, label %sw.bb23
    i32 529, label %sw.bb24
    i32 531, label %sw.bb24
    i32 530, label %sw.bb24
    i32 532, label %sw.bb24
    i32 537, label %sw.bb24
    i32 535, label %sw.bb25
    i32 533, label %sw.bb25
    i32 538, label %sw.bb26
    i32 540, label %sw.bb26
  ], !dbg !7126

sw.bb23:                                          ; preds = %if.end19, %if.end19
  call void @llvm.dbg.value(metadata i32 1, metadata !7090, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7091, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog, !dbg !7127

sw.bb24:                                          ; preds = %if.end19, %if.end19, %if.end19, %if.end19, %if.end19
  call void @llvm.dbg.value(metadata i32 2, metadata !7090, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 2, metadata !7091, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog, !dbg !7129

sw.bb25:                                          ; preds = %if.end19, %if.end19
  call void @llvm.dbg.value(metadata i32 1, metadata !7090, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 1, metadata !7091, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog, !dbg !7130

sw.bb26:                                          ; preds = %if.end19, %if.end19
  call void @llvm.dbg.value(metadata i32 1, metadata !7090, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 2, metadata !7091, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog, !dbg !7131

sw.epilog:                                        ; preds = %if.end19, %if.end19, %if.end19, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23
  %arg_idx.0 = phi i32 [ 1, %sw.bb26 ], [ 1, %sw.bb25 ], [ 2, %sw.bb24 ], [ 1, %sw.bb23 ], [ 0, %if.end19 ], [ 0, %if.end19 ], [ 0, %if.end19 ], !dbg !7132
  %type.0 = phi i32 [ 2, %sw.bb26 ], [ 1, %sw.bb25 ], [ 2, %sw.bb24 ], [ 0, %sw.bb23 ], [ 0, %if.end19 ], [ 0, %if.end19 ], [ 0, %if.end19 ], !dbg !7132
  call void @llvm.dbg.value(metadata i32 %type.0, metadata !7091, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %arg_idx.0, metadata !7090, metadata !DIExpression()), !dbg !7100
  %cmp27 = icmp slt i32 %arg_idx.0, %call15, !dbg !7133
  br i1 %cmp27, label %if.end30, label %cleanup210, !dbg !7135

if.end30:                                         ; preds = %sw.epilog
  %call31 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7136
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call31, metadata !7092, metadata !DIExpression()), !dbg !7100
  tail call void @bitmap_clear(%struct.bitmap_head_def* %call31) #6, !dbg !7137
  %call32 = call i8* @memset(i8* nonnull %0, i32 0, i64 24) #6, !dbg !7138
  %call33 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %arg_idx.0) #7, !dbg !7139
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7089, metadata !DIExpression()), !dbg !7100
  %idxprom = zext i32 %arg_idx.0 to i64, !dbg !7140
  %arrayidx = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 %idxprom, !dbg !7140
  %call34 = call fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %call33, %union.tree_node** nonnull %arrayidx, %struct.bitmap_head_def* %call31, i32 %type.0) #7, !dbg !7142
  %tobool35 = icmp eq i8 %call34, 0, !dbg !7142
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !7143

if.then36:                                        ; preds = %if.end30
  store %union.tree_node* null, %union.tree_node** %arrayidx, align 8, !dbg !7144
  br label %if.end39, !dbg !7145

if.end39:                                         ; preds = %if.end30, %if.then36
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call31) #6, !dbg !7146
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7092, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7085, metadata !DIExpression()), !dbg !7100
  %bf.load42 = load i32, i32* %built_in_class, align 8, !dbg !7147
  %bf.clear43 = and i32 %bf.load42, 2047, !dbg !7147
  switch i32 %bf.clear43, label %sw.default201 [
    i32 345, label %sw.bb44
    i32 341, label %sw.bb68
    i32 349, label %sw.bb85
    i32 360, label %sw.bb103
    i32 361, label %sw.bb112
    i32 529, label %sw.bb121
    i32 531, label %sw.bb121
    i32 530, label %sw.bb121
    i32 532, label %sw.bb121
    i32 535, label %sw.bb144
    i32 533, label %sw.bb144
    i32 537, label %sw.bb166
    i32 538, label %sw.bb185
    i32 540, label %sw.bb185
  ], !dbg !7148

sw.bb44:                                          ; preds = %if.end39
  %arrayidx45 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 0, !dbg !7149
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 16, !dbg !7149
  %tobool46 = icmp ne %union.tree_node* %1, null, !dbg !7149
  %cmp47 = icmp eq i32 %call15, 1, !dbg !7150
  %or.cond = and i1 %tobool46, %cmp47, !dbg !7151
  br i1 %or.cond, label %if.then49, label %sw.epilog202, !dbg !7151

if.then49:                                        ; preds = %sw.bb44
  %call50 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7152
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %call50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7152
  %2 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !7152
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 16, !dbg !7152
  %call53 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %2, %union.tree_node* %3) #6, !dbg !7152
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !7096, metadata !DIExpression()), !dbg !7153
  %call54 = call zeroext i8 @is_gimple_val(%union.tree_node* %call53) #6, !dbg !7154
  %tobool56 = icmp eq i8 %call54, 0, !dbg !7154
  br i1 %tobool56, label %lor.lhs.false, label %cleanup, !dbg !7156

lor.lhs.false:                                    ; preds = %if.then49
  %call57 = call zeroext i8 @is_gimple_cast(%union.tree_node* %call53) #6, !dbg !7157
  %tobool59 = icmp eq i8 %call57, 0, !dbg !7157
  br i1 %tobool59, label %if.end66, label %land.lhs.true60, !dbg !7158

land.lhs.true60:                                  ; preds = %lor.lhs.false
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7159
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7159
  %call62 = call zeroext i8 @is_gimple_val(%union.tree_node* %4) #6, !dbg !7160
  %tobool64 = icmp eq i8 %call62, 0, !dbg !7160
  br i1 %tobool64, label %if.end66, label %cleanup, !dbg !7161

if.end66:                                         ; preds = %land.lhs.true60, %lor.lhs.false
  br label %cleanup, !dbg !7162

cleanup:                                          ; preds = %land.lhs.true60, %if.then49, %if.end66
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end66 ], [ false, %land.lhs.true60 ], [ false, %if.then49 ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog202, label %cleanup210

sw.bb68:                                          ; preds = %if.end39
  %arrayidx69 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 1, !dbg !7163
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx69, align 8, !dbg !7163
  %tobool70 = icmp eq %union.tree_node* %5, null, !dbg !7163
  br i1 %tobool70, label %sw.epilog202, label %land.lhs.true71, !dbg !7165

land.lhs.true71:                                  ; preds = %sw.bb68
  %call73 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %5) #6, !dbg !7166
  %tobool75 = icmp ne i8 %call73, 0, !dbg !7166
  %cmp77 = icmp eq i32 %call15, 2, !dbg !7167
  %or.cond2 = and i1 %tobool75, %cmp77, !dbg !7168
  br i1 %or.cond2, label %if.then79, label %sw.epilog202, !dbg !7168

if.then79:                                        ; preds = %land.lhs.true71
  %call80 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7169
  %call81 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7170
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx69, align 8, !dbg !7171
  %call83 = call %union.tree_node* @fold_builtin_strcpy(i32 %call, %union.tree_node* %call10, %union.tree_node* %call80, %union.tree_node* %call81, %union.tree_node* %6) #6, !dbg !7172
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7173

sw.bb85:                                          ; preds = %if.end39
  %arrayidx86 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 1, !dbg !7174
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8, !dbg !7174
  %tobool87 = icmp eq %union.tree_node* %7, null, !dbg !7174
  br i1 %tobool87, label %sw.epilog202, label %land.lhs.true88, !dbg !7176

land.lhs.true88:                                  ; preds = %sw.bb85
  %call90 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %7) #6, !dbg !7177
  %tobool92 = icmp ne i8 %call90, 0, !dbg !7177
  %cmp94 = icmp eq i32 %call15, 3, !dbg !7178
  %or.cond3 = and i1 %tobool92, %cmp94, !dbg !7179
  br i1 %or.cond3, label %if.then96, label %sw.epilog202, !dbg !7179

if.then96:                                        ; preds = %land.lhs.true88
  %call97 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7180
  %call98 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7181
  %call99 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !7182
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8, !dbg !7183
  %call101 = call %union.tree_node* @fold_builtin_strncpy(i32 %call, %union.tree_node* %call10, %union.tree_node* %call97, %union.tree_node* %call98, %union.tree_node* %call99, %union.tree_node* %8) #6, !dbg !7184
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7185

sw.bb103:                                         ; preds = %if.end39
  %cmp104 = icmp eq i32 %call15, 2, !dbg !7186
  br i1 %cmp104, label %if.then106, label %sw.epilog202, !dbg !7188

if.then106:                                       ; preds = %sw.bb103
  %call107 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7189
  %call108 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7190
  %arrayidx109 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 0, !dbg !7191
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx109, align 16, !dbg !7191
  %call110 = call %union.tree_node* @fold_builtin_fputs(i32 %call, %union.tree_node* %call107, %union.tree_node* %call108, i8 zeroext %conv3, i8 zeroext 0, %union.tree_node* %9) #6, !dbg !7192
  call void @llvm.dbg.value(metadata %union.tree_node* %call110, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7193

sw.bb112:                                         ; preds = %if.end39
  %cmp113 = icmp eq i32 %call15, 2, !dbg !7194
  br i1 %cmp113, label %if.then115, label %sw.epilog202, !dbg !7196

if.then115:                                       ; preds = %sw.bb112
  %call116 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7197
  %call117 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7198
  %arrayidx118 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 0, !dbg !7199
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx118, align 16, !dbg !7199
  %call119 = call %union.tree_node* @fold_builtin_fputs(i32 %call, %union.tree_node* %call116, %union.tree_node* %call117, i8 zeroext %conv3, i8 zeroext 1, %union.tree_node* %10) #6, !dbg !7200
  call void @llvm.dbg.value(metadata %union.tree_node* %call119, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7201

sw.bb121:                                         ; preds = %if.end39, %if.end39, %if.end39, %if.end39
  %arrayidx122 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 2, !dbg !7202
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx122, align 16, !dbg !7202
  %tobool123 = icmp eq %union.tree_node* %11, null, !dbg !7202
  br i1 %tobool123, label %sw.epilog202, label %land.lhs.true124, !dbg !7204

land.lhs.true124:                                 ; preds = %sw.bb121
  %call126 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %11) #6, !dbg !7205
  %tobool128 = icmp ne i8 %call126, 0, !dbg !7205
  %cmp130 = icmp eq i32 %call15, 4, !dbg !7206
  %or.cond4 = and i1 %tobool128, %cmp130, !dbg !7207
  br i1 %or.cond4, label %if.then132, label %sw.epilog202, !dbg !7207

if.then132:                                       ; preds = %land.lhs.true124
  %call133 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7208
  %call134 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7209
  %call135 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !7210
  %call136 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 3) #7, !dbg !7211
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx122, align 16, !dbg !7212
  %bf.load140 = load i32, i32* %built_in_class, align 8, !dbg !7213
  %bf.clear141 = and i32 %bf.load140, 2047, !dbg !7213
  %call142 = call %union.tree_node* @fold_builtin_memory_chk(i32 %call, %union.tree_node* %call10, %union.tree_node* %call133, %union.tree_node* %call134, %union.tree_node* %call135, %union.tree_node* %call136, %union.tree_node* %12, i8 zeroext %conv3, i32 %bf.clear141) #6, !dbg !7214
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7215

sw.bb144:                                         ; preds = %if.end39, %if.end39
  %arrayidx145 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 1, !dbg !7216
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8, !dbg !7216
  %tobool146 = icmp eq %union.tree_node* %13, null, !dbg !7216
  br i1 %tobool146, label %sw.epilog202, label %land.lhs.true147, !dbg !7218

land.lhs.true147:                                 ; preds = %sw.bb144
  %call149 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %13) #6, !dbg !7219
  %tobool151 = icmp ne i8 %call149, 0, !dbg !7219
  %cmp153 = icmp eq i32 %call15, 3, !dbg !7220
  %or.cond5 = and i1 %tobool151, %cmp153, !dbg !7221
  br i1 %or.cond5, label %if.then155, label %sw.epilog202, !dbg !7221

if.then155:                                       ; preds = %land.lhs.true147
  %call156 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7222
  %call157 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7223
  %call158 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !7224
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8, !dbg !7225
  %bf.load162 = load i32, i32* %built_in_class, align 8, !dbg !7226
  %bf.clear163 = and i32 %bf.load162, 2047, !dbg !7226
  %call164 = call %union.tree_node* @fold_builtin_stxcpy_chk(i32 %call, %union.tree_node* %call10, %union.tree_node* %call156, %union.tree_node* %call157, %union.tree_node* %call158, %union.tree_node* %14, i8 zeroext %conv3, i32 %bf.clear163) #6, !dbg !7227
  call void @llvm.dbg.value(metadata %union.tree_node* %call164, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7228

sw.bb166:                                         ; preds = %if.end39
  %arrayidx167 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 2, !dbg !7229
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx167, align 16, !dbg !7229
  %tobool168 = icmp eq %union.tree_node* %15, null, !dbg !7229
  br i1 %tobool168, label %sw.epilog202, label %land.lhs.true169, !dbg !7231

land.lhs.true169:                                 ; preds = %sw.bb166
  %call171 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %15) #6, !dbg !7232
  %tobool173 = icmp ne i8 %call171, 0, !dbg !7232
  %cmp175 = icmp eq i32 %call15, 4, !dbg !7233
  %or.cond6 = and i1 %tobool173, %cmp175, !dbg !7234
  br i1 %or.cond6, label %if.then177, label %sw.epilog202, !dbg !7234

if.then177:                                       ; preds = %land.lhs.true169
  %call178 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !7235
  %call179 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7236
  %call180 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !7237
  %call181 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 3) #7, !dbg !7238
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx167, align 16, !dbg !7239
  %call183 = call %union.tree_node* @fold_builtin_strncpy_chk(i32 %call, %union.tree_node* %call178, %union.tree_node* %call179, %union.tree_node* %call180, %union.tree_node* %call181, %union.tree_node* %16) #6, !dbg !7240
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7241

sw.bb185:                                         ; preds = %if.end39, %if.end39
  %arrayidx186 = getelementptr inbounds [3 x %union.tree_node*], [3 x %union.tree_node*]* %val, i64 0, i64 1, !dbg !7242
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx186, align 8, !dbg !7242
  %tobool187 = icmp eq %union.tree_node* %17, null, !dbg !7242
  br i1 %tobool187, label %sw.epilog202, label %land.lhs.true188, !dbg !7244

land.lhs.true188:                                 ; preds = %sw.bb185
  %call190 = call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %17) #6, !dbg !7245
  %tobool192 = icmp eq i8 %call190, 0, !dbg !7245
  br i1 %tobool192, label %sw.epilog202, label %if.then193, !dbg !7246

if.then193:                                       ; preds = %land.lhs.true188
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx186, align 8, !dbg !7247
  %bf.load197 = load i32, i32* %built_in_class, align 8, !dbg !7248
  %bf.clear198 = and i32 %bf.load197, 2047, !dbg !7248
  %call199 = call %union.tree_node* @gimple_fold_builtin_snprintf_chk(%union.gimple_statement_d* %stmt, %union.tree_node* %18, i32 %bf.clear198) #6, !dbg !7249
  call void @llvm.dbg.value(metadata %union.tree_node* %call199, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %sw.epilog202, !dbg !7250

sw.default201:                                    ; preds = %if.end39
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 2759, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7251
  br label %sw.epilog202, !dbg !7252

sw.epilog202:                                     ; preds = %sw.bb68, %sw.bb85, %sw.bb121, %sw.bb144, %sw.bb166, %land.lhs.true188, %sw.bb185, %if.then193, %land.lhs.true169, %if.then177, %land.lhs.true147, %if.then155, %land.lhs.true124, %if.then132, %sw.bb112, %if.then115, %sw.bb103, %if.then106, %land.lhs.true88, %if.then96, %land.lhs.true71, %if.then79, %sw.bb44, %cleanup, %sw.default201
  %result.9 = phi %union.tree_node* [ null, %sw.default201 ], [ null, %cleanup ], [ null, %sw.bb44 ], [ %call83, %if.then79 ], [ null, %land.lhs.true71 ], [ null, %sw.bb68 ], [ %call101, %if.then96 ], [ null, %land.lhs.true88 ], [ null, %sw.bb85 ], [ %call110, %if.then106 ], [ null, %sw.bb103 ], [ %call119, %if.then115 ], [ null, %sw.bb112 ], [ %call142, %if.then132 ], [ null, %land.lhs.true124 ], [ null, %sw.bb121 ], [ %call164, %if.then155 ], [ null, %land.lhs.true147 ], [ null, %sw.bb144 ], [ %call183, %if.then177 ], [ null, %land.lhs.true169 ], [ null, %sw.bb166 ], [ %call199, %if.then193 ], [ null, %land.lhs.true188 ], [ null, %sw.bb185 ], !dbg !7100
  call void @llvm.dbg.value(metadata %union.tree_node* %result.9, metadata !7085, metadata !DIExpression()), !dbg !7100
  %tobool203 = icmp ne %union.tree_node* %result.9, null, !dbg !7253
  %or.cond7 = and i1 %tobool203, %cmp, !dbg !7255
  br i1 %or.cond7, label %if.then207, label %cleanup210, !dbg !7255

if.then207:                                       ; preds = %sw.epilog202
  %call208 = call %union.tree_node* @fold_ignored_result(%union.tree_node* nonnull %result.9) #6, !dbg !7256
  call void @llvm.dbg.value(metadata %union.tree_node* %call208, metadata !7085, metadata !DIExpression()), !dbg !7100
  br label %cleanup210, !dbg !7257

cleanup210:                                       ; preds = %sw.epilog, %sw.epilog202, %if.then207, %if.end19, %if.end14, %if.end9, %if.then, %if.then7, %cleanup
  %retval.1 = phi %union.tree_node* [ %call53, %cleanup ], [ %call8, %if.then7 ], [ %call4, %if.then ], [ null, %if.end9 ], [ null, %if.end14 ], [ null, %if.end19 ], [ null, %sw.epilog ], [ %call208, %if.then207 ], [ %result.9, %sw.epilog202 ], !dbg !7100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7258
  ret %union.tree_node* %retval.1, !dbg !7258
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_and_update_call_from_tree(%struct.gimple_stmt_iterator* %si_p, %union.tree_node* %expr) unnamed_addr #5 !dbg !7259 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %gctx = alloca %struct.gimplify_ctx, align 8
  %tmp10 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si_p, metadata !7263, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7264, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7266, metadata !DIExpression()), !dbg !7297
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !7298
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7298
  %1 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !7299
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7299
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !7300
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !7270, metadata !DIExpression()), !dbg !7297
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %stmts, align 8, !dbg !7301
  %2 = bitcast %struct.gimplify_ctx* %gctx to i8*, !dbg !7302
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7302
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %si_p) #7, !dbg !7303
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !7267, metadata !DIExpression()), !dbg !7297
  %call2 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call1) #7, !dbg !7304
  %tobool = icmp eq i8 %call2, 0, !dbg !7304
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7304

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 3366, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7304
  br label %cond.end, !dbg !7304

cond.end:                                         ; preds = %entry, %cond.true
  %call3 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call1) #7, !dbg !7305
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7265, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %struct.gimplify_ctx* %gctx, metadata !7271, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  call void @push_gimplify_context(%struct.gimplify_ctx* nonnull %gctx) #6, !dbg !7306
  %cmp = icmp eq %union.tree_node* %call3, null, !dbg !7307
  br i1 %cmp, label %if.then, label %if.else, !dbg !7309

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !7270, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  call void @gimplify_and_add(%union.tree_node* %expr, %struct.gimple_seq_d** nonnull %stmts) #6, !dbg !7310
  br label %if.end, !dbg !7310

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !7270, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  %call4 = call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %expr, %struct.gimple_seq_d** nonnull %stmts, %struct.gimple_seq_d** null) #6, !dbg !7311
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7266, metadata !DIExpression()), !dbg !7297
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp.0 = phi %union.tree_node* [ null, %if.then ], [ %call4, %if.else ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.0, metadata !7266, metadata !DIExpression()), !dbg !7297
  call void @pop_gimplify_context(%union.gimple_statement_d* null) #6, !dbg !7312
  %call5 = call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %call1) #7, !dbg !7313
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7313
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !7315

if.then7:                                         ; preds = %if.end
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !7316
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %3, metadata !7270, metadata !DIExpression()), !dbg !7297
  %call8 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call1) #7, !dbg !7317
  call void @annotate_all_with_location(%struct.gimple_seq_d* %3, i32 %call8) #6, !dbg !7318
  br label %if.end9, !dbg !7318

if.end9:                                          ; preds = %if.end, %if.then7
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp10 to i8*, !dbg !7319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !7319
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !7321
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %5, metadata !7270, metadata !DIExpression()), !dbg !7297
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp10, %struct.gimple_seq_d* %5) #7, !dbg !7319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !7319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !7319
  br label %for.cond, !dbg !7322

for.cond:                                         ; preds = %for.body, %if.end9
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !7269, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  %call11 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7323
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7325
  br i1 %tobool12, label %for.body, label %for.end, !dbg !7326

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !7269, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  %call13 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7327
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !7268, metadata !DIExpression()), !dbg !7297
  call void @find_new_referenced_vars(%union.gimple_statement_d* %call13) #6, !dbg !7329
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %si_p, %union.gimple_statement_d* %call13, i32 0) #6, !dbg !7330
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call13) #6, !dbg !7331
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %si_p) #7, !dbg !7332
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !7269, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !7333
  br label %for.cond, !dbg !7334, !llvm.loop !7335

for.end:                                          ; preds = %for.cond
  br i1 %cmp, label %if.then15, label %if.else17, !dbg !7337

if.then15:                                        ; preds = %for.end
  %call16 = call %union.gimple_statement_d* @gimple_build_nop() #6, !dbg !7338
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !7268, metadata !DIExpression()), !dbg !7297
  call void @unlink_stmt_vdef(%union.gimple_statement_d* %call1) #6, !dbg !7341
  call void @release_defs(%union.gimple_statement_d* %call1) #6, !dbg !7342
  br label %if.end21, !dbg !7343

if.else17:                                        ; preds = %for.end
  %call18 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* nonnull %call3, %union.tree_node* %tmp.0) #6, !dbg !7344
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !7268, metadata !DIExpression()), !dbg !7297
  %call19 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call1) #7, !dbg !7346
  call fastcc void @gimple_set_vuse(%union.gimple_statement_d* %call18, %union.tree_node* %call19) #7, !dbg !7347
  %call20 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call1) #7, !dbg !7348
  call fastcc void @gimple_set_vdef(%union.gimple_statement_d* %call18, %union.tree_node* %call20) #7, !dbg !7349
  call void @move_ssa_defining_stmt_for_defs(%union.gimple_statement_d* %call18, %union.gimple_statement_d* %call1) #6, !dbg !7350
  br label %if.end21

if.end21:                                         ; preds = %if.else17, %if.then15
  %new_stmt.0 = phi %union.gimple_statement_d* [ %call16, %if.then15 ], [ %call18, %if.else17 ], !dbg !7351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !7268, metadata !DIExpression()), !dbg !7297
  %call22 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call1) #7, !dbg !7352
  call fastcc void @gimple_set_location(%union.gimple_statement_d* %new_stmt.0, i32 %call22) #7, !dbg !7353
  call void @gsi_replace(%struct.gimple_stmt_iterator* %si_p, %union.gimple_statement_d* %new_stmt.0, i8 zeroext 0) #6, !dbg !7354
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2) #8, !dbg !7355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7355
  ret void, !dbg !7355
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_fn(%union.gimple_statement_d* %gs, %union.tree_node* %fn) unnamed_addr #0 !dbg !7356 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !7359, metadata !DIExpression()), !dbg !7360
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %fn) #7, !dbg !7361
  ret void, !dbg !7362
}

declare dso_local %union.tree_node* @fold_call_stmt(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %arg, %union.tree_node** %length, %struct.bitmap_head_def* %visited, i32 %type) unnamed_addr #5 !dbg !7363 {
entry:
  br label %tailrecurse, !dbg !7390

tailrecurse:                                      ; preds = %if.then138, %entry
  %arg.tr = phi %union.tree_node* [ %arg, %entry ], [ %call139, %if.then138 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr, metadata !7367, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata %union.tree_node** %length, metadata !7368, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %visited, metadata !7369, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 %type, metadata !7370, metadata !DIExpression()), !dbg !7391
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7392
  %bf.load = load i64, i64* %0, align 8, !dbg !7392
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7393
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !7393
  br i1 %cmp, label %if.end120, label %if.then, !dbg !7394

if.then:                                          ; preds = %tailrecurse
  %arg.tr.lcssa = phi %union.tree_node* [ %arg.tr, %tailrecurse ]
  %.lcssa22 = phi i64* [ %0, %tailrecurse ], !dbg !7392
  %bf.cast2.lcssa = phi i64 [ %bf.cast2, %tailrecurse ], !dbg !7393
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa, metadata !7367, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa, metadata !7367, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa, metadata !7367, metadata !DIExpression()), !dbg !7391
  %cmp5 = icmp eq i64 %bf.cast2.lcssa, 56, !dbg !7395
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !7396

if.then6:                                         ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7397
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7397
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7397
  %call = tail call fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %1, %union.tree_node** %length, %struct.bitmap_head_def* %visited, i32 %type) #7, !dbg !7398
  %tobool = icmp eq i8 %call, 0, !dbg !7398
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7399

land.rhs:                                         ; preds = %if.then6
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7400
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !7400
  %call10 = tail call fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %2, %union.tree_node** %length, %struct.bitmap_head_def* %visited, i32 %type) #7, !dbg !7401
  %tobool12 = icmp ne i8 %call10, 0, !dbg !7399
  %phitmp = zext i1 %tobool12 to i8
  br label %land.end

land.end:                                         ; preds = %if.then6, %land.rhs
  %3 = phi i8 [ 0, %if.then6 ], [ %phitmp, %land.rhs ]
  br label %cleanup164, !dbg !7402

if.else:                                          ; preds = %if.then
  %cmp18 = icmp eq i64 %bf.cast2.lcssa, 121, !dbg !7403
  br i1 %cmp18, label %land.lhs.true, label %if.end67, !dbg !7404

land.lhs.true:                                    ; preds = %if.else
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7405
  %4 = bitcast %union.tree_node** %operands21 to i64**, !dbg !7405
  %5 = load i64*, i64** %4, align 8, !dbg !7405
  %bf.load24 = load i64, i64* %5, align 8, !dbg !7405
  %bf.cast268 = and i64 %bf.load24, 65535, !dbg !7406
  %cmp27 = icmp eq i64 %bf.cast268, 45, !dbg !7406
  br i1 %cmp27, label %land.lhs.true29, label %if.end67, !dbg !7407

land.lhs.true29:                                  ; preds = %land.lhs.true
  %arrayidx35 = getelementptr inbounds i64, i64* %5, i64 6, !dbg !7408
  %6 = bitcast i64* %arrayidx35 to %union.tree_node**, !dbg !7408
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !7408
  %call36 = tail call i32 @integer_zerop(%union.tree_node* %7) #6, !dbg !7409
  %tobool37 = icmp eq i32 %call36, 0, !dbg !7409
  br i1 %tobool37, label %if.end67, label %if.then38, !dbg !7410

if.then38:                                        ; preds = %land.lhs.true29
  %8 = bitcast %union.tree_node** %operands21 to %struct.tree_exp**, !dbg !7408
  %9 = load %struct.tree_exp*, %struct.tree_exp** %8, align 8, !dbg !7411
  %arrayidx44 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 0, !dbg !7411
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8, !dbg !7411
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7374, metadata !DIExpression()), !dbg !7412
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7413
  %bf.load46 = load i64, i64* %11, align 8, !dbg !7413
  %bf.cast489 = and i64 %bf.load46, 65535, !dbg !7415
  %cmp49 = icmp eq i64 %bf.cast489, 47, !dbg !7415
  br i1 %cmp49, label %land.lhs.true51, label %cleanup, !dbg !7416

land.lhs.true51:                                  ; preds = %if.then38
  %operands53 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7417
  %12 = bitcast %union.tree_node** %operands53 to i64**, !dbg !7417
  %13 = load i64*, i64** %12, align 8, !dbg !7417
  %bf.load56 = load i64, i64* %13, align 8, !dbg !7417
  %bf.cast5810 = and i64 %bf.load56, 65535, !dbg !7418
  %cmp59 = icmp eq i64 %bf.cast5810, 141, !dbg !7418
  br i1 %cmp59, label %if.then61, label %cleanup, !dbg !7419

if.then61:                                        ; preds = %land.lhs.true51
  %14 = bitcast i64* %13 to %union.tree_node*, !dbg !7419
  %call65 = tail call fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %14, %union.tree_node** %length, %struct.bitmap_head_def* %visited, i32 %type) #7, !dbg !7420
  br label %cleanup, !dbg !7421

cleanup:                                          ; preds = %if.then38, %land.lhs.true51, %if.then61
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then61 ], [ true, %land.lhs.true51 ], [ true, %if.then38 ]
  %retval.0 = phi i8 [ %call65, %if.then61 ], [ undef, %land.lhs.true51 ], [ undef, %if.then38 ]
  br i1 %cleanup.dest.slot.0, label %if.end67, label %cleanup164

if.end67:                                         ; preds = %land.lhs.true29, %if.else, %land.lhs.true, %cleanup
  %cmp68 = icmp eq i32 %type, 2, !dbg !7422
  br i1 %cmp68, label %if.then70, label %if.else82, !dbg !7424

if.then70:                                        ; preds = %if.end67
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa, metadata !7372, metadata !DIExpression()), !dbg !7391
  %bf.load72 = load i64, i64* %.lcssa22, align 8, !dbg !7425
  %bf.cast747 = and i64 %bf.load72, 65535, !dbg !7428
  %cmp75 = icmp eq i64 %bf.cast747, 23, !dbg !7428
  br i1 %cmp75, label %lor.lhs.false, label %cleanup164, !dbg !7429

lor.lhs.false:                                    ; preds = %if.then70
  %call77 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %arg.tr.lcssa) #6, !dbg !7430
  %cmp78 = icmp slt i32 %call77, 0, !dbg !7431
  br i1 %cmp78, label %cleanup164, label %if.end84, !dbg !7432

if.else82:                                        ; preds = %if.end67
  %call83 = tail call %union.tree_node* @c_strlen(%union.tree_node* %arg.tr.lcssa, i32 1) #6, !dbg !7433
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !7372, metadata !DIExpression()), !dbg !7391
  br label %if.end84

if.end84:                                         ; preds = %lor.lhs.false, %if.else82
  %val.0 = phi %union.tree_node* [ %call83, %if.else82 ], [ %arg.tr.lcssa, %lor.lhs.false ], !dbg !7434
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !7372, metadata !DIExpression()), !dbg !7391
  %tobool85 = icmp eq %union.tree_node* %val.0, null, !dbg !7435
  br i1 %tobool85, label %cleanup164, label %if.end87, !dbg !7437

if.end87:                                         ; preds = %if.end84
  %15 = load %union.tree_node*, %union.tree_node** %length, align 8, !dbg !7438
  %tobool88 = icmp eq %union.tree_node* %15, null, !dbg !7438
  br i1 %tobool88, label %if.end119, label %if.then89, !dbg !7440

if.then89:                                        ; preds = %if.end87
  %cmp90 = icmp sgt i32 %type, 0, !dbg !7441
  br i1 %cmp90, label %if.then92, label %if.else112, !dbg !7444

if.then92:                                        ; preds = %if.then89
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7445
  %bf.load94 = load i64, i64* %16, align 8, !dbg !7445
  %bf.cast965 = and i64 %bf.load94, 65535, !dbg !7448
  %cmp97 = icmp eq i64 %bf.cast965, 23, !dbg !7448
  br i1 %cmp97, label %lor.lhs.false99, label %cleanup164, !dbg !7449

lor.lhs.false99:                                  ; preds = %if.then92
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7450
  %bf.load101 = load i64, i64* %17, align 8, !dbg !7450
  %bf.cast1036 = and i64 %bf.load101, 65535, !dbg !7451
  %cmp104 = icmp eq i64 %bf.cast1036, 23, !dbg !7451
  br i1 %cmp104, label %if.end107, label %cleanup164, !dbg !7452

if.end107:                                        ; preds = %lor.lhs.false99
  %call108 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %15, %union.tree_node* nonnull %val.0) #6, !dbg !7453
  %tobool109 = icmp eq i32 %call108, 0, !dbg !7453
  br i1 %tobool109, label %cleanup164, label %if.then110, !dbg !7455

if.then110:                                       ; preds = %if.end107
  store %union.tree_node* %val.0, %union.tree_node** %length, align 8, !dbg !7456
  br label %cleanup164, !dbg !7457

if.else112:                                       ; preds = %if.then89
  %call113 = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %val.0, %union.tree_node* nonnull %15) #6, !dbg !7458
  %cmp114 = icmp eq i32 %call113, 1, !dbg !7460
  br i1 %cmp114, label %if.end119, label %cleanup164, !dbg !7461

if.end119:                                        ; preds = %if.else112, %if.end87
  store %union.tree_node* %val.0, %union.tree_node** %length, align 8, !dbg !7462
  br label %cleanup164, !dbg !7463

if.end120:                                        ; preds = %tailrecurse
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7464
  %18 = bitcast %union.tree_node** %version to i32*, !dbg !7464
  %19 = load i32, i32* %18, align 8, !dbg !7464
  %call121 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %visited, i32 %19) #6, !dbg !7466
  %tobool122 = icmp eq i32 %call121, 0, !dbg !7466
  br i1 %tobool122, label %if.end124, label %cleanup164.loopexit, !dbg !7467

if.end124:                                        ; preds = %if.end120
  %20 = load i32, i32* %18, align 8, !dbg !7468
  %call127 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %visited, i32 %20) #6, !dbg !7469
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr, metadata !7371, metadata !DIExpression()), !dbg !7391
  %def_stmt129 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7470
  %21 = bitcast %union.tree_node** %def_stmt129 to %union.gimple_statement_d**, !dbg !7470
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %21, align 8, !dbg !7470
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %22, metadata !7373, metadata !DIExpression()), !dbg !7391
  %call130 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %22) #7, !dbg !7471
  switch i32 %call130, label %cleanup164.loopexit [
    i32 6, label %sw.bb
    i32 16, label %for.cond.preheader
  ], !dbg !7472

for.cond.preheader:                               ; preds = %if.end124
  %.lcssa = phi %union.gimple_statement_d* [ %22, %if.end124 ], !dbg !7470
  br label %for.cond, !dbg !7473

sw.bb:                                            ; preds = %if.end124
  %call131 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %22) #6, !dbg !7474
  %tobool133 = icmp eq i8 %call131, 0, !dbg !7474
  br i1 %tobool133, label %lor.lhs.false134, label %if.then138, !dbg !7475

lor.lhs.false134:                                 ; preds = %sw.bb
  %call135 = tail call zeroext i8 @gimple_assign_unary_nop_p(%union.gimple_statement_d* %22) #6, !dbg !7476
  %tobool137 = icmp eq i8 %call135, 0, !dbg !7476
  br i1 %tobool137, label %cleanup164.loopexit, label %if.then138, !dbg !7477

if.then138:                                       ; preds = %lor.lhs.false134, %sw.bb
  %call139 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %22) #7, !dbg !7478
  call void @llvm.dbg.value(metadata %union.tree_node* %call139, metadata !7380, metadata !DIExpression()), !dbg !7479
  br label %tailrecurse, !dbg !7390

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !7480
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7384, metadata !DIExpression()), !dbg !7481
  %call144 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %.lcssa) #7, !dbg !7482
  %cmp145 = icmp ult i32 %i.0, %call144, !dbg !7483
  br i1 %cmp145, label %for.body, label %cleanup161, !dbg !7473

for.body:                                         ; preds = %for.cond
  %call148 = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %.lcssa, i32 %i.0) #7, !dbg !7484
  %def = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call148, i64 0, i32 1, !dbg !7485
  %23 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !7485
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !7386, metadata !DIExpression()), !dbg !7486
  %call149 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %.lcssa) #7, !dbg !7487
  %cmp150 = icmp eq %union.tree_node* %23, %call149, !dbg !7489
  br i1 %cmp150, label %cleanup158, label %if.end153, !dbg !7490

if.end153:                                        ; preds = %for.body
  %call154 = tail call fastcc zeroext i8 @get_maxval_strlen(%union.tree_node* %23, %union.tree_node** %length, %struct.bitmap_head_def* %visited, i32 %type) #7, !dbg !7491
  %tobool155 = icmp eq i8 %call154, 0, !dbg !7491
  %. = zext i1 %tobool155 to i32, !dbg !7493
  br label %cleanup158, !dbg !7493

cleanup158:                                       ; preds = %if.end153, %for.body
  %cleanup.dest.slot.1 = phi i32 [ 5, %for.body ], [ %., %if.end153 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup161 [
    i32 0, label %for.inc
    i32 5, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup158, %cleanup158
  %inc = add i32 %i.0, 1, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7384, metadata !DIExpression()), !dbg !7481
  br label %for.cond, !dbg !7495, !llvm.loop !7496

cleanup161:                                       ; preds = %for.cond, %cleanup158
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup158 ], [ 0, %for.cond ]
  %cond = icmp eq i32 %cleanup.dest.slot.2, 0
  %spec.select = zext i1 %cond to i8
  ret i8 %spec.select

cleanup164.loopexit:                              ; preds = %if.end124, %if.end120, %lor.lhs.false134
  %retval.4.ph = phi i8 [ 0, %if.end124 ], [ 0, %lor.lhs.false134 ], [ 1, %if.end120 ]
  br label %cleanup164, !dbg !7498

cleanup164:                                       ; preds = %cleanup164.loopexit, %if.then70, %if.end107, %lor.lhs.false99, %if.then92, %if.else112, %if.end84, %if.then110, %lor.lhs.false, %cleanup, %if.end119, %land.end
  %retval.4 = phi i8 [ %3, %land.end ], [ %retval.0, %cleanup ], [ 1, %if.end119 ], [ 0, %lor.lhs.false ], [ 0, %if.then70 ], [ 0, %if.end84 ], [ 0, %lor.lhs.false99 ], [ 0, %if.then92 ], [ 1, %if.then110 ], [ 1, %if.end107 ], [ 0, %if.else112 ], [ %retval.4.ph, %cleanup164.loopexit ]
  ret i8 %retval.4, !dbg !7498
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_cast(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_strcpy(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_strncpy(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_fputs(i32, %union.tree_node*, %union.tree_node*, i8 zeroext, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_memory_chk(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_stxcpy_chk(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_builtin_strncpy_chk(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_fold_builtin_snprintf_chk(%union.gimple_statement_d*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_ignored_result(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_strlen(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_unary_nop_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

declare dso_local void @push_gimplify_context(%struct.gimplify_ctx*) local_unnamed_addr #2

declare dso_local void @gimplify_and_add(%union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_initialized_tmp_var(%union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**) local_unnamed_addr #2

declare dso_local void @pop_gimplify_context(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7499 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7501, metadata !DIExpression()), !dbg !7502
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #7, !dbg !7503
  %cmp = icmp ne i32 %call, 0, !dbg !7504
  %conv1 = zext i1 %cmp to i8, !dbg !7503
  ret i8 %conv1, !dbg !7505
}

declare dso_local void @annotate_all_with_location(%struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !7506 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !7510, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !7511, metadata !DIExpression()), !dbg !7513
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !7514
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !7515
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !7516
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !7517
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !7518
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !7519
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !7520

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !7521
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7521
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !7522
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !7523

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !7524
  br label %cond.end, !dbg !7523

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !7523
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !7525
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !7526
  ret void, !dbg !7527
}

declare dso_local void @find_new_referenced_vars(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

declare dso_local void @unlink_stmt_vdef(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vuse(%union.gimple_statement_d* %g, %union.tree_node* %vuse) unnamed_addr #0 !dbg !7528 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7530, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !7531, metadata !DIExpression()), !dbg !7532
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7533
  %tobool = icmp eq i8 %call, 0, !dbg !7533
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7533

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 1407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7533
  br label %cond.end, !dbg !7533

cond.end:                                         ; preds = %entry, %cond.true
  %vuse1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7534
  %0 = bitcast %struct.ssa_use_operand_d** %vuse1 to %union.tree_node**, !dbg !7534
  store %union.tree_node* %vuse, %union.tree_node** %0, align 8, !dbg !7535
  ret void, !dbg !7536
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vdef(%union.gimple_statement_d* %g, %union.tree_node* %vdef) unnamed_addr #0 !dbg !7537 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7539, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata %union.tree_node* %vdef, metadata !7540, metadata !DIExpression()), !dbg !7541
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7542
  %tobool = icmp eq i8 %call, 0, !dbg !7542
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7542

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7542
  br label %cond.end, !dbg !7542

cond.end:                                         ; preds = %entry, %cond.true
  %vdef1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !7543
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef1 to %union.tree_node**, !dbg !7543
  store %union.tree_node* %vdef, %union.tree_node** %0, align 8, !dbg !7544
  ret void, !dbg !7545
}

declare dso_local void @move_ssa_defining_stmt_for_defs(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !7546 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %location, metadata !7551, metadata !DIExpression()), !dbg !7552
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !7553
  store i32 %location, i32* %location1, align 8, !dbg !7554
  ret void, !dbg !7555
}

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gimple_remove_stmt_histograms(%struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @optimize_stack_restore(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #5 !dbg !7556 {
entry:
  %stack_save_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !7560, metadata !DIExpression()), !dbg !7575
  %call = tail call fastcc %struct.basic_block_def* @gsi_bb(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7576
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7563, metadata !DIExpression()), !dbg !7577
  %call2 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7578
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !7564, metadata !DIExpression()), !dbg !7577
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call2) #7, !dbg !7579
  %cmp = icmp eq i32 %call3, 8, !dbg !7581
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !7582

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call2) #7, !dbg !7583
  %cmp5 = icmp eq i32 %call4, 1, !dbg !7584
  br i1 %cmp5, label %lor.lhs.false6, label %cleanup, !dbg !7585

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call7 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7586
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7586
  %bf.load = load i64, i64* %0, align 8, !dbg !7586
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7587
  %cmp8 = icmp eq i64 %bf.cast1, 141, !dbg !7587
  br i1 %cmp8, label %lor.lhs.false9, label %cleanup, !dbg !7588

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %call10 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7589
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7589
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !7589
  %2 = load i64*, i64** %1, align 8, !dbg !7589
  %bf.load12 = load i64, i64* %2, align 8, !dbg !7589
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !7589
  %cmp15 = icmp eq i64 %bf.cast142, 10, !dbg !7589
  br i1 %cmp15, label %if.end, label %lor.lhs.false16, !dbg !7589

lor.lhs.false16:                                  ; preds = %lor.lhs.false9
  %call17 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7589
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7589
  %3 = bitcast %union.tree_node** %type19 to i64**, !dbg !7589
  %4 = load i64*, i64** %3, align 8, !dbg !7589
  %bf.load21 = load i64, i64* %4, align 8, !dbg !7589
  %bf.cast233 = and i64 %bf.load21, 65535, !dbg !7589
  %cmp24 = icmp eq i64 %bf.cast233, 12, !dbg !7589
  br i1 %cmp24, label %if.end, label %cleanup, !dbg !7590

if.end:                                           ; preds = %lor.lhs.false16, %lor.lhs.false9
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !7591
  br label %for.cond, !dbg !7591

for.cond:                                         ; preds = %for.inc, %if.end
  %call25 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7593
  %tobool = icmp eq i8 %call25, 0, !dbg !7595
  br i1 %tobool, label %for.body, label %for.end, !dbg !7596

for.body:                                         ; preds = %for.cond
  %call26 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7597
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call26, metadata !7562, metadata !DIExpression()), !dbg !7577
  %call27 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call26) #7, !dbg !7599
  %cmp28 = icmp eq i32 %call27, 7, !dbg !7601
  br i1 %cmp28, label %cleanup.loopexit, label %if.end30, !dbg !7602

if.end30:                                         ; preds = %for.body
  %call31 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call26) #7, !dbg !7603
  %cmp32 = icmp eq i32 %call31, 8, !dbg !7605
  br i1 %cmp32, label %if.end34, label %for.inc, !dbg !7606

if.end34:                                         ; preds = %if.end30
  %call35 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call26) #7, !dbg !7607
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !7561, metadata !DIExpression()), !dbg !7577
  %tobool36 = icmp eq %union.tree_node* %call35, null, !dbg !7608
  br i1 %tobool36, label %cleanup.loopexit, label %lor.lhs.false37, !dbg !7610

lor.lhs.false37:                                  ; preds = %if.end34
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 5, !dbg !7611
  %bf.load38 = load i32, i32* %built_in_class, align 8, !dbg !7611
  %bf.clear39 = and i32 %bf.load38, 6144, !dbg !7611
  %cmp40 = icmp eq i32 %bf.clear39, 6144, !dbg !7612
  br i1 %cmp40, label %lor.lhs.false41, label %cleanup.loopexit, !dbg !7613

lor.lhs.false41:                                  ; preds = %lor.lhs.false37
  %bf.clear44 = and i32 %bf.load38, 2047, !dbg !7614
  %cmp45 = icmp eq i32 %bf.clear44, 415, !dbg !7615
  br i1 %cmp45, label %cleanup.loopexit, label %if.end47, !dbg !7616

if.end47:                                         ; preds = %lor.lhs.false41
  %cmp52 = icmp eq i32 %bf.clear44, 527, !dbg !7617
  br i1 %cmp52, label %second_stack_restore.loopexit, label %for.inc, !dbg !7619

for.inc:                                          ; preds = %if.end30, %if.end47
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !7620
  br label %for.cond, !dbg !7621, !llvm.loop !7622

for.end:                                          ; preds = %for.cond
  %call55 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7624
  %tobool56 = icmp eq i8 %call55, 0, !dbg !7624
  br i1 %tobool56, label %cleanup, label %if.end58, !dbg !7626

if.end58:                                         ; preds = %for.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !7627
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7627
  %tobool59 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !7627
  br i1 %tobool59, label %cond.end, label %cond.true, !dbg !7627

cond.true:                                        ; preds = %if.end58
  %base61 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !7627
  br label %cond.end, !dbg !7627

cond.end:                                         ; preds = %if.end58, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base61, %cond.true ], [ null, %if.end58 ], !dbg !7627
  %call62 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7627
  switch i32 %call62, label %cleanup [
    i32 0, label %second_stack_restore
    i32 1, label %sw.bb
  ], !dbg !7628

sw.bb:                                            ; preds = %cond.end
  %call63 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call) #7, !dbg !7629
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call63, i64 0, i32 1, !dbg !7632
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7632
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7633
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !7633
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7633
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !7633
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7633
  %cmp64 = icmp eq %struct.basic_block_def* %6, %9, !dbg !7634
  br i1 %cmp64, label %second_stack_restore, label %cleanup, !dbg !7635

second_stack_restore.loopexit:                    ; preds = %if.end47
  br label %second_stack_restore, !dbg !7636

second_stack_restore:                             ; preds = %second_stack_restore.loopexit, %sw.bb, %cond.end
  call void @llvm.dbg.label(metadata !7574), !dbg !7637
  %call67 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7636
  %call68 = call fastcc zeroext i8 @has_single_use(%union.tree_node* %call67) #7, !dbg !7638
  %tobool69 = icmp eq i8 %call68, 0, !dbg !7638
  br i1 %tobool69, label %if.end97, label %if.then70, !dbg !7639

if.then70:                                        ; preds = %second_stack_restore
  %call71 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7640
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7640
  %10 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !7640
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !7640
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %11, metadata !7565, metadata !DIExpression()), !dbg !7641
  %call72 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %11) #7, !dbg !7642
  %tobool73 = icmp eq i8 %call72, 0, !dbg !7642
  br i1 %tobool73, label %if.end97, label %if.then74, !dbg !7643

if.then74:                                        ; preds = %if.then70
  %call75 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %11) #7, !dbg !7644
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !7561, metadata !DIExpression()), !dbg !7577
  %tobool76 = icmp eq %union.tree_node* %call75, null, !dbg !7645
  br i1 %tobool76, label %if.end97, label %land.lhs.true, !dbg !7646

land.lhs.true:                                    ; preds = %if.then74
  %built_in_class78 = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 5, !dbg !7647
  %bf.load79 = load i32, i32* %built_in_class78, align 8, !dbg !7647
  %bf.clear81 = and i32 %bf.load79, 6144, !dbg !7647
  %cmp82 = icmp eq i32 %bf.clear81, 6144, !dbg !7648
  br i1 %cmp82, label %land.lhs.true83, label %if.end97, !dbg !7649

land.lhs.true83:                                  ; preds = %land.lhs.true
  %bf.clear87 = and i32 %bf.load79, 2047, !dbg !7650
  %cmp88 = icmp eq i32 %bf.clear87, 526, !dbg !7651
  br i1 %cmp88, label %if.then89, label %if.end97, !dbg !7652

if.then89:                                        ; preds = %land.lhs.true83
  %12 = bitcast %struct.gimple_stmt_iterator* %stack_save_gsi to i8*, !dbg !7653
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !7653
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7654
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !7654
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %11) #6, !dbg !7654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !7654
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !7654
  %call90 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call2, i32 0) #7, !dbg !7655
  %type92 = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7655
  %14 = load %union.tree_node*, %union.tree_node** %type92, align 8, !dbg !7655
  %call93 = call %union.tree_node* @build_int_cst(%union.tree_node* %14, i64 0) #6, !dbg !7656
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !7573, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %stack_save_gsi, metadata !7568, metadata !DIExpression(DW_OP_deref)), !dbg !7657
  %call94 = call zeroext i8 @update_call_from_tree(%struct.gimple_stmt_iterator* nonnull %stack_save_gsi, %union.tree_node* %call93) #6, !dbg !7658
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !7659
  br label %if.end97, !dbg !7660

if.end97:                                         ; preds = %if.then74, %if.then70, %second_stack_restore, %if.then89, %land.lhs.true83, %land.lhs.true
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7661
  br label %cleanup, !dbg !7662

cleanup.loopexit:                                 ; preds = %for.body, %lor.lhs.false41, %if.end34, %lor.lhs.false37
  br label %cleanup, !dbg !7663

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb, %for.end, %lor.lhs.false6, %lor.lhs.false, %entry, %cond.end, %lor.lhs.false16, %if.end97
  %retval.0 = phi %union.tree_node* [ %15, %if.end97 ], [ null, %lor.lhs.false16 ], [ null, %lor.lhs.false6 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %for.end ], [ null, %sw.bb ], [ null, %cond.end ], [ null, %cleanup.loopexit ], !dbg !7577
  ret %union.tree_node* %retval.0, !dbg !7663
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @optimize_stdarg_builtin(%union.gimple_statement_d* %call) unnamed_addr #5 !dbg !7664 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7666, metadata !DIExpression()), !dbg !7673
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !7674
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7672, metadata !DIExpression()), !dbg !7673
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !7675
  %cmp = icmp eq i32 %call2, 8, !dbg !7677
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7678

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #7, !dbg !7679
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7667, metadata !DIExpression()), !dbg !7673
  %0 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 70), align 8, !dbg !7680
  %call4 = tail call %union.tree_node* %0(%union.tree_node* %call3) #6, !dbg !7681
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7670, metadata !DIExpression()), !dbg !7673
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7682
  %bf.load = load i64, i64* %1, align 8, !dbg !7682
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7682
  %cmp5 = icmp eq i64 %bf.cast2, 10, !dbg !7682
  br i1 %cmp5, label %land.rhs, label %lor.lhs.false, !dbg !7682

lor.lhs.false:                                    ; preds = %if.end
  %cmp10 = icmp eq i64 %bf.cast2, 12, !dbg !7682
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !7683

land.rhs:                                         ; preds = %lor.lhs.false, %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7684
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7684
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7685
  %cmp11 = icmp eq %union.tree_node* %2, %3, !dbg !7686
  br i1 %cmp11, label %land.end, label %lor.rhs, !dbg !7687

lor.rhs:                                          ; preds = %land.rhs
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !7688
  %cmp14 = icmp eq %union.tree_node* %2, %4, !dbg !7689
  %phitmp = zext i1 %cmp14 to i8, !dbg !7687
  br label %land.end, !dbg !7687

land.end:                                         ; preds = %land.rhs, %lor.rhs, %lor.lhs.false
  %5 = phi i8 [ 0, %lor.lhs.false ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !7671, metadata !DIExpression()), !dbg !7673
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 5, !dbg !7690
  %bf.load15 = load i32, i32* %function_code, align 8, !dbg !7690
  %bf.clear16 = and i32 %bf.load15, 2047, !dbg !7690
  switch i32 %bf.clear16, label %sw.default [
    i32 515, label %sw.bb
    i32 513, label %sw.bb68
    i32 514, label %sw.bb126
  ], !dbg !7691

sw.bb:                                            ; preds = %land.end
  %tobool = icmp eq i8 %5, 0, !dbg !7692
  %6 = load void (%union.tree_node*, %struct.rtx_def*)*, void (%union.tree_node*, %struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 72), align 8, !dbg !7695
  %cmp18 = icmp ne void (%union.tree_node*, %struct.rtx_def*)* %6, null, !dbg !7696
  %or.cond = or i1 %tobool, %cmp18, !dbg !7697
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 492), align 16, !dbg !7698
  %cmp21 = icmp eq %union.tree_node* %7, null, !dbg !7699
  %or.cond1 = or i1 %or.cond, %cmp21, !dbg !7697
  br i1 %or.cond1, label %cleanup, label %if.end24, !dbg !7697

if.end24:                                         ; preds = %sw.bb
  %call25 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !7700
  %cmp26 = icmp eq i32 %call25, 2, !dbg !7702
  br i1 %cmp26, label %if.end29, label %cleanup, !dbg !7703

if.end29:                                         ; preds = %if.end24
  %call30 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 0) #7, !dbg !7704
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7668, metadata !DIExpression()), !dbg !7673
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7705
  %8 = bitcast %union.tree_node** %type32 to i64**, !dbg !7705
  %9 = load i64*, i64** %8, align 8, !dbg !7705
  %bf.load34 = load i64, i64* %9, align 8, !dbg !7705
  %bf.cast366 = and i64 %bf.load34, 65535, !dbg !7705
  %cmp37 = icmp eq i64 %bf.cast366, 10, !dbg !7705
  br i1 %cmp37, label %lor.lhs.false48, label %lor.lhs.false39, !dbg !7705

lor.lhs.false39:                                  ; preds = %if.end29
  %cmp46 = icmp eq i64 %bf.cast366, 12, !dbg !7705
  br i1 %cmp46, label %lor.lhs.false48, label %cleanup, !dbg !7707

lor.lhs.false48:                                  ; preds = %lor.lhs.false39, %if.end29
  %type52 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !7708
  %10 = bitcast i64* %type52 to %struct.tree_type**, !dbg !7708
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !7708
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 16, !dbg !7708
  %12 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !7708
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7709
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !7709
  %cmp56 = icmp eq %union.tree_node* %12, %14, !dbg !7710
  br i1 %cmp56, label %if.end59, label %cleanup, !dbg !7711

if.end59:                                         ; preds = %lor.lhs.false48
  %call60 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %call1, %union.tree_node* %call30) #6, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !7668, metadata !DIExpression()), !dbg !7673
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 492), align 16, !dbg !7713
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7714
  %call61 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %call1, %union.tree_node* %15, i32 1, %union.tree_node* %16) #6, !dbg !7715
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !7669, metadata !DIExpression()), !dbg !7673
  %type63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7716
  %17 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !7716
  %call64 = tail call %union.tree_node* @fold_convert_loc(i32 %call1, %union.tree_node* %17, %union.tree_node* %call61) #6, !dbg !7717
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !7669, metadata !DIExpression()), !dbg !7673
  %18 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !7718
  %call67 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %18, %union.tree_node* %call60, %union.tree_node* %call64) #6, !dbg !7718
  br label %cleanup, !dbg !7719

sw.bb68:                                          ; preds = %land.end
  %tobool69 = icmp eq i8 %5, 0, !dbg !7720
  br i1 %tobool69, label %cleanup, label %if.end71, !dbg !7722

if.end71:                                         ; preds = %sw.bb68
  %call72 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !7723
  %cmp73 = icmp eq i32 %call72, 2, !dbg !7725
  br i1 %cmp73, label %if.end76, label %cleanup, !dbg !7726

if.end76:                                         ; preds = %if.end71
  %call77 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 0) #7, !dbg !7727
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !7668, metadata !DIExpression()), !dbg !7673
  %type79 = getelementptr inbounds %union.tree_node, %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7728
  %19 = bitcast %union.tree_node** %type79 to i64**, !dbg !7728
  %20 = load i64*, i64** %19, align 8, !dbg !7728
  %bf.load81 = load i64, i64* %20, align 8, !dbg !7728
  %bf.cast834 = and i64 %bf.load81, 65535, !dbg !7728
  %cmp84 = icmp eq i64 %bf.cast834, 10, !dbg !7728
  br i1 %cmp84, label %lor.lhs.false95, label %lor.lhs.false86, !dbg !7728

lor.lhs.false86:                                  ; preds = %if.end76
  %cmp93 = icmp eq i64 %bf.cast834, 12, !dbg !7728
  br i1 %cmp93, label %lor.lhs.false95, label %cleanup, !dbg !7730

lor.lhs.false95:                                  ; preds = %lor.lhs.false86, %if.end76
  %type99 = getelementptr inbounds i64, i64* %20, i64 2, !dbg !7731
  %21 = bitcast i64* %type99 to %struct.tree_type**, !dbg !7731
  %22 = load %struct.tree_type*, %struct.tree_type** %21, align 8, !dbg !7731
  %main_variant101 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 16, !dbg !7731
  %23 = load %union.tree_node*, %union.tree_node** %main_variant101, align 8, !dbg !7731
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7732
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !7732
  %cmp104 = icmp eq %union.tree_node* %23, %25, !dbg !7733
  br i1 %cmp104, label %if.end107, label %cleanup, !dbg !7734

if.end107:                                        ; preds = %lor.lhs.false95
  %call108 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %call1, %union.tree_node* %call77) #6, !dbg !7735
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !7668, metadata !DIExpression()), !dbg !7673
  %call109 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 1) #7, !dbg !7736
  call void @llvm.dbg.value(metadata %union.tree_node* %call109, metadata !7669, metadata !DIExpression()), !dbg !7673
  %type111 = getelementptr inbounds %union.tree_node, %union.tree_node* %call109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7737
  %26 = bitcast %union.tree_node** %type111 to %struct.tree_type**, !dbg !7737
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !7737
  %main_variant113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 16, !dbg !7737
  %28 = load %union.tree_node*, %union.tree_node** %main_variant113, align 8, !dbg !7737
  %29 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !7739
  %cmp116 = icmp eq %union.tree_node* %28, %29, !dbg !7740
  br i1 %cmp116, label %if.end119, label %cleanup, !dbg !7741

if.end119:                                        ; preds = %if.end107
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %call108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7742
  %30 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !7742
  %call122 = tail call %union.tree_node* @fold_convert_loc(i32 %call1, %union.tree_node* %30, %union.tree_node* %call109) #6, !dbg !7743
  call void @llvm.dbg.value(metadata %union.tree_node* %call122, metadata !7669, metadata !DIExpression()), !dbg !7673
  %31 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !7744
  %call125 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %31, %union.tree_node* %call108, %union.tree_node* %call122) #6, !dbg !7744
  br label %cleanup, !dbg !7745

sw.bb126:                                         ; preds = %land.end
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7746
  br label %cleanup, !dbg !7747

sw.default:                                       ; preds = %land.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 3339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7748
  br label %cleanup, !dbg !7749

cleanup:                                          ; preds = %lor.lhs.false48, %if.end24, %if.end107, %lor.lhs.false95, %if.end71, %sw.bb68, %entry, %lor.lhs.false86, %lor.lhs.false39, %sw.bb, %sw.default, %sw.bb126, %if.end119, %if.end59
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %32, %sw.bb126 ], [ %call125, %if.end119 ], [ %call67, %if.end59 ], [ null, %entry ], [ null, %sw.bb ], [ null, %if.end24 ], [ null, %lor.lhs.false48 ], [ null, %lor.lhs.false39 ], [ null, %sw.bb68 ], [ null, %if.end71 ], [ null, %lor.lhs.false95 ], [ null, %lor.lhs.false86 ], [ null, %if.end107 ], !dbg !7673
  ret %union.tree_node* %retval.0, !dbg !7750
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7751 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7753, metadata !DIExpression()), !dbg !7754
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !7755
  %tobool = icmp eq i8 %call, 0, !dbg !7755
  br i1 %tobool, label %if.end, label %if.then, !dbg !7757

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !7758
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !7760
  br label %if.end, !dbg !7761

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7762
}

declare dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gsi_bb(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !7763 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !7767, metadata !DIExpression()), !dbg !7768
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 2, !dbg !7769
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7769
  ret %struct.basic_block_def* %0, !dbg !7770
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !7771 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7775, metadata !DIExpression()), !dbg !7776
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !7777
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7777

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !7777
  %0 = load i32, i32* %num, align 8, !dbg !7777
  br label %cond.end, !dbg !7777

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7777
  ret i32 %cond, !dbg !7777
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7778 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7782, metadata !DIExpression()), !dbg !7783
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !7784
  %tobool = icmp eq i8 %call, 0, !dbg !7784
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7784

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7784
  br label %cond.end, !dbg !7784

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7785
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7785
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7785
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7785

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7785
  br label %cond.end5, !dbg !7785

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7785
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !7785
  ret %struct.edge_def* %call7, !dbg !7786
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_single_use(%union.tree_node* %var) unnamed_addr #0 !dbg !7787 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7789, metadata !DIExpression()), !dbg !7794
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7795
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !7790, metadata !DIExpression()), !dbg !7794
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !7796
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !7796
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !7796
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !7798
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7799

if.end:                                           ; preds = %entry
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 1, !dbg !7800
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next2, align 8, !dbg !7800
  %cmp3 = icmp eq %struct.ssa_use_operand_d* %3, %0, !dbg !7802
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7803

if.then4:                                         ; preds = %if.end
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 2, i32 0, !dbg !7804
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7804
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %4) #7, !dbg !7805
  %tobool = icmp eq i8 %call, 0, !dbg !7806
  %conv = zext i1 %tobool to i8, !dbg !7806
  br label %cleanup, !dbg !7807

if.end6:                                          ; preds = %if.end
  %5 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !7808
  %tobool7 = icmp eq i32 %5, 0, !dbg !7808
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !7810

if.end9:                                          ; preds = %if.end6
  %call10 = tail call zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* nonnull %0, %struct.ssa_use_operand_d** null, %union.gimple_statement_d** null) #6, !dbg !7811
  br label %cleanup, !dbg !7812

cleanup:                                          ; preds = %if.end6, %entry, %if.end9, %if.then4
  %retval.0 = phi i8 [ %conv, %if.then4 ], [ %call10, %if.end9 ], [ 0, %entry ], [ 0, %if.end6 ], !dbg !7794
  ret i8 %retval.0, !dbg !7813
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7814 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7818, metadata !DIExpression()), !dbg !7819
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7820
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7820
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7820
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7820

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7820
  br label %cond.end, !dbg !7820

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7820
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7820
  %cmp = icmp eq i32 %call, 1, !dbg !7821
  %conv2 = zext i1 %cmp to i8, !dbg !7820
  ret i8 %conv2, !dbg !7822
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7823 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7825, metadata !DIExpression()), !dbg !7826
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7827
  %cmp = icmp eq i32 %call, 2, !dbg !7828
  %conv1 = zext i1 %cmp to i8, !dbg !7827
  ret i8 %conv1, !dbg !7829
}

declare dso_local zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d*, %struct.ssa_use_operand_d**, %union.gimple_statement_d**) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_call_expr_loc(i32, %union.tree_node*, i32, ...) local_unnamed_addr #2

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2783, !2784, !2785}
!llvm.ident = !{!2786}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_ccp", scope: !2, file: !3, line: 1756, type: !2755, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1405, globals: !2752, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-ccp.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !335, !340, !345, !363, !370, !377, !399, !406, !582, !609, !647, !654, !660, !666, !679, !685}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !330, line: 363, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !330, line: 355, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !341, line: 474, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344}
!343 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369}
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !378, line: 36, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398}
!380 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !400, line: 104, baseType: !7, size: 32, elements: !401)
!400 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!401 = !{!402, !403, !404, !405}
!402 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!403 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!404 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!405 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !407, line: 74, baseType: !7, size: 32, elements: !408)
!407 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!408 = !{!409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!409 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!581 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !583, line: 727, baseType: !7, size: 32, elements: !584)
!583 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!584 = !{!585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608}
!585 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!586 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!587 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!588 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!589 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!590 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!591 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!592 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!593 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!594 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!595 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!596 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!597 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!598 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!599 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!600 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!601 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!602 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!603 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!604 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!605 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!606 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!607 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!608 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!609 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !583, line: 51, baseType: !7, size: 32, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646}
!611 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!628 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!629 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!630 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!631 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!632 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!633 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!634 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!635 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!636 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!637 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!638 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!639 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!640 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!641 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!642 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!643 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!644 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!645 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!646 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!647 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !648, line: 119, baseType: !7, size: 32, elements: !649)
!648 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!649 = !{!650, !651, !652, !653}
!650 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!651 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!652 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!653 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!654 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_prop_result", file: !655, line: 44, baseType: !7, size: 32, elements: !656)
!655 = !DIFile(filename: "./tree-ssa-propagate.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!656 = !{!657, !658, !659}
!657 = !DIEnumerator(name: "SSA_PROP_NOT_INTERESTING", value: 0, isUnsigned: true)
!658 = !DIEnumerator(name: "SSA_PROP_INTERESTING", value: 1, isUnsigned: true)
!659 = !DIEnumerator(name: "SSA_PROP_VARYING", value: 2, isUnsigned: true)
!660 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 215, baseType: !7, size: 32, elements: !661)
!661 = !{!662, !663, !664, !665}
!662 = !DIEnumerator(name: "UNINITIALIZED", value: 0, isUnsigned: true)
!663 = !DIEnumerator(name: "UNDEFINED", value: 1, isUnsigned: true)
!664 = !DIEnumerator(name: "CONSTANT", value: 2, isUnsigned: true)
!665 = !DIEnumerator(name: "VARYING", value: 3, isUnsigned: true)
!666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !135, line: 58, baseType: !7, size: 32, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678}
!668 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!669 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!670 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!671 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!672 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!673 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!674 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!675 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!676 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!677 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!678 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!679 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !583, line: 80, baseType: !7, size: 32, elements: !680)
!680 = !{!681, !682, !683, !684}
!681 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!682 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!683 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!684 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_function", file: !135, line: 220, baseType: !7, size: 32, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!687 = !DIEnumerator(name: "BUILT_IN_ACOS", value: 0, isUnsigned: true)
!688 = !DIEnumerator(name: "BUILT_IN_ACOSF", value: 1, isUnsigned: true)
!689 = !DIEnumerator(name: "BUILT_IN_ACOSH", value: 2, isUnsigned: true)
!690 = !DIEnumerator(name: "BUILT_IN_ACOSHF", value: 3, isUnsigned: true)
!691 = !DIEnumerator(name: "BUILT_IN_ACOSHL", value: 4, isUnsigned: true)
!692 = !DIEnumerator(name: "BUILT_IN_ACOSL", value: 5, isUnsigned: true)
!693 = !DIEnumerator(name: "BUILT_IN_ASIN", value: 6, isUnsigned: true)
!694 = !DIEnumerator(name: "BUILT_IN_ASINF", value: 7, isUnsigned: true)
!695 = !DIEnumerator(name: "BUILT_IN_ASINH", value: 8, isUnsigned: true)
!696 = !DIEnumerator(name: "BUILT_IN_ASINHF", value: 9, isUnsigned: true)
!697 = !DIEnumerator(name: "BUILT_IN_ASINHL", value: 10, isUnsigned: true)
!698 = !DIEnumerator(name: "BUILT_IN_ASINL", value: 11, isUnsigned: true)
!699 = !DIEnumerator(name: "BUILT_IN_ATAN", value: 12, isUnsigned: true)
!700 = !DIEnumerator(name: "BUILT_IN_ATAN2", value: 13, isUnsigned: true)
!701 = !DIEnumerator(name: "BUILT_IN_ATAN2F", value: 14, isUnsigned: true)
!702 = !DIEnumerator(name: "BUILT_IN_ATAN2L", value: 15, isUnsigned: true)
!703 = !DIEnumerator(name: "BUILT_IN_ATANF", value: 16, isUnsigned: true)
!704 = !DIEnumerator(name: "BUILT_IN_ATANH", value: 17, isUnsigned: true)
!705 = !DIEnumerator(name: "BUILT_IN_ATANHF", value: 18, isUnsigned: true)
!706 = !DIEnumerator(name: "BUILT_IN_ATANHL", value: 19, isUnsigned: true)
!707 = !DIEnumerator(name: "BUILT_IN_ATANL", value: 20, isUnsigned: true)
!708 = !DIEnumerator(name: "BUILT_IN_CBRT", value: 21, isUnsigned: true)
!709 = !DIEnumerator(name: "BUILT_IN_CBRTF", value: 22, isUnsigned: true)
!710 = !DIEnumerator(name: "BUILT_IN_CBRTL", value: 23, isUnsigned: true)
!711 = !DIEnumerator(name: "BUILT_IN_CEIL", value: 24, isUnsigned: true)
!712 = !DIEnumerator(name: "BUILT_IN_CEILF", value: 25, isUnsigned: true)
!713 = !DIEnumerator(name: "BUILT_IN_CEILL", value: 26, isUnsigned: true)
!714 = !DIEnumerator(name: "BUILT_IN_COPYSIGN", value: 27, isUnsigned: true)
!715 = !DIEnumerator(name: "BUILT_IN_COPYSIGNF", value: 28, isUnsigned: true)
!716 = !DIEnumerator(name: "BUILT_IN_COPYSIGNL", value: 29, isUnsigned: true)
!717 = !DIEnumerator(name: "BUILT_IN_COS", value: 30, isUnsigned: true)
!718 = !DIEnumerator(name: "BUILT_IN_COSF", value: 31, isUnsigned: true)
!719 = !DIEnumerator(name: "BUILT_IN_COSH", value: 32, isUnsigned: true)
!720 = !DIEnumerator(name: "BUILT_IN_COSHF", value: 33, isUnsigned: true)
!721 = !DIEnumerator(name: "BUILT_IN_COSHL", value: 34, isUnsigned: true)
!722 = !DIEnumerator(name: "BUILT_IN_COSL", value: 35, isUnsigned: true)
!723 = !DIEnumerator(name: "BUILT_IN_DREM", value: 36, isUnsigned: true)
!724 = !DIEnumerator(name: "BUILT_IN_DREMF", value: 37, isUnsigned: true)
!725 = !DIEnumerator(name: "BUILT_IN_DREML", value: 38, isUnsigned: true)
!726 = !DIEnumerator(name: "BUILT_IN_ERF", value: 39, isUnsigned: true)
!727 = !DIEnumerator(name: "BUILT_IN_ERFC", value: 40, isUnsigned: true)
!728 = !DIEnumerator(name: "BUILT_IN_ERFCF", value: 41, isUnsigned: true)
!729 = !DIEnumerator(name: "BUILT_IN_ERFCL", value: 42, isUnsigned: true)
!730 = !DIEnumerator(name: "BUILT_IN_ERFF", value: 43, isUnsigned: true)
!731 = !DIEnumerator(name: "BUILT_IN_ERFL", value: 44, isUnsigned: true)
!732 = !DIEnumerator(name: "BUILT_IN_EXP", value: 45, isUnsigned: true)
!733 = !DIEnumerator(name: "BUILT_IN_EXP10", value: 46, isUnsigned: true)
!734 = !DIEnumerator(name: "BUILT_IN_EXP10F", value: 47, isUnsigned: true)
!735 = !DIEnumerator(name: "BUILT_IN_EXP10L", value: 48, isUnsigned: true)
!736 = !DIEnumerator(name: "BUILT_IN_EXP2", value: 49, isUnsigned: true)
!737 = !DIEnumerator(name: "BUILT_IN_EXP2F", value: 50, isUnsigned: true)
!738 = !DIEnumerator(name: "BUILT_IN_EXP2L", value: 51, isUnsigned: true)
!739 = !DIEnumerator(name: "BUILT_IN_EXPF", value: 52, isUnsigned: true)
!740 = !DIEnumerator(name: "BUILT_IN_EXPL", value: 53, isUnsigned: true)
!741 = !DIEnumerator(name: "BUILT_IN_EXPM1", value: 54, isUnsigned: true)
!742 = !DIEnumerator(name: "BUILT_IN_EXPM1F", value: 55, isUnsigned: true)
!743 = !DIEnumerator(name: "BUILT_IN_EXPM1L", value: 56, isUnsigned: true)
!744 = !DIEnumerator(name: "BUILT_IN_FABS", value: 57, isUnsigned: true)
!745 = !DIEnumerator(name: "BUILT_IN_FABSF", value: 58, isUnsigned: true)
!746 = !DIEnumerator(name: "BUILT_IN_FABSL", value: 59, isUnsigned: true)
!747 = !DIEnumerator(name: "BUILT_IN_FDIM", value: 60, isUnsigned: true)
!748 = !DIEnumerator(name: "BUILT_IN_FDIMF", value: 61, isUnsigned: true)
!749 = !DIEnumerator(name: "BUILT_IN_FDIML", value: 62, isUnsigned: true)
!750 = !DIEnumerator(name: "BUILT_IN_FLOOR", value: 63, isUnsigned: true)
!751 = !DIEnumerator(name: "BUILT_IN_FLOORF", value: 64, isUnsigned: true)
!752 = !DIEnumerator(name: "BUILT_IN_FLOORL", value: 65, isUnsigned: true)
!753 = !DIEnumerator(name: "BUILT_IN_FMA", value: 66, isUnsigned: true)
!754 = !DIEnumerator(name: "BUILT_IN_FMAF", value: 67, isUnsigned: true)
!755 = !DIEnumerator(name: "BUILT_IN_FMAL", value: 68, isUnsigned: true)
!756 = !DIEnumerator(name: "BUILT_IN_FMAX", value: 69, isUnsigned: true)
!757 = !DIEnumerator(name: "BUILT_IN_FMAXF", value: 70, isUnsigned: true)
!758 = !DIEnumerator(name: "BUILT_IN_FMAXL", value: 71, isUnsigned: true)
!759 = !DIEnumerator(name: "BUILT_IN_FMIN", value: 72, isUnsigned: true)
!760 = !DIEnumerator(name: "BUILT_IN_FMINF", value: 73, isUnsigned: true)
!761 = !DIEnumerator(name: "BUILT_IN_FMINL", value: 74, isUnsigned: true)
!762 = !DIEnumerator(name: "BUILT_IN_FMOD", value: 75, isUnsigned: true)
!763 = !DIEnumerator(name: "BUILT_IN_FMODF", value: 76, isUnsigned: true)
!764 = !DIEnumerator(name: "BUILT_IN_FMODL", value: 77, isUnsigned: true)
!765 = !DIEnumerator(name: "BUILT_IN_FREXP", value: 78, isUnsigned: true)
!766 = !DIEnumerator(name: "BUILT_IN_FREXPF", value: 79, isUnsigned: true)
!767 = !DIEnumerator(name: "BUILT_IN_FREXPL", value: 80, isUnsigned: true)
!768 = !DIEnumerator(name: "BUILT_IN_GAMMA", value: 81, isUnsigned: true)
!769 = !DIEnumerator(name: "BUILT_IN_GAMMAF", value: 82, isUnsigned: true)
!770 = !DIEnumerator(name: "BUILT_IN_GAMMAL", value: 83, isUnsigned: true)
!771 = !DIEnumerator(name: "BUILT_IN_GAMMA_R", value: 84, isUnsigned: true)
!772 = !DIEnumerator(name: "BUILT_IN_GAMMAF_R", value: 85, isUnsigned: true)
!773 = !DIEnumerator(name: "BUILT_IN_GAMMAL_R", value: 86, isUnsigned: true)
!774 = !DIEnumerator(name: "BUILT_IN_HUGE_VAL", value: 87, isUnsigned: true)
!775 = !DIEnumerator(name: "BUILT_IN_HUGE_VALF", value: 88, isUnsigned: true)
!776 = !DIEnumerator(name: "BUILT_IN_HUGE_VALL", value: 89, isUnsigned: true)
!777 = !DIEnumerator(name: "BUILT_IN_HYPOT", value: 90, isUnsigned: true)
!778 = !DIEnumerator(name: "BUILT_IN_HYPOTF", value: 91, isUnsigned: true)
!779 = !DIEnumerator(name: "BUILT_IN_HYPOTL", value: 92, isUnsigned: true)
!780 = !DIEnumerator(name: "BUILT_IN_ILOGB", value: 93, isUnsigned: true)
!781 = !DIEnumerator(name: "BUILT_IN_ILOGBF", value: 94, isUnsigned: true)
!782 = !DIEnumerator(name: "BUILT_IN_ILOGBL", value: 95, isUnsigned: true)
!783 = !DIEnumerator(name: "BUILT_IN_INF", value: 96, isUnsigned: true)
!784 = !DIEnumerator(name: "BUILT_IN_INFF", value: 97, isUnsigned: true)
!785 = !DIEnumerator(name: "BUILT_IN_INFL", value: 98, isUnsigned: true)
!786 = !DIEnumerator(name: "BUILT_IN_INFD32", value: 99, isUnsigned: true)
!787 = !DIEnumerator(name: "BUILT_IN_INFD64", value: 100, isUnsigned: true)
!788 = !DIEnumerator(name: "BUILT_IN_INFD128", value: 101, isUnsigned: true)
!789 = !DIEnumerator(name: "BUILT_IN_J0", value: 102, isUnsigned: true)
!790 = !DIEnumerator(name: "BUILT_IN_J0F", value: 103, isUnsigned: true)
!791 = !DIEnumerator(name: "BUILT_IN_J0L", value: 104, isUnsigned: true)
!792 = !DIEnumerator(name: "BUILT_IN_J1", value: 105, isUnsigned: true)
!793 = !DIEnumerator(name: "BUILT_IN_J1F", value: 106, isUnsigned: true)
!794 = !DIEnumerator(name: "BUILT_IN_J1L", value: 107, isUnsigned: true)
!795 = !DIEnumerator(name: "BUILT_IN_JN", value: 108, isUnsigned: true)
!796 = !DIEnumerator(name: "BUILT_IN_JNF", value: 109, isUnsigned: true)
!797 = !DIEnumerator(name: "BUILT_IN_JNL", value: 110, isUnsigned: true)
!798 = !DIEnumerator(name: "BUILT_IN_LCEIL", value: 111, isUnsigned: true)
!799 = !DIEnumerator(name: "BUILT_IN_LCEILF", value: 112, isUnsigned: true)
!800 = !DIEnumerator(name: "BUILT_IN_LCEILL", value: 113, isUnsigned: true)
!801 = !DIEnumerator(name: "BUILT_IN_LDEXP", value: 114, isUnsigned: true)
!802 = !DIEnumerator(name: "BUILT_IN_LDEXPF", value: 115, isUnsigned: true)
!803 = !DIEnumerator(name: "BUILT_IN_LDEXPL", value: 116, isUnsigned: true)
!804 = !DIEnumerator(name: "BUILT_IN_LFLOOR", value: 117, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_LFLOORF", value: 118, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_LFLOORL", value: 119, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_LGAMMA", value: 120, isUnsigned: true)
!808 = !DIEnumerator(name: "BUILT_IN_LGAMMAF", value: 121, isUnsigned: true)
!809 = !DIEnumerator(name: "BUILT_IN_LGAMMAL", value: 122, isUnsigned: true)
!810 = !DIEnumerator(name: "BUILT_IN_LGAMMA_R", value: 123, isUnsigned: true)
!811 = !DIEnumerator(name: "BUILT_IN_LGAMMAF_R", value: 124, isUnsigned: true)
!812 = !DIEnumerator(name: "BUILT_IN_LGAMMAL_R", value: 125, isUnsigned: true)
!813 = !DIEnumerator(name: "BUILT_IN_LLCEIL", value: 126, isUnsigned: true)
!814 = !DIEnumerator(name: "BUILT_IN_LLCEILF", value: 127, isUnsigned: true)
!815 = !DIEnumerator(name: "BUILT_IN_LLCEILL", value: 128, isUnsigned: true)
!816 = !DIEnumerator(name: "BUILT_IN_LLFLOOR", value: 129, isUnsigned: true)
!817 = !DIEnumerator(name: "BUILT_IN_LLFLOORF", value: 130, isUnsigned: true)
!818 = !DIEnumerator(name: "BUILT_IN_LLFLOORL", value: 131, isUnsigned: true)
!819 = !DIEnumerator(name: "BUILT_IN_LLRINT", value: 132, isUnsigned: true)
!820 = !DIEnumerator(name: "BUILT_IN_LLRINTF", value: 133, isUnsigned: true)
!821 = !DIEnumerator(name: "BUILT_IN_LLRINTL", value: 134, isUnsigned: true)
!822 = !DIEnumerator(name: "BUILT_IN_LLROUND", value: 135, isUnsigned: true)
!823 = !DIEnumerator(name: "BUILT_IN_LLROUNDF", value: 136, isUnsigned: true)
!824 = !DIEnumerator(name: "BUILT_IN_LLROUNDL", value: 137, isUnsigned: true)
!825 = !DIEnumerator(name: "BUILT_IN_LOG", value: 138, isUnsigned: true)
!826 = !DIEnumerator(name: "BUILT_IN_LOG10", value: 139, isUnsigned: true)
!827 = !DIEnumerator(name: "BUILT_IN_LOG10F", value: 140, isUnsigned: true)
!828 = !DIEnumerator(name: "BUILT_IN_LOG10L", value: 141, isUnsigned: true)
!829 = !DIEnumerator(name: "BUILT_IN_LOG1P", value: 142, isUnsigned: true)
!830 = !DIEnumerator(name: "BUILT_IN_LOG1PF", value: 143, isUnsigned: true)
!831 = !DIEnumerator(name: "BUILT_IN_LOG1PL", value: 144, isUnsigned: true)
!832 = !DIEnumerator(name: "BUILT_IN_LOG2", value: 145, isUnsigned: true)
!833 = !DIEnumerator(name: "BUILT_IN_LOG2F", value: 146, isUnsigned: true)
!834 = !DIEnumerator(name: "BUILT_IN_LOG2L", value: 147, isUnsigned: true)
!835 = !DIEnumerator(name: "BUILT_IN_LOGB", value: 148, isUnsigned: true)
!836 = !DIEnumerator(name: "BUILT_IN_LOGBF", value: 149, isUnsigned: true)
!837 = !DIEnumerator(name: "BUILT_IN_LOGBL", value: 150, isUnsigned: true)
!838 = !DIEnumerator(name: "BUILT_IN_LOGF", value: 151, isUnsigned: true)
!839 = !DIEnumerator(name: "BUILT_IN_LOGL", value: 152, isUnsigned: true)
!840 = !DIEnumerator(name: "BUILT_IN_LRINT", value: 153, isUnsigned: true)
!841 = !DIEnumerator(name: "BUILT_IN_LRINTF", value: 154, isUnsigned: true)
!842 = !DIEnumerator(name: "BUILT_IN_LRINTL", value: 155, isUnsigned: true)
!843 = !DIEnumerator(name: "BUILT_IN_LROUND", value: 156, isUnsigned: true)
!844 = !DIEnumerator(name: "BUILT_IN_LROUNDF", value: 157, isUnsigned: true)
!845 = !DIEnumerator(name: "BUILT_IN_LROUNDL", value: 158, isUnsigned: true)
!846 = !DIEnumerator(name: "BUILT_IN_MODF", value: 159, isUnsigned: true)
!847 = !DIEnumerator(name: "BUILT_IN_MODFF", value: 160, isUnsigned: true)
!848 = !DIEnumerator(name: "BUILT_IN_MODFL", value: 161, isUnsigned: true)
!849 = !DIEnumerator(name: "BUILT_IN_NAN", value: 162, isUnsigned: true)
!850 = !DIEnumerator(name: "BUILT_IN_NANF", value: 163, isUnsigned: true)
!851 = !DIEnumerator(name: "BUILT_IN_NANL", value: 164, isUnsigned: true)
!852 = !DIEnumerator(name: "BUILT_IN_NAND32", value: 165, isUnsigned: true)
!853 = !DIEnumerator(name: "BUILT_IN_NAND64", value: 166, isUnsigned: true)
!854 = !DIEnumerator(name: "BUILT_IN_NAND128", value: 167, isUnsigned: true)
!855 = !DIEnumerator(name: "BUILT_IN_NANS", value: 168, isUnsigned: true)
!856 = !DIEnumerator(name: "BUILT_IN_NANSF", value: 169, isUnsigned: true)
!857 = !DIEnumerator(name: "BUILT_IN_NANSL", value: 170, isUnsigned: true)
!858 = !DIEnumerator(name: "BUILT_IN_NEARBYINT", value: 171, isUnsigned: true)
!859 = !DIEnumerator(name: "BUILT_IN_NEARBYINTF", value: 172, isUnsigned: true)
!860 = !DIEnumerator(name: "BUILT_IN_NEARBYINTL", value: 173, isUnsigned: true)
!861 = !DIEnumerator(name: "BUILT_IN_NEXTAFTER", value: 174, isUnsigned: true)
!862 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERF", value: 175, isUnsigned: true)
!863 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERL", value: 176, isUnsigned: true)
!864 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARD", value: 177, isUnsigned: true)
!865 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDF", value: 178, isUnsigned: true)
!866 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDL", value: 179, isUnsigned: true)
!867 = !DIEnumerator(name: "BUILT_IN_POW", value: 180, isUnsigned: true)
!868 = !DIEnumerator(name: "BUILT_IN_POW10", value: 181, isUnsigned: true)
!869 = !DIEnumerator(name: "BUILT_IN_POW10F", value: 182, isUnsigned: true)
!870 = !DIEnumerator(name: "BUILT_IN_POW10L", value: 183, isUnsigned: true)
!871 = !DIEnumerator(name: "BUILT_IN_POWF", value: 184, isUnsigned: true)
!872 = !DIEnumerator(name: "BUILT_IN_POWI", value: 185, isUnsigned: true)
!873 = !DIEnumerator(name: "BUILT_IN_POWIF", value: 186, isUnsigned: true)
!874 = !DIEnumerator(name: "BUILT_IN_POWIL", value: 187, isUnsigned: true)
!875 = !DIEnumerator(name: "BUILT_IN_POWL", value: 188, isUnsigned: true)
!876 = !DIEnumerator(name: "BUILT_IN_REMAINDER", value: 189, isUnsigned: true)
!877 = !DIEnumerator(name: "BUILT_IN_REMAINDERF", value: 190, isUnsigned: true)
!878 = !DIEnumerator(name: "BUILT_IN_REMAINDERL", value: 191, isUnsigned: true)
!879 = !DIEnumerator(name: "BUILT_IN_REMQUO", value: 192, isUnsigned: true)
!880 = !DIEnumerator(name: "BUILT_IN_REMQUOF", value: 193, isUnsigned: true)
!881 = !DIEnumerator(name: "BUILT_IN_REMQUOL", value: 194, isUnsigned: true)
!882 = !DIEnumerator(name: "BUILT_IN_RINT", value: 195, isUnsigned: true)
!883 = !DIEnumerator(name: "BUILT_IN_RINTF", value: 196, isUnsigned: true)
!884 = !DIEnumerator(name: "BUILT_IN_RINTL", value: 197, isUnsigned: true)
!885 = !DIEnumerator(name: "BUILT_IN_ROUND", value: 198, isUnsigned: true)
!886 = !DIEnumerator(name: "BUILT_IN_ROUNDF", value: 199, isUnsigned: true)
!887 = !DIEnumerator(name: "BUILT_IN_ROUNDL", value: 200, isUnsigned: true)
!888 = !DIEnumerator(name: "BUILT_IN_SCALB", value: 201, isUnsigned: true)
!889 = !DIEnumerator(name: "BUILT_IN_SCALBF", value: 202, isUnsigned: true)
!890 = !DIEnumerator(name: "BUILT_IN_SCALBL", value: 203, isUnsigned: true)
!891 = !DIEnumerator(name: "BUILT_IN_SCALBLN", value: 204, isUnsigned: true)
!892 = !DIEnumerator(name: "BUILT_IN_SCALBLNF", value: 205, isUnsigned: true)
!893 = !DIEnumerator(name: "BUILT_IN_SCALBLNL", value: 206, isUnsigned: true)
!894 = !DIEnumerator(name: "BUILT_IN_SCALBN", value: 207, isUnsigned: true)
!895 = !DIEnumerator(name: "BUILT_IN_SCALBNF", value: 208, isUnsigned: true)
!896 = !DIEnumerator(name: "BUILT_IN_SCALBNL", value: 209, isUnsigned: true)
!897 = !DIEnumerator(name: "BUILT_IN_SIGNBIT", value: 210, isUnsigned: true)
!898 = !DIEnumerator(name: "BUILT_IN_SIGNBITF", value: 211, isUnsigned: true)
!899 = !DIEnumerator(name: "BUILT_IN_SIGNBITL", value: 212, isUnsigned: true)
!900 = !DIEnumerator(name: "BUILT_IN_SIGNBITD32", value: 213, isUnsigned: true)
!901 = !DIEnumerator(name: "BUILT_IN_SIGNBITD64", value: 214, isUnsigned: true)
!902 = !DIEnumerator(name: "BUILT_IN_SIGNBITD128", value: 215, isUnsigned: true)
!903 = !DIEnumerator(name: "BUILT_IN_SIGNIFICAND", value: 216, isUnsigned: true)
!904 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDF", value: 217, isUnsigned: true)
!905 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDL", value: 218, isUnsigned: true)
!906 = !DIEnumerator(name: "BUILT_IN_SIN", value: 219, isUnsigned: true)
!907 = !DIEnumerator(name: "BUILT_IN_SINCOS", value: 220, isUnsigned: true)
!908 = !DIEnumerator(name: "BUILT_IN_SINCOSF", value: 221, isUnsigned: true)
!909 = !DIEnumerator(name: "BUILT_IN_SINCOSL", value: 222, isUnsigned: true)
!910 = !DIEnumerator(name: "BUILT_IN_SINF", value: 223, isUnsigned: true)
!911 = !DIEnumerator(name: "BUILT_IN_SINH", value: 224, isUnsigned: true)
!912 = !DIEnumerator(name: "BUILT_IN_SINHF", value: 225, isUnsigned: true)
!913 = !DIEnumerator(name: "BUILT_IN_SINHL", value: 226, isUnsigned: true)
!914 = !DIEnumerator(name: "BUILT_IN_SINL", value: 227, isUnsigned: true)
!915 = !DIEnumerator(name: "BUILT_IN_SQRT", value: 228, isUnsigned: true)
!916 = !DIEnumerator(name: "BUILT_IN_SQRTF", value: 229, isUnsigned: true)
!917 = !DIEnumerator(name: "BUILT_IN_SQRTL", value: 230, isUnsigned: true)
!918 = !DIEnumerator(name: "BUILT_IN_TAN", value: 231, isUnsigned: true)
!919 = !DIEnumerator(name: "BUILT_IN_TANF", value: 232, isUnsigned: true)
!920 = !DIEnumerator(name: "BUILT_IN_TANH", value: 233, isUnsigned: true)
!921 = !DIEnumerator(name: "BUILT_IN_TANHF", value: 234, isUnsigned: true)
!922 = !DIEnumerator(name: "BUILT_IN_TANHL", value: 235, isUnsigned: true)
!923 = !DIEnumerator(name: "BUILT_IN_TANL", value: 236, isUnsigned: true)
!924 = !DIEnumerator(name: "BUILT_IN_TGAMMA", value: 237, isUnsigned: true)
!925 = !DIEnumerator(name: "BUILT_IN_TGAMMAF", value: 238, isUnsigned: true)
!926 = !DIEnumerator(name: "BUILT_IN_TGAMMAL", value: 239, isUnsigned: true)
!927 = !DIEnumerator(name: "BUILT_IN_TRUNC", value: 240, isUnsigned: true)
!928 = !DIEnumerator(name: "BUILT_IN_TRUNCF", value: 241, isUnsigned: true)
!929 = !DIEnumerator(name: "BUILT_IN_TRUNCL", value: 242, isUnsigned: true)
!930 = !DIEnumerator(name: "BUILT_IN_Y0", value: 243, isUnsigned: true)
!931 = !DIEnumerator(name: "BUILT_IN_Y0F", value: 244, isUnsigned: true)
!932 = !DIEnumerator(name: "BUILT_IN_Y0L", value: 245, isUnsigned: true)
!933 = !DIEnumerator(name: "BUILT_IN_Y1", value: 246, isUnsigned: true)
!934 = !DIEnumerator(name: "BUILT_IN_Y1F", value: 247, isUnsigned: true)
!935 = !DIEnumerator(name: "BUILT_IN_Y1L", value: 248, isUnsigned: true)
!936 = !DIEnumerator(name: "BUILT_IN_YN", value: 249, isUnsigned: true)
!937 = !DIEnumerator(name: "BUILT_IN_YNF", value: 250, isUnsigned: true)
!938 = !DIEnumerator(name: "BUILT_IN_YNL", value: 251, isUnsigned: true)
!939 = !DIEnumerator(name: "BUILT_IN_CABS", value: 252, isUnsigned: true)
!940 = !DIEnumerator(name: "BUILT_IN_CABSF", value: 253, isUnsigned: true)
!941 = !DIEnumerator(name: "BUILT_IN_CABSL", value: 254, isUnsigned: true)
!942 = !DIEnumerator(name: "BUILT_IN_CACOS", value: 255, isUnsigned: true)
!943 = !DIEnumerator(name: "BUILT_IN_CACOSF", value: 256, isUnsigned: true)
!944 = !DIEnumerator(name: "BUILT_IN_CACOSH", value: 257, isUnsigned: true)
!945 = !DIEnumerator(name: "BUILT_IN_CACOSHF", value: 258, isUnsigned: true)
!946 = !DIEnumerator(name: "BUILT_IN_CACOSHL", value: 259, isUnsigned: true)
!947 = !DIEnumerator(name: "BUILT_IN_CACOSL", value: 260, isUnsigned: true)
!948 = !DIEnumerator(name: "BUILT_IN_CARG", value: 261, isUnsigned: true)
!949 = !DIEnumerator(name: "BUILT_IN_CARGF", value: 262, isUnsigned: true)
!950 = !DIEnumerator(name: "BUILT_IN_CARGL", value: 263, isUnsigned: true)
!951 = !DIEnumerator(name: "BUILT_IN_CASIN", value: 264, isUnsigned: true)
!952 = !DIEnumerator(name: "BUILT_IN_CASINF", value: 265, isUnsigned: true)
!953 = !DIEnumerator(name: "BUILT_IN_CASINH", value: 266, isUnsigned: true)
!954 = !DIEnumerator(name: "BUILT_IN_CASINHF", value: 267, isUnsigned: true)
!955 = !DIEnumerator(name: "BUILT_IN_CASINHL", value: 268, isUnsigned: true)
!956 = !DIEnumerator(name: "BUILT_IN_CASINL", value: 269, isUnsigned: true)
!957 = !DIEnumerator(name: "BUILT_IN_CATAN", value: 270, isUnsigned: true)
!958 = !DIEnumerator(name: "BUILT_IN_CATANF", value: 271, isUnsigned: true)
!959 = !DIEnumerator(name: "BUILT_IN_CATANH", value: 272, isUnsigned: true)
!960 = !DIEnumerator(name: "BUILT_IN_CATANHF", value: 273, isUnsigned: true)
!961 = !DIEnumerator(name: "BUILT_IN_CATANHL", value: 274, isUnsigned: true)
!962 = !DIEnumerator(name: "BUILT_IN_CATANL", value: 275, isUnsigned: true)
!963 = !DIEnumerator(name: "BUILT_IN_CCOS", value: 276, isUnsigned: true)
!964 = !DIEnumerator(name: "BUILT_IN_CCOSF", value: 277, isUnsigned: true)
!965 = !DIEnumerator(name: "BUILT_IN_CCOSH", value: 278, isUnsigned: true)
!966 = !DIEnumerator(name: "BUILT_IN_CCOSHF", value: 279, isUnsigned: true)
!967 = !DIEnumerator(name: "BUILT_IN_CCOSHL", value: 280, isUnsigned: true)
!968 = !DIEnumerator(name: "BUILT_IN_CCOSL", value: 281, isUnsigned: true)
!969 = !DIEnumerator(name: "BUILT_IN_CEXP", value: 282, isUnsigned: true)
!970 = !DIEnumerator(name: "BUILT_IN_CEXPF", value: 283, isUnsigned: true)
!971 = !DIEnumerator(name: "BUILT_IN_CEXPL", value: 284, isUnsigned: true)
!972 = !DIEnumerator(name: "BUILT_IN_CEXPI", value: 285, isUnsigned: true)
!973 = !DIEnumerator(name: "BUILT_IN_CEXPIF", value: 286, isUnsigned: true)
!974 = !DIEnumerator(name: "BUILT_IN_CEXPIL", value: 287, isUnsigned: true)
!975 = !DIEnumerator(name: "BUILT_IN_CIMAG", value: 288, isUnsigned: true)
!976 = !DIEnumerator(name: "BUILT_IN_CIMAGF", value: 289, isUnsigned: true)
!977 = !DIEnumerator(name: "BUILT_IN_CIMAGL", value: 290, isUnsigned: true)
!978 = !DIEnumerator(name: "BUILT_IN_CLOG", value: 291, isUnsigned: true)
!979 = !DIEnumerator(name: "BUILT_IN_CLOGF", value: 292, isUnsigned: true)
!980 = !DIEnumerator(name: "BUILT_IN_CLOGL", value: 293, isUnsigned: true)
!981 = !DIEnumerator(name: "BUILT_IN_CLOG10", value: 294, isUnsigned: true)
!982 = !DIEnumerator(name: "BUILT_IN_CLOG10F", value: 295, isUnsigned: true)
!983 = !DIEnumerator(name: "BUILT_IN_CLOG10L", value: 296, isUnsigned: true)
!984 = !DIEnumerator(name: "BUILT_IN_CONJ", value: 297, isUnsigned: true)
!985 = !DIEnumerator(name: "BUILT_IN_CONJF", value: 298, isUnsigned: true)
!986 = !DIEnumerator(name: "BUILT_IN_CONJL", value: 299, isUnsigned: true)
!987 = !DIEnumerator(name: "BUILT_IN_CPOW", value: 300, isUnsigned: true)
!988 = !DIEnumerator(name: "BUILT_IN_CPOWF", value: 301, isUnsigned: true)
!989 = !DIEnumerator(name: "BUILT_IN_CPOWL", value: 302, isUnsigned: true)
!990 = !DIEnumerator(name: "BUILT_IN_CPROJ", value: 303, isUnsigned: true)
!991 = !DIEnumerator(name: "BUILT_IN_CPROJF", value: 304, isUnsigned: true)
!992 = !DIEnumerator(name: "BUILT_IN_CPROJL", value: 305, isUnsigned: true)
!993 = !DIEnumerator(name: "BUILT_IN_CREAL", value: 306, isUnsigned: true)
!994 = !DIEnumerator(name: "BUILT_IN_CREALF", value: 307, isUnsigned: true)
!995 = !DIEnumerator(name: "BUILT_IN_CREALL", value: 308, isUnsigned: true)
!996 = !DIEnumerator(name: "BUILT_IN_CSIN", value: 309, isUnsigned: true)
!997 = !DIEnumerator(name: "BUILT_IN_CSINF", value: 310, isUnsigned: true)
!998 = !DIEnumerator(name: "BUILT_IN_CSINH", value: 311, isUnsigned: true)
!999 = !DIEnumerator(name: "BUILT_IN_CSINHF", value: 312, isUnsigned: true)
!1000 = !DIEnumerator(name: "BUILT_IN_CSINHL", value: 313, isUnsigned: true)
!1001 = !DIEnumerator(name: "BUILT_IN_CSINL", value: 314, isUnsigned: true)
!1002 = !DIEnumerator(name: "BUILT_IN_CSQRT", value: 315, isUnsigned: true)
!1003 = !DIEnumerator(name: "BUILT_IN_CSQRTF", value: 316, isUnsigned: true)
!1004 = !DIEnumerator(name: "BUILT_IN_CSQRTL", value: 317, isUnsigned: true)
!1005 = !DIEnumerator(name: "BUILT_IN_CTAN", value: 318, isUnsigned: true)
!1006 = !DIEnumerator(name: "BUILT_IN_CTANF", value: 319, isUnsigned: true)
!1007 = !DIEnumerator(name: "BUILT_IN_CTANH", value: 320, isUnsigned: true)
!1008 = !DIEnumerator(name: "BUILT_IN_CTANHF", value: 321, isUnsigned: true)
!1009 = !DIEnumerator(name: "BUILT_IN_CTANHL", value: 322, isUnsigned: true)
!1010 = !DIEnumerator(name: "BUILT_IN_CTANL", value: 323, isUnsigned: true)
!1011 = !DIEnumerator(name: "BUILT_IN_BCMP", value: 324, isUnsigned: true)
!1012 = !DIEnumerator(name: "BUILT_IN_BCOPY", value: 325, isUnsigned: true)
!1013 = !DIEnumerator(name: "BUILT_IN_BZERO", value: 326, isUnsigned: true)
!1014 = !DIEnumerator(name: "BUILT_IN_INDEX", value: 327, isUnsigned: true)
!1015 = !DIEnumerator(name: "BUILT_IN_MEMCHR", value: 328, isUnsigned: true)
!1016 = !DIEnumerator(name: "BUILT_IN_MEMCMP", value: 329, isUnsigned: true)
!1017 = !DIEnumerator(name: "BUILT_IN_MEMCPY", value: 330, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUILT_IN_MEMMOVE", value: 331, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUILT_IN_MEMPCPY", value: 332, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUILT_IN_MEMSET", value: 333, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUILT_IN_RINDEX", value: 334, isUnsigned: true)
!1022 = !DIEnumerator(name: "BUILT_IN_STPCPY", value: 335, isUnsigned: true)
!1023 = !DIEnumerator(name: "BUILT_IN_STPNCPY", value: 336, isUnsigned: true)
!1024 = !DIEnumerator(name: "BUILT_IN_STRCASECMP", value: 337, isUnsigned: true)
!1025 = !DIEnumerator(name: "BUILT_IN_STRCAT", value: 338, isUnsigned: true)
!1026 = !DIEnumerator(name: "BUILT_IN_STRCHR", value: 339, isUnsigned: true)
!1027 = !DIEnumerator(name: "BUILT_IN_STRCMP", value: 340, isUnsigned: true)
!1028 = !DIEnumerator(name: "BUILT_IN_STRCPY", value: 341, isUnsigned: true)
!1029 = !DIEnumerator(name: "BUILT_IN_STRCSPN", value: 342, isUnsigned: true)
!1030 = !DIEnumerator(name: "BUILT_IN_STRDUP", value: 343, isUnsigned: true)
!1031 = !DIEnumerator(name: "BUILT_IN_STRNDUP", value: 344, isUnsigned: true)
!1032 = !DIEnumerator(name: "BUILT_IN_STRLEN", value: 345, isUnsigned: true)
!1033 = !DIEnumerator(name: "BUILT_IN_STRNCASECMP", value: 346, isUnsigned: true)
!1034 = !DIEnumerator(name: "BUILT_IN_STRNCAT", value: 347, isUnsigned: true)
!1035 = !DIEnumerator(name: "BUILT_IN_STRNCMP", value: 348, isUnsigned: true)
!1036 = !DIEnumerator(name: "BUILT_IN_STRNCPY", value: 349, isUnsigned: true)
!1037 = !DIEnumerator(name: "BUILT_IN_STRPBRK", value: 350, isUnsigned: true)
!1038 = !DIEnumerator(name: "BUILT_IN_STRRCHR", value: 351, isUnsigned: true)
!1039 = !DIEnumerator(name: "BUILT_IN_STRSPN", value: 352, isUnsigned: true)
!1040 = !DIEnumerator(name: "BUILT_IN_STRSTR", value: 353, isUnsigned: true)
!1041 = !DIEnumerator(name: "BUILT_IN_FPRINTF", value: 354, isUnsigned: true)
!1042 = !DIEnumerator(name: "BUILT_IN_FPRINTF_UNLOCKED", value: 355, isUnsigned: true)
!1043 = !DIEnumerator(name: "BUILT_IN_PUTC", value: 356, isUnsigned: true)
!1044 = !DIEnumerator(name: "BUILT_IN_PUTC_UNLOCKED", value: 357, isUnsigned: true)
!1045 = !DIEnumerator(name: "BUILT_IN_FPUTC", value: 358, isUnsigned: true)
!1046 = !DIEnumerator(name: "BUILT_IN_FPUTC_UNLOCKED", value: 359, isUnsigned: true)
!1047 = !DIEnumerator(name: "BUILT_IN_FPUTS", value: 360, isUnsigned: true)
!1048 = !DIEnumerator(name: "BUILT_IN_FPUTS_UNLOCKED", value: 361, isUnsigned: true)
!1049 = !DIEnumerator(name: "BUILT_IN_FSCANF", value: 362, isUnsigned: true)
!1050 = !DIEnumerator(name: "BUILT_IN_FWRITE", value: 363, isUnsigned: true)
!1051 = !DIEnumerator(name: "BUILT_IN_FWRITE_UNLOCKED", value: 364, isUnsigned: true)
!1052 = !DIEnumerator(name: "BUILT_IN_PRINTF", value: 365, isUnsigned: true)
!1053 = !DIEnumerator(name: "BUILT_IN_PRINTF_UNLOCKED", value: 366, isUnsigned: true)
!1054 = !DIEnumerator(name: "BUILT_IN_PUTCHAR", value: 367, isUnsigned: true)
!1055 = !DIEnumerator(name: "BUILT_IN_PUTCHAR_UNLOCKED", value: 368, isUnsigned: true)
!1056 = !DIEnumerator(name: "BUILT_IN_PUTS", value: 369, isUnsigned: true)
!1057 = !DIEnumerator(name: "BUILT_IN_PUTS_UNLOCKED", value: 370, isUnsigned: true)
!1058 = !DIEnumerator(name: "BUILT_IN_SCANF", value: 371, isUnsigned: true)
!1059 = !DIEnumerator(name: "BUILT_IN_SNPRINTF", value: 372, isUnsigned: true)
!1060 = !DIEnumerator(name: "BUILT_IN_SPRINTF", value: 373, isUnsigned: true)
!1061 = !DIEnumerator(name: "BUILT_IN_SSCANF", value: 374, isUnsigned: true)
!1062 = !DIEnumerator(name: "BUILT_IN_VFPRINTF", value: 375, isUnsigned: true)
!1063 = !DIEnumerator(name: "BUILT_IN_VFSCANF", value: 376, isUnsigned: true)
!1064 = !DIEnumerator(name: "BUILT_IN_VPRINTF", value: 377, isUnsigned: true)
!1065 = !DIEnumerator(name: "BUILT_IN_VSCANF", value: 378, isUnsigned: true)
!1066 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF", value: 379, isUnsigned: true)
!1067 = !DIEnumerator(name: "BUILT_IN_VSPRINTF", value: 380, isUnsigned: true)
!1068 = !DIEnumerator(name: "BUILT_IN_VSSCANF", value: 381, isUnsigned: true)
!1069 = !DIEnumerator(name: "BUILT_IN_ISALNUM", value: 382, isUnsigned: true)
!1070 = !DIEnumerator(name: "BUILT_IN_ISALPHA", value: 383, isUnsigned: true)
!1071 = !DIEnumerator(name: "BUILT_IN_ISASCII", value: 384, isUnsigned: true)
!1072 = !DIEnumerator(name: "BUILT_IN_ISBLANK", value: 385, isUnsigned: true)
!1073 = !DIEnumerator(name: "BUILT_IN_ISCNTRL", value: 386, isUnsigned: true)
!1074 = !DIEnumerator(name: "BUILT_IN_ISDIGIT", value: 387, isUnsigned: true)
!1075 = !DIEnumerator(name: "BUILT_IN_ISGRAPH", value: 388, isUnsigned: true)
!1076 = !DIEnumerator(name: "BUILT_IN_ISLOWER", value: 389, isUnsigned: true)
!1077 = !DIEnumerator(name: "BUILT_IN_ISPRINT", value: 390, isUnsigned: true)
!1078 = !DIEnumerator(name: "BUILT_IN_ISPUNCT", value: 391, isUnsigned: true)
!1079 = !DIEnumerator(name: "BUILT_IN_ISSPACE", value: 392, isUnsigned: true)
!1080 = !DIEnumerator(name: "BUILT_IN_ISUPPER", value: 393, isUnsigned: true)
!1081 = !DIEnumerator(name: "BUILT_IN_ISXDIGIT", value: 394, isUnsigned: true)
!1082 = !DIEnumerator(name: "BUILT_IN_TOASCII", value: 395, isUnsigned: true)
!1083 = !DIEnumerator(name: "BUILT_IN_TOLOWER", value: 396, isUnsigned: true)
!1084 = !DIEnumerator(name: "BUILT_IN_TOUPPER", value: 397, isUnsigned: true)
!1085 = !DIEnumerator(name: "BUILT_IN_ISWALNUM", value: 398, isUnsigned: true)
!1086 = !DIEnumerator(name: "BUILT_IN_ISWALPHA", value: 399, isUnsigned: true)
!1087 = !DIEnumerator(name: "BUILT_IN_ISWBLANK", value: 400, isUnsigned: true)
!1088 = !DIEnumerator(name: "BUILT_IN_ISWCNTRL", value: 401, isUnsigned: true)
!1089 = !DIEnumerator(name: "BUILT_IN_ISWDIGIT", value: 402, isUnsigned: true)
!1090 = !DIEnumerator(name: "BUILT_IN_ISWGRAPH", value: 403, isUnsigned: true)
!1091 = !DIEnumerator(name: "BUILT_IN_ISWLOWER", value: 404, isUnsigned: true)
!1092 = !DIEnumerator(name: "BUILT_IN_ISWPRINT", value: 405, isUnsigned: true)
!1093 = !DIEnumerator(name: "BUILT_IN_ISWPUNCT", value: 406, isUnsigned: true)
!1094 = !DIEnumerator(name: "BUILT_IN_ISWSPACE", value: 407, isUnsigned: true)
!1095 = !DIEnumerator(name: "BUILT_IN_ISWUPPER", value: 408, isUnsigned: true)
!1096 = !DIEnumerator(name: "BUILT_IN_ISWXDIGIT", value: 409, isUnsigned: true)
!1097 = !DIEnumerator(name: "BUILT_IN_TOWLOWER", value: 410, isUnsigned: true)
!1098 = !DIEnumerator(name: "BUILT_IN_TOWUPPER", value: 411, isUnsigned: true)
!1099 = !DIEnumerator(name: "BUILT_IN_ABORT", value: 412, isUnsigned: true)
!1100 = !DIEnumerator(name: "BUILT_IN_ABS", value: 413, isUnsigned: true)
!1101 = !DIEnumerator(name: "BUILT_IN_AGGREGATE_INCOMING_ADDRESS", value: 414, isUnsigned: true)
!1102 = !DIEnumerator(name: "BUILT_IN_ALLOCA", value: 415, isUnsigned: true)
!1103 = !DIEnumerator(name: "BUILT_IN_APPLY", value: 416, isUnsigned: true)
!1104 = !DIEnumerator(name: "BUILT_IN_APPLY_ARGS", value: 417, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUILT_IN_ARGS_INFO", value: 418, isUnsigned: true)
!1106 = !DIEnumerator(name: "BUILT_IN_BSWAP32", value: 419, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUILT_IN_BSWAP64", value: 420, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUILT_IN_CLEAR_CACHE", value: 421, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUILT_IN_CALLOC", value: 422, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUILT_IN_CLASSIFY_TYPE", value: 423, isUnsigned: true)
!1111 = !DIEnumerator(name: "BUILT_IN_CLZ", value: 424, isUnsigned: true)
!1112 = !DIEnumerator(name: "BUILT_IN_CLZIMAX", value: 425, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUILT_IN_CLZL", value: 426, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUILT_IN_CLZLL", value: 427, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUILT_IN_CONSTANT_P", value: 428, isUnsigned: true)
!1116 = !DIEnumerator(name: "BUILT_IN_CTZ", value: 429, isUnsigned: true)
!1117 = !DIEnumerator(name: "BUILT_IN_CTZIMAX", value: 430, isUnsigned: true)
!1118 = !DIEnumerator(name: "BUILT_IN_CTZL", value: 431, isUnsigned: true)
!1119 = !DIEnumerator(name: "BUILT_IN_CTZLL", value: 432, isUnsigned: true)
!1120 = !DIEnumerator(name: "BUILT_IN_DCGETTEXT", value: 433, isUnsigned: true)
!1121 = !DIEnumerator(name: "BUILT_IN_DGETTEXT", value: 434, isUnsigned: true)
!1122 = !DIEnumerator(name: "BUILT_IN_DWARF_CFA", value: 435, isUnsigned: true)
!1123 = !DIEnumerator(name: "BUILT_IN_DWARF_SP_COLUMN", value: 436, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUILT_IN_EH_RETURN", value: 437, isUnsigned: true)
!1125 = !DIEnumerator(name: "BUILT_IN_EH_RETURN_DATA_REGNO", value: 438, isUnsigned: true)
!1126 = !DIEnumerator(name: "BUILT_IN_EXECL", value: 439, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUILT_IN_EXECLP", value: 440, isUnsigned: true)
!1128 = !DIEnumerator(name: "BUILT_IN_EXECLE", value: 441, isUnsigned: true)
!1129 = !DIEnumerator(name: "BUILT_IN_EXECV", value: 442, isUnsigned: true)
!1130 = !DIEnumerator(name: "BUILT_IN_EXECVP", value: 443, isUnsigned: true)
!1131 = !DIEnumerator(name: "BUILT_IN_EXECVE", value: 444, isUnsigned: true)
!1132 = !DIEnumerator(name: "BUILT_IN_EXIT", value: 445, isUnsigned: true)
!1133 = !DIEnumerator(name: "BUILT_IN_EXPECT", value: 446, isUnsigned: true)
!1134 = !DIEnumerator(name: "BUILT_IN_EXTEND_POINTER", value: 447, isUnsigned: true)
!1135 = !DIEnumerator(name: "BUILT_IN_EXTRACT_RETURN_ADDR", value: 448, isUnsigned: true)
!1136 = !DIEnumerator(name: "BUILT_IN_FFS", value: 449, isUnsigned: true)
!1137 = !DIEnumerator(name: "BUILT_IN_FFSIMAX", value: 450, isUnsigned: true)
!1138 = !DIEnumerator(name: "BUILT_IN_FFSL", value: 451, isUnsigned: true)
!1139 = !DIEnumerator(name: "BUILT_IN_FFSLL", value: 452, isUnsigned: true)
!1140 = !DIEnumerator(name: "BUILT_IN_FORK", value: 453, isUnsigned: true)
!1141 = !DIEnumerator(name: "BUILT_IN_FRAME_ADDRESS", value: 454, isUnsigned: true)
!1142 = !DIEnumerator(name: "BUILT_IN_FREE", value: 455, isUnsigned: true)
!1143 = !DIEnumerator(name: "BUILT_IN_FROB_RETURN_ADDR", value: 456, isUnsigned: true)
!1144 = !DIEnumerator(name: "BUILT_IN_GETTEXT", value: 457, isUnsigned: true)
!1145 = !DIEnumerator(name: "BUILT_IN_IMAXABS", value: 458, isUnsigned: true)
!1146 = !DIEnumerator(name: "BUILT_IN_INIT_DWARF_REG_SIZES", value: 459, isUnsigned: true)
!1147 = !DIEnumerator(name: "BUILT_IN_FINITE", value: 460, isUnsigned: true)
!1148 = !DIEnumerator(name: "BUILT_IN_FINITEF", value: 461, isUnsigned: true)
!1149 = !DIEnumerator(name: "BUILT_IN_FINITEL", value: 462, isUnsigned: true)
!1150 = !DIEnumerator(name: "BUILT_IN_FINITED32", value: 463, isUnsigned: true)
!1151 = !DIEnumerator(name: "BUILT_IN_FINITED64", value: 464, isUnsigned: true)
!1152 = !DIEnumerator(name: "BUILT_IN_FINITED128", value: 465, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUILT_IN_FPCLASSIFY", value: 466, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUILT_IN_ISFINITE", value: 467, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUILT_IN_ISINF_SIGN", value: 468, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUILT_IN_ISINF", value: 469, isUnsigned: true)
!1157 = !DIEnumerator(name: "BUILT_IN_ISINFF", value: 470, isUnsigned: true)
!1158 = !DIEnumerator(name: "BUILT_IN_ISINFL", value: 471, isUnsigned: true)
!1159 = !DIEnumerator(name: "BUILT_IN_ISINFD32", value: 472, isUnsigned: true)
!1160 = !DIEnumerator(name: "BUILT_IN_ISINFD64", value: 473, isUnsigned: true)
!1161 = !DIEnumerator(name: "BUILT_IN_ISINFD128", value: 474, isUnsigned: true)
!1162 = !DIEnumerator(name: "BUILT_IN_ISNAN", value: 475, isUnsigned: true)
!1163 = !DIEnumerator(name: "BUILT_IN_ISNANF", value: 476, isUnsigned: true)
!1164 = !DIEnumerator(name: "BUILT_IN_ISNANL", value: 477, isUnsigned: true)
!1165 = !DIEnumerator(name: "BUILT_IN_ISNAND32", value: 478, isUnsigned: true)
!1166 = !DIEnumerator(name: "BUILT_IN_ISNAND64", value: 479, isUnsigned: true)
!1167 = !DIEnumerator(name: "BUILT_IN_ISNAND128", value: 480, isUnsigned: true)
!1168 = !DIEnumerator(name: "BUILT_IN_ISNORMAL", value: 481, isUnsigned: true)
!1169 = !DIEnumerator(name: "BUILT_IN_ISGREATER", value: 482, isUnsigned: true)
!1170 = !DIEnumerator(name: "BUILT_IN_ISGREATEREQUAL", value: 483, isUnsigned: true)
!1171 = !DIEnumerator(name: "BUILT_IN_ISLESS", value: 484, isUnsigned: true)
!1172 = !DIEnumerator(name: "BUILT_IN_ISLESSEQUAL", value: 485, isUnsigned: true)
!1173 = !DIEnumerator(name: "BUILT_IN_ISLESSGREATER", value: 486, isUnsigned: true)
!1174 = !DIEnumerator(name: "BUILT_IN_ISUNORDERED", value: 487, isUnsigned: true)
!1175 = !DIEnumerator(name: "BUILT_IN_LABS", value: 488, isUnsigned: true)
!1176 = !DIEnumerator(name: "BUILT_IN_LLABS", value: 489, isUnsigned: true)
!1177 = !DIEnumerator(name: "BUILT_IN_LONGJMP", value: 490, isUnsigned: true)
!1178 = !DIEnumerator(name: "BUILT_IN_MALLOC", value: 491, isUnsigned: true)
!1179 = !DIEnumerator(name: "BUILT_IN_NEXT_ARG", value: 492, isUnsigned: true)
!1180 = !DIEnumerator(name: "BUILT_IN_PARITY", value: 493, isUnsigned: true)
!1181 = !DIEnumerator(name: "BUILT_IN_PARITYIMAX", value: 494, isUnsigned: true)
!1182 = !DIEnumerator(name: "BUILT_IN_PARITYL", value: 495, isUnsigned: true)
!1183 = !DIEnumerator(name: "BUILT_IN_PARITYLL", value: 496, isUnsigned: true)
!1184 = !DIEnumerator(name: "BUILT_IN_POPCOUNT", value: 497, isUnsigned: true)
!1185 = !DIEnumerator(name: "BUILT_IN_POPCOUNTIMAX", value: 498, isUnsigned: true)
!1186 = !DIEnumerator(name: "BUILT_IN_POPCOUNTL", value: 499, isUnsigned: true)
!1187 = !DIEnumerator(name: "BUILT_IN_POPCOUNTLL", value: 500, isUnsigned: true)
!1188 = !DIEnumerator(name: "BUILT_IN_PREFETCH", value: 501, isUnsigned: true)
!1189 = !DIEnumerator(name: "BUILT_IN_REALLOC", value: 502, isUnsigned: true)
!1190 = !DIEnumerator(name: "BUILT_IN_RETURN", value: 503, isUnsigned: true)
!1191 = !DIEnumerator(name: "BUILT_IN_RETURN_ADDRESS", value: 504, isUnsigned: true)
!1192 = !DIEnumerator(name: "BUILT_IN_SAVEREGS", value: 505, isUnsigned: true)
!1193 = !DIEnumerator(name: "BUILT_IN_SETJMP", value: 506, isUnsigned: true)
!1194 = !DIEnumerator(name: "BUILT_IN_STRFMON", value: 507, isUnsigned: true)
!1195 = !DIEnumerator(name: "BUILT_IN_STRFTIME", value: 508, isUnsigned: true)
!1196 = !DIEnumerator(name: "BUILT_IN_TRAP", value: 509, isUnsigned: true)
!1197 = !DIEnumerator(name: "BUILT_IN_UNREACHABLE", value: 510, isUnsigned: true)
!1198 = !DIEnumerator(name: "BUILT_IN_UNWIND_INIT", value: 511, isUnsigned: true)
!1199 = !DIEnumerator(name: "BUILT_IN_UPDATE_SETJMP_BUF", value: 512, isUnsigned: true)
!1200 = !DIEnumerator(name: "BUILT_IN_VA_COPY", value: 513, isUnsigned: true)
!1201 = !DIEnumerator(name: "BUILT_IN_VA_END", value: 514, isUnsigned: true)
!1202 = !DIEnumerator(name: "BUILT_IN_VA_START", value: 515, isUnsigned: true)
!1203 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK", value: 516, isUnsigned: true)
!1204 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK_LEN", value: 517, isUnsigned: true)
!1205 = !DIEnumerator(name: "BUILT_IN__EXIT", value: 518, isUnsigned: true)
!1206 = !DIEnumerator(name: "BUILT_IN__EXIT2", value: 519, isUnsigned: true)
!1207 = !DIEnumerator(name: "BUILT_IN_INIT_TRAMPOLINE", value: 520, isUnsigned: true)
!1208 = !DIEnumerator(name: "BUILT_IN_ADJUST_TRAMPOLINE", value: 521, isUnsigned: true)
!1209 = !DIEnumerator(name: "BUILT_IN_NONLOCAL_GOTO", value: 522, isUnsigned: true)
!1210 = !DIEnumerator(name: "BUILT_IN_SETJMP_SETUP", value: 523, isUnsigned: true)
!1211 = !DIEnumerator(name: "BUILT_IN_SETJMP_DISPATCHER", value: 524, isUnsigned: true)
!1212 = !DIEnumerator(name: "BUILT_IN_SETJMP_RECEIVER", value: 525, isUnsigned: true)
!1213 = !DIEnumerator(name: "BUILT_IN_STACK_SAVE", value: 526, isUnsigned: true)
!1214 = !DIEnumerator(name: "BUILT_IN_STACK_RESTORE", value: 527, isUnsigned: true)
!1215 = !DIEnumerator(name: "BUILT_IN_OBJECT_SIZE", value: 528, isUnsigned: true)
!1216 = !DIEnumerator(name: "BUILT_IN_MEMCPY_CHK", value: 529, isUnsigned: true)
!1217 = !DIEnumerator(name: "BUILT_IN_MEMMOVE_CHK", value: 530, isUnsigned: true)
!1218 = !DIEnumerator(name: "BUILT_IN_MEMPCPY_CHK", value: 531, isUnsigned: true)
!1219 = !DIEnumerator(name: "BUILT_IN_MEMSET_CHK", value: 532, isUnsigned: true)
!1220 = !DIEnumerator(name: "BUILT_IN_STPCPY_CHK", value: 533, isUnsigned: true)
!1221 = !DIEnumerator(name: "BUILT_IN_STRCAT_CHK", value: 534, isUnsigned: true)
!1222 = !DIEnumerator(name: "BUILT_IN_STRCPY_CHK", value: 535, isUnsigned: true)
!1223 = !DIEnumerator(name: "BUILT_IN_STRNCAT_CHK", value: 536, isUnsigned: true)
!1224 = !DIEnumerator(name: "BUILT_IN_STRNCPY_CHK", value: 537, isUnsigned: true)
!1225 = !DIEnumerator(name: "BUILT_IN_SNPRINTF_CHK", value: 538, isUnsigned: true)
!1226 = !DIEnumerator(name: "BUILT_IN_SPRINTF_CHK", value: 539, isUnsigned: true)
!1227 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF_CHK", value: 540, isUnsigned: true)
!1228 = !DIEnumerator(name: "BUILT_IN_VSPRINTF_CHK", value: 541, isUnsigned: true)
!1229 = !DIEnumerator(name: "BUILT_IN_FPRINTF_CHK", value: 542, isUnsigned: true)
!1230 = !DIEnumerator(name: "BUILT_IN_PRINTF_CHK", value: 543, isUnsigned: true)
!1231 = !DIEnumerator(name: "BUILT_IN_VFPRINTF_CHK", value: 544, isUnsigned: true)
!1232 = !DIEnumerator(name: "BUILT_IN_VPRINTF_CHK", value: 545, isUnsigned: true)
!1233 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_ENTER", value: 546, isUnsigned: true)
!1234 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_EXIT", value: 547, isUnsigned: true)
!1235 = !DIEnumerator(name: "BUILT_IN_EMUTLS_GET_ADDRESS", value: 548, isUnsigned: true)
!1236 = !DIEnumerator(name: "BUILT_IN_EMUTLS_REGISTER_COMMON", value: 549, isUnsigned: true)
!1237 = !DIEnumerator(name: "BUILT_IN_UNWIND_RESUME", value: 550, isUnsigned: true)
!1238 = !DIEnumerator(name: "BUILT_IN_CXA_END_CLEANUP", value: 551, isUnsigned: true)
!1239 = !DIEnumerator(name: "BUILT_IN_EH_POINTER", value: 552, isUnsigned: true)
!1240 = !DIEnumerator(name: "BUILT_IN_EH_FILTER", value: 553, isUnsigned: true)
!1241 = !DIEnumerator(name: "BUILT_IN_EH_COPY_VALUES", value: 554, isUnsigned: true)
!1242 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_N", value: 555, isUnsigned: true)
!1243 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_1", value: 556, isUnsigned: true)
!1244 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_2", value: 557, isUnsigned: true)
!1245 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_4", value: 558, isUnsigned: true)
!1246 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_8", value: 559, isUnsigned: true)
!1247 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_16", value: 560, isUnsigned: true)
!1248 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_N", value: 561, isUnsigned: true)
!1249 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_1", value: 562, isUnsigned: true)
!1250 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_2", value: 563, isUnsigned: true)
!1251 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_4", value: 564, isUnsigned: true)
!1252 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_8", value: 565, isUnsigned: true)
!1253 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_16", value: 566, isUnsigned: true)
!1254 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_N", value: 567, isUnsigned: true)
!1255 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_1", value: 568, isUnsigned: true)
!1256 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_2", value: 569, isUnsigned: true)
!1257 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_4", value: 570, isUnsigned: true)
!1258 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_8", value: 571, isUnsigned: true)
!1259 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_16", value: 572, isUnsigned: true)
!1260 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_N", value: 573, isUnsigned: true)
!1261 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_1", value: 574, isUnsigned: true)
!1262 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_2", value: 575, isUnsigned: true)
!1263 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_4", value: 576, isUnsigned: true)
!1264 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_8", value: 577, isUnsigned: true)
!1265 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_16", value: 578, isUnsigned: true)
!1266 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_N", value: 579, isUnsigned: true)
!1267 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_1", value: 580, isUnsigned: true)
!1268 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_2", value: 581, isUnsigned: true)
!1269 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_4", value: 582, isUnsigned: true)
!1270 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_8", value: 583, isUnsigned: true)
!1271 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_16", value: 584, isUnsigned: true)
!1272 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_N", value: 585, isUnsigned: true)
!1273 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_1", value: 586, isUnsigned: true)
!1274 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_2", value: 587, isUnsigned: true)
!1275 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_4", value: 588, isUnsigned: true)
!1276 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_8", value: 589, isUnsigned: true)
!1277 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_16", value: 590, isUnsigned: true)
!1278 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_N", value: 591, isUnsigned: true)
!1279 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_1", value: 592, isUnsigned: true)
!1280 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_2", value: 593, isUnsigned: true)
!1281 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_4", value: 594, isUnsigned: true)
!1282 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_8", value: 595, isUnsigned: true)
!1283 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_16", value: 596, isUnsigned: true)
!1284 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_N", value: 597, isUnsigned: true)
!1285 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_1", value: 598, isUnsigned: true)
!1286 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_2", value: 599, isUnsigned: true)
!1287 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_4", value: 600, isUnsigned: true)
!1288 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_8", value: 601, isUnsigned: true)
!1289 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_16", value: 602, isUnsigned: true)
!1290 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_N", value: 603, isUnsigned: true)
!1291 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_1", value: 604, isUnsigned: true)
!1292 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_2", value: 605, isUnsigned: true)
!1293 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_4", value: 606, isUnsigned: true)
!1294 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_8", value: 607, isUnsigned: true)
!1295 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_16", value: 608, isUnsigned: true)
!1296 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_N", value: 609, isUnsigned: true)
!1297 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_1", value: 610, isUnsigned: true)
!1298 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_2", value: 611, isUnsigned: true)
!1299 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_4", value: 612, isUnsigned: true)
!1300 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_8", value: 613, isUnsigned: true)
!1301 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_16", value: 614, isUnsigned: true)
!1302 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_N", value: 615, isUnsigned: true)
!1303 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_1", value: 616, isUnsigned: true)
!1304 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_2", value: 617, isUnsigned: true)
!1305 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_4", value: 618, isUnsigned: true)
!1306 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_8", value: 619, isUnsigned: true)
!1307 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_16", value: 620, isUnsigned: true)
!1308 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_N", value: 621, isUnsigned: true)
!1309 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_1", value: 622, isUnsigned: true)
!1310 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_2", value: 623, isUnsigned: true)
!1311 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_4", value: 624, isUnsigned: true)
!1312 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_8", value: 625, isUnsigned: true)
!1313 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_16", value: 626, isUnsigned: true)
!1314 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_N", value: 627, isUnsigned: true)
!1315 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_1", value: 628, isUnsigned: true)
!1316 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_2", value: 629, isUnsigned: true)
!1317 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_4", value: 630, isUnsigned: true)
!1318 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_8", value: 631, isUnsigned: true)
!1319 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_16", value: 632, isUnsigned: true)
!1320 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_N", value: 633, isUnsigned: true)
!1321 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_1", value: 634, isUnsigned: true)
!1322 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_2", value: 635, isUnsigned: true)
!1323 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_4", value: 636, isUnsigned: true)
!1324 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_8", value: 637, isUnsigned: true)
!1325 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_16", value: 638, isUnsigned: true)
!1326 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_N", value: 639, isUnsigned: true)
!1327 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_1", value: 640, isUnsigned: true)
!1328 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_2", value: 641, isUnsigned: true)
!1329 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_4", value: 642, isUnsigned: true)
!1330 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_8", value: 643, isUnsigned: true)
!1331 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_16", value: 644, isUnsigned: true)
!1332 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_N", value: 645, isUnsigned: true)
!1333 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_1", value: 646, isUnsigned: true)
!1334 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_2", value: 647, isUnsigned: true)
!1335 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_4", value: 648, isUnsigned: true)
!1336 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_8", value: 649, isUnsigned: true)
!1337 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_16", value: 650, isUnsigned: true)
!1338 = !DIEnumerator(name: "BUILT_IN_SYNCHRONIZE", value: 651, isUnsigned: true)
!1339 = !DIEnumerator(name: "BUILT_IN_OMP_GET_THREAD_NUM", value: 652, isUnsigned: true)
!1340 = !DIEnumerator(name: "BUILT_IN_OMP_GET_NUM_THREADS", value: 653, isUnsigned: true)
!1341 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_START", value: 654, isUnsigned: true)
!1342 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_END", value: 655, isUnsigned: true)
!1343 = !DIEnumerator(name: "BUILT_IN_GOMP_BARRIER", value: 656, isUnsigned: true)
!1344 = !DIEnumerator(name: "BUILT_IN_GOMP_TASKWAIT", value: 657, isUnsigned: true)
!1345 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_START", value: 658, isUnsigned: true)
!1346 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_END", value: 659, isUnsigned: true)
!1347 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_START", value: 660, isUnsigned: true)
!1348 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_END", value: 661, isUnsigned: true)
!1349 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_START", value: 662, isUnsigned: true)
!1350 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_START", value: 663, isUnsigned: true)
!1351 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_START", value: 664, isUnsigned: true)
!1352 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_START", value: 665, isUnsigned: true)
!1353 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START", value: 666, isUnsigned: true)
!1354 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START", value: 667, isUnsigned: true)
!1355 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START", value: 668, isUnsigned: true)
!1356 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START", value: 669, isUnsigned: true)
!1357 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_NEXT", value: 670, isUnsigned: true)
!1358 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT", value: 671, isUnsigned: true)
!1359 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_NEXT", value: 672, isUnsigned: true)
!1360 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_NEXT", value: 673, isUnsigned: true)
!1361 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT", value: 674, isUnsigned: true)
!1362 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT", value: 675, isUnsigned: true)
!1363 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT", value: 676, isUnsigned: true)
!1364 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT", value: 677, isUnsigned: true)
!1365 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_START", value: 678, isUnsigned: true)
!1366 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START", value: 679, isUnsigned: true)
!1367 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_START", value: 680, isUnsigned: true)
!1368 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START", value: 681, isUnsigned: true)
!1369 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START", value: 682, isUnsigned: true)
!1370 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START", value: 683, isUnsigned: true)
!1371 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START", value: 684, isUnsigned: true)
!1372 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START", value: 685, isUnsigned: true)
!1373 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT", value: 686, isUnsigned: true)
!1374 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT", value: 687, isUnsigned: true)
!1375 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT", value: 688, isUnsigned: true)
!1376 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT", value: 689, isUnsigned: true)
!1377 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT", value: 690, isUnsigned: true)
!1378 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT", value: 691, isUnsigned: true)
!1379 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT", value: 692, isUnsigned: true)
!1380 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT", value: 693, isUnsigned: true)
!1381 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START", value: 694, isUnsigned: true)
!1382 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START", value: 695, isUnsigned: true)
!1383 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START", value: 696, isUnsigned: true)
!1384 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START", value: 697, isUnsigned: true)
!1385 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END", value: 698, isUnsigned: true)
!1386 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END_NOWAIT", value: 699, isUnsigned: true)
!1387 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_START", value: 700, isUnsigned: true)
!1388 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_END", value: 701, isUnsigned: true)
!1389 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_START", value: 702, isUnsigned: true)
!1390 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_END", value: 703, isUnsigned: true)
!1391 = !DIEnumerator(name: "BUILT_IN_GOMP_TASK", value: 704, isUnsigned: true)
!1392 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_START", value: 705, isUnsigned: true)
!1393 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_NEXT", value: 706, isUnsigned: true)
!1394 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_SECTIONS_START", value: 707, isUnsigned: true)
!1395 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END", value: 708, isUnsigned: true)
!1396 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END_NOWAIT", value: 709, isUnsigned: true)
!1397 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_START", value: 710, isUnsigned: true)
!1398 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_START", value: 711, isUnsigned: true)
!1399 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_END", value: 712, isUnsigned: true)
!1400 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MIN", value: 713, isUnsigned: true)
!1401 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MAX", value: 716, isUnsigned: true)
!1402 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MIN", value: 717, isUnsigned: true)
!1403 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MAX", value: 720, isUnsigned: true)
!1404 = !DIEnumerator(name: "END_BUILTINS", value: 721, isUnsigned: true)
!1405 = !{!1406, !1407, !1408, !1409, !1412, !1413, !134, !1415, !2741, !1542, !1456, !377, !2743, !1740, !2744, !1773, !1410, !5, !2746, !7, !1469, !679, !2288}
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1408 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !1417)
!1417 = !{!1418, !1451, !1459, !1472, !1491, !1502, !1507, !1516, !1522, !1535, !1547, !1585, !2076, !2104, !2121, !2122, !2127, !2136, !2142, !2147, !2151, !2155, !2392, !2439, !2445, !2451, !2458, !2471, !2485, !2502, !2514, !2536, !2551, !2723}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1416, file: !135, line: 3372, baseType: !1419, size: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1419, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1419, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1419, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1419, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1419, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1419, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1419, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1419, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1419, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1419, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1419, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1419, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1419, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1419, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1419, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1419, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1419, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1419, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1419, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1419, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1419, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1419, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1419, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1419, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1419, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1419, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1419, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1419, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1419, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1419, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1416, file: !135, line: 3373, baseType: !1452, size: 192)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !1453)
!1453 = !{!1454, !1455, !1458}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1452, file: !135, line: 403, baseType: !1419, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1452, file: !135, line: 404, baseType: !1456, size: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1457, line: 56, baseType: !1415)
!1457 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1452, file: !135, line: 405, baseType: !1456, size: 64, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1416, file: !135, line: 3374, baseType: !1460, size: 320)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1460, file: !135, line: 1385, baseType: !1452, size: 192)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1460, file: !135, line: 1386, baseType: !1464, size: 128, offset: 192)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1465, line: 58, baseType: !1466)
!1465 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1465, line: 54, size: 128, elements: !1467)
!1467 = !{!1468, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1466, file: !1465, line: 56, baseType: !1469, size: 64)
!1469 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1466, file: !1465, line: 57, baseType: !1471, size: 64, offset: 64)
!1471 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1416, file: !135, line: 3375, baseType: !1473, size: 256)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1473, file: !135, line: 1398, baseType: !1452, size: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1473, file: !135, line: 1399, baseType: !1477, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1479, line: 52, size: 256, elements: !1480)
!1479 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1480 = !{!1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1478, file: !1479, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1478, file: !1479, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1478, file: !1479, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1478, file: !1479, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1478, file: !1479, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1478, file: !1479, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1478, file: !1479, line: 62, baseType: !1488, size: 192, offset: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1469, size: 192, elements: !1489)
!1489 = !{!1490}
!1490 = !DISubrange(count: 3)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1416, file: !135, line: 3376, baseType: !1492, size: 256)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1492, file: !135, line: 1409, baseType: !1452, size: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1492, file: !135, line: 1410, baseType: !1496, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1498, line: 27, size: 192, elements: !1499)
!1498 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1497, file: !1498, line: 29, baseType: !1464, size: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1497, file: !1498, line: 30, baseType: !5, size: 32, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1416, file: !135, line: 3377, baseType: !1503, size: 256)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !1504)
!1504 = !{!1505, !1506}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1503, file: !135, line: 1438, baseType: !1452, size: 192)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1503, file: !135, line: 1439, baseType: !1456, size: 64, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1416, file: !135, line: 3378, baseType: !1508, size: 256)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !1509)
!1509 = !{!1510, !1511, !1512}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1508, file: !135, line: 1419, baseType: !1452, size: 192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1508, file: !135, line: 1420, baseType: !1408, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1508, file: !135, line: 1421, baseType: !1513, size: 8, offset: 224)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1411, size: 8, elements: !1514)
!1514 = !{!1515}
!1515 = !DISubrange(count: 1)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1416, file: !135, line: 3379, baseType: !1517, size: 320)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1517, file: !135, line: 1429, baseType: !1452, size: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1517, file: !135, line: 1430, baseType: !1456, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1517, file: !135, line: 1431, baseType: !1456, size: 64, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1416, file: !135, line: 3380, baseType: !1523, size: 320)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !1524)
!1524 = !{!1525, !1526}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1523, file: !135, line: 1461, baseType: !1452, size: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1523, file: !135, line: 1462, baseType: !1527, size: 128, offset: 192)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1528, line: 31, size: 128, elements: !1529)
!1528 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1529 = !{!1530, !1533, !1534}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1527, file: !1528, line: 32, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1527, file: !1528, line: 33, baseType: !7, size: 32, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1527, file: !1528, line: 34, baseType: !7, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1416, file: !135, line: 3381, baseType: !1536, size: 384)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !1537)
!1537 = !{!1538, !1539, !1544, !1545, !1546}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1536, file: !135, line: 2508, baseType: !1452, size: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1536, file: !135, line: 2509, baseType: !1540, size: 32, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1541, line: 58, baseType: !1542)
!1541 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1543, line: 44, baseType: !7)
!1543 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1536, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1536, file: !135, line: 2511, baseType: !1456, size: 64, offset: 256)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1536, file: !135, line: 2512, baseType: !1456, size: 64, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1416, file: !135, line: 3382, baseType: !1548, size: 896)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1548, file: !135, line: 2653, baseType: !1536, size: 384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1548, file: !135, line: 2654, baseType: !1456, size: 64, offset: 384)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1548, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1548, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1548, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1548, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1548, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1548, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1548, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1548, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1548, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1548, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1548, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1548, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1548, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1548, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1548, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1548, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1548, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1548, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1548, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1548, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1548, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1548, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1548, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1548, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1548, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1548, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1548, file: !135, line: 2705, baseType: !1456, size: 64, offset: 576)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1548, file: !135, line: 2706, baseType: !1456, size: 64, offset: 640)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1548, file: !135, line: 2707, baseType: !1456, size: 64, offset: 704)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1548, file: !135, line: 2708, baseType: !1456, size: 64, offset: 768)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1548, file: !135, line: 2711, baseType: !1583, size: 64, offset: 832)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1416, file: !135, line: 3383, baseType: !1586, size: 960)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1586, file: !135, line: 2757, baseType: !1548, size: 896)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1586, file: !135, line: 2758, baseType: !1590, size: 64, offset: 896)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1457, line: 50, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1593, line: 240, size: 384, elements: !1594)
!1593 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1592, file: !1593, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1592, file: !1593, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1592, file: !1593, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1592, file: !1593, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1592, file: !1593, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1592, file: !1593, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1592, file: !1593, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1592, file: !1593, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1592, file: !1593, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1592, file: !1593, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1592, file: !1593, line: 321, baseType: !1606, size: 320, offset: 64)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !1593, line: 315, size: 320, elements: !1607)
!1607 = !{!1608, !2009, !2011, !2074, !2075}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1606, file: !1593, line: 316, baseType: !1609, size: 64)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 64, elements: !1514)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !1593, line: 183, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !1593, line: 166, size: 64, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1625, !1626, !1638, !1641, !1701, !1702, !1986, !1999, !2006}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1611, file: !1593, line: 168, baseType: !1408, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1611, file: !1593, line: 169, baseType: !7, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1611, file: !1593, line: 170, baseType: !1413, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1611, file: !1593, line: 171, baseType: !1590, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1611, file: !1593, line: 172, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !1457, line: 53, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !1593, line: 359, size: 128, elements: !1621)
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1620, file: !1593, line: 360, baseType: !1408, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1620, file: !1593, line: 361, baseType: !1624, size: 64, offset: 64)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1590, size: 64, elements: !1514)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1611, file: !1593, line: 173, baseType: !5, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1611, file: !1593, line: 174, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !1593, line: 133, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1593, line: 115, size: 32, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1628, file: !1593, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1628, file: !1593, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1628, file: !1593, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1628, file: !1593, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1628, file: !1593, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1628, file: !1593, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1628, file: !1593, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1628, file: !1593, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1611, file: !1593, line: 175, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !1593, line: 175, flags: DIFlagFwdDecl)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1611, file: !1593, line: 176, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1644, line: 75, size: 256, elements: !1645)
!1644 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1645 = !{!1646, !1660, !1661, !1662}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1643, file: !1644, line: 76, baseType: !1647, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1644, line: 68, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1644, line: 63, size: 320, elements: !1650)
!1650 = !{!1651, !1653, !1654, !1655}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1649, file: !1644, line: 64, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1649, file: !1644, line: 65, baseType: !1652, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1649, file: !1644, line: 66, baseType: !7, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1649, file: !1644, line: 67, baseType: !1656, size: 128, offset: 192)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 128, elements: !1658)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1644, line: 29, baseType: !1469)
!1658 = !{!1659}
!1659 = !DISubrange(count: 2)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1643, file: !1644, line: 77, baseType: !1647, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1643, file: !1644, line: 78, baseType: !7, size: 32, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1643, file: !1644, line: 79, baseType: !1663, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1644, line: 49, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1644, line: 45, size: 832, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1665, file: !1644, line: 46, baseType: !1652, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1665, file: !1644, line: 47, baseType: !1642, size: 64, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1665, file: !1644, line: 48, baseType: !1670, size: 704, offset: 128)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1671, line: 164, size: 704, elements: !1672)
!1671 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1672 = !{!1673, !1674, !1684, !1685, !1686, !1687, !1688, !1689, !1693, !1697, !1698, !1699, !1700}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1670, file: !1671, line: 166, baseType: !1471, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1670, file: !1671, line: 167, baseType: !1675, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1671, line: 157, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1676, file: !1671, line: 159, baseType: !1410, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1676, file: !1671, line: 160, baseType: !1675, size: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1676, file: !1671, line: 161, baseType: !1681, size: 32, offset: 128)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1411, size: 32, elements: !1682)
!1682 = !{!1683}
!1683 = !DISubrange(count: 4)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1670, file: !1671, line: 168, baseType: !1410, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1670, file: !1671, line: 169, baseType: !1410, size: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1670, file: !1671, line: 170, baseType: !1410, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1670, file: !1671, line: 171, baseType: !1471, size: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1670, file: !1671, line: 172, baseType: !1408, size: 32, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1670, file: !1671, line: 176, baseType: !1690, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!1675, !1412, !1471}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1670, file: !1671, line: 177, baseType: !1694, size: 64, offset: 512)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{null, !1412, !1675}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1670, file: !1671, line: 178, baseType: !1412, size: 64, offset: 576)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1670, file: !1671, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1670, file: !1671, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1670, file: !1671, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1611, file: !1593, line: 177, baseType: !1456, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1611, file: !1593, line: 178, baseType: !1703, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !330, line: 217, size: 832, elements: !1705)
!1705 = !{!1706, !1951, !1952, !1953, !1956, !1960, !1961, !1962, !1980, !1981, !1982, !1983, !1984, !1985}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1704, file: !330, line: 219, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !330, line: 151, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !330, line: 151, size: 128, elements: !1710)
!1710 = !{!1711}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1709, file: !330, line: 151, baseType: !1712, size: 128)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !330, line: 150, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !330, line: 150, size: 128, elements: !1714)
!1714 = !{!1715, !1716, !1717}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1713, file: !330, line: 150, baseType: !7, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1713, file: !330, line: 150, baseType: !7, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1713, file: !330, line: 150, baseType: !1718, size: 64, offset: 64)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1719, size: 64, elements: !1514)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1457, line: 108, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !330, line: 122, size: 512, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1943, !1944, !1945, !1946, !1947, !1948, !1949}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1721, file: !330, line: 124, baseType: !1703, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1721, file: !330, line: 125, baseType: !1703, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1721, file: !330, line: 131, baseType: !1726, size: 64, offset: 128)
!1726 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !330, line: 128, size: 64, elements: !1727)
!1727 = !{!1728, !1942}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1726, file: !330, line: 129, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1457, line: 66, baseType: !1730)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !583, line: 143, size: 192, elements: !1732)
!1732 = !{!1733, !1940, !1941}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1731, file: !583, line: 145, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !1457, line: 69, baseType: !1735)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !583, line: 136, size: 192, elements: !1737)
!1737 = !{!1738, !1938, !1939}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1736, file: !583, line: 137, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1457, line: 58, baseType: !1740)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !583, line: 737, size: 768, elements: !1742)
!1742 = !{!1743, !1760, !1793, !1799, !1804, !1809, !1816, !1822, !1828, !1833, !1847, !1852, !1858, !1863, !1873, !1878, !1896, !1903, !1910, !1916, !1921, !1927, !1933}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1741, file: !583, line: 738, baseType: !1744, size: 256)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !583, line: 271, size: 256, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1744, file: !583, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1744, file: !583, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1744, file: !583, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1744, file: !583, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1744, file: !583, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1744, file: !583, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1744, file: !583, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1744, file: !583, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1744, file: !583, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1744, file: !583, line: 312, baseType: !7, size: 32, offset: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1744, file: !583, line: 316, baseType: !1540, size: 32, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1744, file: !583, line: 319, baseType: !7, size: 32, offset: 96)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1744, file: !583, line: 323, baseType: !1703, size: 64, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1744, file: !583, line: 327, baseType: !1456, size: 64, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1741, file: !583, line: 739, baseType: !1761, size: 448)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !583, line: 350, size: 448, elements: !1762)
!1762 = !{!1763, !1791}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1761, file: !583, line: 353, baseType: !1764, size: 384)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !583, line: 333, size: 384, elements: !1765)
!1765 = !{!1766, !1767, !1774}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1764, file: !583, line: 336, baseType: !1744, size: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1764, file: !583, line: 343, baseType: !1768, size: 64, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !648, line: 37, size: 128, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1769, file: !648, line: 39, baseType: !1768, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1769, file: !648, line: 40, baseType: !1773, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1764, file: !583, line: 344, baseType: !1775, size: 64, offset: 320)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !648, line: 45, size: 320, elements: !1777)
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1776, file: !648, line: 47, baseType: !1775, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1776, file: !648, line: 48, baseType: !1780, size: 256, offset: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1781)
!1781 = !{!1782, !1784, !1785, !1790}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1780, file: !135, line: 1884, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1780, file: !135, line: 1885, baseType: !1783, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1780, file: !135, line: 1891, baseType: !1786, size: 64, offset: 128)
!1786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1780, file: !135, line: 1891, size: 64, elements: !1787)
!1787 = !{!1788, !1789}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1786, file: !135, line: 1891, baseType: !1739, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1786, file: !135, line: 1891, baseType: !1456, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1780, file: !135, line: 1892, baseType: !1773, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1761, file: !583, line: 359, baseType: !1792, size: 64, offset: 384)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 64, elements: !1514)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1741, file: !583, line: 740, baseType: !1794, size: 512)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !583, line: 365, size: 512, elements: !1795)
!1795 = !{!1796, !1797, !1798}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1794, file: !583, line: 368, baseType: !1764, size: 384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1794, file: !583, line: 373, baseType: !1456, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1794, file: !583, line: 374, baseType: !1456, size: 64, offset: 448)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1741, file: !583, line: 741, baseType: !1800, size: 576)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !583, line: 380, size: 576, elements: !1801)
!1801 = !{!1802, !1803}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1800, file: !583, line: 383, baseType: !1794, size: 512)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1800, file: !583, line: 389, baseType: !1792, size: 64, offset: 512)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1741, file: !583, line: 742, baseType: !1805, size: 320)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !583, line: 395, size: 320, elements: !1806)
!1806 = !{!1807, !1808}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1805, file: !583, line: 397, baseType: !1744, size: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1805, file: !583, line: 400, baseType: !1729, size: 64, offset: 256)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1741, file: !583, line: 743, baseType: !1810, size: 448)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !583, line: 406, size: 448, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1810, file: !583, line: 408, baseType: !1744, size: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1810, file: !583, line: 412, baseType: !1456, size: 64, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1810, file: !583, line: 420, baseType: !1456, size: 64, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1810, file: !583, line: 423, baseType: !1729, size: 64, offset: 384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1741, file: !583, line: 744, baseType: !1817, size: 384)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !583, line: 429, size: 384, elements: !1818)
!1818 = !{!1819, !1820, !1821}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1817, file: !583, line: 431, baseType: !1744, size: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1817, file: !583, line: 434, baseType: !1456, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1817, file: !583, line: 437, baseType: !1729, size: 64, offset: 320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1741, file: !583, line: 745, baseType: !1823, size: 384)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !583, line: 443, size: 384, elements: !1824)
!1824 = !{!1825, !1826, !1827}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1823, file: !583, line: 445, baseType: !1744, size: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1823, file: !583, line: 449, baseType: !1456, size: 64, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1823, file: !583, line: 453, baseType: !1729, size: 64, offset: 320)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1741, file: !583, line: 746, baseType: !1829, size: 320)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !583, line: 459, size: 320, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1829, file: !583, line: 461, baseType: !1744, size: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1829, file: !583, line: 464, baseType: !1456, size: 64, offset: 256)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1741, file: !583, line: 747, baseType: !1834, size: 768)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !583, line: 469, size: 768, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1840}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1834, file: !583, line: 471, baseType: !1744, size: 256)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1834, file: !583, line: 474, baseType: !7, size: 32, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1834, file: !583, line: 475, baseType: !7, size: 32, offset: 288)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1834, file: !583, line: 478, baseType: !1456, size: 64, offset: 320)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1834, file: !583, line: 481, baseType: !1841, size: 384, offset: 384)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1842, size: 384, elements: !1514)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1843)
!1843 = !{!1844, !1845, !1846}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1842, file: !135, line: 1920, baseType: !1780, size: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1842, file: !135, line: 1921, baseType: !1456, size: 64, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1842, file: !135, line: 1922, baseType: !1540, size: 32, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1741, file: !583, line: 748, baseType: !1848, size: 320)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !583, line: 487, size: 320, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1848, file: !583, line: 490, baseType: !1744, size: 256)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1848, file: !583, line: 494, baseType: !1408, size: 32, offset: 256)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1741, file: !583, line: 749, baseType: !1853, size: 384)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !583, line: 500, size: 384, elements: !1854)
!1854 = !{!1855, !1856, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1853, file: !583, line: 502, baseType: !1744, size: 256)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1853, file: !583, line: 506, baseType: !1729, size: 64, offset: 256)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1853, file: !583, line: 510, baseType: !1729, size: 64, offset: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1741, file: !583, line: 750, baseType: !1859, size: 320)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !583, line: 529, size: 320, elements: !1860)
!1860 = !{!1861, !1862}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1859, file: !583, line: 531, baseType: !1744, size: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1859, file: !583, line: 540, baseType: !1729, size: 64, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1741, file: !583, line: 751, baseType: !1864, size: 704)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !583, line: 546, size: 704, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1864, file: !583, line: 549, baseType: !1794, size: 512)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1864, file: !583, line: 553, baseType: !1413, size: 64, offset: 512)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1864, file: !583, line: 557, baseType: !1407, size: 8, offset: 576)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1864, file: !583, line: 558, baseType: !1407, size: 8, offset: 584)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1864, file: !583, line: 559, baseType: !1407, size: 8, offset: 592)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1864, file: !583, line: 560, baseType: !1407, size: 8, offset: 600)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1864, file: !583, line: 566, baseType: !1792, size: 64, offset: 640)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1741, file: !583, line: 752, baseType: !1874, size: 384)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !583, line: 571, size: 384, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1874, file: !583, line: 573, baseType: !1805, size: 320)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1874, file: !583, line: 577, baseType: !1456, size: 64, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1741, file: !583, line: 753, baseType: !1879, size: 576)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !583, line: 600, size: 576, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1886, !1895}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1879, file: !583, line: 602, baseType: !1805, size: 320)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1879, file: !583, line: 605, baseType: !1456, size: 64, offset: 320)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1879, file: !583, line: 609, baseType: !1884, size: 64, offset: 384)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1885, line: 46, baseType: !1469)
!1885 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1879, file: !583, line: 612, baseType: !1887, size: 64, offset: 448)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !583, line: 581, size: 320, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1888, file: !583, line: 583, baseType: !134, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1888, file: !583, line: 586, baseType: !1456, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1888, file: !583, line: 589, baseType: !1456, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1888, file: !583, line: 592, baseType: !1456, size: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1888, file: !583, line: 595, baseType: !1456, size: 64, offset: 256)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1879, file: !583, line: 616, baseType: !1729, size: 64, offset: 512)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1741, file: !583, line: 754, baseType: !1897, size: 512)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !583, line: 622, size: 512, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1897, file: !583, line: 624, baseType: !1805, size: 320)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1897, file: !583, line: 628, baseType: !1456, size: 64, offset: 320)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1897, file: !583, line: 632, baseType: !1456, size: 64, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1897, file: !583, line: 636, baseType: !1456, size: 64, offset: 448)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1741, file: !583, line: 755, baseType: !1904, size: 704)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !583, line: 642, size: 704, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1904, file: !583, line: 644, baseType: !1897, size: 512)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1904, file: !583, line: 648, baseType: !1456, size: 64, offset: 512)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1904, file: !583, line: 652, baseType: !1456, size: 64, offset: 576)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1904, file: !583, line: 653, baseType: !1456, size: 64, offset: 640)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1741, file: !583, line: 756, baseType: !1911, size: 448)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !583, line: 663, size: 448, elements: !1912)
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1911, file: !583, line: 665, baseType: !1805, size: 320)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1911, file: !583, line: 668, baseType: !1456, size: 64, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1911, file: !583, line: 673, baseType: !1456, size: 64, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1741, file: !583, line: 757, baseType: !1917, size: 384)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !583, line: 694, size: 384, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1917, file: !583, line: 696, baseType: !1805, size: 320)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1917, file: !583, line: 699, baseType: !1456, size: 64, offset: 320)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1741, file: !583, line: 758, baseType: !1922, size: 384)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !583, line: 681, size: 384, elements: !1923)
!1923 = !{!1924, !1925, !1926}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1922, file: !583, line: 683, baseType: !1744, size: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1922, file: !583, line: 686, baseType: !1456, size: 64, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1922, file: !583, line: 689, baseType: !1456, size: 64, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1741, file: !583, line: 759, baseType: !1928, size: 384)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !583, line: 707, size: 384, elements: !1929)
!1929 = !{!1930, !1931, !1932}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1928, file: !583, line: 709, baseType: !1744, size: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1928, file: !583, line: 712, baseType: !1456, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1928, file: !583, line: 712, baseType: !1456, size: 64, offset: 320)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1741, file: !583, line: 760, baseType: !1934, size: 320)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !583, line: 718, size: 320, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1934, file: !583, line: 720, baseType: !1744, size: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1934, file: !583, line: 723, baseType: !1456, size: 64, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1736, file: !583, line: 138, baseType: !1735, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1736, file: !583, line: 139, baseType: !1735, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1731, file: !583, line: 146, baseType: !1734, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1731, file: !583, line: 152, baseType: !1729, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1726, file: !330, line: 130, baseType: !1590, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1721, file: !330, line: 134, baseType: !1412, size: 64, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1721, file: !330, line: 137, baseType: !1456, size: 64, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1721, file: !330, line: 138, baseType: !1540, size: 32, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1721, file: !330, line: 142, baseType: !7, size: 32, offset: 352)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1721, file: !330, line: 144, baseType: !1408, size: 32, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1721, file: !330, line: 145, baseType: !1408, size: 32, offset: 416)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1721, file: !330, line: 146, baseType: !1950, size: 64, offset: 448)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !330, line: 119, baseType: !1471)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1704, file: !330, line: 220, baseType: !1707, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1704, file: !330, line: 223, baseType: !1412, size: 64, offset: 128)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1704, file: !330, line: 226, baseType: !1954, size: 64, offset: 192)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 185, flags: DIFlagFwdDecl)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1704, file: !330, line: 229, baseType: !1957, size: 128, offset: 256)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 128, elements: !1658)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !330, line: 229, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1704, file: !330, line: 232, baseType: !1703, size: 64, offset: 384)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1704, file: !330, line: 233, baseType: !1703, size: 64, offset: 448)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1704, file: !330, line: 238, baseType: !1963, size: 64, offset: 512)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !330, line: 235, size: 64, elements: !1964)
!1964 = !{!1965, !1971}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1963, file: !330, line: 236, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !330, line: 273, size: 128, elements: !1968)
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1967, file: !330, line: 275, baseType: !1729, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1967, file: !330, line: 278, baseType: !1729, size: 64, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1963, file: !330, line: 237, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !330, line: 259, size: 320, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1973, file: !330, line: 261, baseType: !1590, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1973, file: !330, line: 262, baseType: !1590, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1973, file: !330, line: 266, baseType: !1590, size: 64, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1973, file: !330, line: 267, baseType: !1590, size: 64, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1973, file: !330, line: 270, baseType: !1408, size: 32, offset: 256)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1704, file: !330, line: 241, baseType: !1950, size: 64, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1704, file: !330, line: 244, baseType: !1408, size: 32, offset: 640)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1704, file: !330, line: 247, baseType: !1408, size: 32, offset: 672)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1704, file: !330, line: 250, baseType: !1408, size: 32, offset: 704)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1704, file: !330, line: 253, baseType: !1408, size: 32, offset: 736)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1704, file: !330, line: 256, baseType: !1408, size: 32, offset: 768)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1611, file: !1593, line: 179, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !1593, line: 150, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !1593, line: 142, size: 320, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1997, !1998}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1989, file: !1593, line: 144, baseType: !1456, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1989, file: !1593, line: 145, baseType: !1590, size: 64, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1989, file: !1593, line: 146, baseType: !1590, size: 64, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1989, file: !1593, line: 147, baseType: !1995, size: 32, offset: 192)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1996, line: 31, baseType: !1408)
!1996 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1989, file: !1593, line: 148, baseType: !7, size: 32, offset: 224)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1989, file: !1593, line: 149, baseType: !1407, size: 8, offset: 256)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1611, file: !1593, line: 180, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !1593, line: 162, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !1593, line: 159, size: 128, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2002, file: !1593, line: 160, baseType: !1456, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2002, file: !1593, line: 161, baseType: !1471, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1611, file: !1593, line: 181, baseType: !2007, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !1593, line: 181, flags: DIFlagFwdDecl)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1606, file: !1593, line: 317, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 64, elements: !1514)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1606, file: !1593, line: 318, baseType: !2012, size: 320)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !1593, line: 188, size: 320, elements: !2013)
!2013 = !{!2014, !2016, !2073}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2012, file: !1593, line: 190, baseType: !2015, size: 192)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 192, elements: !1489)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2012, file: !1593, line: 193, baseType: !2017, size: 64, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !1593, line: 206, size: 320, elements: !2019)
!2019 = !{!2020, !2058, !2059, !2060, !2072}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2018, file: !1593, line: 208, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !1457, line: 62, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2024, line: 538, size: 256, elements: !2025)
!2024 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2025 = !{!2026, !2030, !2036, !2049}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2023, file: !2024, line: 539, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2024, line: 482, size: 32, elements: !2028)
!2028 = !{!2029}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2027, file: !2024, line: 484, baseType: !7, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2023, file: !2024, line: 540, baseType: !2031, size: 192)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2024, line: 488, size: 192, elements: !2032)
!2032 = !{!2033, !2034, !2035}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2031, file: !2024, line: 489, baseType: !2027, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2031, file: !2024, line: 492, baseType: !1413, size: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2031, file: !2024, line: 496, baseType: !1456, size: 64, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2023, file: !2024, line: 541, baseType: !2037, size: 256)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2024, line: 504, size: 256, elements: !2038)
!2038 = !{!2039, !2040, !2047, !2048}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2037, file: !2024, line: 505, baseType: !2027, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2037, file: !2024, line: 509, baseType: !2041, size: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2024, line: 501, baseType: !2042)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !2045}
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2037, file: !2024, line: 510, baseType: !2045, size: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2037, file: !2024, line: 513, baseType: !2021, size: 64, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2023, file: !2024, line: 542, baseType: !2050, size: 128)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2024, line: 530, size: 128, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2050, file: !2024, line: 531, baseType: !2027, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2050, file: !2024, line: 534, baseType: !2054, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2024, line: 525, baseType: !2055)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!1407, !1456, !1413, !1469, !1469}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2018, file: !1593, line: 211, baseType: !7, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2018, file: !1593, line: 214, baseType: !1471, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2018, file: !1593, line: 224, baseType: !2061, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !1593, line: 202, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !1593, line: 202, size: 128, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2063, file: !1593, line: 202, baseType: !2066, size: 128)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !1593, line: 200, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !1593, line: 200, size: 128, elements: !2068)
!2068 = !{!2069, !2070, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2067, file: !1593, line: 200, baseType: !7, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2067, file: !1593, line: 200, baseType: !7, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2067, file: !1593, line: 200, baseType: !1624, size: 64, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2018, file: !1593, line: 234, baseType: !2061, size: 64, offset: 256)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2012, file: !1593, line: 197, baseType: !1471, size: 64, offset: 256)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1606, file: !1593, line: 319, baseType: !1478, size: 256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1606, file: !1593, line: 320, baseType: !1497, size: 192)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1416, file: !135, line: 3384, baseType: !2077, size: 1472)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !2078)
!2078 = !{!2079, !2100, !2101, !2102, !2103}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2077, file: !135, line: 3115, baseType: !2080, size: 1216)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !2081)
!2081 = !{!2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2080, file: !135, line: 2985, baseType: !1586, size: 960)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2080, file: !135, line: 2986, baseType: !1456, size: 64, offset: 960)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2080, file: !135, line: 2987, baseType: !1456, size: 64, offset: 1024)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2080, file: !135, line: 2988, baseType: !1456, size: 64, offset: 1088)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2080, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2080, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2080, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2080, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2080, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2080, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2080, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2080, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2080, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2080, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2080, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2080, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2080, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2080, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2077, file: !135, line: 3117, baseType: !1456, size: 64, offset: 1216)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2077, file: !135, line: 3119, baseType: !1456, size: 64, offset: 1280)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2077, file: !135, line: 3121, baseType: !1456, size: 64, offset: 1344)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2077, file: !135, line: 3123, baseType: !1456, size: 64, offset: 1408)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1416, file: !135, line: 3385, baseType: !2105, size: 1088)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !2106)
!2106 = !{!2107, !2108, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2105, file: !135, line: 2875, baseType: !1586, size: 960)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2105, file: !135, line: 2876, baseType: !1590, size: 64, offset: 960)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2105, file: !135, line: 2877, baseType: !2110, size: 64, offset: 1024)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !2112, line: 172, size: 128, elements: !2113)
!2112 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !2111, file: !2112, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2111, file: !2112, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !2111, file: !2112, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !2111, file: !2112, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !2111, file: !2112, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2111, file: !2112, line: 195, baseType: !7, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !2111, file: !2112, line: 199, baseType: !1456, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1416, file: !135, line: 3386, baseType: !2080, size: 1216)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1416, file: !135, line: 3387, baseType: !2123, size: 1280)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2123, file: !135, line: 3094, baseType: !2080, size: 1216)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2123, file: !135, line: 3095, baseType: !2110, size: 64, offset: 1216)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1416, file: !135, line: 3388, baseType: !2128, size: 1216)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2128, file: !135, line: 2825, baseType: !1548, size: 896)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2128, file: !135, line: 2827, baseType: !1456, size: 64, offset: 896)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2128, file: !135, line: 2828, baseType: !1456, size: 64, offset: 960)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2128, file: !135, line: 2829, baseType: !1456, size: 64, offset: 1024)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2128, file: !135, line: 2830, baseType: !1456, size: 64, offset: 1088)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2128, file: !135, line: 2831, baseType: !1456, size: 64, offset: 1152)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1416, file: !135, line: 3389, baseType: !2137, size: 1024)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !2138)
!2138 = !{!2139, !2140, !2141}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2137, file: !135, line: 2851, baseType: !1586, size: 960)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2137, file: !135, line: 2852, baseType: !1408, size: 32, offset: 960)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2137, file: !135, line: 2853, baseType: !1408, size: 32, offset: 992)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1416, file: !135, line: 3390, baseType: !2143, size: 1024)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2143, file: !135, line: 2858, baseType: !1586, size: 960)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2143, file: !135, line: 2859, baseType: !2110, size: 64, offset: 960)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1416, file: !135, line: 3391, baseType: !2148, size: 960)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2148, file: !135, line: 2863, baseType: !1586, size: 960)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1416, file: !135, line: 3392, baseType: !2152, size: 1472)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2152, file: !135, line: 3305, baseType: !2077, size: 1472)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1416, file: !135, line: 3393, baseType: !2156, size: 1792)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !2157)
!2157 = !{!2158, !2159, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2156, file: !135, line: 3249, baseType: !2077, size: 1472)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2156, file: !135, line: 3251, baseType: !2160, size: 64, offset: 1472)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2162, line: 463, size: 1152, elements: !2163)
!2162 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2163 = !{!2164, !2167, !2198, !2199, !2312, !2315, !2316, !2317, !2318, !2319, !2320, !2344, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2161, file: !2162, line: 464, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !2162, line: 464, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2161, file: !2162, line: 467, baseType: !2168, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !330, line: 374, size: 640, elements: !2170)
!2170 = !{!2171, !2173, !2174, !2187, !2188, !2189, !2190, !2191, !2192, !2194, !2196, !2197}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2169, file: !330, line: 377, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1457, line: 111, baseType: !1703)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2169, file: !330, line: 378, baseType: !2172, size: 64, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2169, file: !330, line: 381, baseType: !2175, size: 64, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !330, line: 282, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !330, line: 282, size: 128, elements: !2178)
!2178 = !{!2179}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2177, file: !330, line: 282, baseType: !2180, size: 128)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !330, line: 281, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !330, line: 281, size: 128, elements: !2182)
!2182 = !{!2183, !2184, !2185}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2181, file: !330, line: 281, baseType: !7, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2181, file: !330, line: 281, baseType: !7, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2181, file: !330, line: 281, baseType: !2186, size: 64, offset: 64)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 64, elements: !1514)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2169, file: !330, line: 384, baseType: !1408, size: 32, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2169, file: !330, line: 387, baseType: !1408, size: 32, offset: 224)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2169, file: !330, line: 390, baseType: !1408, size: 32, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2169, file: !330, line: 394, baseType: !2175, size: 64, offset: 320)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2169, file: !330, line: 396, baseType: !329, size: 32, offset: 384)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2169, file: !330, line: 399, baseType: !2193, size: 64, offset: 416)
!2193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !1658)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2169, file: !330, line: 402, baseType: !2195, size: 64, offset: 480)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1658)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2169, file: !330, line: 406, baseType: !1408, size: 32, offset: 544)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2169, file: !330, line: 409, baseType: !1408, size: 32, offset: 576)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2161, file: !2162, line: 470, baseType: !1730, size: 64, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2161, file: !2162, line: 473, baseType: !2200, size: 64, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2112, line: 39, size: 1152, elements: !2202)
!2202 = !{!2203, !2251, !2264, !2276, !2277, !2289, !2290, !2294, !2295, !2296, !2297, !2298}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !2201, file: !2112, line: 41, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2205, line: 144, baseType: !2206)
!2205 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2205, line: 100, size: 896, elements: !2208)
!2208 = !{!2209, !2215, !2220, !2225, !2227, !2228, !2229, !2230, !2231, !2232, !2237, !2239, !2240, !2245, !2250}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2207, file: !2205, line: 102, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2205, line: 52, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!2214, !2045}
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2205, line: 47, baseType: !7)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2207, file: !2205, line: 105, baseType: !2216, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2205, line: 59, baseType: !2217)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!1408, !2045, !2045}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2207, file: !2205, line: 108, baseType: !2221, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2205, line: 63, baseType: !2222)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !1412}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2207, file: !2205, line: 111, baseType: !2226, size: 64, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2207, file: !2205, line: 114, baseType: !1884, size: 64, offset: 256)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2207, file: !2205, line: 117, baseType: !1884, size: 64, offset: 320)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2207, file: !2205, line: 120, baseType: !1884, size: 64, offset: 384)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2207, file: !2205, line: 124, baseType: !7, size: 32, offset: 448)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2207, file: !2205, line: 128, baseType: !7, size: 32, offset: 480)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2207, file: !2205, line: 131, baseType: !2233, size: 64, offset: 512)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2205, line: 75, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!1412, !1884, !1884}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2207, file: !2205, line: 132, baseType: !2238, size: 64, offset: 576)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2205, line: 78, baseType: !2222)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2207, file: !2205, line: 135, baseType: !1412, size: 64, offset: 640)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2207, file: !2205, line: 136, baseType: !2241, size: 64, offset: 704)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2205, line: 82, baseType: !2242)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!1412, !1412, !1884, !1884}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2207, file: !2205, line: 137, baseType: !2246, size: 64, offset: 768)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2205, line: 83, baseType: !2247)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{null, !1412, !1412}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2207, file: !2205, line: 141, baseType: !7, size: 32, offset: 832)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !2201, file: !2112, line: 48, baseType: !2252, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !583, line: 35, baseType: !2254)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !583, line: 35, size: 128, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2254, file: !583, line: 35, baseType: !2257, size: 128)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !583, line: 33, baseType: !2258)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !583, line: 33, size: 128, elements: !2259)
!2259 = !{!2260, !2261, !2262}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2258, file: !583, line: 33, baseType: !7, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2258, file: !583, line: 33, baseType: !7, size: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2258, file: !583, line: 33, baseType: !2263, size: 64, offset: 64)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1739, size: 64, elements: !1514)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !2201, file: !2112, line: 51, baseType: !2265, size: 64, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !2268)
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2267, file: !135, line: 183, baseType: !2270, size: 128)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2271, file: !135, line: 182, baseType: !7, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2271, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2271, file: !135, line: 182, baseType: !1792, size: 64, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !2201, file: !2112, line: 54, baseType: !1456, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2201, file: !2112, line: 57, baseType: !2278, size: 128, offset: 256)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !2279, line: 31, size: 128, elements: !2280)
!2279 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2286, !2287}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !2278, file: !2279, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !2278, file: !2279, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2278, file: !2279, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !2278, file: !2279, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !2278, file: !2279, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !2278, file: !2279, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2278, file: !2279, line: 56, baseType: !2288, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !1457, line: 47, baseType: !1642)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !2201, file: !2112, line: 60, baseType: !2278, size: 128, offset: 384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !2201, file: !2112, line: 64, baseType: !2291, size: 64, offset: 512)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !2293, line: 33, flags: DIFlagFwdDecl)
!2293 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !2201, file: !2112, line: 67, baseType: !1456, size: 64, offset: 576)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !2201, file: !2112, line: 73, baseType: !2204, size: 64, offset: 640)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !2201, file: !2112, line: 77, baseType: !2288, size: 64, offset: 704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !2201, file: !2112, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !2201, file: !2112, line: 82, baseType: !2299, size: 320, offset: 832)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !648, line: 62, size: 320, elements: !2300)
!2300 = !{!2301, !2307, !2308, !2309, !2310, !2311}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !2299, file: !648, line: 63, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !648, line: 56, size: 128, elements: !2304)
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2303, file: !648, line: 57, baseType: !2302, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2303, file: !648, line: 58, baseType: !1513, size: 8, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !2299, file: !648, line: 64, baseType: !7, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !2299, file: !648, line: 66, baseType: !7, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !2299, file: !648, line: 68, baseType: !1407, size: 8, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !2299, file: !648, line: 70, baseType: !1768, size: 64, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !2299, file: !648, line: 71, baseType: !1775, size: 64, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2161, file: !2162, line: 476, baseType: !2313, size: 64, offset: 256)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !2162, line: 476, flags: DIFlagFwdDecl)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2161, file: !2162, line: 479, baseType: !2204, size: 64, offset: 320)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2161, file: !2162, line: 484, baseType: !1456, size: 64, offset: 384)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2161, file: !2162, line: 488, baseType: !1456, size: 64, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2161, file: !2162, line: 493, baseType: !1456, size: 64, offset: 512)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2161, file: !2162, line: 496, baseType: !1456, size: 64, offset: 576)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2161, file: !2162, line: 501, baseType: !2321, size: 64, offset: 640)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !341, line: 2355, size: 576, elements: !2323)
!2323 = !{!2324, !2327, !2328, !2329, !2330, !2332, !2333, !2338, !2339, !2340, !2341, !2342, !2343}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2322, file: !341, line: 2356, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !341, line: 2356, flags: DIFlagFwdDecl)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2322, file: !341, line: 2357, baseType: !1413, size: 64, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2322, file: !341, line: 2358, baseType: !1408, size: 32, offset: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2322, file: !341, line: 2359, baseType: !1408, size: 32, offset: 160)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2322, file: !341, line: 2360, baseType: !2331, size: 128, offset: 192)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1408, size: 128, elements: !1682)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2322, file: !341, line: 2364, baseType: !1408, size: 32, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2322, file: !341, line: 2367, baseType: !2334, size: 128, offset: 384)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !341, line: 2349, size: 128, elements: !2335)
!2335 = !{!2336, !2337}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2334, file: !341, line: 2351, baseType: !1590, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2334, file: !341, line: 2352, baseType: !1471, size: 64, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2322, file: !341, line: 2371, baseType: !340, size: 32, offset: 512)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2322, file: !341, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2322, file: !341, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2322, file: !341, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2322, file: !341, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2322, file: !341, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2161, file: !2162, line: 504, baseType: !2345, size: 64, offset: 704)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2162, line: 504, flags: DIFlagFwdDecl)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2161, file: !2162, line: 507, baseType: !2204, size: 64, offset: 768)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2161, file: !2162, line: 510, baseType: !1408, size: 32, offset: 832)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2161, file: !2162, line: 513, baseType: !1408, size: 32, offset: 864)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2161, file: !2162, line: 516, baseType: !1540, size: 32, offset: 896)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2161, file: !2162, line: 519, baseType: !1540, size: 32, offset: 928)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2161, file: !2162, line: 522, baseType: !7, size: 32, offset: 960)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2161, file: !2162, line: 523, baseType: !7, size: 32, offset: 992)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2161, file: !2162, line: 528, baseType: !1413, size: 64, offset: 1024)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2161, file: !2162, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2161, file: !2162, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2161, file: !2162, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2161, file: !2162, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2161, file: !2162, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2161, file: !2162, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2161, file: !2162, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2161, file: !2162, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2161, file: !2162, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2161, file: !2162, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2161, file: !2162, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2161, file: !2162, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2161, file: !2162, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2161, file: !2162, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2161, file: !2162, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2161, file: !2162, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2156, file: !135, line: 3254, baseType: !1456, size: 64, offset: 1536)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2156, file: !135, line: 3257, baseType: !1456, size: 64, offset: 1600)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2156, file: !135, line: 3258, baseType: !1456, size: 64, offset: 1664)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2156, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2156, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2156, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2156, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2156, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2156, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2156, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2156, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2156, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2156, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2156, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2156, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2156, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2156, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2156, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2156, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2156, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2156, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1416, file: !135, line: 3394, baseType: !2393, size: 1344)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2393, file: !135, line: 2280, baseType: !1452, size: 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2393, file: !135, line: 2281, baseType: !1456, size: 64, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2393, file: !135, line: 2282, baseType: !1456, size: 64, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2393, file: !135, line: 2283, baseType: !1456, size: 64, offset: 320)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2393, file: !135, line: 2284, baseType: !1456, size: 64, offset: 384)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2393, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2393, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2393, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2393, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2393, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2393, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2393, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2393, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2393, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2393, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2393, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2393, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2393, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2393, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2393, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2393, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2393, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2393, file: !135, line: 2306, baseType: !1995, size: 32, offset: 544)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2393, file: !135, line: 2307, baseType: !1456, size: 64, offset: 576)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2393, file: !135, line: 2308, baseType: !1456, size: 64, offset: 640)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2393, file: !135, line: 2314, baseType: !2421, size: 64, offset: 704)
!2421 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !2422)
!2422 = !{!2423, !2424, !2425}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2421, file: !135, line: 2310, baseType: !1408, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2421, file: !135, line: 2311, baseType: !1413, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2421, file: !135, line: 2312, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2393, file: !135, line: 2315, baseType: !1456, size: 64, offset: 768)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2393, file: !135, line: 2316, baseType: !1456, size: 64, offset: 832)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2393, file: !135, line: 2317, baseType: !1456, size: 64, offset: 896)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2393, file: !135, line: 2318, baseType: !1456, size: 64, offset: 960)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2393, file: !135, line: 2319, baseType: !1456, size: 64, offset: 1024)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2393, file: !135, line: 2320, baseType: !1456, size: 64, offset: 1088)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2393, file: !135, line: 2321, baseType: !1456, size: 64, offset: 1152)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2393, file: !135, line: 2322, baseType: !1456, size: 64, offset: 1216)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2393, file: !135, line: 2324, baseType: !2437, size: 64, offset: 1280)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1416, file: !135, line: 3395, baseType: !2440, size: 320)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !2441)
!2441 = !{!2442, !2443, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2440, file: !135, line: 1470, baseType: !1452, size: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2440, file: !135, line: 1471, baseType: !1456, size: 64, offset: 192)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2440, file: !135, line: 1472, baseType: !1456, size: 64, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1416, file: !135, line: 3396, baseType: !2446, size: 320)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !2447)
!2447 = !{!2448, !2449, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2446, file: !135, line: 1483, baseType: !1452, size: 192)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2446, file: !135, line: 1484, baseType: !1408, size: 32, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2446, file: !135, line: 1485, baseType: !1792, size: 64, offset: 256)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1416, file: !135, line: 3397, baseType: !2452, size: 384)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !2453)
!2453 = !{!2454, !2455, !2456, !2457}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2452, file: !135, line: 1830, baseType: !1452, size: 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2452, file: !135, line: 1831, baseType: !1540, size: 32, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2452, file: !135, line: 1832, baseType: !1456, size: 64, offset: 256)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2452, file: !135, line: 1835, baseType: !1792, size: 64, offset: 320)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1416, file: !135, line: 3398, baseType: !2459, size: 704)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2470}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2459, file: !135, line: 1899, baseType: !1452, size: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2459, file: !135, line: 1902, baseType: !1456, size: 64, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2459, file: !135, line: 1905, baseType: !1739, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2459, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2459, file: !135, line: 1911, baseType: !2466, size: 64, offset: 384)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !2112, line: 117, size: 128, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !2467, file: !2112, line: 120, baseType: !2278, size: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2459, file: !135, line: 1914, baseType: !1780, size: 256, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1416, file: !135, line: 3399, baseType: !2472, size: 704)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2472, file: !135, line: 2009, baseType: !1452, size: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2472, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2472, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2472, file: !135, line: 2014, baseType: !1540, size: 32, offset: 224)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2472, file: !135, line: 2016, baseType: !1456, size: 64, offset: 256)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2472, file: !135, line: 2017, baseType: !2265, size: 64, offset: 320)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2472, file: !135, line: 2019, baseType: !1456, size: 64, offset: 384)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2472, file: !135, line: 2020, baseType: !1456, size: 64, offset: 448)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2472, file: !135, line: 2021, baseType: !1456, size: 64, offset: 512)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2472, file: !135, line: 2022, baseType: !1456, size: 64, offset: 576)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2472, file: !135, line: 2023, baseType: !1456, size: 64, offset: 640)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1416, file: !135, line: 3400, baseType: !2486, size: 832)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !2487)
!2487 = !{!2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2486, file: !135, line: 2431, baseType: !1452, size: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2486, file: !135, line: 2433, baseType: !1456, size: 64, offset: 192)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2486, file: !135, line: 2434, baseType: !1456, size: 64, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2486, file: !135, line: 2435, baseType: !1456, size: 64, offset: 320)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2486, file: !135, line: 2436, baseType: !1456, size: 64, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2486, file: !135, line: 2437, baseType: !2265, size: 64, offset: 448)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2486, file: !135, line: 2438, baseType: !1456, size: 64, offset: 512)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2486, file: !135, line: 2440, baseType: !1456, size: 64, offset: 576)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2486, file: !135, line: 2441, baseType: !1456, size: 64, offset: 640)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2486, file: !135, line: 2443, baseType: !2498, size: 128, offset: 704)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !2500)
!2500 = !{!2501}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2499, file: !135, line: 182, baseType: !2270, size: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1416, file: !135, line: 3401, baseType: !2503, size: 320)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !2504)
!2504 = !{!2505, !2506, !2513}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2503, file: !135, line: 3329, baseType: !1452, size: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2503, file: !135, line: 3330, baseType: !2507, size: 64, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !2509)
!2509 = !{!2510, !2511, !2512}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2508, file: !135, line: 3322, baseType: !2507, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2508, file: !135, line: 3323, baseType: !2507, size: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2508, file: !135, line: 3324, baseType: !1456, size: 64, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2503, file: !135, line: 3331, baseType: !2507, size: 64, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1416, file: !135, line: 3402, baseType: !2515, size: 256)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2515, file: !135, line: 1541, baseType: !1452, size: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2515, file: !135, line: 1542, baseType: !2519, size: 64, offset: 192)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2521, file: !135, line: 1538, baseType: !2524, size: 192)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !2526)
!2526 = !{!2527, !2528, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2525, file: !135, line: 1537, baseType: !7, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2525, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2525, file: !135, line: 1537, baseType: !2530, size: 128, offset: 64)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 128, elements: !1514)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !2532)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2532, file: !135, line: 1533, baseType: !1456, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2532, file: !135, line: 1534, baseType: !1456, size: 64, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1416, file: !135, line: 3403, baseType: !2537, size: 512)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !2538)
!2538 = !{!2539, !2540, !2541, !2542, !2548, !2549, !2550}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2537, file: !135, line: 1939, baseType: !1452, size: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2537, file: !135, line: 1940, baseType: !1540, size: 32, offset: 192)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2537, file: !135, line: 1941, baseType: !345, size: 32, offset: 224)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2537, file: !135, line: 1946, baseType: !2543, size: 32, offset: 256)
!2543 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !2544)
!2544 = !{!2545, !2546, !2547}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2543, file: !135, line: 1943, baseType: !363, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2543, file: !135, line: 1944, baseType: !370, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2543, file: !135, line: 1945, baseType: !134, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2537, file: !135, line: 1950, baseType: !1729, size: 64, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2537, file: !135, line: 1951, baseType: !1729, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2537, file: !135, line: 1953, baseType: !1792, size: 64, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1416, file: !135, line: 3404, baseType: !2552, size: 1664)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2552, file: !135, line: 3338, baseType: !1452, size: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2552, file: !135, line: 3341, baseType: !2556, size: 1472, offset: 192)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2557, line: 410, size: 1472, elements: !2558)
!2557 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2558 = !{!2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2556, file: !2557, line: 412, baseType: !1408, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2556, file: !2557, line: 413, baseType: !1408, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2556, file: !2557, line: 414, baseType: !1408, size: 32, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2556, file: !2557, line: 415, baseType: !1408, size: 32, offset: 96)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2556, file: !2557, line: 416, baseType: !1408, size: 32, offset: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2556, file: !2557, line: 417, baseType: !1408, size: 32, offset: 160)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2556, file: !2557, line: 418, baseType: !1407, size: 8, offset: 192)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2556, file: !2557, line: 419, baseType: !1407, size: 8, offset: 200)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2556, file: !2557, line: 420, baseType: !2568, size: 8, offset: 208)
!2568 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2556, file: !2557, line: 421, baseType: !2568, size: 8, offset: 216)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2556, file: !2557, line: 422, baseType: !2568, size: 8, offset: 224)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2556, file: !2557, line: 423, baseType: !2568, size: 8, offset: 232)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2556, file: !2557, line: 424, baseType: !2568, size: 8, offset: 240)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2556, file: !2557, line: 425, baseType: !2568, size: 8, offset: 248)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2556, file: !2557, line: 426, baseType: !2568, size: 8, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2556, file: !2557, line: 427, baseType: !2568, size: 8, offset: 264)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2556, file: !2557, line: 428, baseType: !2568, size: 8, offset: 272)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2556, file: !2557, line: 429, baseType: !2568, size: 8, offset: 280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2556, file: !2557, line: 430, baseType: !2568, size: 8, offset: 288)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2556, file: !2557, line: 431, baseType: !2568, size: 8, offset: 296)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2556, file: !2557, line: 432, baseType: !2568, size: 8, offset: 304)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2556, file: !2557, line: 433, baseType: !2568, size: 8, offset: 312)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2556, file: !2557, line: 434, baseType: !2568, size: 8, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2556, file: !2557, line: 435, baseType: !2568, size: 8, offset: 328)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2556, file: !2557, line: 436, baseType: !2568, size: 8, offset: 336)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2556, file: !2557, line: 437, baseType: !2568, size: 8, offset: 344)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2556, file: !2557, line: 438, baseType: !2568, size: 8, offset: 352)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2556, file: !2557, line: 439, baseType: !2568, size: 8, offset: 360)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2556, file: !2557, line: 440, baseType: !2568, size: 8, offset: 368)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2556, file: !2557, line: 441, baseType: !2568, size: 8, offset: 376)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2556, file: !2557, line: 442, baseType: !2568, size: 8, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2556, file: !2557, line: 443, baseType: !2568, size: 8, offset: 392)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2556, file: !2557, line: 444, baseType: !2568, size: 8, offset: 400)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2556, file: !2557, line: 445, baseType: !2568, size: 8, offset: 408)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2556, file: !2557, line: 446, baseType: !2568, size: 8, offset: 416)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2556, file: !2557, line: 447, baseType: !2568, size: 8, offset: 424)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2556, file: !2557, line: 448, baseType: !2568, size: 8, offset: 432)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2556, file: !2557, line: 449, baseType: !2568, size: 8, offset: 440)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2556, file: !2557, line: 450, baseType: !2568, size: 8, offset: 448)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2556, file: !2557, line: 451, baseType: !2568, size: 8, offset: 456)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2556, file: !2557, line: 452, baseType: !2568, size: 8, offset: 464)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2556, file: !2557, line: 453, baseType: !2568, size: 8, offset: 472)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2556, file: !2557, line: 454, baseType: !2568, size: 8, offset: 480)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2556, file: !2557, line: 455, baseType: !2568, size: 8, offset: 488)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2556, file: !2557, line: 456, baseType: !2568, size: 8, offset: 496)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2556, file: !2557, line: 457, baseType: !2568, size: 8, offset: 504)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2556, file: !2557, line: 458, baseType: !2568, size: 8, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2556, file: !2557, line: 459, baseType: !2568, size: 8, offset: 520)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2556, file: !2557, line: 460, baseType: !2568, size: 8, offset: 528)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2556, file: !2557, line: 461, baseType: !2568, size: 8, offset: 536)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2556, file: !2557, line: 462, baseType: !2568, size: 8, offset: 544)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2556, file: !2557, line: 463, baseType: !2568, size: 8, offset: 552)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2556, file: !2557, line: 464, baseType: !2568, size: 8, offset: 560)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2556, file: !2557, line: 465, baseType: !2568, size: 8, offset: 568)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2556, file: !2557, line: 466, baseType: !2568, size: 8, offset: 576)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2556, file: !2557, line: 467, baseType: !2568, size: 8, offset: 584)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2556, file: !2557, line: 468, baseType: !2568, size: 8, offset: 592)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2556, file: !2557, line: 469, baseType: !2568, size: 8, offset: 600)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2556, file: !2557, line: 470, baseType: !2568, size: 8, offset: 608)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2556, file: !2557, line: 471, baseType: !2568, size: 8, offset: 616)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2556, file: !2557, line: 472, baseType: !2568, size: 8, offset: 624)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2556, file: !2557, line: 473, baseType: !2568, size: 8, offset: 632)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2556, file: !2557, line: 474, baseType: !2568, size: 8, offset: 640)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2556, file: !2557, line: 475, baseType: !2568, size: 8, offset: 648)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2556, file: !2557, line: 476, baseType: !2568, size: 8, offset: 656)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2556, file: !2557, line: 477, baseType: !2568, size: 8, offset: 664)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2556, file: !2557, line: 478, baseType: !2568, size: 8, offset: 672)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2556, file: !2557, line: 479, baseType: !2568, size: 8, offset: 680)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2556, file: !2557, line: 480, baseType: !2568, size: 8, offset: 688)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2556, file: !2557, line: 481, baseType: !2568, size: 8, offset: 696)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2556, file: !2557, line: 482, baseType: !2568, size: 8, offset: 704)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2556, file: !2557, line: 483, baseType: !2568, size: 8, offset: 712)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2556, file: !2557, line: 484, baseType: !2568, size: 8, offset: 720)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2556, file: !2557, line: 485, baseType: !2568, size: 8, offset: 728)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2556, file: !2557, line: 486, baseType: !2568, size: 8, offset: 736)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2556, file: !2557, line: 487, baseType: !2568, size: 8, offset: 744)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2556, file: !2557, line: 488, baseType: !2568, size: 8, offset: 752)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2556, file: !2557, line: 489, baseType: !2568, size: 8, offset: 760)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2556, file: !2557, line: 490, baseType: !2568, size: 8, offset: 768)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2556, file: !2557, line: 491, baseType: !2568, size: 8, offset: 776)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2556, file: !2557, line: 492, baseType: !2568, size: 8, offset: 784)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2556, file: !2557, line: 493, baseType: !2568, size: 8, offset: 792)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2556, file: !2557, line: 494, baseType: !2568, size: 8, offset: 800)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2556, file: !2557, line: 495, baseType: !2568, size: 8, offset: 808)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2556, file: !2557, line: 496, baseType: !2568, size: 8, offset: 816)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2556, file: !2557, line: 497, baseType: !2568, size: 8, offset: 824)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2556, file: !2557, line: 498, baseType: !2568, size: 8, offset: 832)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2556, file: !2557, line: 499, baseType: !2568, size: 8, offset: 840)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2556, file: !2557, line: 500, baseType: !2568, size: 8, offset: 848)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2556, file: !2557, line: 501, baseType: !2568, size: 8, offset: 856)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2556, file: !2557, line: 502, baseType: !2568, size: 8, offset: 864)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2556, file: !2557, line: 503, baseType: !2568, size: 8, offset: 872)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2556, file: !2557, line: 504, baseType: !2568, size: 8, offset: 880)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2556, file: !2557, line: 505, baseType: !2568, size: 8, offset: 888)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2556, file: !2557, line: 506, baseType: !2568, size: 8, offset: 896)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2556, file: !2557, line: 507, baseType: !2568, size: 8, offset: 904)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2556, file: !2557, line: 508, baseType: !2568, size: 8, offset: 912)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2556, file: !2557, line: 509, baseType: !2568, size: 8, offset: 920)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2556, file: !2557, line: 510, baseType: !2568, size: 8, offset: 928)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2556, file: !2557, line: 511, baseType: !2568, size: 8, offset: 936)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2556, file: !2557, line: 512, baseType: !2568, size: 8, offset: 944)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2556, file: !2557, line: 513, baseType: !2568, size: 8, offset: 952)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2556, file: !2557, line: 514, baseType: !2568, size: 8, offset: 960)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2556, file: !2557, line: 515, baseType: !2568, size: 8, offset: 968)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2556, file: !2557, line: 516, baseType: !2568, size: 8, offset: 976)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2556, file: !2557, line: 517, baseType: !2568, size: 8, offset: 984)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2556, file: !2557, line: 518, baseType: !2568, size: 8, offset: 992)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2556, file: !2557, line: 519, baseType: !2568, size: 8, offset: 1000)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2556, file: !2557, line: 520, baseType: !2568, size: 8, offset: 1008)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2556, file: !2557, line: 521, baseType: !2568, size: 8, offset: 1016)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2556, file: !2557, line: 522, baseType: !2568, size: 8, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2556, file: !2557, line: 523, baseType: !2568, size: 8, offset: 1032)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2556, file: !2557, line: 524, baseType: !2568, size: 8, offset: 1040)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2556, file: !2557, line: 525, baseType: !2568, size: 8, offset: 1048)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2556, file: !2557, line: 526, baseType: !2568, size: 8, offset: 1056)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2556, file: !2557, line: 527, baseType: !2568, size: 8, offset: 1064)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2556, file: !2557, line: 528, baseType: !2568, size: 8, offset: 1072)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2556, file: !2557, line: 529, baseType: !2568, size: 8, offset: 1080)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2556, file: !2557, line: 530, baseType: !2568, size: 8, offset: 1088)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2556, file: !2557, line: 531, baseType: !2568, size: 8, offset: 1096)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2556, file: !2557, line: 532, baseType: !2568, size: 8, offset: 1104)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2556, file: !2557, line: 533, baseType: !2568, size: 8, offset: 1112)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2556, file: !2557, line: 534, baseType: !2568, size: 8, offset: 1120)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2556, file: !2557, line: 535, baseType: !2568, size: 8, offset: 1128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2556, file: !2557, line: 536, baseType: !2568, size: 8, offset: 1136)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2556, file: !2557, line: 537, baseType: !2568, size: 8, offset: 1144)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2556, file: !2557, line: 538, baseType: !2568, size: 8, offset: 1152)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2556, file: !2557, line: 539, baseType: !2568, size: 8, offset: 1160)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2556, file: !2557, line: 540, baseType: !2568, size: 8, offset: 1168)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2556, file: !2557, line: 541, baseType: !2568, size: 8, offset: 1176)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2556, file: !2557, line: 542, baseType: !2568, size: 8, offset: 1184)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2556, file: !2557, line: 543, baseType: !2568, size: 8, offset: 1192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2556, file: !2557, line: 544, baseType: !2568, size: 8, offset: 1200)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2556, file: !2557, line: 545, baseType: !2568, size: 8, offset: 1208)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2556, file: !2557, line: 546, baseType: !2568, size: 8, offset: 1216)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2556, file: !2557, line: 547, baseType: !2568, size: 8, offset: 1224)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2556, file: !2557, line: 548, baseType: !2568, size: 8, offset: 1232)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2556, file: !2557, line: 549, baseType: !2568, size: 8, offset: 1240)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2556, file: !2557, line: 550, baseType: !2568, size: 8, offset: 1248)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2556, file: !2557, line: 551, baseType: !2568, size: 8, offset: 1256)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2556, file: !2557, line: 552, baseType: !2568, size: 8, offset: 1264)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2556, file: !2557, line: 553, baseType: !2568, size: 8, offset: 1272)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2556, file: !2557, line: 554, baseType: !2568, size: 8, offset: 1280)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2556, file: !2557, line: 555, baseType: !2568, size: 8, offset: 1288)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2556, file: !2557, line: 556, baseType: !2568, size: 8, offset: 1296)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2556, file: !2557, line: 557, baseType: !2568, size: 8, offset: 1304)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2556, file: !2557, line: 558, baseType: !2568, size: 8, offset: 1312)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2556, file: !2557, line: 559, baseType: !2568, size: 8, offset: 1320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2556, file: !2557, line: 560, baseType: !2568, size: 8, offset: 1328)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2556, file: !2557, line: 561, baseType: !2568, size: 8, offset: 1336)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2556, file: !2557, line: 562, baseType: !2568, size: 8, offset: 1344)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2556, file: !2557, line: 563, baseType: !2568, size: 8, offset: 1352)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2556, file: !2557, line: 564, baseType: !2568, size: 8, offset: 1360)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2556, file: !2557, line: 565, baseType: !2568, size: 8, offset: 1368)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2556, file: !2557, line: 566, baseType: !2568, size: 8, offset: 1376)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2556, file: !2557, line: 567, baseType: !2568, size: 8, offset: 1384)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2556, file: !2557, line: 568, baseType: !2568, size: 8, offset: 1392)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2556, file: !2557, line: 569, baseType: !2568, size: 8, offset: 1400)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2556, file: !2557, line: 570, baseType: !2568, size: 8, offset: 1408)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2556, file: !2557, line: 571, baseType: !2568, size: 8, offset: 1416)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2556, file: !2557, line: 572, baseType: !2568, size: 8, offset: 1424)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2556, file: !2557, line: 573, baseType: !2568, size: 8, offset: 1432)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2556, file: !2557, line: 574, baseType: !2568, size: 8, offset: 1440)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1416, file: !135, line: 3405, baseType: !2724, size: 384)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2724, file: !135, line: 3353, baseType: !1452, size: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2724, file: !135, line: 3356, baseType: !2728, size: 192, offset: 192)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2557, line: 578, size: 192, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2728, file: !2557, line: 580, baseType: !1408, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2728, file: !2557, line: 581, baseType: !1408, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2728, file: !2557, line: 582, baseType: !1408, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2728, file: !2557, line: 583, baseType: !1408, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2728, file: !2557, line: 584, baseType: !1407, size: 8, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2728, file: !2557, line: 585, baseType: !1407, size: 8, offset: 136)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2728, file: !2557, line: 586, baseType: !1407, size: 8, offset: 144)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2728, file: !2557, line: 587, baseType: !1407, size: 8, offset: 152)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2728, file: !2557, line: 588, baseType: !1407, size: 8, offset: 160)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2728, file: !2557, line: 589, baseType: !1407, size: 8, offset: 168)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2728, file: !2557, line: 590, baseType: !1407, size: 8, offset: 176)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!2743 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "prop_value_t", file: !655, line: 74, baseType: !2748)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prop_value_d", file: !655, line: 64, size: 128, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_val", scope: !2748, file: !655, line: 68, baseType: !7, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2748, file: !655, line: 71, baseType: !1456, size: 64, offset: 64)
!2752 = !{!0, !2753, !2781}
!2753 = !DIGlobalVariableExpression(var: !2754, expr: !DIExpression())
!2754 = distinct !DIGlobalVariable(name: "pass_fold_builtins", scope: !2, file: !3, line: 3530, type: !2755, isLocal: false, isDefinition: true)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !400, line: 156, size: 640, elements: !2756)
!2756 = !{!2757}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2755, file: !400, line: 158, baseType: !2758, size: 640)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !400, line: 114, size: 640, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2766, !2770, !2772, !2773, !2774, !2776, !2777, !2778, !2779, !2780}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2758, file: !400, line: 117, baseType: !399, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2758, file: !400, line: 121, baseType: !1413, size: 64, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2758, file: !400, line: 125, baseType: !2763, size: 64, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!1407}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2758, file: !400, line: 130, baseType: !2767, size: 64, offset: 192)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!7}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2758, file: !400, line: 133, baseType: !2771, size: 64, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2758, file: !400, line: 136, baseType: !2771, size: 64, offset: 320)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2758, file: !400, line: 139, baseType: !1408, size: 32, offset: 384)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2758, file: !400, line: 143, baseType: !2775, size: 32, offset: 416)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !407, line: 80, baseType: !406)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2758, file: !400, line: 146, baseType: !7, size: 32, offset: 448)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2758, file: !400, line: 147, baseType: !7, size: 32, offset: 480)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2758, file: !400, line: 148, baseType: !7, size: 32, offset: 512)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2758, file: !400, line: 151, baseType: !7, size: 32, offset: 544)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2758, file: !400, line: 152, baseType: !7, size: 32, offset: 576)
!2781 = !DIGlobalVariableExpression(var: !2782, expr: !DIExpression())
!2782 = distinct !DIGlobalVariable(name: "const_val", scope: !2, file: !3, line: 229, type: !2746, isLocal: true, isDefinition: true)
!2783 = !{i32 2, !"Dwarf Version", i32 4}
!2784 = !{i32 2, !"Debug Info Version", i32 3}
!2785 = !{i32 1, !"wchar_size", i32 4}
!2786 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2787 = distinct !DISubprogram(name: "vprintf", scope: !2788, file: !2788, line: 39, type: !2789, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2799)
!2788 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!1408, !2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1413)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2793, file: !3, baseType: !7, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2793, file: !3, baseType: !7, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2793, file: !3, baseType: !1412, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2793, file: !3, baseType: !1412, size: 64, offset: 128)
!2799 = !{!2800, !2801}
!2800 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2787, file: !2788, line: 39, type: !2791)
!2801 = !DILocalVariable(name: "__arg", arg: 2, scope: !2787, file: !2788, line: 39, type: !2792)
!2802 = !DILocation(line: 0, scope: !2787)
!2803 = !DILocation(line: 41, column: 20, scope: !2787)
!2804 = !DILocation(line: 41, column: 10, scope: !2787)
!2805 = !DILocation(line: 41, column: 3, scope: !2787)
!2806 = distinct !DISubprogram(name: "getchar", scope: !2788, file: !2788, line: 47, type: !2807, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!1408}
!2809 = !{}
!2810 = !DILocation(line: 49, column: 16, scope: !2806)
!2811 = !DILocation(line: 49, column: 10, scope: !2806)
!2812 = !DILocation(line: 49, column: 3, scope: !2806)
!2813 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2788, file: !2788, line: 56, type: !2814, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2866)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!1408, !2816}
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2818, line: 7, baseType: !2819)
!2818 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2820, line: 49, size: 1728, elements: !2821)
!2820 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2821 = !{!2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2837, !2839, !2840, !2841, !2844, !2845, !2846, !2847, !2850, !2852, !2855, !2858, !2859, !2860, !2861, !2862}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2819, file: !2820, line: 51, baseType: !1408, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2819, file: !2820, line: 54, baseType: !1410, size: 64, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2819, file: !2820, line: 55, baseType: !1410, size: 64, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2819, file: !2820, line: 56, baseType: !1410, size: 64, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2819, file: !2820, line: 57, baseType: !1410, size: 64, offset: 256)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2819, file: !2820, line: 58, baseType: !1410, size: 64, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2819, file: !2820, line: 59, baseType: !1410, size: 64, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2819, file: !2820, line: 60, baseType: !1410, size: 64, offset: 448)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2819, file: !2820, line: 61, baseType: !1410, size: 64, offset: 512)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2819, file: !2820, line: 64, baseType: !1410, size: 64, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2819, file: !2820, line: 65, baseType: !1410, size: 64, offset: 640)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2819, file: !2820, line: 66, baseType: !1410, size: 64, offset: 704)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2819, file: !2820, line: 68, baseType: !2835, size: 64, offset: 768)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2820, line: 36, flags: DIFlagFwdDecl)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2819, file: !2820, line: 70, baseType: !2838, size: 64, offset: 832)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2819, file: !2820, line: 72, baseType: !1408, size: 32, offset: 896)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2819, file: !2820, line: 73, baseType: !1408, size: 32, offset: 928)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2819, file: !2820, line: 74, baseType: !2842, size: 64, offset: 960)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2843, line: 152, baseType: !1471)
!2843 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2819, file: !2820, line: 77, baseType: !2743, size: 16, offset: 1024)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2819, file: !2820, line: 78, baseType: !2568, size: 8, offset: 1040)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2819, file: !2820, line: 79, baseType: !1513, size: 8, offset: 1048)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2819, file: !2820, line: 81, baseType: !2848, size: 64, offset: 1088)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2820, line: 43, baseType: null)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2819, file: !2820, line: 89, baseType: !2851, size: 64, offset: 1152)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2843, line: 153, baseType: !1471)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2819, file: !2820, line: 91, baseType: !2853, size: 64, offset: 1216)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2820, line: 37, flags: DIFlagFwdDecl)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2819, file: !2820, line: 92, baseType: !2856, size: 64, offset: 1280)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2820, line: 38, flags: DIFlagFwdDecl)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2819, file: !2820, line: 93, baseType: !2838, size: 64, offset: 1344)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2819, file: !2820, line: 94, baseType: !1412, size: 64, offset: 1408)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2819, file: !2820, line: 95, baseType: !1884, size: 64, offset: 1472)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2819, file: !2820, line: 96, baseType: !1408, size: 32, offset: 1536)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2819, file: !2820, line: 98, baseType: !2863, size: 160, offset: 1568)
!2863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1411, size: 160, elements: !2864)
!2864 = !{!2865}
!2865 = !DISubrange(count: 20)
!2866 = !{!2867}
!2867 = !DILocalVariable(name: "__fp", arg: 1, scope: !2813, file: !2788, line: 56, type: !2816)
!2868 = !DILocation(line: 0, scope: !2813)
!2869 = !DILocation(line: 58, column: 10, scope: !2813)
!2870 = !DILocation(line: 58, column: 3, scope: !2813)
!2871 = distinct !DISubprogram(name: "getc_unlocked", scope: !2788, file: !2788, line: 66, type: !2814, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2872)
!2872 = !{!2873}
!2873 = !DILocalVariable(name: "__fp", arg: 1, scope: !2871, file: !2788, line: 66, type: !2816)
!2874 = !DILocation(line: 0, scope: !2871)
!2875 = !DILocation(line: 68, column: 10, scope: !2871)
!2876 = !DILocation(line: 68, column: 3, scope: !2871)
!2877 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2788, file: !2788, line: 73, type: !2807, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!2878 = !DILocation(line: 75, column: 10, scope: !2877)
!2879 = !DILocation(line: 75, column: 3, scope: !2877)
!2880 = distinct !DISubprogram(name: "putchar", scope: !2788, file: !2788, line: 82, type: !2881, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2883)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!1408, !1408}
!2883 = !{!2884}
!2884 = !DILocalVariable(name: "__c", arg: 1, scope: !2880, file: !2788, line: 82, type: !1408)
!2885 = !DILocation(line: 0, scope: !2880)
!2886 = !DILocation(line: 84, column: 21, scope: !2880)
!2887 = !DILocation(line: 84, column: 10, scope: !2880)
!2888 = !DILocation(line: 84, column: 3, scope: !2880)
!2889 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2788, file: !2788, line: 91, type: !2890, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2892)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!1408, !1408, !2816}
!2892 = !{!2893, !2894}
!2893 = !DILocalVariable(name: "__c", arg: 1, scope: !2889, file: !2788, line: 91, type: !1408)
!2894 = !DILocalVariable(name: "__stream", arg: 2, scope: !2889, file: !2788, line: 91, type: !2816)
!2895 = !DILocation(line: 0, scope: !2889)
!2896 = !DILocation(line: 93, column: 10, scope: !2889)
!2897 = !DILocation(line: 93, column: 3, scope: !2889)
!2898 = distinct !DISubprogram(name: "putc_unlocked", scope: !2788, file: !2788, line: 101, type: !2890, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2899)
!2899 = !{!2900, !2901}
!2900 = !DILocalVariable(name: "__c", arg: 1, scope: !2898, file: !2788, line: 101, type: !1408)
!2901 = !DILocalVariable(name: "__stream", arg: 2, scope: !2898, file: !2788, line: 101, type: !2816)
!2902 = !DILocation(line: 0, scope: !2898)
!2903 = !DILocation(line: 103, column: 10, scope: !2898)
!2904 = !DILocation(line: 103, column: 3, scope: !2898)
!2905 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2788, file: !2788, line: 108, type: !2881, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2906)
!2906 = !{!2907}
!2907 = !DILocalVariable(name: "__c", arg: 1, scope: !2905, file: !2788, line: 108, type: !1408)
!2908 = !DILocation(line: 0, scope: !2905)
!2909 = !DILocation(line: 110, column: 10, scope: !2905)
!2910 = !DILocation(line: 110, column: 3, scope: !2905)
!2911 = distinct !DISubprogram(name: "getline", scope: !2788, file: !2788, line: 118, type: !2912, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2916)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!2914, !1409, !2915, !2816}
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2843, line: 193, baseType: !1471)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!2916 = !{!2917, !2918, !2919}
!2917 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2911, file: !2788, line: 118, type: !1409)
!2918 = !DILocalVariable(name: "__n", arg: 2, scope: !2911, file: !2788, line: 118, type: !2915)
!2919 = !DILocalVariable(name: "__stream", arg: 3, scope: !2911, file: !2788, line: 118, type: !2816)
!2920 = !DILocation(line: 0, scope: !2911)
!2921 = !DILocation(line: 120, column: 10, scope: !2911)
!2922 = !DILocation(line: 120, column: 3, scope: !2911)
!2923 = distinct !DISubprogram(name: "feof_unlocked", scope: !2788, file: !2788, line: 128, type: !2814, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2924)
!2924 = !{!2925}
!2925 = !DILocalVariable(name: "__stream", arg: 1, scope: !2923, file: !2788, line: 128, type: !2816)
!2926 = !DILocation(line: 0, scope: !2923)
!2927 = !DILocation(line: 130, column: 10, scope: !2923)
!2928 = !DILocation(line: 130, column: 3, scope: !2923)
!2929 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2788, file: !2788, line: 135, type: !2814, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2930)
!2930 = !{!2931}
!2931 = !DILocalVariable(name: "__stream", arg: 1, scope: !2929, file: !2788, line: 135, type: !2816)
!2932 = !DILocation(line: 0, scope: !2929)
!2933 = !DILocation(line: 137, column: 10, scope: !2929)
!2934 = !DILocation(line: 137, column: 3, scope: !2929)
!2935 = distinct !DISubprogram(name: "tolower", scope: !2936, file: !2936, line: 207, type: !2881, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2937)
!2936 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2937 = !{!2938}
!2938 = !DILocalVariable(name: "__c", arg: 1, scope: !2935, file: !2936, line: 207, type: !1408)
!2939 = !DILocation(line: 0, scope: !2935)
!2940 = !DILocation(line: 209, column: 22, scope: !2935)
!2941 = !DILocation(line: 209, column: 39, scope: !2935)
!2942 = !DILocation(line: 209, column: 38, scope: !2935)
!2943 = !DILocation(line: 209, column: 37, scope: !2935)
!2944 = !DILocation(line: 209, column: 10, scope: !2935)
!2945 = !DILocation(line: 209, column: 3, scope: !2935)
!2946 = distinct !DISubprogram(name: "toupper", scope: !2936, file: !2936, line: 213, type: !2881, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2947)
!2947 = !{!2948}
!2948 = !DILocalVariable(name: "__c", arg: 1, scope: !2946, file: !2936, line: 213, type: !1408)
!2949 = !DILocation(line: 0, scope: !2946)
!2950 = !DILocation(line: 215, column: 22, scope: !2946)
!2951 = !DILocation(line: 215, column: 39, scope: !2946)
!2952 = !DILocation(line: 215, column: 38, scope: !2946)
!2953 = !DILocation(line: 215, column: 37, scope: !2946)
!2954 = !DILocation(line: 215, column: 10, scope: !2946)
!2955 = !DILocation(line: 215, column: 3, scope: !2946)
!2956 = distinct !DISubprogram(name: "atoi", scope: !2957, file: !2957, line: 361, type: !2958, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2960)
!2957 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!1408, !1413}
!2960 = !{!2961}
!2961 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2956, file: !2957, line: 361, type: !1413)
!2962 = !DILocation(line: 0, scope: !2956)
!2963 = !DILocation(line: 363, column: 16, scope: !2956)
!2964 = !DILocation(line: 363, column: 10, scope: !2956)
!2965 = !DILocation(line: 363, column: 3, scope: !2956)
!2966 = distinct !DISubprogram(name: "atol", scope: !2957, file: !2957, line: 366, type: !2967, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2969)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!1471, !1413}
!2969 = !{!2970}
!2970 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2966, file: !2957, line: 366, type: !1413)
!2971 = !DILocation(line: 0, scope: !2966)
!2972 = !DILocation(line: 368, column: 10, scope: !2966)
!2973 = !DILocation(line: 368, column: 3, scope: !2966)
!2974 = distinct !DISubprogram(name: "atoll", scope: !2957, file: !2957, line: 373, type: !2975, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2978)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!2977, !1413}
!2977 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2978 = !{!2979}
!2979 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2974, file: !2957, line: 373, type: !1413)
!2980 = !DILocation(line: 0, scope: !2974)
!2981 = !DILocation(line: 375, column: 10, scope: !2974)
!2982 = !DILocation(line: 375, column: 3, scope: !2974)
!2983 = distinct !DISubprogram(name: "bsearch", scope: !2984, file: !2984, line: 20, type: !2985, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2988)
!2984 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!1412, !2045, !2045, !1884, !1884, !2987}
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2957, line: 808, baseType: !2217)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998}
!2989 = !DILocalVariable(name: "__key", arg: 1, scope: !2983, file: !2984, line: 20, type: !2045)
!2990 = !DILocalVariable(name: "__base", arg: 2, scope: !2983, file: !2984, line: 20, type: !2045)
!2991 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2983, file: !2984, line: 20, type: !1884)
!2992 = !DILocalVariable(name: "__size", arg: 4, scope: !2983, file: !2984, line: 20, type: !1884)
!2993 = !DILocalVariable(name: "__compar", arg: 5, scope: !2983, file: !2984, line: 21, type: !2987)
!2994 = !DILocalVariable(name: "__l", scope: !2983, file: !2984, line: 23, type: !1884)
!2995 = !DILocalVariable(name: "__u", scope: !2983, file: !2984, line: 23, type: !1884)
!2996 = !DILocalVariable(name: "__idx", scope: !2983, file: !2984, line: 23, type: !1884)
!2997 = !DILocalVariable(name: "__p", scope: !2983, file: !2984, line: 24, type: !2045)
!2998 = !DILocalVariable(name: "__comparison", scope: !2983, file: !2984, line: 25, type: !1408)
!2999 = !DILocation(line: 0, scope: !2983)
!3000 = !DILocation(line: 29, column: 3, scope: !2983)
!3001 = !DILocation(line: 27, column: 7, scope: !2983)
!3002 = !DILocation(line: 29, column: 14, scope: !2983)
!3003 = !DILocation(line: 31, column: 20, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2983, file: !2984, line: 30, column: 5)
!3005 = !DILocation(line: 31, column: 27, scope: !3004)
!3006 = !DILocation(line: 32, column: 56, scope: !3004)
!3007 = !DILocation(line: 32, column: 47, scope: !3004)
!3008 = !DILocation(line: 33, column: 22, scope: !3004)
!3009 = !DILocation(line: 34, column: 24, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3004, file: !2984, line: 34, column: 11)
!3011 = !DILocation(line: 34, column: 11, scope: !3004)
!3012 = !DILocation(line: 36, column: 29, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3010, file: !2984, line: 36, column: 16)
!3014 = !DILocation(line: 36, column: 16, scope: !3010)
!3015 = !DILocation(line: 37, column: 14, scope: !3013)
!3016 = distinct !{!3016, !3000, !3017}
!3017 = !DILocation(line: 40, column: 5, scope: !2983)
!3018 = !DILocation(line: 43, column: 1, scope: !2983)
!3019 = distinct !DISubprogram(name: "atof", scope: !3020, file: !3020, line: 25, type: !3021, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3024)
!3020 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!3023, !1413}
!3023 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3024 = !{!3025}
!3025 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3019, file: !3020, line: 25, type: !1413)
!3026 = !DILocation(line: 0, scope: !3019)
!3027 = !DILocation(line: 27, column: 10, scope: !3019)
!3028 = !DILocation(line: 27, column: 3, scope: !3019)
!3029 = distinct !DISubprogram(name: "strtoimax", scope: !3030, file: !3030, line: 324, type: !3031, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3037)
!3030 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!3033, !2791, !3036, !1408}
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3034, line: 101, baseType: !3035)
!3034 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2843, line: 72, baseType: !1471)
!3036 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1409)
!3037 = !{!3038, !3039, !3040}
!3038 = !DILocalVariable(name: "nptr", arg: 1, scope: !3029, file: !3030, line: 324, type: !2791)
!3039 = !DILocalVariable(name: "endptr", arg: 2, scope: !3029, file: !3030, line: 324, type: !3036)
!3040 = !DILocalVariable(name: "base", arg: 3, scope: !3029, file: !3030, line: 324, type: !1408)
!3041 = !DILocation(line: 0, scope: !3029)
!3042 = !DILocation(line: 327, column: 10, scope: !3029)
!3043 = !DILocation(line: 327, column: 3, scope: !3029)
!3044 = distinct !DISubprogram(name: "strtoumax", scope: !3030, file: !3030, line: 336, type: !3045, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3049)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!3047, !2791, !3036, !1408}
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3034, line: 102, baseType: !3048)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2843, line: 73, baseType: !1469)
!3049 = !{!3050, !3051, !3052}
!3050 = !DILocalVariable(name: "nptr", arg: 1, scope: !3044, file: !3030, line: 336, type: !2791)
!3051 = !DILocalVariable(name: "endptr", arg: 2, scope: !3044, file: !3030, line: 336, type: !3036)
!3052 = !DILocalVariable(name: "base", arg: 3, scope: !3044, file: !3030, line: 336, type: !1408)
!3053 = !DILocation(line: 0, scope: !3044)
!3054 = !DILocation(line: 339, column: 10, scope: !3044)
!3055 = !DILocation(line: 339, column: 3, scope: !3044)
!3056 = distinct !DISubprogram(name: "wcstoimax", scope: !3030, file: !3030, line: 348, type: !3057, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3066)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!3033, !3059, !3063, !1408}
!3059 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3060)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3062)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3030, line: 34, baseType: !1408)
!3063 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3064)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3066 = !{!3067, !3068, !3069}
!3067 = !DILocalVariable(name: "nptr", arg: 1, scope: !3056, file: !3030, line: 348, type: !3059)
!3068 = !DILocalVariable(name: "endptr", arg: 2, scope: !3056, file: !3030, line: 348, type: !3063)
!3069 = !DILocalVariable(name: "base", arg: 3, scope: !3056, file: !3030, line: 348, type: !1408)
!3070 = !DILocation(line: 0, scope: !3056)
!3071 = !DILocation(line: 351, column: 10, scope: !3056)
!3072 = !DILocation(line: 351, column: 3, scope: !3056)
!3073 = distinct !DISubprogram(name: "wcstoumax", scope: !3030, file: !3030, line: 362, type: !3074, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3076)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!3047, !3059, !3063, !1408}
!3076 = !{!3077, !3078, !3079}
!3077 = !DILocalVariable(name: "nptr", arg: 1, scope: !3073, file: !3030, line: 362, type: !3059)
!3078 = !DILocalVariable(name: "endptr", arg: 2, scope: !3073, file: !3030, line: 362, type: !3063)
!3079 = !DILocalVariable(name: "base", arg: 3, scope: !3073, file: !3030, line: 362, type: !1408)
!3080 = !DILocation(line: 0, scope: !3073)
!3081 = !DILocation(line: 365, column: 10, scope: !3073)
!3082 = !DILocation(line: 365, column: 3, scope: !3073)
!3083 = distinct !DISubprogram(name: "stat", scope: !3084, file: !3084, line: 453, type: !3085, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3122)
!3084 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!1408, !1413, !3087}
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3089, line: 46, size: 1152, elements: !3090)
!3089 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3090 = !{!3091, !3093, !3095, !3097, !3099, !3101, !3103, !3104, !3105, !3106, !3108, !3110, !3118, !3119, !3120}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3088, file: !3089, line: 48, baseType: !3092, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2843, line: 145, baseType: !1469)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3088, file: !3089, line: 53, baseType: !3094, size: 64, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2843, line: 148, baseType: !1469)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3088, file: !3089, line: 61, baseType: !3096, size: 64, offset: 128)
!3096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2843, line: 151, baseType: !1469)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3088, file: !3089, line: 62, baseType: !3098, size: 32, offset: 192)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2843, line: 150, baseType: !7)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3088, file: !3089, line: 64, baseType: !3100, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2843, line: 146, baseType: !7)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3088, file: !3089, line: 65, baseType: !3102, size: 32, offset: 256)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2843, line: 147, baseType: !7)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3088, file: !3089, line: 67, baseType: !1408, size: 32, offset: 288)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3088, file: !3089, line: 69, baseType: !3092, size: 64, offset: 320)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3088, file: !3089, line: 74, baseType: !2842, size: 64, offset: 384)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3088, file: !3089, line: 78, baseType: !3107, size: 64, offset: 448)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2843, line: 174, baseType: !1471)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3088, file: !3089, line: 80, baseType: !3109, size: 64, offset: 512)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2843, line: 179, baseType: !1471)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3088, file: !3089, line: 91, baseType: !3111, size: 128, offset: 576)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3112, line: 10, size: 128, elements: !3113)
!3112 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3113 = !{!3114, !3116}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3111, file: !3112, line: 12, baseType: !3115, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2843, line: 160, baseType: !1471)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3111, file: !3112, line: 16, baseType: !3117, size: 64, offset: 64)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2843, line: 196, baseType: !1471)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3088, file: !3089, line: 92, baseType: !3111, size: 128, offset: 704)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3088, file: !3089, line: 93, baseType: !3111, size: 128, offset: 832)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3088, file: !3089, line: 106, baseType: !3121, size: 192, offset: 960)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3117, size: 192, elements: !1489)
!3122 = !{!3123, !3124}
!3123 = !DILocalVariable(name: "__path", arg: 1, scope: !3083, file: !3084, line: 453, type: !1413)
!3124 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3083, file: !3084, line: 453, type: !3087)
!3125 = !DILocation(line: 0, scope: !3083)
!3126 = !DILocation(line: 455, column: 10, scope: !3083)
!3127 = !DILocation(line: 455, column: 3, scope: !3083)
!3128 = distinct !DISubprogram(name: "lstat", scope: !3084, file: !3084, line: 460, type: !3085, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3129)
!3129 = !{!3130, !3131}
!3130 = !DILocalVariable(name: "__path", arg: 1, scope: !3128, file: !3084, line: 460, type: !1413)
!3131 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3128, file: !3084, line: 460, type: !3087)
!3132 = !DILocation(line: 0, scope: !3128)
!3133 = !DILocation(line: 462, column: 10, scope: !3128)
!3134 = !DILocation(line: 462, column: 3, scope: !3128)
!3135 = distinct !DISubprogram(name: "fstat", scope: !3084, file: !3084, line: 467, type: !3136, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3138)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!1408, !1408, !3087}
!3138 = !{!3139, !3140}
!3139 = !DILocalVariable(name: "__fd", arg: 1, scope: !3135, file: !3084, line: 467, type: !1408)
!3140 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3135, file: !3084, line: 467, type: !3087)
!3141 = !DILocation(line: 0, scope: !3135)
!3142 = !DILocation(line: 469, column: 10, scope: !3135)
!3143 = !DILocation(line: 469, column: 3, scope: !3135)
!3144 = distinct !DISubprogram(name: "fstatat", scope: !3084, file: !3084, line: 474, type: !3145, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3147)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!1408, !1408, !1413, !3087, !1408}
!3147 = !{!3148, !3149, !3150, !3151}
!3148 = !DILocalVariable(name: "__fd", arg: 1, scope: !3144, file: !3084, line: 474, type: !1408)
!3149 = !DILocalVariable(name: "__filename", arg: 2, scope: !3144, file: !3084, line: 474, type: !1413)
!3150 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3144, file: !3084, line: 474, type: !3087)
!3151 = !DILocalVariable(name: "__flag", arg: 4, scope: !3144, file: !3084, line: 474, type: !1408)
!3152 = !DILocation(line: 0, scope: !3144)
!3153 = !DILocation(line: 477, column: 10, scope: !3144)
!3154 = !DILocation(line: 477, column: 3, scope: !3144)
!3155 = distinct !DISubprogram(name: "mknod", scope: !3084, file: !3084, line: 483, type: !3156, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3158)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!1408, !1413, !3098, !3092}
!3158 = !{!3159, !3160, !3161}
!3159 = !DILocalVariable(name: "__path", arg: 1, scope: !3155, file: !3084, line: 483, type: !1413)
!3160 = !DILocalVariable(name: "__mode", arg: 2, scope: !3155, file: !3084, line: 483, type: !3098)
!3161 = !DILocalVariable(name: "__dev", arg: 3, scope: !3155, file: !3084, line: 483, type: !3092)
!3162 = !DILocation(line: 0, scope: !3155)
!3163 = !DILocation(line: 485, column: 10, scope: !3155)
!3164 = !DILocation(line: 485, column: 3, scope: !3155)
!3165 = distinct !DISubprogram(name: "mknodat", scope: !3084, file: !3084, line: 491, type: !3166, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3168)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!1408, !1408, !1413, !3098, !3092}
!3168 = !{!3169, !3170, !3171, !3172}
!3169 = !DILocalVariable(name: "__fd", arg: 1, scope: !3165, file: !3084, line: 491, type: !1408)
!3170 = !DILocalVariable(name: "__path", arg: 2, scope: !3165, file: !3084, line: 491, type: !1413)
!3171 = !DILocalVariable(name: "__mode", arg: 3, scope: !3165, file: !3084, line: 491, type: !3098)
!3172 = !DILocalVariable(name: "__dev", arg: 4, scope: !3165, file: !3084, line: 491, type: !3092)
!3173 = !DILocation(line: 0, scope: !3165)
!3174 = !DILocation(line: 494, column: 10, scope: !3165)
!3175 = !DILocation(line: 494, column: 3, scope: !3165)
!3176 = distinct !DISubprogram(name: "stat64", scope: !3084, file: !3084, line: 502, type: !3177, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3199)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!1408, !1413, !3179}
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3089, line: 119, size: 1152, elements: !3181)
!3181 = !{!3182, !3183, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3195, !3196, !3197, !3198}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3180, file: !3089, line: 121, baseType: !3092, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3180, file: !3089, line: 123, baseType: !3184, size: 64, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2843, line: 149, baseType: !1469)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3180, file: !3089, line: 124, baseType: !3096, size: 64, offset: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3180, file: !3089, line: 125, baseType: !3098, size: 32, offset: 192)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3180, file: !3089, line: 132, baseType: !3100, size: 32, offset: 224)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3180, file: !3089, line: 133, baseType: !3102, size: 32, offset: 256)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3180, file: !3089, line: 135, baseType: !1408, size: 32, offset: 288)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3180, file: !3089, line: 136, baseType: !3092, size: 64, offset: 320)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3180, file: !3089, line: 137, baseType: !2842, size: 64, offset: 384)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3180, file: !3089, line: 143, baseType: !3107, size: 64, offset: 448)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3180, file: !3089, line: 144, baseType: !3194, size: 64, offset: 512)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2843, line: 180, baseType: !1471)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3180, file: !3089, line: 152, baseType: !3111, size: 128, offset: 576)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3180, file: !3089, line: 153, baseType: !3111, size: 128, offset: 704)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3180, file: !3089, line: 154, baseType: !3111, size: 128, offset: 832)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3180, file: !3089, line: 164, baseType: !3121, size: 192, offset: 960)
!3199 = !{!3200, !3201}
!3200 = !DILocalVariable(name: "__path", arg: 1, scope: !3176, file: !3084, line: 502, type: !1413)
!3201 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3176, file: !3084, line: 502, type: !3179)
!3202 = !DILocation(line: 0, scope: !3176)
!3203 = !DILocation(line: 504, column: 10, scope: !3176)
!3204 = !DILocation(line: 504, column: 3, scope: !3176)
!3205 = distinct !DISubprogram(name: "lstat64", scope: !3084, file: !3084, line: 509, type: !3177, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3206)
!3206 = !{!3207, !3208}
!3207 = !DILocalVariable(name: "__path", arg: 1, scope: !3205, file: !3084, line: 509, type: !1413)
!3208 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3205, file: !3084, line: 509, type: !3179)
!3209 = !DILocation(line: 0, scope: !3205)
!3210 = !DILocation(line: 511, column: 10, scope: !3205)
!3211 = !DILocation(line: 511, column: 3, scope: !3205)
!3212 = distinct !DISubprogram(name: "fstat64", scope: !3084, file: !3084, line: 516, type: !3213, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3215)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!1408, !1408, !3179}
!3215 = !{!3216, !3217}
!3216 = !DILocalVariable(name: "__fd", arg: 1, scope: !3212, file: !3084, line: 516, type: !1408)
!3217 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3212, file: !3084, line: 516, type: !3179)
!3218 = !DILocation(line: 0, scope: !3212)
!3219 = !DILocation(line: 518, column: 10, scope: !3212)
!3220 = !DILocation(line: 518, column: 3, scope: !3212)
!3221 = distinct !DISubprogram(name: "fstatat64", scope: !3084, file: !3084, line: 523, type: !3222, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3224)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{!1408, !1408, !1413, !3179, !1408}
!3224 = !{!3225, !3226, !3227, !3228}
!3225 = !DILocalVariable(name: "__fd", arg: 1, scope: !3221, file: !3084, line: 523, type: !1408)
!3226 = !DILocalVariable(name: "__filename", arg: 2, scope: !3221, file: !3084, line: 523, type: !1413)
!3227 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3221, file: !3084, line: 523, type: !3179)
!3228 = !DILocalVariable(name: "__flag", arg: 4, scope: !3221, file: !3084, line: 523, type: !1408)
!3229 = !DILocation(line: 0, scope: !3221)
!3230 = !DILocation(line: 526, column: 10, scope: !3221)
!3231 = !DILocation(line: 526, column: 3, scope: !3221)
!3232 = distinct !DISubprogram(name: "debug_lattice_value", scope: !3, file: !3, line: 265, type: !3233, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3235)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{null, !2747}
!3235 = !{!3236}
!3236 = !DILocalVariable(name: "val", arg: 1, scope: !3232, file: !3, line: 265, type: !2747)
!3237 = !DILocation(line: 267, column: 23, scope: !3232)
!3238 = !DILocation(line: 267, column: 3, scope: !3232)
!3239 = !DILocation(line: 268, column: 12, scope: !3232)
!3240 = !DILocation(line: 268, column: 3, scope: !3232)
!3241 = !DILocation(line: 269, column: 1, scope: !3232)
!3242 = distinct !DISubprogram(name: "dump_lattice_value", scope: !3, file: !3, line: 237, type: !3243, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3245)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !2816, !1413, !2747}
!3245 = !{!3246, !3247, !3248}
!3246 = !DILocalVariable(name: "outf", arg: 1, scope: !3242, file: !3, line: 237, type: !2816)
!3247 = !DILocalVariable(name: "prefix", arg: 2, scope: !3242, file: !3, line: 237, type: !1413)
!3248 = !DILocalVariable(name: "val", arg: 3, scope: !3242, file: !3, line: 237, type: !2747)
!3249 = !DILocation(line: 0, scope: !3242)
!3250 = !DILocation(line: 239, column: 3, scope: !3242)
!3251 = !DILocation(line: 242, column: 7, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 240, column: 5)
!3253 = !DILocation(line: 243, column: 7, scope: !3252)
!3254 = !DILocation(line: 245, column: 7, scope: !3252)
!3255 = !DILocation(line: 246, column: 7, scope: !3252)
!3256 = !DILocation(line: 248, column: 7, scope: !3252)
!3257 = !DILocation(line: 249, column: 7, scope: !3252)
!3258 = !DILocation(line: 251, column: 7, scope: !3252)
!3259 = !DILocation(line: 252, column: 44, scope: !3252)
!3260 = !DILocation(line: 252, column: 7, scope: !3252)
!3261 = !DILocation(line: 253, column: 7, scope: !3252)
!3262 = !DILocation(line: 255, column: 7, scope: !3252)
!3263 = !DILocation(line: 256, column: 5, scope: !3252)
!3264 = !DILocation(line: 257, column: 1, scope: !3242)
!3265 = distinct !DISubprogram(name: "get_symbol_constant_value", scope: !3, file: !3, line: 277, type: !3266, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3268)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!1456, !1456}
!3268 = !{!3269, !3270, !3273}
!3269 = !DILocalVariable(name: "sym", arg: 1, scope: !3265, file: !3, line: 277, type: !1456)
!3270 = !DILocalVariable(name: "val", scope: !3271, file: !3, line: 283, type: !1456)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 282, column: 5)
!3272 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 279, column: 7)
!3273 = !DILocalVariable(name: "base", scope: !3274, file: !3, line: 291, type: !1456)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 290, column: 3)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 289, column: 12)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 288, column: 6)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 287, column: 8)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 285, column: 2)
!3279 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 284, column: 11)
!3280 = !DILocation(line: 0, scope: !3265)
!3281 = !DILocation(line: 279, column: 7, scope: !3272)
!3282 = !DILocation(line: 280, column: 7, scope: !3272)
!3283 = !DILocation(line: 280, column: 11, scope: !3272)
!3284 = !DILocation(line: 281, column: 4, scope: !3272)
!3285 = !DILocation(line: 281, column: 23, scope: !3272)
!3286 = !DILocation(line: 279, column: 7, scope: !3265)
!3287 = !DILocation(line: 283, column: 18, scope: !3271)
!3288 = !DILocation(line: 0, scope: !3271)
!3289 = !DILocation(line: 284, column: 11, scope: !3279)
!3290 = !DILocation(line: 284, column: 11, scope: !3271)
!3291 = !DILocation(line: 286, column: 4, scope: !3278)
!3292 = !DILocation(line: 287, column: 8, scope: !3277)
!3293 = !DILocation(line: 287, column: 8, scope: !3278)
!3294 = !DILocation(line: 289, column: 12, scope: !3275)
!3295 = !DILocation(line: 289, column: 28, scope: !3275)
!3296 = !DILocation(line: 289, column: 12, scope: !3276)
!3297 = !DILocation(line: 291, column: 35, scope: !3274)
!3298 = !DILocation(line: 291, column: 17, scope: !3274)
!3299 = !DILocation(line: 0, scope: !3274)
!3300 = !DILocation(line: 292, column: 9, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 292, column: 9)
!3302 = !DILocation(line: 292, column: 14, scope: !3301)
!3303 = !DILocation(line: 292, column: 17, scope: !3301)
!3304 = !DILocation(line: 292, column: 34, scope: !3301)
!3305 = !DILocation(line: 292, column: 9, scope: !3274)
!3306 = !DILocation(line: 294, column: 33, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 293, column: 7)
!3308 = !DILocation(line: 295, column: 37, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 295, column: 13)
!3310 = !DILocation(line: 295, column: 13, scope: !3309)
!3311 = !DILocation(line: 295, column: 13, scope: !3307)
!3312 = !DILocation(line: 296, column: 4, scope: !3309)
!3313 = !DILocation(line: 305, column: 12, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 305, column: 11)
!3315 = !DILocation(line: 306, column: 4, scope: !3314)
!3316 = !DILocation(line: 306, column: 8, scope: !3314)
!3317 = !DILocation(line: 307, column: 4, scope: !3314)
!3318 = !DILocation(line: 307, column: 15, scope: !3314)
!3319 = !DILocation(line: 307, column: 7, scope: !3314)
!3320 = !DILocation(line: 308, column: 11, scope: !3314)
!3321 = !DILocation(line: 308, column: 15, scope: !3314)
!3322 = !DILocation(line: 309, column: 9, scope: !3314)
!3323 = !DILocation(line: 309, column: 12, scope: !3314)
!3324 = !DILocation(line: 305, column: 11, scope: !3271)
!3325 = !DILocation(line: 310, column: 9, scope: !3314)
!3326 = !DILocation(line: 310, column: 2, scope: !3314)
!3327 = !DILocation(line: 313, column: 3, scope: !3265)
!3328 = !DILocation(line: 314, column: 1, scope: !3265)
!3329 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !3330, file: !3330, line: 40, type: !3331, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3335)
!3330 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!2204, !3333}
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!3335 = !{!3336}
!3336 = !DILocalVariable(name: "fun", arg: 1, scope: !3329, file: !3330, line: 40, type: !3333)
!3337 = !DILocation(line: 0, scope: !3329)
!3338 = !DILocation(line: 42, column: 13, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3329, file: !3330, line: 42, column: 7)
!3340 = !DILocation(line: 42, column: 8, scope: !3339)
!3341 = !DILocation(line: 42, column: 7, scope: !3329)
!3342 = !DILocation(line: 44, column: 26, scope: !3329)
!3343 = !DILocation(line: 44, column: 3, scope: !3329)
!3344 = !DILocation(line: 45, column: 1, scope: !3329)
!3345 = distinct !DISubprogram(name: "may_propagate_address_into_dereference", scope: !3, file: !3, line: 892, type: !3346, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3348)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!1407, !1456, !1456}
!3348 = !{!3349, !3350}
!3349 = !DILocalVariable(name: "addr", arg: 1, scope: !3345, file: !3, line: 892, type: !1456)
!3350 = !DILocalVariable(name: "deref", arg: 2, scope: !3345, file: !3, line: 892, type: !1456)
!3351 = !DILocation(line: 0, scope: !3345)
!3352 = !DILocation(line: 894, column: 3, scope: !3345)
!3353 = !DILocation(line: 898, column: 8, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 898, column: 7)
!3355 = !DILocation(line: 898, column: 7, scope: !3345)
!3356 = !DILocation(line: 904, column: 7, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 904, column: 7)
!3358 = !DILocation(line: 905, column: 7, scope: !3357)
!3359 = !DILocation(line: 913, column: 10, scope: !3345)
!3360 = !DILocation(line: 905, column: 12, scope: !3357)
!3361 = !DILocation(line: 906, column: 4, scope: !3357)
!3362 = !DILocation(line: 906, column: 7, scope: !3357)
!3363 = !DILocation(line: 904, column: 7, scope: !3345)
!3364 = !DILocation(line: 907, column: 39, scope: !3357)
!3365 = !DILocation(line: 908, column: 11, scope: !3357)
!3366 = !DILocation(line: 907, column: 12, scope: !3357)
!3367 = !DILocation(line: 907, column: 5, scope: !3357)
!3368 = !DILocation(line: 912, column: 38, scope: !3345)
!3369 = !DILocation(line: 912, column: 11, scope: !3345)
!3370 = !DILocation(line: 914, column: 4, scope: !3345)
!3371 = !DILocation(line: 914, column: 34, scope: !3345)
!3372 = !DILocation(line: 915, column: 6, scope: !3345)
!3373 = !DILocation(line: 914, column: 7, scope: !3345)
!3374 = !DILocation(line: 912, column: 3, scope: !3345)
!3375 = !DILocation(line: 916, column: 1, scope: !3345)
!3376 = distinct !DISubprogram(name: "fold_const_aggregate_ref", scope: !3, file: !3, line: 1217, type: !3266, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3377)
!3377 = !{!3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3395, !3402, !3404}
!3378 = !DILocalVariable(name: "t", arg: 1, scope: !3376, file: !3, line: 1217, type: !1456)
!3379 = !DILocalVariable(name: "value", scope: !3376, file: !3, line: 1219, type: !2746)
!3380 = !DILocalVariable(name: "base", scope: !3376, file: !3, line: 1220, type: !1456)
!3381 = !DILocalVariable(name: "ctor", scope: !3376, file: !3, line: 1220, type: !1456)
!3382 = !DILocalVariable(name: "idx", scope: !3376, file: !3, line: 1220, type: !1456)
!3383 = !DILocalVariable(name: "field", scope: !3376, file: !3, line: 1220, type: !1456)
!3384 = !DILocalVariable(name: "cnt", scope: !3376, file: !3, line: 1221, type: !1469)
!3385 = !DILocalVariable(name: "cfield", scope: !3376, file: !3, line: 1222, type: !1456)
!3386 = !DILocalVariable(name: "cval", scope: !3376, file: !3, line: 1222, type: !1456)
!3387 = !DILocalVariable(name: "base", scope: !3388, file: !3, line: 1309, type: !1456)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 1308, column: 8)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1307, column: 10)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 1305, column: 4)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 1304, column: 6)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 1303, column: 7)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1303, column: 7)
!3394 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1228, column: 5)
!3395 = !DILocalVariable(name: "base", scope: !3396, file: !3, line: 1358, type: !1456)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1357, column: 8)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1356, column: 10)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1354, column: 4)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1351, column: 6)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1350, column: 7)
!3401 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1350, column: 7)
!3402 = !DILocalVariable(name: "c", scope: !3403, file: !3, line: 1369, type: !1456)
!3403 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1368, column: 7)
!3404 = !DILocalVariable(name: "base", scope: !3405, file: !3, line: 1378, type: !1456)
!3405 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1377, column: 7)
!3406 = !DILocation(line: 0, scope: !3376)
!3407 = !DILocation(line: 1224, column: 7, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1224, column: 7)
!3409 = !DILocation(line: 1224, column: 39, scope: !3408)
!3410 = !DILocation(line: 1224, column: 7, scope: !3376)
!3411 = !DILocation(line: 1225, column: 12, scope: !3408)
!3412 = !DILocation(line: 1225, column: 5, scope: !3408)
!3413 = !DILocation(line: 1227, column: 11, scope: !3376)
!3414 = !DILocation(line: 1227, column: 3, scope: !3376)
!3415 = !DILocation(line: 1234, column: 14, scope: !3394)
!3416 = !DILocation(line: 1235, column: 15, scope: !3394)
!3417 = !DILocation(line: 1235, column: 7, scope: !3394)
!3418 = !DILocation(line: 1238, column: 9, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 1238, column: 8)
!3420 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1236, column: 2)
!3421 = !DILocation(line: 1239, column: 8, scope: !3419)
!3422 = !DILocation(line: 1239, column: 11, scope: !3419)
!3423 = !DILocation(line: 1239, column: 40, scope: !3419)
!3424 = !DILocation(line: 1240, column: 8, scope: !3419)
!3425 = !DILocation(line: 1240, column: 20, scope: !3419)
!3426 = !DILocation(line: 1240, column: 12, scope: !3419)
!3427 = !DILocation(line: 1238, column: 8, scope: !3420)
!3428 = !DILocation(line: 1243, column: 11, scope: !3420)
!3429 = !DILocation(line: 1244, column: 4, scope: !3420)
!3430 = !DILocation(line: 1248, column: 11, scope: !3420)
!3431 = !DILocation(line: 1249, column: 4, scope: !3420)
!3432 = !DILocation(line: 0, scope: !3420)
!3433 = !DILocation(line: 1260, column: 16, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1260, column: 11)
!3435 = !DILocation(line: 1261, column: 4, scope: !3434)
!3436 = !DILocation(line: 1261, column: 8, scope: !3434)
!3437 = !DILocation(line: 1261, column: 25, scope: !3434)
!3438 = !DILocation(line: 1262, column: 8, scope: !3434)
!3439 = !DILocation(line: 1262, column: 28, scope: !3434)
!3440 = !DILocation(line: 1263, column: 4, scope: !3434)
!3441 = !DILocation(line: 1263, column: 8, scope: !3434)
!3442 = !DILocation(line: 1260, column: 11, scope: !3394)
!3443 = !DILocation(line: 1268, column: 13, scope: !3394)
!3444 = !DILocation(line: 1269, column: 15, scope: !3394)
!3445 = !DILocation(line: 1269, column: 7, scope: !3394)
!3446 = !DILocation(line: 1272, column: 17, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 1272, column: 8)
!3448 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1270, column: 2)
!3449 = !DILocation(line: 1272, column: 15, scope: !3447)
!3450 = !DILocation(line: 1273, column: 8, scope: !3447)
!3451 = !DILocation(line: 1273, column: 18, scope: !3447)
!3452 = !DILocation(line: 1273, column: 30, scope: !3447)
!3453 = !DILocation(line: 1274, column: 8, scope: !3447)
!3454 = !DILocation(line: 1274, column: 11, scope: !3447)
!3455 = !DILocation(line: 1274, column: 36, scope: !3447)
!3456 = !DILocation(line: 1272, column: 8, scope: !3448)
!3457 = !DILocation(line: 1288, column: 11, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1288, column: 11)
!3459 = !DILocation(line: 1278, column: 4, scope: !3448)
!3460 = !DILocation(line: 0, scope: !3394)
!3461 = !DILocation(line: 1288, column: 28, scope: !3458)
!3462 = !DILocation(line: 1288, column: 11, scope: !3394)
!3463 = !DILocation(line: 0, scope: !3392)
!3464 = !DILocation(line: 1303, column: 7, scope: !3393)
!3465 = !DILocation(line: 1290, column: 9, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1290, column: 8)
!3467 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 1289, column: 2)
!3468 = !DILocation(line: 1291, column: 12, scope: !3466)
!3469 = !DILocation(line: 1291, column: 9, scope: !3466)
!3470 = !DILocation(line: 1292, column: 8, scope: !3466)
!3471 = !DILocation(line: 1292, column: 12, scope: !3466)
!3472 = !DILocation(line: 1293, column: 12, scope: !3466)
!3473 = !DILocation(line: 1294, column: 8, scope: !3466)
!3474 = !DILocation(line: 1294, column: 11, scope: !3466)
!3475 = !DILocation(line: 1294, column: 68, scope: !3466)
!3476 = !DILocation(line: 1295, column: 8, scope: !3466)
!3477 = !DILocation(line: 1295, column: 34, scope: !3466)
!3478 = !DILocation(line: 1295, column: 11, scope: !3466)
!3479 = !DILocation(line: 1295, column: 61, scope: !3466)
!3480 = !DILocation(line: 1290, column: 8, scope: !3467)
!3481 = !DILocation(line: 1296, column: 33, scope: !3466)
!3482 = !DILocation(line: 1297, column: 13, scope: !3466)
!3483 = !DILocation(line: 1298, column: 7, scope: !3466)
!3484 = !DILocation(line: 1297, column: 12, scope: !3466)
!3485 = !DILocation(line: 1296, column: 13, scope: !3466)
!3486 = !DILocation(line: 1296, column: 6, scope: !3466)
!3487 = !DILocation(line: 0, scope: !3393)
!3488 = !DILocation(line: 1303, column: 7, scope: !3392)
!3489 = !DILocation(line: 1304, column: 6, scope: !3391)
!3490 = !DILocation(line: 1304, column: 6, scope: !3392)
!3491 = !DILocation(line: 1306, column: 6, scope: !3390)
!3492 = !DILocation(line: 1307, column: 10, scope: !3389)
!3493 = !DILocation(line: 1307, column: 27, scope: !3389)
!3494 = !DILocation(line: 1307, column: 10, scope: !3390)
!3495 = !DILocation(line: 1309, column: 33, scope: !3388)
!3496 = !DILocation(line: 1309, column: 15, scope: !3388)
!3497 = !DILocation(line: 0, scope: !3388)
!3498 = !DILocation(line: 1310, column: 7, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 1310, column: 7)
!3500 = !DILocation(line: 1310, column: 12, scope: !3499)
!3501 = !DILocation(line: 1310, column: 15, scope: !3499)
!3502 = !DILocation(line: 1310, column: 32, scope: !3499)
!3503 = !DILocation(line: 1310, column: 7, scope: !3388)
!3504 = !DILocation(line: 1311, column: 5, scope: !3499)
!3505 = distinct !{!3505, !3464, !3506}
!3506 = !DILocation(line: 1314, column: 4, scope: !3393)
!3507 = !DILocation(line: 1322, column: 14, scope: !3394)
!3508 = !DILocation(line: 1323, column: 15, scope: !3394)
!3509 = !DILocation(line: 1323, column: 7, scope: !3394)
!3510 = !DILocation(line: 1326, column: 9, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 1326, column: 8)
!3512 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1324, column: 2)
!3513 = !DILocation(line: 1327, column: 8, scope: !3511)
!3514 = !DILocation(line: 1327, column: 11, scope: !3511)
!3515 = !DILocation(line: 1327, column: 40, scope: !3511)
!3516 = !DILocation(line: 1328, column: 8, scope: !3511)
!3517 = !DILocation(line: 1328, column: 20, scope: !3511)
!3518 = !DILocation(line: 1328, column: 12, scope: !3511)
!3519 = !DILocation(line: 1326, column: 8, scope: !3512)
!3520 = !DILocation(line: 1331, column: 11, scope: !3512)
!3521 = !DILocation(line: 1332, column: 4, scope: !3512)
!3522 = !DILocation(line: 1336, column: 11, scope: !3512)
!3523 = !DILocation(line: 1337, column: 4, scope: !3512)
!3524 = !DILocation(line: 0, scope: !3512)
!3525 = !DILocation(line: 1343, column: 16, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1343, column: 11)
!3527 = !DILocation(line: 1344, column: 4, scope: !3526)
!3528 = !DILocation(line: 1344, column: 7, scope: !3526)
!3529 = !DILocation(line: 1344, column: 24, scope: !3526)
!3530 = !DILocation(line: 1345, column: 4, scope: !3526)
!3531 = !DILocation(line: 1345, column: 8, scope: !3526)
!3532 = !DILocation(line: 1343, column: 11, scope: !3394)
!3533 = !DILocation(line: 1348, column: 15, scope: !3394)
!3534 = !DILocation(line: 0, scope: !3400)
!3535 = !DILocation(line: 1350, column: 7, scope: !3401)
!3536 = !DILocation(line: 0, scope: !3401)
!3537 = !DILocation(line: 1350, column: 7, scope: !3400)
!3538 = !DILocation(line: 1351, column: 13, scope: !3399)
!3539 = !DILocation(line: 1353, column: 6, scope: !3399)
!3540 = !DILocation(line: 1353, column: 11, scope: !3399)
!3541 = !DILocation(line: 1351, column: 6, scope: !3400)
!3542 = !DILocation(line: 1355, column: 6, scope: !3398)
!3543 = !DILocation(line: 1356, column: 10, scope: !3397)
!3544 = !DILocation(line: 1356, column: 27, scope: !3397)
!3545 = !DILocation(line: 1356, column: 10, scope: !3398)
!3546 = !DILocation(line: 1358, column: 33, scope: !3396)
!3547 = !DILocation(line: 1358, column: 15, scope: !3396)
!3548 = !DILocation(line: 0, scope: !3396)
!3549 = !DILocation(line: 1359, column: 7, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1359, column: 7)
!3551 = !DILocation(line: 1359, column: 12, scope: !3550)
!3552 = !DILocation(line: 1359, column: 15, scope: !3550)
!3553 = !DILocation(line: 1359, column: 32, scope: !3550)
!3554 = !DILocation(line: 1359, column: 7, scope: !3396)
!3555 = !DILocation(line: 1360, column: 5, scope: !3550)
!3556 = distinct !{!3556, !3535, !3557}
!3557 = !DILocation(line: 1363, column: 4, scope: !3401)
!3558 = !DILocation(line: 1369, column: 37, scope: !3403)
!3559 = !DILocation(line: 1369, column: 11, scope: !3403)
!3560 = !DILocation(line: 0, scope: !3403)
!3561 = !DILocation(line: 1370, column: 6, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 1370, column: 6)
!3563 = !DILocation(line: 1370, column: 8, scope: !3562)
!3564 = !DILocation(line: 1370, column: 11, scope: !3562)
!3565 = !DILocation(line: 1370, column: 25, scope: !3562)
!3566 = !DILocation(line: 1370, column: 6, scope: !3403)
!3567 = !DILocation(line: 1371, column: 11, scope: !3562)
!3568 = !DILocation(line: 1371, column: 4, scope: !3562)
!3569 = !DILocation(line: 1378, column: 14, scope: !3405)
!3570 = !DILocation(line: 0, scope: !3405)
!3571 = !DILocation(line: 1379, column: 6, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 1379, column: 6)
!3573 = !DILocation(line: 1379, column: 23, scope: !3572)
!3574 = !DILocation(line: 1380, column: 6, scope: !3572)
!3575 = !DILocation(line: 1380, column: 18, scope: !3572)
!3576 = !DILocation(line: 1380, column: 16, scope: !3572)
!3577 = !DILocation(line: 1381, column: 6, scope: !3572)
!3578 = !DILocation(line: 1381, column: 16, scope: !3572)
!3579 = !DILocation(line: 1381, column: 28, scope: !3572)
!3580 = !DILocation(line: 1382, column: 6, scope: !3572)
!3581 = !DILocation(line: 1382, column: 9, scope: !3572)
!3582 = !DILocation(line: 1382, column: 34, scope: !3572)
!3583 = !DILocation(line: 1383, column: 6, scope: !3572)
!3584 = !DILocation(line: 1383, column: 36, scope: !3572)
!3585 = !DILocation(line: 1384, column: 8, scope: !3572)
!3586 = !DILocation(line: 1383, column: 9, scope: !3572)
!3587 = !DILocation(line: 1379, column: 6, scope: !3405)
!3588 = !DILocation(line: 1385, column: 37, scope: !3572)
!3589 = !DILocation(line: 1385, column: 11, scope: !3572)
!3590 = !DILocation(line: 1385, column: 4, scope: !3572)
!3591 = !DILocation(line: 1393, column: 3, scope: !3376)
!3592 = !DILocation(line: 1394, column: 1, scope: !3376)
!3593 = distinct !DISubprogram(name: "get_value", scope: !3, file: !3, line: 387, type: !3594, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!2746, !1456}
!3596 = !{!3597, !3598}
!3597 = !DILocalVariable(name: "var", arg: 1, scope: !3593, file: !3, line: 387, type: !1456)
!3598 = !DILocalVariable(name: "val", scope: !3593, file: !3, line: 389, type: !2746)
!3599 = !DILocation(line: 0, scope: !3593)
!3600 = !DILocation(line: 391, column: 7, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 391, column: 7)
!3602 = !DILocation(line: 391, column: 17, scope: !3601)
!3603 = !DILocation(line: 391, column: 7, scope: !3593)
!3604 = !DILocation(line: 394, column: 20, scope: !3593)
!3605 = !DILocation(line: 394, column: 10, scope: !3593)
!3606 = !DILocation(line: 395, column: 12, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 395, column: 7)
!3608 = !DILocation(line: 395, column: 24, scope: !3607)
!3609 = !DILocation(line: 395, column: 7, scope: !3593)
!3610 = !DILocation(line: 396, column: 12, scope: !3607)
!3611 = !DILocation(line: 396, column: 5, scope: !3607)
!3612 = !DILocation(line: 398, column: 3, scope: !3593)
!3613 = !DILocation(line: 400, column: 3, scope: !3593)
!3614 = !DILocation(line: 401, column: 1, scope: !3593)
!3615 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !3616, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3620)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!7, !3618}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!3620 = !{!3621}
!3621 = !DILocalVariable(name: "vec_", arg: 1, scope: !3615, file: !135, line: 1537, type: !3618)
!3622 = !DILocation(line: 0, scope: !3615)
!3623 = !DILocation(line: 1537, column: 1, scope: !3615)
!3624 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !135, file: !135, line: 1537, type: !3625, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3629)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!3627, !3628, !7}
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!3629 = !{!3630, !3631}
!3630 = !DILocalVariable(name: "vec_", arg: 1, scope: !3624, file: !135, line: 1537, type: !3628)
!3631 = !DILocalVariable(name: "ix_", arg: 2, scope: !3624, file: !135, line: 1537, type: !7)
!3632 = !DILocation(line: 0, scope: !3624)
!3633 = !DILocation(line: 1537, column: 1, scope: !3624)
!3634 = distinct !DISubprogram(name: "gate_ccp", scope: !3, file: !3, line: 1750, type: !2764, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!3635 = !DILocation(line: 1752, column: 10, scope: !3634)
!3636 = !DILocation(line: 1752, column: 24, scope: !3634)
!3637 = !DILocation(line: 1752, column: 3, scope: !3634)
!3638 = distinct !DISubprogram(name: "do_ssa_ccp", scope: !3, file: !3, line: 1738, type: !2768, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!3639 = !DILocation(line: 1740, column: 3, scope: !3638)
!3640 = !DILocation(line: 1741, column: 3, scope: !3638)
!3641 = !DILocation(line: 1742, column: 7, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 1742, column: 7)
!3643 = !DILocation(line: 0, scope: !3642)
!3644 = !DILocation(line: 1746, column: 1, scope: !3638)
!3645 = distinct !DISubprogram(name: "maybe_fold_offset_to_reference", scope: !3, file: !3, line: 2053, type: !3646, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3648)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!1456, !1540, !1456, !1456, !1456}
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3654, !3655, !3658, !3659, !3660}
!3649 = !DILocalVariable(name: "loc", arg: 1, scope: !3645, file: !3, line: 2053, type: !1540)
!3650 = !DILocalVariable(name: "base", arg: 2, scope: !3645, file: !3, line: 2053, type: !1456)
!3651 = !DILocalVariable(name: "offset", arg: 3, scope: !3645, file: !3, line: 2053, type: !1456)
!3652 = !DILocalVariable(name: "orig_type", arg: 4, scope: !3645, file: !3, line: 2054, type: !1456)
!3653 = !DILocalVariable(name: "ret", scope: !3645, file: !3, line: 2056, type: !1456)
!3654 = !DILocalVariable(name: "type", scope: !3645, file: !3, line: 2057, type: !1456)
!3655 = !DILocalVariable(name: "sub_offset", scope: !3656, file: !3, line: 2071, type: !1471)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 2070, column: 5)
!3657 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 2069, column: 7)
!3658 = !DILocalVariable(name: "size", scope: !3656, file: !3, line: 2071, type: !1471)
!3659 = !DILocalVariable(name: "maxsize", scope: !3656, file: !3, line: 2071, type: !1471)
!3660 = !DILocalVariable(name: "newbase", scope: !3656, file: !3, line: 2072, type: !1456)
!3661 = !DILocation(line: 0, scope: !3645)
!3662 = !DILocation(line: 2059, column: 3, scope: !3645)
!3663 = !DILocation(line: 2060, column: 7, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 2060, column: 7)
!3665 = !DILocation(line: 2060, column: 24, scope: !3664)
!3666 = !DILocation(line: 2060, column: 7, scope: !3645)
!3667 = !DILocation(line: 2063, column: 10, scope: !3645)
!3668 = !DILocation(line: 2069, column: 7, scope: !3657)
!3669 = !DILocation(line: 2069, column: 7, scope: !3645)
!3670 = !DILocation(line: 2071, column: 7, scope: !3656)
!3671 = !DILocation(line: 0, scope: !3656)
!3672 = !DILocation(line: 2073, column: 17, scope: !3656)
!3673 = !DILocation(line: 2075, column: 7, scope: !3656)
!3674 = !DILocation(line: 2076, column: 11, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3656, file: !3, line: 2076, column: 11)
!3676 = !DILocation(line: 2076, column: 19, scope: !3675)
!3677 = !DILocation(line: 2076, column: 16, scope: !3675)
!3678 = !DILocation(line: 2077, column: 12, scope: !3675)
!3679 = !DILocation(line: 2077, column: 4, scope: !3675)
!3680 = !DILocation(line: 2078, column: 9, scope: !3675)
!3681 = !DILocation(line: 2078, column: 20, scope: !3675)
!3682 = !DILocation(line: 2076, column: 11, scope: !3656)
!3683 = !DILocation(line: 2081, column: 8, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 2081, column: 8)
!3685 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 2079, column: 2)
!3686 = !DILocation(line: 2081, column: 8, scope: !3685)
!3687 = !DILocation(line: 2083, column: 26, scope: !3684)
!3688 = !DILocation(line: 2084, column: 23, scope: !3684)
!3689 = !DILocation(line: 2083, column: 11, scope: !3684)
!3690 = !DILocation(line: 2082, column: 15, scope: !3684)
!3691 = !DILocation(line: 2082, column: 6, scope: !3684)
!3692 = !DILocation(line: 2086, column: 5, scope: !3657)
!3693 = !DILocation(line: 2086, column: 5, scope: !3656)
!3694 = !DILocation(line: 2063, column: 8, scope: !3645)
!3695 = !DILocation(line: 2087, column: 45, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 2087, column: 7)
!3697 = !DILocation(line: 2087, column: 7, scope: !3696)
!3698 = !DILocation(line: 2088, column: 7, scope: !3696)
!3699 = !DILocation(line: 2088, column: 10, scope: !3696)
!3700 = !DILocation(line: 2087, column: 7, scope: !3645)
!3701 = !DILocation(line: 2090, column: 10, scope: !3645)
!3702 = !DILocation(line: 2092, column: 9, scope: !3645)
!3703 = !DILocation(line: 2093, column: 8, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 2093, column: 7)
!3705 = !DILocation(line: 2093, column: 7, scope: !3645)
!3706 = !DILocation(line: 2094, column: 11, scope: !3704)
!3707 = !DILocation(line: 2094, column: 5, scope: !3704)
!3708 = !DILocation(line: 2097, column: 1, scope: !3645)
!3709 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !3710, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3713)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!1407, !3712}
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !1457, line: 59, baseType: !2741)
!3713 = !{!3714}
!3714 = !DILocalVariable(name: "t", arg: 1, scope: !3709, file: !135, line: 4551, type: !3712)
!3715 = !DILocation(line: 0, scope: !3709)
!3716 = !DILocation(line: 4553, column: 11, scope: !3709)
!3717 = !DILocation(line: 4553, column: 3, scope: !3709)
!3718 = !DILocation(line: 4565, column: 7, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3709, file: !135, line: 4554, column: 5)
!3720 = !DILocation(line: 0, scope: !3719)
!3721 = !DILocation(line: 4567, column: 1, scope: !3709)
!3722 = distinct !DISubprogram(name: "maybe_fold_offset_to_component_ref", scope: !3, file: !3, line: 1933, type: !3723, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3725)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!1456, !1540, !1456, !1456, !1456, !1456}
!3725 = !{!3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738}
!3726 = !DILocalVariable(name: "loc", arg: 1, scope: !3722, file: !3, line: 1933, type: !1540)
!3727 = !DILocalVariable(name: "record_type", arg: 2, scope: !3722, file: !3, line: 1933, type: !1456)
!3728 = !DILocalVariable(name: "base", arg: 3, scope: !3722, file: !3, line: 1934, type: !1456)
!3729 = !DILocalVariable(name: "offset", arg: 4, scope: !3722, file: !3, line: 1934, type: !1456)
!3730 = !DILocalVariable(name: "orig_type", arg: 5, scope: !3722, file: !3, line: 1934, type: !1456)
!3731 = !DILocalVariable(name: "f", scope: !3722, file: !3, line: 1936, type: !1456)
!3732 = !DILocalVariable(name: "t", scope: !3722, file: !3, line: 1936, type: !1456)
!3733 = !DILocalVariable(name: "field_type", scope: !3722, file: !3, line: 1936, type: !1456)
!3734 = !DILocalVariable(name: "tail_array_field", scope: !3722, file: !3, line: 1936, type: !1456)
!3735 = !DILocalVariable(name: "field_offset", scope: !3722, file: !3, line: 1936, type: !1456)
!3736 = !DILocalVariable(name: "ret", scope: !3722, file: !3, line: 1937, type: !1456)
!3737 = !DILocalVariable(name: "new_base", scope: !3722, file: !3, line: 1938, type: !1456)
!3738 = !DILocalVariable(name: "cmp", scope: !3739, file: !3, line: 1952, type: !1408)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 1951, column: 5)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1950, column: 3)
!3741 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1950, column: 3)
!3742 = !DILocation(line: 2040, column: 10, scope: !3722)
!3743 = !DILocation(line: 0, scope: !3722)
!3744 = !DILocation(line: 1940, column: 7, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1940, column: 7)
!3746 = !DILocation(line: 1940, column: 31, scope: !3745)
!3747 = !DILocation(line: 1941, column: 7, scope: !3745)
!3748 = !DILocation(line: 1941, column: 34, scope: !3745)
!3749 = !DILocation(line: 1942, column: 7, scope: !3745)
!3750 = !DILocation(line: 1942, column: 34, scope: !3745)
!3751 = !DILocation(line: 1940, column: 7, scope: !3722)
!3752 = !DILocation(line: 1946, column: 7, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1946, column: 7)
!3754 = !DILocation(line: 1946, column: 7, scope: !3722)
!3755 = !DILocation(line: 1950, column: 12, scope: !3741)
!3756 = !DILocation(line: 1950, column: 8, scope: !3741)
!3757 = !DILocation(line: 1949, column: 20, scope: !3722)
!3758 = !DILocation(line: 0, scope: !3741)
!3759 = !DILocation(line: 1950, column: 3, scope: !3741)
!3760 = !DILocation(line: 1954, column: 11, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1954, column: 11)
!3762 = !DILocation(line: 1954, column: 25, scope: !3761)
!3763 = !DILocation(line: 1954, column: 11, scope: !3739)
!3764 = !DILocation(line: 1956, column: 11, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1956, column: 11)
!3766 = !DILocation(line: 1956, column: 11, scope: !3739)
!3767 = !DILocation(line: 1959, column: 12, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1959, column: 11)
!3769 = !DILocation(line: 1959, column: 11, scope: !3739)
!3770 = !DILocation(line: 1961, column: 22, scope: !3739)
!3771 = !DILocation(line: 1962, column: 11, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1962, column: 11)
!3773 = !DILocation(line: 1962, column: 36, scope: !3772)
!3774 = !DILocation(line: 1962, column: 11, scope: !3739)
!3775 = !DILocation(line: 1968, column: 12, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1968, column: 11)
!3777 = !DILocation(line: 1968, column: 11, scope: !3739)
!3778 = !DILocation(line: 1975, column: 13, scope: !3739)
!3779 = !DILocation(line: 0, scope: !3739)
!3780 = !DILocation(line: 1976, column: 15, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1976, column: 11)
!3782 = !DILocation(line: 1976, column: 11, scope: !3739)
!3783 = !DILocation(line: 1979, column: 20, scope: !3739)
!3784 = !DILocation(line: 1983, column: 15, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1983, column: 11)
!3786 = !DILocation(line: 1984, column: 4, scope: !3785)
!3787 = !DILocation(line: 1984, column: 7, scope: !3785)
!3788 = !DILocation(line: 1983, column: 11, scope: !3739)
!3789 = !DILocation(line: 1986, column: 8, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 1985, column: 2)
!3791 = !DILocation(line: 1987, column: 4, scope: !3790)
!3792 = !DILocation(line: 1991, column: 12, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1991, column: 11)
!3794 = !DILocation(line: 1991, column: 11, scope: !3739)
!3795 = !DILocation(line: 1997, column: 11, scope: !3739)
!3796 = !DILocation(line: 2001, column: 12, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 2001, column: 11)
!3798 = !DILocation(line: 2002, column: 4, scope: !3797)
!3799 = !DILocation(line: 2002, column: 7, scope: !3797)
!3800 = !DILocation(line: 2002, column: 38, scope: !3797)
!3801 = !DILocation(line: 2001, column: 11, scope: !3739)
!3802 = !DILocation(line: 2004, column: 11, scope: !3739)
!3803 = !DILocation(line: 2005, column: 32, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 2005, column: 11)
!3805 = !DILocation(line: 2005, column: 12, scope: !3804)
!3806 = !DILocation(line: 2005, column: 11, scope: !3739)
!3807 = !DILocation(line: 2010, column: 18, scope: !3739)
!3808 = !DILocation(line: 2011, column: 7, scope: !3739)
!3809 = !DILocation(line: 2015, column: 15, scope: !3739)
!3810 = !DILocation(line: 2015, column: 12, scope: !3739)
!3811 = !DILocation(line: 2015, column: 10, scope: !3739)
!3812 = !DILocation(line: 2014, column: 13, scope: !3739)
!3813 = !DILocation(line: 2016, column: 11, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 2016, column: 11)
!3815 = !DILocation(line: 2016, column: 11, scope: !3739)
!3816 = !DILocation(line: 2018, column: 13, scope: !3739)
!3817 = !DILocation(line: 2020, column: 11, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 2020, column: 11)
!3819 = !DILocation(line: 0, scope: !3740)
!3820 = !DILocation(line: 1950, column: 47, scope: !3740)
!3821 = !DILocation(line: 1950, column: 3, scope: !3740)
!3822 = distinct !{!3822, !3759, !3823}
!3823 = !DILocation(line: 2022, column: 5, scope: !3741)
!3824 = !DILocation(line: 2024, column: 8, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 2024, column: 7)
!3826 = !DILocation(line: 2024, column: 7, scope: !3722)
!3827 = !DILocation(line: 2028, column: 16, scope: !3722)
!3828 = !DILocation(line: 2029, column: 49, scope: !3722)
!3829 = !DILocation(line: 2029, column: 12, scope: !3722)
!3830 = !DILocation(line: 2033, column: 10, scope: !3722)
!3831 = !DILocation(line: 2034, column: 3, scope: !3722)
!3832 = !DILocation(line: 2037, column: 16, scope: !3722)
!3833 = !DILocation(line: 2037, column: 13, scope: !3722)
!3834 = !DILocation(line: 2037, column: 11, scope: !3722)
!3835 = !DILocation(line: 2036, column: 7, scope: !3722)
!3836 = !DILocation(line: 2038, column: 7, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 2038, column: 7)
!3838 = !DILocation(line: 2038, column: 7, scope: !3722)
!3839 = !DILocation(line: 2042, column: 1, scope: !3722)
!3840 = distinct !DISubprogram(name: "maybe_fold_offset_to_array_ref", scope: !3, file: !3, line: 1784, type: !3841, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!1456, !1540, !1456, !1456, !1456, !1407}
!3843 = !{!3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3860, !3863, !3864, !3865, !3866, !3867, !3870}
!3844 = !DILocalVariable(name: "loc", arg: 1, scope: !3840, file: !3, line: 1784, type: !1540)
!3845 = !DILocalVariable(name: "base", arg: 2, scope: !3840, file: !3, line: 1784, type: !1456)
!3846 = !DILocalVariable(name: "offset", arg: 3, scope: !3840, file: !3, line: 1784, type: !1456)
!3847 = !DILocalVariable(name: "orig_type", arg: 4, scope: !3840, file: !3, line: 1785, type: !1456)
!3848 = !DILocalVariable(name: "allow_negative_idx", arg: 5, scope: !3840, file: !3, line: 1786, type: !1407)
!3849 = !DILocalVariable(name: "min_idx", scope: !3840, file: !3, line: 1788, type: !1456)
!3850 = !DILocalVariable(name: "idx", scope: !3840, file: !3, line: 1788, type: !1456)
!3851 = !DILocalVariable(name: "idx_type", scope: !3840, file: !3, line: 1788, type: !1456)
!3852 = !DILocalVariable(name: "elt_offset", scope: !3840, file: !3, line: 1788, type: !1456)
!3853 = !DILocalVariable(name: "array_type", scope: !3840, file: !3, line: 1789, type: !1456)
!3854 = !DILocalVariable(name: "elt_type", scope: !3840, file: !3, line: 1789, type: !1456)
!3855 = !DILocalVariable(name: "elt_size", scope: !3840, file: !3, line: 1789, type: !1456)
!3856 = !DILocalVariable(name: "domain_type", scope: !3840, file: !3, line: 1790, type: !1456)
!3857 = !DILocalVariable(name: "low_bound", scope: !3858, file: !3, line: 1799, type: !1456)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1798, column: 5)
!3859 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1797, column: 7)
!3860 = !DILocalVariable(name: "lquo", scope: !3861, file: !3, line: 1837, type: !1469)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1836, column: 5)
!3862 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1828, column: 7)
!3863 = !DILocalVariable(name: "lrem", scope: !3861, file: !3, line: 1837, type: !1469)
!3864 = !DILocalVariable(name: "hquo", scope: !3861, file: !3, line: 1838, type: !1471)
!3865 = !DILocalVariable(name: "hrem", scope: !3861, file: !3, line: 1838, type: !1471)
!3866 = !DILocalVariable(name: "soffset", scope: !3861, file: !3, line: 1839, type: !1464)
!3867 = !DILocalVariable(name: "up_bound", scope: !3868, file: !3, line: 1897, type: !1456)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1896, column: 5)
!3869 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1893, column: 7)
!3870 = !DILocalVariable(name: "t", scope: !3871, file: !3, line: 1919, type: !1456)
!3871 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1918, column: 3)
!3872 = !DILocation(line: 0, scope: !3840)
!3873 = !DILocation(line: 1788, column: 45, scope: !3840)
!3874 = !DILocation(line: 1797, column: 7, scope: !3859)
!3875 = !DILocation(line: 1797, column: 24, scope: !3859)
!3876 = !DILocation(line: 1797, column: 7, scope: !3840)
!3877 = !DILocation(line: 1799, column: 24, scope: !3858)
!3878 = !DILocation(line: 0, scope: !3858)
!3879 = !DILocation(line: 1801, column: 20, scope: !3858)
!3880 = !DILocation(line: 1802, column: 11, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 1802, column: 11)
!3882 = !DILocation(line: 1802, column: 33, scope: !3881)
!3883 = !DILocation(line: 1803, column: 4, scope: !3881)
!3884 = !DILocation(line: 1803, column: 7, scope: !3881)
!3885 = !DILocation(line: 1803, column: 30, scope: !3881)
!3886 = !DILocation(line: 1802, column: 11, scope: !3858)
!3887 = !DILocation(line: 1806, column: 20, scope: !3858)
!3888 = !DILocation(line: 1807, column: 14, scope: !3858)
!3889 = !DILocation(line: 1808, column: 5, scope: !3859)
!3890 = !DILocation(line: 1811, column: 16, scope: !3840)
!3891 = !DILocation(line: 1812, column: 7, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1812, column: 7)
!3893 = !DILocation(line: 1812, column: 30, scope: !3892)
!3894 = !DILocation(line: 1812, column: 7, scope: !3840)
!3895 = !DILocation(line: 1814, column: 14, scope: !3840)
!3896 = !DILocation(line: 1815, column: 8, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1815, column: 7)
!3898 = !DILocation(line: 1815, column: 7, scope: !3840)
!3899 = !DILocation(line: 1819, column: 31, scope: !3840)
!3900 = !DILocation(line: 1819, column: 14, scope: !3840)
!3901 = !DILocation(line: 1825, column: 14, scope: !3840)
!3902 = !DILocation(line: 1826, column: 8, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1826, column: 7)
!3904 = !DILocation(line: 1826, column: 7, scope: !3840)
!3905 = !DILocation(line: 1828, column: 7, scope: !3862)
!3906 = !DILocation(line: 1828, column: 7, scope: !3840)
!3907 = !DILocation(line: 1830, column: 11, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 1830, column: 11)
!3909 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1829, column: 5)
!3910 = !DILocation(line: 1830, column: 32, scope: !3908)
!3911 = !DILocation(line: 1830, column: 11, scope: !3909)
!3912 = !DILocation(line: 1831, column: 13, scope: !3908)
!3913 = !DILocation(line: 1831, column: 2, scope: !3908)
!3914 = !DILocation(line: 1833, column: 13, scope: !3909)
!3915 = !DILocation(line: 1834, column: 5, scope: !3909)
!3916 = !DILocation(line: 1837, column: 7, scope: !3861)
!3917 = !DILocation(line: 1838, column: 7, scope: !3861)
!3918 = !DILocation(line: 1839, column: 7, scope: !3861)
!3919 = !DILocation(line: 1844, column: 17, scope: !3861)
!3920 = !DILocation(line: 1844, column: 34, scope: !3861)
!3921 = !DILocation(line: 1845, column: 6, scope: !3861)
!3922 = !DILocation(line: 1846, column: 11, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1846, column: 11)
!3924 = !DILocation(line: 1846, column: 32, scope: !3923)
!3925 = !DILocation(line: 1847, column: 4, scope: !3923)
!3926 = !DILocation(line: 1848, column: 16, scope: !3923)
!3927 = !DILocation(line: 1848, column: 29, scope: !3923)
!3928 = !DILocation(line: 1849, column: 8, scope: !3923)
!3929 = !DILocation(line: 1850, column: 8, scope: !3923)
!3930 = !DILocation(line: 0, scope: !3861)
!3931 = !DILocation(line: 1847, column: 7, scope: !3923)
!3932 = !DILocation(line: 1852, column: 7, scope: !3923)
!3933 = !DILocation(line: 1852, column: 15, scope: !3923)
!3934 = !DILocation(line: 1852, column: 4, scope: !3923)
!3935 = !DILocation(line: 1855, column: 43, scope: !3861)
!3936 = !DILocation(line: 1855, column: 49, scope: !3861)
!3937 = !DILocation(line: 1855, column: 13, scope: !3861)
!3938 = !DILocation(line: 1856, column: 5, scope: !3862)
!3939 = !DILocation(line: 1861, column: 13, scope: !3840)
!3940 = !DILocation(line: 1862, column: 17, scope: !3840)
!3941 = !DILocation(line: 1863, column: 7, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1863, column: 7)
!3943 = !DILocation(line: 1863, column: 7, scope: !3840)
!3944 = !DILocation(line: 1866, column: 11, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 1866, column: 11)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 1864, column: 5)
!3947 = !DILocation(line: 1866, column: 11, scope: !3946)
!3948 = !DILocation(line: 1867, column: 2, scope: !3945)
!3949 = !DILocation(line: 1869, column: 12, scope: !3945)
!3950 = !DILocation(line: 0, scope: !3945)
!3951 = !DILocation(line: 1871, column: 11, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 1871, column: 11)
!3953 = !DILocation(line: 1871, column: 31, scope: !3952)
!3954 = !DILocation(line: 1871, column: 11, scope: !3946)
!3955 = !DILocation(line: 1874, column: 20, scope: !3946)
!3956 = !DILocation(line: 1875, column: 5, scope: !3946)
!3957 = !DILocation(line: 1877, column: 8, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1877, column: 7)
!3959 = !DILocation(line: 1877, column: 7, scope: !3840)
!3960 = !DILocation(line: 1878, column: 11, scope: !3958)
!3961 = !DILocation(line: 1878, column: 5, scope: !3958)
!3962 = !DILocation(line: 1879, column: 8, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1879, column: 7)
!3964 = !DILocation(line: 1879, column: 7, scope: !3840)
!3965 = !DILocation(line: 1880, column: 11, scope: !3963)
!3966 = !DILocation(line: 1880, column: 5, scope: !3963)
!3967 = !DILocation(line: 1883, column: 9, scope: !3840)
!3968 = !DILocation(line: 1894, column: 7, scope: !3869)
!3969 = !DILocation(line: 1894, column: 10, scope: !3869)
!3970 = !DILocation(line: 1895, column: 7, scope: !3869)
!3971 = !DILocation(line: 1895, column: 10, scope: !3869)
!3972 = !DILocation(line: 1895, column: 51, scope: !3869)
!3973 = !DILocation(line: 1893, column: 7, scope: !3840)
!3974 = !DILocation(line: 0, scope: !3868)
!3975 = !DILocation(line: 1899, column: 11, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 1899, column: 11)
!3977 = !DILocation(line: 1903, column: 4, scope: !3976)
!3978 = !DILocation(line: 1903, column: 7, scope: !3976)
!3979 = !DILocation(line: 1903, column: 38, scope: !3976)
!3980 = !DILocation(line: 1899, column: 11, scope: !3868)
!3981 = !DILocation(line: 1905, column: 5, scope: !3869)
!3982 = !DILocation(line: 1907, column: 10, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1906, column: 7)
!3984 = !DILocation(line: 1906, column: 7, scope: !3840)
!3985 = !DILocation(line: 1909, column: 12, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1909, column: 11)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1908, column: 5)
!3988 = !DILocation(line: 1910, column: 4, scope: !3986)
!3989 = !DILocation(line: 1910, column: 7, scope: !3986)
!3990 = !DILocation(line: 1910, column: 48, scope: !3986)
!3991 = !DILocation(line: 1911, column: 4, scope: !3986)
!3992 = !DILocation(line: 1911, column: 7, scope: !3986)
!3993 = !DILocation(line: 1909, column: 11, scope: !3987)
!3994 = !DILocation(line: 1914, column: 13, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1914, column: 12)
!3996 = !DILocation(line: 1915, column: 5, scope: !3995)
!3997 = !DILocation(line: 1915, column: 8, scope: !3995)
!3998 = !DILocation(line: 1915, column: 34, scope: !3995)
!3999 = !DILocation(line: 1914, column: 12, scope: !3983)
!4000 = !DILocation(line: 1919, column: 14, scope: !3871)
!4001 = !DILocation(line: 0, scope: !3871)
!4002 = !DILocation(line: 1920, column: 5, scope: !3871)
!4003 = !DILocation(line: 1923, column: 1, scope: !3840)
!4004 = distinct !DISubprogram(name: "maybe_fold_offset_to_address", scope: !3, file: !3, line: 2107, type: !3646, scopeLine: 2109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4005)
!4005 = !{!4006, !4007, !4008, !4009, !4010, !4011, !4014}
!4006 = !DILocalVariable(name: "loc", arg: 1, scope: !4004, file: !3, line: 2107, type: !1540)
!4007 = !DILocalVariable(name: "addr", arg: 2, scope: !4004, file: !3, line: 2107, type: !1456)
!4008 = !DILocalVariable(name: "offset", arg: 3, scope: !4004, file: !3, line: 2107, type: !1456)
!4009 = !DILocalVariable(name: "orig_type", arg: 4, scope: !4004, file: !3, line: 2108, type: !1456)
!4010 = !DILocalVariable(name: "t", scope: !4004, file: !3, line: 2110, type: !1456)
!4011 = !DILocalVariable(name: "orig", scope: !4012, file: !3, line: 2119, type: !1456)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 2118, column: 5)
!4013 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 2117, column: 7)
!4014 = !DILocalVariable(name: "ptr_type", scope: !4012, file: !3, line: 2120, type: !1456)
!4015 = !DILocation(line: 0, scope: !4004)
!4016 = !DILocation(line: 2112, column: 3, scope: !4004)
!4017 = !DILocation(line: 2116, column: 11, scope: !4004)
!4018 = !DILocation(line: 2115, column: 7, scope: !4004)
!4019 = !DILocation(line: 2117, column: 9, scope: !4013)
!4020 = !DILocation(line: 2117, column: 7, scope: !4004)
!4021 = !DILocation(line: 0, scope: !4012)
!4022 = !DILocation(line: 2136, column: 7, scope: !4012)
!4023 = !DILocation(line: 2137, column: 11, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 2137, column: 11)
!4025 = !DILocation(line: 2137, column: 28, scope: !4024)
!4026 = !DILocation(line: 2137, column: 11, scope: !4012)
!4027 = !DILocation(line: 2138, column: 9, scope: !4024)
!4028 = !DILocation(line: 0, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 2139, column: 11)
!4030 = !DILocation(line: 2139, column: 12, scope: !4029)
!4031 = !DILocation(line: 2138, column: 2, scope: !4024)
!4032 = !DILocation(line: 2139, column: 29, scope: !4029)
!4033 = !DILocation(line: 2140, column: 5, scope: !4029)
!4034 = !DILocation(line: 2140, column: 26, scope: !4029)
!4035 = !DILocation(line: 2141, column: 9, scope: !4029)
!4036 = !DILocation(line: 2141, column: 12, scope: !4029)
!4037 = !DILocation(line: 2141, column: 59, scope: !4029)
!4038 = !DILocation(line: 2142, column: 4, scope: !4029)
!4039 = !DILocation(line: 2142, column: 8, scope: !4029)
!4040 = !DILocation(line: 2142, column: 22, scope: !4029)
!4041 = !DILocation(line: 2143, column: 8, scope: !4029)
!4042 = !DILocation(line: 2143, column: 25, scope: !4029)
!4043 = !DILocation(line: 2144, column: 4, scope: !4029)
!4044 = !DILocation(line: 2144, column: 25, scope: !4029)
!4045 = !DILocation(line: 2145, column: 13, scope: !4029)
!4046 = !DILocation(line: 2146, column: 11, scope: !4029)
!4047 = !DILocation(line: 2147, column: 13, scope: !4029)
!4048 = !DILocation(line: 2144, column: 8, scope: !4029)
!4049 = !DILocation(line: 2139, column: 11, scope: !4012)
!4050 = !DILocation(line: 2150, column: 38, scope: !4012)
!4051 = !DILocation(line: 2150, column: 18, scope: !4012)
!4052 = !DILocation(line: 2151, column: 12, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 2151, column: 11)
!4054 = !DILocation(line: 2151, column: 11, scope: !4012)
!4055 = !DILocation(line: 2153, column: 14, scope: !4012)
!4056 = !DILocation(line: 2153, column: 7, scope: !4012)
!4057 = !DILocation(line: 2157, column: 1, scope: !4004)
!4058 = distinct !DISubprogram(name: "maybe_fold_stmt_addition", scope: !3, file: !3, line: 2276, type: !3646, scopeLine: 2277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4059)
!4059 = !{!4060, !4061, !4062, !4063, !4064, !4065, !4066, !4071, !4073, !4074, !4075, !4076}
!4060 = !DILocalVariable(name: "loc", arg: 1, scope: !4058, file: !3, line: 2276, type: !1540)
!4061 = !DILocalVariable(name: "res_type", arg: 2, scope: !4058, file: !3, line: 2276, type: !1456)
!4062 = !DILocalVariable(name: "op0", arg: 3, scope: !4058, file: !3, line: 2276, type: !1456)
!4063 = !DILocalVariable(name: "op1", arg: 4, scope: !4058, file: !3, line: 2276, type: !1456)
!4064 = !DILocalVariable(name: "ptd_type", scope: !4058, file: !3, line: 2278, type: !1456)
!4065 = !DILocalVariable(name: "t", scope: !4058, file: !3, line: 2279, type: !1456)
!4066 = !DILocalVariable(name: "offset_def", scope: !4067, file: !3, line: 2296, type: !1739)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 2295, column: 2)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 2291, column: 11)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 2288, column: 5)
!4070 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2287, column: 7)
!4071 = !DILocalVariable(name: "array_obj", scope: !4072, file: !3, line: 2326, type: !1456)
!4072 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2325, column: 5)
!4073 = !DILocalVariable(name: "array_idx", scope: !4072, file: !3, line: 2327, type: !1456)
!4074 = !DILocalVariable(name: "elt_type", scope: !4072, file: !3, line: 2328, type: !1456)
!4075 = !DILocalVariable(name: "elt_size", scope: !4072, file: !3, line: 2329, type: !1456)
!4076 = !DILocalVariable(name: "min_idx", scope: !4072, file: !3, line: 2330, type: !1456)
!4077 = !DILocation(line: 0, scope: !4058)
!4078 = !DILocation(line: 2282, column: 7, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2282, column: 7)
!4080 = !DILocation(line: 2282, column: 23, scope: !4079)
!4081 = !DILocation(line: 2282, column: 7, scope: !4058)
!4082 = !DILocation(line: 2284, column: 9, scope: !4058)
!4083 = !DILocation(line: 2287, column: 7, scope: !4070)
!4084 = !DILocation(line: 2287, column: 23, scope: !4070)
!4085 = !DILocation(line: 2287, column: 7, scope: !4058)
!4086 = !DILocation(line: 2324, column: 3, scope: !4058)
!4087 = !DILocation(line: 2291, column: 11, scope: !4068)
!4088 = !DILocation(line: 2291, column: 27, scope: !4068)
!4089 = !DILocation(line: 2292, column: 4, scope: !4068)
!4090 = !DILocation(line: 2292, column: 22, scope: !4068)
!4091 = !DILocation(line: 2292, column: 7, scope: !4068)
!4092 = !DILocation(line: 2293, column: 4, scope: !4068)
!4093 = !DILocation(line: 2293, column: 7, scope: !4068)
!4094 = !DILocation(line: 2293, column: 23, scope: !4068)
!4095 = !DILocation(line: 2294, column: 4, scope: !4068)
!4096 = !DILocation(line: 2294, column: 22, scope: !4068)
!4097 = !DILocation(line: 2294, column: 7, scope: !4068)
!4098 = !DILocation(line: 2291, column: 11, scope: !4069)
!4099 = !DILocation(line: 2296, column: 24, scope: !4067)
!4100 = !DILocation(line: 0, scope: !4067)
!4101 = !DILocation(line: 2297, column: 9, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2297, column: 8)
!4103 = !DILocation(line: 2297, column: 8, scope: !4067)
!4104 = !DILocation(line: 2300, column: 8, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2300, column: 8)
!4106 = !DILocation(line: 2300, column: 44, scope: !4105)
!4107 = !DILocation(line: 2301, column: 8, scope: !4105)
!4108 = !DILocation(line: 2301, column: 11, scope: !4105)
!4109 = !DILocation(line: 2301, column: 55, scope: !4105)
!4110 = !DILocation(line: 2302, column: 8, scope: !4105)
!4111 = !DILocation(line: 2302, column: 31, scope: !4105)
!4112 = !DILocation(line: 2303, column: 10, scope: !4105)
!4113 = !DILocation(line: 2302, column: 11, scope: !4105)
!4114 = !DILocation(line: 2300, column: 8, scope: !4067)
!4115 = !DILocation(line: 2304, column: 13, scope: !4105)
!4116 = !DILocation(line: 2304, column: 6, scope: !4105)
!4117 = !DILocation(line: 2310, column: 27, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 2310, column: 13)
!4119 = !DILocation(line: 2310, column: 13, scope: !4118)
!4120 = !DILocation(line: 2311, column: 6, scope: !4118)
!4121 = !DILocation(line: 2311, column: 9, scope: !4118)
!4122 = !DILocation(line: 2311, column: 45, scope: !4118)
!4123 = !DILocation(line: 2310, column: 13, scope: !4105)
!4124 = !DILocation(line: 2312, column: 13, scope: !4118)
!4125 = !DILocation(line: 2312, column: 6, scope: !4118)
!4126 = !DILocation(line: 2319, column: 7, scope: !4069)
!4127 = !DILocation(line: 2284, column: 7, scope: !4058)
!4128 = !DILocation(line: 2324, column: 10, scope: !4058)
!4129 = !DILocation(line: 2324, column: 26, scope: !4058)
!4130 = !DILocation(line: 2326, column: 24, scope: !4072)
!4131 = !DILocation(line: 0, scope: !4072)
!4132 = !DILocation(line: 2327, column: 24, scope: !4072)
!4133 = !DILocation(line: 2328, column: 23, scope: !4072)
!4134 = !DILocation(line: 2329, column: 23, scope: !4072)
!4135 = !DILocation(line: 2332, column: 11, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 2332, column: 11)
!4137 = !DILocation(line: 2332, column: 33, scope: !4136)
!4138 = !DILocation(line: 2332, column: 11, scope: !4072)
!4139 = !DILocation(line: 2334, column: 11, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 2334, column: 11)
!4141 = !DILocation(line: 2334, column: 32, scope: !4140)
!4142 = !DILocation(line: 2334, column: 11, scope: !4072)
!4143 = !DILocation(line: 2338, column: 17, scope: !4072)
!4144 = !DILocation(line: 2339, column: 11, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 2339, column: 11)
!4146 = !DILocation(line: 2339, column: 11, scope: !4072)
!4147 = !DILocation(line: 2341, column: 14, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 2340, column: 2)
!4149 = !DILocation(line: 2342, column: 8, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 2342, column: 8)
!4151 = !DILocation(line: 2342, column: 8, scope: !4148)
!4152 = !DILocation(line: 2344, column: 12, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 2344, column: 12)
!4154 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 2343, column: 6)
!4155 = !DILocation(line: 2344, column: 32, scope: !4153)
!4156 = !DILocation(line: 2344, column: 12, scope: !4154)
!4157 = !DILocation(line: 2347, column: 20, scope: !4154)
!4158 = !DILocation(line: 2348, column: 13, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 2348, column: 12)
!4160 = !DILocation(line: 2348, column: 12, scope: !4154)
!4161 = !DILocation(line: 2349, column: 15, scope: !4159)
!4162 = !DILocation(line: 2349, column: 3, scope: !4159)
!4163 = !DILocation(line: 2355, column: 19, scope: !4072)
!4164 = !DILocation(line: 2356, column: 19, scope: !4072)
!4165 = !DILocation(line: 2359, column: 13, scope: !4072)
!4166 = !DILocation(line: 2362, column: 5, scope: !4058)
!4167 = distinct !{!4167, !4086, !4166}
!4168 = !DILocation(line: 2364, column: 14, scope: !4058)
!4169 = !DILocation(line: 2368, column: 7, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2368, column: 7)
!4171 = !DILocation(line: 2369, column: 7, scope: !4170)
!4172 = !DILocation(line: 2369, column: 10, scope: !4170)
!4173 = !DILocation(line: 2369, column: 38, scope: !4170)
!4174 = !DILocation(line: 2368, column: 7, scope: !4058)
!4175 = !DILocation(line: 2370, column: 16, scope: !4170)
!4176 = !DILocation(line: 2370, column: 5, scope: !4170)
!4177 = !DILocation(line: 2373, column: 7, scope: !4058)
!4178 = !DILocation(line: 2374, column: 8, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2374, column: 7)
!4180 = !DILocation(line: 2374, column: 7, scope: !4058)
!4181 = !DILocation(line: 2375, column: 50, scope: !4179)
!4182 = !DILocation(line: 2375, column: 9, scope: !4179)
!4183 = !DILocation(line: 2375, column: 5, scope: !4179)
!4184 = !DILocation(line: 2377, column: 7, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2377, column: 7)
!4186 = !DILocation(line: 2377, column: 7, scope: !4058)
!4187 = !DILocation(line: 2379, column: 11, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 2378, column: 5)
!4189 = !DILocation(line: 2380, column: 7, scope: !4188)
!4190 = !DILocation(line: 2381, column: 5, scope: !4188)
!4191 = !DILocation(line: 2384, column: 1, scope: !4058)
!4192 = distinct !DISubprogram(name: "is_gimple_assign", scope: !583, file: !583, line: 1677, type: !4193, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4196)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!1407, !4195}
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !1457, line: 60, baseType: !2744)
!4196 = !{!4197}
!4197 = !DILocalVariable(name: "gs", arg: 1, scope: !4192, file: !583, line: 1677, type: !4195)
!4198 = !DILocation(line: 0, scope: !4192)
!4199 = !DILocation(line: 1679, column: 10, scope: !4192)
!4200 = !DILocation(line: 1679, column: 27, scope: !4192)
!4201 = !DILocation(line: 1679, column: 3, scope: !4192)
!4202 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !583, file: !583, line: 1815, type: !4203, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4205)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!134, !4195}
!4205 = !{!4206, !4207}
!4206 = !DILocalVariable(name: "gs", arg: 1, scope: !4202, file: !583, line: 1815, type: !4195)
!4207 = !DILocalVariable(name: "code", scope: !4202, file: !583, line: 1817, type: !134)
!4208 = !DILocation(line: 0, scope: !4202)
!4209 = !DILocation(line: 1820, column: 10, scope: !4202)
!4210 = !DILocation(line: 1821, column: 7, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4202, file: !583, line: 1821, column: 7)
!4212 = !DILocation(line: 1821, column: 35, scope: !4211)
!4213 = !DILocation(line: 1821, column: 7, scope: !4202)
!4214 = !DILocation(line: 1822, column: 12, scope: !4211)
!4215 = !DILocation(line: 1822, column: 5, scope: !4211)
!4216 = !DILocation(line: 1824, column: 3, scope: !4202)
!4217 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !583, file: !583, line: 1759, type: !4218, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4220)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!1456, !4195}
!4220 = !{!4221}
!4221 = !DILocalVariable(name: "gs", arg: 1, scope: !4217, file: !583, line: 1759, type: !4195)
!4222 = !DILocation(line: 0, scope: !4217)
!4223 = !DILocation(line: 1763, column: 7, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4217, file: !583, line: 1763, column: 7)
!4225 = !DILocation(line: 1763, column: 27, scope: !4224)
!4226 = !DILocation(line: 1763, column: 7, scope: !4217)
!4227 = !DILocation(line: 1764, column: 12, scope: !4224)
!4228 = !DILocation(line: 1764, column: 5, scope: !4224)
!4229 = !DILocation(line: 0, scope: !4224)
!4230 = !DILocation(line: 1767, column: 1, scope: !4217)
!4231 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !583, file: !583, line: 1727, type: !4218, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4232)
!4232 = !{!4233}
!4233 = !DILocalVariable(name: "gs", arg: 1, scope: !4231, file: !583, line: 1727, type: !4195)
!4234 = !DILocation(line: 0, scope: !4231)
!4235 = !DILocation(line: 1730, column: 10, scope: !4231)
!4236 = !DILocation(line: 1730, column: 3, scope: !4231)
!4237 = distinct !DISubprogram(name: "fold_stmt", scope: !3, file: !3, line: 3160, type: !4238, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4247)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!1407, !4240}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !583, line: 265, baseType: !4242)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !583, line: 254, size: 192, elements: !4243)
!4243 = !{!4244, !4245, !4246}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4242, file: !583, line: 257, baseType: !1734, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4242, file: !583, line: 263, baseType: !1729, size: 64, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4242, file: !583, line: 264, baseType: !2172, size: 64, offset: 128)
!4247 = !{!4248}
!4248 = !DILocalVariable(name: "gsi", arg: 1, scope: !4237, file: !3, line: 3160, type: !4240)
!4249 = !DILocation(line: 0, scope: !4237)
!4250 = !DILocation(line: 3162, column: 10, scope: !4237)
!4251 = !DILocation(line: 3162, column: 3, scope: !4237)
!4252 = distinct !DISubprogram(name: "fold_stmt_1", scope: !3, file: !3, line: 3054, type: !4253, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4255)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!1407, !4240, !1407}
!4255 = !{!4256, !4257, !4258, !4259, !4260, !4261, !4264, !4265, !4266, !4271, !4275, !4276, !4280, !4281, !4284}
!4256 = !DILocalVariable(name: "gsi", arg: 1, scope: !4252, file: !3, line: 3054, type: !4240)
!4257 = !DILocalVariable(name: "inplace", arg: 2, scope: !4252, file: !3, line: 3054, type: !1407)
!4258 = !DILocalVariable(name: "changed", scope: !4252, file: !3, line: 3056, type: !1407)
!4259 = !DILocalVariable(name: "stmt", scope: !4252, file: !3, line: 3057, type: !1739)
!4260 = !DILocalVariable(name: "i", scope: !4252, file: !3, line: 3058, type: !7)
!4261 = !DILocalVariable(name: "old_num_ops", scope: !4262, file: !3, line: 3065, type: !7)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 3064, column: 7)
!4263 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 3062, column: 5)
!4264 = !DILocalVariable(name: "new_rhs", scope: !4262, file: !3, line: 3066, type: !1456)
!4265 = !DILocalVariable(name: "lhs", scope: !4262, file: !3, line: 3067, type: !1456)
!4266 = !DILocalVariable(name: "tmp", scope: !4267, file: !3, line: 3091, type: !1456)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 3090, column: 4)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 3089, column: 6)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 3088, column: 7)
!4270 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 3088, column: 7)
!4271 = !DILocalVariable(name: "link", scope: !4272, file: !3, line: 3107, type: !1456)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 3106, column: 2)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 3105, column: 7)
!4274 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 3105, column: 7)
!4275 = !DILocalVariable(name: "op", scope: !4272, file: !3, line: 3108, type: !1456)
!4276 = !DILocalVariable(name: "link", scope: !4277, file: !3, line: 3118, type: !1456)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 3117, column: 2)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 3116, column: 7)
!4279 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 3116, column: 7)
!4280 = !DILocalVariable(name: "op", scope: !4277, file: !3, line: 3119, type: !1456)
!4281 = !DILocalVariable(name: "lhs", scope: !4282, file: !3, line: 3137, type: !1456)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 3136, column: 5)
!4283 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 3135, column: 7)
!4284 = !DILocalVariable(name: "new_lhs", scope: !4285, file: !3, line: 3140, type: !1456)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3139, column: 2)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 3138, column: 11)
!4287 = !DILocation(line: 0, scope: !4252)
!4288 = !DILocation(line: 3057, column: 17, scope: !4252)
!4289 = !DILocation(line: 3061, column: 11, scope: !4252)
!4290 = !DILocation(line: 3061, column: 3, scope: !4252)
!4291 = !DILocation(line: 3105, column: 7, scope: !4274)
!4292 = !DILocation(line: 3088, column: 7, scope: !4270)
!4293 = !DILocation(line: 3065, column: 25, scope: !4262)
!4294 = !DILocation(line: 0, scope: !4262)
!4295 = !DILocation(line: 3066, column: 17, scope: !4262)
!4296 = !DILocation(line: 3067, column: 13, scope: !4262)
!4297 = !DILocation(line: 3068, column: 6, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3068, column: 6)
!4299 = !DILocation(line: 3069, column: 6, scope: !4298)
!4300 = !DILocation(line: 3069, column: 37, scope: !4298)
!4301 = !DILocation(line: 3070, column: 9, scope: !4298)
!4302 = !DILocation(line: 3069, column: 10, scope: !4298)
!4303 = !DILocation(line: 3068, column: 6, scope: !4262)
!4304 = !DILocation(line: 3071, column: 14, scope: !4298)
!4305 = !DILocation(line: 3071, column: 4, scope: !4298)
!4306 = !DILocation(line: 3072, column: 6, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3072, column: 6)
!4308 = !DILocation(line: 3073, column: 6, scope: !4307)
!4309 = !DILocation(line: 3073, column: 11, scope: !4307)
!4310 = !DILocation(line: 3074, column: 3, scope: !4307)
!4311 = !DILocation(line: 3074, column: 30, scope: !4307)
!4312 = !DILocation(line: 3074, column: 6, scope: !4307)
!4313 = !DILocation(line: 3074, column: 51, scope: !4307)
!4314 = !DILocation(line: 3072, column: 6, scope: !4262)
!4315 = !DILocation(line: 3076, column: 6, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 3075, column: 4)
!4317 = !DILocation(line: 3078, column: 4, scope: !4316)
!4318 = !DILocation(line: 3083, column: 18, scope: !4263)
!4319 = !DILocation(line: 3084, column: 7, scope: !4263)
!4320 = !DILocation(line: 0, scope: !4270)
!4321 = !DILocation(line: 3088, column: 23, scope: !4269)
!4322 = !DILocation(line: 3088, column: 21, scope: !4269)
!4323 = !DILocation(line: 3089, column: 6, scope: !4268)
!4324 = !DILocation(line: 3089, column: 6, scope: !4269)
!4325 = !DILocation(line: 3091, column: 39, scope: !4267)
!4326 = !DILocation(line: 3091, column: 17, scope: !4267)
!4327 = !DILocation(line: 0, scope: !4267)
!4328 = !DILocation(line: 3092, column: 10, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 3092, column: 10)
!4330 = !DILocation(line: 3092, column: 10, scope: !4267)
!4331 = !DILocation(line: 3094, column: 3, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3093, column: 8)
!4333 = !DILocation(line: 3096, column: 8, scope: !4332)
!4334 = !DILocation(line: 3088, column: 52, scope: !4269)
!4335 = !DILocation(line: 3088, column: 7, scope: !4269)
!4336 = distinct !{!4336, !4292, !4337}
!4337 = !DILocation(line: 3097, column: 4, scope: !4270)
!4338 = !DILocation(line: 3099, column: 12, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 3099, column: 11)
!4340 = !DILocation(line: 3099, column: 11, scope: !4263)
!4341 = !DILocation(line: 3100, column: 13, scope: !4339)
!4342 = !DILocation(line: 3100, column: 10, scope: !4339)
!4343 = !DILocation(line: 3100, column: 2, scope: !4339)
!4344 = !DILocation(line: 0, scope: !4274)
!4345 = !DILocation(line: 3105, column: 23, scope: !4273)
!4346 = !DILocation(line: 3105, column: 21, scope: !4273)
!4347 = !DILocation(line: 3116, column: 7, scope: !4279)
!4348 = !DILocation(line: 3107, column: 16, scope: !4272)
!4349 = !DILocation(line: 0, scope: !4272)
!4350 = !DILocation(line: 3108, column: 14, scope: !4272)
!4351 = !DILocation(line: 3109, column: 8, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 3109, column: 8)
!4353 = !DILocation(line: 3110, column: 8, scope: !4352)
!4354 = !DILocation(line: 3110, column: 17, scope: !4352)
!4355 = !DILocation(line: 3110, column: 50, scope: !4352)
!4356 = !DILocation(line: 3109, column: 8, scope: !4272)
!4357 = !DILocation(line: 3112, column: 26, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 3111, column: 6)
!4359 = !DILocation(line: 3114, column: 6, scope: !4358)
!4360 = !DILocation(line: 3105, column: 51, scope: !4273)
!4361 = !DILocation(line: 3105, column: 7, scope: !4273)
!4362 = distinct !{!4362, !4291, !4363}
!4363 = !DILocation(line: 3115, column: 2, scope: !4274)
!4364 = !DILocation(line: 0, scope: !4279)
!4365 = !DILocation(line: 3116, column: 23, scope: !4278)
!4366 = !DILocation(line: 3116, column: 21, scope: !4278)
!4367 = !DILocation(line: 3118, column: 16, scope: !4277)
!4368 = !DILocation(line: 0, scope: !4277)
!4369 = !DILocation(line: 3119, column: 14, scope: !4277)
!4370 = !DILocation(line: 3120, column: 8, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 3120, column: 8)
!4372 = !DILocation(line: 3121, column: 8, scope: !4371)
!4373 = !DILocation(line: 3121, column: 17, scope: !4371)
!4374 = !DILocation(line: 3121, column: 51, scope: !4371)
!4375 = !DILocation(line: 3120, column: 8, scope: !4277)
!4376 = !DILocation(line: 3123, column: 26, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 3122, column: 6)
!4378 = !DILocation(line: 3125, column: 6, scope: !4377)
!4379 = !DILocation(line: 3116, column: 50, scope: !4278)
!4380 = !DILocation(line: 3116, column: 7, scope: !4278)
!4381 = distinct !{!4381, !4347, !4382}
!4382 = !DILocation(line: 3126, column: 2, scope: !4279)
!4383 = !DILocation(line: 3132, column: 10, scope: !4252)
!4384 = !DILocation(line: 3135, column: 7, scope: !4283)
!4385 = !DILocation(line: 3135, column: 7, scope: !4252)
!4386 = !DILocation(line: 3137, column: 18, scope: !4282)
!4387 = !DILocation(line: 0, scope: !4282)
!4388 = !DILocation(line: 3138, column: 11, scope: !4286)
!4389 = !DILocation(line: 3138, column: 15, scope: !4286)
!4390 = !DILocation(line: 3138, column: 18, scope: !4286)
!4391 = !DILocation(line: 3138, column: 11, scope: !4282)
!4392 = !DILocation(line: 3140, column: 19, scope: !4285)
!4393 = !DILocation(line: 0, scope: !4285)
!4394 = !DILocation(line: 3141, column: 8, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 3141, column: 8)
!4396 = !DILocation(line: 3141, column: 8, scope: !4285)
!4397 = !DILocation(line: 3143, column: 8, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 3142, column: 6)
!4399 = !DILocation(line: 3145, column: 6, scope: !4398)
!4400 = !DILocation(line: 3149, column: 3, scope: !4252)
!4401 = distinct !DISubprogram(name: "fold_stmt_inplace", scope: !3, file: !3, line: 3174, type: !4402, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4404)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!1407, !1739}
!4404 = !{!4405, !4406, !4407}
!4405 = !DILocalVariable(name: "stmt", arg: 1, scope: !4401, file: !3, line: 3174, type: !1739)
!4406 = !DILocalVariable(name: "gsi", scope: !4401, file: !3, line: 3176, type: !4241)
!4407 = !DILocalVariable(name: "changed", scope: !4401, file: !3, line: 3177, type: !1407)
!4408 = !DILocation(line: 0, scope: !4401)
!4409 = !DILocation(line: 3176, column: 3, scope: !4401)
!4410 = !DILocation(line: 3176, column: 30, scope: !4401)
!4411 = !DILocation(line: 3177, column: 18, scope: !4401)
!4412 = !DILocation(line: 3178, column: 3, scope: !4401)
!4413 = !DILocation(line: 3180, column: 1, scope: !4401)
!4414 = !DILocation(line: 3179, column: 3, scope: !4401)
!4415 = distinct !DISubprogram(name: "gsi_stmt", scope: !583, file: !583, line: 4501, type: !4416, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!1739, !4241}
!4418 = !{!4419}
!4419 = !DILocalVariable(name: "i", arg: 1, scope: !4415, file: !583, line: 4501, type: !4241)
!4420 = !DILocation(line: 4501, column: 32, scope: !4415)
!4421 = !DILocation(line: 4503, column: 12, scope: !4415)
!4422 = !DILocation(line: 4503, column: 17, scope: !4415)
!4423 = !DILocation(line: 4503, column: 3, scope: !4415)
!4424 = distinct !DISubprogram(name: "execute_fold_all_builtins", scope: !3, file: !3, line: 3414, type: !2768, scopeLine: 3415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4425)
!4425 = !{!4426, !4427, !4428, !4429, !4433, !4437, !4438, !4439, !4440}
!4426 = !DILocalVariable(name: "cfg_changed", scope: !4424, file: !3, line: 3416, type: !1407)
!4427 = !DILocalVariable(name: "bb", scope: !4424, file: !3, line: 3417, type: !2172)
!4428 = !DILocalVariable(name: "todoflags", scope: !4424, file: !3, line: 3418, type: !7)
!4429 = !DILocalVariable(name: "i", scope: !4430, file: !3, line: 3422, type: !4241)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 3421, column: 5)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 3420, column: 3)
!4432 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 3420, column: 3)
!4433 = !DILocalVariable(name: "stmt", scope: !4434, file: !3, line: 3425, type: !1739)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 3424, column: 2)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 3423, column: 7)
!4436 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 3423, column: 7)
!4437 = !DILocalVariable(name: "old_stmt", scope: !4434, file: !3, line: 3425, type: !1739)
!4438 = !DILocalVariable(name: "callee", scope: !4434, file: !3, line: 3426, type: !1456)
!4439 = !DILocalVariable(name: "result", scope: !4434, file: !3, line: 3426, type: !1456)
!4440 = !DILocalVariable(name: "fcode", scope: !4434, file: !3, line: 3427, type: !685)
!4441 = !DILocation(line: 0, scope: !4424)
!4442 = !DILocation(line: 3420, column: 3, scope: !4432)
!4443 = !DILocation(line: 0, scope: !4430)
!4444 = !DILocation(line: 0, scope: !4436)
!4445 = !DILocation(line: 3420, column: 3, scope: !4431)
!4446 = !DILocation(line: 3418, column: 16, scope: !4424)
!4447 = !DILocation(line: 3416, column: 8, scope: !4424)
!4448 = !DILocation(line: 0, scope: !4432)
!4449 = !DILocation(line: 3422, column: 7, scope: !4430)
!4450 = !DILocation(line: 3423, column: 16, scope: !4436)
!4451 = !DILocation(line: 3423, column: 12, scope: !4436)
!4452 = !DILocation(line: 3423, column: 36, scope: !4435)
!4453 = !DILocation(line: 3423, column: 35, scope: !4435)
!4454 = !DILocation(line: 3423, column: 7, scope: !4436)
!4455 = !DILocation(line: 3429, column: 11, scope: !4434)
!4456 = !DILocation(line: 0, scope: !4434)
!4457 = !DILocation(line: 3431, column: 15, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3431, column: 15)
!4459 = !DILocation(line: 3431, column: 34, scope: !4458)
!4460 = !DILocation(line: 3431, column: 15, scope: !4434)
!4461 = !DILocation(line: 3433, column: 8, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 3432, column: 6)
!4463 = !DILocation(line: 3434, column: 8, scope: !4462)
!4464 = distinct !{!4464, !4454, !4465}
!4465 = !DILocation(line: 3519, column: 2, scope: !4436)
!4466 = !DILocation(line: 3436, column: 13, scope: !4434)
!4467 = !DILocation(line: 3437, column: 9, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3437, column: 8)
!4469 = !DILocation(line: 3437, column: 16, scope: !4468)
!4470 = !DILocation(line: 3437, column: 19, scope: !4468)
!4471 = !DILocation(line: 3437, column: 48, scope: !4468)
!4472 = !DILocation(line: 3437, column: 8, scope: !4434)
!4473 = !DILocation(line: 3439, column: 8, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 3438, column: 6)
!4475 = !DILocation(line: 3440, column: 8, scope: !4474)
!4476 = !DILocation(line: 3444, column: 13, scope: !4434)
!4477 = !DILocation(line: 3446, column: 8, scope: !4434)
!4478 = !DILocation(line: 3447, column: 37, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3446, column: 8)
!4480 = !DILocation(line: 3447, column: 6, scope: !4479)
!4481 = !DILocation(line: 3449, column: 8, scope: !4434)
!4482 = !DILocation(line: 3450, column: 14, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3449, column: 8)
!4484 = !DILocation(line: 3450, column: 6, scope: !4483)
!4485 = !DILocation(line: 3456, column: 26, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 3451, column: 8)
!4487 = !DILocation(line: 3457, column: 3, scope: !4486)
!4488 = !DILocation(line: 3460, column: 12, scope: !4486)
!4489 = !DILocation(line: 3461, column: 7, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 3461, column: 7)
!4491 = !DILocation(line: 3461, column: 7, scope: !4486)
!4492 = !DILocation(line: 3463, column: 3, scope: !4486)
!4493 = !DILocation(line: 3464, column: 3, scope: !4486)
!4494 = !DILocation(line: 3470, column: 12, scope: !4486)
!4495 = !DILocation(line: 3471, column: 7, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 3471, column: 7)
!4497 = !DILocation(line: 3471, column: 7, scope: !4486)
!4498 = !DILocation(line: 3476, column: 3, scope: !4486)
!4499 = !DILocation(line: 3477, column: 3, scope: !4486)
!4500 = !DILocation(line: 3480, column: 8, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3480, column: 8)
!4502 = !DILocation(line: 3480, column: 18, scope: !4501)
!4503 = !DILocation(line: 3480, column: 22, scope: !4501)
!4504 = !DILocation(line: 3480, column: 33, scope: !4501)
!4505 = !DILocation(line: 3480, column: 8, scope: !4434)
!4506 = !DILocation(line: 3482, column: 8, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 3481, column: 6)
!4508 = !DILocation(line: 3483, column: 27, scope: !4507)
!4509 = !DILocation(line: 3483, column: 47, scope: !4507)
!4510 = !DILocation(line: 3483, column: 8, scope: !4507)
!4511 = !DILocation(line: 3484, column: 6, scope: !4507)
!4512 = !DILocation(line: 3487, column: 16, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3487, column: 15)
!4514 = !DILocation(line: 3487, column: 15, scope: !4434)
!4515 = !DILocation(line: 3489, column: 8, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 3488, column: 6)
!4517 = !DILocation(line: 3490, column: 18, scope: !4516)
!4518 = !DILocation(line: 3491, column: 6, scope: !4516)
!4519 = !DILocation(line: 3493, column: 11, scope: !4434)
!4520 = !DILocation(line: 3494, column: 4, scope: !4434)
!4521 = !DILocation(line: 3496, column: 8, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3496, column: 8)
!4523 = !DILocation(line: 3497, column: 8, scope: !4522)
!4524 = !DILocation(line: 3497, column: 11, scope: !4522)
!4525 = !DILocation(line: 3496, column: 8, scope: !4434)
!4526 = !DILocation(line: 3500, column: 8, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3500, column: 8)
!4528 = !DILocation(line: 3500, column: 18, scope: !4527)
!4529 = !DILocation(line: 3500, column: 22, scope: !4527)
!4530 = !DILocation(line: 3500, column: 33, scope: !4527)
!4531 = !DILocation(line: 3500, column: 8, scope: !4434)
!4532 = !DILocation(line: 3502, column: 8, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 3501, column: 6)
!4534 = !DILocation(line: 3503, column: 27, scope: !4533)
!4535 = !DILocation(line: 3503, column: 47, scope: !4533)
!4536 = !DILocation(line: 3503, column: 8, scope: !4533)
!4537 = !DILocation(line: 3504, column: 17, scope: !4533)
!4538 = !DILocation(line: 3504, column: 8, scope: !4533)
!4539 = !DILocation(line: 3505, column: 6, scope: !4533)
!4540 = !DILocation(line: 3509, column: 15, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3509, column: 15)
!4542 = !DILocation(line: 3509, column: 34, scope: !4541)
!4543 = !DILocation(line: 3509, column: 15, scope: !4434)
!4544 = !DILocation(line: 3511, column: 8, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 3510, column: 6)
!4546 = !DILocation(line: 3512, column: 8, scope: !4545)
!4547 = !DILocation(line: 3514, column: 13, scope: !4434)
!4548 = !DILocation(line: 3515, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 3515, column: 8)
!4550 = !DILocation(line: 3516, column: 15, scope: !4549)
!4551 = !DILocation(line: 3516, column: 18, scope: !4549)
!4552 = !DILocation(line: 3516, column: 47, scope: !4549)
!4553 = !DILocation(line: 3517, column: 8, scope: !4549)
!4554 = !DILocation(line: 3517, column: 39, scope: !4549)
!4555 = !DILocation(line: 3515, column: 8, scope: !4434)
!4556 = !DILocation(line: 3518, column: 6, scope: !4549)
!4557 = !DILocation(line: 3520, column: 5, scope: !4431)
!4558 = !DILocation(line: 0, scope: !4431)
!4559 = distinct !{!4559, !4442, !4560}
!4560 = !DILocation(line: 3520, column: 5, scope: !4432)
!4561 = !DILocation(line: 3523, column: 7, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 3523, column: 7)
!4563 = !DILocation(line: 3524, column: 15, scope: !4562)
!4564 = !DILocation(line: 3523, column: 7, scope: !4424)
!4565 = !DILocation(line: 3526, column: 3, scope: !4424)
!4566 = distinct !DISubprogram(name: "get_default_value", scope: !3, file: !3, line: 335, type: !4567, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4569)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!2747, !1456}
!4569 = !{!4570, !4571, !4572, !4573, !4574}
!4570 = !DILocalVariable(name: "var", arg: 1, scope: !4566, file: !3, line: 335, type: !1456)
!4571 = !DILocalVariable(name: "sym", scope: !4566, file: !3, line: 337, type: !1456)
!4572 = !DILocalVariable(name: "val", scope: !4566, file: !3, line: 338, type: !2747)
!4573 = !DILocalVariable(name: "stmt", scope: !4566, file: !3, line: 339, type: !1739)
!4574 = !DILocalVariable(name: "cst", scope: !4575, file: !3, line: 361, type: !1456)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 360, column: 5)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 354, column: 12)
!4577 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 343, column: 7)
!4578 = !DILocation(line: 0, scope: !4566)
!4579 = !DILocation(line: 337, column: 14, scope: !4566)
!4580 = !DILocation(line: 338, column: 16, scope: !4566)
!4581 = !DILocation(line: 341, column: 10, scope: !4566)
!4582 = !DILocation(line: 343, column: 7, scope: !4577)
!4583 = !DILocation(line: 343, column: 7, scope: !4566)
!4584 = !DILocation(line: 349, column: 11, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 349, column: 11)
!4586 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 344, column: 5)
!4587 = !DILocation(line: 349, column: 31, scope: !4585)
!4588 = !DILocation(line: 349, column: 34, scope: !4585)
!4589 = !DILocation(line: 349, column: 50, scope: !4585)
!4590 = !DILocation(line: 349, column: 11, scope: !4586)
!4591 = !DILocation(line: 350, column: 6, scope: !4585)
!4592 = !DILocation(line: 350, column: 18, scope: !4585)
!4593 = !DILocation(line: 350, column: 2, scope: !4585)
!4594 = !DILocation(line: 352, column: 6, scope: !4585)
!4595 = !DILocation(line: 352, column: 18, scope: !4585)
!4596 = !DILocation(line: 354, column: 12, scope: !4576)
!4597 = !DILocation(line: 357, column: 5, scope: !4576)
!4598 = !DILocation(line: 357, column: 9, scope: !4576)
!4599 = !DILocation(line: 358, column: 9, scope: !4576)
!4600 = !DILocation(line: 358, column: 12, scope: !4576)
!4601 = !DILocation(line: 358, column: 35, scope: !4576)
!4602 = !DILocation(line: 359, column: 5, scope: !4576)
!4603 = !DILocation(line: 359, column: 8, scope: !4576)
!4604 = !DILocation(line: 359, column: 27, scope: !4576)
!4605 = !DILocation(line: 354, column: 12, scope: !4577)
!4606 = !DILocation(line: 362, column: 11, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 362, column: 11)
!4608 = !DILocation(line: 363, column: 4, scope: !4607)
!4609 = !DILocation(line: 363, column: 7, scope: !4607)
!4610 = !DILocation(line: 364, column: 4, scope: !4607)
!4611 = !DILocation(line: 364, column: 41, scope: !4607)
!4612 = !DILocation(line: 364, column: 14, scope: !4607)
!4613 = !DILocation(line: 0, scope: !4575)
!4614 = !DILocation(line: 364, column: 12, scope: !4607)
!4615 = !DILocation(line: 362, column: 11, scope: !4575)
!4616 = !DILocation(line: 366, column: 8, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 365, column: 2)
!4618 = !DILocation(line: 366, column: 20, scope: !4617)
!4619 = !DILocation(line: 367, column: 8, scope: !4617)
!4620 = !DILocation(line: 367, column: 14, scope: !4617)
!4621 = !DILocation(line: 368, column: 2, scope: !4617)
!4622 = !DILocation(line: 372, column: 6, scope: !4607)
!4623 = !DILocation(line: 372, column: 18, scope: !4607)
!4624 = !DILocation(line: 377, column: 11, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 375, column: 5)
!4626 = !DILocation(line: 377, column: 23, scope: !4625)
!4627 = !DILocation(line: 381, column: 1, scope: !4566)
!4628 = distinct !DISubprogram(name: "canonicalize_float_value", scope: !3, file: !3, line: 431, type: !4629, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{null, !2746}
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "val", arg: 1, scope: !4628, file: !3, line: 431, type: !2746)
!4633 = !DILocalVariable(name: "mode", scope: !4628, file: !3, line: 433, type: !5)
!4634 = !DILocalVariable(name: "type", scope: !4628, file: !3, line: 434, type: !1456)
!4635 = !DILocalVariable(name: "d", scope: !4628, file: !3, line: 435, type: !1478)
!4636 = !DILocation(line: 0, scope: !4628)
!4637 = !DILocation(line: 435, column: 3, scope: !4628)
!4638 = !DILocation(line: 437, column: 12, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 437, column: 7)
!4640 = !DILocation(line: 437, column: 24, scope: !4639)
!4641 = !DILocation(line: 438, column: 7, scope: !4639)
!4642 = !DILocation(line: 438, column: 10, scope: !4639)
!4643 = !DILocation(line: 438, column: 33, scope: !4639)
!4644 = !DILocation(line: 437, column: 7, scope: !4628)
!4645 = !DILocation(line: 441, column: 7, scope: !4628)
!4646 = !DILocation(line: 442, column: 10, scope: !4628)
!4647 = !DILocation(line: 443, column: 10, scope: !4628)
!4648 = !DILocation(line: 445, column: 8, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 445, column: 7)
!4650 = !DILocation(line: 0, scope: !4649)
!4651 = !DILocation(line: 446, column: 10, scope: !4649)
!4652 = !DILocation(line: 445, column: 7, scope: !4628)
!4653 = !DILocation(line: 448, column: 20, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 447, column: 5)
!4655 = !DILocation(line: 448, column: 18, scope: !4654)
!4656 = !DILocation(line: 449, column: 7, scope: !4654)
!4657 = !DILocation(line: 452, column: 8, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 452, column: 7)
!4659 = !DILocation(line: 0, scope: !4658)
!4660 = !DILocation(line: 453, column: 10, scope: !4658)
!4661 = !DILocation(line: 452, column: 7, scope: !4628)
!4662 = !DILocation(line: 455, column: 24, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 454, column: 5)
!4664 = !DILocation(line: 456, column: 18, scope: !4663)
!4665 = !DILocation(line: 457, column: 7, scope: !4663)
!4666 = !DILocation(line: 459, column: 1, scope: !4628)
!4667 = distinct !DISubprogram(name: "gimple_nop_p", scope: !583, file: !583, line: 4304, type: !4193, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4668)
!4668 = !{!4669}
!4669 = !DILocalVariable(name: "g", arg: 1, scope: !4667, file: !583, line: 4304, type: !4195)
!4670 = !DILocation(line: 0, scope: !4667)
!4671 = !DILocation(line: 4306, column: 10, scope: !4667)
!4672 = !DILocation(line: 4306, column: 26, scope: !4667)
!4673 = !DILocation(line: 4306, column: 3, scope: !4667)
!4674 = distinct !DISubprogram(name: "is_gimple_call", scope: !583, file: !583, line: 1870, type: !4193, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4675)
!4675 = !{!4676}
!4676 = !DILocalVariable(name: "gs", arg: 1, scope: !4674, file: !583, line: 1870, type: !4195)
!4677 = !DILocation(line: 0, scope: !4674)
!4678 = !DILocation(line: 1872, column: 10, scope: !4674)
!4679 = !DILocation(line: 1872, column: 27, scope: !4674)
!4680 = !DILocation(line: 1872, column: 3, scope: !4674)
!4681 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !583, file: !583, line: 1878, type: !4218, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4682)
!4682 = !{!4683}
!4683 = !DILocalVariable(name: "gs", arg: 1, scope: !4681, file: !583, line: 1878, type: !4195)
!4684 = !DILocation(line: 0, scope: !4681)
!4685 = !DILocation(line: 1881, column: 10, scope: !4681)
!4686 = !DILocation(line: 1881, column: 3, scope: !4681)
!4687 = distinct !DISubprogram(name: "gimple_code", scope: !583, file: !583, line: 1052, type: !4688, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4690)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!609, !4195}
!4690 = !{!4691}
!4691 = !DILocalVariable(name: "g", arg: 1, scope: !4687, file: !583, line: 1052, type: !4195)
!4692 = !DILocation(line: 0, scope: !4687)
!4693 = !DILocation(line: 1054, column: 20, scope: !4687)
!4694 = !DILocation(line: 1054, column: 3, scope: !4687)
!4695 = distinct !DISubprogram(name: "gimple_op", scope: !583, file: !583, line: 1631, type: !4696, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4698)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!1456, !4195, !7}
!4698 = !{!4699, !4700}
!4699 = !DILocalVariable(name: "gs", arg: 1, scope: !4695, file: !583, line: 1631, type: !4195)
!4700 = !DILocalVariable(name: "i", arg: 2, scope: !4695, file: !583, line: 1631, type: !7)
!4701 = !DILocation(line: 0, scope: !4695)
!4702 = !DILocation(line: 1633, column: 7, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4695, file: !583, line: 1633, column: 7)
!4704 = !DILocation(line: 1633, column: 7, scope: !4695)
!4705 = !DILocation(line: 1638, column: 14, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !583, line: 1634, column: 5)
!4707 = !DILocation(line: 1638, column: 7, scope: !4706)
!4708 = !DILocation(line: 0, scope: !4703)
!4709 = !DILocation(line: 1642, column: 1, scope: !4695)
!4710 = distinct !DISubprogram(name: "gimple_has_ops", scope: !583, file: !583, line: 1274, type: !4193, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4711)
!4711 = !{!4712}
!4712 = !DILocalVariable(name: "g", arg: 1, scope: !4710, file: !583, line: 1274, type: !4195)
!4713 = !DILocation(line: 0, scope: !4710)
!4714 = !DILocation(line: 1276, column: 10, scope: !4710)
!4715 = !DILocation(line: 1276, column: 26, scope: !4710)
!4716 = !DILocation(line: 1276, column: 41, scope: !4710)
!4717 = !DILocation(line: 1276, column: 44, scope: !4710)
!4718 = !DILocation(line: 1276, column: 60, scope: !4710)
!4719 = !DILocation(line: 1276, column: 3, scope: !4710)
!4720 = distinct !DISubprogram(name: "gimple_ops", scope: !583, file: !583, line: 1614, type: !4721, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4723)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!1773, !1739}
!4723 = !{!4724, !4725}
!4724 = !DILocalVariable(name: "gs", arg: 1, scope: !4720, file: !583, line: 1614, type: !1739)
!4725 = !DILocalVariable(name: "off", scope: !4720, file: !583, line: 1616, type: !1884)
!4726 = !DILocation(line: 0, scope: !4720)
!4727 = !DILocation(line: 1621, column: 28, scope: !4720)
!4728 = !DILocation(line: 1621, column: 9, scope: !4720)
!4729 = !DILocation(line: 1622, column: 3, scope: !4720)
!4730 = !DILocation(line: 1624, column: 20, scope: !4720)
!4731 = !DILocation(line: 1624, column: 32, scope: !4720)
!4732 = !DILocation(line: 1624, column: 10, scope: !4720)
!4733 = !DILocation(line: 1624, column: 3, scope: !4720)
!4734 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !583, file: !583, line: 1073, type: !4735, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!582, !1739}
!4737 = !{!4738}
!4738 = !DILocalVariable(name: "gs", arg: 1, scope: !4734, file: !583, line: 1073, type: !1739)
!4739 = !DILocation(line: 0, scope: !4734)
!4740 = !DILocation(line: 1075, column: 24, scope: !4734)
!4741 = !DILocation(line: 1075, column: 10, scope: !4734)
!4742 = !DILocation(line: 1075, column: 3, scope: !4734)
!4743 = distinct !DISubprogram(name: "gss_for_code", scope: !583, file: !583, line: 1061, type: !4744, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4746)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!582, !609}
!4746 = !{!4747}
!4747 = !DILocalVariable(name: "code", arg: 1, scope: !4743, file: !583, line: 1061, type: !609)
!4748 = !DILocation(line: 0, scope: !4743)
!4749 = !DILocation(line: 1066, column: 10, scope: !4743)
!4750 = !DILocation(line: 1066, column: 3, scope: !4743)
!4751 = distinct !DISubprogram(name: "ccp_initialize", scope: !3, file: !3, line: 643, type: !4752, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4754)
!4752 = !DISubroutineType(types: !4753)
!4753 = !{null}
!4754 = !{!4755, !4756, !4760, !4764, !4765, !4768, !4781, !4785}
!4755 = !DILocalVariable(name: "bb", scope: !4751, file: !3, line: 645, type: !2172)
!4756 = !DILocalVariable(name: "i", scope: !4757, file: !3, line: 652, type: !4241)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 651, column: 5)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 650, column: 3)
!4759 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 650, column: 3)
!4760 = !DILocalVariable(name: "stmt", scope: !4761, file: !3, line: 656, type: !1739)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 655, column: 9)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 654, column: 7)
!4763 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 654, column: 7)
!4764 = !DILocalVariable(name: "is_varying", scope: !4761, file: !3, line: 657, type: !1407)
!4765 = !DILocalVariable(name: "def", scope: !4766, file: !3, line: 669, type: !1456)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 668, column: 6)
!4767 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 667, column: 8)
!4768 = !DILocalVariable(name: "iter", scope: !4766, file: !3, line: 670, type: !4769)
!4769 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !648, line: 140, baseType: !4770)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !648, line: 131, size: 320, elements: !4771)
!4771 = !{!4772, !4773, !4774, !4776, !4778, !4779, !4780}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4770, file: !648, line: 133, baseType: !1407, size: 8)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !4770, file: !648, line: 134, baseType: !647, size: 32, offset: 32)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !4770, file: !648, line: 135, baseType: !4775, size: 64, offset: 64)
!4775 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !648, line: 42, baseType: !1768)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !4770, file: !648, line: 136, baseType: !4777, size: 64, offset: 128)
!4777 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !648, line: 50, baseType: !1775)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !4770, file: !648, line: 137, baseType: !1408, size: 32, offset: 192)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !4770, file: !648, line: 138, baseType: !1408, size: 32, offset: 224)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !4770, file: !648, line: 139, baseType: !1739, size: 64, offset: 256)
!4781 = !DILocalVariable(name: "i", scope: !4782, file: !3, line: 686, type: !4241)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 685, column: 5)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 684, column: 3)
!4784 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 684, column: 3)
!4785 = !DILocalVariable(name: "phi", scope: !4786, file: !3, line: 690, type: !1739)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 689, column: 9)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 688, column: 7)
!4788 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 688, column: 7)
!4789 = !DILocation(line: 647, column: 15, scope: !4751)
!4790 = !DILocation(line: 647, column: 13, scope: !4751)
!4791 = !DILocation(line: 650, column: 3, scope: !4759)
!4792 = !DILocation(line: 0, scope: !4757)
!4793 = !DILocation(line: 0, scope: !4763)
!4794 = !DILocation(line: 0, scope: !4766)
!4795 = !DILocation(line: 650, column: 3, scope: !4758)
!4796 = !DILocation(line: 0, scope: !4759)
!4797 = !DILocation(line: 0, scope: !4751)
!4798 = !DILocation(line: 652, column: 7, scope: !4757)
!4799 = !DILocation(line: 654, column: 16, scope: !4763)
!4800 = !DILocation(line: 654, column: 12, scope: !4763)
!4801 = !DILocation(line: 654, column: 36, scope: !4762)
!4802 = !DILocation(line: 654, column: 35, scope: !4762)
!4803 = !DILocation(line: 654, column: 7, scope: !4763)
!4804 = !DILocation(line: 656, column: 18, scope: !4761)
!4805 = !DILocation(line: 0, scope: !4761)
!4806 = !DILocation(line: 662, column: 8, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 662, column: 8)
!4808 = !DILocation(line: 662, column: 8, scope: !4761)
!4809 = !DILocation(line: 665, column: 19, scope: !4807)
!4810 = !DILocation(line: 0, scope: !4807)
!4811 = !DILocation(line: 667, column: 8, scope: !4767)
!4812 = !DILocation(line: 667, column: 8, scope: !4761)
!4813 = !DILocation(line: 670, column: 8, scope: !4766)
!4814 = !DILocation(line: 674, column: 8, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 674, column: 8)
!4816 = !DILocation(line: 0, scope: !4815)
!4817 = !DILocation(line: 674, column: 8, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 674, column: 8)
!4819 = !DILocation(line: 675, column: 3, scope: !4818)
!4820 = distinct !{!4820, !4814, !4821}
!4821 = !DILocation(line: 675, column: 25, scope: !4815)
!4822 = !DILocation(line: 676, column: 6, scope: !4767)
!4823 = !DILocation(line: 676, column: 6, scope: !4766)
!4824 = !DILocation(line: 677, column: 42, scope: !4761)
!4825 = !DILocation(line: 677, column: 11, scope: !4761)
!4826 = !DILocation(line: 654, column: 51, scope: !4762)
!4827 = !DILocation(line: 654, column: 7, scope: !4762)
!4828 = distinct !{!4828, !4803, !4829}
!4829 = !DILocation(line: 678, column: 2, scope: !4763)
!4830 = !DILocation(line: 679, column: 5, scope: !4758)
!4831 = !DILocation(line: 0, scope: !4758)
!4832 = distinct !{!4832, !4791, !4833}
!4833 = !DILocation(line: 679, column: 5, scope: !4759)
!4834 = !DILocation(line: 684, column: 3, scope: !4784)
!4835 = !DILocation(line: 0, scope: !4782)
!4836 = !DILocation(line: 0, scope: !4788)
!4837 = !DILocation(line: 684, column: 3, scope: !4783)
!4838 = !DILocation(line: 0, scope: !4784)
!4839 = !DILocation(line: 686, column: 7, scope: !4782)
!4840 = !DILocation(line: 688, column: 16, scope: !4788)
!4841 = !DILocation(line: 688, column: 12, scope: !4788)
!4842 = !DILocation(line: 688, column: 38, scope: !4787)
!4843 = !DILocation(line: 688, column: 37, scope: !4787)
!4844 = !DILocation(line: 688, column: 7, scope: !4788)
!4845 = !DILocation(line: 690, column: 24, scope: !4786)
!4846 = !DILocation(line: 0, scope: !4786)
!4847 = !DILocation(line: 692, column: 24, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 692, column: 8)
!4849 = !DILocation(line: 692, column: 9, scope: !4848)
!4850 = !DILocation(line: 692, column: 8, scope: !4786)
!4851 = !DILocation(line: 693, column: 13, scope: !4848)
!4852 = !DILocation(line: 695, column: 13, scope: !4848)
!4853 = !DILocation(line: 688, column: 53, scope: !4787)
!4854 = !DILocation(line: 688, column: 7, scope: !4787)
!4855 = distinct !{!4855, !4844, !4856}
!4856 = !DILocation(line: 696, column: 2, scope: !4788)
!4857 = !DILocation(line: 697, column: 5, scope: !4783)
!4858 = !DILocation(line: 0, scope: !4783)
!4859 = distinct !{!4859, !4834, !4860}
!4860 = !DILocation(line: 697, column: 5, scope: !4784)
!4861 = !DILocation(line: 698, column: 1, scope: !4751)
!4862 = distinct !DISubprogram(name: "ccp_visit_stmt", scope: !3, file: !3, line: 1680, type: !4863, scopeLine: 1681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!654, !1739, !4865, !1773}
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!4866 = !{!4867, !4868, !4869, !4870, !4871, !4872}
!4867 = !DILocalVariable(name: "stmt", arg: 1, scope: !4862, file: !3, line: 1680, type: !1739)
!4868 = !DILocalVariable(name: "taken_edge_p", arg: 2, scope: !4862, file: !3, line: 1680, type: !4865)
!4869 = !DILocalVariable(name: "output_p", arg: 3, scope: !4862, file: !3, line: 1680, type: !1773)
!4870 = !DILocalVariable(name: "def", scope: !4862, file: !3, line: 1682, type: !1456)
!4871 = !DILocalVariable(name: "iter", scope: !4862, file: !3, line: 1683, type: !4769)
!4872 = !DILocalVariable(name: "v", scope: !4873, file: !3, line: 1727, type: !2747)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1726, column: 5)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1725, column: 3)
!4875 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1725, column: 3)
!4876 = !DILocation(line: 0, scope: !4862)
!4877 = !DILocation(line: 1683, column: 3, scope: !4862)
!4878 = !DILocation(line: 1685, column: 7, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1685, column: 7)
!4880 = !DILocation(line: 1685, column: 17, scope: !4879)
!4881 = !DILocation(line: 1685, column: 21, scope: !4879)
!4882 = !DILocation(line: 1685, column: 32, scope: !4879)
!4883 = !DILocation(line: 1685, column: 7, scope: !4862)
!4884 = !DILocation(line: 1687, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1686, column: 5)
!4886 = !DILocation(line: 1688, column: 26, scope: !4885)
!4887 = !DILocation(line: 1688, column: 46, scope: !4885)
!4888 = !DILocation(line: 1688, column: 7, scope: !4885)
!4889 = !DILocation(line: 1689, column: 5, scope: !4885)
!4890 = !DILocation(line: 1691, column: 11, scope: !4862)
!4891 = !DILocation(line: 1691, column: 3, scope: !4862)
!4892 = !DILocation(line: 1697, column: 16, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1692, column: 5)
!4894 = !DILocation(line: 1697, column: 9, scope: !4893)
!4895 = !DILocation(line: 1701, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 1701, column: 13)
!4897 = !DILocation(line: 1701, column: 36, scope: !4896)
!4898 = !DILocation(line: 1701, column: 13, scope: !4893)
!4899 = !DILocation(line: 1702, column: 18, scope: !4896)
!4900 = !DILocation(line: 1702, column: 11, scope: !4896)
!4901 = !DILocation(line: 1711, column: 16, scope: !4893)
!4902 = !DILocation(line: 1711, column: 9, scope: !4893)
!4903 = !DILocation(line: 1719, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1719, column: 7)
!4905 = !DILocation(line: 1719, column: 17, scope: !4904)
!4906 = !DILocation(line: 1719, column: 21, scope: !4904)
!4907 = !DILocation(line: 1719, column: 32, scope: !4904)
!4908 = !DILocation(line: 1719, column: 7, scope: !4862)
!4909 = !DILocation(line: 1720, column: 5, scope: !4904)
!4910 = !DILocation(line: 1725, column: 3, scope: !4875)
!4911 = !DILocation(line: 0, scope: !4875)
!4912 = !DILocation(line: 1725, column: 3, scope: !4874)
!4913 = !DILocation(line: 1728, column: 7, scope: !4873)
!4914 = distinct !{!4914, !4910, !4915}
!4915 = !DILocation(line: 1729, column: 5, scope: !4875)
!4916 = !DILocation(line: 1732, column: 1, scope: !4862)
!4917 = distinct !DISubprogram(name: "ccp_visit_phi_node", scope: !3, file: !3, line: 796, type: !4918, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4920)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!654, !1739}
!4920 = !{!4921, !4922, !4923, !4924, !4925, !4929, !4932}
!4921 = !DILocalVariable(name: "phi", arg: 1, scope: !4917, file: !3, line: 796, type: !1739)
!4922 = !DILocalVariable(name: "i", scope: !4917, file: !3, line: 798, type: !7)
!4923 = !DILocalVariable(name: "old_val", scope: !4917, file: !3, line: 799, type: !2746)
!4924 = !DILocalVariable(name: "new_val", scope: !4917, file: !3, line: 799, type: !2747)
!4925 = !DILocalVariable(name: "e", scope: !4926, file: !3, line: 830, type: !1719)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 827, column: 5)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 826, column: 3)
!4928 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 826, column: 3)
!4929 = !DILocalVariable(name: "arg", scope: !4930, file: !3, line: 844, type: !1456)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 843, column: 2)
!4931 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 842, column: 11)
!4932 = !DILocalVariable(name: "arg_val", scope: !4930, file: !3, line: 845, type: !2747)
!4933 = !DILocation(line: 0, scope: !4917)
!4934 = !DILocation(line: 799, column: 3, scope: !4917)
!4935 = !DILocation(line: 801, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 801, column: 7)
!4937 = !DILocation(line: 801, column: 17, scope: !4936)
!4938 = !DILocation(line: 801, column: 21, scope: !4936)
!4939 = !DILocation(line: 801, column: 32, scope: !4936)
!4940 = !DILocation(line: 801, column: 7, scope: !4917)
!4941 = !DILocation(line: 803, column: 7, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 802, column: 5)
!4943 = !DILocation(line: 804, column: 26, scope: !4942)
!4944 = !DILocation(line: 804, column: 45, scope: !4942)
!4945 = !DILocation(line: 804, column: 7, scope: !4942)
!4946 = !DILocation(line: 805, column: 5, scope: !4942)
!4947 = !DILocation(line: 807, column: 24, scope: !4917)
!4948 = !DILocation(line: 807, column: 13, scope: !4917)
!4949 = !DILocation(line: 808, column: 20, scope: !4917)
!4950 = !DILocation(line: 808, column: 3, scope: !4917)
!4951 = !DILocation(line: 814, column: 17, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 809, column: 5)
!4953 = !DILocation(line: 815, column: 7, scope: !4952)
!4954 = !DILocation(line: 818, column: 15, scope: !4952)
!4955 = !DILocation(line: 818, column: 27, scope: !4952)
!4956 = !DILocation(line: 819, column: 15, scope: !4952)
!4957 = !DILocation(line: 819, column: 21, scope: !4952)
!4958 = !DILocation(line: 820, column: 7, scope: !4952)
!4959 = !DILocation(line: 823, column: 7, scope: !4952)
!4960 = !DILocation(line: 824, column: 5, scope: !4952)
!4961 = !DILocation(line: 0, scope: !4930)
!4962 = !DILocation(line: 0, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 848, column: 6)
!4964 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 847, column: 8)
!4965 = !DILocation(line: 0, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 865, column: 8)
!4967 = !DILocation(line: 826, column: 8, scope: !4928)
!4968 = !DILocation(line: 0, scope: !4928)
!4969 = !DILocation(line: 826, column: 19, scope: !4927)
!4970 = !DILocation(line: 826, column: 17, scope: !4927)
!4971 = !DILocation(line: 826, column: 3, scope: !4928)
!4972 = !DILocation(line: 830, column: 16, scope: !4926)
!4973 = !DILocation(line: 0, scope: !4926)
!4974 = !DILocation(line: 832, column: 11, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 832, column: 11)
!4976 = !DILocation(line: 832, column: 21, scope: !4975)
!4977 = !DILocation(line: 832, column: 25, scope: !4975)
!4978 = !DILocation(line: 832, column: 36, scope: !4975)
!4979 = !DILocation(line: 832, column: 11, scope: !4926)
!4980 = !DILocation(line: 836, column: 14, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 833, column: 2)
!4982 = !DILocation(line: 836, column: 19, scope: !4981)
!4983 = !DILocation(line: 836, column: 29, scope: !4981)
!4984 = !DILocation(line: 836, column: 35, scope: !4981)
!4985 = !DILocation(line: 837, column: 12, scope: !4981)
!4986 = !DILocation(line: 837, column: 18, scope: !4981)
!4987 = !DILocation(line: 837, column: 8, scope: !4981)
!4988 = !DILocation(line: 834, column: 4, scope: !4981)
!4989 = !DILocation(line: 838, column: 2, scope: !4981)
!4990 = !DILocation(line: 842, column: 14, scope: !4931)
!4991 = !DILocation(line: 842, column: 20, scope: !4931)
!4992 = !DILocation(line: 842, column: 11, scope: !4926)
!4993 = !DILocation(line: 844, column: 15, scope: !4930)
!4994 = !DILocation(line: 844, column: 40, scope: !4930)
!4995 = !DILocation(line: 845, column: 4, scope: !4930)
!4996 = !DILocation(line: 847, column: 8, scope: !4964)
!4997 = !DILocation(line: 847, column: 8, scope: !4930)
!4998 = !DILocation(line: 849, column: 28, scope: !4963)
!4999 = !DILocation(line: 850, column: 22, scope: !4963)
!5000 = !DILocation(line: 851, column: 6, scope: !4963)
!5001 = !DILocation(line: 853, column: 18, scope: !4964)
!5002 = !DILocation(line: 853, column: 16, scope: !4964)
!5003 = !DILocation(line: 855, column: 4, scope: !4930)
!5004 = !DILocation(line: 857, column: 8, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 857, column: 8)
!5006 = !DILocation(line: 857, column: 18, scope: !5005)
!5007 = !DILocation(line: 857, column: 22, scope: !5005)
!5008 = !DILocation(line: 857, column: 33, scope: !5005)
!5009 = !DILocation(line: 857, column: 8, scope: !4930)
!5010 = !DILocation(line: 859, column: 8, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 858, column: 6)
!5012 = !DILocation(line: 860, column: 28, scope: !5011)
!5013 = !DILocation(line: 860, column: 44, scope: !5011)
!5014 = !DILocation(line: 860, column: 8, scope: !5011)
!5015 = !DILocation(line: 861, column: 28, scope: !5011)
!5016 = !DILocation(line: 861, column: 8, scope: !5011)
!5017 = !DILocation(line: 862, column: 17, scope: !5011)
!5018 = !DILocation(line: 862, column: 8, scope: !5011)
!5019 = !DILocation(line: 863, column: 6, scope: !5011)
!5020 = !DILocation(line: 865, column: 16, scope: !4966)
!5021 = !DILocation(line: 865, column: 28, scope: !4966)
!5022 = !DILocation(line: 0, scope: !4931)
!5023 = !DILocation(line: 867, column: 2, scope: !4931)
!5024 = !DILocation(line: 868, column: 5, scope: !4927)
!5025 = !DILocation(line: 826, column: 47, scope: !4927)
!5026 = !DILocation(line: 826, column: 3, scope: !4927)
!5027 = distinct !{!5027, !4971, !5028}
!5028 = !DILocation(line: 868, column: 5, scope: !4928)
!5029 = !DILocation(line: 870, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 870, column: 7)
!5031 = !DILocation(line: 870, column: 17, scope: !5030)
!5032 = !DILocation(line: 870, column: 21, scope: !5030)
!5033 = !DILocation(line: 870, column: 32, scope: !5030)
!5034 = !DILocation(line: 870, column: 7, scope: !4917)
!5035 = !DILocation(line: 872, column: 7, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 871, column: 5)
!5037 = !DILocation(line: 873, column: 16, scope: !5036)
!5038 = !DILocation(line: 873, column: 7, scope: !5036)
!5039 = !DILocation(line: 874, column: 5, scope: !5036)
!5040 = !DILocation(line: 877, column: 26, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 877, column: 7)
!5042 = !DILocation(line: 877, column: 7, scope: !5041)
!5043 = !DILocation(line: 877, column: 7, scope: !4917)
!5044 = !DILocation(line: 879, column: 19, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 879, column: 11)
!5046 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 878, column: 5)
!5047 = !DILocation(line: 879, column: 31, scope: !5045)
!5048 = !DILocation(line: 0, scope: !5045)
!5049 = !DILocation(line: 886, column: 1, scope: !4917)
!5050 = distinct !DISubprogram(name: "ccp_finalize", scope: !3, file: !3, line: 725, type: !2764, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5051)
!5051 = !{!5052}
!5052 = !DILocalVariable(name: "something_changed", scope: !5050, file: !3, line: 727, type: !1407)
!5053 = !DILocation(line: 729, column: 3, scope: !5050)
!5054 = !DILocation(line: 731, column: 44, scope: !5050)
!5055 = !DILocation(line: 731, column: 23, scope: !5050)
!5056 = !DILocation(line: 0, scope: !5050)
!5057 = !DILocation(line: 733, column: 9, scope: !5050)
!5058 = !DILocation(line: 733, column: 3, scope: !5050)
!5059 = !DILocation(line: 734, column: 13, scope: !5050)
!5060 = !DILocation(line: 735, column: 3, scope: !5050)
!5061 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !5062, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5066)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!7, !5064}
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2270)
!5066 = !{!5067}
!5067 = !DILocalVariable(name: "vec_", arg: 1, scope: !5061, file: !135, line: 182, type: !5064)
!5068 = !DILocation(line: 0, scope: !5061)
!5069 = !DILocation(line: 182, column: 1, scope: !5061)
!5070 = distinct !DISubprogram(name: "gsi_start_bb", scope: !583, file: !583, line: 4418, type: !5071, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!4241, !2172}
!5073 = !{!5074, !5075, !5076}
!5074 = !DILocalVariable(name: "bb", arg: 1, scope: !5070, file: !583, line: 4418, type: !2172)
!5075 = !DILocalVariable(name: "i", scope: !5070, file: !583, line: 4420, type: !4241)
!5076 = !DILocalVariable(name: "seq", scope: !5070, file: !583, line: 4421, type: !1729)
!5077 = !DILocation(line: 0, scope: !5070)
!5078 = !DILocation(line: 4420, column: 24, scope: !5070)
!5079 = !DILocation(line: 4423, column: 9, scope: !5070)
!5080 = !DILocation(line: 4424, column: 11, scope: !5070)
!5081 = !DILocation(line: 4424, column: 5, scope: !5070)
!5082 = !DILocation(line: 4424, column: 9, scope: !5070)
!5083 = !DILocation(line: 4425, column: 5, scope: !5070)
!5084 = !DILocation(line: 4425, column: 9, scope: !5070)
!5085 = !DILocation(line: 4426, column: 5, scope: !5070)
!5086 = !DILocation(line: 4426, column: 8, scope: !5070)
!5087 = !DILocation(line: 4429, column: 1, scope: !5070)
!5088 = distinct !DISubprogram(name: "gsi_end_p", scope: !583, file: !583, line: 4467, type: !5089, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5091)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!1407, !4241}
!5091 = !{!5092}
!5092 = !DILocalVariable(name: "i", arg: 1, scope: !5088, file: !583, line: 4467, type: !4241)
!5093 = !DILocation(line: 4467, column: 33, scope: !5088)
!5094 = !DILocation(line: 4469, column: 12, scope: !5088)
!5095 = !DILocation(line: 4469, column: 16, scope: !5088)
!5096 = !DILocation(line: 4469, column: 10, scope: !5088)
!5097 = !DILocation(line: 4469, column: 3, scope: !5088)
!5098 = distinct !DISubprogram(name: "surely_varying_stmt_p", scope: !3, file: !3, line: 607, type: !4402, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5099)
!5099 = !{!5100, !5101}
!5100 = !DILocalVariable(name: "stmt", arg: 1, scope: !5098, file: !3, line: 607, type: !1739)
!5101 = !DILocalVariable(name: "fndecl", scope: !5102, file: !3, line: 618, type: !1456)
!5102 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 617, column: 5)
!5103 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 616, column: 7)
!5104 = !DILocation(line: 0, scope: !5098)
!5105 = !DILocation(line: 611, column: 7, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 611, column: 7)
!5107 = !DILocation(line: 611, column: 7, scope: !5098)
!5108 = !DILocation(line: 616, column: 7, scope: !5103)
!5109 = !DILocation(line: 616, column: 7, scope: !5098)
!5110 = !DILocation(line: 619, column: 12, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 619, column: 11)
!5112 = !DILocation(line: 620, column: 4, scope: !5111)
!5113 = !DILocation(line: 620, column: 18, scope: !5111)
!5114 = !DILocation(line: 0, scope: !5102)
!5115 = !DILocation(line: 620, column: 45, scope: !5111)
!5116 = !DILocation(line: 621, column: 8, scope: !5111)
!5117 = !DILocation(line: 621, column: 12, scope: !5111)
!5118 = !DILocation(line: 619, column: 11, scope: !5102)
!5119 = !DILocation(line: 623, column: 5, scope: !5103)
!5120 = !DILocation(line: 626, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 626, column: 12)
!5122 = !DILocation(line: 626, column: 12, scope: !5103)
!5123 = !DILocation(line: 631, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 631, column: 7)
!5125 = !DILocation(line: 631, column: 26, scope: !5124)
!5126 = !DILocation(line: 632, column: 7, scope: !5124)
!5127 = !DILocation(line: 632, column: 10, scope: !5124)
!5128 = !DILocation(line: 632, column: 29, scope: !5124)
!5129 = !DILocation(line: 633, column: 7, scope: !5124)
!5130 = !DILocation(line: 633, column: 10, scope: !5124)
!5131 = !DILocation(line: 633, column: 29, scope: !5124)
!5132 = !DILocation(line: 634, column: 7, scope: !5124)
!5133 = !DILocation(line: 634, column: 10, scope: !5124)
!5134 = !DILocation(line: 634, column: 29, scope: !5124)
!5135 = !DILocation(line: 631, column: 7, scope: !5098)
!5136 = !DILocation(line: 637, column: 3, scope: !5098)
!5137 = !DILocation(line: 638, column: 1, scope: !5098)
!5138 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !3330, file: !3330, line: 792, type: !5139, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5142)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!1456, !5141, !1739, !1408}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 64)
!5142 = !{!5143, !5144, !5145}
!5143 = !DILocalVariable(name: "ptr", arg: 1, scope: !5138, file: !3330, line: 792, type: !5141)
!5144 = !DILocalVariable(name: "stmt", arg: 2, scope: !5138, file: !3330, line: 792, type: !1739)
!5145 = !DILocalVariable(name: "flags", arg: 3, scope: !5138, file: !3330, line: 792, type: !1408)
!5146 = !DILocation(line: 0, scope: !5138)
!5147 = !DILocation(line: 794, column: 3, scope: !5138)
!5148 = !DILocation(line: 795, column: 8, scope: !5138)
!5149 = !DILocation(line: 795, column: 18, scope: !5138)
!5150 = !DILocation(line: 796, column: 10, scope: !5138)
!5151 = !DILocation(line: 796, column: 3, scope: !5138)
!5152 = distinct !DISubprogram(name: "op_iter_done", scope: !3330, file: !3330, line: 652, type: !5153, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5157)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!1407, !5155}
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 64)
!5156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4769)
!5157 = !{!5158}
!5158 = !DILocalVariable(name: "ptr", arg: 1, scope: !5152, file: !3330, line: 652, type: !5155)
!5159 = !DILocation(line: 0, scope: !5152)
!5160 = !DILocation(line: 654, column: 15, scope: !5152)
!5161 = !DILocation(line: 654, column: 3, scope: !5152)
!5162 = distinct !DISubprogram(name: "set_value_varying", scope: !3, file: !3, line: 406, type: !5163, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{null, !1456}
!5165 = !{!5166, !5167}
!5166 = !DILocalVariable(name: "var", arg: 1, scope: !5162, file: !3, line: 406, type: !1456)
!5167 = !DILocalVariable(name: "val", scope: !5162, file: !3, line: 408, type: !2746)
!5168 = !DILocation(line: 0, scope: !5162)
!5169 = !DILocation(line: 408, column: 24, scope: !5162)
!5170 = !DILocation(line: 408, column: 34, scope: !5162)
!5171 = !DILocation(line: 410, column: 8, scope: !5162)
!5172 = !DILocation(line: 410, column: 20, scope: !5162)
!5173 = !DILocation(line: 411, column: 8, scope: !5162)
!5174 = !DILocation(line: 411, column: 14, scope: !5162)
!5175 = !DILocation(line: 412, column: 1, scope: !5162)
!5176 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !3330, file: !3330, line: 699, type: !5177, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!1456, !5141}
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "ptr", arg: 1, scope: !5176, file: !3330, line: 699, type: !5141)
!5181 = !DILocalVariable(name: "val", scope: !5176, file: !3330, line: 701, type: !1456)
!5182 = !DILocation(line: 0, scope: !5176)
!5183 = !DILocation(line: 705, column: 12, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5176, file: !3330, line: 705, column: 7)
!5185 = !DILocation(line: 705, column: 7, scope: !5184)
!5186 = !DILocation(line: 705, column: 7, scope: !5176)
!5187 = !DILocation(line: 707, column: 13, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !3330, line: 706, column: 5)
!5189 = !DILocation(line: 708, column: 24, scope: !5188)
!5190 = !DILocation(line: 708, column: 30, scope: !5188)
!5191 = !DILocation(line: 708, column: 17, scope: !5188)
!5192 = !DILocation(line: 709, column: 7, scope: !5188)
!5193 = !DILocation(line: 711, column: 12, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5176, file: !3330, line: 711, column: 7)
!5195 = !DILocation(line: 711, column: 7, scope: !5194)
!5196 = !DILocation(line: 711, column: 7, scope: !5176)
!5197 = !DILocation(line: 713, column: 13, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !3330, line: 712, column: 5)
!5199 = !DILocation(line: 714, column: 24, scope: !5198)
!5200 = !DILocation(line: 714, column: 30, scope: !5198)
!5201 = !DILocation(line: 714, column: 17, scope: !5198)
!5202 = !DILocation(line: 715, column: 7, scope: !5198)
!5203 = !DILocation(line: 718, column: 8, scope: !5176)
!5204 = !DILocation(line: 718, column: 13, scope: !5176)
!5205 = !DILocation(line: 719, column: 3, scope: !5176)
!5206 = !DILocation(line: 721, column: 1, scope: !5176)
!5207 = distinct !DISubprogram(name: "prop_set_simulate_again", scope: !655, file: !655, line: 28, type: !5208, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !1739, !1407}
!5210 = !{!5211, !5212}
!5211 = !DILocalVariable(name: "s", arg: 1, scope: !5207, file: !655, line: 28, type: !1739)
!5212 = !DILocalVariable(name: "visit_p", arg: 2, scope: !5207, file: !655, line: 28, type: !1407)
!5213 = !DILocation(line: 0, scope: !5207)
!5214 = !DILocation(line: 30, column: 3, scope: !5207)
!5215 = !DILocation(line: 31, column: 1, scope: !5207)
!5216 = distinct !DISubprogram(name: "gsi_next", scope: !583, file: !583, line: 4485, type: !5217, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5219)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{null, !4240}
!5219 = !{!5220}
!5220 = !DILocalVariable(name: "i", arg: 1, scope: !5216, file: !583, line: 4485, type: !4240)
!5221 = !DILocation(line: 0, scope: !5216)
!5222 = !DILocation(line: 4487, column: 15, scope: !5216)
!5223 = !DILocation(line: 4487, column: 20, scope: !5216)
!5224 = !DILocation(line: 4487, column: 10, scope: !5216)
!5225 = !DILocation(line: 4488, column: 1, scope: !5216)
!5226 = distinct !DISubprogram(name: "gimple_phi_result", scope: !583, file: !583, line: 3071, type: !4218, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5227)
!5227 = !{!5228}
!5228 = !DILocalVariable(name: "gs", arg: 1, scope: !5226, file: !583, line: 3071, type: !4195)
!5229 = !DILocation(line: 0, scope: !5226)
!5230 = !DILocation(line: 3074, column: 25, scope: !5226)
!5231 = !DILocation(line: 3074, column: 3, scope: !5226)
!5232 = distinct !DISubprogram(name: "bb_seq", scope: !583, file: !583, line: 237, type: !5233, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5238)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!1729, !5235}
!5235 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !1457, line: 112, baseType: !5236)
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1704)
!5238 = !{!5239}
!5239 = !DILocalVariable(name: "bb", arg: 1, scope: !5232, file: !583, line: 237, type: !5235)
!5240 = !DILocation(line: 0, scope: !5232)
!5241 = !DILocation(line: 239, column: 17, scope: !5232)
!5242 = !DILocation(line: 239, column: 23, scope: !5232)
!5243 = !DILocation(line: 239, column: 33, scope: !5232)
!5244 = !DILocation(line: 239, column: 43, scope: !5232)
!5245 = !DILocation(line: 239, column: 36, scope: !5232)
!5246 = !DILocation(line: 239, column: 10, scope: !5232)
!5247 = !DILocation(line: 239, column: 68, scope: !5232)
!5248 = !DILocation(line: 239, column: 3, scope: !5232)
!5249 = distinct !DISubprogram(name: "gimple_seq_first", scope: !583, file: !583, line: 159, type: !5250, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5255)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!1734, !5252}
!5252 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !1457, line: 67, baseType: !5253)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!5255 = !{!5256}
!5256 = !DILocalVariable(name: "s", arg: 1, scope: !5249, file: !583, line: 159, type: !5252)
!5257 = !DILocation(line: 0, scope: !5249)
!5258 = !DILocation(line: 161, column: 10, scope: !5249)
!5259 = !DILocation(line: 161, column: 17, scope: !5249)
!5260 = !DILocation(line: 161, column: 3, scope: !5249)
!5261 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !583, file: !583, line: 1477, type: !4193, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5262)
!5262 = !{!5263}
!5263 = !DILocalVariable(name: "stmt", arg: 1, scope: !5261, file: !583, line: 1477, type: !4195)
!5264 = !DILocation(line: 0, scope: !5261)
!5265 = !DILocation(line: 1479, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5261, file: !583, line: 1479, column: 7)
!5267 = !DILocation(line: 1479, column: 7, scope: !5261)
!5268 = !DILocation(line: 1480, column: 25, scope: !5266)
!5269 = !DILocation(line: 1480, column: 12, scope: !5266)
!5270 = !DILocation(line: 1480, column: 5, scope: !5266)
!5271 = !DILocation(line: 0, scope: !5266)
!5272 = !DILocation(line: 1483, column: 1, scope: !5261)
!5273 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !583, file: !583, line: 1954, type: !4218, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5274)
!5274 = !{!5275, !5276}
!5275 = !DILocalVariable(name: "gs", arg: 1, scope: !5273, file: !583, line: 1954, type: !4195)
!5276 = !DILocalVariable(name: "addr", scope: !5273, file: !583, line: 1956, type: !1456)
!5277 = !DILocation(line: 0, scope: !5273)
!5278 = !DILocation(line: 1956, column: 15, scope: !5273)
!5279 = !DILocation(line: 1957, column: 7, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5273, file: !583, line: 1957, column: 7)
!5281 = !DILocation(line: 1957, column: 24, scope: !5280)
!5282 = !DILocation(line: 1957, column: 7, scope: !5273)
!5283 = !DILocation(line: 1958, column: 12, scope: !5280)
!5284 = !DILocation(line: 1958, column: 5, scope: !5280)
!5285 = !DILocation(line: 1960, column: 1, scope: !5273)
!5286 = distinct !DISubprogram(name: "gimple_vdef", scope: !583, file: !583, line: 1375, type: !4218, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5287)
!5287 = !{!5288}
!5288 = !DILocalVariable(name: "g", arg: 1, scope: !5286, file: !583, line: 1375, type: !4195)
!5289 = !DILocation(line: 0, scope: !5286)
!5290 = !DILocation(line: 1377, column: 8, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5286, file: !583, line: 1377, column: 7)
!5292 = !DILocation(line: 1377, column: 7, scope: !5286)
!5293 = !DILocation(line: 1379, column: 23, scope: !5286)
!5294 = !DILocation(line: 1379, column: 3, scope: !5286)
!5295 = !DILocation(line: 1380, column: 1, scope: !5286)
!5296 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !583, file: !583, line: 1283, type: !4193, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5297)
!5297 = !{!5298}
!5298 = !DILocalVariable(name: "g", arg: 1, scope: !5296, file: !583, line: 1283, type: !4195)
!5299 = !DILocation(line: 0, scope: !5296)
!5300 = !DILocation(line: 1285, column: 10, scope: !5296)
!5301 = !DILocation(line: 1285, column: 26, scope: !5296)
!5302 = !DILocation(line: 1285, column: 43, scope: !5296)
!5303 = !DILocation(line: 1285, column: 46, scope: !5296)
!5304 = !DILocation(line: 1285, column: 62, scope: !5296)
!5305 = !DILocation(line: 1285, column: 3, scope: !5296)
!5306 = distinct !DISubprogram(name: "gimple_call_fn", scope: !583, file: !583, line: 1911, type: !4218, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5307)
!5307 = !{!5308}
!5308 = !DILocalVariable(name: "gs", arg: 1, scope: !5306, file: !583, line: 1911, type: !4195)
!5309 = !DILocation(line: 0, scope: !5306)
!5310 = !DILocation(line: 1914, column: 10, scope: !5306)
!5311 = !DILocation(line: 1914, column: 3, scope: !5306)
!5312 = distinct !DISubprogram(name: "op_iter_init", scope: !3330, file: !3330, line: 742, type: !5313, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5315)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{null, !5141, !1739, !1408}
!5315 = !{!5316, !5317, !5318}
!5316 = !DILocalVariable(name: "ptr", arg: 1, scope: !5312, file: !3330, line: 742, type: !5141)
!5317 = !DILocalVariable(name: "stmt", arg: 2, scope: !5312, file: !3330, line: 742, type: !1739)
!5318 = !DILocalVariable(name: "flags", arg: 3, scope: !5312, file: !3330, line: 742, type: !1408)
!5319 = !DILocation(line: 0, scope: !5312)
!5320 = !DILocation(line: 746, column: 3, scope: !5312)
!5321 = !DILocation(line: 748, column: 22, scope: !5312)
!5322 = !DILocation(line: 748, column: 15, scope: !5312)
!5323 = !DILocation(line: 748, column: 52, scope: !5312)
!5324 = !DILocation(line: 748, column: 8, scope: !5312)
!5325 = !DILocation(line: 748, column: 13, scope: !5312)
!5326 = !DILocation(line: 749, column: 15, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5312, file: !3330, line: 749, column: 7)
!5328 = !DILocation(line: 750, column: 7, scope: !5327)
!5329 = !DILocation(line: 750, column: 10, scope: !5327)
!5330 = !DILocation(line: 751, column: 7, scope: !5327)
!5331 = !DILocation(line: 751, column: 10, scope: !5327)
!5332 = !DILocation(line: 751, column: 29, scope: !5327)
!5333 = !DILocation(line: 749, column: 7, scope: !5312)
!5334 = !DILocation(line: 752, column: 22, scope: !5327)
!5335 = !DILocation(line: 752, column: 28, scope: !5327)
!5336 = !DILocation(line: 752, column: 15, scope: !5327)
!5337 = !DILocation(line: 752, column: 5, scope: !5327)
!5338 = !DILocation(line: 753, column: 22, scope: !5312)
!5339 = !DILocation(line: 753, column: 15, scope: !5312)
!5340 = !DILocation(line: 753, column: 52, scope: !5312)
!5341 = !DILocation(line: 753, column: 8, scope: !5312)
!5342 = !DILocation(line: 753, column: 13, scope: !5312)
!5343 = !DILocation(line: 754, column: 15, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5312, file: !3330, line: 754, column: 7)
!5345 = !DILocation(line: 755, column: 7, scope: !5344)
!5346 = !DILocation(line: 755, column: 10, scope: !5344)
!5347 = !DILocation(line: 756, column: 7, scope: !5344)
!5348 = !DILocation(line: 756, column: 10, scope: !5344)
!5349 = !DILocation(line: 756, column: 29, scope: !5344)
!5350 = !DILocation(line: 754, column: 7, scope: !5312)
!5351 = !DILocation(line: 757, column: 22, scope: !5344)
!5352 = !DILocation(line: 757, column: 28, scope: !5344)
!5353 = !DILocation(line: 757, column: 15, scope: !5344)
!5354 = !DILocation(line: 757, column: 5, scope: !5344)
!5355 = !DILocation(line: 758, column: 8, scope: !5312)
!5356 = !DILocation(line: 758, column: 13, scope: !5312)
!5357 = !DILocation(line: 760, column: 8, scope: !5312)
!5358 = !DILocation(line: 760, column: 14, scope: !5312)
!5359 = !DILocation(line: 761, column: 8, scope: !5312)
!5360 = !DILocation(line: 761, column: 16, scope: !5312)
!5361 = !DILocation(line: 762, column: 8, scope: !5312)
!5362 = !DILocation(line: 762, column: 17, scope: !5312)
!5363 = !DILocation(line: 763, column: 1, scope: !5312)
!5364 = distinct !DISubprogram(name: "gimple_def_ops", scope: !583, file: !583, line: 1292, type: !5365, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5367)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{!1768, !4195}
!5367 = !{!5368}
!5368 = !DILocalVariable(name: "g", arg: 1, scope: !5364, file: !583, line: 1292, type: !4195)
!5369 = !DILocation(line: 0, scope: !5364)
!5370 = !DILocation(line: 1294, column: 8, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5364, file: !583, line: 1294, column: 7)
!5372 = !DILocation(line: 1294, column: 7, scope: !5364)
!5373 = !DILocation(line: 1296, column: 26, scope: !5364)
!5374 = !DILocation(line: 1296, column: 3, scope: !5364)
!5375 = !DILocation(line: 1297, column: 1, scope: !5364)
!5376 = distinct !DISubprogram(name: "gimple_use_ops", scope: !583, file: !583, line: 1313, type: !5377, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5379)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!1775, !4195}
!5379 = !{!5380}
!5380 = !DILocalVariable(name: "g", arg: 1, scope: !5376, file: !583, line: 1313, type: !4195)
!5381 = !DILocation(line: 0, scope: !5376)
!5382 = !DILocation(line: 1315, column: 8, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5376, file: !583, line: 1315, column: 7)
!5384 = !DILocation(line: 1315, column: 7, scope: !5376)
!5385 = !DILocation(line: 1317, column: 26, scope: !5376)
!5386 = !DILocation(line: 1317, column: 3, scope: !5376)
!5387 = !DILocation(line: 1318, column: 1, scope: !5376)
!5388 = distinct !DISubprogram(name: "gimple_vuse", scope: !583, file: !583, line: 1365, type: !4218, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5389)
!5389 = !{!5390}
!5390 = !DILocalVariable(name: "g", arg: 1, scope: !5388, file: !583, line: 1365, type: !4195)
!5391 = !DILocation(line: 0, scope: !5388)
!5392 = !DILocation(line: 1367, column: 8, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !583, line: 1367, column: 7)
!5394 = !DILocation(line: 1367, column: 7, scope: !5388)
!5395 = !DILocation(line: 1369, column: 23, scope: !5388)
!5396 = !DILocation(line: 1369, column: 3, scope: !5388)
!5397 = !DILocation(line: 1370, column: 1, scope: !5388)
!5398 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !3330, file: !3330, line: 427, type: !5399, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5404)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!1456, !5401}
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !648, line: 30, baseType: !5402)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !1780)
!5404 = !{!5405}
!5405 = !DILocalVariable(name: "use", arg: 1, scope: !5398, file: !3330, line: 427, type: !5401)
!5406 = !DILocation(line: 0, scope: !5398)
!5407 = !DILocation(line: 429, column: 17, scope: !5398)
!5408 = !DILocation(line: 429, column: 10, scope: !5398)
!5409 = !DILocation(line: 429, column: 3, scope: !5398)
!5410 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !3330, file: !3330, line: 434, type: !5411, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5414)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!1456, !5413}
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !648, line: 27, baseType: !1773)
!5414 = !{!5415}
!5415 = !DILocalVariable(name: "def", arg: 1, scope: !5410, file: !3330, line: 434, type: !5413)
!5416 = !DILocation(line: 0, scope: !5410)
!5417 = !DILocation(line: 436, column: 10, scope: !5410)
!5418 = !DILocation(line: 436, column: 3, scope: !5410)
!5419 = distinct !DISubprogram(name: "gimple_set_visited", scope: !583, file: !583, line: 1217, type: !5208, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5420)
!5420 = !{!5421, !5422}
!5421 = !DILocalVariable(name: "stmt", arg: 1, scope: !5419, file: !583, line: 1217, type: !1739)
!5422 = !DILocalVariable(name: "visited_p", arg: 2, scope: !5419, file: !583, line: 1217, type: !1407)
!5423 = !DILocation(line: 0, scope: !5419)
!5424 = !DILocation(line: 1219, column: 16, scope: !5419)
!5425 = !DILocation(line: 1219, column: 24, scope: !5419)
!5426 = !DILocation(line: 1220, column: 1, scope: !5419)
!5427 = distinct !DISubprogram(name: "visit_assignment", scope: !3, file: !3, line: 1596, type: !5428, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5430)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!654, !1739, !1773}
!5430 = !{!5431, !5432, !5433, !5434, !5435, !5436, !5439}
!5431 = !DILocalVariable(name: "stmt", arg: 1, scope: !5427, file: !3, line: 1596, type: !1739)
!5432 = !DILocalVariable(name: "output_p", arg: 2, scope: !5427, file: !3, line: 1596, type: !1773)
!5433 = !DILocalVariable(name: "val", scope: !5427, file: !3, line: 1598, type: !2747)
!5434 = !DILocalVariable(name: "retval", scope: !5427, file: !3, line: 1599, type: !654)
!5435 = !DILocalVariable(name: "lhs", scope: !5427, file: !3, line: 1601, type: !1456)
!5436 = !DILocalVariable(name: "rhs", scope: !5437, file: !3, line: 1608, type: !1456)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1607, column: 5)
!5438 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 1606, column: 7)
!5439 = !DILocalVariable(name: "nval", scope: !5440, file: !3, line: 1613, type: !2746)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 1611, column: 9)
!5441 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 1610, column: 12)
!5442 = !DILocation(line: 0, scope: !5427)
!5443 = !DILocation(line: 1598, column: 3, scope: !5427)
!5444 = !DILocation(line: 1601, column: 14, scope: !5427)
!5445 = !DILocation(line: 1603, column: 3, scope: !5427)
!5446 = !DILocation(line: 1606, column: 7, scope: !5438)
!5447 = !DILocation(line: 1606, column: 7, scope: !5427)
!5448 = !DILocation(line: 1608, column: 18, scope: !5437)
!5449 = !DILocation(line: 0, scope: !5437)
!5450 = !DILocation(line: 1610, column: 12, scope: !5441)
!5451 = !DILocation(line: 1610, column: 28, scope: !5441)
!5452 = !DILocation(line: 1610, column: 12, scope: !5437)
!5453 = !DILocation(line: 1613, column: 32, scope: !5440)
!5454 = !DILocation(line: 0, scope: !5440)
!5455 = !DILocation(line: 1614, column: 17, scope: !5440)
!5456 = !DILocation(line: 1615, column: 9, scope: !5440)
!5457 = !DILocation(line: 1617, column: 15, scope: !5441)
!5458 = !DILocation(line: 1622, column: 11, scope: !5438)
!5459 = !DILocation(line: 1627, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 1627, column: 7)
!5461 = !DILocation(line: 1627, column: 23, scope: !5460)
!5462 = !DILocation(line: 1627, column: 7, scope: !5427)
!5463 = !DILocation(line: 1631, column: 11, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 1631, column: 11)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 1628, column: 5)
!5466 = !DILocation(line: 1631, column: 11, scope: !5465)
!5467 = !DILocation(line: 1633, column: 14, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1632, column: 2)
!5469 = !DILocation(line: 1634, column: 24, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 1634, column: 8)
!5471 = !DILocation(line: 1638, column: 2, scope: !5468)
!5472 = !DILocation(line: 1642, column: 1, scope: !5427)
!5473 = !DILocation(line: 1641, column: 3, scope: !5427)
!5474 = distinct !DISubprogram(name: "visit_cond_stmt", scope: !3, file: !3, line: 1650, type: !5475, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5477)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!654, !1739, !4865}
!5477 = !{!5478, !5479, !5480, !5481}
!5478 = !DILocalVariable(name: "stmt", arg: 1, scope: !5474, file: !3, line: 1650, type: !1739)
!5479 = !DILocalVariable(name: "taken_edge_p", arg: 2, scope: !5474, file: !3, line: 1650, type: !4865)
!5480 = !DILocalVariable(name: "val", scope: !5474, file: !3, line: 1652, type: !2747)
!5481 = !DILocalVariable(name: "block", scope: !5474, file: !3, line: 1653, type: !2172)
!5482 = !DILocation(line: 0, scope: !5474)
!5483 = !DILocation(line: 1652, column: 3, scope: !5474)
!5484 = !DILocation(line: 1655, column: 11, scope: !5474)
!5485 = !DILocation(line: 1656, column: 9, scope: !5474)
!5486 = !DILocation(line: 1662, column: 23, scope: !5474)
!5487 = !DILocation(line: 1662, column: 19, scope: !5474)
!5488 = !DILocation(line: 1662, column: 31, scope: !5474)
!5489 = !DILocation(line: 1662, column: 17, scope: !5474)
!5490 = !DILocation(line: 1663, column: 7, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1663, column: 7)
!5492 = !DILocation(line: 0, scope: !5491)
!5493 = !DILocation(line: 1667, column: 1, scope: !5474)
!5494 = distinct !DISubprogram(name: "set_lattice_value", scope: !3, file: !3, line: 465, type: !5495, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5497)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!1407, !1456, !2747}
!5497 = !{!5498, !5499, !5500}
!5498 = !DILocalVariable(name: "var", arg: 1, scope: !5494, file: !3, line: 465, type: !1456)
!5499 = !DILocalVariable(name: "new_val", arg: 2, scope: !5494, file: !3, line: 465, type: !2747)
!5500 = !DILocalVariable(name: "old_val", scope: !5494, file: !3, line: 467, type: !2746)
!5501 = !DILocation(line: 0, scope: !5494)
!5502 = !DILocation(line: 467, column: 27, scope: !5494)
!5503 = !DILocation(line: 469, column: 3, scope: !5494)
!5504 = !DILocation(line: 475, column: 3, scope: !5494)
!5505 = !DILocation(line: 480, column: 16, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 480, column: 7)
!5507 = !DILocation(line: 480, column: 39, scope: !5506)
!5508 = !DILocation(line: 480, column: 28, scope: !5506)
!5509 = !DILocation(line: 480, column: 7, scope: !5494)
!5510 = !DILocation(line: 482, column: 11, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 482, column: 11)
!5512 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 481, column: 5)
!5513 = !DILocation(line: 482, column: 21, scope: !5511)
!5514 = !DILocation(line: 482, column: 25, scope: !5511)
!5515 = !DILocation(line: 482, column: 36, scope: !5511)
!5516 = !DILocation(line: 482, column: 11, scope: !5512)
!5517 = !DILocation(line: 484, column: 4, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 483, column: 2)
!5519 = !DILocation(line: 485, column: 13, scope: !5518)
!5520 = !DILocation(line: 485, column: 4, scope: !5518)
!5521 = !DILocation(line: 490, column: 7, scope: !5512)
!5522 = !DILocation(line: 486, column: 2, scope: !5518)
!5523 = !DILocation(line: 488, column: 18, scope: !5512)
!5524 = !DILocation(line: 495, column: 1, scope: !5494)
!5525 = distinct !DISubprogram(name: "evaluate_stmt", scope: !3, file: !3, line: 1400, type: !5526, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!2747, !1739}
!5528 = !{!5529, !5530, !5531, !5532, !5534, !5535, !5539}
!5529 = !DILocalVariable(name: "stmt", arg: 1, scope: !5525, file: !3, line: 1400, type: !1739)
!5530 = !DILocalVariable(name: "val", scope: !5525, file: !3, line: 1402, type: !2747)
!5531 = !DILocalVariable(name: "simplified", scope: !5525, file: !3, line: 1403, type: !1456)
!5532 = !DILocalVariable(name: "likelyvalue", scope: !5525, file: !3, line: 1404, type: !5533)
!5533 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccp_lattice_t", file: !3, line: 221, baseType: !660)
!5534 = !DILocalVariable(name: "is_constant", scope: !5525, file: !3, line: 1405, type: !1407)
!5535 = !DILocalVariable(name: "code", scope: !5536, file: !3, line: 1420, type: !609)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 1419, column: 5)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 1418, column: 12)
!5538 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1414, column: 7)
!5539 = !DILocalVariable(name: "subcode", scope: !5540, file: !3, line: 1423, type: !134)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 1422, column: 9)
!5541 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 1421, column: 11)
!5542 = !DILocation(line: 0, scope: !5525)
!5543 = !DILocation(line: 1404, column: 31, scope: !5525)
!5544 = !DILocation(line: 1407, column: 3, scope: !5525)
!5545 = !DILocation(line: 1414, column: 7, scope: !5525)
!5546 = !DILocation(line: 1415, column: 18, scope: !5538)
!5547 = !DILocation(line: 1415, column: 5, scope: !5538)
!5548 = !DILocation(line: 1420, column: 31, scope: !5536)
!5549 = !DILocation(line: 0, scope: !5536)
!5550 = !DILocation(line: 1421, column: 11, scope: !5536)
!5551 = !DILocation(line: 1423, column: 36, scope: !5540)
!5552 = !DILocation(line: 0, scope: !5540)
!5553 = !DILocation(line: 1427, column: 15, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 1427, column: 15)
!5555 = !DILocation(line: 1427, column: 46, scope: !5554)
!5556 = !DILocation(line: 1427, column: 15, scope: !5540)
!5557 = !DILocation(line: 1428, column: 26, scope: !5554)
!5558 = !DILocation(line: 1428, column: 13, scope: !5554)
!5559 = !DILocation(line: 1431, column: 22, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 1430, column: 16)
!5561 = !DILocation(line: 1431, column: 9, scope: !5560)
!5562 = !DILocation(line: 1434, column: 2, scope: !5560)
!5563 = !DILocation(line: 0, scope: !5538)
!5564 = !DILocation(line: 1437, column: 17, scope: !5525)
!5565 = !DILocation(line: 1437, column: 28, scope: !5525)
!5566 = !DILocation(line: 1437, column: 31, scope: !5525)
!5567 = !DILocation(line: 1439, column: 3, scope: !5525)
!5568 = !DILocation(line: 1441, column: 7, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1441, column: 7)
!5570 = !DILocation(line: 1441, column: 17, scope: !5569)
!5571 = !DILocation(line: 1441, column: 21, scope: !5569)
!5572 = !DILocation(line: 1441, column: 32, scope: !5569)
!5573 = !DILocation(line: 1441, column: 7, scope: !5525)
!5574 = !DILocation(line: 1443, column: 7, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1442, column: 5)
!5576 = !DILocation(line: 1444, column: 7, scope: !5575)
!5577 = !DILocation(line: 1447, column: 13, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1445, column: 2)
!5579 = !DILocation(line: 1447, column: 4, scope: !5578)
!5580 = !DILocation(line: 1448, column: 4, scope: !5578)
!5581 = !DILocation(line: 1450, column: 13, scope: !5578)
!5582 = !DILocation(line: 1450, column: 4, scope: !5578)
!5583 = !DILocation(line: 1451, column: 4, scope: !5578)
!5584 = !DILocation(line: 1453, column: 13, scope: !5578)
!5585 = !DILocation(line: 1453, column: 4, scope: !5578)
!5586 = !DILocation(line: 1454, column: 4, scope: !5578)
!5587 = !DILocation(line: 1457, column: 16, scope: !5575)
!5588 = !DILocation(line: 1457, column: 7, scope: !5575)
!5589 = !DILocation(line: 1458, column: 5, scope: !5575)
!5590 = !DILocation(line: 1460, column: 7, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1460, column: 7)
!5592 = !DILocation(line: 1460, column: 7, scope: !5525)
!5593 = !DILocation(line: 1463, column: 11, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1461, column: 5)
!5595 = !DILocation(line: 1463, column: 23, scope: !5594)
!5596 = !DILocation(line: 1464, column: 11, scope: !5594)
!5597 = !DILocation(line: 1464, column: 17, scope: !5594)
!5598 = !DILocation(line: 1465, column: 5, scope: !5594)
!5599 = !DILocation(line: 1471, column: 23, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1471, column: 11)
!5601 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1467, column: 5)
!5602 = !DILocation(line: 0, scope: !5600)
!5603 = !DILocation(line: 1471, column: 11, scope: !5601)
!5604 = !DILocation(line: 1472, column: 2, scope: !5600)
!5605 = !DILocation(line: 1476, column: 11, scope: !5601)
!5606 = !DILocation(line: 1476, column: 17, scope: !5601)
!5607 = !DILocation(line: 1480, column: 1, scope: !5525)
!5608 = distinct !DISubprogram(name: "likely_value", scope: !3, file: !3, line: 510, type: !5609, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5611)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!5533, !1739}
!5611 = !{!5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5624}
!5612 = !DILocalVariable(name: "stmt", arg: 1, scope: !5608, file: !3, line: 510, type: !1739)
!5613 = !DILocalVariable(name: "has_constant_operand", scope: !5608, file: !3, line: 512, type: !1407)
!5614 = !DILocalVariable(name: "has_undefined_operand", scope: !5608, file: !3, line: 512, type: !1407)
!5615 = !DILocalVariable(name: "all_undefined_operands", scope: !5608, file: !3, line: 512, type: !1407)
!5616 = !DILocalVariable(name: "use", scope: !5608, file: !3, line: 513, type: !1456)
!5617 = !DILocalVariable(name: "iter", scope: !5608, file: !3, line: 514, type: !4769)
!5618 = !DILocalVariable(name: "i", scope: !5608, file: !3, line: 515, type: !7)
!5619 = !DILocalVariable(name: "code", scope: !5608, file: !3, line: 517, type: !609)
!5620 = !DILocalVariable(name: "val", scope: !5621, file: !3, line: 537, type: !2746)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 536, column: 5)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 535, column: 3)
!5623 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 535, column: 3)
!5624 = !DILocalVariable(name: "op", scope: !5625, file: !3, line: 554, type: !1456)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 553, column: 5)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 551, column: 3)
!5627 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 551, column: 3)
!5628 = !DILocation(line: 0, scope: !5608)
!5629 = !DILocation(line: 514, column: 3, scope: !5608)
!5630 = !DILocation(line: 517, column: 27, scope: !5608)
!5631 = !DILocation(line: 521, column: 3, scope: !5608)
!5632 = !DILocation(line: 528, column: 7, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 528, column: 7)
!5634 = !DILocation(line: 528, column: 7, scope: !5608)
!5635 = !DILocation(line: 535, column: 3, scope: !5623)
!5636 = !DILocation(line: 0, scope: !5623)
!5637 = !DILocation(line: 534, column: 26, scope: !5608)
!5638 = !DILocation(line: 535, column: 3, scope: !5622)
!5639 = !DILocation(line: 537, column: 27, scope: !5621)
!5640 = !DILocation(line: 0, scope: !5621)
!5641 = !DILocation(line: 539, column: 16, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 539, column: 11)
!5643 = !DILocation(line: 539, column: 28, scope: !5642)
!5644 = !DILocation(line: 544, column: 28, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 544, column: 11)
!5646 = !DILocation(line: 544, column: 11, scope: !5621)
!5647 = distinct !{!5647, !5635, !5648}
!5648 = !DILocation(line: 546, column: 5, scope: !5623)
!5649 = !DILocation(line: 551, column: 13, scope: !5627)
!5650 = !DILocation(line: 551, column: 46, scope: !5627)
!5651 = !DILocation(line: 551, column: 44, scope: !5627)
!5652 = !DILocation(line: 551, column: 8, scope: !5627)
!5653 = !DILocation(line: 0, scope: !5627)
!5654 = !DILocation(line: 532, column: 24, scope: !5608)
!5655 = !DILocation(line: 552, column: 12, scope: !5626)
!5656 = !DILocation(line: 552, column: 10, scope: !5626)
!5657 = !DILocation(line: 551, column: 3, scope: !5627)
!5658 = !DILocation(line: 554, column: 17, scope: !5625)
!5659 = !DILocation(line: 0, scope: !5625)
!5660 = !DILocation(line: 555, column: 12, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 555, column: 11)
!5662 = !DILocation(line: 555, column: 15, scope: !5661)
!5663 = !DILocation(line: 555, column: 18, scope: !5661)
!5664 = !DILocation(line: 555, column: 33, scope: !5661)
!5665 = !DILocation(line: 555, column: 11, scope: !5625)
!5666 = !DILocation(line: 557, column: 11, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 557, column: 11)
!5668 = !DILocation(line: 557, column: 11, scope: !5625)
!5669 = !DILocation(line: 559, column: 5, scope: !5626)
!5670 = !DILocation(line: 552, column: 35, scope: !5626)
!5671 = !DILocation(line: 551, column: 3, scope: !5626)
!5672 = distinct !{!5672, !5657, !5673}
!5673 = !DILocation(line: 559, column: 5, scope: !5627)
!5674 = !DILocation(line: 561, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 561, column: 7)
!5676 = !DILocation(line: 567, column: 7, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 567, column: 7)
!5678 = !DILocation(line: 567, column: 32, scope: !5677)
!5679 = !DILocation(line: 567, column: 29, scope: !5677)
!5680 = !DILocation(line: 569, column: 17, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 569, column: 12)
!5682 = !DILocation(line: 569, column: 34, scope: !5681)
!5683 = !DILocation(line: 571, column: 15, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 570, column: 5)
!5685 = !DILocation(line: 571, column: 7, scope: !5684)
!5686 = !DILocation(line: 591, column: 7, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 591, column: 7)
!5688 = !DILocation(line: 591, column: 7, scope: !5608)
!5689 = !DILocation(line: 598, column: 7, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 597, column: 7)
!5691 = !DILocation(line: 598, column: 10, scope: !5690)
!5692 = !DILocation(line: 597, column: 7, scope: !5608)
!5693 = !DILocation(line: 602, column: 1, scope: !5608)
!5694 = distinct !DISubprogram(name: "ccp_fold", scope: !3, file: !3, line: 928, type: !5695, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5697)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!1456, !1739}
!5697 = !{!5698, !5699, !5700, !5703, !5706, !5707, !5711, !5714, !5717, !5718, !5721, !5722, !5723, !5728, !5731, !5733, !5734, !5737, !5740, !5742, !5743, !5746, !5749, !5752, !5754, !5755, !5758, !5759, !5760, !5761, !5763, !5764, !5765, !5768, !5771}
!5698 = !DILocalVariable(name: "stmt", arg: 1, scope: !5694, file: !3, line: 928, type: !1739)
!5699 = !DILocalVariable(name: "loc", scope: !5694, file: !3, line: 930, type: !1540)
!5700 = !DILocalVariable(name: "subcode", scope: !5701, file: !3, line: 935, type: !134)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 934, column: 7)
!5702 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 932, column: 5)
!5703 = !DILocalVariable(name: "rhs", scope: !5704, file: !3, line: 941, type: !1456)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 940, column: 13)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 938, column: 11)
!5706 = !DILocalVariable(name: "kind", scope: !5704, file: !3, line: 942, type: !666)
!5707 = !DILocalVariable(name: "base", scope: !5708, file: !3, line: 954, type: !1773)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 953, column: 3)
!5709 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 952, column: 17)
!5710 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 944, column: 19)
!5711 = !DILocalVariable(name: "val", scope: !5712, file: !3, line: 961, type: !2746)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 960, column: 7)
!5713 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 958, column: 9)
!5714 = !DILocalVariable(name: "ret", scope: !5715, file: !3, line: 970, type: !1456)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 966, column: 4)
!5716 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 962, column: 13)
!5717 = !DILocalVariable(name: "save", scope: !5715, file: !3, line: 970, type: !1456)
!5718 = !DILocalVariable(name: "i", scope: !5719, file: !3, line: 984, type: !7)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 983, column: 3)
!5720 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 979, column: 17)
!5721 = !DILocalVariable(name: "val", scope: !5719, file: !3, line: 985, type: !1456)
!5722 = !DILocalVariable(name: "list", scope: !5719, file: !3, line: 985, type: !1456)
!5723 = !DILocalVariable(name: "val", scope: !5724, file: !3, line: 1011, type: !2746)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1010, column: 7)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1006, column: 9)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 1005, column: 3)
!5727 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1004, column: 19)
!5728 = !DILocalVariable(name: "val", scope: !5729, file: !3, line: 1020, type: !2746)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 1019, column: 7)
!5730 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1017, column: 14)
!5731 = !DILocalVariable(name: "lhs", scope: !5732, file: !3, line: 1039, type: !1456)
!5732 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1035, column: 13)
!5733 = !DILocalVariable(name: "op0", scope: !5732, file: !3, line: 1040, type: !1456)
!5734 = !DILocalVariable(name: "val", scope: !5735, file: !3, line: 1045, type: !2746)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1044, column: 17)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1043, column: 19)
!5737 = !DILocalVariable(name: "tem", scope: !5738, file: !3, line: 1065, type: !1456)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 1064, column: 3)
!5739 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1055, column: 12)
!5740 = !DILocalVariable(name: "op0", scope: !5741, file: !3, line: 1085, type: !1456)
!5741 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1083, column: 13)
!5742 = !DILocalVariable(name: "op1", scope: !5741, file: !3, line: 1086, type: !1456)
!5743 = !DILocalVariable(name: "val", scope: !5744, file: !3, line: 1091, type: !2746)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1090, column: 17)
!5745 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1089, column: 19)
!5746 = !DILocalVariable(name: "val", scope: !5747, file: !3, line: 1098, type: !2746)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1097, column: 17)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1096, column: 19)
!5749 = !DILocalVariable(name: "tem", scope: !5750, file: !3, line: 1108, type: !1456)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 1107, column: 3)
!5751 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1104, column: 12)
!5752 = !DILocalVariable(name: "fn", scope: !5753, file: !3, line: 1126, type: !1456)
!5753 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1125, column: 7)
!5754 = !DILocalVariable(name: "val", scope: !5753, file: !3, line: 1127, type: !2746)
!5755 = !DILocalVariable(name: "args", scope: !5756, file: !3, line: 1139, type: !1773)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1138, column: 4)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1135, column: 6)
!5758 = !DILocalVariable(name: "call", scope: !5756, file: !3, line: 1140, type: !1456)
!5759 = !DILocalVariable(name: "retval", scope: !5756, file: !3, line: 1140, type: !1456)
!5760 = !DILocalVariable(name: "i", scope: !5756, file: !3, line: 1141, type: !7)
!5761 = !DILocalVariable(name: "op0", scope: !5762, file: !3, line: 1167, type: !1456)
!5762 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1165, column: 7)
!5763 = !DILocalVariable(name: "op1", scope: !5762, file: !3, line: 1168, type: !1456)
!5764 = !DILocalVariable(name: "code", scope: !5762, file: !3, line: 1169, type: !134)
!5765 = !DILocalVariable(name: "val", scope: !5766, file: !3, line: 1174, type: !2746)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1173, column: 11)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1172, column: 13)
!5768 = !DILocalVariable(name: "val", scope: !5769, file: !3, line: 1181, type: !2746)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1180, column: 11)
!5770 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1179, column: 13)
!5771 = !DILocalVariable(name: "rhs", scope: !5772, file: !3, line: 1191, type: !1456)
!5772 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1190, column: 7)
!5773 = !DILocation(line: 0, scope: !5694)
!5774 = !DILocation(line: 930, column: 20, scope: !5694)
!5775 = !DILocation(line: 931, column: 11, scope: !5694)
!5776 = !DILocation(line: 931, column: 3, scope: !5694)
!5777 = !DILocation(line: 935, column: 34, scope: !5701)
!5778 = !DILocation(line: 0, scope: !5701)
!5779 = !DILocation(line: 937, column: 17, scope: !5701)
!5780 = !DILocation(line: 937, column: 9, scope: !5701)
!5781 = !DILocation(line: 941, column: 26, scope: !5704)
!5782 = !DILocation(line: 0, scope: !5704)
!5783 = !DILocation(line: 942, column: 43, scope: !5704)
!5784 = !DILocation(line: 944, column: 19, scope: !5710)
!5785 = !DILocation(line: 944, column: 35, scope: !5710)
!5786 = !DILocation(line: 944, column: 19, scope: !5704)
!5787 = !DILocation(line: 948, column: 26, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 945, column: 17)
!5789 = !DILocation(line: 948, column: 43, scope: !5788)
!5790 = !DILocation(line: 948, column: 19, scope: !5788)
!5791 = !DILocation(line: 952, column: 33, scope: !5709)
!5792 = !DILocation(line: 952, column: 17, scope: !5710)
!5793 = !DILocation(line: 0, scope: !5708)
!5794 = !DILocation(line: 956, column: 5, scope: !5708)
!5795 = !DILocation(line: 956, column: 33, scope: !5708)
!5796 = !DILocation(line: 956, column: 12, scope: !5708)
!5797 = distinct !{!5797, !5794, !5798}
!5798 = !DILocation(line: 957, column: 15, scope: !5708)
!5799 = !DILocation(line: 958, column: 9, scope: !5713)
!5800 = !DILocation(line: 958, column: 27, scope: !5713)
!5801 = !DILocation(line: 959, column: 9, scope: !5713)
!5802 = !DILocation(line: 959, column: 12, scope: !5713)
!5803 = !DILocation(line: 959, column: 48, scope: !5713)
!5804 = !DILocation(line: 958, column: 9, scope: !5708)
!5805 = !DILocation(line: 961, column: 29, scope: !5712)
!5806 = !DILocation(line: 0, scope: !5712)
!5807 = !DILocation(line: 962, column: 18, scope: !5716)
!5808 = !DILocation(line: 962, column: 30, scope: !5716)
!5809 = !DILocation(line: 963, column: 6, scope: !5716)
!5810 = !DILocation(line: 963, column: 9, scope: !5716)
!5811 = !DILocation(line: 963, column: 32, scope: !5716)
!5812 = !DILocation(line: 964, column: 6, scope: !5716)
!5813 = !DILocation(line: 965, column: 24, scope: !5716)
!5814 = !DILocation(line: 964, column: 9, scope: !5716)
!5815 = !DILocation(line: 962, column: 13, scope: !5712)
!5816 = !DILocation(line: 970, column: 23, scope: !5715)
!5817 = !DILocation(line: 971, column: 14, scope: !5715)
!5818 = !DILocation(line: 971, column: 12, scope: !5715)
!5819 = !DILocation(line: 972, column: 12, scope: !5715)
!5820 = !DILocation(line: 0, scope: !5715)
!5821 = !DILocation(line: 973, column: 6, scope: !5715)
!5822 = !DILocation(line: 974, column: 12, scope: !5715)
!5823 = !DILocation(line: 978, column: 3, scope: !5709)
!5824 = !DILocation(line: 975, column: 6, scope: !5715)
!5825 = !DILocation(line: 979, column: 33, scope: !5720)
!5826 = !DILocation(line: 980, column: 10, scope: !5720)
!5827 = !DILocation(line: 980, column: 13, scope: !5720)
!5828 = !DILocation(line: 980, column: 41, scope: !5720)
!5829 = !DILocation(line: 981, column: 10, scope: !5720)
!5830 = !DILocation(line: 981, column: 14, scope: !5720)
!5831 = !DILocation(line: 982, column: 10, scope: !5720)
!5832 = !DILocation(line: 982, column: 7, scope: !5720)
!5833 = !DILocation(line: 979, column: 17, scope: !5709)
!5834 = !DILocation(line: 988, column: 5, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 988, column: 5)
!5836 = !DILocation(line: 0, scope: !5719)
!5837 = !DILocation(line: 0, scope: !5835)
!5838 = !DILocation(line: 988, column: 5, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 988, column: 5)
!5840 = !DILocation(line: 990, column: 13, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 990, column: 13)
!5842 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 989, column: 7)
!5843 = !DILocation(line: 990, column: 29, scope: !5841)
!5844 = !DILocation(line: 991, column: 6, scope: !5841)
!5845 = !DILocation(line: 991, column: 9, scope: !5841)
!5846 = !DILocation(line: 991, column: 26, scope: !5841)
!5847 = !DILocation(line: 991, column: 38, scope: !5841)
!5848 = !DILocation(line: 990, column: 13, scope: !5842)
!5849 = !DILocation(line: 992, column: 10, scope: !5841)
!5850 = !DILocation(line: 992, column: 27, scope: !5841)
!5851 = !DILocation(line: 992, column: 4, scope: !5841)
!5852 = !DILocation(line: 993, column: 13, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 993, column: 13)
!5854 = !DILocation(line: 993, column: 29, scope: !5853)
!5855 = !DILocation(line: 994, column: 6, scope: !5853)
!5856 = !DILocation(line: 994, column: 25, scope: !5853)
!5857 = !DILocation(line: 995, column: 6, scope: !5853)
!5858 = !DILocation(line: 995, column: 25, scope: !5853)
!5859 = !DILocation(line: 993, column: 13, scope: !5842)
!5860 = !DILocation(line: 996, column: 11, scope: !5853)
!5861 = distinct !{!5861, !5834, !5862}
!5862 = !DILocation(line: 999, column: 7, scope: !5835)
!5863 = !DILocation(line: 1001, column: 26, scope: !5719)
!5864 = !DILocation(line: 1001, column: 43, scope: !5719)
!5865 = !DILocation(line: 1001, column: 12, scope: !5719)
!5866 = !DILocation(line: 1001, column: 5, scope: !5719)
!5867 = !DILocation(line: 1004, column: 19, scope: !5704)
!5868 = !DILocation(line: 1006, column: 10, scope: !5725)
!5869 = !DILocation(line: 1006, column: 26, scope: !5725)
!5870 = !DILocation(line: 1007, column: 10, scope: !5725)
!5871 = !DILocation(line: 1007, column: 29, scope: !5725)
!5872 = !DILocation(line: 1008, column: 10, scope: !5725)
!5873 = !DILocation(line: 1008, column: 29, scope: !5725)
!5874 = !DILocation(line: 1009, column: 9, scope: !5725)
!5875 = !DILocation(line: 1009, column: 12, scope: !5725)
!5876 = !DILocation(line: 1009, column: 46, scope: !5725)
!5877 = !DILocation(line: 1006, column: 9, scope: !5726)
!5878 = !DILocation(line: 1011, column: 29, scope: !5724)
!5879 = !DILocation(line: 0, scope: !5724)
!5880 = !DILocation(line: 1012, column: 18, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1012, column: 13)
!5882 = !DILocation(line: 1012, column: 30, scope: !5881)
!5883 = !DILocation(line: 1012, column: 13, scope: !5724)
!5884 = !DILocation(line: 1013, column: 27, scope: !5881)
!5885 = !DILocation(line: 1014, column: 9, scope: !5881)
!5886 = !DILocation(line: 1015, column: 9, scope: !5881)
!5887 = !DILocation(line: 1015, column: 31, scope: !5881)
!5888 = !DILocation(line: 1013, column: 11, scope: !5881)
!5889 = !DILocation(line: 1013, column: 4, scope: !5881)
!5890 = !DILocation(line: 1017, column: 30, scope: !5730)
!5891 = !DILocation(line: 1018, column: 7, scope: !5730)
!5892 = !DILocation(line: 1018, column: 10, scope: !5730)
!5893 = !DILocation(line: 1018, column: 44, scope: !5730)
!5894 = !DILocation(line: 1017, column: 14, scope: !5725)
!5895 = !DILocation(line: 1020, column: 29, scope: !5729)
!5896 = !DILocation(line: 0, scope: !5729)
!5897 = !DILocation(line: 1021, column: 18, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1021, column: 13)
!5899 = !DILocation(line: 1021, column: 30, scope: !5898)
!5900 = !DILocation(line: 1022, column: 6, scope: !5898)
!5901 = !DILocation(line: 1022, column: 9, scope: !5898)
!5902 = !DILocation(line: 1022, column: 32, scope: !5898)
!5903 = !DILocation(line: 1023, column: 6, scope: !5898)
!5904 = !DILocation(line: 1023, column: 36, scope: !5898)
!5905 = !DILocation(line: 1024, column: 8, scope: !5898)
!5906 = !DILocation(line: 1023, column: 9, scope: !5898)
!5907 = !DILocation(line: 1021, column: 13, scope: !5729)
!5908 = !DILocation(line: 1025, column: 10, scope: !5898)
!5909 = !DILocation(line: 1025, column: 4, scope: !5898)
!5910 = !DILocation(line: 1027, column: 12, scope: !5726)
!5911 = !DILocation(line: 1027, column: 5, scope: !5726)
!5912 = !DILocation(line: 1030, column: 24, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 1029, column: 24)
!5914 = !DILocation(line: 1030, column: 17, scope: !5913)
!5915 = !DILocation(line: 1039, column: 26, scope: !5732)
!5916 = !DILocation(line: 0, scope: !5732)
!5917 = !DILocation(line: 1040, column: 26, scope: !5732)
!5918 = !DILocation(line: 1043, column: 19, scope: !5736)
!5919 = !DILocation(line: 1043, column: 35, scope: !5736)
!5920 = !DILocation(line: 1043, column: 19, scope: !5732)
!5921 = !DILocation(line: 1045, column: 39, scope: !5735)
!5922 = !DILocation(line: 0, scope: !5735)
!5923 = !DILocation(line: 1046, column: 28, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1046, column: 23)
!5925 = !DILocation(line: 1046, column: 40, scope: !5924)
!5926 = !DILocation(line: 1046, column: 23, scope: !5735)
!5927 = !DILocation(line: 1047, column: 27, scope: !5924)
!5928 = !DILocation(line: 1047, column: 44, scope: !5924)
!5929 = !DILocation(line: 1047, column: 21, scope: !5924)
!5930 = !DILocation(line: 1055, column: 12, scope: !5739)
!5931 = !DILocation(line: 1056, column: 8, scope: !5739)
!5932 = !DILocation(line: 1057, column: 5, scope: !5739)
!5933 = !DILocation(line: 1057, column: 8, scope: !5739)
!5934 = !DILocation(line: 1062, column: 5, scope: !5739)
!5935 = !DILocation(line: 1062, column: 9, scope: !5739)
!5936 = !DILocation(line: 1063, column: 12, scope: !5739)
!5937 = !DILocation(line: 1063, column: 9, scope: !5739)
!5938 = !DILocation(line: 1055, column: 12, scope: !5732)
!5939 = !DILocation(line: 1067, column: 10, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 1067, column: 9)
!5941 = !DILocation(line: 1069, column: 9, scope: !5940)
!5942 = !DILocation(line: 1071, column: 13, scope: !5940)
!5943 = !DILocation(line: 1071, column: 32, scope: !5940)
!5944 = !DILocation(line: 1069, column: 20, scope: !5940)
!5945 = !DILocation(line: 0, scope: !5738)
!5946 = !DILocation(line: 1072, column: 6, scope: !5940)
!5947 = !DILocation(line: 1067, column: 9, scope: !5738)
!5948 = !DILocation(line: 1074, column: 5, scope: !5738)
!5949 = !DILocation(line: 1079, column: 7, scope: !5732)
!5950 = !DILocation(line: 1078, column: 3, scope: !5732)
!5951 = !DILocation(line: 1077, column: 15, scope: !5732)
!5952 = !DILocation(line: 1085, column: 26, scope: !5741)
!5953 = !DILocation(line: 0, scope: !5741)
!5954 = !DILocation(line: 1086, column: 26, scope: !5741)
!5955 = !DILocation(line: 1089, column: 19, scope: !5745)
!5956 = !DILocation(line: 1089, column: 35, scope: !5745)
!5957 = !DILocation(line: 1089, column: 19, scope: !5741)
!5958 = !DILocation(line: 1091, column: 39, scope: !5744)
!5959 = !DILocation(line: 0, scope: !5744)
!5960 = !DILocation(line: 1092, column: 28, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1092, column: 23)
!5962 = !DILocation(line: 1092, column: 40, scope: !5961)
!5963 = !DILocation(line: 1092, column: 23, scope: !5744)
!5964 = !DILocation(line: 1093, column: 32, scope: !5961)
!5965 = !DILocation(line: 1093, column: 21, scope: !5961)
!5966 = !DILocation(line: 1096, column: 19, scope: !5748)
!5967 = !DILocation(line: 1096, column: 35, scope: !5748)
!5968 = !DILocation(line: 1096, column: 19, scope: !5741)
!5969 = !DILocation(line: 1098, column: 39, scope: !5747)
!5970 = !DILocation(line: 0, scope: !5747)
!5971 = !DILocation(line: 1099, column: 28, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1099, column: 23)
!5973 = !DILocation(line: 1099, column: 40, scope: !5972)
!5974 = !DILocation(line: 1099, column: 23, scope: !5747)
!5975 = !DILocation(line: 1100, column: 32, scope: !5972)
!5976 = !DILocation(line: 1100, column: 21, scope: !5972)
!5977 = !DILocation(line: 1104, column: 12, scope: !5751)
!5978 = !DILocation(line: 1104, column: 42, scope: !5751)
!5979 = !DILocation(line: 1105, column: 5, scope: !5751)
!5980 = !DILocation(line: 1105, column: 8, scope: !5751)
!5981 = !DILocation(line: 1105, column: 24, scope: !5751)
!5982 = !DILocation(line: 1106, column: 5, scope: !5751)
!5983 = !DILocation(line: 1106, column: 8, scope: !5751)
!5984 = !DILocation(line: 1106, column: 24, scope: !5751)
!5985 = !DILocation(line: 1104, column: 12, scope: !5741)
!5986 = !DILocation(line: 1109, column: 23, scope: !5750)
!5987 = !DILocation(line: 1108, column: 16, scope: !5750)
!5988 = !DILocation(line: 0, scope: !5750)
!5989 = !DILocation(line: 1110, column: 13, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1110, column: 9)
!5991 = !DILocation(line: 0, scope: !5751)
!5992 = !DILocation(line: 1115, column: 7, scope: !5741)
!5993 = !DILocation(line: 1114, column: 22, scope: !5741)
!5994 = !DILocation(line: 1114, column: 15, scope: !5741)
!5995 = !DILocation(line: 1119, column: 13, scope: !5705)
!5996 = !DILocation(line: 1121, column: 7, scope: !5702)
!5997 = !DILocation(line: 1126, column: 12, scope: !5753)
!5998 = !DILocation(line: 0, scope: !5753)
!5999 = !DILocation(line: 1129, column: 6, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1129, column: 6)
!6001 = !DILocation(line: 1129, column: 21, scope: !6000)
!6002 = !DILocation(line: 1129, column: 6, scope: !5753)
!6003 = !DILocation(line: 1131, column: 12, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1130, column: 4)
!6005 = !DILocation(line: 1132, column: 15, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 1132, column: 10)
!6007 = !DILocation(line: 1132, column: 27, scope: !6006)
!6008 = !DILocation(line: 1132, column: 10, scope: !6004)
!6009 = !DILocation(line: 1133, column: 18, scope: !6006)
!6010 = !DILocation(line: 1133, column: 8, scope: !6006)
!6011 = !DILocation(line: 1135, column: 6, scope: !5757)
!6012 = !DILocation(line: 1135, column: 21, scope: !5757)
!6013 = !DILocation(line: 1136, column: 6, scope: !5757)
!6014 = !DILocation(line: 1136, column: 9, scope: !5757)
!6015 = !DILocation(line: 1136, column: 42, scope: !5757)
!6016 = !DILocation(line: 1137, column: 6, scope: !5757)
!6017 = !DILocation(line: 1137, column: 9, scope: !5757)
!6018 = !DILocation(line: 1135, column: 6, scope: !5753)
!6019 = !DILocation(line: 1139, column: 19, scope: !5756)
!6020 = !DILocation(line: 0, scope: !5756)
!6021 = !DILocation(line: 1142, column: 11, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1142, column: 6)
!6023 = !DILocation(line: 0, scope: !6022)
!6024 = !DILocation(line: 1142, column: 22, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1142, column: 6)
!6026 = !DILocation(line: 1142, column: 20, scope: !6025)
!6027 = !DILocation(line: 1142, column: 6, scope: !6022)
!6028 = !DILocation(line: 1144, column: 13, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1143, column: 8)
!6030 = !DILocation(line: 1144, column: 3, scope: !6029)
!6031 = !DILocation(line: 1144, column: 11, scope: !6029)
!6032 = !DILocation(line: 1145, column: 7, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 1145, column: 7)
!6034 = !DILocation(line: 1145, column: 27, scope: !6033)
!6035 = !DILocation(line: 1145, column: 7, scope: !6029)
!6036 = !DILocation(line: 1147, column: 13, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1146, column: 5)
!6038 = !DILocation(line: 1148, column: 16, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1148, column: 11)
!6040 = !DILocation(line: 1148, column: 28, scope: !6039)
!6041 = !DILocation(line: 1148, column: 11, scope: !6037)
!6042 = !DILocation(line: 1149, column: 24, scope: !6039)
!6043 = !DILocation(line: 1149, column: 17, scope: !6039)
!6044 = !DILocation(line: 1149, column: 9, scope: !6039)
!6045 = !DILocation(line: 1142, column: 51, scope: !6025)
!6046 = !DILocation(line: 1142, column: 6, scope: !6025)
!6047 = distinct !{!6047, !6027, !6048}
!6048 = !DILocation(line: 1151, column: 8, scope: !6022)
!6049 = !DILocation(line: 1153, column: 7, scope: !5756)
!6050 = !DILocation(line: 1154, column: 11, scope: !5756)
!6051 = !DILocation(line: 1152, column: 13, scope: !5756)
!6052 = !DILocation(line: 1155, column: 31, scope: !5756)
!6053 = !DILocation(line: 1155, column: 15, scope: !5756)
!6054 = !DILocation(line: 1156, column: 10, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1156, column: 10)
!6056 = !DILocation(line: 1156, column: 10, scope: !5756)
!6057 = !DILocation(line: 1158, column: 8, scope: !6055)
!6058 = !DILocation(line: 1167, column: 20, scope: !5762)
!6059 = !DILocation(line: 0, scope: !5762)
!6060 = !DILocation(line: 1168, column: 20, scope: !5762)
!6061 = !DILocation(line: 1169, column: 31, scope: !5762)
!6062 = !DILocation(line: 1172, column: 13, scope: !5767)
!6063 = !DILocation(line: 1172, column: 29, scope: !5767)
!6064 = !DILocation(line: 1172, column: 13, scope: !5762)
!6065 = !DILocation(line: 1174, column: 33, scope: !5766)
!6066 = !DILocation(line: 0, scope: !5766)
!6067 = !DILocation(line: 1175, column: 22, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 1175, column: 17)
!6069 = !DILocation(line: 1175, column: 34, scope: !6068)
!6070 = !DILocation(line: 1175, column: 17, scope: !5766)
!6071 = !DILocation(line: 1176, column: 26, scope: !6068)
!6072 = !DILocation(line: 1176, column: 15, scope: !6068)
!6073 = !DILocation(line: 1179, column: 13, scope: !5770)
!6074 = !DILocation(line: 1179, column: 29, scope: !5770)
!6075 = !DILocation(line: 1179, column: 13, scope: !5762)
!6076 = !DILocation(line: 1181, column: 33, scope: !5769)
!6077 = !DILocation(line: 0, scope: !5769)
!6078 = !DILocation(line: 1182, column: 22, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 1182, column: 17)
!6080 = !DILocation(line: 1182, column: 34, scope: !6079)
!6081 = !DILocation(line: 1182, column: 17, scope: !5769)
!6082 = !DILocation(line: 1183, column: 26, scope: !6079)
!6083 = !DILocation(line: 1183, column: 15, scope: !6079)
!6084 = !DILocation(line: 1186, column: 44, scope: !5762)
!6085 = !DILocation(line: 1186, column: 16, scope: !5762)
!6086 = !DILocation(line: 1191, column: 20, scope: !5772)
!6087 = !DILocation(line: 0, scope: !5772)
!6088 = !DILocation(line: 1193, column: 13, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1193, column: 13)
!6090 = !DILocation(line: 1193, column: 29, scope: !6089)
!6091 = !DILocation(line: 1193, column: 13, scope: !5772)
!6092 = !DILocation(line: 1197, column: 20, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1194, column: 11)
!6094 = !DILocation(line: 1197, column: 37, scope: !6093)
!6095 = !DILocation(line: 1197, column: 13, scope: !6093)
!6096 = !DILocation(line: 1204, column: 7, scope: !5702)
!6097 = !DILocation(line: 1205, column: 5, scope: !5702)
!6098 = !DILocation(line: 1207, column: 5, scope: !5694)
!6099 = !DILocation(line: 1209, column: 1, scope: !5694)
!6100 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !583, file: !583, line: 1686, type: !6101, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6103)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!679, !134}
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "code", arg: 1, scope: !6100, file: !583, line: 1686, type: !134)
!6105 = !DILocation(line: 0, scope: !6100)
!6106 = !DILocation(line: 1688, column: 34, scope: !6100)
!6107 = !DILocation(line: 1688, column: 10, scope: !6100)
!6108 = !DILocation(line: 1688, column: 3, scope: !6100)
!6109 = distinct !DISubprogram(name: "gimple_switch_index", scope: !583, file: !583, line: 3180, type: !4218, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6110)
!6110 = !{!6111}
!6111 = !DILocalVariable(name: "gs", arg: 1, scope: !6109, file: !583, line: 3180, type: !4195)
!6112 = !DILocation(line: 0, scope: !6109)
!6113 = !DILocation(line: 3183, column: 10, scope: !6109)
!6114 = !DILocation(line: 3183, column: 3, scope: !6109)
!6115 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !583, file: !583, line: 2210, type: !4402, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6116)
!6116 = !{!6117}
!6117 = !DILocalVariable(name: "stmt", arg: 1, scope: !6115, file: !583, line: 2210, type: !1739)
!6118 = !DILocation(line: 0, scope: !6115)
!6119 = !DILocation(line: 2212, column: 11, scope: !6115)
!6120 = !DILocation(line: 2213, column: 4, scope: !6115)
!6121 = !DILocation(line: 2213, column: 8, scope: !6115)
!6122 = !DILocation(line: 2214, column: 8, scope: !6115)
!6123 = !DILocation(line: 2214, column: 11, scope: !6115)
!6124 = !DILocation(line: 2214, column: 34, scope: !6115)
!6125 = !DILocation(line: 2212, column: 3, scope: !6115)
!6126 = distinct !DISubprogram(name: "gimple_num_ops", scope: !583, file: !583, line: 1596, type: !6127, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!7, !4195}
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "gs", arg: 1, scope: !6126, file: !583, line: 1596, type: !4195)
!6131 = !DILocation(line: 0, scope: !6126)
!6132 = !DILocation(line: 1598, column: 21, scope: !6126)
!6133 = !DILocation(line: 1598, column: 3, scope: !6126)
!6134 = distinct !DISubprogram(name: "gimple_references_memory_p", scope: !583, file: !583, line: 1499, type: !4402, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6135)
!6135 = !{!6136}
!6136 = !DILocalVariable(name: "stmt", arg: 1, scope: !6134, file: !583, line: 1499, type: !1739)
!6137 = !DILocation(line: 0, scope: !6134)
!6138 = !DILocation(line: 1501, column: 10, scope: !6134)
!6139 = !DILocation(line: 1501, column: 36, scope: !6134)
!6140 = !DILocation(line: 1501, column: 39, scope: !6134)
!6141 = !DILocation(line: 1501, column: 3, scope: !6134)
!6142 = distinct !DISubprogram(name: "gimple_location", scope: !583, file: !583, line: 1139, type: !6143, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6145)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!1540, !4195}
!6145 = !{!6146}
!6146 = !DILocalVariable(name: "g", arg: 1, scope: !6142, file: !583, line: 1139, type: !4195)
!6147 = !DILocation(line: 0, scope: !6142)
!6148 = !DILocation(line: 1141, column: 20, scope: !6142)
!6149 = !DILocation(line: 1141, column: 3, scope: !6142)
!6150 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !583, file: !583, line: 1694, type: !4218, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6151)
!6151 = !{!6152}
!6152 = !DILocalVariable(name: "gs", arg: 1, scope: !6150, file: !583, line: 1694, type: !4195)
!6153 = !DILocation(line: 0, scope: !6150)
!6154 = !DILocation(line: 1697, column: 10, scope: !6150)
!6155 = !DILocation(line: 1697, column: 3, scope: !6150)
!6156 = distinct !DISubprogram(name: "gimple_expr_type", scope: !583, file: !583, line: 4366, type: !4218, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6157)
!6157 = !{!6158, !6159, !6160}
!6158 = !DILocalVariable(name: "stmt", arg: 1, scope: !6156, file: !583, line: 4366, type: !4195)
!6159 = !DILocalVariable(name: "code", scope: !6156, file: !583, line: 4368, type: !609)
!6160 = !DILocalVariable(name: "type", scope: !6161, file: !583, line: 4372, type: !1456)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !583, line: 4371, column: 5)
!6162 = distinct !DILexicalBlock(scope: !6156, file: !583, line: 4370, column: 7)
!6163 = !DILocation(line: 0, scope: !6156)
!6164 = !DILocation(line: 4368, column: 27, scope: !6156)
!6165 = !DILocation(line: 4370, column: 29, scope: !6162)
!6166 = !DILocation(line: 4378, column: 9, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6161, file: !583, line: 4377, column: 11)
!6168 = !DILocation(line: 0, scope: !6161)
!6169 = !DILocation(line: 4378, column: 2, scope: !6167)
!6170 = !DILocation(line: 4380, column: 10, scope: !6167)
!6171 = !DILocation(line: 4380, column: 2, scope: !6167)
!6172 = !DILocation(line: 4383, column: 13, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6167, file: !583, line: 4381, column: 4)
!6174 = !DILocation(line: 4384, column: 6, scope: !6173)
!6175 = !DILocation(line: 4388, column: 13, scope: !6173)
!6176 = !DILocation(line: 4389, column: 6, scope: !6173)
!6177 = !DILocation(line: 4394, column: 12, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6162, file: !583, line: 4393, column: 12)
!6179 = !DILocation(line: 4394, column: 5, scope: !6178)
!6180 = !DILocation(line: 4396, column: 12, scope: !6178)
!6181 = !DILocation(line: 4396, column: 5, scope: !6178)
!6182 = !DILocation(line: 0, scope: !6162)
!6183 = !DILocation(line: 4397, column: 1, scope: !6156)
!6184 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !583, file: !583, line: 2013, type: !6127, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6185)
!6185 = !{!6186, !6187}
!6186 = !DILocalVariable(name: "gs", arg: 1, scope: !6184, file: !583, line: 2013, type: !4195)
!6187 = !DILocalVariable(name: "num_ops", scope: !6184, file: !583, line: 2015, type: !7)
!6188 = !DILocation(line: 0, scope: !6184)
!6189 = !DILocation(line: 2017, column: 13, scope: !6184)
!6190 = !DILocation(line: 2018, column: 18, scope: !6184)
!6191 = !DILocation(line: 2018, column: 3, scope: !6184)
!6192 = distinct !DISubprogram(name: "gimple_call_arg", scope: !583, file: !583, line: 2025, type: !4696, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6193)
!6193 = !{!6194, !6195}
!6194 = !DILocalVariable(name: "gs", arg: 1, scope: !6192, file: !583, line: 2025, type: !4195)
!6195 = !DILocalVariable(name: "index", arg: 2, scope: !6192, file: !583, line: 2025, type: !7)
!6196 = !DILocation(line: 0, scope: !6192)
!6197 = !DILocation(line: 2028, column: 31, scope: !6192)
!6198 = !DILocation(line: 2028, column: 10, scope: !6192)
!6199 = !DILocation(line: 2028, column: 3, scope: !6192)
!6200 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !583, file: !583, line: 1966, type: !4218, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6201)
!6201 = !{!6202, !6203, !6204}
!6202 = !DILocalVariable(name: "gs", arg: 1, scope: !6200, file: !583, line: 1966, type: !4195)
!6203 = !DILocalVariable(name: "fn", scope: !6200, file: !583, line: 1968, type: !1456)
!6204 = !DILocalVariable(name: "type", scope: !6200, file: !583, line: 1969, type: !1456)
!6205 = !DILocation(line: 0, scope: !6200)
!6206 = !DILocation(line: 1968, column: 13, scope: !6200)
!6207 = !DILocation(line: 1969, column: 15, scope: !6200)
!6208 = !DILocation(line: 1972, column: 10, scope: !6200)
!6209 = !DILocation(line: 1976, column: 10, scope: !6200)
!6210 = !DILocation(line: 1976, column: 3, scope: !6200)
!6211 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !583, file: !583, line: 2241, type: !4218, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6212)
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "gs", arg: 1, scope: !6211, file: !583, line: 2241, type: !4195)
!6214 = !DILocation(line: 0, scope: !6211)
!6215 = !DILocation(line: 2244, column: 10, scope: !6211)
!6216 = !DILocation(line: 2244, column: 3, scope: !6211)
!6217 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !583, file: !583, line: 2271, type: !4218, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6218)
!6218 = !{!6219}
!6219 = !DILocalVariable(name: "gs", arg: 1, scope: !6217, file: !583, line: 2271, type: !4195)
!6220 = !DILocation(line: 0, scope: !6217)
!6221 = !DILocation(line: 2274, column: 10, scope: !6217)
!6222 = !DILocation(line: 2274, column: 3, scope: !6217)
!6223 = distinct !DISubprogram(name: "gimple_cond_code", scope: !583, file: !583, line: 2221, type: !4203, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6224)
!6224 = !{!6225}
!6225 = !DILocalVariable(name: "gs", arg: 1, scope: !6223, file: !583, line: 2221, type: !4195)
!6226 = !DILocation(line: 0, scope: !6223)
!6227 = !DILocation(line: 2224, column: 38, scope: !6223)
!6228 = !DILocation(line: 2224, column: 3, scope: !6223)
!6229 = distinct !DISubprogram(name: "gimple_bb", scope: !583, file: !583, line: 1112, type: !6230, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6232)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!1703, !4195}
!6232 = !{!6233}
!6233 = !DILocalVariable(name: "g", arg: 1, scope: !6229, file: !583, line: 1112, type: !4195)
!6234 = !DILocation(line: 0, scope: !6229)
!6235 = !DILocation(line: 1114, column: 20, scope: !6229)
!6236 = !DILocation(line: 1114, column: 3, scope: !6229)
!6237 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !583, file: !583, line: 3061, type: !6127, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6238)
!6238 = !{!6239}
!6239 = !DILocalVariable(name: "gs", arg: 1, scope: !6237, file: !583, line: 3061, type: !4195)
!6240 = !DILocation(line: 0, scope: !6237)
!6241 = !DILocation(line: 3064, column: 25, scope: !6237)
!6242 = !DILocation(line: 3064, column: 3, scope: !6237)
!6243 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !3330, file: !3330, line: 467, type: !6244, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6246)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{!1719, !1739, !1884}
!6246 = !{!6247, !6248}
!6247 = !DILocalVariable(name: "gs", arg: 1, scope: !6243, file: !3330, line: 467, type: !1739)
!6248 = !DILocalVariable(name: "i", arg: 2, scope: !6243, file: !3330, line: 467, type: !1884)
!6249 = !DILocation(line: 0, scope: !6243)
!6250 = !DILocation(line: 469, column: 10, scope: !6243)
!6251 = !DILocation(line: 469, column: 3, scope: !6243)
!6252 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !583, file: !583, line: 3100, type: !6253, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6256)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!6255, !1739, !7}
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!6256 = !{!6257, !6258}
!6257 = !DILocalVariable(name: "gs", arg: 1, scope: !6252, file: !583, line: 3100, type: !1739)
!6258 = !DILocalVariable(name: "index", arg: 2, scope: !6252, file: !583, line: 3100, type: !7)
!6259 = !DILocation(line: 0, scope: !6252)
!6260 = !DILocation(line: 3103, column: 3, scope: !6252)
!6261 = !DILocation(line: 3104, column: 12, scope: !6252)
!6262 = !DILocation(line: 3104, column: 3, scope: !6252)
!6263 = distinct !DISubprogram(name: "ccp_lattice_meet", scope: !3, file: !3, line: 749, type: !6264, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6266)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{null, !2746, !2746}
!6266 = !{!6267, !6268}
!6267 = !DILocalVariable(name: "val1", arg: 1, scope: !6263, file: !3, line: 749, type: !2746)
!6268 = !DILocalVariable(name: "val2", arg: 2, scope: !6263, file: !3, line: 749, type: !2746)
!6269 = !DILocation(line: 0, scope: !6263)
!6270 = !DILocation(line: 751, column: 13, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 751, column: 7)
!6272 = !DILocation(line: 751, column: 25, scope: !6271)
!6273 = !DILocation(line: 751, column: 7, scope: !6263)
!6274 = !DILocation(line: 754, column: 15, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 752, column: 5)
!6276 = !DILocation(line: 755, column: 5, scope: !6275)
!6277 = !DILocation(line: 756, column: 18, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 756, column: 12)
!6279 = !DILocation(line: 756, column: 30, scope: !6278)
!6280 = !DILocation(line: 756, column: 12, scope: !6271)
!6281 = !DILocation(line: 762, column: 30, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 762, column: 12)
!6283 = !DILocation(line: 763, column: 12, scope: !6282)
!6284 = !DILocation(line: 763, column: 33, scope: !6282)
!6285 = !DILocation(line: 762, column: 12, scope: !6278)
!6286 = !DILocation(line: 766, column: 25, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 764, column: 5)
!6288 = !DILocation(line: 767, column: 13, scope: !6287)
!6289 = !DILocation(line: 767, column: 19, scope: !6287)
!6290 = !DILocation(line: 768, column: 5, scope: !6287)
!6291 = !DILocation(line: 769, column: 30, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 769, column: 12)
!6293 = !DILocation(line: 770, column: 5, scope: !6292)
!6294 = !DILocation(line: 770, column: 26, scope: !6292)
!6295 = !DILocation(line: 771, column: 5, scope: !6292)
!6296 = !DILocation(line: 771, column: 32, scope: !6292)
!6297 = !DILocation(line: 771, column: 45, scope: !6292)
!6298 = !DILocation(line: 771, column: 8, scope: !6292)
!6299 = !DILocation(line: 771, column: 52, scope: !6292)
!6300 = !DILocation(line: 769, column: 12, scope: !6282)
!6301 = !DILocation(line: 778, column: 25, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 772, column: 5)
!6303 = !DILocation(line: 780, column: 5, scope: !6302)
!6304 = !DILocation(line: 784, column: 25, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 782, column: 5)
!6306 = !DILocation(line: 785, column: 13, scope: !6305)
!6307 = !DILocation(line: 785, column: 19, scope: !6305)
!6308 = !DILocation(line: 787, column: 1, scope: !6263)
!6309 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !330, file: !330, line: 150, type: !6310, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6314)
!6310 = !DISubroutineType(types: !6311)
!6311 = !{!1719, !6312, !7}
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1712)
!6314 = !{!6315, !6316}
!6315 = !DILocalVariable(name: "vec_", arg: 1, scope: !6309, file: !330, line: 150, type: !6312)
!6316 = !DILocalVariable(name: "ix_", arg: 2, scope: !6309, file: !330, line: 150, type: !7)
!6317 = !DILocation(line: 0, scope: !6309)
!6318 = !DILocation(line: 150, column: 1, scope: !6309)
!6319 = distinct !DISubprogram(name: "do_dbg_cnt", scope: !3, file: !3, line: 705, type: !4752, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6320)
!6320 = !{!6321}
!6321 = !DILocalVariable(name: "i", scope: !6319, file: !3, line: 707, type: !7)
!6322 = !DILocation(line: 0, scope: !6319)
!6323 = !DILocation(line: 708, column: 8, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 708, column: 3)
!6325 = !DILocation(line: 0, scope: !6324)
!6326 = !DILocation(line: 708, column: 19, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 708, column: 3)
!6328 = !DILocation(line: 708, column: 17, scope: !6327)
!6329 = !DILocation(line: 708, column: 3, scope: !6324)
!6330 = !DILocation(line: 710, column: 12, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 710, column: 11)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 709, column: 5)
!6333 = !DILocation(line: 710, column: 11, scope: !6332)
!6334 = !DILocation(line: 712, column: 11, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 711, column: 9)
!6336 = !DILocation(line: 712, column: 24, scope: !6335)
!6337 = !DILocation(line: 712, column: 36, scope: !6335)
!6338 = !DILocation(line: 713, column: 11, scope: !6335)
!6339 = !DILocation(line: 713, column: 24, scope: !6335)
!6340 = !DILocation(line: 713, column: 30, scope: !6335)
!6341 = !DILocation(line: 714, column: 9, scope: !6335)
!6342 = !DILocation(line: 708, column: 35, scope: !6327)
!6343 = !DILocation(line: 708, column: 3, scope: !6327)
!6344 = distinct !{!6344, !6329, !6345}
!6345 = !DILocation(line: 715, column: 5, scope: !6324)
!6346 = !DILocation(line: 716, column: 1, scope: !6319)
!6347 = distinct !DISubprogram(name: "ccp_fold_stmt", scope: !3, file: !3, line: 1486, type: !4238, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6348)
!6348 = !{!6349, !6350, !6351, !6354, !6356, !6357, !6358, !6359, !6360, !6363, !6364, !6368, !6370, !6371}
!6349 = !DILocalVariable(name: "gsi", arg: 1, scope: !6347, file: !3, line: 1486, type: !4240)
!6350 = !DILocalVariable(name: "stmt", scope: !6347, file: !3, line: 1488, type: !1739)
!6351 = !DILocalVariable(name: "val", scope: !6352, file: !3, line: 1494, type: !2747)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1493, column: 7)
!6353 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1491, column: 5)
!6354 = !DILocalVariable(name: "lhs", scope: !6355, file: !3, line: 1513, type: !1456)
!6355 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1512, column: 7)
!6356 = !DILocalVariable(name: "val", scope: !6355, file: !3, line: 1514, type: !2746)
!6357 = !DILocalVariable(name: "argt", scope: !6355, file: !3, line: 1515, type: !1456)
!6358 = !DILocalVariable(name: "changed", scope: !6355, file: !3, line: 1516, type: !1407)
!6359 = !DILocalVariable(name: "i", scope: !6355, file: !3, line: 1517, type: !7)
!6360 = !DILocalVariable(name: "new_rhs", scope: !6361, file: !3, line: 1527, type: !1456)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1526, column: 4)
!6362 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1522, column: 6)
!6363 = !DILocalVariable(name: "res", scope: !6361, file: !3, line: 1528, type: !1407)
!6364 = !DILocalVariable(name: "arg", scope: !6365, file: !3, line: 1545, type: !1456)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1544, column: 4)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 1542, column: 2)
!6367 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1542, column: 2)
!6368 = !DILocalVariable(name: "lhs", scope: !6369, file: !3, line: 1563, type: !1456)
!6369 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1562, column: 7)
!6370 = !DILocalVariable(name: "val", scope: !6369, file: !3, line: 1564, type: !2746)
!6371 = !DILocalVariable(name: "rhs", scope: !6372, file: !3, line: 1573, type: !1456)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 1572, column: 4)
!6373 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 1568, column: 6)
!6374 = !DILocation(line: 0, scope: !6347)
!6375 = !DILocation(line: 1488, column: 17, scope: !6347)
!6376 = !DILocation(line: 1490, column: 11, scope: !6347)
!6377 = !DILocation(line: 1490, column: 3, scope: !6347)
!6378 = !DILocation(line: 1494, column: 2, scope: !6352)
!6379 = !DILocation(line: 1498, column: 8, scope: !6352)
!6380 = !DILocation(line: 1499, column: 10, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1499, column: 6)
!6382 = !DILocation(line: 1499, column: 22, scope: !6381)
!6383 = !DILocation(line: 1500, column: 6, scope: !6381)
!6384 = !DILocation(line: 1500, column: 9, scope: !6381)
!6385 = !DILocation(line: 1500, column: 31, scope: !6381)
!6386 = !DILocation(line: 1499, column: 6, scope: !6352)
!6387 = !DILocation(line: 1503, column: 6, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1503, column: 6)
!6389 = !DILocation(line: 1503, column: 6, scope: !6352)
!6390 = !DILocation(line: 1504, column: 4, scope: !6388)
!6391 = !DILocation(line: 1506, column: 4, scope: !6388)
!6392 = !DILocation(line: 0, scope: !6352)
!6393 = !DILocation(line: 1509, column: 7, scope: !6353)
!6394 = !DILocation(line: 1513, column: 13, scope: !6355)
!6395 = !DILocation(line: 0, scope: !6355)
!6396 = !DILocation(line: 1522, column: 6, scope: !6362)
!6397 = !DILocation(line: 1523, column: 6, scope: !6362)
!6398 = !DILocation(line: 1523, column: 9, scope: !6362)
!6399 = !DILocation(line: 1523, column: 25, scope: !6362)
!6400 = !DILocation(line: 1524, column: 6, scope: !6362)
!6401 = !DILocation(line: 1524, column: 16, scope: !6362)
!6402 = !DILocation(line: 1524, column: 14, scope: !6362)
!6403 = !DILocation(line: 1525, column: 6, scope: !6362)
!6404 = !DILocation(line: 1525, column: 14, scope: !6362)
!6405 = !DILocation(line: 1525, column: 26, scope: !6362)
!6406 = !DILocation(line: 1522, column: 6, scope: !6355)
!6407 = !DILocation(line: 1527, column: 40, scope: !6361)
!6408 = !DILocation(line: 1527, column: 21, scope: !6361)
!6409 = !DILocation(line: 0, scope: !6361)
!6410 = !DILocation(line: 1529, column: 38, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1529, column: 10)
!6412 = !DILocation(line: 1530, column: 10, scope: !6411)
!6413 = !DILocation(line: 1529, column: 11, scope: !6411)
!6414 = !DILocation(line: 1529, column: 10, scope: !6361)
!6415 = !DILocation(line: 1531, column: 18, scope: !6411)
!6416 = !DILocation(line: 1531, column: 8, scope: !6411)
!6417 = !DILocation(line: 1532, column: 12, scope: !6361)
!6418 = !DILocation(line: 1533, column: 6, scope: !6361)
!6419 = !DILocation(line: 1541, column: 9, scope: !6355)
!6420 = !DILocation(line: 1542, column: 7, scope: !6367)
!6421 = !DILocation(line: 0, scope: !6367)
!6422 = !DILocation(line: 1542, column: 18, scope: !6366)
!6423 = !DILocation(line: 1542, column: 16, scope: !6366)
!6424 = !DILocation(line: 1542, column: 46, scope: !6366)
!6425 = !DILocation(line: 1542, column: 2, scope: !6367)
!6426 = !DILocation(line: 1545, column: 17, scope: !6365)
!6427 = !DILocation(line: 0, scope: !6365)
!6428 = !DILocation(line: 1546, column: 10, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1546, column: 10)
!6430 = !DILocation(line: 1546, column: 26, scope: !6429)
!6431 = !DILocation(line: 1547, column: 3, scope: !6429)
!6432 = !DILocation(line: 1547, column: 13, scope: !6429)
!6433 = !DILocation(line: 1547, column: 11, scope: !6429)
!6434 = !DILocation(line: 1548, column: 3, scope: !6429)
!6435 = !DILocation(line: 1548, column: 11, scope: !6429)
!6436 = !DILocation(line: 1548, column: 23, scope: !6429)
!6437 = !DILocation(line: 1549, column: 3, scope: !6429)
!6438 = !DILocation(line: 1550, column: 9, scope: !6429)
!6439 = !DILocation(line: 1551, column: 9, scope: !6429)
!6440 = !DILocation(line: 1549, column: 6, scope: !6429)
!6441 = !DILocation(line: 1546, column: 10, scope: !6365)
!6442 = !DILocation(line: 1553, column: 52, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1552, column: 8)
!6444 = !DILocation(line: 1553, column: 33, scope: !6443)
!6445 = !DILocation(line: 1553, column: 3, scope: !6443)
!6446 = !DILocation(line: 1555, column: 8, scope: !6443)
!6447 = !DILocation(line: 1543, column: 7, scope: !6366)
!6448 = !DILocation(line: 1543, column: 19, scope: !6366)
!6449 = !DILocation(line: 1542, column: 2, scope: !6366)
!6450 = distinct !{!6450, !6425, !6451}
!6451 = !DILocation(line: 1556, column: 4, scope: !6367)
!6452 = !DILocation(line: 1563, column: 13, scope: !6369)
!6453 = !DILocation(line: 0, scope: !6369)
!6454 = !DILocation(line: 1568, column: 6, scope: !6373)
!6455 = !DILocation(line: 1569, column: 6, scope: !6373)
!6456 = !DILocation(line: 1569, column: 9, scope: !6373)
!6457 = !DILocation(line: 1569, column: 25, scope: !6373)
!6458 = !DILocation(line: 1570, column: 6, scope: !6373)
!6459 = !DILocation(line: 1570, column: 16, scope: !6373)
!6460 = !DILocation(line: 1570, column: 14, scope: !6373)
!6461 = !DILocation(line: 1571, column: 6, scope: !6373)
!6462 = !DILocation(line: 1571, column: 14, scope: !6373)
!6463 = !DILocation(line: 1571, column: 26, scope: !6373)
!6464 = !DILocation(line: 1568, column: 6, scope: !6369)
!6465 = !DILocation(line: 1573, column: 36, scope: !6372)
!6466 = !DILocation(line: 1573, column: 17, scope: !6372)
!6467 = !DILocation(line: 0, scope: !6372)
!6468 = !DILocation(line: 1574, column: 38, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1574, column: 10)
!6470 = !DILocation(line: 1574, column: 55, scope: !6469)
!6471 = !DILocation(line: 1574, column: 11, scope: !6469)
!6472 = !DILocation(line: 1574, column: 10, scope: !6372)
!6473 = !DILocation(line: 1575, column: 14, scope: !6469)
!6474 = !DILocation(line: 1575, column: 8, scope: !6469)
!6475 = !DILocation(line: 1576, column: 6, scope: !6372)
!6476 = !DILocation(line: 1586, column: 1, scope: !6347)
!6477 = !DILocation(line: 0, scope: !6353)
!6478 = distinct !DISubprogram(name: "gimple_cond_make_false", scope: !583, file: !583, line: 2346, type: !6479, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6481)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{null, !1739}
!6481 = !{!6482}
!6482 = !DILocalVariable(name: "gs", arg: 1, scope: !6478, file: !583, line: 2346, type: !1739)
!6483 = !DILocation(line: 0, scope: !6478)
!6484 = !DILocation(line: 2348, column: 28, scope: !6478)
!6485 = !DILocation(line: 2348, column: 3, scope: !6478)
!6486 = !DILocation(line: 2349, column: 28, scope: !6478)
!6487 = !DILocation(line: 2349, column: 3, scope: !6478)
!6488 = !DILocation(line: 2350, column: 14, scope: !6478)
!6489 = !DILocation(line: 2350, column: 22, scope: !6478)
!6490 = !DILocation(line: 2351, column: 1, scope: !6478)
!6491 = distinct !DISubprogram(name: "gimple_cond_make_true", scope: !583, file: !583, line: 2357, type: !6479, scopeLine: 2358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6492)
!6492 = !{!6493}
!6493 = !DILocalVariable(name: "gs", arg: 1, scope: !6491, file: !583, line: 2357, type: !1739)
!6494 = !DILocation(line: 0, scope: !6491)
!6495 = !DILocation(line: 2359, column: 28, scope: !6491)
!6496 = !DILocation(line: 2359, column: 3, scope: !6491)
!6497 = !DILocation(line: 2360, column: 28, scope: !6491)
!6498 = !DILocation(line: 2360, column: 3, scope: !6491)
!6499 = !DILocation(line: 2361, column: 14, scope: !6491)
!6500 = !DILocation(line: 2361, column: 22, scope: !6491)
!6501 = !DILocation(line: 2362, column: 1, scope: !6491)
!6502 = distinct !DISubprogram(name: "gimple_call_set_arg", scope: !583, file: !583, line: 2046, type: !6503, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{null, !1739, !7, !1456}
!6505 = !{!6506, !6507, !6508}
!6506 = !DILocalVariable(name: "gs", arg: 1, scope: !6502, file: !583, line: 2046, type: !1739)
!6507 = !DILocalVariable(name: "index", arg: 2, scope: !6502, file: !583, line: 2046, type: !7)
!6508 = !DILocalVariable(name: "arg", arg: 3, scope: !6502, file: !583, line: 2046, type: !1456)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 2049, column: 28, scope: !6502)
!6511 = !DILocation(line: 2049, column: 3, scope: !6502)
!6512 = !DILocation(line: 2050, column: 1, scope: !6502)
!6513 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !583, file: !583, line: 2261, type: !6514, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{null, !1739, !1456}
!6516 = !{!6517, !6518}
!6517 = !DILocalVariable(name: "gs", arg: 1, scope: !6513, file: !583, line: 2261, type: !1739)
!6518 = !DILocalVariable(name: "lhs", arg: 2, scope: !6513, file: !583, line: 2261, type: !1456)
!6519 = !DILocation(line: 0, scope: !6513)
!6520 = !DILocation(line: 2264, column: 3, scope: !6513)
!6521 = !DILocation(line: 2265, column: 1, scope: !6513)
!6522 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !583, file: !583, line: 2292, type: !6514, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6523)
!6523 = !{!6524, !6525}
!6524 = !DILocalVariable(name: "gs", arg: 1, scope: !6522, file: !583, line: 2292, type: !1739)
!6525 = !DILocalVariable(name: "rhs", arg: 2, scope: !6522, file: !583, line: 2292, type: !1456)
!6526 = !DILocation(line: 0, scope: !6522)
!6527 = !DILocation(line: 2295, column: 3, scope: !6522)
!6528 = !DILocation(line: 2296, column: 1, scope: !6522)
!6529 = distinct !DISubprogram(name: "gimple_set_op", scope: !583, file: !583, line: 1663, type: !6503, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6530)
!6530 = !{!6531, !6532, !6533}
!6531 = !DILocalVariable(name: "gs", arg: 1, scope: !6529, file: !583, line: 1663, type: !1739)
!6532 = !DILocalVariable(name: "i", arg: 2, scope: !6529, file: !583, line: 1663, type: !7)
!6533 = !DILocalVariable(name: "op", arg: 3, scope: !6529, file: !583, line: 1663, type: !1456)
!6534 = !DILocation(line: 0, scope: !6529)
!6535 = !DILocation(line: 1665, column: 3, scope: !6529)
!6536 = !DILocation(line: 1671, column: 3, scope: !6529)
!6537 = !DILocation(line: 1671, column: 22, scope: !6529)
!6538 = !DILocation(line: 1672, column: 1, scope: !6529)
!6539 = distinct !DISubprogram(name: "gimple_expr_code", scope: !583, file: !583, line: 1438, type: !4203, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6540)
!6540 = !{!6541, !6542}
!6541 = !DILocalVariable(name: "stmt", arg: 1, scope: !6539, file: !583, line: 1438, type: !4195)
!6542 = !DILocalVariable(name: "code", scope: !6539, file: !583, line: 1440, type: !609)
!6543 = !DILocation(line: 0, scope: !6539)
!6544 = !DILocation(line: 1440, column: 27, scope: !6539)
!6545 = !DILocation(line: 1441, column: 29, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6539, file: !583, line: 1441, column: 7)
!6547 = !DILocation(line: 1442, column: 42, scope: !6546)
!6548 = !DILocation(line: 1442, column: 5, scope: !6546)
!6549 = !DILocation(line: 1446, column: 5, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !583, line: 1443, column: 12)
!6551 = !DILocation(line: 1448, column: 5, scope: !6539)
!6552 = !DILocation(line: 1450, column: 1, scope: !6539)
!6553 = distinct !DISubprogram(name: "fold_gimple_assign", scope: !3, file: !3, line: 2773, type: !6554, scopeLine: 2774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6556)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{!1456, !4240}
!6556 = !{!6557, !6558, !6559, !6560, !6561, !6562, !6565, !6568, !6569, !6570, !6571, !6576, !6579, !6580, !6582, !6586, !6587}
!6557 = !DILocalVariable(name: "si", arg: 1, scope: !6553, file: !3, line: 2773, type: !4240)
!6558 = !DILocalVariable(name: "stmt", scope: !6553, file: !3, line: 2775, type: !1739)
!6559 = !DILocalVariable(name: "subcode", scope: !6553, file: !3, line: 2776, type: !134)
!6560 = !DILocalVariable(name: "loc", scope: !6553, file: !3, line: 2777, type: !1540)
!6561 = !DILocalVariable(name: "result", scope: !6553, file: !3, line: 2779, type: !1456)
!6562 = !DILocalVariable(name: "rhs", scope: !6563, file: !3, line: 2785, type: !1456)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2784, column: 7)
!6564 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2782, column: 5)
!6565 = !DILocalVariable(name: "op0", scope: !6566, file: !3, line: 2790, type: !1456)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 2789, column: 11)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2788, column: 13)
!6568 = !DILocalVariable(name: "tem", scope: !6566, file: !3, line: 2791, type: !1456)
!6569 = !DILocalVariable(name: "set", scope: !6566, file: !3, line: 2792, type: !1407)
!6570 = !DILocalVariable(name: "cond_loc", scope: !6566, file: !3, line: 2793, type: !1540)
!6571 = !DILocalVariable(name: "tem", scope: !6572, file: !3, line: 2830, type: !1456)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2829, column: 4)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2828, column: 11)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 2825, column: 11)
!6575 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 2822, column: 11)
!6576 = !DILocalVariable(name: "i", scope: !6577, file: !3, line: 2842, type: !7)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2840, column: 4)
!6578 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2836, column: 11)
!6579 = !DILocalVariable(name: "val", scope: !6577, file: !3, line: 2843, type: !1456)
!6580 = !DILocalVariable(name: "rhs", scope: !6581, file: !3, line: 2877, type: !1456)
!6581 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2876, column: 7)
!6582 = !DILocalVariable(name: "type", scope: !6583, file: !3, line: 2900, type: !1456)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 2899, column: 4)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 2896, column: 11)
!6585 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 2880, column: 6)
!6586 = !DILocalVariable(name: "t", scope: !6583, file: !3, line: 2901, type: !1456)
!6587 = !DILocalVariable(name: "type", scope: !6588, file: !3, line: 2914, type: !1456)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 2913, column: 2)
!6589 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2912, column: 11)
!6590 = !DILocation(line: 0, scope: !6553)
!6591 = !DILocation(line: 2775, column: 17, scope: !6553)
!6592 = !DILocation(line: 2776, column: 28, scope: !6553)
!6593 = !DILocation(line: 2777, column: 20, scope: !6553)
!6594 = !DILocation(line: 2781, column: 11, scope: !6553)
!6595 = !DILocation(line: 2781, column: 3, scope: !6553)
!6596 = !DILocation(line: 2785, column: 20, scope: !6563)
!6597 = !DILocation(line: 0, scope: !6563)
!6598 = !DILocation(line: 2788, column: 13, scope: !6567)
!6599 = !DILocation(line: 2788, column: 29, scope: !6567)
!6600 = !DILocation(line: 2788, column: 13, scope: !6563)
!6601 = !DILocation(line: 2790, column: 17, scope: !6566)
!6602 = !DILocation(line: 0, scope: !6566)
!6603 = !DILocation(line: 2793, column: 28, scope: !6566)
!6604 = !DILocation(line: 2795, column: 10, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 2795, column: 10)
!6606 = !DILocation(line: 2795, column: 10, scope: !6566)
!6607 = !DILocation(line: 2797, column: 3, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2796, column: 8)
!6609 = !DILocation(line: 2799, column: 8, scope: !6608)
!6610 = !DILocation(line: 2799, column: 25, scope: !6608)
!6611 = !DILocation(line: 2800, column: 8, scope: !6608)
!6612 = !DILocation(line: 2801, column: 8, scope: !6608)
!6613 = !DILocation(line: 2798, column: 9, scope: !6608)
!6614 = !DILocation(line: 2805, column: 10, scope: !6608)
!6615 = !DILocation(line: 2805, column: 14, scope: !6608)
!6616 = !DILocation(line: 2805, column: 17, scope: !6608)
!6617 = !DILocation(line: 2806, column: 10, scope: !6608)
!6618 = !DILocation(line: 2806, column: 13, scope: !6608)
!6619 = !DILocation(line: 2807, column: 3, scope: !6608)
!6620 = !DILocation(line: 2808, column: 8, scope: !6608)
!6621 = !DILocation(line: 2809, column: 15, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2809, column: 15)
!6623 = !DILocation(line: 2809, column: 15, scope: !6605)
!6624 = !DILocation(line: 0, scope: !6605)
!6625 = !DILocation(line: 2817, column: 10, scope: !6566)
!6626 = !DILocation(line: 2818, column: 17, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 2817, column: 10)
!6628 = !DILocation(line: 2818, column: 8, scope: !6627)
!6629 = !DILocation(line: 2822, column: 27, scope: !6575)
!6630 = !DILocation(line: 2822, column: 11, scope: !6567)
!6631 = !DILocation(line: 2823, column: 11, scope: !6575)
!6632 = !DILocation(line: 2823, column: 4, scope: !6575)
!6633 = !DILocation(line: 2825, column: 11, scope: !6574)
!6634 = !DILocation(line: 2825, column: 11, scope: !6575)
!6635 = !DILocation(line: 2826, column: 11, scope: !6574)
!6636 = !DILocation(line: 2826, column: 4, scope: !6574)
!6637 = !DILocation(line: 2828, column: 27, scope: !6573)
!6638 = !DILocation(line: 2828, column: 11, scope: !6574)
!6639 = !DILocation(line: 2830, column: 39, scope: !6572)
!6640 = !DILocation(line: 2830, column: 17, scope: !6572)
!6641 = !DILocation(line: 0, scope: !6572)
!6642 = !DILocation(line: 2831, column: 10, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2831, column: 10)
!6644 = !DILocation(line: 2831, column: 10, scope: !6572)
!6645 = !DILocation(line: 2832, column: 17, scope: !6643)
!6646 = !DILocation(line: 2832, column: 8, scope: !6643)
!6647 = !DILocation(line: 2836, column: 27, scope: !6578)
!6648 = !DILocation(line: 2837, column: 4, scope: !6578)
!6649 = !DILocation(line: 2837, column: 7, scope: !6578)
!6650 = !DILocation(line: 2837, column: 35, scope: !6578)
!6651 = !DILocation(line: 2838, column: 4, scope: !6578)
!6652 = !DILocation(line: 2838, column: 8, scope: !6578)
!6653 = !DILocation(line: 2839, column: 11, scope: !6578)
!6654 = !DILocation(line: 2839, column: 8, scope: !6578)
!6655 = !DILocation(line: 2836, column: 11, scope: !6573)
!6656 = !DILocation(line: 2855, column: 11, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2855, column: 11)
!6658 = !DILocation(line: 2845, column: 6, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2845, column: 6)
!6660 = !DILocation(line: 0, scope: !6659)
!6661 = !DILocation(line: 0, scope: !6577)
!6662 = !DILocation(line: 2845, column: 6, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 2845, column: 6)
!6664 = !DILocation(line: 2846, column: 12, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 2846, column: 12)
!6666 = !DILocation(line: 2846, column: 28, scope: !6665)
!6667 = !DILocation(line: 2847, column: 5, scope: !6665)
!6668 = !DILocation(line: 2847, column: 24, scope: !6665)
!6669 = !DILocation(line: 2848, column: 5, scope: !6665)
!6670 = !DILocation(line: 2848, column: 24, scope: !6665)
!6671 = !DILocation(line: 2846, column: 12, scope: !6663)
!6672 = distinct !{!6672, !6658, !6673}
!6673 = !DILocation(line: 2849, column: 10, scope: !6659)
!6674 = !DILocation(line: 2851, column: 37, scope: !6577)
!6675 = !DILocation(line: 2852, column: 9, scope: !6577)
!6676 = !DILocation(line: 2851, column: 13, scope: !6577)
!6677 = !DILocation(line: 2851, column: 6, scope: !6577)
!6678 = !DILocation(line: 2855, column: 11, scope: !6578)
!6679 = !DILocation(line: 2856, column: 25, scope: !6657)
!6680 = !DILocation(line: 2856, column: 11, scope: !6657)
!6681 = !DILocation(line: 2856, column: 4, scope: !6657)
!6682 = !DILocation(line: 0, scope: !6567)
!6683 = !DILocation(line: 2860, column: 20, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2860, column: 13)
!6685 = !DILocation(line: 2860, column: 13, scope: !6563)
!6686 = !DILocation(line: 2861, column: 20, scope: !6684)
!6687 = !DILocation(line: 2861, column: 11, scope: !6684)
!6688 = !DILocation(line: 2866, column: 9, scope: !6563)
!6689 = !DILocation(line: 2868, column: 20, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2868, column: 13)
!6691 = !DILocation(line: 2868, column: 27, scope: !6690)
!6692 = !DILocation(line: 2868, column: 30, scope: !6690)
!6693 = !DILocation(line: 2868, column: 13, scope: !6563)
!6694 = !DILocation(line: 2871, column: 2, scope: !6563)
!6695 = !DILocation(line: 2877, column: 13, scope: !6581)
!6696 = !DILocation(line: 0, scope: !6581)
!6697 = !DILocation(line: 2879, column: 41, scope: !6581)
!6698 = !DILocation(line: 2879, column: 11, scope: !6581)
!6699 = !DILocation(line: 2880, column: 6, scope: !6585)
!6700 = !DILocation(line: 2880, column: 6, scope: !6581)
!6701 = !DILocation(line: 2887, column: 10, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2887, column: 10)
!6703 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 2881, column: 4)
!6704 = !DILocation(line: 2888, column: 6, scope: !6702)
!6705 = !DILocation(line: 2888, column: 25, scope: !6702)
!6706 = !DILocation(line: 2889, column: 3, scope: !6702)
!6707 = !DILocation(line: 2889, column: 6, scope: !6702)
!6708 = !DILocation(line: 2889, column: 22, scope: !6702)
!6709 = !DILocation(line: 2887, column: 10, scope: !6703)
!6710 = !DILocation(line: 2890, column: 33, scope: !6702)
!6711 = !DILocation(line: 2890, column: 31, scope: !6702)
!6712 = !DILocation(line: 2890, column: 8, scope: !6702)
!6713 = !DILocation(line: 2892, column: 6, scope: !6703)
!6714 = !DILocation(line: 2893, column: 10, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2893, column: 10)
!6716 = !DILocation(line: 2893, column: 10, scope: !6703)
!6717 = !DILocation(line: 2896, column: 11, scope: !6584)
!6718 = !DILocation(line: 2897, column: 7, scope: !6584)
!6719 = !DILocation(line: 2898, column: 4, scope: !6584)
!6720 = !DILocation(line: 2898, column: 7, scope: !6584)
!6721 = !DILocation(line: 2896, column: 11, scope: !6585)
!6722 = !DILocation(line: 2900, column: 18, scope: !6583)
!6723 = !DILocation(line: 0, scope: !6583)
!6724 = !DILocation(line: 2902, column: 10, scope: !6583)
!6725 = !DILocation(line: 2903, column: 10, scope: !6583)
!6726 = !DILocation(line: 2901, column: 15, scope: !6583)
!6727 = !DILocation(line: 2904, column: 10, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 2904, column: 10)
!6729 = !DILocation(line: 0, scope: !6584)
!6730 = !DILocation(line: 2907, column: 7, scope: !6564)
!6731 = !DILocation(line: 2912, column: 11, scope: !6589)
!6732 = !DILocation(line: 2912, column: 41, scope: !6589)
!6733 = !DILocation(line: 2912, column: 11, scope: !6564)
!6734 = !DILocation(line: 2914, column: 16, scope: !6588)
!6735 = !DILocation(line: 0, scope: !6588)
!6736 = !DILocation(line: 2915, column: 8, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 2915, column: 8)
!6738 = !DILocation(line: 2915, column: 37, scope: !6737)
!6739 = !DILocation(line: 2915, column: 8, scope: !6588)
!6740 = !DILocation(line: 2917, column: 35, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2916, column: 6)
!6742 = !DILocation(line: 2917, column: 15, scope: !6741)
!6743 = !DILocation(line: 2919, column: 8, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2918, column: 12)
!6745 = !DILocation(line: 2918, column: 13, scope: !6744)
!6746 = !DILocation(line: 2918, column: 12, scope: !6741)
!6747 = !DILocation(line: 2920, column: 10, scope: !6744)
!6748 = !DILocation(line: 2920, column: 3, scope: !6744)
!6749 = !DILocation(line: 2922, column: 39, scope: !6588)
!6750 = !DILocation(line: 2924, column: 11, scope: !6588)
!6751 = !DILocation(line: 2925, column: 11, scope: !6588)
!6752 = !DILocation(line: 2922, column: 13, scope: !6588)
!6753 = !DILocation(line: 2926, column: 2, scope: !6588)
!6754 = !DILocation(line: 2928, column: 12, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2928, column: 11)
!6756 = !DILocation(line: 2928, column: 11, scope: !6564)
!6757 = !DILocation(line: 2930, column: 31, scope: !6755)
!6758 = !DILocation(line: 2931, column: 31, scope: !6755)
!6759 = !DILocation(line: 2932, column: 31, scope: !6755)
!6760 = !DILocation(line: 2929, column: 18, scope: !6755)
!6761 = !DILocation(line: 2929, column: 9, scope: !6755)
!6762 = !DILocation(line: 0, scope: !6564)
!6763 = !DILocation(line: 2934, column: 11, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2934, column: 11)
!6765 = !DILocation(line: 2934, column: 11, scope: !6564)
!6766 = !DILocation(line: 2936, column: 11, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2935, column: 9)
!6768 = !DILocation(line: 2937, column: 15, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2937, column: 15)
!6770 = !DILocation(line: 2937, column: 15, scope: !6767)
!6771 = !DILocation(line: 2944, column: 15, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2944, column: 15)
!6773 = !DILocation(line: 2945, column: 15, scope: !6772)
!6774 = !DILocation(line: 2945, column: 40, scope: !6772)
!6775 = !DILocation(line: 2946, column: 40, scope: !6772)
!6776 = !DILocation(line: 2945, column: 18, scope: !6772)
!6777 = !DILocation(line: 2944, column: 15, scope: !6767)
!6778 = !DILocation(line: 2947, column: 20, scope: !6772)
!6779 = !DILocation(line: 2947, column: 13, scope: !6772)
!6780 = !DILocation(line: 2954, column: 7, scope: !6564)
!6781 = !DILocation(line: 2955, column: 5, scope: !6564)
!6782 = !DILocation(line: 2957, column: 3, scope: !6553)
!6783 = !DILocation(line: 2958, column: 1, scope: !6553)
!6784 = distinct !DISubprogram(name: "fold_gimple_cond", scope: !3, file: !3, line: 2966, type: !4402, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6785)
!6785 = !{!6786, !6787}
!6786 = !DILocalVariable(name: "stmt", arg: 1, scope: !6784, file: !3, line: 2966, type: !1739)
!6787 = !DILocalVariable(name: "result", scope: !6784, file: !3, line: 2968, type: !1456)
!6788 = !DILocation(line: 0, scope: !6784)
!6789 = !DILocation(line: 2968, column: 34, scope: !6784)
!6790 = !DILocation(line: 2969, column: 9, scope: !6784)
!6791 = !DILocation(line: 2970, column: 30, scope: !6784)
!6792 = !DILocation(line: 2971, column: 30, scope: !6784)
!6793 = !DILocation(line: 2972, column: 30, scope: !6784)
!6794 = !DILocation(line: 2968, column: 17, scope: !6784)
!6795 = !DILocation(line: 2974, column: 7, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2974, column: 7)
!6797 = !DILocation(line: 2974, column: 7, scope: !6784)
!6798 = !DILocation(line: 2976, column: 7, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 2975, column: 5)
!6800 = !DILocation(line: 2977, column: 11, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 2977, column: 11)
!6802 = !DILocation(line: 2977, column: 39, scope: !6801)
!6803 = !DILocation(line: 2977, column: 42, scope: !6801)
!6804 = !DILocation(line: 2977, column: 11, scope: !6799)
!6805 = !DILocation(line: 2979, column: 11, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 2978, column: 9)
!6807 = !DILocation(line: 2980, column: 11, scope: !6806)
!6808 = !DILocation(line: 2985, column: 1, scope: !6784)
!6809 = distinct !DISubprogram(name: "maybe_fold_reference", scope: !3, file: !3, line: 2392, type: !6810, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6812)
!6810 = !DISubroutineType(types: !6811)
!6811 = !{!1456, !1456, !1407}
!6812 = !{!6813, !6814, !6815, !6816, !6819, !6822, !6825}
!6813 = !DILocalVariable(name: "expr", arg: 1, scope: !6809, file: !3, line: 2392, type: !1456)
!6814 = !DILocalVariable(name: "is_lhs", arg: 2, scope: !6809, file: !3, line: 2392, type: !1407)
!6815 = !DILocalVariable(name: "t", scope: !6809, file: !3, line: 2394, type: !1773)
!6816 = !DILocalVariable(name: "tem", scope: !6817, file: !3, line: 2399, type: !1456)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2398, column: 5)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2396, column: 7)
!6819 = !DILocalVariable(name: "tem", scope: !6820, file: !3, line: 2409, type: !1456)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 2408, column: 5)
!6821 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2406, column: 7)
!6822 = !DILocalVariable(name: "tem", scope: !6823, file: !3, line: 2419, type: !1456)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2418, column: 5)
!6824 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2417, column: 7)
!6825 = !DILocalVariable(name: "tem", scope: !6826, file: !3, line: 2442, type: !1456)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2441, column: 5)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2439, column: 12)
!6828 = !DILocation(line: 0, scope: !6809)
!6829 = !DILocation(line: 2396, column: 7, scope: !6818)
!6830 = !DILocation(line: 2396, column: 24, scope: !6818)
!6831 = !DILocation(line: 2397, column: 11, scope: !6818)
!6832 = !DILocation(line: 2397, column: 7, scope: !6818)
!6833 = !DILocation(line: 2399, column: 18, scope: !6817)
!6834 = !DILocation(line: 0, scope: !6817)
!6835 = !DILocation(line: 2400, column: 11, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 2400, column: 11)
!6837 = !DILocation(line: 2406, column: 7, scope: !6821)
!6838 = !DILocation(line: 2407, column: 7, scope: !6821)
!6839 = !DILocation(line: 2407, column: 10, scope: !6821)
!6840 = !DILocation(line: 2406, column: 7, scope: !6809)
!6841 = !DILocation(line: 2409, column: 18, scope: !6820)
!6842 = !DILocation(line: 0, scope: !6820)
!6843 = !DILocation(line: 2410, column: 15, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2410, column: 11)
!6845 = !DILocation(line: 0, scope: !6821)
!6846 = !DILocation(line: 2414, column: 3, scope: !6809)
!6847 = !DILocation(line: 2414, column: 31, scope: !6809)
!6848 = !DILocation(line: 2414, column: 10, scope: !6809)
!6849 = !DILocation(line: 2415, column: 10, scope: !6809)
!6850 = distinct !{!6850, !6846, !6849}
!6851 = !DILocation(line: 2417, column: 7, scope: !6824)
!6852 = !DILocation(line: 2417, column: 22, scope: !6824)
!6853 = !DILocation(line: 2417, column: 7, scope: !6809)
!6854 = !DILocation(line: 2419, column: 48, scope: !6823)
!6855 = !DILocation(line: 2420, column: 9, scope: !6823)
!6856 = !DILocation(line: 2419, column: 18, scope: !6823)
!6857 = !DILocation(line: 0, scope: !6823)
!6858 = !DILocation(line: 2422, column: 21, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 2422, column: 11)
!6860 = !DILocation(line: 2422, column: 18, scope: !6859)
!6861 = !DILocation(line: 2422, column: 28, scope: !6859)
!6862 = !DILocation(line: 2422, column: 11, scope: !6823)
!6863 = !DILocation(line: 2424, column: 12, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 2424, column: 11)
!6865 = !DILocation(line: 2425, column: 4, scope: !6864)
!6866 = !DILocation(line: 2425, column: 7, scope: !6864)
!6867 = !DILocation(line: 2425, column: 40, scope: !6864)
!6868 = !DILocation(line: 2424, column: 11, scope: !6823)
!6869 = !DILocation(line: 2428, column: 8, scope: !6864)
!6870 = !DILocation(line: 2428, column: 2, scope: !6864)
!6871 = !DILocation(line: 2430, column: 11, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 2430, column: 11)
!6873 = !DILocation(line: 2430, column: 11, scope: !6823)
!6874 = !DILocation(line: 2432, column: 7, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 2431, column: 2)
!6876 = !DILocation(line: 2433, column: 32, scope: !6875)
!6877 = !DILocation(line: 2433, column: 10, scope: !6875)
!6878 = !DILocation(line: 2434, column: 8, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2434, column: 8)
!6880 = !DILocation(line: 2434, column: 8, scope: !6875)
!6881 = !DILocation(line: 2439, column: 13, scope: !6827)
!6882 = !DILocation(line: 2440, column: 5, scope: !6827)
!6883 = !DILocation(line: 2440, column: 8, scope: !6827)
!6884 = !DILocation(line: 2439, column: 12, scope: !6824)
!6885 = !DILocation(line: 2442, column: 18, scope: !6826)
!6886 = !DILocation(line: 0, scope: !6826)
!6887 = !DILocation(line: 2443, column: 11, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 2443, column: 11)
!6889 = !DILocation(line: 2444, column: 4, scope: !6888)
!6890 = !DILocation(line: 2444, column: 34, scope: !6888)
!6891 = !DILocation(line: 2444, column: 50, scope: !6888)
!6892 = !DILocation(line: 2444, column: 7, scope: !6888)
!6893 = !DILocation(line: 2443, column: 11, scope: !6826)
!6894 = !DILocation(line: 2446, column: 9, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2445, column: 2)
!6896 = !DILocation(line: 2446, column: 7, scope: !6895)
!6897 = !DILocation(line: 2447, column: 32, scope: !6895)
!6898 = !DILocation(line: 2447, column: 10, scope: !6895)
!6899 = !DILocation(line: 2448, column: 8, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 2448, column: 8)
!6901 = !DILocation(line: 2448, column: 8, scope: !6895)
!6902 = !DILocation(line: 2454, column: 3, scope: !6809)
!6903 = !DILocation(line: 2455, column: 1, scope: !6809)
!6904 = distinct !DISubprogram(name: "fold_gimple_call", scope: !3, file: !3, line: 2995, type: !4238, scopeLine: 2996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6905)
!6905 = !{!6906, !6907, !6908, !6909, !6912}
!6906 = !DILocalVariable(name: "gsi", arg: 1, scope: !6904, file: !3, line: 2995, type: !4240)
!6907 = !DILocalVariable(name: "stmt", scope: !6904, file: !3, line: 2997, type: !1739)
!6908 = !DILocalVariable(name: "callee", scope: !6904, file: !3, line: 2999, type: !1456)
!6909 = !DILocalVariable(name: "result", scope: !6910, file: !3, line: 3005, type: !1456)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3004, column: 5)
!6911 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 3003, column: 7)
!6912 = !DILocalVariable(name: "t", scope: !6913, file: !3, line: 3031, type: !1456)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 3030, column: 9)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 3025, column: 11)
!6915 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3015, column: 5)
!6916 = !DILocation(line: 0, scope: !6904)
!6917 = !DILocation(line: 2997, column: 17, scope: !6904)
!6918 = !DILocation(line: 2999, column: 17, scope: !6904)
!6919 = !DILocation(line: 3003, column: 7, scope: !6911)
!6920 = !DILocation(line: 3003, column: 14, scope: !6911)
!6921 = !DILocation(line: 3003, column: 17, scope: !6911)
!6922 = !DILocation(line: 3003, column: 7, scope: !6904)
!6923 = !DILocation(line: 3005, column: 21, scope: !6910)
!6924 = !DILocation(line: 0, scope: !6910)
!6925 = !DILocation(line: 3007, column: 11, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 3007, column: 11)
!6927 = !DILocation(line: 3007, column: 11, scope: !6910)
!6928 = !DILocation(line: 3009, column: 16, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 3009, column: 15)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 3008, column: 2)
!6931 = !DILocation(line: 3009, column: 15, scope: !6930)
!6932 = !DILocation(line: 3010, column: 6, scope: !6929)
!6933 = !DILocation(line: 3024, column: 16, scope: !6915)
!6934 = !DILocation(line: 3025, column: 11, scope: !6914)
!6935 = !DILocation(line: 3025, column: 30, scope: !6914)
!6936 = !DILocation(line: 3026, column: 25, scope: !6914)
!6937 = !DILocation(line: 3026, column: 14, scope: !6914)
!6938 = !DILocation(line: 3026, column: 11, scope: !6914)
!6939 = !DILocation(line: 3027, column: 14, scope: !6914)
!6940 = !DILocation(line: 3027, column: 55, scope: !6914)
!6941 = !DILocation(line: 3028, column: 11, scope: !6914)
!6942 = !DILocation(line: 3028, column: 14, scope: !6914)
!6943 = !DILocation(line: 3025, column: 11, scope: !6915)
!6944 = !DILocation(line: 3037, column: 15, scope: !6913)
!6945 = !DILocation(line: 0, scope: !6913)
!6946 = !DILocation(line: 3038, column: 15, scope: !6913)
!6947 = !DILocation(line: 3039, column: 15, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3039, column: 15)
!6949 = !DILocation(line: 3039, column: 15, scope: !6913)
!6950 = !DILocation(line: 3041, column: 15, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 3040, column: 13)
!6952 = !DILocation(line: 3042, column: 15, scope: !6951)
!6953 = !DILocation(line: 3047, column: 3, scope: !6904)
!6954 = !DILocation(line: 3048, column: 1, scope: !6904)
!6955 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !583, file: !583, line: 2591, type: !6127, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6956)
!6956 = !{!6957}
!6957 = !DILocalVariable(name: "gs", arg: 1, scope: !6955, file: !583, line: 2591, type: !4195)
!6958 = !DILocation(line: 0, scope: !6955)
!6959 = !DILocation(line: 2594, column: 14, scope: !6955)
!6960 = !DILocation(line: 2594, column: 25, scope: !6955)
!6961 = !DILocation(line: 2594, column: 10, scope: !6955)
!6962 = !DILocation(line: 2594, column: 3, scope: !6955)
!6963 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !583, file: !583, line: 2652, type: !4696, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6964)
!6964 = !{!6965, !6966}
!6965 = !DILocalVariable(name: "gs", arg: 1, scope: !6963, file: !583, line: 2652, type: !4195)
!6966 = !DILocalVariable(name: "index", arg: 2, scope: !6963, file: !583, line: 2652, type: !7)
!6967 = !DILocation(line: 0, scope: !6963)
!6968 = !DILocation(line: 2655, column: 3, scope: !6963)
!6969 = !DILocation(line: 2656, column: 48, scope: !6963)
!6970 = !DILocation(line: 2656, column: 33, scope: !6963)
!6971 = !DILocation(line: 2656, column: 31, scope: !6963)
!6972 = !DILocation(line: 2656, column: 10, scope: !6963)
!6973 = !DILocation(line: 2656, column: 3, scope: !6963)
!6974 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !583, file: !583, line: 2581, type: !6127, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6975)
!6975 = !{!6976}
!6976 = !DILocalVariable(name: "gs", arg: 1, scope: !6974, file: !583, line: 2581, type: !4195)
!6977 = !DILocation(line: 0, scope: !6974)
!6978 = !DILocation(line: 2584, column: 25, scope: !6974)
!6979 = !DILocation(line: 2584, column: 10, scope: !6974)
!6980 = !DILocation(line: 2584, column: 3, scope: !6974)
!6981 = distinct !DISubprogram(name: "gimple_asm_input_op", scope: !583, file: !583, line: 2619, type: !4696, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6982)
!6982 = !{!6983, !6984}
!6983 = !DILocalVariable(name: "gs", arg: 1, scope: !6981, file: !583, line: 2619, type: !4195)
!6984 = !DILocalVariable(name: "index", arg: 2, scope: !6981, file: !583, line: 2619, type: !7)
!6985 = !DILocation(line: 0, scope: !6981)
!6986 = !DILocation(line: 2622, column: 3, scope: !6981)
!6987 = !DILocation(line: 2623, column: 10, scope: !6981)
!6988 = !DILocation(line: 2623, column: 3, scope: !6981)
!6989 = distinct !DISubprogram(name: "maybe_fold_stmt_indirect", scope: !3, file: !3, line: 2163, type: !6990, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6992)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!1456, !1456, !1456, !1456}
!6992 = !{!6993, !6994, !6995, !6996, !6997, !6998, !6999, !7002}
!6993 = !DILocalVariable(name: "expr", arg: 1, scope: !6989, file: !3, line: 2163, type: !1456)
!6994 = !DILocalVariable(name: "base", arg: 2, scope: !6989, file: !3, line: 2163, type: !1456)
!6995 = !DILocalVariable(name: "offset", arg: 3, scope: !6989, file: !3, line: 2163, type: !1456)
!6996 = !DILocalVariable(name: "t", scope: !6989, file: !3, line: 2165, type: !1456)
!6997 = !DILocalVariable(name: "volatile_p", scope: !6989, file: !3, line: 2166, type: !1407)
!6998 = !DILocalVariable(name: "loc", scope: !6989, file: !3, line: 2167, type: !1540)
!6999 = !DILocalVariable(name: "offset2", scope: !7000, file: !3, line: 2184, type: !1456)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2183, column: 5)
!7001 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 2182, column: 7)
!7002 = !DILocalVariable(name: "base_addr", scope: !7003, file: !3, line: 2197, type: !1456)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2196, column: 5)
!7004 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 2195, column: 7)
!7005 = !DILocation(line: 0, scope: !6989)
!7006 = !DILocation(line: 2166, column: 21, scope: !6989)
!7007 = !DILocation(line: 2167, column: 20, scope: !6989)
!7008 = !DILocation(line: 2172, column: 10, scope: !6989)
!7009 = !DILocation(line: 2173, column: 3, scope: !6989)
!7010 = distinct !{!7010, !7009, !7009}
!7011 = !DILocation(line: 2174, column: 3, scope: !6989)
!7012 = !DILocation(line: 2174, column: 26, scope: !6989)
!7013 = !DILocation(line: 2177, column: 7, scope: !6989)
!7014 = !DILocation(line: 2178, column: 7, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 2178, column: 7)
!7016 = !DILocation(line: 2178, column: 7, scope: !6989)
!7017 = !DILocation(line: 2182, column: 7, scope: !7001)
!7018 = !DILocation(line: 2182, column: 24, scope: !7001)
!7019 = !DILocation(line: 2182, column: 7, scope: !6989)
!7020 = !DILocation(line: 2186, column: 17, scope: !7000)
!7021 = !DILocation(line: 0, scope: !7000)
!7022 = !DILocation(line: 2187, column: 11, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 2187, column: 11)
!7024 = !DILocation(line: 2187, column: 31, scope: !7023)
!7025 = !DILocation(line: 2187, column: 11, scope: !7000)
!7026 = !DILocation(line: 2189, column: 14, scope: !7000)
!7027 = !DILocation(line: 2191, column: 16, scope: !7000)
!7028 = !DILocation(line: 2193, column: 5, scope: !7001)
!7029 = !DILocation(line: 0, scope: !7004)
!7030 = !DILocation(line: 2195, column: 7, scope: !7004)
!7031 = !DILocation(line: 2172, column: 8, scope: !6989)
!7032 = !DILocation(line: 2195, column: 24, scope: !7004)
!7033 = !DILocation(line: 2195, column: 7, scope: !6989)
!7034 = !DILocation(line: 0, scope: !7003)
!7035 = !DILocation(line: 2200, column: 14, scope: !7003)
!7036 = !DILocation(line: 2203, column: 11, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 2203, column: 11)
!7038 = !DILocation(line: 2203, column: 28, scope: !7037)
!7039 = !DILocation(line: 2204, column: 4, scope: !7037)
!7040 = !DILocation(line: 2204, column: 32, scope: !7037)
!7041 = !DILocation(line: 2204, column: 7, scope: !7037)
!7042 = !DILocation(line: 2203, column: 11, scope: !7003)
!7043 = !DILocation(line: 2205, column: 9, scope: !7037)
!7044 = !DILocation(line: 2205, column: 2, scope: !7037)
!7045 = !DILocation(line: 2208, column: 11, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 2208, column: 11)
!7047 = !DILocation(line: 2208, column: 11, scope: !7003)
!7048 = !DILocation(line: 2213, column: 8, scope: !7003)
!7049 = !DILocation(line: 2212, column: 11, scope: !7003)
!7050 = !DILocation(line: 2214, column: 11, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 2214, column: 11)
!7052 = !DILocation(line: 2214, column: 11, scope: !7003)
!7053 = !DILocation(line: 2219, column: 9, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2219, column: 8)
!7055 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 2215, column: 2)
!7056 = !DILocation(line: 2219, column: 8, scope: !7055)
!7057 = !DILocation(line: 2220, column: 29, scope: !7054)
!7058 = !DILocation(line: 2220, column: 6, scope: !7054)
!7059 = !DILocation(line: 2234, column: 7, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2225, column: 5)
!7061 = !DILocation(line: 2235, column: 11, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 2235, column: 11)
!7063 = !DILocation(line: 2235, column: 25, scope: !7062)
!7064 = !DILocation(line: 2236, column: 4, scope: !7062)
!7065 = !DILocation(line: 2236, column: 7, scope: !7062)
!7066 = !DILocation(line: 2236, column: 39, scope: !7062)
!7067 = !DILocation(line: 2235, column: 11, scope: !7060)
!7068 = !DILocation(line: 2245, column: 11, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2237, column: 2)
!7070 = !DILocation(line: 2245, column: 4, scope: !7069)
!7071 = !DILocation(line: 2249, column: 11, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 2249, column: 11)
!7073 = !DILocation(line: 2249, column: 11, scope: !7060)
!7074 = !DILocation(line: 2252, column: 19, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 2250, column: 2)
!7076 = !DILocation(line: 2251, column: 15, scope: !7075)
!7077 = !DILocation(line: 2253, column: 8, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2253, column: 8)
!7079 = !DILocation(line: 2253, column: 8, scope: !7075)
!7080 = !DILocation(line: 2259, column: 3, scope: !6989)
!7081 = !DILocation(line: 2260, column: 1, scope: !6989)
!7082 = distinct !DISubprogram(name: "ccp_fold_builtin", scope: !3, file: !3, line: 2583, type: !5695, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7083)
!7083 = !{!7084, !7085, !7086, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096}
!7084 = !DILocalVariable(name: "stmt", arg: 1, scope: !7082, file: !3, line: 2583, type: !1739)
!7085 = !DILocalVariable(name: "result", scope: !7082, file: !3, line: 2585, type: !1456)
!7086 = !DILocalVariable(name: "val", scope: !7082, file: !3, line: 2585, type: !7087)
!7087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 192, elements: !1489)
!7088 = !DILocalVariable(name: "callee", scope: !7082, file: !3, line: 2586, type: !1456)
!7089 = !DILocalVariable(name: "a", scope: !7082, file: !3, line: 2586, type: !1456)
!7090 = !DILocalVariable(name: "arg_idx", scope: !7082, file: !3, line: 2587, type: !1408)
!7091 = !DILocalVariable(name: "type", scope: !7082, file: !3, line: 2587, type: !1408)
!7092 = !DILocalVariable(name: "visited", scope: !7082, file: !3, line: 2588, type: !2288)
!7093 = !DILocalVariable(name: "ignore", scope: !7082, file: !3, line: 2589, type: !1407)
!7094 = !DILocalVariable(name: "nargs", scope: !7082, file: !3, line: 2590, type: !1408)
!7095 = !DILocalVariable(name: "loc", scope: !7082, file: !3, line: 2591, type: !1540)
!7096 = !DILocalVariable(name: "new_val", scope: !7097, file: !3, line: 2674, type: !1456)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 2673, column: 2)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2672, column: 11)
!7099 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2670, column: 5)
!7100 = !DILocation(line: 0, scope: !7082)
!7101 = !DILocation(line: 2585, column: 3, scope: !7082)
!7102 = !DILocation(line: 2585, column: 16, scope: !7082)
!7103 = !DILocation(line: 2591, column: 20, scope: !7082)
!7104 = !DILocation(line: 2593, column: 3, scope: !7082)
!7105 = !DILocation(line: 2595, column: 13, scope: !7082)
!7106 = !DILocation(line: 2595, column: 36, scope: !7082)
!7107 = !DILocation(line: 2595, column: 12, scope: !7082)
!7108 = !DILocation(line: 2599, column: 12, scope: !7082)
!7109 = !DILocation(line: 2600, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2600, column: 7)
!7111 = !DILocation(line: 2600, column: 7, scope: !7082)
!7112 = !DILocation(line: 2602, column: 11, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 2601, column: 5)
!7114 = !DILocation(line: 2603, column: 2, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 2602, column: 11)
!7116 = !DILocation(line: 2608, column: 12, scope: !7082)
!7117 = !DILocation(line: 2609, column: 7, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2609, column: 7)
!7119 = !DILocation(line: 2609, column: 36, scope: !7118)
!7120 = !DILocation(line: 2609, column: 7, scope: !7082)
!7121 = !DILocation(line: 2614, column: 11, scope: !7082)
!7122 = !DILocation(line: 2615, column: 13, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2615, column: 7)
!7124 = !DILocation(line: 2615, column: 7, scope: !7082)
!7125 = !DILocation(line: 2619, column: 11, scope: !7082)
!7126 = !DILocation(line: 2619, column: 3, scope: !7082)
!7127 = !DILocation(line: 2631, column: 7, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2620, column: 5)
!7129 = !DILocation(line: 2639, column: 7, scope: !7128)
!7130 = !DILocation(line: 2644, column: 7, scope: !7128)
!7131 = !DILocation(line: 2649, column: 7, scope: !7128)
!7132 = !DILocation(line: 0, scope: !7128)
!7133 = !DILocation(line: 2654, column: 15, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2654, column: 7)
!7135 = !DILocation(line: 2654, column: 7, scope: !7082)
!7136 = !DILocation(line: 2658, column: 13, scope: !7082)
!7137 = !DILocation(line: 2659, column: 3, scope: !7082)
!7138 = !DILocation(line: 2661, column: 3, scope: !7082)
!7139 = !DILocation(line: 2662, column: 7, scope: !7082)
!7140 = !DILocation(line: 2663, column: 31, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2663, column: 7)
!7142 = !DILocation(line: 2663, column: 8, scope: !7141)
!7143 = !DILocation(line: 2663, column: 7, scope: !7082)
!7144 = !DILocation(line: 2664, column: 18, scope: !7141)
!7145 = !DILocation(line: 2664, column: 5, scope: !7141)
!7146 = !DILocation(line: 2666, column: 3, scope: !7082)
!7147 = !DILocation(line: 2669, column: 11, scope: !7082)
!7148 = !DILocation(line: 2669, column: 3, scope: !7082)
!7149 = !DILocation(line: 2672, column: 11, scope: !7098)
!7150 = !DILocation(line: 2672, column: 27, scope: !7098)
!7151 = !DILocation(line: 2672, column: 18, scope: !7098)
!7152 = !DILocation(line: 2675, column: 15, scope: !7097)
!7153 = !DILocation(line: 0, scope: !7097)
!7154 = !DILocation(line: 2679, column: 8, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 2679, column: 8)
!7156 = !DILocation(line: 2680, column: 8, scope: !7155)
!7157 = !DILocation(line: 2680, column: 12, scope: !7155)
!7158 = !DILocation(line: 2681, column: 5, scope: !7155)
!7159 = !DILocation(line: 2681, column: 23, scope: !7155)
!7160 = !DILocation(line: 2681, column: 8, scope: !7155)
!7161 = !DILocation(line: 2679, column: 8, scope: !7097)
!7162 = !DILocation(line: 2683, column: 2, scope: !7098)
!7163 = !DILocation(line: 2687, column: 11, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2687, column: 11)
!7165 = !DILocation(line: 2687, column: 18, scope: !7164)
!7166 = !DILocation(line: 2687, column: 21, scope: !7164)
!7167 = !DILocation(line: 2687, column: 53, scope: !7164)
!7168 = !DILocation(line: 2687, column: 44, scope: !7164)
!7169 = !DILocation(line: 2689, column: 39, scope: !7164)
!7170 = !DILocation(line: 2690, column: 39, scope: !7164)
!7171 = !DILocation(line: 2691, column: 11, scope: !7164)
!7172 = !DILocation(line: 2688, column: 11, scope: !7164)
!7173 = !DILocation(line: 2688, column: 2, scope: !7164)
!7174 = !DILocation(line: 2695, column: 11, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2695, column: 11)
!7176 = !DILocation(line: 2695, column: 18, scope: !7175)
!7177 = !DILocation(line: 2695, column: 21, scope: !7175)
!7178 = !DILocation(line: 2695, column: 53, scope: !7175)
!7179 = !DILocation(line: 2695, column: 44, scope: !7175)
!7180 = !DILocation(line: 2697, column: 40, scope: !7175)
!7181 = !DILocation(line: 2698, column: 40, scope: !7175)
!7182 = !DILocation(line: 2699, column: 40, scope: !7175)
!7183 = !DILocation(line: 2700, column: 12, scope: !7175)
!7184 = !DILocation(line: 2696, column: 11, scope: !7175)
!7185 = !DILocation(line: 2696, column: 2, scope: !7175)
!7186 = !DILocation(line: 2704, column: 17, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2704, column: 11)
!7188 = !DILocation(line: 2704, column: 11, scope: !7099)
!7189 = !DILocation(line: 2705, column: 36, scope: !7187)
!7190 = !DILocation(line: 2706, column: 10, scope: !7187)
!7191 = !DILocation(line: 2707, column: 25, scope: !7187)
!7192 = !DILocation(line: 2705, column: 11, scope: !7187)
!7193 = !DILocation(line: 2705, column: 2, scope: !7187)
!7194 = !DILocation(line: 2711, column: 17, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2711, column: 11)
!7196 = !DILocation(line: 2711, column: 11, scope: !7099)
!7197 = !DILocation(line: 2712, column: 36, scope: !7195)
!7198 = !DILocation(line: 2713, column: 10, scope: !7195)
!7199 = !DILocation(line: 2714, column: 24, scope: !7195)
!7200 = !DILocation(line: 2712, column: 11, scope: !7195)
!7201 = !DILocation(line: 2712, column: 2, scope: !7195)
!7202 = !DILocation(line: 2721, column: 11, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2721, column: 11)
!7204 = !DILocation(line: 2721, column: 18, scope: !7203)
!7205 = !DILocation(line: 2721, column: 21, scope: !7203)
!7206 = !DILocation(line: 2721, column: 53, scope: !7203)
!7207 = !DILocation(line: 2721, column: 44, scope: !7203)
!7208 = !DILocation(line: 2723, column: 43, scope: !7203)
!7209 = !DILocation(line: 2724, column: 43, scope: !7203)
!7210 = !DILocation(line: 2725, column: 43, scope: !7203)
!7211 = !DILocation(line: 2726, column: 43, scope: !7203)
!7212 = !DILocation(line: 2727, column: 8, scope: !7203)
!7213 = !DILocation(line: 2728, column: 8, scope: !7203)
!7214 = !DILocation(line: 2722, column: 11, scope: !7203)
!7215 = !DILocation(line: 2722, column: 2, scope: !7203)
!7216 = !DILocation(line: 2733, column: 11, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2733, column: 11)
!7218 = !DILocation(line: 2733, column: 18, scope: !7217)
!7219 = !DILocation(line: 2733, column: 21, scope: !7217)
!7220 = !DILocation(line: 2733, column: 53, scope: !7217)
!7221 = !DILocation(line: 2733, column: 44, scope: !7217)
!7222 = !DILocation(line: 2735, column: 43, scope: !7217)
!7223 = !DILocation(line: 2736, column: 43, scope: !7217)
!7224 = !DILocation(line: 2737, column: 43, scope: !7217)
!7225 = !DILocation(line: 2738, column: 8, scope: !7217)
!7226 = !DILocation(line: 2739, column: 8, scope: !7217)
!7227 = !DILocation(line: 2734, column: 11, scope: !7217)
!7228 = !DILocation(line: 2734, column: 2, scope: !7217)
!7229 = !DILocation(line: 2743, column: 11, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2743, column: 11)
!7231 = !DILocation(line: 2743, column: 18, scope: !7230)
!7232 = !DILocation(line: 2743, column: 21, scope: !7230)
!7233 = !DILocation(line: 2743, column: 53, scope: !7230)
!7234 = !DILocation(line: 2743, column: 44, scope: !7230)
!7235 = !DILocation(line: 2744, column: 42, scope: !7230)
!7236 = !DILocation(line: 2745, column: 44, scope: !7230)
!7237 = !DILocation(line: 2746, column: 44, scope: !7230)
!7238 = !DILocation(line: 2747, column: 44, scope: !7230)
!7239 = !DILocation(line: 2748, column: 9, scope: !7230)
!7240 = !DILocation(line: 2744, column: 11, scope: !7230)
!7241 = !DILocation(line: 2744, column: 2, scope: !7230)
!7242 = !DILocation(line: 2753, column: 11, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2753, column: 11)
!7244 = !DILocation(line: 2753, column: 18, scope: !7243)
!7245 = !DILocation(line: 2753, column: 21, scope: !7243)
!7246 = !DILocation(line: 2753, column: 11, scope: !7099)
!7247 = !DILocation(line: 2754, column: 51, scope: !7243)
!7248 = !DILocation(line: 2755, column: 52, scope: !7243)
!7249 = !DILocation(line: 2754, column: 11, scope: !7243)
!7250 = !DILocation(line: 2754, column: 2, scope: !7243)
!7251 = !DILocation(line: 2759, column: 7, scope: !7099)
!7252 = !DILocation(line: 2760, column: 5, scope: !7099)
!7253 = !DILocation(line: 2762, column: 7, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2762, column: 7)
!7255 = !DILocation(line: 2762, column: 14, scope: !7254)
!7256 = !DILocation(line: 2763, column: 14, scope: !7254)
!7257 = !DILocation(line: 2763, column: 5, scope: !7254)
!7258 = !DILocation(line: 2765, column: 1, scope: !7082)
!7259 = distinct !DISubprogram(name: "gimplify_and_update_call_from_tree", scope: !3, file: !3, line: 3355, type: !7260, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7262)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !4240, !1456}
!7262 = !{!7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271}
!7263 = !DILocalVariable(name: "si_p", arg: 1, scope: !7259, file: !3, line: 3355, type: !4240)
!7264 = !DILocalVariable(name: "expr", arg: 2, scope: !7259, file: !3, line: 3355, type: !1456)
!7265 = !DILocalVariable(name: "lhs", scope: !7259, file: !3, line: 3357, type: !1456)
!7266 = !DILocalVariable(name: "tmp", scope: !7259, file: !3, line: 3358, type: !1456)
!7267 = !DILocalVariable(name: "stmt", scope: !7259, file: !3, line: 3359, type: !1739)
!7268 = !DILocalVariable(name: "new_stmt", scope: !7259, file: !3, line: 3359, type: !1739)
!7269 = !DILocalVariable(name: "i", scope: !7259, file: !3, line: 3360, type: !4241)
!7270 = !DILocalVariable(name: "stmts", scope: !7259, file: !3, line: 3361, type: !1729)
!7271 = !DILocalVariable(name: "gctx", scope: !7259, file: !3, line: 3362, type: !7272)
!7272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimplify_ctx", file: !583, line: 980, size: 576, elements: !7273)
!7273 = !{!7274, !7276, !7282, !7283, !7284, !7285, !7286, !7292, !7293, !7294, !7295, !7296}
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "prev_context", scope: !7272, file: !583, line: 982, baseType: !7275, size: 64)
!7275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7272, size: 64)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "bind_expr_stack", scope: !7272, file: !583, line: 984, baseType: !7277, size: 64, offset: 64)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 64)
!7278 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !583, line: 34, baseType: !7279)
!7279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !583, line: 34, size: 128, elements: !7280)
!7280 = !{!7281}
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7279, file: !583, line: 34, baseType: !2257, size: 128)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "temps", scope: !7272, file: !583, line: 985, baseType: !1456, size: 64, offset: 128)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "conditional_cleanups", scope: !7272, file: !583, line: 986, baseType: !1729, size: 64, offset: 192)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "exit_label", scope: !7272, file: !583, line: 987, baseType: !1456, size: 64, offset: 256)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "return_temp", scope: !7272, file: !583, line: 988, baseType: !1456, size: 64, offset: 320)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "case_labels", scope: !7272, file: !583, line: 990, baseType: !7287, size: 64, offset: 384)
!7287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7288, size: 64)
!7288 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !7289)
!7289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !7290)
!7290 = !{!7291}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7289, file: !135, line: 184, baseType: !2270, size: 128)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "temp_htab", scope: !7272, file: !583, line: 992, baseType: !2204, size: 64, offset: 448)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !7272, file: !583, line: 994, baseType: !1408, size: 32, offset: 512)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "save_stack", scope: !7272, file: !583, line: 995, baseType: !1407, size: 8, offset: 544)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "into_ssa", scope: !7272, file: !583, line: 996, baseType: !1407, size: 8, offset: 552)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rhs_cond_expr", scope: !7272, file: !583, line: 997, baseType: !1407, size: 8, offset: 560)
!7297 = !DILocation(line: 0, scope: !7259)
!7298 = !DILocation(line: 3360, column: 3, scope: !7259)
!7299 = !DILocation(line: 3361, column: 3, scope: !7259)
!7300 = !DILocation(line: 3361, column: 22, scope: !7259)
!7301 = !DILocation(line: 3361, column: 14, scope: !7259)
!7302 = !DILocation(line: 3362, column: 3, scope: !7259)
!7303 = !DILocation(line: 3364, column: 10, scope: !7259)
!7304 = !DILocation(line: 3366, column: 3, scope: !7259)
!7305 = !DILocation(line: 3368, column: 9, scope: !7259)
!7306 = !DILocation(line: 3370, column: 3, scope: !7259)
!7307 = !DILocation(line: 3372, column: 11, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3372, column: 7)
!7309 = !DILocation(line: 3372, column: 7, scope: !7259)
!7310 = !DILocation(line: 3373, column: 5, scope: !7308)
!7311 = !DILocation(line: 3375, column: 11, scope: !7308)
!7312 = !DILocation(line: 3377, column: 3, scope: !7259)
!7313 = !DILocation(line: 3379, column: 7, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3379, column: 7)
!7315 = !DILocation(line: 3379, column: 7, scope: !7259)
!7316 = !DILocation(line: 3380, column: 33, scope: !7314)
!7317 = !DILocation(line: 3380, column: 40, scope: !7314)
!7318 = !DILocation(line: 3380, column: 5, scope: !7314)
!7319 = !DILocation(line: 3383, column: 12, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3383, column: 3)
!7321 = !DILocation(line: 3383, column: 23, scope: !7320)
!7322 = !DILocation(line: 3383, column: 8, scope: !7320)
!7323 = !DILocation(line: 3383, column: 32, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 3383, column: 3)
!7325 = !DILocation(line: 3383, column: 31, scope: !7324)
!7326 = !DILocation(line: 3383, column: 3, scope: !7320)
!7327 = !DILocation(line: 3385, column: 16, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 3384, column: 3)
!7329 = !DILocation(line: 3386, column: 5, scope: !7328)
!7330 = !DILocation(line: 3387, column: 5, scope: !7328)
!7331 = !DILocation(line: 3388, column: 5, scope: !7328)
!7332 = !DILocation(line: 3389, column: 5, scope: !7328)
!7333 = !DILocation(line: 3383, column: 47, scope: !7324)
!7334 = !DILocation(line: 3383, column: 3, scope: !7324)
!7335 = distinct !{!7335, !7326, !7336}
!7336 = !DILocation(line: 3390, column: 3, scope: !7320)
!7337 = !DILocation(line: 3392, column: 7, scope: !7259)
!7338 = !DILocation(line: 3394, column: 18, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3393, column: 5)
!7340 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3392, column: 7)
!7341 = !DILocation(line: 3395, column: 7, scope: !7339)
!7342 = !DILocation(line: 3396, column: 7, scope: !7339)
!7343 = !DILocation(line: 3397, column: 5, scope: !7339)
!7344 = !DILocation(line: 3400, column: 18, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3399, column: 5)
!7346 = !DILocation(line: 3401, column: 34, scope: !7345)
!7347 = !DILocation(line: 3401, column: 7, scope: !7345)
!7348 = !DILocation(line: 3402, column: 34, scope: !7345)
!7349 = !DILocation(line: 3402, column: 7, scope: !7345)
!7350 = !DILocation(line: 3403, column: 7, scope: !7345)
!7351 = !DILocation(line: 0, scope: !7340)
!7352 = !DILocation(line: 3406, column: 34, scope: !7259)
!7353 = !DILocation(line: 3406, column: 3, scope: !7259)
!7354 = !DILocation(line: 3407, column: 3, scope: !7259)
!7355 = !DILocation(line: 3408, column: 1, scope: !7259)
!7356 = distinct !DISubprogram(name: "gimple_call_set_fn", scope: !583, file: !583, line: 1932, type: !6514, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7357)
!7357 = !{!7358, !7359}
!7358 = !DILocalVariable(name: "gs", arg: 1, scope: !7356, file: !583, line: 1932, type: !1739)
!7359 = !DILocalVariable(name: "fn", arg: 2, scope: !7356, file: !583, line: 1932, type: !1456)
!7360 = !DILocation(line: 0, scope: !7356)
!7361 = !DILocation(line: 1935, column: 3, scope: !7356)
!7362 = !DILocation(line: 1936, column: 1, scope: !7356)
!7363 = distinct !DISubprogram(name: "get_maxval_strlen", scope: !3, file: !3, line: 2468, type: !7364, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7366)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!1407, !1456, !1773, !2288, !1408}
!7366 = !{!7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7380, !7384, !7386}
!7367 = !DILocalVariable(name: "arg", arg: 1, scope: !7363, file: !3, line: 2468, type: !1456)
!7368 = !DILocalVariable(name: "length", arg: 2, scope: !7363, file: !3, line: 2468, type: !1773)
!7369 = !DILocalVariable(name: "visited", arg: 3, scope: !7363, file: !3, line: 2468, type: !2288)
!7370 = !DILocalVariable(name: "type", arg: 4, scope: !7363, file: !3, line: 2468, type: !1408)
!7371 = !DILocalVariable(name: "var", scope: !7363, file: !3, line: 2470, type: !1456)
!7372 = !DILocalVariable(name: "val", scope: !7363, file: !3, line: 2470, type: !1456)
!7373 = !DILocalVariable(name: "def_stmt", scope: !7363, file: !3, line: 2471, type: !1739)
!7374 = !DILocalVariable(name: "aop0", scope: !7375, file: !3, line: 2483, type: !1456)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 2482, column: 2)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 2479, column: 16)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2475, column: 11)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2474, column: 5)
!7379 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 2473, column: 7)
!7380 = !DILocalVariable(name: "rhs", scope: !7381, file: !3, line: 2539, type: !1456)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 2538, column: 11)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2536, column: 13)
!7383 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 2531, column: 5)
!7384 = !DILocalVariable(name: "i", scope: !7385, file: !3, line: 2548, type: !7)
!7385 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2545, column: 2)
!7386 = !DILocalVariable(name: "arg", scope: !7387, file: !3, line: 2552, type: !1456)
!7387 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2551, column: 11)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 2550, column: 4)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 2550, column: 4)
!7390 = !DILocation(line: 2540, column: 20, scope: !7381)
!7391 = !DILocation(line: 0, scope: !7363)
!7392 = !DILocation(line: 2473, column: 7, scope: !7379)
!7393 = !DILocation(line: 2473, column: 23, scope: !7379)
!7394 = !DILocation(line: 2473, column: 7, scope: !7363)
!7395 = !DILocation(line: 2475, column: 27, scope: !7377)
!7396 = !DILocation(line: 2475, column: 11, scope: !7378)
!7397 = !DILocation(line: 2476, column: 35, scope: !7377)
!7398 = !DILocation(line: 2476, column: 16, scope: !7377)
!7399 = !DILocation(line: 2477, column: 16, scope: !7377)
!7400 = !DILocation(line: 2477, column: 38, scope: !7377)
!7401 = !DILocation(line: 2477, column: 19, scope: !7377)
!7402 = !DILocation(line: 2476, column: 9, scope: !7377)
!7403 = !DILocation(line: 2479, column: 32, scope: !7376)
!7404 = !DILocation(line: 2480, column: 9, scope: !7376)
!7405 = !DILocation(line: 2480, column: 12, scope: !7376)
!7406 = !DILocation(line: 2480, column: 46, scope: !7376)
!7407 = !DILocation(line: 2481, column: 9, scope: !7376)
!7408 = !DILocation(line: 2481, column: 27, scope: !7376)
!7409 = !DILocation(line: 2481, column: 12, scope: !7376)
!7410 = !DILocation(line: 2479, column: 16, scope: !7377)
!7411 = !DILocation(line: 2483, column: 16, scope: !7375)
!7412 = !DILocation(line: 0, scope: !7375)
!7413 = !DILocation(line: 2484, column: 8, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 2484, column: 8)
!7415 = !DILocation(line: 2484, column: 25, scope: !7414)
!7416 = !DILocation(line: 2485, column: 8, scope: !7414)
!7417 = !DILocation(line: 2485, column: 11, scope: !7414)
!7418 = !DILocation(line: 2485, column: 46, scope: !7414)
!7419 = !DILocation(line: 2484, column: 8, scope: !7375)
!7420 = !DILocation(line: 2486, column: 13, scope: !7414)
!7421 = !DILocation(line: 2486, column: 6, scope: !7414)
!7422 = !DILocation(line: 2490, column: 16, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2490, column: 11)
!7424 = !DILocation(line: 2490, column: 11, scope: !7378)
!7425 = !DILocation(line: 2493, column: 8, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 2493, column: 8)
!7427 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 2491, column: 2)
!7428 = !DILocation(line: 2493, column: 24, scope: !7426)
!7429 = !DILocation(line: 2494, column: 8, scope: !7426)
!7430 = !DILocation(line: 2494, column: 11, scope: !7426)
!7431 = !DILocation(line: 2494, column: 34, scope: !7426)
!7432 = !DILocation(line: 2493, column: 8, scope: !7427)
!7433 = !DILocation(line: 2498, column: 8, scope: !7423)
!7434 = !DILocation(line: 0, scope: !7423)
!7435 = !DILocation(line: 2499, column: 12, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2499, column: 11)
!7437 = !DILocation(line: 2499, column: 11, scope: !7378)
!7438 = !DILocation(line: 2502, column: 11, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2502, column: 11)
!7440 = !DILocation(line: 2502, column: 11, scope: !7378)
!7441 = !DILocation(line: 2504, column: 13, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 2504, column: 8)
!7443 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2503, column: 2)
!7444 = !DILocation(line: 2504, column: 8, scope: !7443)
!7445 = !DILocation(line: 2506, column: 12, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2506, column: 12)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 2505, column: 6)
!7448 = !DILocation(line: 2506, column: 32, scope: !7446)
!7449 = !DILocation(line: 2507, column: 5, scope: !7446)
!7450 = !DILocation(line: 2507, column: 8, scope: !7446)
!7451 = !DILocation(line: 2507, column: 24, scope: !7446)
!7452 = !DILocation(line: 2506, column: 12, scope: !7447)
!7453 = !DILocation(line: 2510, column: 12, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2510, column: 12)
!7455 = !DILocation(line: 2510, column: 12, scope: !7447)
!7456 = !DILocation(line: 2511, column: 11, scope: !7454)
!7457 = !DILocation(line: 2511, column: 3, scope: !7454)
!7458 = !DILocation(line: 2514, column: 13, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 2514, column: 13)
!7460 = !DILocation(line: 2514, column: 45, scope: !7459)
!7461 = !DILocation(line: 2514, column: 13, scope: !7442)
!7462 = !DILocation(line: 2518, column: 15, scope: !7378)
!7463 = !DILocation(line: 2519, column: 7, scope: !7378)
!7464 = !DILocation(line: 2523, column: 30, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 2523, column: 7)
!7466 = !DILocation(line: 2523, column: 7, scope: !7465)
!7467 = !DILocation(line: 2523, column: 7, scope: !7363)
!7468 = !DILocation(line: 2525, column: 28, scope: !7363)
!7469 = !DILocation(line: 2525, column: 3, scope: !7363)
!7470 = !DILocation(line: 2528, column: 14, scope: !7363)
!7471 = !DILocation(line: 2530, column: 11, scope: !7363)
!7472 = !DILocation(line: 2530, column: 3, scope: !7363)
!7473 = !DILocation(line: 2550, column: 4, scope: !7389)
!7474 = !DILocation(line: 2536, column: 13, scope: !7382)
!7475 = !DILocation(line: 2537, column: 13, scope: !7382)
!7476 = !DILocation(line: 2537, column: 16, scope: !7382)
!7477 = !DILocation(line: 2536, column: 13, scope: !7383)
!7478 = !DILocation(line: 2539, column: 24, scope: !7381)
!7479 = !DILocation(line: 0, scope: !7381)
!7480 = !DILocation(line: 0, scope: !7389)
!7481 = !DILocation(line: 0, scope: !7385)
!7482 = !DILocation(line: 2550, column: 20, scope: !7388)
!7483 = !DILocation(line: 2550, column: 18, scope: !7388)
!7484 = !DILocation(line: 2552, column: 24, scope: !7387)
!7485 = !DILocation(line: 2552, column: 54, scope: !7387)
!7486 = !DILocation(line: 0, scope: !7387)
!7487 = !DILocation(line: 2560, column: 24, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2560, column: 17)
!7489 = !DILocation(line: 2560, column: 21, scope: !7488)
!7490 = !DILocation(line: 2560, column: 17, scope: !7387)
!7491 = !DILocation(line: 2563, column: 18, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2563, column: 17)
!7493 = !DILocation(line: 0, scope: !7388)
!7494 = !DILocation(line: 2550, column: 53, scope: !7388)
!7495 = !DILocation(line: 2550, column: 4, scope: !7388)
!7496 = distinct !{!7496, !7473, !7497}
!7497 = !DILocation(line: 2565, column: 11, scope: !7389)
!7498 = !DILocation(line: 2572, column: 1, scope: !7363)
!7499 = distinct !DISubprogram(name: "gimple_has_location", scope: !583, file: !583, line: 1165, type: !4193, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7500)
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "g", arg: 1, scope: !7499, file: !583, line: 1165, type: !4195)
!7502 = !DILocation(line: 0, scope: !7499)
!7503 = !DILocation(line: 1167, column: 10, scope: !7499)
!7504 = !DILocation(line: 1167, column: 30, scope: !7499)
!7505 = !DILocation(line: 1167, column: 3, scope: !7499)
!7506 = distinct !DISubprogram(name: "gsi_start", scope: !583, file: !583, line: 4403, type: !7507, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7509)
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!4241, !1729}
!7509 = !{!7510, !7511}
!7510 = !DILocalVariable(name: "seq", arg: 1, scope: !7506, file: !583, line: 4403, type: !1729)
!7511 = !DILocalVariable(name: "i", scope: !7506, file: !583, line: 4405, type: !4241)
!7512 = !DILocation(line: 0, scope: !7506)
!7513 = !DILocation(line: 4405, column: 24, scope: !7506)
!7514 = !DILocation(line: 4407, column: 11, scope: !7506)
!7515 = !DILocation(line: 4407, column: 5, scope: !7506)
!7516 = !DILocation(line: 4407, column: 9, scope: !7506)
!7517 = !DILocation(line: 4408, column: 5, scope: !7506)
!7518 = !DILocation(line: 4408, column: 9, scope: !7506)
!7519 = !DILocation(line: 4409, column: 11, scope: !7506)
!7520 = !DILocation(line: 4409, column: 17, scope: !7506)
!7521 = !DILocation(line: 4409, column: 27, scope: !7506)
!7522 = !DILocation(line: 4409, column: 20, scope: !7506)
!7523 = !DILocation(line: 4409, column: 10, scope: !7506)
!7524 = !DILocation(line: 4409, column: 35, scope: !7506)
!7525 = !DILocation(line: 4409, column: 5, scope: !7506)
!7526 = !DILocation(line: 4409, column: 8, scope: !7506)
!7527 = !DILocation(line: 4411, column: 3, scope: !7506)
!7528 = distinct !DISubprogram(name: "gimple_set_vuse", scope: !583, file: !583, line: 1405, type: !6514, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7529)
!7529 = !{!7530, !7531}
!7530 = !DILocalVariable(name: "g", arg: 1, scope: !7528, file: !583, line: 1405, type: !1739)
!7531 = !DILocalVariable(name: "vuse", arg: 2, scope: !7528, file: !583, line: 1405, type: !1456)
!7532 = !DILocation(line: 0, scope: !7528)
!7533 = !DILocation(line: 1407, column: 3, scope: !7528)
!7534 = !DILocation(line: 1408, column: 16, scope: !7528)
!7535 = !DILocation(line: 1408, column: 21, scope: !7528)
!7536 = !DILocation(line: 1409, column: 1, scope: !7528)
!7537 = distinct !DISubprogram(name: "gimple_set_vdef", scope: !583, file: !583, line: 1414, type: !6514, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7538)
!7538 = !{!7539, !7540}
!7539 = !DILocalVariable(name: "g", arg: 1, scope: !7537, file: !583, line: 1414, type: !1739)
!7540 = !DILocalVariable(name: "vdef", arg: 2, scope: !7537, file: !583, line: 1414, type: !1456)
!7541 = !DILocation(line: 0, scope: !7537)
!7542 = !DILocation(line: 1416, column: 3, scope: !7537)
!7543 = !DILocation(line: 1417, column: 16, scope: !7537)
!7544 = !DILocation(line: 1417, column: 21, scope: !7537)
!7545 = !DILocation(line: 1418, column: 1, scope: !7537)
!7546 = distinct !DISubprogram(name: "gimple_set_location", scope: !583, file: !583, line: 1156, type: !7547, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7549)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{null, !1739, !1540}
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "g", arg: 1, scope: !7546, file: !583, line: 1156, type: !1739)
!7551 = !DILocalVariable(name: "location", arg: 2, scope: !7546, file: !583, line: 1156, type: !1540)
!7552 = !DILocation(line: 0, scope: !7546)
!7553 = !DILocation(line: 1158, column: 13, scope: !7546)
!7554 = !DILocation(line: 1158, column: 22, scope: !7546)
!7555 = !DILocation(line: 1159, column: 1, scope: !7546)
!7556 = distinct !DISubprogram(name: "optimize_stack_restore", scope: !3, file: !3, line: 3189, type: !7557, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7559)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!1456, !4241}
!7559 = !{!7560, !7561, !7562, !7563, !7564, !7565, !7568, !7573, !7574}
!7560 = !DILocalVariable(name: "i", arg: 1, scope: !7556, file: !3, line: 3189, type: !4241)
!7561 = !DILocalVariable(name: "callee", scope: !7556, file: !3, line: 3191, type: !1456)
!7562 = !DILocalVariable(name: "stmt", scope: !7556, file: !3, line: 3192, type: !1739)
!7563 = !DILocalVariable(name: "bb", scope: !7556, file: !3, line: 3194, type: !2172)
!7564 = !DILocalVariable(name: "call", scope: !7556, file: !3, line: 3195, type: !1739)
!7565 = !DILocalVariable(name: "stack_save", scope: !7566, file: !3, line: 3245, type: !1739)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 3244, column: 5)
!7567 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 3243, column: 7)
!7568 = !DILocalVariable(name: "stack_save_gsi", scope: !7569, file: !3, line: 3253, type: !4241)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 3252, column: 6)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 3249, column: 8)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 3247, column: 2)
!7572 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 3246, column: 11)
!7573 = !DILocalVariable(name: "rhs", scope: !7569, file: !3, line: 3254, type: !1456)
!7574 = !DILabel(scope: !7556, name: "second_stack_restore", file: !3, line: 3237)
!7575 = !DILocation(line: 3189, column: 46, scope: !7556)
!7576 = !DILocation(line: 3194, column: 20, scope: !7556)
!7577 = !DILocation(line: 0, scope: !7556)
!7578 = !DILocation(line: 3195, column: 17, scope: !7556)
!7579 = !DILocation(line: 3197, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 3197, column: 7)
!7581 = !DILocation(line: 3197, column: 26, scope: !7580)
!7582 = !DILocation(line: 3198, column: 7, scope: !7580)
!7583 = !DILocation(line: 3198, column: 10, scope: !7580)
!7584 = !DILocation(line: 3198, column: 38, scope: !7580)
!7585 = !DILocation(line: 3199, column: 7, scope: !7580)
!7586 = !DILocation(line: 3199, column: 10, scope: !7580)
!7587 = !DILocation(line: 3199, column: 48, scope: !7580)
!7588 = !DILocation(line: 3200, column: 7, scope: !7580)
!7589 = !DILocation(line: 3200, column: 11, scope: !7580)
!7590 = !DILocation(line: 3197, column: 7, scope: !7556)
!7591 = !DILocation(line: 3203, column: 8, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 3203, column: 3)
!7593 = !DILocation(line: 3203, column: 24, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 3203, column: 3)
!7595 = !DILocation(line: 3203, column: 23, scope: !7594)
!7596 = !DILocation(line: 3203, column: 3, scope: !7592)
!7597 = !DILocation(line: 3205, column: 14, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3204, column: 5)
!7599 = !DILocation(line: 3206, column: 11, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 3206, column: 11)
!7601 = !DILocation(line: 3206, column: 30, scope: !7600)
!7602 = !DILocation(line: 3206, column: 11, scope: !7598)
!7603 = !DILocation(line: 3208, column: 11, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 3208, column: 11)
!7605 = !DILocation(line: 3208, column: 30, scope: !7604)
!7606 = !DILocation(line: 3208, column: 11, scope: !7598)
!7607 = !DILocation(line: 3211, column: 16, scope: !7598)
!7608 = !DILocation(line: 3212, column: 12, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 3212, column: 11)
!7610 = !DILocation(line: 3213, column: 4, scope: !7609)
!7611 = !DILocation(line: 3213, column: 7, scope: !7609)
!7612 = !DILocation(line: 3213, column: 36, scope: !7609)
!7613 = !DILocation(line: 3215, column: 4, scope: !7609)
!7614 = !DILocation(line: 3215, column: 7, scope: !7609)
!7615 = !DILocation(line: 3215, column: 35, scope: !7609)
!7616 = !DILocation(line: 3212, column: 11, scope: !7598)
!7617 = !DILocation(line: 3218, column: 39, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 3218, column: 11)
!7619 = !DILocation(line: 3218, column: 11, scope: !7598)
!7620 = !DILocation(line: 3203, column: 39, scope: !7594)
!7621 = !DILocation(line: 3203, column: 3, scope: !7594)
!7622 = distinct !{!7622, !7596, !7623}
!7623 = !DILocation(line: 3220, column: 5, scope: !7592)
!7624 = !DILocation(line: 3222, column: 8, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 3222, column: 7)
!7626 = !DILocation(line: 3222, column: 7, scope: !7556)
!7627 = !DILocation(line: 3226, column: 11, scope: !7556)
!7628 = !DILocation(line: 3226, column: 3, scope: !7556)
!7629 = !DILocation(line: 3231, column: 11, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 3231, column: 11)
!7631 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 3227, column: 5)
!7632 = !DILocation(line: 3231, column: 34, scope: !7630)
!7633 = !DILocation(line: 3231, column: 42, scope: !7630)
!7634 = !DILocation(line: 3231, column: 39, scope: !7630)
!7635 = !DILocation(line: 3231, column: 11, scope: !7631)
!7636 = !DILocation(line: 3243, column: 23, scope: !7567)
!7637 = !DILocation(line: 3237, column: 2, scope: !7556)
!7638 = !DILocation(line: 3243, column: 7, scope: !7567)
!7639 = !DILocation(line: 3243, column: 7, scope: !7556)
!7640 = !DILocation(line: 3245, column: 27, scope: !7566)
!7641 = !DILocation(line: 0, scope: !7566)
!7642 = !DILocation(line: 3246, column: 11, scope: !7572)
!7643 = !DILocation(line: 3246, column: 11, scope: !7566)
!7644 = !DILocation(line: 3248, column: 13, scope: !7571)
!7645 = !DILocation(line: 3249, column: 8, scope: !7570)
!7646 = !DILocation(line: 3250, column: 8, scope: !7570)
!7647 = !DILocation(line: 3250, column: 11, scope: !7570)
!7648 = !DILocation(line: 3250, column: 40, scope: !7570)
!7649 = !DILocation(line: 3251, column: 8, scope: !7570)
!7650 = !DILocation(line: 3251, column: 11, scope: !7570)
!7651 = !DILocation(line: 3251, column: 39, scope: !7570)
!7652 = !DILocation(line: 3249, column: 8, scope: !7571)
!7653 = !DILocation(line: 3253, column: 8, scope: !7569)
!7654 = !DILocation(line: 3256, column: 25, scope: !7569)
!7655 = !DILocation(line: 3257, column: 29, scope: !7569)
!7656 = !DILocation(line: 3257, column: 14, scope: !7569)
!7657 = !DILocation(line: 0, scope: !7569)
!7658 = !DILocation(line: 3258, column: 8, scope: !7569)
!7659 = !DILocation(line: 3259, column: 6, scope: !7570)
!7660 = !DILocation(line: 3259, column: 6, scope: !7569)
!7661 = !DILocation(line: 3264, column: 10, scope: !7556)
!7662 = !DILocation(line: 3264, column: 3, scope: !7556)
!7663 = !DILocation(line: 3265, column: 1, scope: !7556)
!7664 = distinct !DISubprogram(name: "optimize_stdarg_builtin", scope: !3, file: !3, line: 3273, type: !5695, scopeLine: 3274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7665)
!7665 = !{!7666, !7667, !7668, !7669, !7670, !7671, !7672}
!7666 = !DILocalVariable(name: "call", arg: 1, scope: !7664, file: !3, line: 3273, type: !1739)
!7667 = !DILocalVariable(name: "callee", scope: !7664, file: !3, line: 3275, type: !1456)
!7668 = !DILocalVariable(name: "lhs", scope: !7664, file: !3, line: 3275, type: !1456)
!7669 = !DILocalVariable(name: "rhs", scope: !7664, file: !3, line: 3275, type: !1456)
!7670 = !DILocalVariable(name: "cfun_va_list", scope: !7664, file: !3, line: 3275, type: !1456)
!7671 = !DILocalVariable(name: "va_list_simple_ptr", scope: !7664, file: !3, line: 3276, type: !1407)
!7672 = !DILocalVariable(name: "loc", scope: !7664, file: !3, line: 3277, type: !1540)
!7673 = !DILocation(line: 0, scope: !7664)
!7674 = !DILocation(line: 3277, column: 20, scope: !7664)
!7675 = !DILocation(line: 3279, column: 7, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 3279, column: 7)
!7677 = !DILocation(line: 3279, column: 26, scope: !7676)
!7678 = !DILocation(line: 3279, column: 7, scope: !7664)
!7679 = !DILocation(line: 3282, column: 12, scope: !7664)
!7680 = !DILocation(line: 3284, column: 26, scope: !7664)
!7681 = !DILocation(line: 3284, column: 18, scope: !7664)
!7682 = !DILocation(line: 3285, column: 24, scope: !7664)
!7683 = !DILocation(line: 3286, column: 10, scope: !7664)
!7684 = !DILocation(line: 3286, column: 14, scope: !7664)
!7685 = !DILocation(line: 3286, column: 42, scope: !7664)
!7686 = !DILocation(line: 3286, column: 39, scope: !7664)
!7687 = !DILocation(line: 3287, column: 7, scope: !7664)
!7688 = !DILocation(line: 3287, column: 38, scope: !7664)
!7689 = !DILocation(line: 3287, column: 35, scope: !7664)
!7690 = !DILocation(line: 3289, column: 11, scope: !7664)
!7691 = !DILocation(line: 3289, column: 3, scope: !7664)
!7692 = !DILocation(line: 3292, column: 12, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3292, column: 11)
!7694 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 3290, column: 5)
!7695 = !DILocation(line: 3293, column: 15, scope: !7693)
!7696 = !DILocation(line: 3293, column: 39, scope: !7693)
!7697 = !DILocation(line: 3293, column: 4, scope: !7693)
!7698 = !DILocation(line: 3294, column: 14, scope: !7693)
!7699 = !DILocation(line: 3294, column: 48, scope: !7693)
!7700 = !DILocation(line: 3297, column: 11, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3297, column: 11)
!7702 = !DILocation(line: 3297, column: 39, scope: !7701)
!7703 = !DILocation(line: 3297, column: 11, scope: !7694)
!7704 = !DILocation(line: 3300, column: 13, scope: !7694)
!7705 = !DILocation(line: 3301, column: 12, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3301, column: 11)
!7707 = !DILocation(line: 3302, column: 4, scope: !7706)
!7708 = !DILocation(line: 3302, column: 7, scope: !7706)
!7709 = !DILocation(line: 3303, column: 10, scope: !7706)
!7710 = !DILocation(line: 3303, column: 7, scope: !7706)
!7711 = !DILocation(line: 3301, column: 11, scope: !7694)
!7712 = !DILocation(line: 3306, column: 13, scope: !7694)
!7713 = !DILocation(line: 3307, column: 39, scope: !7694)
!7714 = !DILocation(line: 3308, column: 33, scope: !7694)
!7715 = !DILocation(line: 3307, column: 13, scope: !7694)
!7716 = !DILocation(line: 3309, column: 36, scope: !7694)
!7717 = !DILocation(line: 3309, column: 13, scope: !7694)
!7718 = !DILocation(line: 3310, column: 14, scope: !7694)
!7719 = !DILocation(line: 3310, column: 7, scope: !7694)
!7720 = !DILocation(line: 3313, column: 12, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3313, column: 11)
!7722 = !DILocation(line: 3313, column: 11, scope: !7694)
!7723 = !DILocation(line: 3316, column: 11, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3316, column: 11)
!7725 = !DILocation(line: 3316, column: 39, scope: !7724)
!7726 = !DILocation(line: 3316, column: 11, scope: !7694)
!7727 = !DILocation(line: 3319, column: 13, scope: !7694)
!7728 = !DILocation(line: 3320, column: 12, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3320, column: 11)
!7730 = !DILocation(line: 3321, column: 4, scope: !7729)
!7731 = !DILocation(line: 3321, column: 7, scope: !7729)
!7732 = !DILocation(line: 3322, column: 10, scope: !7729)
!7733 = !DILocation(line: 3322, column: 7, scope: !7729)
!7734 = !DILocation(line: 3320, column: 11, scope: !7694)
!7735 = !DILocation(line: 3325, column: 13, scope: !7694)
!7736 = !DILocation(line: 3326, column: 13, scope: !7694)
!7737 = !DILocation(line: 3327, column: 11, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3327, column: 11)
!7739 = !DILocation(line: 3328, column: 7, scope: !7738)
!7740 = !DILocation(line: 3328, column: 4, scope: !7738)
!7741 = !DILocation(line: 3327, column: 11, scope: !7694)
!7742 = !DILocation(line: 3331, column: 36, scope: !7694)
!7743 = !DILocation(line: 3331, column: 13, scope: !7694)
!7744 = !DILocation(line: 3332, column: 14, scope: !7694)
!7745 = !DILocation(line: 3332, column: 7, scope: !7694)
!7746 = !DILocation(line: 3336, column: 14, scope: !7694)
!7747 = !DILocation(line: 3336, column: 7, scope: !7694)
!7748 = !DILocation(line: 3339, column: 7, scope: !7694)
!7749 = !DILocation(line: 3342, column: 5, scope: !7664)
!7750 = !DILocation(line: 3344, column: 1, scope: !7664)
!7751 = distinct !DISubprogram(name: "update_stmt", scope: !583, file: !583, line: 1456, type: !6479, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "s", arg: 1, scope: !7751, file: !583, line: 1456, type: !1739)
!7754 = !DILocation(line: 0, scope: !7751)
!7755 = !DILocation(line: 1458, column: 7, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7751, file: !583, line: 1458, column: 7)
!7757 = !DILocation(line: 1458, column: 7, scope: !7751)
!7758 = !DILocation(line: 1460, column: 7, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7756, file: !583, line: 1459, column: 5)
!7760 = !DILocation(line: 1461, column: 7, scope: !7759)
!7761 = !DILocation(line: 1462, column: 5, scope: !7759)
!7762 = !DILocation(line: 1463, column: 1, scope: !7751)
!7763 = distinct !DISubprogram(name: "gsi_bb", scope: !583, file: !583, line: 4588, type: !7764, scopeLine: 4589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7766)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!2172, !4241}
!7766 = !{!7767}
!7767 = !DILocalVariable(name: "i", arg: 1, scope: !7763, file: !583, line: 4588, type: !4241)
!7768 = !DILocation(line: 4588, column: 30, scope: !7763)
!7769 = !DILocation(line: 4590, column: 12, scope: !7763)
!7770 = !DILocation(line: 4590, column: 3, scope: !7763)
!7771 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !330, file: !330, line: 150, type: !7772, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7774)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!7, !6312}
!7774 = !{!7775}
!7775 = !DILocalVariable(name: "vec_", arg: 1, scope: !7771, file: !330, line: 150, type: !6312)
!7776 = !DILocation(line: 0, scope: !7771)
!7777 = !DILocation(line: 150, column: 1, scope: !7771)
!7778 = distinct !DISubprogram(name: "single_succ_edge", scope: !330, file: !330, line: 643, type: !7779, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7781)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!1719, !5235}
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "bb", arg: 1, scope: !7778, file: !330, line: 643, type: !5235)
!7783 = !DILocation(line: 0, scope: !7778)
!7784 = !DILocation(line: 645, column: 3, scope: !7778)
!7785 = !DILocation(line: 646, column: 10, scope: !7778)
!7786 = !DILocation(line: 646, column: 3, scope: !7778)
!7787 = distinct !DISubprogram(name: "has_single_use", scope: !3330, file: !3330, line: 350, type: !3710, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7788)
!7788 = !{!7789, !7790}
!7789 = !DILocalVariable(name: "var", arg: 1, scope: !7787, file: !3330, line: 350, type: !3712)
!7790 = !DILocalVariable(name: "ptr", scope: !7787, file: !3330, line: 352, type: !7791)
!7791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7792)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7793, size: 64)
!7793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5403)
!7794 = !DILocation(line: 0, scope: !7787)
!7795 = !DILocation(line: 352, column: 42, scope: !7787)
!7796 = !DILocation(line: 355, column: 19, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7787, file: !3330, line: 355, column: 7)
!7798 = !DILocation(line: 355, column: 11, scope: !7797)
!7799 = !DILocation(line: 355, column: 7, scope: !7787)
!7800 = !DILocation(line: 359, column: 25, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7787, file: !3330, line: 359, column: 7)
!7802 = !DILocation(line: 359, column: 11, scope: !7801)
!7803 = !DILocation(line: 359, column: 7, scope: !7787)
!7804 = !DILocation(line: 360, column: 30, scope: !7801)
!7805 = !DILocation(line: 360, column: 13, scope: !7801)
!7806 = !DILocation(line: 360, column: 12, scope: !7801)
!7807 = !DILocation(line: 360, column: 5, scope: !7801)
!7808 = !DILocation(line: 363, column: 8, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7787, file: !3330, line: 363, column: 7)
!7810 = !DILocation(line: 363, column: 7, scope: !7787)
!7811 = !DILocation(line: 366, column: 10, scope: !7787)
!7812 = !DILocation(line: 366, column: 3, scope: !7787)
!7813 = !DILocation(line: 367, column: 1, scope: !7787)
!7814 = distinct !DISubprogram(name: "single_succ_p", scope: !330, file: !330, line: 626, type: !7815, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7817)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!1407, !5235}
!7817 = !{!7818}
!7818 = !DILocalVariable(name: "bb", arg: 1, scope: !7814, file: !330, line: 626, type: !5235)
!7819 = !DILocation(line: 0, scope: !7814)
!7820 = !DILocation(line: 628, column: 10, scope: !7814)
!7821 = !DILocation(line: 628, column: 33, scope: !7814)
!7822 = !DILocation(line: 628, column: 3, scope: !7814)
!7823 = distinct !DISubprogram(name: "is_gimple_debug", scope: !583, file: !583, line: 3249, type: !4193, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7824)
!7824 = !{!7825}
!7825 = !DILocalVariable(name: "gs", arg: 1, scope: !7823, file: !583, line: 3249, type: !4195)
!7826 = !DILocation(line: 0, scope: !7823)
!7827 = !DILocation(line: 3251, column: 10, scope: !7823)
!7828 = !DILocation(line: 3251, column: 27, scope: !7823)
!7829 = !DILocation(line: 3251, column: 3, scope: !7823)
