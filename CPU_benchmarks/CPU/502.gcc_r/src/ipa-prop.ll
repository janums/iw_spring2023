; ModuleID = 'ipa-prop.bc'
source_filename = "ipa-prop.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type { %struct.lto_in_decl_state*, %struct.lto_in_decl_state*, %struct.lto_cgraph_encoder_d*, %struct.htab*, i8*, i8, %struct.htab*, %struct.htab* }
%struct.lto_in_decl_state = type { [7 x %struct.lto_tree_ref_table], %union.tree_node* }
%struct.lto_tree_ref_table = type { %union.tree_node**, i32 }
%struct.lto_cgraph_encoder_d = type { %struct.pointer_map_t*, %struct.VEC_cgraph_node_ptr_heap* }
%struct.VEC_cgraph_node_ptr_heap = type { %struct.VEC_cgraph_node_ptr_base }
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.VEC_ipa_node_params_t_heap = type { %struct.VEC_ipa_node_params_t_base }
%struct.VEC_ipa_node_params_t_base = type { i32, i32, [1 x %struct.ipa_node_params] }
%struct.ipa_node_params = type { i32, %struct.ipa_param_descriptor*, %struct.ipa_param_call_note*, %struct.cgraph_node*, i64, i8 }
%struct.ipa_param_descriptor = type { %struct.ipcp_lattice, %union.tree_node*, i8 }
%struct.ipcp_lattice = type { i32, %union.tree_node* }
%struct.ipa_param_call_note = type { i64, %struct.ipa_param_call_note*, %union.gimple_statement_d*, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_edge_args_t_gc = type { %struct.VEC_ipa_edge_args_t_base }
%struct.VEC_ipa_edge_args_t_base = type { i32, i32, [1 x %struct.ipa_edge_args] }
%struct.ipa_edge_args = type { i32, %struct.ipa_jump_func* }
%struct.ipa_jump_func = type { i32, %union.jump_func_value }
%union.jump_func_value = type { %struct.ipa_ancestor_jf_data }
%struct.ipa_ancestor_jf_data = type { i64, %union.tree_node*, i32 }
%struct.cgraph_edge_hook_list = type opaque
%struct.cgraph_node_hook_list = type opaque
%struct.cgraph_2edge_hook_list = type opaque
%struct.cgraph_2node_hook_list = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.ipa_func_list = type { %struct.cgraph_node*, %struct.ipa_func_list* }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.ipa_pass_through_data = type { %union.tree_node*, i32, i32 }
%struct.VEC_cgraph_edge_p_heap = type { %struct.VEC_cgraph_edge_p_base }
%struct.VEC_cgraph_edge_p_base = type { i32, i32, [1 x %struct.cgraph_edge*] }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_ipa_parm_adjustment_t_heap = type { %struct.VEC_ipa_parm_adjustment_t_base }
%struct.VEC_ipa_parm_adjustment_t_base = type { i32, i32, [1 x %struct.ipa_parm_adjustment] }
%struct.ipa_parm_adjustment = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, i32, i8 }
%struct.cgraph_node_set_iterator = type { %struct.cgraph_node_set_def*, i32 }
%struct.output_block = type { i32, %struct.lto_out_decl_state*, %struct.lto_output_stream*, %struct.lto_output_stream*, %struct.lto_output_stream*, %struct.htab*, %struct.cgraph_node*, i8*, i32, i32, i8, %struct.lto_streamer_cache_d* }
%struct.lto_out_decl_state = type { [7 x %struct.lto_tree_ref_encoder], %struct.lto_cgraph_encoder_d*, %union.tree_node* }
%struct.lto_tree_ref_encoder = type { %struct.htab*, i32, %struct.VEC_tree_heap* }
%struct.lto_output_stream = type { %struct.lto_char_ptr_base*, %struct.lto_char_ptr_base*, i8*, i32, i32, i32 }
%struct.lto_char_ptr_base = type { i8* }
%struct.lto_streamer_cache_d = type { %struct.htab*, i32, %struct.VEC_tree_gc*, %struct.VEC_unsigned_heap* }
%struct.VEC_unsigned_heap = type { %struct.VEC_unsigned_base }
%struct.VEC_unsigned_base = type { i32, i32, [1 x i32] }
%struct.bitpack_d = type { i64, i64, %struct.VEC_bitpack_word_t_heap* }
%struct.VEC_bitpack_word_t_heap = type { %struct.VEC_bitpack_word_t_base }
%struct.VEC_bitpack_word_t_base = type { i32, i32, [1 x i64] }
%struct.lto_input_block = type { i8*, i32, i32 }
%struct.data_in = type { %struct.lto_file_decl_data*, %union.tree_node**, i8*, i32, i32, i32, i8*, i32, i32, %struct.VEC_ld_plugin_symbol_resolution_t_heap*, %struct.lto_streamer_cache_d* }
%struct.VEC_ld_plugin_symbol_resolution_t_heap = type { %struct.VEC_ld_plugin_symbol_resolution_t_base }
%struct.VEC_ld_plugin_symbol_resolution_t_base = type { i32, i32, [1 x i32] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cgraph_nodes = external dso_local local_unnamed_addr global %struct.cgraph_node*, align 8
@ipa_node_params_vector = common dso_local global %struct.VEC_ipa_node_params_t_heap* null, align 8, !dbg !0
@.str = private unnamed_addr constant [11 x i8] c"ipa-prop.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@ipa_edge_args_vector = common dso_local global %struct.VEC_ipa_edge_args_t_gc* null, align 8, !dbg !2173
@cgraph_edge_max_uid = external dso_local local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [33 x i8] c"  Jump functions of caller  %s:\0A\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"    callsite  %s \00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"-> %s :: \0A\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"       param %d: \00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"UNKNOWN\0A\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"CONST: \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"CONST MEMBER PTR: \00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"PASS THROUGH: \00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"%d, op %s \00", align 1
@tree_code_name = external dso_local local_unnamed_addr constant [0 x i8*], align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.13 = private unnamed_addr constant [11 x i8] c"ANCESTOR: \00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"%d, offset %ld\0A\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"\0AJump functions:\0A\00", align 1
@flag_wpa = external dso_local local_unnamed_addr global i32, align 4
@edge_removal_hook_holder = internal unnamed_addr global %struct.cgraph_edge_hook_list* null, align 8, !dbg !2175
@node_removal_hook_holder = internal unnamed_addr global %struct.cgraph_node_hook_list* null, align 8, !dbg !2179
@edge_duplication_hook_holder = internal unnamed_addr global %struct.cgraph_2edge_hook_list* null, align 8, !dbg !2183
@node_duplication_hook_holder = internal unnamed_addr global %struct.cgraph_2node_hook_list* null, align 8, !dbg !2187
@flag_indirect_inlining = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [26 x i8] c"  function  %s Trees :: \0A\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"    param %d : %s\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.18 = private unnamed_addr constant [10 x i8] c"(unnamed)\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c" modified\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"\0AFunction parameters:\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"SYNTH\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.22 = private unnamed_addr constant [16 x i8] c"replacing stmt:\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"with stmt:\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"IPA param adjustments: \00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"                 \00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"%i. base_index: %i - \00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c", base: \00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c", reduction: \00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c", new_ssa_base: \00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c", copy_param\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c", remove_param\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c", offset %li\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c", by_ref\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c", type: \00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.35 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.36 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.37 = private unnamed_addr constant [58 x i8] c"ipa-prop: Discovered an indirect call to a known target (\00", align 1
@.str.38 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.39 = private unnamed_addr constant [10 x i8] c") in %s: \00", align 1
@cgraph_max_uid = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2195 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2208, metadata !DIExpression()), !dbg !2210
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2209, metadata !DIExpression()), !dbg !2210
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2211
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2212
  ret i32 %call, !dbg !2213
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2214 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2218
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2219
  ret i32 %call, !dbg !2220
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2221 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2274, metadata !DIExpression()), !dbg !2275
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2276
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2276
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2276
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2276
  %cmp = icmp uge i8* %0, %1, !dbg !2276
  %conv1 = zext i1 %cmp to i64, !dbg !2276
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2276
  %tobool = icmp eq i64 %expval, 0, !dbg !2276
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2276

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2276
  br label %cond.end, !dbg !2276

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2276
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2276
  %2 = load i8, i8* %0, align 1, !dbg !2276
  %conv3 = zext i8 %2 to i32, !dbg !2276
  br label %cond.end, !dbg !2276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2276
  ret i32 %cond, !dbg !2277
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2278 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2280, metadata !DIExpression()), !dbg !2281
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2282
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2282
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2282
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2282
  %cmp = icmp uge i8* %0, %1, !dbg !2282
  %conv1 = zext i1 %cmp to i64, !dbg !2282
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2282
  %tobool = icmp eq i64 %expval, 0, !dbg !2282
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2282

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2282
  br label %cond.end, !dbg !2282

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2282
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2282
  %2 = load i8, i8* %0, align 1, !dbg !2282
  %conv3 = zext i8 %2 to i32, !dbg !2282
  br label %cond.end, !dbg !2282

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2282
  ret i32 %cond, !dbg !2283
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2284 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2285
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2285
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2285
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2285
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2285
  %cmp = icmp uge i8* %1, %2, !dbg !2285
  %conv1 = zext i1 %cmp to i64, !dbg !2285
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2285
  %tobool = icmp eq i64 %expval, 0, !dbg !2285
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2285

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2285
  br label %cond.end, !dbg !2285

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2285
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2285
  %3 = load i8, i8* %1, align 1, !dbg !2285
  %conv3 = zext i8 %3 to i32, !dbg !2285
  br label %cond.end, !dbg !2285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2285
  ret i32 %cond, !dbg !2286
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2287 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2291, metadata !DIExpression()), !dbg !2292
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2293
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2294
  ret i32 %call, !dbg !2295
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2296 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2300, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2301, metadata !DIExpression()), !dbg !2302
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2303
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2303
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2303
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2303
  %cmp = icmp uge i8* %0, %1, !dbg !2303
  %conv1 = zext i1 %cmp to i64, !dbg !2303
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2303
  %tobool = icmp eq i64 %expval, 0, !dbg !2303
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2303

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2303
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2303
  br label %cond.end, !dbg !2303

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2303
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2303
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2303
  store i8 %conv2, i8* %0, align 1, !dbg !2303
  %conv6 = and i32 %__c, 255, !dbg !2303
  br label %cond.end, !dbg !2303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2303
  ret i32 %cond, !dbg !2304
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2305 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2307, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2308, metadata !DIExpression()), !dbg !2309
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2310
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2310
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2310
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2310
  %cmp = icmp uge i8* %0, %1, !dbg !2310
  %conv1 = zext i1 %cmp to i64, !dbg !2310
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2310
  %tobool = icmp eq i64 %expval, 0, !dbg !2310
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2310

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2310
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2310
  br label %cond.end, !dbg !2310

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2310
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2310
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2310
  store i8 %conv2, i8* %0, align 1, !dbg !2310
  %conv6 = and i32 %__c, 255, !dbg !2310
  br label %cond.end, !dbg !2310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2310
  ret i32 %cond, !dbg !2311
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2312 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2314, metadata !DIExpression()), !dbg !2315
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2316
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2316
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2316
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2316
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2316
  %cmp = icmp uge i8* %1, %2, !dbg !2316
  %conv1 = zext i1 %cmp to i64, !dbg !2316
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2316
  %tobool = icmp eq i64 %expval, 0, !dbg !2316
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2316

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2316
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2316
  br label %cond.end, !dbg !2316

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2316
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2316
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2316
  store i8 %conv4, i8* %1, align 1, !dbg !2316
  %conv6 = and i32 %__c, 255, !dbg !2316
  br label %cond.end, !dbg !2316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2316
  ret i32 %cond, !dbg !2317
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2324, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2325, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2326, metadata !DIExpression()), !dbg !2327
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2328
  ret i64 %call, !dbg !2329
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2330 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2332, metadata !DIExpression()), !dbg !2333
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2334
  %0 = load i32, i32* %_flags, align 8, !dbg !2334
  %and = lshr i32 %0, 4, !dbg !2334
  %and.lobit = and i32 %and, 1, !dbg !2334
  ret i32 %and.lobit, !dbg !2335
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2338, metadata !DIExpression()), !dbg !2339
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2340
  %0 = load i32, i32* %_flags, align 8, !dbg !2340
  %and = lshr i32 %0, 5, !dbg !2340
  %and.lobit = and i32 %and, 1, !dbg !2340
  ret i32 %and.lobit, !dbg !2341
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2345, metadata !DIExpression()), !dbg !2346
  %__c.off = add i32 %__c, 128, !dbg !2347
  %0 = icmp ult i32 %__c.off, 384, !dbg !2347
  br i1 %0, label %cond.true, label %cond.end, !dbg !2347

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2348
  %1 = load i32*, i32** %call, align 8, !dbg !2349
  %idxprom = sext i32 %__c to i64, !dbg !2350
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2350
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2350
  br label %cond.end, !dbg !2351

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2351
  ret i32 %cond, !dbg !2352
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2353 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2355, metadata !DIExpression()), !dbg !2356
  %__c.off = add i32 %__c, 128, !dbg !2357
  %0 = icmp ult i32 %__c.off, 384, !dbg !2357
  br i1 %0, label %cond.true, label %cond.end, !dbg !2357

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2358
  %1 = load i32*, i32** %call, align 8, !dbg !2359
  %idxprom = sext i32 %__c to i64, !dbg !2360
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2360
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2360
  br label %cond.end, !dbg !2361

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2361
  ret i32 %cond, !dbg !2362
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2363 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2368, metadata !DIExpression()), !dbg !2369
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2370
  %conv = trunc i64 %call to i32, !dbg !2371
  ret i32 %conv, !dbg !2372
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2373 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2377, metadata !DIExpression()), !dbg !2378
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2379
  ret i64 %call, !dbg !2380
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2381 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2386, metadata !DIExpression()), !dbg !2387
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2388
  ret i64 %call, !dbg !2389
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2390 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2396, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2397, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2398, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2399, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2400, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 0, metadata !2401, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2402, metadata !DIExpression()), !dbg !2406
  br label %while.cond, !dbg !2407

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2408
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2402, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2401, metadata !DIExpression()), !dbg !2406
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2409
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2407

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2410
  %div = lshr i64 %add, 1, !dbg !2412
  call void @llvm.dbg.value(metadata i64 %div, metadata !2403, metadata !DIExpression()), !dbg !2406
  %mul = mul i64 %div, %__size, !dbg !2413
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2414
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2404, metadata !DIExpression()), !dbg !2406
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2415
  call void @llvm.dbg.value(metadata i32 %call, metadata !2405, metadata !DIExpression()), !dbg !2406
  %cmp1 = icmp slt i32 %call, 0, !dbg !2416
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2418

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2419
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2421

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2422
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2401, metadata !DIExpression()), !dbg !2406
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2406
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2402, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2401, metadata !DIExpression()), !dbg !2406
  br label %while.cond, !dbg !2407, !llvm.loop !2423

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2406
  ret i8* %retval.0, !dbg !2425
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2426 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2432, metadata !DIExpression()), !dbg !2433
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2434
  ret double %call, !dbg !2435
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2436 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2445, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2446, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.value(metadata i32 %base, metadata !2447, metadata !DIExpression()), !dbg !2448
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2449
  ret i64 %call, !dbg !2450
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2451 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2457, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2458, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i32 %base, metadata !2459, metadata !DIExpression()), !dbg !2460
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2461
  ret i64 %call, !dbg !2462
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2463 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2474, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2475, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i32 %base, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2478
  ret i64 %call, !dbg !2479
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2484, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2485, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i32 %base, metadata !2486, metadata !DIExpression()), !dbg !2487
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2488
  ret i64 %call, !dbg !2489
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2532, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2533, metadata !DIExpression()), !dbg !2534
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2535
  ret i32 %call, !dbg !2536
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2537 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2539, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2540, metadata !DIExpression()), !dbg !2541
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2542
  ret i32 %call, !dbg !2543
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2544 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2548, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2549, metadata !DIExpression()), !dbg !2550
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2551
  ret i32 %call, !dbg !2552
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2553 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2557, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2558, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2559, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2560, metadata !DIExpression()), !dbg !2561
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2562
  ret i32 %call, !dbg !2563
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2564 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2568, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2569, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2570, metadata !DIExpression()), !dbg !2571
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2570, metadata !DIExpression(DW_OP_deref)), !dbg !2571
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2572
  ret i32 %call, !dbg !2573
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2574 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2578, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2579, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2580, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2581, metadata !DIExpression()), !dbg !2582
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2581, metadata !DIExpression(DW_OP_deref)), !dbg !2582
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2583
  ret i32 %call, !dbg !2584
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2585 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2609, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2610, metadata !DIExpression()), !dbg !2611
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2612
  ret i32 %call, !dbg !2613
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2616, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2617, metadata !DIExpression()), !dbg !2618
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2619
  ret i32 %call, !dbg !2620
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2625, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2626, metadata !DIExpression()), !dbg !2627
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2628
  ret i32 %call, !dbg !2629
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2630 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2634, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2635, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2636, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2637, metadata !DIExpression()), !dbg !2638
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2639
  ret i32 %call, !dbg !2640
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_push_func_to_list_1(%struct.ipa_func_list** %wl, %struct.cgraph_node* %node, %struct.ipa_node_params* %info) local_unnamed_addr #5 !dbg !2641 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_func_list** %wl, metadata !2646, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2647, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !2648, metadata !DIExpression()), !dbg !2650
  %node_enqueued = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 5, !dbg !2651
  %bf.load = load i8, i8* %node_enqueued, align 8, !dbg !2652
  %bf.set = or i8 %bf.load, 8, !dbg !2652
  store i8 %bf.set, i8* %node_enqueued, align 8, !dbg !2652
  %call = tail call i8* @xcalloc(i64 1, i64 16) #6, !dbg !2653
  call void @llvm.dbg.value(metadata i8* %call, metadata !2649, metadata !DIExpression()), !dbg !2650
  %node1 = bitcast i8* %call to %struct.cgraph_node**, !dbg !2654
  store %struct.cgraph_node* %node, %struct.cgraph_node** %node1, align 8, !dbg !2655
  %0 = bitcast %struct.ipa_func_list** %wl to i64*, !dbg !2656
  %1 = load i64, i64* %0, align 8, !dbg !2656
  %next = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2657
  %2 = bitcast i8* %next to i64*, !dbg !2658
  store i64 %1, i64* %2, align 8, !dbg !2658
  %3 = bitcast %struct.ipa_func_list** %wl to i8**, !dbg !2659
  store i8* %call, i8** %3, align 8, !dbg !2659
  ret void, !dbg !2660
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.ipa_func_list* @ipa_init_func_list() local_unnamed_addr #5 !dbg !2661 {
entry:
  %wl = alloca %struct.ipa_func_list*, align 8
  %0 = bitcast %struct.ipa_func_list** %wl to i8*, !dbg !2672
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2672
  call void @llvm.dbg.value(metadata %struct.ipa_func_list* null, metadata !2666, metadata !DIExpression()), !dbg !2673
  store %struct.ipa_func_list* null, %struct.ipa_func_list** %wl, align 8, !dbg !2674
  br label %for.cond, !dbg !2675

for.cond:                                         ; preds = %for.inc, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !2676
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !2665, metadata !DIExpression()), !dbg !2673
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !2677
  br i1 %tobool, label %for.end, label %for.body, !dbg !2677

for.body:                                         ; preds = %for.cond
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 27, !dbg !2678
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !2678
  %bf.clear = and i16 %bf.load, 32, !dbg !2678
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !2679
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !2680

if.then:                                          ; preds = %for.body
  %1 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !2681
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %1, i64 0, i32 0, !dbg !2681
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 24, !dbg !2681
  %2 = load i32, i32* %uid, align 8, !dbg !2681
  %call = call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %2) #8, !dbg !2681
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !2667, metadata !DIExpression()), !dbg !2682
  %bf.load3 = load i16, i16* %analyzed, align 4, !dbg !2683
  %bf.clear4 = and i16 %bf.load3, 1, !dbg !2683
  %tobool6 = icmp eq i16 %bf.clear4, 0, !dbg !2683
  br i1 %tobool6, label %lor.lhs.false, label %cond.end14, !dbg !2683

lor.lhs.false:                                    ; preds = %if.then
  %bf.clear9 = and i16 %bf.load3, 8, !dbg !2683
  %tobool11 = icmp eq i16 %bf.clear9, 0, !dbg !2683
  br i1 %tobool11, label %cond.true12, label %cond.end14, !dbg !2683

cond.true12:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2683
  br label %cond.end14, !dbg !2683

cond.end14:                                       ; preds = %lor.lhs.false, %if.then, %cond.true12
  call void @llvm.dbg.value(metadata %struct.ipa_func_list** %wl, metadata !2666, metadata !DIExpression(DW_OP_deref)), !dbg !2673
  call void @ipa_push_func_to_list_1(%struct.ipa_func_list** nonnull %wl, %struct.cgraph_node* nonnull %node.0, %struct.ipa_node_params* %call) #8, !dbg !2684
  br label %for.inc, !dbg !2685

for.inc:                                          ; preds = %for.body, %cond.end14
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !2686
  br label %for.cond, !dbg !2687, !llvm.loop !2688

for.end:                                          ; preds = %for.cond
  %3 = load %struct.ipa_func_list*, %struct.ipa_func_list** %wl, align 8, !dbg !2690
  call void @llvm.dbg.value(metadata %struct.ipa_func_list* %3, metadata !2666, metadata !DIExpression()), !dbg !2673
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2691
  ret %struct.ipa_func_list* %3, !dbg !2692
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2693 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_base* %vec_, metadata !2699, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2700, metadata !DIExpression()), !dbg !2701
  br label %land.end, !dbg !2702

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2702
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2702
  ret %struct.ipa_node_params* %arrayidx, !dbg !2702
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.cgraph_node* @ipa_pop_func_from_list(%struct.ipa_func_list** %wl) local_unnamed_addr #5 !dbg !2703 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_func_list** %wl, metadata !2707, metadata !DIExpression()), !dbg !2711
  %0 = load %struct.ipa_func_list*, %struct.ipa_func_list** %wl, align 8, !dbg !2712
  call void @llvm.dbg.value(metadata %struct.ipa_func_list* %0, metadata !2709, metadata !DIExpression()), !dbg !2711
  %next = getelementptr inbounds %struct.ipa_func_list, %struct.ipa_func_list* %0, i64 0, i32 1, !dbg !2713
  %1 = bitcast %struct.ipa_func_list** %next to i64*, !dbg !2713
  %2 = load i64, i64* %1, align 8, !dbg !2713
  %3 = bitcast %struct.ipa_func_list** %wl to i64*, !dbg !2714
  store i64 %2, i64* %3, align 8, !dbg !2714
  %node1 = getelementptr inbounds %struct.ipa_func_list, %struct.ipa_func_list* %0, i64 0, i32 0, !dbg !2715
  %4 = load %struct.cgraph_node*, %struct.cgraph_node** %node1, align 8, !dbg !2715
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %4, metadata !2710, metadata !DIExpression()), !dbg !2711
  %5 = bitcast %struct.ipa_func_list* %0 to i8*, !dbg !2716
  tail call void @free(i8* %5) #6, !dbg !2717
  %6 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !2718
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %6, i64 0, i32 0, !dbg !2718
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %4, i64 0, i32 24, !dbg !2718
  %7 = load i32, i32* %uid, align 8, !dbg !2718
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %7) #8, !dbg !2718
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !2708, metadata !DIExpression()), !dbg !2711
  %node_enqueued = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 5, !dbg !2719
  %bf.load = load i8, i8* %node_enqueued, align 8, !dbg !2720
  %bf.clear = and i8 %bf.load, -9, !dbg !2720
  store i8 %bf.clear, i8* %node_enqueued, align 8, !dbg !2720
  ret %struct.cgraph_node* %4, !dbg !2721
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_initialize_node_params(%struct.cgraph_node* %node) local_unnamed_addr #5 !dbg !2722 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2724, metadata !DIExpression()), !dbg !2726
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !2727
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !2727
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !2727
  %1 = load i32, i32* %uid, align 8, !dbg !2727
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !2727
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !2725, metadata !DIExpression()), !dbg !2726
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 1, !dbg !2728
  %2 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !2728
  %tobool1 = icmp eq %struct.ipa_param_descriptor* %2, null, !dbg !2730
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2731

if.then:                                          ; preds = %entry
  tail call fastcc void @ipa_count_formal_params(%struct.cgraph_node* %node, %struct.ipa_node_params* %call) #8, !dbg !2732
  %call2 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !2734
  %conv = sext i32 %call2 to i64, !dbg !2734
  %call3 = tail call i8* @xcalloc(i64 %conv, i64 32) #6, !dbg !2734
  %3 = bitcast %struct.ipa_param_descriptor** %params to i8**, !dbg !2735
  store i8* %call3, i8** %3, align 8, !dbg !2735
  tail call fastcc void @ipa_populate_param_decls(%struct.cgraph_node* %node, %struct.ipa_node_params* %call) #8, !dbg !2736
  br label %if.end, !dbg !2737

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !2738
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_count_formal_params(%struct.cgraph_node* %node, %struct.ipa_node_params* %info) unnamed_addr #5 !dbg !2739 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2743, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !2744, metadata !DIExpression()), !dbg !2746
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 0, !dbg !2747
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2747
  %call = tail call fastcc i32 @count_formal_params_1(%union.tree_node* %0) #8, !dbg !2748
  call void @llvm.dbg.value(metadata i32 %call, metadata !2745, metadata !DIExpression()), !dbg !2746
  tail call fastcc void @ipa_set_param_count(%struct.ipa_node_params* %info, i32 %call) #8, !dbg !2749
  ret void, !dbg !2750
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %info) unnamed_addr #0 !dbg !2751 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !2755, metadata !DIExpression()), !dbg !2756
  %param_count = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 0, !dbg !2757
  %0 = load i32, i32* %param_count, align 8, !dbg !2757
  ret i32 %0, !dbg !2758
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_populate_param_decls(%struct.cgraph_node* %node, %struct.ipa_node_params* %info) unnamed_addr #5 !dbg !2759 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2761, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !2762, metadata !DIExpression()), !dbg !2767
  %0 = bitcast %struct.cgraph_node* %node to %struct.tree_decl_non_common**, !dbg !2768
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %0, align 8, !dbg !2768
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !2769
  call void @llvm.dbg.value(metadata i32 0, metadata !2766, metadata !DIExpression()), !dbg !2767
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 1, !dbg !2770
  br label %for.cond, !dbg !2774

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %parm.0.in = phi %union.tree_node** [ %chain, %for.body ], [ %arguments, %entry ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !2775
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2766, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !2765, metadata !DIExpression()), !dbg !2767
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !2776
  br i1 %tobool, label %for.end, label %for.body, !dbg !2776

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !2777
  %decl1 = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %2, i64 %indvars.iv, i32 1, !dbg !2778
  store %union.tree_node* %parm.0, %union.tree_node** %decl1, align 8, !dbg !2779
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !2780
  call void @llvm.dbg.value(metadata i32 undef, metadata !2766, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2767
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2781
  br label %for.cond, !dbg !2782, !llvm.loop !2783

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2785
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_detect_param_modifications(%struct.cgraph_node* %node) local_unnamed_addr #5 !dbg !2786 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2788, metadata !DIExpression()), !dbg !2800
  %0 = bitcast %struct.cgraph_node* %node to %struct.tree_function_decl**, !dbg !2801
  %1 = load %struct.tree_function_decl*, %struct.tree_function_decl** %0, align 8, !dbg !2801
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2802
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2802
  %3 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !2803
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %3, i64 0, i32 0, !dbg !2803
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !2803
  %4 = load i32, i32* %uid, align 8, !dbg !2803
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %4) #8, !dbg !2803
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !2799, metadata !DIExpression()), !dbg !2800
  %call2 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !2804
  %cmp = icmp eq i32 %call2, 0, !dbg !2806
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !2807

lor.lhs.false:                                    ; preds = %entry
  %modification_analysis_done = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 5, !dbg !2808
  %bf.load = load i8, i8* %modification_analysis_done, align 8, !dbg !2808
  %bf.clear = and i8 %bf.load, 2, !dbg !2808
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !2809
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !2810

if.end:                                           ; preds = %lor.lhs.false
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %1, i64 0, i32 1, !dbg !2811
  %5 = load %struct.function*, %struct.function** %f, align 8, !dbg !2811
  call void @llvm.dbg.value(metadata %struct.function* %5, metadata !2791, metadata !DIExpression()), !dbg !2800
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !2812
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2812
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !2812
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2812
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2814
  %9 = bitcast %struct.ipa_node_params* %call to i8*, !dbg !2817
  br label %for.cond, !dbg !2812

for.cond:                                         ; preds = %for.inc12, %if.end
  %10 = phi %struct.control_flow_graph* [ %6, %if.end ], [ %.pre, %for.inc12 ], !dbg !2819
  %.pn = phi %struct.basic_block_def* [ %7, %if.end ], [ %bb.0, %for.inc12 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2820
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2820
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2790, metadata !DIExpression()), !dbg !2800
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !2819
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2819
  %cmp5 = icmp eq %struct.basic_block_def* %bb.0, %11, !dbg !2819
  br i1 %cmp5, label %for.end14, label %for.body, !dbg !2812

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !2821
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #8, !dbg !2821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !2821
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !2821
  br label %for.cond6, !dbg !2822

for.cond6:                                        ; preds = %for.body9, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2792, metadata !DIExpression(DW_OP_deref)), !dbg !2800
  %call7 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2823
  %tobool8 = icmp eq i8 %call7, 0, !dbg !2824
  br i1 %tobool8, label %for.body9, label %for.inc12, !dbg !2825

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2792, metadata !DIExpression(DW_OP_deref)), !dbg !2800
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2826
  %call11 = call zeroext i8 @walk_stmt_load_store_addr_ops(%union.gimple_statement_d* %call10, i8* %9, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* null, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* nonnull @visit_store_addr_for_mod_analysis, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* nonnull @visit_store_addr_for_mod_analysis) #6, !dbg !2827
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2792, metadata !DIExpression(DW_OP_deref)), !dbg !2800
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2828
  br label %for.cond6, !dbg !2829, !llvm.loop !2830

for.inc12:                                        ; preds = %for.cond6
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2819
  br label %for.cond, !dbg !2819, !llvm.loop !2832

for.end14:                                        ; preds = %for.cond
  %bf.load16 = load i8, i8* %modification_analysis_done, align 8, !dbg !2834
  %bf.set = or i8 %bf.load16, 2, !dbg !2834
  store i8 %bf.set, i8* %modification_analysis_done, align 8, !dbg !2834
  br label %cleanup, !dbg !2835

cleanup:                                          ; preds = %lor.lhs.false, %entry, %for.end14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2835
  ret void, !dbg !2835
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !2836 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2840, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !2841, metadata !DIExpression()), !dbg !2844
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !2845
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2842, metadata !DIExpression()), !dbg !2843
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !2846
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !2847
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2848
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !2849
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !2850
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !2851
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !2852
  ret void, !dbg !2853
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2854 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2858, metadata !DIExpression()), !dbg !2859
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2860
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2860
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !2861
  %conv1 = zext i1 %cmp to i8, !dbg !2862
  ret i8 %conv1, !dbg !2863
}

declare dso_local zeroext i8 @walk_stmt_load_store_addr_ops(%union.gimple_statement_d*, i8*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2864 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2868, metadata !DIExpression()), !dbg !2869
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2870
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2870
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !2871
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2871
  ret %union.gimple_statement_d* %1, !dbg !2872
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @visit_store_addr_for_mod_analysis(%union.gimple_statement_d* %stmt, %union.tree_node* %op, i8* %data) #5 !dbg !2873 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2877, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !2878, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata i8* %data, metadata !2879, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata i8* %data, metadata !2880, metadata !DIExpression()), !dbg !2884
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2885
  %bf.load = load i64, i64* %0, align 8, !dbg !2885
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2886
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !2886
  br i1 %cmp, label %if.then, label %if.end, !dbg !2887

if.then:                                          ; preds = %entry
  %1 = bitcast i8* %data to %struct.ipa_node_params*, !dbg !2888
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %1, metadata !2880, metadata !DIExpression()), !dbg !2884
  %call = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %1, %union.tree_node* %op) #8, !dbg !2889
  call void @llvm.dbg.value(metadata i32 %call, metadata !2881, metadata !DIExpression()), !dbg !2890
  %cmp1 = icmp sgt i32 %call, -1, !dbg !2891
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !2891

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2891
  br label %cond.end, !dbg !2891

cond.end:                                         ; preds = %if.then, %cond.true
  %params = getelementptr inbounds i8, i8* %data, i64 8, !dbg !2892
  %2 = bitcast i8* %params to %struct.ipa_param_descriptor**, !dbg !2892
  %3 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %2, align 8, !dbg !2892
  %idxprom = sext i32 %call to i64, !dbg !2893
  %modified = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %3, i64 %idxprom, i32 2, !dbg !2894
  %bf.load2 = load i8, i8* %modified, align 8, !dbg !2895
  %bf.set = or i8 %bf.load2, 1, !dbg !2895
  store i8 %bf.set, i8* %modified, align 8, !dbg !2895
  br label %if.end, !dbg !2896

if.end:                                           ; preds = %cond.end, %entry
  ret i8 0, !dbg !2897
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !2898 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !2903, metadata !DIExpression()), !dbg !2904
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2905
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2905
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !2906
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !2906
  %2 = load i64, i64* %1, align 8, !dbg !2906
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !2907
  store i64 %2, i64* %3, align 8, !dbg !2907
  ret void, !dbg !2908
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_count_arguments(%struct.cgraph_edge* %cs) local_unnamed_addr #5 !dbg !2909 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !2913, metadata !DIExpression()), !dbg !2916
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 7, !dbg !2917
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !2917
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !2914, metadata !DIExpression()), !dbg !2916
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %0) #8, !dbg !2918
  %tobool = icmp eq i8 %call, 0, !dbg !2918
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2918

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 249, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2918
  br label %cond.end, !dbg !2918

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %0) #8, !dbg !2919
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2915, metadata !DIExpression()), !dbg !2916
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !2920
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, !dbg !2920
  %call7 = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %base) #8, !dbg !2920
  %2 = load i32, i32* @cgraph_edge_max_uid, align 4, !dbg !2922
  %cmp = icmp ugt i32 %call7, %2, !dbg !2923
  br i1 %cmp, label %if.end, label %if.then, !dbg !2924

if.then:                                          ; preds = %cond.end
  %add = add nsw i32 %2, 1, !dbg !2925
  tail call fastcc void @VEC_ipa_edge_args_t_gc_safe_grow_cleared(%struct.VEC_ipa_edge_args_t_gc** nonnull @ipa_edge_args_vector, i32 %add) #8, !dbg !2925
  br label %if.end, !dbg !2925

if.end:                                           ; preds = %cond.end, %if.then
  %3 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !2926
  %base10 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %3, i64 0, i32 0, !dbg !2926
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 12, !dbg !2926
  %4 = load i32, i32* %uid, align 4, !dbg !2926
  %call14 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base10, i32 %4) #8, !dbg !2926
  tail call fastcc void @ipa_set_cs_argument_count(%struct.ipa_edge_args* %call14, i32 %call1) #8, !dbg !2927
  ret void, !dbg !2928
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2929 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2934, metadata !DIExpression()), !dbg !2935
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !2936
  %cmp = icmp eq i32 %call, 8, !dbg !2937
  %conv1 = zext i1 %cmp to i8, !dbg !2936
  ret i8 %conv1, !dbg !2938
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2939 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2943, metadata !DIExpression()), !dbg !2945
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %call, metadata !2944, metadata !DIExpression()), !dbg !2945
  %sub = add i32 %call, -3, !dbg !2947
  ret i32 %sub, !dbg !2948
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %vec_) unnamed_addr #0 !dbg !2949 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_base* %vec_, metadata !2955, metadata !DIExpression()), !dbg !2956
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_base* %vec_, null, !dbg !2957
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2957

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 0, !dbg !2957
  %0 = load i32, i32* %num, align 8, !dbg !2957
  br label %cond.end, !dbg !2957

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2957
  ret i32 %cond, !dbg !2957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_edge_args_t_gc_safe_grow_cleared(%struct.VEC_ipa_edge_args_t_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !2958 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, metadata !2963, metadata !DIExpression()), !dbg !2966
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2964, metadata !DIExpression()), !dbg !2966
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !2967
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_gc* %0, null, !dbg !2967
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2967

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !2967
  br label %cond.end, !dbg !2967

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ipa_edge_args_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2967
  %call = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %cond) #8, !dbg !2967
  call void @llvm.dbg.value(metadata i32 %call, metadata !2965, metadata !DIExpression()), !dbg !2966
  tail call fastcc void @VEC_ipa_edge_args_t_gc_safe_grow(%struct.VEC_ipa_edge_args_t_gc** nonnull @ipa_edge_args_vector, i32 %size_) #8, !dbg !2967
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !2967
  %tobool1 = icmp eq %struct.VEC_ipa_edge_args_t_gc* %1, null, !dbg !2967
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !2967

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, !dbg !2967
  br label %cond.end5, !dbg !2967

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_ipa_edge_args_t_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !2967
  %call7 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_address(%struct.VEC_ipa_edge_args_t_base* %cond6) #8, !dbg !2967
  %idxprom = sext i32 %call to i64, !dbg !2967
  %arrayidx = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %call7, i64 %idxprom, !dbg !2967
  %2 = bitcast %struct.ipa_edge_args* %arrayidx to i8*, !dbg !2967
  %sub = sub nsw i32 %size_, %call, !dbg !2967
  %conv = sext i32 %sub to i64, !dbg !2967
  %mul = shl nsw i64 %conv, 4, !dbg !2967
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !2967
  ret void, !dbg !2967
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ipa_set_cs_argument_count(%struct.ipa_edge_args* %args, i32 %count) unnamed_addr #0 !dbg !2968 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %args, metadata !2973, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.value(metadata i32 %count, metadata !2974, metadata !DIExpression()), !dbg !2975
  %argument_count = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %args, i64 0, i32 0, !dbg !2976
  store i32 %count, i32* %argument_count, align 8, !dbg !2977
  ret void, !dbg !2978
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2979 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_base* %vec_, metadata !2985, metadata !DIExpression()), !dbg !2987
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2986, metadata !DIExpression()), !dbg !2987
  br label %land.end, !dbg !2988

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2988
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2988
  ret %struct.ipa_edge_args* %arrayidx, !dbg !2988
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_print_node_jump_functions(%struct._IO_FILE* %f, %struct.cgraph_node* %node) local_unnamed_addr #5 !dbg !2989 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2993, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2994, metadata !DIExpression()), !dbg !3010
  %call = tail call i8* @cgraph_node_name(%struct.cgraph_node* %node) #6, !dbg !3011
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %call) #6, !dbg !3012
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 1, !dbg !3013
  br label %for.cond, !dbg !3014

for.cond:                                         ; preds = %for.inc71, %entry
  %cs.0.in = phi %struct.cgraph_edge** [ %callees, %entry ], [ %next_callee, %for.inc71 ]
  %cs.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.0.in, align 8, !dbg !3015
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.0, metadata !2997, metadata !DIExpression()), !dbg !3010
  %tobool = icmp eq %struct.cgraph_edge* %cs.0, null, !dbg !3016
  br i1 %tobool, label %for.end72, label %for.body, !dbg !3016

for.body:                                         ; preds = %for.cond
  %call2 = tail call fastcc zeroext i8 @ipa_edge_args_info_available_for_edge_p(%struct.cgraph_edge* nonnull %cs.0) #8, !dbg !3017
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3017
  br i1 %tobool3, label %for.inc71, label %if.end, !dbg !3019

if.end:                                           ; preds = %for.body
  %call4 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %node) #6, !dbg !3020
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %call4) #6, !dbg !3021
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 2, !dbg !3022
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !3022
  %call6 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %0) #6, !dbg !3023
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %call6) #6, !dbg !3024
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3025
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, !dbg !3025
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 12, !dbg !3025
  %2 = load i32, i32* %uid, align 4, !dbg !3025
  %call9 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base, i32 %2) #8, !dbg !3025
  %call10 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call9) #8, !dbg !3026
  call void @llvm.dbg.value(metadata i32 %call10, metadata !2996, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i32 0, metadata !2995, metadata !DIExpression()), !dbg !3010
  br label %for.cond11, !dbg !3027

for.cond11:                                       ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !3028
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2995, metadata !DIExpression()), !dbg !3010
  %cmp = icmp slt i32 %i.0, %call10, !dbg !3029
  br i1 %cmp, label %for.body12, label %for.inc71.loopexit, !dbg !3030

for.body12:                                       ; preds = %for.cond11
  %3 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3031
  %base15 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %3, i64 0, i32 0, !dbg !3031
  %4 = load i32, i32* %uid, align 4, !dbg !3031
  %call20 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base15, i32 %4) #8, !dbg !3031
  %call21 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %call20, i32 %i.0) #8, !dbg !3032
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %call21, metadata !2998, metadata !DIExpression()), !dbg !3010
  %type22 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 0, !dbg !3033
  %5 = load i32, i32* %type22, align 8, !dbg !3033
  call void @llvm.dbg.value(metadata i32 %5, metadata !2999, metadata !DIExpression()), !dbg !3010
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 %i.0) #6, !dbg !3034
  switch i32 %5, label %for.inc [
    i32 0, label %if.then25
    i32 1, label %if.then28
    i32 2, label %if.then33
    i32 3, label %if.then42
    i32 4, label %if.then59
  ], !dbg !3035

if.then25:                                        ; preds = %for.body12
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3036
  br label %for.inc, !dbg !3036

if.then28:                                        ; preds = %for.body12
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, !dbg !3037
  %constant = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !3038
  %6 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !3038
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3000, metadata !DIExpression()), !dbg !3039
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3040
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %6, i32 0) #6, !dbg !3041
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3042
  br label %for.inc, !dbg !3043

if.then33:                                        ; preds = %for.body12
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3044
  %value35 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, !dbg !3047
  %pfn = bitcast %union.jump_func_value* %value35 to %union.tree_node**, !dbg !3048
  %7 = load %union.tree_node*, %union.tree_node** %pfn, align 8, !dbg !3048
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %7, i32 0) #6, !dbg !3049
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3050
  %8 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, i32 0, i32 1, !dbg !3051
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !3051
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %9, i32 0) #6, !dbg !3052
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3053
  br label %for.inc, !dbg !3054

if.then42:                                        ; preds = %for.body12
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3055
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, i32 0, i32 1, !dbg !3058
  %10 = bitcast %union.tree_node** %formal_id to i32*, !dbg !3058
  %11 = load i32, i32* %10, align 8, !dbg !3058
  %value45 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, !dbg !3059
  %pass_through46 = bitcast %union.jump_func_value* %value45 to %struct.ipa_pass_through_data*, !dbg !3060
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through46, i64 0, i32 2, !dbg !3061
  %12 = load i32, i32* %operation, align 4, !dbg !3061
  %idxprom = sext i32 %12 to i64, !dbg !3062
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom, !dbg !3062
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !3062
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i32 %11, i8* %13) #6, !dbg !3063
  %14 = load i32, i32* %operation, align 4, !dbg !3064
  %cmp51 = icmp eq i32 %14, 116, !dbg !3066
  br i1 %cmp51, label %if.end55, label %if.then52, !dbg !3067

if.then52:                                        ; preds = %if.then42
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3068
  %operand = bitcast %union.jump_func_value* %value45 to %union.tree_node**, !dbg !3069
  %16 = load %union.tree_node*, %union.tree_node** %operand, align 8, !dbg !3069
  tail call void @print_generic_expr(%struct._IO_FILE* %15, %union.tree_node* %16, i32 0) #6, !dbg !3070
  br label %if.end55, !dbg !3070

if.end55:                                         ; preds = %if.then42, %if.then52
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3071
  %call56 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3072
  br label %for.inc, !dbg !3073

if.then59:                                        ; preds = %for.body12
  %call60 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3074
  %formal_id62 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, i32 0, i32 2, !dbg !3077
  %18 = load i32, i32* %formal_id62, align 8, !dbg !3077
  %offset = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call21, i64 0, i32 1, i32 0, i32 0, !dbg !3078
  %19 = load i64, i64* %offset, align 8, !dbg !3078
  %call65 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i32 %18, i64 %19) #6, !dbg !3079
  br label %for.inc, !dbg !3080

for.inc:                                          ; preds = %if.then25, %if.then33, %if.then59, %for.body12, %if.end55, %if.then28
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3081
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2995, metadata !DIExpression()), !dbg !3010
  br label %for.cond11, !dbg !3082, !llvm.loop !3083

for.inc71.loopexit:                               ; preds = %for.cond11
  br label %for.inc71, !dbg !3085

for.inc71:                                        ; preds = %for.inc71.loopexit, %for.body
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 6, !dbg !3085
  br label %for.cond, !dbg !3086, !llvm.loop !3087

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !3089
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @cgraph_node_name(%struct.cgraph_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ipa_edge_args_info_available_for_edge_p(%struct.cgraph_edge* %edge) unnamed_addr #0 !dbg !3090 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %edge, metadata !3094, metadata !DIExpression()), !dbg !3095
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %edge, i64 0, i32 12, !dbg !3096
  %0 = load i32, i32* %uid, align 4, !dbg !3096
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3097
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, !dbg !3097
  %call = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %base) #8, !dbg !3097
  %cmp = icmp ult i32 %0, %call, !dbg !3098
  %conv1 = zext i1 %cmp to i8, !dbg !3099
  ret i8 %conv1, !dbg !3100
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %args) unnamed_addr #0 !dbg !3101 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %args, metadata !3105, metadata !DIExpression()), !dbg !3106
  %argument_count = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %args, i64 0, i32 0, !dbg !3107
  %0 = load i32, i32* %argument_count, align 8, !dbg !3107
  ret i32 %0, !dbg !3108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %args, i32 %i) unnamed_addr #0 !dbg !3109 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %args, metadata !3113, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata i32 %i, metadata !3114, metadata !DIExpression()), !dbg !3115
  %jump_functions = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %args, i64 0, i32 1, !dbg !3116
  %0 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3116
  %idxprom = sext i32 %i to i64, !dbg !3117
  %arrayidx = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %0, i64 %idxprom, !dbg !3117
  ret %struct.ipa_jump_func* %arrayidx, !dbg !3118
}

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_print_all_jump_functions(%struct._IO_FILE* %f) local_unnamed_addr #5 !dbg !3119 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3123, metadata !DIExpression()), !dbg !3125
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3126
  br label %for.cond, !dbg !3127

for.cond:                                         ; preds = %for.body, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.body ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !3129
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !3124, metadata !DIExpression()), !dbg !3125
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !3130
  br i1 %tobool, label %for.end, label %for.body, !dbg !3130

for.body:                                         ; preds = %for.cond
  tail call void @ipa_print_node_jump_functions(%struct._IO_FILE* %f, %struct.cgraph_node* nonnull %node.0) #8, !dbg !3131
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !3134
  br label %for.cond, !dbg !3135, !llvm.loop !3136

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3138
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_compute_jump_functions(%struct.cgraph_edge* %cs) local_unnamed_addr #5 !dbg !3139 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !3141, metadata !DIExpression()), !dbg !3145
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3146
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !3146
  %caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 1, !dbg !3146
  %1 = load %struct.cgraph_node*, %struct.cgraph_node** %caller, align 8, !dbg !3146
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %1, i64 0, i32 24, !dbg !3146
  %2 = load i32, i32* %uid, align 8, !dbg !3146
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %2) #8, !dbg !3146
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !3142, metadata !DIExpression()), !dbg !3145
  %3 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3147
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %3, i64 0, i32 0, !dbg !3147
  %uid7 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 12, !dbg !3147
  %4 = load i32, i32* %uid7, align 4, !dbg !3147
  %call8 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base3, i32 %4) #8, !dbg !3147
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call8, metadata !3143, metadata !DIExpression()), !dbg !3145
  %call10 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call8) #8, !dbg !3148
  %cmp = icmp eq i32 %call10, 0, !dbg !3150
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !3151

lor.lhs.false:                                    ; preds = %entry
  %jump_functions = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %call8, i64 0, i32 1, !dbg !3152
  %5 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3152
  %tobool11 = icmp eq %struct.ipa_jump_func* %5, null, !dbg !3153
  br i1 %tobool11, label %if.end, label %cleanup.cont, !dbg !3154

if.end:                                           ; preds = %lor.lhs.false
  %call12 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call8) #8, !dbg !3155
  %conv = sext i32 %call12 to i64, !dbg !3155
  %mul = shl nsw i64 %conv, 5, !dbg !3155
  %call13 = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #6, !dbg !3155
  %6 = bitcast %struct.ipa_jump_func** %jump_functions to i8**, !dbg !3156
  store i8* %call13, i8** %6, align 8, !dbg !3156
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 7, !dbg !3157
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !3157
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !3144, metadata !DIExpression()), !dbg !3145
  %call15 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %7) #8, !dbg !3158
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3158
  br i1 %tobool16, label %cond.true17, label %cond.end19, !dbg !3158

cond.true17:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3158
  br label %cond.end19, !dbg !3158

cond.end19:                                       ; preds = %if.end, %cond.true17
  %8 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3159
  tail call fastcc void @compute_scalar_jump_functions(%struct.ipa_node_params* %call, %struct.ipa_jump_func* %8, %union.gimple_statement_d* %7) #8, !dbg !3160
  %9 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3161
  %call23 = tail call fastcc zeroext i8 @compute_pass_through_member_ptrs(%struct.ipa_node_params* %call, %struct.ipa_jump_func* %9, %union.gimple_statement_d* %7) #8, !dbg !3163
  %tobool24 = icmp eq i8 %call23, 0, !dbg !3163
  br i1 %tobool24, label %cleanup.cont, label %if.end26, !dbg !3164

if.end26:                                         ; preds = %cond.end19
  %10 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3165
  tail call fastcc void @compute_cst_member_ptr_arguments(%struct.ipa_jump_func* %10, %union.gimple_statement_d* %7) #8, !dbg !3166
  br label %cleanup.cont, !dbg !3167

cleanup.cont:                                     ; preds = %cond.end19, %lor.lhs.false, %if.end26, %entry
  ret void, !dbg !3167
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_scalar_jump_functions(%struct.ipa_node_params* %info, %struct.ipa_jump_func* %functions, %union.gimple_statement_d* %call) unnamed_addr #5 !dbg !3168 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3172, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %functions, metadata !3173, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3174, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i32 0, metadata !3176, metadata !DIExpression()), !dbg !3186
  br label %for.cond, !dbg !3187

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3188
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3176, metadata !DIExpression()), !dbg !3186
  %call1 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #8, !dbg !3189
  %0 = zext i32 %call1 to i64, !dbg !3190
  %cmp = icmp ult i64 %indvars.iv, %0, !dbg !3190
  br i1 %cmp, label %for.body, label %for.end, !dbg !3191

for.body:                                         ; preds = %for.cond
  %1 = trunc i64 %indvars.iv to i32, !dbg !3192
  %call2 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %1) #8, !dbg !3192
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3175, metadata !DIExpression()), !dbg !3186
  %call3 = tail call zeroext i8 @is_gimple_ip_invariant(%union.tree_node* %call2) #6, !dbg !3193
  %tobool = icmp eq i8 %call3, 0, !dbg !3193
  br i1 %tobool, label %if.else, label %if.then, !dbg !3194

if.then:                                          ; preds = %for.body
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 0, !dbg !3195
  store i32 1, i32* %type, align 8, !dbg !3197
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 1, !dbg !3198
  %constant = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !3199
  store %union.tree_node* %call2, %union.tree_node** %constant, align 8, !dbg !3200
  br label %for.inc, !dbg !3201

if.else:                                          ; preds = %for.body
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3202
  %bf.load = load i64, i64* %2, align 8, !dbg !3202
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3203
  %cmp6 = icmp eq i64 %bf.cast1, 141, !dbg !3203
  br i1 %cmp6, label %if.then7, label %for.inc, !dbg !3204

if.then7:                                         ; preds = %if.else
  %bf.cast112 = and i64 %bf.load, 4294967296, !dbg !3205
  %tobool12 = icmp eq i64 %bf.cast112, 0, !dbg !3205
  br i1 %tobool12, label %if.else27, label %if.then13, !dbg !3206

if.then13:                                        ; preds = %if.then7
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3207
  %3 = bitcast i32* %var to %union.tree_node**, !dbg !3207
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3207
  %call14 = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %4) #8, !dbg !3208
  call void @llvm.dbg.value(metadata i32 %call14, metadata !3177, metadata !DIExpression()), !dbg !3209
  %cmp15 = icmp sgt i32 %call14, -1, !dbg !3210
  br i1 %cmp15, label %if.then16, label %for.inc, !dbg !3212

if.then16:                                        ; preds = %if.then13
  %type19 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 0, !dbg !3213
  store i32 3, i32* %type19, align 8, !dbg !3215
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 1, i32 0, i32 1, !dbg !3216
  %5 = bitcast %union.tree_node** %formal_id to i32*, !dbg !3216
  store i32 %call14, i32* %5, align 8, !dbg !3217
  %value25 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 1, !dbg !3218
  %pass_through26 = bitcast %union.jump_func_value* %value25 to %struct.ipa_pass_through_data*, !dbg !3219
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through26, i64 0, i32 2, !dbg !3220
  store i32 116, i32* %operation, align 4, !dbg !3221
  br label %for.inc, !dbg !3222

if.else27:                                        ; preds = %if.then7
  %arrayidx29 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, !dbg !3223
  tail call fastcc void @compute_complex_pass_through(%struct.ipa_node_params* %info, %struct.ipa_jump_func* %arrayidx29, %union.tree_node* %call2) #8, !dbg !3224
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else27, %if.then16, %if.then13, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3225
  br label %for.cond, !dbg !3226, !llvm.loop !3227

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3229
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compute_pass_through_member_ptrs(%struct.ipa_node_params* %info, %struct.ipa_jump_func* %functions, %union.gimple_statement_d* %call) unnamed_addr #5 !dbg !3230 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3234, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %functions, metadata !3235, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3236, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i32 0, metadata !3238, metadata !DIExpression()), !dbg !3248
  br label %for.cond, !dbg !3249

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3248
  %undecided_members.0 = phi i8 [ %undecided_members.3, %for.inc ], [ 0, %entry ], !dbg !3248
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3238, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i8 %undecided_members.0, metadata !3237, metadata !DIExpression()), !dbg !3248
  %call1 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #8, !dbg !3250
  %0 = zext i32 %call1 to i64, !dbg !3251
  %cmp = icmp ult i64 %indvars.iv, %0, !dbg !3251
  br i1 %cmp, label %for.body, label %for.end, !dbg !3252

for.body:                                         ; preds = %for.cond
  %1 = trunc i64 %indvars.iv to i32, !dbg !3253
  %call2 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %1) #8, !dbg !3253
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3239, metadata !DIExpression()), !dbg !3248
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3254
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3254
  %call3 = tail call fastcc zeroext i8 @type_like_member_ptr_p(%union.tree_node* %2, %union.tree_node** null, %union.tree_node** null) #8, !dbg !3255
  %tobool = icmp eq i8 %call3, 0, !dbg !3255
  br i1 %tobool, label %for.inc, label %if.then, !dbg !3256

if.then:                                          ; preds = %for.body
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3257
  %bf.load = load i64, i64* %3, align 8, !dbg !3257
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3258
  %cmp4 = icmp eq i64 %bf.cast1, 34, !dbg !3258
  br i1 %cmp4, label %if.then5, label %for.inc, !dbg !3259

if.then5:                                         ; preds = %if.then
  %call6 = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %call2) #8, !dbg !3260
  call void @llvm.dbg.value(metadata i32 %call6, metadata !3240, metadata !DIExpression()), !dbg !3261
  %cmp7 = icmp sgt i32 %call6, -1, !dbg !3262
  br i1 %cmp7, label %cond.end, label %cond.true, !dbg !3262

cond.true:                                        ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3262
  br label %cond.end, !dbg !3262

cond.end:                                         ; preds = %if.then5, %cond.true
  %call8 = tail call fastcc zeroext i8 @ipa_is_param_modified(%struct.ipa_node_params* %info, i32 %call6) #8, !dbg !3263
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3263
  br i1 %tobool9, label %if.then10, label %for.inc, !dbg !3265

if.then10:                                        ; preds = %cond.end
  %type11 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 0, !dbg !3266
  store i32 3, i32* %type11, align 8, !dbg !3268
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 1, i32 0, i32 1, !dbg !3269
  %4 = bitcast %union.tree_node** %formal_id to i32*, !dbg !3269
  store i32 %call6, i32* %4, align 8, !dbg !3270
  %value16 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 1, !dbg !3271
  %pass_through17 = bitcast %union.jump_func_value* %value16 to %struct.ipa_pass_through_data*, !dbg !3272
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through17, i64 0, i32 2, !dbg !3273
  store i32 116, i32* %operation, align 4, !dbg !3274
  br label %for.inc, !dbg !3275

for.inc:                                          ; preds = %cond.end, %for.body, %if.then, %if.then10
  %undecided_members.3 = phi i8 [ %undecided_members.0, %for.body ], [ %undecided_members.0, %if.then10 ], [ 1, %cond.end ], [ 1, %if.then ], !dbg !3248
  call void @llvm.dbg.value(metadata i8 %undecided_members.3, metadata !3237, metadata !DIExpression()), !dbg !3248
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3276
  br label %for.cond, !dbg !3277, !llvm.loop !3278

for.end:                                          ; preds = %for.cond
  %undecided_members.0.lcssa = phi i8 [ %undecided_members.0, %for.cond ], !dbg !3248
  call void @llvm.dbg.value(metadata i8 %undecided_members.0.lcssa, metadata !3237, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i8 %undecided_members.0.lcssa, metadata !3237, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i8 %undecided_members.0.lcssa, metadata !3237, metadata !DIExpression()), !dbg !3248
  ret i8 %undecided_members.0.lcssa, !dbg !3280
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_cst_member_ptr_arguments(%struct.ipa_jump_func* %functions, %union.gimple_statement_d* %call) unnamed_addr #5 !dbg !3281 {
entry:
  %method_field = alloca %union.tree_node*, align 8
  %delta_field = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %functions, metadata !3285, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3286, metadata !DIExpression()), !dbg !3291
  %0 = bitcast %union.tree_node** %method_field to i8*, !dbg !3292
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3292
  %1 = bitcast %union.tree_node** %delta_field to i8*, !dbg !3292
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3292
  call void @llvm.dbg.value(metadata i32 0, metadata !3287, metadata !DIExpression()), !dbg !3291
  br label %for.cond, !dbg !3293

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3295
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3287, metadata !DIExpression()), !dbg !3291
  %call1 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #8, !dbg !3296
  %2 = zext i32 %call1 to i64, !dbg !3298
  %cmp = icmp ult i64 %indvars.iv, %2, !dbg !3298
  br i1 %cmp, label %for.body, label %for.end, !dbg !3299

for.body:                                         ; preds = %for.cond
  %3 = trunc i64 %indvars.iv to i32, !dbg !3300
  %call2 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %3) #8, !dbg !3300
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3288, metadata !DIExpression()), !dbg !3291
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, i32 0, !dbg !3302
  %4 = load i32, i32* %type, align 8, !dbg !3302
  %cmp3 = icmp eq i32 %4, 0, !dbg !3304
  br i1 %cmp3, label %land.lhs.true, label %for.inc, !dbg !3305

land.lhs.true:                                    ; preds = %for.body
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3306
  %5 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !3306
  call void @llvm.dbg.value(metadata %union.tree_node** %method_field, metadata !3289, metadata !DIExpression(DW_OP_deref)), !dbg !3291
  call void @llvm.dbg.value(metadata %union.tree_node** %delta_field, metadata !3290, metadata !DIExpression(DW_OP_deref)), !dbg !3291
  %call5 = call fastcc zeroext i8 @type_like_member_ptr_p(%union.tree_node* %5, %union.tree_node** nonnull %method_field, %union.tree_node** nonnull %delta_field) #8, !dbg !3307
  %tobool = icmp eq i8 %call5, 0, !dbg !3307
  br i1 %tobool, label %for.inc, label %if.then, !dbg !3308

if.then:                                          ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %method_field, align 8, !dbg !3309
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3289, metadata !DIExpression()), !dbg !3291
  %7 = load %union.tree_node*, %union.tree_node** %delta_field, align 8, !dbg !3310
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3290, metadata !DIExpression()), !dbg !3291
  %arrayidx7 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %functions, i64 %indvars.iv, !dbg !3311
  call fastcc void @determine_cst_member_ptr(%union.gimple_statement_d* %call, %union.tree_node* %call2, %union.tree_node* %6, %union.tree_node* %7, %struct.ipa_jump_func* %arrayidx7) #8, !dbg !3312
  br label %for.inc, !dbg !3312

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3313
  br label %for.cond, !dbg !3314, !llvm.loop !3315

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3317
  ret void, !dbg !3317
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_analyze_params_uses(%struct.cgraph_node* %node) local_unnamed_addr #5 !dbg !3318 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !3320, metadata !DIExpression()), !dbg !3333
  %0 = bitcast %struct.cgraph_node* %node to %struct.tree_function_decl**, !dbg !3334
  %1 = load %struct.tree_function_decl*, %struct.tree_function_decl** %0, align 8, !dbg !3334
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3335
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3335
  %3 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3336
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %3, i64 0, i32 0, !dbg !3336
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !3336
  %4 = load i32, i32* %uid, align 8, !dbg !3336
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %4) #8, !dbg !3336
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !3325, metadata !DIExpression()), !dbg !3333
  %call2 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !3337
  %cmp = icmp eq i32 %call2, 0, !dbg !3339
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !3340

lor.lhs.false:                                    ; preds = %entry
  %uses_analysis_done = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 5, !dbg !3341
  %bf.load = load i8, i8* %uses_analysis_done, align 8, !dbg !3341
  %bf.clear = and i8 %bf.load, 4, !dbg !3341
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !3342
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !3343

if.end:                                           ; preds = %lor.lhs.false
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %1, i64 0, i32 1, !dbg !3344
  %5 = load %struct.function*, %struct.function** %f, align 8, !dbg !3344
  call void @llvm.dbg.value(metadata %struct.function* %5, metadata !3323, metadata !DIExpression()), !dbg !3333
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3345
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3345
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !3345
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3345
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3346
  br label %for.cond, !dbg !3345

for.cond:                                         ; preds = %for.inc11, %if.end
  %9 = phi %struct.control_flow_graph* [ %6, %if.end ], [ %.pre, %for.inc11 ], !dbg !3347
  %.pn = phi %struct.basic_block_def* [ %7, %if.end ], [ %bb.0, %for.inc11 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3348
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3348
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3322, metadata !DIExpression()), !dbg !3333
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !3347
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3347
  %cmp5 = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !3347
  br i1 %cmp5, label %for.end13, label %for.body, !dbg !3345

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !3349
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #8, !dbg !3349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !3349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !3349
  br label %for.cond6, !dbg !3350

for.cond6:                                        ; preds = %for.body9, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3324, metadata !DIExpression(DW_OP_deref)), !dbg !3333
  %call7 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3351
  %tobool8 = icmp eq i8 %call7, 0, !dbg !3352
  br i1 %tobool8, label %for.body9, label %for.inc11, !dbg !3353

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3324, metadata !DIExpression(DW_OP_deref)), !dbg !3333
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3354
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !3326, metadata !DIExpression()), !dbg !3355
  call fastcc void @ipa_analyze_stmt_uses(%struct.ipa_node_params* %call, %union.gimple_statement_d* %call10) #8, !dbg !3356
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3324, metadata !DIExpression(DW_OP_deref)), !dbg !3333
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3357
  br label %for.cond6, !dbg !3358, !llvm.loop !3359

for.inc11:                                        ; preds = %for.cond6
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3347
  br label %for.cond, !dbg !3347, !llvm.loop !3361

for.end13:                                        ; preds = %for.cond
  %bf.load15 = load i8, i8* %uses_analysis_done, align 8, !dbg !3363
  %bf.set = or i8 %bf.load15, 4, !dbg !3363
  store i8 %bf.set, i8* %uses_analysis_done, align 8, !dbg !3363
  br label %cleanup, !dbg !3364

cleanup:                                          ; preds = %lor.lhs.false, %entry, %for.end13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3364
  ret void, !dbg !3364
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_analyze_stmt_uses(%struct.ipa_node_params* %info, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !3365 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3369, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3370, metadata !DIExpression()), !dbg !3371
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #8, !dbg !3372
  %tobool = icmp eq i8 %call, 0, !dbg !3372
  br i1 %tobool, label %if.end, label %if.then, !dbg !3374

if.then:                                          ; preds = %entry
  tail call fastcc void @ipa_analyze_call_uses(%struct.ipa_node_params* %info, %union.gimple_statement_d* %stmt) #8, !dbg !3375
  br label %if.end, !dbg !3375

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3376
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ipa_propagate_indirect_call_infos(%struct.cgraph_edge* %cs, %struct.VEC_cgraph_edge_p_heap** %new_edges) local_unnamed_addr #5 !dbg !3377 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !3382, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_heap** %new_edges, metadata !3383, metadata !DIExpression()), !dbg !3384
  %0 = load i32, i32* @flag_wpa, align 4, !dbg !3385
  %tobool = icmp eq i32 %0, 0, !dbg !3385
  %1 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3387
  %tobool1 = icmp ne %struct.VEC_ipa_node_params_t_heap* %1, null, !dbg !3387
  %or.cond = and i1 %tobool, %tobool1, !dbg !3389
  br i1 %or.cond, label %if.end3, label %return, !dbg !3389

if.end3:                                          ; preds = %entry
  %2 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3390
  %tobool4 = icmp eq %struct.VEC_ipa_edge_args_t_gc* %2, null, !dbg !3390
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !3390

cond.true:                                        ; preds = %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1167, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3390
  br label %cond.end, !dbg !3390

cond.end:                                         ; preds = %if.end3, %cond.true
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 2, !dbg !3391
  %3 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !3391
  %call = tail call fastcc zeroext i8 @propagate_info_to_inlined_callees(%struct.cgraph_edge* %cs, %struct.cgraph_node* %3, %struct.VEC_cgraph_edge_p_heap** %new_edges) #8, !dbg !3392
  br label %return, !dbg !3393

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i8 [ %call, %cond.end ], [ 0, %entry ], !dbg !3384
  ret i8 %retval.0, !dbg !3394
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @propagate_info_to_inlined_callees(%struct.cgraph_edge* %cs, %struct.cgraph_node* %node, %struct.VEC_cgraph_edge_p_heap** %new_edges) unnamed_addr #5 !dbg !3395 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !3399, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !3400, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_heap** %new_edges, metadata !3401, metadata !DIExpression()), !dbg !3404
  %call = tail call fastcc zeroext i8 @update_call_notes_after_inlining(%struct.cgraph_edge* %cs, %struct.cgraph_node* %node, %struct.VEC_cgraph_edge_p_heap** %new_edges) #8, !dbg !3405
  call void @llvm.dbg.value(metadata i8 %call, metadata !3403, metadata !DIExpression()), !dbg !3404
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 1, !dbg !3406
  br label %for.cond, !dbg !3408

for.cond:                                         ; preds = %for.inc, %entry
  %e.0.in = phi %struct.cgraph_edge** [ %callees, %entry ], [ %next_callee, %for.inc ]
  %res.0 = phi i8 [ %call, %entry ], [ %res.1, %for.inc ], !dbg !3409
  %e.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %e.0.in, align 8, !dbg !3410
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !3403, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %e.0, metadata !3402, metadata !DIExpression()), !dbg !3404
  %tobool = icmp eq %struct.cgraph_edge* %e.0, null, !dbg !3411
  br i1 %tobool, label %for.end, label %for.body, !dbg !3411

for.body:                                         ; preds = %for.cond
  %inline_failed = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 9, !dbg !3412
  %0 = load i32, i32* %inline_failed, align 8, !dbg !3412
  %tobool1 = icmp eq i32 %0, 0, !dbg !3415
  br i1 %tobool1, label %if.then, label %if.else, !dbg !3416

if.then:                                          ; preds = %for.body
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 2, !dbg !3417
  %1 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !3417
  %call2 = tail call fastcc zeroext i8 @propagate_info_to_inlined_callees(%struct.cgraph_edge* %cs, %struct.cgraph_node* %1, %struct.VEC_cgraph_edge_p_heap** %new_edges) #8, !dbg !3418
  %or1 = or i8 %res.0, %call2, !dbg !3419
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3403, metadata !DIExpression()), !dbg !3404
  br label %for.inc, !dbg !3420

if.else:                                          ; preds = %for.body
  tail call fastcc void @update_jump_functions_after_inlining(%struct.cgraph_edge* %cs, %struct.cgraph_edge* nonnull %e.0) #8, !dbg !3421
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %res.1 = phi i8 [ %res.0, %if.else ], [ %or1, %if.then ], !dbg !3404
  call void @llvm.dbg.value(metadata i8 %res.1, metadata !3403, metadata !DIExpression()), !dbg !3404
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 6, !dbg !3422
  br label %for.cond, !dbg !3423, !llvm.loop !3424

for.end:                                          ; preds = %for.cond
  %res.0.lcssa = phi i8 [ %res.0, %for.cond ], !dbg !3409
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !3403, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !3403, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !3403, metadata !DIExpression()), !dbg !3404
  ret i8 %res.0.lcssa, !dbg !3426
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_free_edge_args_substructures(%struct.ipa_edge_args* %args) local_unnamed_addr #5 !dbg !3427 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %args, metadata !3431, metadata !DIExpression()), !dbg !3432
  %jump_functions = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %args, i64 0, i32 1, !dbg !3433
  %0 = load %struct.ipa_jump_func*, %struct.ipa_jump_func** %jump_functions, align 8, !dbg !3433
  %tobool = icmp eq %struct.ipa_jump_func* %0, null, !dbg !3435
  br i1 %tobool, label %if.end, label %if.then, !dbg !3436

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.ipa_jump_func* %0 to i8*, !dbg !3436
  tail call void @ggc_free(i8* nonnull %1) #6, !dbg !3437
  br label %if.end, !dbg !3437

if.end:                                           ; preds = %entry, %if.then
  %2 = bitcast %struct.ipa_edge_args* %args to i8*, !dbg !3438
  %call = tail call i8* @memset(i8* %2, i32 0, i64 16) #6, !dbg !3439
  ret void, !dbg !3440
}

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_free_all_edge_args() local_unnamed_addr #5 !dbg !3441 {
entry:
  %args = alloca %struct.ipa_edge_args*, align 8
  %0 = bitcast %struct.ipa_edge_args** %args to i8*, !dbg !3445
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3445
  call void @llvm.dbg.value(metadata i32 0, metadata !3443, metadata !DIExpression()), !dbg !3446
  br label %for.cond, !dbg !3447

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3449
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3443, metadata !DIExpression()), !dbg !3446
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3450
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, !dbg !3450
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args** %args, metadata !3444, metadata !DIExpression(DW_OP_deref)), !dbg !3446
  %call = call fastcc i32 @VEC_ipa_edge_args_t_base_iterate(%struct.VEC_ipa_edge_args_t_base* %base, i32 %i.0, %struct.ipa_edge_args** nonnull %args) #8, !dbg !3450
  %tobool1 = icmp eq i32 %call, 0, !dbg !3452
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3452

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ipa_edge_args*, %struct.ipa_edge_args** %args, align 8, !dbg !3453
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %2, metadata !3444, metadata !DIExpression()), !dbg !3446
  call void @ipa_free_edge_args_substructures(%struct.ipa_edge_args* %2) #8, !dbg !3454
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3443, metadata !DIExpression()), !dbg !3446
  br label %for.cond, !dbg !3456, !llvm.loop !3457

for.end:                                          ; preds = %for.cond
  call fastcc void @VEC_ipa_edge_args_t_gc_free(%struct.VEC_ipa_edge_args_t_gc** nonnull @ipa_edge_args_vector) #8, !dbg !3459
  store %struct.VEC_ipa_edge_args_t_gc* null, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3460
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3461
  ret void, !dbg !3461
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_edge_args_t_base_iterate(%struct.VEC_ipa_edge_args_t_base* %vec_, i32 %ix_, %struct.ipa_edge_args** %ptr) unnamed_addr #0 !dbg !3462 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_base* %vec_, metadata !3467, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3468, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args** %ptr, metadata !3469, metadata !DIExpression()), !dbg !3470
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_base* %vec_, null, !dbg !3471
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3471

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 0, !dbg !3471
  %0 = load i32, i32* %num, align 8, !dbg !3471
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3471
  br i1 %cmp, label %if.then, label %if.else, !dbg !3473

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3474
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3474
  br label %return, !dbg !3474

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3476

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.ipa_edge_args* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !3478
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3478
  store %struct.ipa_edge_args* %storemerge, %struct.ipa_edge_args** %ptr, align 8, !dbg !3478
  ret i32 %retval.0, !dbg !3473
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_edge_args_t_gc_free(%struct.VEC_ipa_edge_args_t_gc** %vec_) unnamed_addr #0 !dbg !3479 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, metadata !3483, metadata !DIExpression()), !dbg !3484
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3485
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_gc* %0, null, !dbg !3485
  br i1 %tobool, label %if.end, label %if.then, !dbg !3487

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ipa_edge_args_t_gc* %0 to i8*, !dbg !3487
  tail call void @ggc_free(i8* nonnull %1) #6, !dbg !3485
  br label %if.end, !dbg !3485

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ipa_edge_args_t_gc* null, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3487
  ret void, !dbg !3487
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_free_node_params_substructures(%struct.ipa_node_params* %info) local_unnamed_addr #5 !dbg !3488 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3492, metadata !DIExpression()), !dbg !3495
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 1, !dbg !3496
  %0 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !3496
  %tobool = icmp eq %struct.ipa_param_descriptor* %0, null, !dbg !3498
  br i1 %tobool, label %if.end, label %if.then, !dbg !3499

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.ipa_param_descriptor* %0 to i8*, !dbg !3499
  tail call void @free(i8* nonnull %1) #6, !dbg !3500
  br label %if.end, !dbg !3500

if.end:                                           ; preds = %entry, %if.then
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 2, !dbg !3495
  %2 = bitcast %struct.ipa_param_call_note** %param_calls to i64*, !dbg !3501
  br label %while.cond, !dbg !3502

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %param_calls, align 8, !dbg !3503
  %tobool2 = icmp eq %struct.ipa_param_call_note* %3, null, !dbg !3502
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3502

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %3, metadata !3493, metadata !DIExpression()), !dbg !3501
  %next = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %3, i64 0, i32 1, !dbg !3504
  %4 = bitcast %struct.ipa_param_call_note** %next to i64*, !dbg !3504
  %5 = load i64, i64* %4, align 8, !dbg !3504
  store i64 %5, i64* %2, align 8, !dbg !3505
  %6 = bitcast %struct.ipa_param_call_note* %3 to i8*, !dbg !3506
  tail call void @free(i8* nonnull %6) #6, !dbg !3507
  br label %while.cond, !dbg !3502, !llvm.loop !3508

while.end:                                        ; preds = %while.cond
  %7 = bitcast %struct.ipa_node_params* %info to i8*, !dbg !3510
  %call = tail call i8* @memset(i8* %7, i32 0, i64 48) #6, !dbg !3511
  ret void, !dbg !3512
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_free_all_node_params() local_unnamed_addr #5 !dbg !3513 {
entry:
  %info = alloca %struct.ipa_node_params*, align 8
  %0 = bitcast %struct.ipa_node_params** %info to i8*, !dbg !3517
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3517
  call void @llvm.dbg.value(metadata i32 0, metadata !3515, metadata !DIExpression()), !dbg !3518
  br label %for.cond, !dbg !3519

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3521
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3515, metadata !DIExpression()), !dbg !3518
  %1 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3522
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %1, i64 0, i32 0, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.ipa_node_params** %info, metadata !3516, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  %call = call fastcc i32 @VEC_ipa_node_params_t_base_iterate(%struct.VEC_ipa_node_params_t_base* %base, i32 %i.0, %struct.ipa_node_params** nonnull %info) #8, !dbg !3522
  %tobool1 = icmp eq i32 %call, 0, !dbg !3524
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3524

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ipa_node_params*, %struct.ipa_node_params** %info, align 8, !dbg !3525
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %2, metadata !3516, metadata !DIExpression()), !dbg !3518
  call void @ipa_free_node_params_substructures(%struct.ipa_node_params* %2) #8, !dbg !3526
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3515, metadata !DIExpression()), !dbg !3518
  br label %for.cond, !dbg !3528, !llvm.loop !3529

for.end:                                          ; preds = %for.cond
  call fastcc void @VEC_ipa_node_params_t_heap_free(%struct.VEC_ipa_node_params_t_heap** nonnull @ipa_node_params_vector) #8, !dbg !3531
  store %struct.VEC_ipa_node_params_t_heap* null, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3533
  ret void, !dbg !3533
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_node_params_t_base_iterate(%struct.VEC_ipa_node_params_t_base* %vec_, i32 %ix_, %struct.ipa_node_params** %ptr) unnamed_addr #0 !dbg !3534 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_base* %vec_, metadata !3539, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata %struct.ipa_node_params** %ptr, metadata !3541, metadata !DIExpression()), !dbg !3542
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_base* %vec_, null, !dbg !3543
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3543

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 0, !dbg !3543
  %0 = load i32, i32* %num, align 8, !dbg !3543
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3543
  br i1 %cmp, label %if.then, label %if.else, !dbg !3545

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3546
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3546
  br label %return, !dbg !3546

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3548

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.ipa_node_params* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !3550
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3550
  store %struct.ipa_node_params* %storemerge, %struct.ipa_node_params** %ptr, align 8, !dbg !3550
  ret i32 %retval.0, !dbg !3545
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_node_params_t_heap_free(%struct.VEC_ipa_node_params_t_heap** %vec_) unnamed_addr #0 !dbg !3551 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, metadata !3556, metadata !DIExpression()), !dbg !3557
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3558
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_heap* %0, null, !dbg !3558
  br i1 %tobool, label %if.end, label %if.then, !dbg !3560

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ipa_node_params_t_heap* %0 to i8*, !dbg !3560
  tail call void @free(i8* nonnull %1) #6, !dbg !3558
  br label %if.end, !dbg !3558

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ipa_node_params_t_heap* null, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3560
  ret void, !dbg !3560
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_register_cgraph_hooks() local_unnamed_addr #5 !dbg !3561 {
entry:
  %0 = load %struct.cgraph_edge_hook_list*, %struct.cgraph_edge_hook_list** @edge_removal_hook_holder, align 8, !dbg !3562
  %tobool = icmp eq %struct.cgraph_edge_hook_list* %0, null, !dbg !3562
  br i1 %tobool, label %if.then, label %if.end, !dbg !3564

if.then:                                          ; preds = %entry
  %call = tail call %struct.cgraph_edge_hook_list* @cgraph_add_edge_removal_hook(void (%struct.cgraph_edge*, i8*)* nonnull @ipa_edge_removal_hook, i8* null) #6, !dbg !3565
  store %struct.cgraph_edge_hook_list* %call, %struct.cgraph_edge_hook_list** @edge_removal_hook_holder, align 8, !dbg !3566
  br label %if.end, !dbg !3567

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.cgraph_node_hook_list*, %struct.cgraph_node_hook_list** @node_removal_hook_holder, align 8, !dbg !3568
  %tobool1 = icmp eq %struct.cgraph_node_hook_list* %1, null, !dbg !3568
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !3570

if.then2:                                         ; preds = %if.end
  %call3 = tail call %struct.cgraph_node_hook_list* @cgraph_add_node_removal_hook(void (%struct.cgraph_node*, i8*)* nonnull @ipa_node_removal_hook, i8* null) #6, !dbg !3571
  store %struct.cgraph_node_hook_list* %call3, %struct.cgraph_node_hook_list** @node_removal_hook_holder, align 8, !dbg !3572
  br label %if.end4, !dbg !3573

if.end4:                                          ; preds = %if.end, %if.then2
  %2 = load %struct.cgraph_2edge_hook_list*, %struct.cgraph_2edge_hook_list** @edge_duplication_hook_holder, align 8, !dbg !3574
  %tobool5 = icmp eq %struct.cgraph_2edge_hook_list* %2, null, !dbg !3574
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3576

if.then6:                                         ; preds = %if.end4
  %call7 = tail call %struct.cgraph_2edge_hook_list* @cgraph_add_edge_duplication_hook(void (%struct.cgraph_edge*, %struct.cgraph_edge*, i8*)* nonnull @ipa_edge_duplication_hook, i8* null) #6, !dbg !3577
  store %struct.cgraph_2edge_hook_list* %call7, %struct.cgraph_2edge_hook_list** @edge_duplication_hook_holder, align 8, !dbg !3578
  br label %if.end8, !dbg !3579

if.end8:                                          ; preds = %if.end4, %if.then6
  %3 = load %struct.cgraph_2node_hook_list*, %struct.cgraph_2node_hook_list** @node_duplication_hook_holder, align 8, !dbg !3580
  %tobool9 = icmp eq %struct.cgraph_2node_hook_list* %3, null, !dbg !3580
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3582

if.then10:                                        ; preds = %if.end8
  %call11 = tail call %struct.cgraph_2node_hook_list* @cgraph_add_node_duplication_hook(void (%struct.cgraph_node*, %struct.cgraph_node*, i8*)* nonnull @ipa_node_duplication_hook, i8* null) #6, !dbg !3583
  store %struct.cgraph_2node_hook_list* %call11, %struct.cgraph_2node_hook_list** @node_duplication_hook_holder, align 8, !dbg !3584
  br label %if.end12, !dbg !3585

if.end12:                                         ; preds = %if.end8, %if.then10
  ret void, !dbg !3586
}

declare dso_local %struct.cgraph_edge_hook_list* @cgraph_add_edge_removal_hook(void (%struct.cgraph_edge*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @ipa_edge_removal_hook(%struct.cgraph_edge* %cs, i8* %data) #5 !dbg !3587 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !3591, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %data, metadata !3592, metadata !DIExpression()), !dbg !3593
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3594
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !3594
  %call = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %base) #8, !dbg !3594
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 12, !dbg !3596
  %1 = load i32, i32* %uid, align 4, !dbg !3596
  %cmp = icmp ugt i32 %call, %1, !dbg !3597
  br i1 %cmp, label %if.end, label %return, !dbg !3598

if.end:                                           ; preds = %entry
  %2 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3599
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %2, i64 0, i32 0, !dbg !3599
  %call8 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base3, i32 %1) #8, !dbg !3599
  tail call void @ipa_free_edge_args_substructures(%struct.ipa_edge_args* %call8) #8, !dbg !3600
  br label %return, !dbg !3601

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !3601
}

declare dso_local %struct.cgraph_node_hook_list* @cgraph_add_node_removal_hook(void (%struct.cgraph_node*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @ipa_node_removal_hook(%struct.cgraph_node* %node, i8* %data) #5 !dbg !3602 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !3606, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %data, metadata !3607, metadata !DIExpression()), !dbg !3608
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3609
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !3609
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !3609
  %1 = load i32, i32* %uid, align 8, !dbg !3609
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !3609
  tail call void @ipa_free_node_params_substructures(%struct.ipa_node_params* %call) #8, !dbg !3610
  ret void, !dbg !3611
}

declare dso_local %struct.cgraph_2edge_hook_list* @cgraph_add_edge_duplication_hook(void (%struct.cgraph_edge*, %struct.cgraph_edge*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @ipa_edge_duplication_hook(%struct.cgraph_edge* %src, %struct.cgraph_edge* %dst, i8* %data) #5 !dbg !3612 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %src, metadata !3616, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %dst, metadata !3617, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i8* %data, metadata !3618, metadata !DIExpression()), !dbg !3622
  tail call fastcc void @ipa_check_create_edge_args() #8, !dbg !3623
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3624
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !3624
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %src, i64 0, i32 12, !dbg !3624
  %1 = load i32, i32* %uid, align 4, !dbg !3624
  %call = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base, i32 %1) #8, !dbg !3624
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call, metadata !3619, metadata !DIExpression()), !dbg !3622
  %2 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !3625
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %2, i64 0, i32 0, !dbg !3625
  %uid7 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %dst, i64 0, i32 12, !dbg !3625
  %3 = load i32, i32* %uid7, align 4, !dbg !3625
  %call8 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base3, i32 %3) #8, !dbg !3625
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call8, metadata !3620, metadata !DIExpression()), !dbg !3622
  %call9 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call) #8, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %call9, metadata !3621, metadata !DIExpression()), !dbg !3622
  tail call fastcc void @ipa_set_cs_argument_count(%struct.ipa_edge_args* %call8, i32 %call9) #8, !dbg !3627
  %jump_functions = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %call, i64 0, i32 1, !dbg !3628
  %4 = bitcast %struct.ipa_jump_func** %jump_functions to i8**, !dbg !3628
  %5 = load i8*, i8** %4, align 8, !dbg !3628
  %conv = sext i32 %call9 to i64, !dbg !3629
  %mul = shl nsw i64 %conv, 5, !dbg !3630
  %call10 = tail call fastcc i8* @duplicate_ggc_array(i8* %5, i64 %mul) #8, !dbg !3631
  %jump_functions11 = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %call8, i64 0, i32 1, !dbg !3632
  %6 = bitcast %struct.ipa_jump_func** %jump_functions11 to i8**, !dbg !3633
  store i8* %call10, i8** %6, align 8, !dbg !3633
  ret void, !dbg !3634
}

declare dso_local %struct.cgraph_2node_hook_list* @cgraph_add_node_duplication_hook(void (%struct.cgraph_node*, %struct.cgraph_node*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @ipa_node_duplication_hook(%struct.cgraph_node* %src, %struct.cgraph_node* %dst, i8* %data) #5 !dbg !3635 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %src, metadata !3639, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %dst, metadata !3640, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8* %data, metadata !3641, metadata !DIExpression()), !dbg !3650
  tail call fastcc void @ipa_check_create_node_params() #8, !dbg !3651
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3652
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !3652
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %src, i64 0, i32 24, !dbg !3652
  %1 = load i32, i32* %uid, align 8, !dbg !3652
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !3652
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !3642, metadata !DIExpression()), !dbg !3650
  %2 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3653
  %base3 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %2, i64 0, i32 0, !dbg !3653
  %uid7 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %dst, i64 0, i32 24, !dbg !3653
  %3 = load i32, i32* %uid7, align 8, !dbg !3653
  %call8 = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base3, i32 %3) #8, !dbg !3653
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call8, metadata !3643, metadata !DIExpression()), !dbg !3650
  %call9 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %call9, metadata !3645, metadata !DIExpression()), !dbg !3650
  tail call fastcc void @ipa_set_param_count(%struct.ipa_node_params* %call8, i32 %call9) #8, !dbg !3655
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 1, !dbg !3656
  %4 = bitcast %struct.ipa_param_descriptor** %params to i8**, !dbg !3656
  %5 = load i8*, i8** %4, align 8, !dbg !3656
  %conv = sext i32 %call9 to i64, !dbg !3657
  %mul = shl nsw i64 %conv, 5, !dbg !3658
  %call10 = tail call fastcc i8* @duplicate_array(i8* %5, i64 %mul) #8, !dbg !3659
  %params11 = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call8, i64 0, i32 1, !dbg !3660
  %6 = bitcast %struct.ipa_param_descriptor** %params11 to i8**, !dbg !3661
  store i8* %call10, i8** %6, align 8, !dbg !3661
  %ipcp_orig_node = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 3, !dbg !3662
  %7 = bitcast %struct.cgraph_node** %ipcp_orig_node to i64*, !dbg !3662
  %8 = load i64, i64* %7, align 8, !dbg !3662
  %ipcp_orig_node12 = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call8, i64 0, i32 3, !dbg !3663
  %9 = bitcast %struct.cgraph_node** %ipcp_orig_node12 to i64*, !dbg !3664
  store i64 %8, i64* %9, align 8, !dbg !3664
  %count_scale = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 4, !dbg !3665
  %10 = load i64, i64* %count_scale, align 8, !dbg !3665
  %count_scale13 = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call8, i64 0, i32 4, !dbg !3666
  store i64 %10, i64* %count_scale13, align 8, !dbg !3667
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 2, !dbg !3668
  %param_calls17 = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call8, i64 0, i32 2, !dbg !3669
  %11 = bitcast %struct.ipa_param_call_note** %param_calls17 to i64*, !dbg !3669
  %12 = bitcast %struct.ipa_param_call_note** %param_calls17 to i8**, !dbg !3669
  br label %for.cond, !dbg !3670

for.cond:                                         ; preds = %for.body, %entry
  %note.0.in = phi %struct.ipa_param_call_note** [ %param_calls, %entry ], [ %next19, %for.body ]
  %note.0 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %note.0.in, align 8, !dbg !3671
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %note.0, metadata !3644, metadata !DIExpression()), !dbg !3650
  %tobool14 = icmp eq %struct.ipa_param_call_note* %note.0, null, !dbg !3672
  br i1 %tobool14, label %for.end, label %for.body, !dbg !3672

for.body:                                         ; preds = %for.cond
  %call15 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !3673
  call void @llvm.dbg.value(metadata i8* %call15, metadata !3646, metadata !DIExpression()), !dbg !3669
  %13 = bitcast %struct.ipa_param_call_note* %note.0 to i8*, !dbg !3674
  %call16 = tail call i8* @memcpy(i8* %call15, i8* nonnull %13, i64 40) #6, !dbg !3675
  %14 = load i64, i64* %11, align 8, !dbg !3676
  %next = getelementptr inbounds i8, i8* %call15, i64 8, !dbg !3677
  %15 = bitcast i8* %next to i64*, !dbg !3678
  store i64 %14, i64* %15, align 8, !dbg !3678
  store i8* %call15, i8** %12, align 8, !dbg !3679
  %next19 = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.0, i64 0, i32 1, !dbg !3680
  br label %for.cond, !dbg !3681, !llvm.loop !3682

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3684
}

; Function Attrs: nounwind uwtable
define dso_local void @free_all_ipa_structures_after_ipa_cp() local_unnamed_addr #5 !dbg !3685 {
entry:
  %0 = load i32, i32* @flag_indirect_inlining, align 4, !dbg !3686
  %tobool = icmp eq i32 %0, 0, !dbg !3686
  br i1 %tobool, label %if.then, label %if.end, !dbg !3688

if.then:                                          ; preds = %entry
  tail call void @ipa_free_all_edge_args() #8, !dbg !3689
  tail call void @ipa_free_all_node_params() #8, !dbg !3691
  tail call fastcc void @ipa_unregister_cgraph_hooks() #8, !dbg !3692
  br label %if.end, !dbg !3693

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3694
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_unregister_cgraph_hooks() unnamed_addr #5 !dbg !3695 {
entry:
  %0 = load %struct.cgraph_edge_hook_list*, %struct.cgraph_edge_hook_list** @edge_removal_hook_holder, align 8, !dbg !3696
  tail call void @cgraph_remove_edge_removal_hook(%struct.cgraph_edge_hook_list* %0) #6, !dbg !3697
  store %struct.cgraph_edge_hook_list* null, %struct.cgraph_edge_hook_list** @edge_removal_hook_holder, align 8, !dbg !3698
  %1 = load %struct.cgraph_node_hook_list*, %struct.cgraph_node_hook_list** @node_removal_hook_holder, align 8, !dbg !3699
  tail call void @cgraph_remove_node_removal_hook(%struct.cgraph_node_hook_list* %1) #6, !dbg !3700
  store %struct.cgraph_node_hook_list* null, %struct.cgraph_node_hook_list** @node_removal_hook_holder, align 8, !dbg !3701
  %2 = load %struct.cgraph_2edge_hook_list*, %struct.cgraph_2edge_hook_list** @edge_duplication_hook_holder, align 8, !dbg !3702
  tail call void @cgraph_remove_edge_duplication_hook(%struct.cgraph_2edge_hook_list* %2) #6, !dbg !3703
  store %struct.cgraph_2edge_hook_list* null, %struct.cgraph_2edge_hook_list** @edge_duplication_hook_holder, align 8, !dbg !3704
  %3 = load %struct.cgraph_2node_hook_list*, %struct.cgraph_2node_hook_list** @node_duplication_hook_holder, align 8, !dbg !3705
  tail call void @cgraph_remove_node_duplication_hook(%struct.cgraph_2node_hook_list* %3) #6, !dbg !3706
  store %struct.cgraph_2node_hook_list* null, %struct.cgraph_2node_hook_list** @node_duplication_hook_holder, align 8, !dbg !3707
  ret void, !dbg !3708
}

; Function Attrs: nounwind uwtable
define dso_local void @free_all_ipa_structures_after_iinln() local_unnamed_addr #5 !dbg !3709 {
entry:
  tail call void @ipa_free_all_edge_args() #8, !dbg !3710
  tail call void @ipa_free_all_node_params() #8, !dbg !3711
  tail call fastcc void @ipa_unregister_cgraph_hooks() #8, !dbg !3712
  ret void, !dbg !3713
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_print_node_params(%struct._IO_FILE* %f, %struct.cgraph_node* %node) local_unnamed_addr #5 !dbg !3714 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3716, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !3717, metadata !DIExpression()), !dbg !3722
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 27, !dbg !3723
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !3723
  %bf.clear = and i16 %bf.load, 32, !dbg !3723
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !3725
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3726

if.end:                                           ; preds = %entry
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !3727
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !3727
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !3727
  %1 = load i32, i32* %uid, align 8, !dbg !3727
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !3727
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !3721, metadata !DIExpression()), !dbg !3722
  %call2 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %node) #6, !dbg !3728
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i8* %call2) #6, !dbg !3729
  %call4 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %call4, metadata !3719, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 0, metadata !3718, metadata !DIExpression()), !dbg !3722
  br label %for.cond, !dbg !3731

for.cond:                                         ; preds = %if.end24, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %if.end24 ], !dbg !3733
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3718, metadata !DIExpression()), !dbg !3722
  %cmp = icmp slt i32 %i.0, %call4, !dbg !3734
  br i1 %cmp, label %for.body, label %cleanup.cont.loopexit, !dbg !3736

for.body:                                         ; preds = %for.cond
  %call5 = tail call fastcc %union.tree_node* @ipa_get_param(%struct.ipa_node_params* %call, i32 %i.0) #8, !dbg !3737
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3720, metadata !DIExpression()), !dbg !3722
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3739
  %bf.load7 = load i64, i64* %2, align 8, !dbg !3739
  %bf.cast91 = and i64 %bf.load7, 65535, !dbg !3741
  %cmp10 = icmp eq i64 %bf.cast91, 34, !dbg !3741
  br i1 %cmp10, label %if.then11, label %if.end19, !dbg !3742

if.then11:                                        ; preds = %for.body
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3743
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3743
  %tobool12 = icmp eq %union.tree_node* %3, null, !dbg !3743
  br i1 %tobool12, label %cond.end16, label %cond.true13, !dbg !3743

cond.true13:                                      ; preds = %if.then11
  %4 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !3744
  %call14 = tail call i8* %4(%union.tree_node* %call5, i32 2) #6, !dbg !3745
  br label %cond.end16, !dbg !3743

cond.end16:                                       ; preds = %if.then11, %cond.true13
  %cond17 = phi i8* [ %call14, %cond.true13 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), %if.then11 ], !dbg !3743
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 %i.0, i8* %cond17) #6, !dbg !3746
  br label %if.end19, !dbg !3746

if.end19:                                         ; preds = %cond.end16, %for.body
  %call20 = tail call fastcc zeroext i8 @ipa_is_param_modified(%struct.ipa_node_params* %call, i32 %i.0) #8, !dbg !3747
  %tobool21 = icmp eq i8 %call20, 0, !dbg !3747
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !3749

if.then22:                                        ; preds = %if.end19
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !3750
  br label %if.end24, !dbg !3750

if.end24:                                         ; preds = %if.end19, %if.then22
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3751
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3718, metadata !DIExpression()), !dbg !3722
  br label %for.cond, !dbg !3753, !llvm.loop !3754

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3756

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !3756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @ipa_get_param(%struct.ipa_node_params* %info, i32 %i) unnamed_addr #0 !dbg !3757 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3761, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.value(metadata i32 %i, metadata !3762, metadata !DIExpression()), !dbg !3763
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 1, !dbg !3764
  %0 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !3764
  %idxprom = sext i32 %i to i64, !dbg !3765
  %decl = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %0, i64 %idxprom, i32 1, !dbg !3766
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3766
  ret %union.tree_node* %1, !dbg !3767
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ipa_is_param_modified(%struct.ipa_node_params* %info, i32 %i) unnamed_addr #0 !dbg !3768 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !3772, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %i, metadata !3773, metadata !DIExpression()), !dbg !3774
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 1, !dbg !3775
  %0 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !3775
  %idxprom = sext i32 %i to i64, !dbg !3776
  %modified = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %0, i64 %idxprom, i32 2, !dbg !3777
  %bf.load = load i8, i8* %modified, align 8, !dbg !3777
  %bf.clear = and i8 %bf.load, 1, !dbg !3777
  ret i8 %bf.clear, !dbg !3778
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_print_all_params(%struct._IO_FILE* %f) local_unnamed_addr #5 !dbg !3779 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3781, metadata !DIExpression()), !dbg !3783
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !3784
  br label %for.cond, !dbg !3785

for.cond:                                         ; preds = %for.body, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.body ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !3787
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !3782, metadata !DIExpression()), !dbg !3783
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !3788
  br i1 %tobool, label %for.end, label %for.body, !dbg !3788

for.body:                                         ; preds = %for.cond
  tail call void @ipa_print_node_params(%struct._IO_FILE* %f, %struct.cgraph_node* nonnull %node.0) #8, !dbg !3789
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !3791
  br label %for.cond, !dbg !3792, !llvm.loop !3793

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3795
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_tree_heap* @ipa_get_vector_of_formal_parms(%union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !3796 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !3800, metadata !DIExpression()), !dbg !3804
  %call = tail call fastcc i32 @count_formal_params_1(%union.tree_node* %fndecl) #8, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %call, metadata !3802, metadata !DIExpression()), !dbg !3804
  %call1 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %call) #8, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !3801, metadata !DIExpression()), !dbg !3804
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !3807
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call1, i64 0, i32 0, !dbg !3809
  br label %for.cond, !dbg !3811

for.cond:                                         ; preds = %for.body, %entry
  %parm.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.body ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !3812
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !3803, metadata !DIExpression()), !dbg !3804
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !3813
  br i1 %tobool, label %for.end, label %for.body, !dbg !3813

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* nonnull %parm.0) #8, !dbg !3814
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3815
  br label %for.cond, !dbg !3816, !llvm.loop !3817

for.end:                                          ; preds = %for.cond
  ret %struct.VEC_tree_heap* %call1, !dbg !3819
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @count_formal_params_1(%union.tree_node* %fndecl) unnamed_addr #0 !dbg !3820 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !3824, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 0, metadata !3826, metadata !DIExpression()), !dbg !3827
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !3828
  br label %for.cond, !dbg !3830

for.cond:                                         ; preds = %for.body, %entry
  %parm.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.body ]
  %count.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3827
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !3825, metadata !DIExpression()), !dbg !3827
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !3832
  br i1 %tobool, label %for.end, label %for.body, !dbg !3832

for.body:                                         ; preds = %for.cond
  %inc = add nuw nsw i32 %count.0, 1, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3826, metadata !DIExpression()), !dbg !3827
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3835
  br label %for.cond, !dbg !3836, !llvm.loop !3837

for.end:                                          ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !3827
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3826, metadata !DIExpression()), !dbg !3827
  ret i32 %count.0.lcssa, !dbg !3839
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3840 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3844, metadata !DIExpression()), !dbg !3845
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !3846
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !3846
  ret %struct.VEC_tree_heap* %0, !dbg !3846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !3847 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3852, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !3853, metadata !DIExpression()), !dbg !3855
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3856
  %0 = load i32, i32* %num1, align 8, !dbg !3856
  %inc = add i32 %0, 1, !dbg !3856
  store i32 %inc, i32* %num1, align 8, !dbg !3856
  %idxprom = zext i32 %0 to i64, !dbg !3856
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3856
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !3854, metadata !DIExpression()), !dbg !3855
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !3856
  ret %union.tree_node** %arrayidx, !dbg !3856
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_modify_formal_parameters(%union.tree_node* %fndecl, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i8* %synth_parm_prefix) local_unnamed_addr #5 !dbg !3857 {
entry:
  %oparms = alloca %struct.VEC_tree_heap*, align 8
  %otypes = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !3862, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !3863, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8* %synth_parm_prefix, metadata !3864, metadata !DIExpression()), !dbg !3889
  %0 = bitcast %struct.VEC_tree_heap** %oparms to i8*, !dbg !3890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3890
  %1 = bitcast %struct.VEC_tree_heap** %otypes to i8*, !dbg !3890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3890
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3868, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3871, metadata !DIExpression()), !dbg !3889
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !3891
  call void @llvm.dbg.value(metadata %union.tree_node** %arguments, metadata !3873, metadata !DIExpression()), !dbg !3889
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !3892
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #8, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %call, metadata !3875, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3876, metadata !DIExpression()), !dbg !3889
  %tobool1 = icmp eq i8* %synth_parm_prefix, null, !dbg !3893
  %spec.select = select i1 %tobool1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i8* %synth_parm_prefix, !dbg !3895
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !3864, metadata !DIExpression()), !dbg !3889
  %call2 = tail call %struct.VEC_tree_heap* @ipa_get_vector_of_formal_parms(%union.tree_node* %fndecl) #8, !dbg !3896
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call2, metadata !3865, metadata !DIExpression()), !dbg !3889
  store %struct.VEC_tree_heap* %call2, %struct.VEC_tree_heap** %oparms, align 8, !dbg !3897
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3898
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3867, metadata !DIExpression()), !dbg !3889
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3899
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !3899
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3899
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3869, metadata !DIExpression()), !dbg !3889
  %cmp = icmp ne %union.tree_node* %4, null, !dbg !3900
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !3877, metadata !DIExpression()), !dbg !3889
  br i1 %cmp, label %if.then6, label %if.else55, !dbg !3901

if.then6:                                         ; preds = %entry
  %call7 = tail call %union.tree_node* @tree_last(%union.tree_node* nonnull %4) #6, !dbg !3902
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3902
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3902
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !3905
  %cmp8 = icmp eq %union.tree_node* %6, %7, !dbg !3906
  %conv10 = zext i1 %cmp8 to i8, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %conv10, metadata !3878, metadata !DIExpression()), !dbg !3889
  %call11 = tail call fastcc %struct.VEC_tree_heap* @get_vector_of_formal_parm_types(%union.tree_node* %2) #8, !dbg !3908
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call11, metadata !3866, metadata !DIExpression()), !dbg !3889
  store %struct.VEC_tree_heap* %call11, %struct.VEC_tree_heap** %otypes, align 8, !dbg !3909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call2, metadata !3865, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call2, metadata !3865, metadata !DIExpression()), !dbg !3889
  %base16 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call2, i64 0, i32 0, !dbg !3910
  %call20 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base16) #8, !dbg !3910
  br i1 %cmp8, label %cond.end18, label %cond.end38, !dbg !3912

cond.end18:                                       ; preds = %if.then6
  %add = add i32 %call20, 1, !dbg !3913
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call11, metadata !3866, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call11, metadata !3866, metadata !DIExpression()), !dbg !3889
  %base23 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call11, i64 0, i32 0, !dbg !3913
  %call27 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base23) #8, !dbg !3913
  %cmp28 = icmp eq i32 %add, %call27, !dbg !3913
  br i1 %cmp28, label %if.end56, label %cond.true30, !dbg !3913

cond.true30:                                      ; preds = %cond.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1514, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3913
  br label %if.end56, !dbg !3913

cond.end38:                                       ; preds = %if.then6
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call11, metadata !3866, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call11, metadata !3866, metadata !DIExpression()), !dbg !3889
  %base43 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call11, i64 0, i32 0, !dbg !3914
  %call47 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base43) #8, !dbg !3914
  %cmp48 = icmp eq i32 %call20, %call47, !dbg !3914
  br i1 %cmp48, label %if.end56, label %cond.true50, !dbg !3914

cond.true50:                                      ; preds = %cond.end38
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3914
  br label %if.end56, !dbg !3914

if.else55:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !3878, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3866, metadata !DIExpression()), !dbg !3889
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %otypes, align 8, !dbg !3915
  br label %if.end56

if.end56:                                         ; preds = %cond.end18, %cond.true30, %cond.end38, %cond.true50, %if.else55
  %last_parm_void.0 = phi i8 [ 0, %if.else55 ], [ %conv10, %cond.true50 ], [ %conv10, %cond.end38 ], [ %conv10, %cond.true30 ], [ %conv10, %cond.end18 ], !dbg !3917
  call void @llvm.dbg.value(metadata i8 %last_parm_void.0, metadata !3878, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i32 0, metadata !3874, metadata !DIExpression()), !dbg !3889
  br i1 %cmp, label %if.end56.split.us, label %if.end56.if.end56.split_crit_edge, !dbg !3918

if.end56.if.end56.split_crit_edge:                ; preds = %if.end56
  br label %for.cond, !dbg !3918

if.end56.split.us:                                ; preds = %if.end56
  br label %for.cond.us, !dbg !3918

for.cond.us:                                      ; preds = %for.inc.us, %if.end56.split.us
  %new_arg_types.0.us = phi %union.tree_node* [ null, %if.end56.split.us ], [ %new_arg_types.4.us, %for.inc.us ], !dbg !3889
  %link.0.us = phi %union.tree_node** [ %arguments, %if.end56.split.us ], [ %link.2.us, %for.inc.us ], !dbg !3889
  %i.0.us = phi i32 [ 0, %if.end56.split.us ], [ %inc.us, %for.inc.us ], !dbg !3919
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !3874, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.us, metadata !3873, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_arg_types.0.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  %cmp57.us = icmp slt i32 %i.0.us, %call, !dbg !3920
  br i1 %cmp57.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !3921

for.body.us:                                      ; preds = %for.cond.us
  %tobool59.us = icmp eq %union.tree_node** %link.0.us, null, !dbg !3922
  br i1 %tobool59.us, label %cond.true60.us, label %cond.end62.us, !dbg !3922

cond.true60.us:                                   ; preds = %for.body.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1527, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3922
  br label %cond.end62.us, !dbg !3922

cond.end62.us:                                    ; preds = %cond.true60.us, %for.body.us
  %call70.us = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0.us) #8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call70.us, metadata !3879, metadata !DIExpression()), !dbg !3924
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %oparms, align 8, !dbg !3925
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3865, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3865, metadata !DIExpression()), !dbg !3889
  %base73.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !3925
  %base_index.us = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70.us, i64 0, i32 6, !dbg !3925
  %9 = load i32, i32* %base_index.us, align 8, !dbg !3925
  %call77.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base73.us, i32 %9) #8, !dbg !3925
  call void @llvm.dbg.value(metadata %union.tree_node* %call77.us, metadata !3872, metadata !DIExpression()), !dbg !3889
  %base78.us = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70.us, i64 0, i32 0, !dbg !3926
  store %union.tree_node* %call77.us, %union.tree_node** %base78.us, align 8, !dbg !3927
  %copy_param.us = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70.us, i64 0, i32 7, !dbg !3928
  %bf.load.us = load i8, i8* %copy_param.us, align 4, !dbg !3928
  %bf.clear.us = and i8 %bf.load.us, 1, !dbg !3928
  %tobool79.us = icmp eq i8 %bf.clear.us, 0, !dbg !3929
  br i1 %tobool79.us, label %if.else94.us, label %if.then80.us, !dbg !3930

if.then80.us:                                     ; preds = %cond.end62.us
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %otypes, align 8, !dbg !3931
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !3866, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !3866, metadata !DIExpression()), !dbg !3889
  %base85.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !3931
  %11 = load i32, i32* %base_index.us, align 8, !dbg !3931
  %call90.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base85.us, i32 %11) #8, !dbg !3931
  %call91.us = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call90.us, %union.tree_node* %new_arg_types.0.us) #6, !dbg !3931
  call void @llvm.dbg.value(metadata %union.tree_node* %call91.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %call91.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  store %union.tree_node* %call77.us, %union.tree_node** %link.0.us, align 8, !dbg !3934
  %chain.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call77.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3935
  call void @llvm.dbg.value(metadata %union.tree_node** %chain.us, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.inc.us, !dbg !3936

if.else94.us:                                     ; preds = %cond.end62.us
  %bf.clear96.us = and i8 %bf.load.us, 2, !dbg !3937
  %tobool98.us = icmp eq i8 %bf.clear96.us, 0, !dbg !3938
  br i1 %tobool98.us, label %if.then99.us, label %for.inc.us, !dbg !3939

if.then99.us:                                     ; preds = %if.else94.us
  %bf.clear102.us = and i8 %bf.load.us, 4, !dbg !3940
  %tobool104.us = icmp eq i8 %bf.clear102.us, 0, !dbg !3942
  %type106.us = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70.us, i64 0, i32 1, !dbg !3943
  %12 = load %union.tree_node*, %union.tree_node** %type106.us, align 8, !dbg !3943
  br i1 %tobool104.us, label %if.end110.us, label %if.then105.us, !dbg !3944

if.then105.us:                                    ; preds = %if.then99.us
  %call107.us = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %12) #6, !dbg !3945
  call void @llvm.dbg.value(metadata %union.tree_node* %call107.us, metadata !3888, metadata !DIExpression()), !dbg !3946
  br label %if.end110.us, !dbg !3947

if.end110.us:                                     ; preds = %if.then105.us, %if.then99.us
  %ptype.0.us = phi %union.tree_node* [ %call107.us, %if.then105.us ], [ %12, %if.then99.us ], !dbg !3943
  call void @llvm.dbg.value(metadata %union.tree_node* %ptype.0.us, metadata !3888, metadata !DIExpression()), !dbg !3946
  %call113.us = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %ptype.0.us, %union.tree_node* %new_arg_types.0.us) #6, !dbg !3948
  call void @llvm.dbg.value(metadata %union.tree_node* %call113.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %call113.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  %call115.us = tail call %union.tree_node* @build_decl_stat(i32 0, i32 34, %union.tree_node* null, %union.tree_node* %ptype.0.us) #6, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %call115.us, metadata !3884, metadata !DIExpression()), !dbg !3946
  %call116.us = tail call %union.tree_node* @create_tmp_var_name(i8* %spec.select) #6, !dbg !3951
  %name.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3952
  store %union.tree_node* %call116.us, %union.tree_node** %name.us, align 8, !dbg !3953
  %artificial_flag.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3954
  %13 = bitcast i40* %artificial_flag.us to i64*, !dbg !3954
  %bf.load117.us = load i64, i64* %13, align 8, !dbg !3955
  %initial.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3956
  store %union.tree_node* %ptype.0.us, %union.tree_node** %initial.us, align 8, !dbg !3957
  %context.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3958
  store %union.tree_node* %fndecl, %union.tree_node** %context.us, align 8, !dbg !3959
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3960
  %bf.load122.us = load i64, i64* %14, align 8, !dbg !3961
  %bf.set124.us = or i64 %bf.load122.us, 16777216, !dbg !3961
  store i64 %bf.set124.us, i64* %14, align 8, !dbg !3961
  %bf.set128.us = or i64 %bf.load117.us, 5120, !dbg !3962
  store i64 %bf.set128.us, i64* %13, align 8, !dbg !3962
  tail call void @layout_decl(%union.tree_node* %call115.us, i32 0) #6, !dbg !3963
  %call129.us = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call115.us) #6, !dbg !3964
  tail call void @mark_sym_for_renaming(%union.tree_node* %call115.us) #6, !dbg !3965
  store %union.tree_node* %call77.us, %union.tree_node** %base78.us, align 8, !dbg !3966
  %reduction.us = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70.us, i64 0, i32 2, !dbg !3967
  store %union.tree_node* %call115.us, %union.tree_node** %reduction.us, align 8, !dbg !3968
  store %union.tree_node* %call115.us, %union.tree_node** %link.0.us, align 8, !dbg !3969
  %chain132.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call115.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3970
  call void @llvm.dbg.value(metadata %union.tree_node** %chain132.us, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.inc.us, !dbg !3971

for.inc.us:                                       ; preds = %if.end110.us, %if.else94.us, %if.then80.us
  %new_arg_types.4.us = phi %union.tree_node* [ %call91.us, %if.then80.us ], [ %new_arg_types.0.us, %if.else94.us ], [ %call113.us, %if.end110.us ], !dbg !3889
  %link.2.us = phi %union.tree_node** [ %chain.us, %if.then80.us ], [ %link.0.us, %if.else94.us ], [ %chain132.us, %if.end110.us ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.2.us, metadata !3873, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_arg_types.4.us, metadata !3871, metadata !DIExpression()), !dbg !3889
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3874, metadata !DIExpression()), !dbg !3889
  br label %for.cond.us, !dbg !3973, !llvm.loop !3974

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %new_arg_types.0.us.lcssa = phi %union.tree_node* [ %new_arg_types.0.us, %for.cond.us ], !dbg !3889
  %link.0.us.lcssa = phi %union.tree_node** [ %link.0.us, %for.cond.us ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_arg_types.0.us.lcssa, metadata !3871, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.us.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_arg_types.0.us.lcssa, metadata !3871, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.us.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.end, !dbg !3976

for.cond:                                         ; preds = %for.inc, %if.end56.if.end56.split_crit_edge
  %link.0 = phi %union.tree_node** [ %arguments, %if.end56.if.end56.split_crit_edge ], [ %link.2, %for.inc ], !dbg !3889
  %i.0 = phi i32 [ 0, %if.end56.if.end56.split_crit_edge ], [ %inc, %for.inc ], !dbg !3919
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3874, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0, metadata !3873, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3871, metadata !DIExpression()), !dbg !3889
  %cmp57 = icmp slt i32 %i.0, %call, !dbg !3920
  br i1 %cmp57, label %for.body, label %for.end.us-lcssa, !dbg !3921

for.body:                                         ; preds = %for.cond
  %tobool59 = icmp eq %union.tree_node** %link.0, null, !dbg !3922
  br i1 %tobool59, label %cond.true60, label %cond.end62, !dbg !3922

cond.true60:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1527, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3922
  br label %cond.end62, !dbg !3922

cond.end62:                                       ; preds = %for.body, %cond.true60
  %call70 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0) #8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call70, metadata !3879, metadata !DIExpression()), !dbg !3924
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %oparms, align 8, !dbg !3925
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !3865, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !3865, metadata !DIExpression()), !dbg !3889
  %base73 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !3925
  %base_index = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 6, !dbg !3925
  %16 = load i32, i32* %base_index, align 8, !dbg !3925
  %call77 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base73, i32 %16) #8, !dbg !3925
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !3872, metadata !DIExpression()), !dbg !3889
  %base78 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 0, !dbg !3926
  store %union.tree_node* %call77, %union.tree_node** %base78, align 8, !dbg !3927
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 7, !dbg !3928
  %bf.load = load i8, i8* %copy_param, align 4, !dbg !3928
  %bf.clear = and i8 %bf.load, 1, !dbg !3928
  %tobool79 = icmp eq i8 %bf.clear, 0, !dbg !3929
  br i1 %tobool79, label %if.else94, label %if.then80, !dbg !3930

if.then80:                                        ; preds = %cond.end62
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3871, metadata !DIExpression()), !dbg !3889
  store %union.tree_node* %call77, %union.tree_node** %link.0, align 8, !dbg !3934
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3935
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.inc, !dbg !3936

if.else94:                                        ; preds = %cond.end62
  %bf.clear96 = and i8 %bf.load, 2, !dbg !3937
  %tobool98 = icmp eq i8 %bf.clear96, 0, !dbg !3938
  br i1 %tobool98, label %if.then99, label %for.inc, !dbg !3939

if.then99:                                        ; preds = %if.else94
  %bf.clear102 = and i8 %bf.load, 4, !dbg !3940
  %tobool104 = icmp eq i8 %bf.clear102, 0, !dbg !3942
  %type106 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 1, !dbg !3943
  %17 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !3943
  br i1 %tobool104, label %if.end110, label %if.then105, !dbg !3944

if.then105:                                       ; preds = %if.then99
  %call107 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %17) #6, !dbg !3945
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !3888, metadata !DIExpression()), !dbg !3946
  br label %if.end110, !dbg !3947

if.end110:                                        ; preds = %if.then99, %if.then105
  %ptype.0 = phi %union.tree_node* [ %call107, %if.then105 ], [ %17, %if.then99 ], !dbg !3943
  call void @llvm.dbg.value(metadata %union.tree_node* %ptype.0, metadata !3888, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3871, metadata !DIExpression()), !dbg !3889
  %call115 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 34, %union.tree_node* null, %union.tree_node* %ptype.0) #6, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %call115, metadata !3884, metadata !DIExpression()), !dbg !3946
  %call116 = tail call %union.tree_node* @create_tmp_var_name(i8* %spec.select) #6, !dbg !3951
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3952
  store %union.tree_node* %call116, %union.tree_node** %name, align 8, !dbg !3953
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3954
  %18 = bitcast i40* %artificial_flag to i64*, !dbg !3954
  %bf.load117 = load i64, i64* %18, align 8, !dbg !3955
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3956
  store %union.tree_node* %ptype.0, %union.tree_node** %initial, align 8, !dbg !3957
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3958
  store %union.tree_node* %fndecl, %union.tree_node** %context, align 8, !dbg !3959
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3960
  %bf.load122 = load i64, i64* %19, align 8, !dbg !3961
  %bf.set124 = or i64 %bf.load122, 16777216, !dbg !3961
  store i64 %bf.set124, i64* %19, align 8, !dbg !3961
  %bf.set128 = or i64 %bf.load117, 5120, !dbg !3962
  store i64 %bf.set128, i64* %18, align 8, !dbg !3962
  tail call void @layout_decl(%union.tree_node* %call115, i32 0) #6, !dbg !3963
  %call129 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call115) #6, !dbg !3964
  tail call void @mark_sym_for_renaming(%union.tree_node* %call115) #6, !dbg !3965
  store %union.tree_node* %call77, %union.tree_node** %base78, align 8, !dbg !3966
  %reduction = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 2, !dbg !3967
  store %union.tree_node* %call115, %union.tree_node** %reduction, align 8, !dbg !3968
  store %union.tree_node* %call115, %union.tree_node** %link.0, align 8, !dbg !3969
  %chain132 = getelementptr inbounds %union.tree_node, %union.tree_node* %call115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3970
  call void @llvm.dbg.value(metadata %union.tree_node** %chain132, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.inc, !dbg !3971

for.inc:                                          ; preds = %if.else94, %if.then80, %if.end110
  %link.2 = phi %union.tree_node** [ %chain, %if.then80 ], [ %link.0, %if.else94 ], [ %chain132, %if.end110 ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.2, metadata !3873, metadata !DIExpression()), !dbg !3889
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3874, metadata !DIExpression()), !dbg !3889
  br label %for.cond, !dbg !3973, !llvm.loop !3974

for.end.us-lcssa:                                 ; preds = %for.cond
  %link.0.lcssa4 = phi %union.tree_node** [ %link.0, %for.cond ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.lcssa4, metadata !3873, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.lcssa4, metadata !3873, metadata !DIExpression()), !dbg !3889
  br label %for.end, !dbg !3976

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %new_arg_types.0.lcssa = phi %union.tree_node* [ null, %for.end.us-lcssa ], [ %new_arg_types.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !3889
  %link.0.lcssa = phi %union.tree_node** [ %link.0.lcssa4, %for.end.us-lcssa ], [ %link.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_arg_types.0.lcssa, metadata !3871, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node** %link.0.lcssa, metadata !3873, metadata !DIExpression()), !dbg !3889
  store %union.tree_node* null, %union.tree_node** %link.0.lcssa, align 8, !dbg !3976
  br i1 %cmp, label %if.then136, label %if.end147, !dbg !3977

if.then136:                                       ; preds = %for.end
  %call137 = tail call %union.tree_node* @nreverse(%union.tree_node* %new_arg_types.0.lcssa) #6, !dbg !3978
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !3876, metadata !DIExpression()), !dbg !3889
  %tobool138 = icmp eq i8 %last_parm_void.0, 0, !dbg !3981
  br i1 %tobool138, label %if.end147, label %if.then139, !dbg !3983

if.then139:                                       ; preds = %if.then136
  %tobool140 = icmp eq %union.tree_node* %call137, null, !dbg !3984
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !3987
  br i1 %tobool140, label %if.end147, label %if.then141, !dbg !3988

if.then141:                                       ; preds = %if.then139
  %chain143 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_arg_types.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3989
  store %union.tree_node* %20, %union.tree_node** %chain143, align 8, !dbg !3990
  br label %if.end147, !dbg !3989

if.end147:                                        ; preds = %if.then139, %if.then136, %if.then141, %for.end
  %new_reversed.2 = phi %union.tree_node* [ null, %for.end ], [ %call137, %if.then136 ], [ %call137, %if.then141 ], [ %20, %if.then139 ], !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %new_reversed.2, metadata !3876, metadata !DIExpression()), !dbg !3889
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3991
  %bf.load149 = load i64, i64* %21, align 8, !dbg !3991
  %bf.cast1511 = and i64 %bf.load149, 65535, !dbg !3993
  %cmp152 = icmp eq i64 %bf.cast1511, 21, !dbg !3993
  br i1 %cmp152, label %lor.lhs.false, label %if.then176, !dbg !3994

lor.lhs.false:                                    ; preds = %if.end147
  %call160 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 0) #8, !dbg !3995
  %copy_param161 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call160, i64 0, i32 7, !dbg !3996
  %bf.load162 = load i8, i8* %copy_param161, align 4, !dbg !3996
  %bf.clear163 = and i8 %bf.load162, 1, !dbg !3996
  %tobool165 = icmp eq i8 %bf.clear163, 0, !dbg !3995
  br i1 %tobool165, label %if.else180, label %land.lhs.true, !dbg !3997

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call172 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 0) #8, !dbg !3998
  %base_index173 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call172, i64 0, i32 6, !dbg !3999
  %22 = load i32, i32* %base_index173, align 8, !dbg !3999
  %cmp174 = icmp eq i32 %22, 0, !dbg !4000
  br i1 %cmp174, label %if.then176, label %if.else180, !dbg !4001

if.then176:                                       ; preds = %if.end147, %land.lhs.true
  %call177 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %2) #6, !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %call177, metadata !3868, metadata !DIExpression()), !dbg !3889
  %values179 = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4004
  %23 = bitcast i32* %values179 to %union.tree_node**, !dbg !4004
  store %union.tree_node* %new_reversed.2, %union.tree_node** %23, align 8, !dbg !4005
  br label %if.end190, !dbg !4006

if.else180:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %type182 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4007
  %24 = load %union.tree_node*, %union.tree_node** %type182, align 8, !dbg !4007
  %call183 = tail call %union.tree_node* @build_function_type(%union.tree_node* %24, %union.tree_node* %new_reversed.2) #6, !dbg !4009
  %call184 = tail call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %call183) #6, !dbg !4010
  call void @llvm.dbg.value(metadata %union.tree_node* %call184, metadata !3868, metadata !DIExpression()), !dbg !3889
  %context186 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4011
  %25 = bitcast i24* %context186 to i64*, !dbg !4011
  %26 = load i64, i64* %25, align 8, !dbg !4011
  %context188 = getelementptr inbounds %union.tree_node, %union.tree_node* %call184, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4012
  %27 = bitcast i24* %context188 to i64*, !dbg !4013
  store i64 %26, i64* %27, align 8, !dbg !4013
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 4, !dbg !4014
  store %union.tree_node* null, %union.tree_node** %vindex, align 8, !dbg !4015
  br label %if.end190

if.end190:                                        ; preds = %if.else180, %if.then176
  %new_type.0 = phi %union.tree_node* [ %call177, %if.then176 ], [ %call184, %if.else180 ], !dbg !4016
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0, metadata !3868, metadata !DIExpression()), !dbg !3889
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4017
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !4017
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3870, metadata !DIExpression()), !dbg !3889
  %cmp192 = icmp eq %union.tree_node* %2, %29, !dbg !4018
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4020
  br i1 %cmp192, label %if.else202, label %if.then194, !dbg !4021

if.then194:                                       ; preds = %if.end190
  store %union.tree_node* %29, %union.tree_node** %30, align 8, !dbg !4022
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4024
  %32 = bitcast %union.tree_node** %31 to i64*, !dbg !4024
  %33 = load i64, i64* %32, align 8, !dbg !4024
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4025
  %35 = bitcast %union.tree_node** %34 to i64*, !dbg !4026
  store i64 %33, i64* %35, align 8, !dbg !4026
  store %union.tree_node* %new_type.0, %union.tree_node** %31, align 8, !dbg !4027
  br label %if.end207, !dbg !4028

if.else202:                                       ; preds = %if.end190
  store %union.tree_node* %new_type.0, %union.tree_node** %30, align 8, !dbg !4029
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4031
  store %union.tree_node* null, %union.tree_node** %36, align 8, !dbg !4032
  br label %if.end207

if.end207:                                        ; preds = %if.else202, %if.then194
  store %union.tree_node* %new_type.0, %union.tree_node** %type, align 8, !dbg !4033
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %otypes, align 8, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !3866, metadata !DIExpression()), !dbg !3889
  %tobool210 = icmp eq %struct.VEC_tree_heap* %37, null, !dbg !4034
  br i1 %tobool210, label %if.end212, label %if.then211, !dbg !4036

if.then211:                                       ; preds = %if.end207
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %otypes, metadata !3866, metadata !DIExpression(DW_OP_deref)), !dbg !3889
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %otypes) #8, !dbg !4037
  br label %if.end212, !dbg !4037

if.end212:                                        ; preds = %if.end207, %if.then211
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %oparms, metadata !3865, metadata !DIExpression(DW_OP_deref)), !dbg !3889
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %oparms) #8, !dbg !4038
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4039
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4039
  ret void, !dbg !4039
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %vec_) unnamed_addr #0 !dbg !4040 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !4046, metadata !DIExpression()), !dbg !4047
  %tobool = icmp eq %struct.VEC_ipa_parm_adjustment_t_base* %vec_, null, !dbg !4048
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4048

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 0, !dbg !4048
  %0 = load i32, i32* %num, align 8, !dbg !4048
  br label %cond.end, !dbg !4048

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4048
  ret i32 %cond, !dbg !4048
}

declare dso_local %union.tree_node* @tree_last(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @get_vector_of_formal_parm_types(%union.tree_node* %fntype) unnamed_addr #0 !dbg !4049 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !4051, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 0, metadata !4053, metadata !DIExpression()), !dbg !4055
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4056
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !4056
  br label %for.cond, !dbg !4058

for.cond:                                         ; preds = %for.body, %entry
  %count.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4055
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !4059
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4054, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4053, metadata !DIExpression()), !dbg !4055
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !4060
  br i1 %tobool, label %for.end, label %for.body, !dbg !4060

for.body:                                         ; preds = %for.cond
  %inc = add nuw nsw i32 %count.0, 1, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4053, metadata !DIExpression()), !dbg !4055
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4063
  br label %for.cond, !dbg !4064, !llvm.loop !4065

for.end:                                          ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !4055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4053, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4053, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4053, metadata !DIExpression()), !dbg !4055
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %count.0.lcssa) #8, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !4052, metadata !DIExpression()), !dbg !4055
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call, i64 0, i32 0, !dbg !4068
  br label %for.cond3, !dbg !4071

for.cond3:                                        ; preds = %for.body5, %for.end
  %t.1.in = phi %union.tree_node** [ %0, %for.end ], [ %chain10, %for.body5 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !4072
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !4054, metadata !DIExpression()), !dbg !4055
  %tobool4 = icmp eq %union.tree_node* %t.1, null, !dbg !4073
  br i1 %tobool4, label %for.end11, label %for.body5, !dbg !4073

for.body5:                                        ; preds = %for.cond3
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4074
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4074
  %call7 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %2) #8, !dbg !4074
  %chain10 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4075
  br label %for.cond3, !dbg !4076, !llvm.loop !4077

for.end11:                                        ; preds = %for.cond3
  ret %struct.VEC_tree_heap* %call, !dbg !4079
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4080 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4086, metadata !DIExpression()), !dbg !4087
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4088
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4088

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4088
  %0 = load i32, i32* %num, align 8, !dbg !4088
  br label %cond.end, !dbg !4088

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4088
  ret i32 %cond, !dbg !4088
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4089 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !4095, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4096, metadata !DIExpression()), !dbg !4097
  br label %land.end, !dbg !4098

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4098
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4098
  ret %struct.ipa_parm_adjustment* %arrayidx, !dbg !4098
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4099 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4103, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4104, metadata !DIExpression()), !dbg !4105
  br label %land.end, !dbg !4106

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4106
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4106
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4106
  ret %union.tree_node* %0, !dbg !4106
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var_name(i8*) local_unnamed_addr #2

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_distinct_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !4107 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !4112, metadata !DIExpression()), !dbg !4113
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4114
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4114
  br i1 %tobool, label %if.end, label %if.then, !dbg !4116

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !4116
  tail call void @free(i8* nonnull %1) #6, !dbg !4114
  br label %if.end, !dbg !4114

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4116
  ret void, !dbg !4116
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_modify_call_arguments(%struct.cgraph_edge* %cs, %union.gimple_statement_d* %stmt, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) local_unnamed_addr #5 !dbg !4117 {
entry:
  %vargs = alloca %struct.VEC_tree_heap*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !4121, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4122, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !4123, metadata !DIExpression()), !dbg !4146
  %0 = bitcast %struct.VEC_tree_heap** %vargs to i8*, !dbg !4147
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4147
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4148
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !4148
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !4149
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #8, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %call, metadata !4129, metadata !DIExpression()), !dbg !4146
  %call1 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %call) #8, !dbg !4150
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !4124, metadata !DIExpression()), !dbg !4146
  store %struct.VEC_tree_heap* %call1, %struct.VEC_tree_heap** %vargs, align 8, !dbg !4151
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4152
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4152
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %stmt) #6, !dbg !4152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4152
  call void @llvm.dbg.value(metadata i32 0, metadata !4128, metadata !DIExpression()), !dbg !4146
  %3 = bitcast %union.tree_node** %expr to i8*, !dbg !4153
  %4 = bitcast %union.tree_node** %expr to i64*, !dbg !4154
  br label %for.cond, !dbg !4157

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4158
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4128, metadata !DIExpression()), !dbg !4146
  %cmp = icmp slt i32 %i.0, %call, !dbg !4159
  br i1 %cmp, label %for.body, label %for.end, !dbg !4160

for.body:                                         ; preds = %for.cond
  %call8 = call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0) #8, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call8, metadata !4130, metadata !DIExpression()), !dbg !4162
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 7, !dbg !4163
  %bf.load = load i8, i8* %copy_param, align 4, !dbg !4163
  %bf.clear = and i8 %bf.load, 1, !dbg !4163
  %tobool9 = icmp eq i8 %bf.clear, 0, !dbg !4164
  br i1 %tobool9, label %if.else, label %if.then, !dbg !4165

if.then:                                          ; preds = %for.body
  %base_index = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 6, !dbg !4166
  %5 = load i32, i32* %base_index, align 8, !dbg !4166
  %call10 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %5) #8, !dbg !4167
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4134, metadata !DIExpression()), !dbg !4168
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !4124, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !4124, metadata !DIExpression()), !dbg !4146
  %base13 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !4169
  %call17 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base13, %union.tree_node* %call10) #8, !dbg !4169
  br label %for.inc, !dbg !4170

if.else:                                          ; preds = %for.body
  %bf.clear19 = and i8 %bf.load, 2, !dbg !4171
  %tobool21 = icmp eq i8 %bf.clear19, 0, !dbg !4172
  br i1 %tobool21, label %if.then22, label %for.inc, !dbg !4173

if.then22:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4174
  %base_index23 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 6, !dbg !4175
  %7 = load i32, i32* %base_index23, align 8, !dbg !4175
  %call24 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %7) #8, !dbg !4176
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call24, %union.tree_node** %expr, align 8, !dbg !4177
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4140, metadata !DIExpression()), !dbg !4153
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4178
  %bf.load26 = load i64, i64* %.cast, align 8, !dbg !4178
  %bf.cast281 = and i64 %bf.load26, 65535, !dbg !4179
  %cmp29 = icmp eq i64 %bf.cast281, 121, !dbg !4179
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4180
  br i1 %cmp29, label %if.then30, label %if.end, !dbg !4180

if.then30:                                        ; preds = %if.then22
  call void @llvm.dbg.value(metadata i8 0, metadata !4141, metadata !DIExpression()), !dbg !4153
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4181
  %10 = bitcast %union.tree_node** %9 to i64*, !dbg !4181
  %11 = load i64, i64* %10, align 8, !dbg !4181
  store i64 %11, i64* %4, align 8, !dbg !4182
  %12 = inttoptr i64 %11 to %struct.tree_common*, !dbg !4183
  br label %if.end, !dbg !4183

if.end:                                           ; preds = %if.then22, %if.then30
  %13 = phi %struct.tree_common* [ %12, %if.then30 ], [ %8, %if.then22 ], !dbg !4184
  %allow_ptr.0 = phi i8 [ 0, %if.then30 ], [ 1, %if.then22 ], !dbg !4185
  call void @llvm.dbg.value(metadata i8 %allow_ptr.0, metadata !4141, metadata !DIExpression()), !dbg !4153
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !4184
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4184
  %offset = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 5, !dbg !4186
  %15 = load i64, i64* %offset, align 8, !dbg !4186
  %type32 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 1, !dbg !4187
  %16 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !4187
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !4137, metadata !DIExpression(DW_OP_deref)), !dbg !4153
  %call33 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr, %union.tree_node* %14, i64 %15, %union.tree_node* %16, i8 zeroext %allow_ptr.0) #6, !dbg !4188
  call void @llvm.dbg.value(metadata i8 %call33, metadata !4142, metadata !DIExpression()), !dbg !4153
  %tobool34 = icmp eq i8 %call33, 0, !dbg !4189
  br i1 %tobool34, label %if.else44, label %if.then35, !dbg !4190

if.then35:                                        ; preds = %if.end
  %bf.load36 = load i8, i8* %copy_param, align 4, !dbg !4191
  %bf.clear38 = and i8 %bf.load36, 4, !dbg !4191
  %tobool40 = icmp eq i8 %bf.clear38, 0, !dbg !4194
  br i1 %tobool40, label %if.then35.if.end84_crit_edge, label %if.then41, !dbg !4195

if.then35.if.end84_crit_edge:                     ; preds = %if.then35
  %.pre5 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4196
  br label %if.end84, !dbg !4195

if.then41:                                        ; preds = %if.then35
  %17 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4197
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4137, metadata !DIExpression()), !dbg !4153
  %call42 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %17) #6, !dbg !4197
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call42, %union.tree_node** %expr, align 8, !dbg !4198
  br label %if.end84, !dbg !4199

if.else44:                                        ; preds = %if.end
  %18 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !4200
  %call46 = call %union.tree_node* @build_pointer_type(%union.tree_node* %18) #6, !dbg !4201
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !4143, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call24, %union.tree_node** %expr, align 8, !dbg !4203
  %type48 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4204
  %19 = bitcast %union.tree_node** %type48 to i64**, !dbg !4204
  %20 = load i64*, i64** %19, align 8, !dbg !4204
  %bf.load50 = load i64, i64* %20, align 8, !dbg !4204
  %bf.cast523 = and i64 %bf.load50, 65535, !dbg !4204
  %cmp53 = icmp eq i64 %bf.cast523, 10, !dbg !4204
  %21 = bitcast i64* %20 to %union.tree_node*, !dbg !4204
  br i1 %cmp53, label %if.end63, label %lor.lhs.false, !dbg !4204

lor.lhs.false:                                    ; preds = %if.else44
  %cmp60 = icmp eq i64 %bf.cast523, 12, !dbg !4204
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !4206

if.then61:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4137, metadata !DIExpression()), !dbg !4153
  %call62 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call24) #6, !dbg !4207
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call62, %union.tree_node** %expr, align 8, !dbg !4208
  %type65.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4209
  %.pre6 = load %union.tree_node*, %union.tree_node** %type65.phi.trans.insert, align 8, !dbg !4211
  br label %if.end63, !dbg !4212

if.end63:                                         ; preds = %if.then61, %lor.lhs.false, %if.else44
  %22 = phi %union.tree_node* [ %.pre6, %if.then61 ], [ %21, %lor.lhs.false ], [ %21, %if.else44 ], !dbg !4211
  %call66 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %call46, %union.tree_node* %22) #6, !dbg !4213
  %tobool67 = icmp eq i8 %call66, 0, !dbg !4213
  br i1 %tobool67, label %if.then68, label %if.end63.if.end70_crit_edge, !dbg !4214

if.end63.if.end70_crit_edge:                      ; preds = %if.end63
  %.pre = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4215
  br label %if.end70, !dbg !4214

if.then68:                                        ; preds = %if.end63
  %23 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4216
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !4137, metadata !DIExpression()), !dbg !4153
  %call69 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call46, %union.tree_node* %23) #6, !dbg !4216
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call69, %union.tree_node** %expr, align 8, !dbg !4217
  br label %if.end70, !dbg !4218

if.end70:                                         ; preds = %if.end63.if.end70_crit_edge, %if.then68
  %24 = phi %union.tree_node* [ %.pre, %if.end63.if.end70_crit_edge ], [ %call69, %if.then68 ], !dbg !4215
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !4137, metadata !DIExpression()), !dbg !4153
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !4215
  %26 = load i64, i64* %offset, align 8, !dbg !4215
  %div = sdiv i64 %26, 8, !dbg !4215
  %call72 = call %union.tree_node* @build_int_cst(%union.tree_node* %25, i64 %div) #6, !dbg !4215
  %call73 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %call46, %union.tree_node* %24, %union.tree_node* %call72) #6, !dbg !4215
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call73, %union.tree_node** %expr, align 8, !dbg !4219
  %bf.load75 = load i8, i8* %copy_param, align 4, !dbg !4220
  %bf.clear77 = and i8 %bf.load75, 4, !dbg !4220
  %tobool79 = icmp eq i8 %bf.clear77, 0, !dbg !4222
  br i1 %tobool79, label %if.then80, label %if.end84, !dbg !4223

if.then80:                                        ; preds = %if.end70
  %27 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !4224
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !4137, metadata !DIExpression()), !dbg !4153
  %call82 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %27, %union.tree_node* %call73) #6, !dbg !4224
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call82, %union.tree_node** %expr, align 8, !dbg !4225
  br label %if.end84, !dbg !4226

if.end84:                                         ; preds = %if.then35.if.end84_crit_edge, %if.end70, %if.then80, %if.then41
  %28 = phi %union.tree_node* [ %.pre5, %if.then35.if.end84_crit_edge ], [ %call73, %if.end70 ], [ %call82, %if.then80 ], [ %call42, %if.then41 ], !dbg !4196
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !4137, metadata !DIExpression()), !dbg !4153
  %bf.load86 = load i8, i8* %copy_param, align 4, !dbg !4227
  %bf.clear88 = and i8 %bf.load86, 4, !dbg !4227
  %tobool90 = icmp eq i8 %bf.clear88, 0, !dbg !4228
  br i1 %tobool90, label %lor.rhs, label %lor.end, !dbg !4229

lor.rhs:                                          ; preds = %if.end84
  %29 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !4230
  %call92 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %29) #6, !dbg !4231
  %tobool93 = icmp ne i8 %call92, 0, !dbg !4229
  br label %lor.end, !dbg !4229

lor.end:                                          ; preds = %if.end84, %lor.rhs
  %30 = phi i1 [ true, %if.end84 ], [ %tobool93, %lor.rhs ]
  %conv94 = zext i1 %30 to i8, !dbg !4228
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4126, metadata !DIExpression(DW_OP_deref)), !dbg !4146
  %call95 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %28, i8 zeroext %conv94, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !4232
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !4137, metadata !DIExpression()), !dbg !4153
  store %union.tree_node* %call95, %union.tree_node** %expr, align 8, !dbg !4233
  %31 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !4234
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !4124, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !4124, metadata !DIExpression()), !dbg !4146
  %base98 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %31, i64 0, i32 0, !dbg !4234
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !4137, metadata !DIExpression()), !dbg !4153
  %call102 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base98, %union.tree_node* %call95) #8, !dbg !4234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4235
  br label %for.inc, !dbg !4236

for.inc:                                          ; preds = %if.else, %if.then, %lor.end
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4128, metadata !DIExpression()), !dbg !4146
  br label %for.cond, !dbg !4238, !llvm.loop !4239

for.end:                                          ; preds = %for.cond
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4241
  %tobool105 = icmp eq %struct._IO_FILE* %32, null, !dbg !4241
  br i1 %tobool105, label %if.end110, label %land.lhs.true, !dbg !4243

land.lhs.true:                                    ; preds = %for.end
  %33 = load i32, i32* @dump_flags, align 4, !dbg !4244
  %and = and i32 %33, 8, !dbg !4245
  %tobool106 = icmp eq i32 %and, 0, !dbg !4245
  br i1 %tobool106, label %if.end110, label %if.then107, !dbg !4246

if.then107:                                       ; preds = %land.lhs.true
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4247
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4249
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4126, metadata !DIExpression(DW_OP_deref)), !dbg !4146
  %call109 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4250
  call void @print_gimple_stmt(%struct._IO_FILE* %34, %union.gimple_statement_d* %call109, i32 0, i32 0) #6, !dbg !4251
  br label %if.end110, !dbg !4252

if.end110:                                        ; preds = %land.lhs.true, %for.end, %if.then107
  %tobool111 = icmp eq %struct.cgraph_edge* %cs, null, !dbg !4253
  br i1 %tobool111, label %cond.true112, label %cond.false114, !dbg !4254

cond.true112:                                     ; preds = %if.end110
  %call113 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #8, !dbg !4255
  br label %cond.end115, !dbg !4254

cond.false114:                                    ; preds = %if.end110
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 2, !dbg !4256
  %35 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !4256
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %35, i64 0, i32 0, !dbg !4257
  %36 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4257
  br label %cond.end115, !dbg !4254

cond.end115:                                      ; preds = %cond.false114, %cond.true112
  %cond116 = phi %union.tree_node* [ %call113, %cond.true112 ], [ %36, %cond.false114 ], !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %cond116, metadata !4127, metadata !DIExpression()), !dbg !4146
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !4124, metadata !DIExpression()), !dbg !4146
  %call117 = call %union.gimple_statement_d* @gimple_build_call_vec(%union.tree_node* %cond116, %struct.VEC_tree_heap* %37) #6, !dbg !4259
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call117, metadata !4125, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vargs, metadata !4124, metadata !DIExpression(DW_OP_deref)), !dbg !4146
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vargs) #8, !dbg !4260
  %call118 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !4261
  %tobool119 = icmp eq %union.tree_node* %call118, null, !dbg !4261
  br i1 %tobool119, label %if.end122, label %if.then120, !dbg !4263

if.then120:                                       ; preds = %cond.end115
  %call121 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !4264
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call117, %union.tree_node* %call121) #8, !dbg !4265
  br label %if.end122, !dbg !4265

if.end122:                                        ; preds = %cond.end115, %if.then120
  %call123 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #8, !dbg !4266
  call fastcc void @gimple_set_block(%union.gimple_statement_d* %call117, %union.tree_node* %call123) #8, !dbg !4267
  %call124 = call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #8, !dbg !4268
  %tobool125 = icmp eq i8 %call124, 0, !dbg !4268
  br i1 %tobool125, label %if.end128, label %if.then126, !dbg !4270

if.then126:                                       ; preds = %if.end122
  %call127 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #8, !dbg !4271
  call fastcc void @gimple_set_location(%union.gimple_statement_d* %call117, i32 %call127) #8, !dbg !4272
  br label %if.end128, !dbg !4272

if.end128:                                        ; preds = %if.end122, %if.then126
  call fastcc void @gimple_call_copy_flags(%union.gimple_statement_d* %call117, %union.gimple_statement_d* %stmt) #8, !dbg !4273
  %call129 = call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #8, !dbg !4274
  call fastcc void @gimple_call_set_chain(%union.gimple_statement_d* %call117, %union.tree_node* %call129) #8, !dbg !4275
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4276
  %tobool130 = icmp eq %struct._IO_FILE* %38, null, !dbg !4276
  br i1 %tobool130, label %if.end137, label %land.lhs.true131, !dbg !4278

land.lhs.true131:                                 ; preds = %if.end128
  %39 = load i32, i32* @dump_flags, align 4, !dbg !4279
  %and132 = and i32 %39, 8, !dbg !4280
  %tobool133 = icmp eq i32 %and132, 0, !dbg !4280
  br i1 %tobool133, label %if.end137, label %if.then134, !dbg !4281

if.then134:                                       ; preds = %land.lhs.true131
  %call135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4282
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4284
  call void @print_gimple_stmt(%struct._IO_FILE* %40, %union.gimple_statement_d* %call117, i32 0, i32 0) #6, !dbg !4285
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4286
  %call136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4287
  br label %if.end137, !dbg !4288

if.end137:                                        ; preds = %land.lhs.true131, %if.end128, %if.then134
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4126, metadata !DIExpression(DW_OP_deref)), !dbg !4146
  call void @gsi_replace(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call117, i8 zeroext 1) #6, !dbg !4289
  br i1 %tobool111, label %if.end140, label %if.then139, !dbg !4290

if.then139:                                       ; preds = %if.end137
  call void @cgraph_set_call_stmt(%struct.cgraph_edge* nonnull %cs, %union.gimple_statement_d* %call117) #6, !dbg !4291
  br label %if.end140, !dbg !4291

if.end140:                                        ; preds = %if.end137, %if.then139
  call void @update_ssa(i32 2048) #6, !dbg !4293
  call void @free_dominance_info(i32 1) #6, !dbg !4294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !4295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4295
  ret void, !dbg !4295
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4296 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4300, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i32 %index, metadata !4301, metadata !DIExpression()), !dbg !4302
  %add = add i32 %index, 3, !dbg !4303
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !4304
  ret %union.tree_node* %call, !dbg !4305
}

declare dso_local zeroext i8 @build_ref_for_offset(%union.tree_node**, %union.tree_node*, i64, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4306 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4310, metadata !DIExpression()), !dbg !4312
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !4313
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4311, metadata !DIExpression()), !dbg !4312
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4314
  %bf.load = load i64, i64* %0, align 8, !dbg !4314
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4316
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4316
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4317

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4318
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4318
  br label %cleanup, !dbg !4319

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4312
  ret %union.tree_node* %retval.0, !dbg !4320
}

declare dso_local %union.gimple_statement_d* @gimple_build_call_vec(%union.tree_node*, %struct.VEC_tree_heap*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4321 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4323, metadata !DIExpression()), !dbg !4324
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4325
  ret %union.tree_node* %call, !dbg !4326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !4327 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4331, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !4332, metadata !DIExpression()), !dbg !4333
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !4334
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !4335
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4337

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4338
  %bf.load = load i64, i64* %0, align 8, !dbg !4338
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4339
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4339
  br i1 %cmp, label %if.then, label %if.end, !dbg !4340

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4341
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4341
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !4342
  br label %if.end, !dbg !4341

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !4343
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_block(%union.gimple_statement_d* %g, %union.tree_node* %block) unnamed_addr #0 !dbg !4344 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4346, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4347, metadata !DIExpression()), !dbg !4348
  %block1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !4349
  store %union.tree_node* %block, %union.tree_node** %block1, align 8, !dbg !4350
  ret void, !dbg !4351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4352 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4354, metadata !DIExpression()), !dbg !4355
  %block = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !4356
  %0 = load %union.tree_node*, %union.tree_node** %block, align 8, !dbg !4356
  ret %union.tree_node* %0, !dbg !4357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4358 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4360, metadata !DIExpression()), !dbg !4361
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #8, !dbg !4362
  %cmp = icmp ne i32 %call, 0, !dbg !4363
  %conv1 = zext i1 %cmp to i8, !dbg !4362
  ret i8 %conv1, !dbg !4364
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !4365 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4369, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %location, metadata !4370, metadata !DIExpression()), !dbg !4371
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4372
  store i32 %location, i32* %location1, align 8, !dbg !4373
  ret void, !dbg !4374
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4375 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4379, metadata !DIExpression()), !dbg !4380
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4381
  %0 = load i32, i32* %location, align 8, !dbg !4381
  ret i32 %0, !dbg !4382
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_copy_flags(%union.gimple_statement_d* %dest_call, %union.gimple_statement_d* %orig_call) unnamed_addr #0 !dbg !4383 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dest_call, metadata !4387, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %orig_call, metadata !4388, metadata !DIExpression()), !dbg !4389
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %orig_call, i64 0, i32 0, i32 0, i32 0, !dbg !4390
  %bf.load = load i32, i32* %0, align 8, !dbg !4390
  %bf.lshr = and i32 %bf.load, -65536, !dbg !4391
  %1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %dest_call, i64 0, i32 0, i32 0, i32 0, !dbg !4392
  %bf.load2 = load i32, i32* %1, align 8, !dbg !4391
  %bf.clear = and i32 %bf.load2, 65535, !dbg !4391
  %bf.set = or i32 %bf.clear, %bf.lshr, !dbg !4391
  store i32 %bf.set, i32* %1, align 8, !dbg !4391
  ret void, !dbg !4393
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_chain(%union.gimple_statement_d* %gs, %union.tree_node* %chain) unnamed_addr #0 !dbg !4394 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4396, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !4397, metadata !DIExpression()), !dbg !4398
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 2, %union.tree_node* %chain) #8, !dbg !4399
  ret void, !dbg !4400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4401 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4403, metadata !DIExpression()), !dbg !4404
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !4405
  ret %union.tree_node* %call, !dbg !4406
}

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @cgraph_set_call_stmt(%struct.cgraph_edge*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_ipa_parm_adjustment_t_heap* @ipa_combine_adjustments(%struct.VEC_ipa_parm_adjustment_t_heap* %inner, %struct.VEC_ipa_parm_adjustment_t_heap* %outer) local_unnamed_addr #5 !dbg !4407 {
entry:
  %tmp = alloca %struct.VEC_ipa_parm_adjustment_t_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %inner, metadata !4411, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %outer, metadata !4412, metadata !DIExpression()), !dbg !4433
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %outer, i64 0, i32 0, !dbg !4434
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #8, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %call, metadata !4414, metadata !DIExpression()), !dbg !4433
  %base3 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %inner, i64 0, i32 0, !dbg !4435
  %call7 = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base3) #8, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %call7, metadata !4415, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4416, metadata !DIExpression()), !dbg !4433
  %0 = bitcast %struct.VEC_ipa_parm_adjustment_t_heap** %tmp to i8*, !dbg !4436
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4436
  %call8 = tail call fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @VEC_ipa_parm_adjustment_t_heap_alloc(i32 %call7) #8, !dbg !4437
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  store %struct.VEC_ipa_parm_adjustment_t_heap* %call8, %struct.VEC_ipa_parm_adjustment_t_heap** %tmp, align 8, !dbg !4438
  call void @llvm.dbg.value(metadata i32 0, metadata !4413, metadata !DIExpression()), !dbg !4433
  %base19 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %call8, i64 0, i32 0, !dbg !4439
  br label %for.cond, !dbg !4441

for.cond:                                         ; preds = %for.inc, %entry
  %removals.0 = phi i32 [ 0, %entry ], [ %removals.1, %for.inc ], !dbg !4433
  %i.0 = phi i32 [ 0, %entry ], [ %inc24, %for.inc ], !dbg !4442
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4413, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %removals.0, metadata !4416, metadata !DIExpression()), !dbg !4433
  %cmp = icmp slt i32 %i.0, %call7, !dbg !4443
  br i1 %cmp, label %for.body, label %for.end, !dbg !4444

for.body:                                         ; preds = %for.cond
  %call15 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base3, i32 %i.0) #8, !dbg !4445
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call15, metadata !4419, metadata !DIExpression()), !dbg !4446
  %remove_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call15, i64 0, i32 7, !dbg !4447
  %bf.load = load i8, i8* %remove_param, align 4, !dbg !4447
  %bf.clear = and i8 %bf.load, 2, !dbg !4447
  %tobool16 = icmp eq i8 %bf.clear, 0, !dbg !4448
  br i1 %tobool16, label %if.else, label %if.then, !dbg !4449

if.then:                                          ; preds = %for.body
  %inc = add nsw i32 %removals.0, 1, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4416, metadata !DIExpression()), !dbg !4433
  br label %for.inc, !dbg !4451

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  %call23 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base19, %struct.ipa_parm_adjustment* %call15) #8, !dbg !4452
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %removals.1 = phi i32 [ %inc, %if.then ], [ %removals.0, %if.else ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %removals.1, metadata !4416, metadata !DIExpression()), !dbg !4433
  %inc24 = add nuw nsw i32 %i.0, 1, !dbg !4453
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !4413, metadata !DIExpression()), !dbg !4433
  br label %for.cond, !dbg !4454, !llvm.loop !4455

for.end:                                          ; preds = %for.cond
  %removals.0.lcssa = phi i32 [ %removals.0, %for.cond ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %removals.0.lcssa, metadata !4416, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %removals.0.lcssa, metadata !4416, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %removals.0.lcssa, metadata !4416, metadata !DIExpression()), !dbg !4433
  %add = add nsw i32 %call, %removals.0.lcssa, !dbg !4457
  %call25 = tail call fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @VEC_ipa_parm_adjustment_t_heap_alloc(i32 %add) #8, !dbg !4457
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call25, metadata !4417, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4413, metadata !DIExpression()), !dbg !4433
  %base66 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %call25, i64 0, i32 0, !dbg !4458
  br label %for.cond26, !dbg !4463

for.cond26:                                       ; preds = %cleanup, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc130, %cleanup ], !dbg !4464
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4413, metadata !DIExpression()), !dbg !4433
  %cmp27 = icmp slt i32 %i.1, %call, !dbg !4465
  br i1 %cmp27, label %for.body28, label %for.cond132.preheader, !dbg !4466

for.cond132.preheader:                            ; preds = %for.cond26
  br label %for.cond132, !dbg !4467

for.body28:                                       ; preds = %for.cond26
  %call35 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.1) #8, !dbg !4468
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call35, metadata !4427, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  %base_index = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call35, i64 0, i32 6, !dbg !4470
  %1 = load i32, i32* %base_index, align 8, !dbg !4470
  %call42 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base19, i32 %1) #8, !dbg !4470
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call42, metadata !4428, metadata !DIExpression()), !dbg !4469
  %remove_param43 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call42, i64 0, i32 7, !dbg !4471
  %bf.load44 = load i8, i8* %remove_param43, align 4, !dbg !4471
  %bf.clear46 = and i8 %bf.load44, 2, !dbg !4471
  %tobool48 = icmp eq i8 %bf.clear46, 0, !dbg !4471
  br i1 %tobool48, label %cond.end51, label %cond.true49, !dbg !4471

cond.true49:                                      ; preds = %for.body28
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1798, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4471
  br label %cond.end51, !dbg !4471

cond.end51:                                       ; preds = %for.body28, %cond.true49
  %remove_param53 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call35, i64 0, i32 7, !dbg !4472
  %bf.load54 = load i8, i8* %remove_param53, align 4, !dbg !4472
  %bf.clear56 = and i8 %bf.load54, 2, !dbg !4472
  %tobool58 = icmp eq i8 %bf.clear56, 0, !dbg !4473
  br i1 %tobool58, label %if.end76, label %if.then59, !dbg !4474

if.then59:                                        ; preds = %cond.end51
  %base_index60 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call42, i64 0, i32 6, !dbg !4475
  %2 = load i32, i32* %base_index60, align 8, !dbg !4475
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call8, metadata !4418, metadata !DIExpression()), !dbg !4433
  %call61 = tail call fastcc zeroext i8 @index_in_adjustments_multiple_times_p(i32 %2, %struct.VEC_ipa_parm_adjustment_t_heap* %call8) #8, !dbg !4476
  %tobool62 = icmp eq i8 %call61, 0, !dbg !4476
  br i1 %tobool62, label %if.then63, label %cleanup, !dbg !4477

if.then63:                                        ; preds = %if.then59
  %call70 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base66, %struct.ipa_parm_adjustment* null) #8, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call70, metadata !4423, metadata !DIExpression()), !dbg !4469
  %3 = bitcast %struct.ipa_parm_adjustment* %call70 to i8*, !dbg !4479
  %call71 = tail call i8* @memset(i8* %3, i32 0, i64 56) #6, !dbg !4480
  %remove_param72 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call70, i64 0, i32 7, !dbg !4481
  %bf.load73 = load i8, i8* %remove_param72, align 4, !dbg !4482
  %bf.set = or i8 %bf.load73, 2, !dbg !4482
  store i8 %bf.set, i8* %remove_param72, align 4, !dbg !4482
  br label %cleanup, !dbg !4483

if.end76:                                         ; preds = %cond.end51
  %call83 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base66, %struct.ipa_parm_adjustment* null) #8, !dbg !4484
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call83, metadata !4423, metadata !DIExpression()), !dbg !4469
  %4 = bitcast %struct.ipa_parm_adjustment* %call83 to i8*, !dbg !4485
  %call84 = tail call i8* @memset(i8* %4, i32 0, i64 56) #6, !dbg !4486
  %base_index85 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call42, i64 0, i32 6, !dbg !4487
  %5 = load i32, i32* %base_index85, align 8, !dbg !4487
  %base_index86 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 6, !dbg !4488
  store i32 %5, i32* %base_index86, align 8, !dbg !4489
  %type = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call35, i64 0, i32 1, !dbg !4490
  %6 = bitcast %union.tree_node** %type to i64*, !dbg !4490
  %7 = load i64, i64* %6, align 8, !dbg !4490
  %type87 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 1, !dbg !4491
  %8 = bitcast %union.tree_node** %type87 to i64*, !dbg !4492
  store i64 %7, i64* %8, align 8, !dbg !4492
  %bf.load88 = load i8, i8* %remove_param43, align 4, !dbg !4493
  %bf.clear89 = and i8 %bf.load88, 1, !dbg !4493
  %tobool91 = icmp eq i8 %bf.clear89, 0, !dbg !4495
  br i1 %tobool91, label %if.else102, label %land.lhs.true, !dbg !4496

land.lhs.true:                                    ; preds = %if.end76
  %bf.load93 = load i8, i8* %remove_param53, align 4, !dbg !4497
  %bf.clear94 = and i8 %bf.load93, 1, !dbg !4497
  %tobool96 = icmp eq i8 %bf.clear94, 0, !dbg !4498
  br i1 %tobool96, label %if.else102, label %if.then97, !dbg !4499

if.then97:                                        ; preds = %land.lhs.true
  %copy_param98 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 7, !dbg !4500
  %bf.load99 = load i8, i8* %copy_param98, align 4, !dbg !4501
  %bf.set101 = or i8 %bf.load99, 1, !dbg !4501
  store i8 %bf.set101, i8* %copy_param98, align 4, !dbg !4501
  br label %cleanup, !dbg !4502

if.else102:                                       ; preds = %land.lhs.true, %if.end76
  br i1 %tobool91, label %if.else110, label %if.then108, !dbg !4503

if.then108:                                       ; preds = %if.else102
  %offset = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call35, i64 0, i32 5, !dbg !4504
  %9 = load i64, i64* %offset, align 8, !dbg !4504
  %offset109 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 5, !dbg !4506
  store i64 %9, i64* %offset109, align 8, !dbg !4507
  br label %cleanup, !dbg !4508

if.else110:                                       ; preds = %if.else102
  %bf.load112 = load i8, i8* %remove_param53, align 4, !dbg !4509
  %bf.clear113 = and i8 %bf.load112, 1, !dbg !4509
  %tobool115 = icmp eq i8 %bf.clear113, 0, !dbg !4511
  %offset117 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call42, i64 0, i32 5, !dbg !4512
  %10 = load i64, i64* %offset117, align 8, !dbg !4512
  br i1 %tobool115, label %if.else119, label %if.then116, !dbg !4513

if.then116:                                       ; preds = %if.else110
  %offset118 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 5, !dbg !4514
  store i64 %10, i64* %offset118, align 8, !dbg !4515
  br label %cleanup, !dbg !4516

if.else119:                                       ; preds = %if.else110
  %offset121 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call35, i64 0, i32 5, !dbg !4517
  %11 = load i64, i64* %offset121, align 8, !dbg !4517
  %add122 = add nsw i64 %10, %11, !dbg !4518
  %offset123 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call83, i64 0, i32 5, !dbg !4519
  store i64 %add122, i64* %offset123, align 8, !dbg !4520
  br label %cleanup

cleanup:                                          ; preds = %if.then59, %if.then97, %if.then116, %if.else119, %if.then108, %if.then63
  %inc130 = add nuw nsw i32 %i.1, 1, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %inc130, metadata !4413, metadata !DIExpression()), !dbg !4433
  br label %for.cond26, !dbg !4522, !llvm.loop !4523

for.cond132:                                      ; preds = %for.cond132.preheader, %for.inc158
  %i.2 = phi i32 [ %inc159, %for.inc158 ], [ 0, %for.cond132.preheader ], !dbg !4525
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !4413, metadata !DIExpression()), !dbg !4433
  %cmp133 = icmp slt i32 %i.2, %call7, !dbg !4526
  br i1 %cmp133, label %for.body134, label %for.end160, !dbg !4467

for.body134:                                      ; preds = %for.cond132
  %call142 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base3, i32 %i.2) #8, !dbg !4527
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call142, metadata !4429, metadata !DIExpression()), !dbg !4528
  %remove_param143 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call142, i64 0, i32 7, !dbg !4529
  %bf.load144 = load i8, i8* %remove_param143, align 4, !dbg !4529
  %bf.clear146 = and i8 %bf.load144, 2, !dbg !4529
  %tobool148 = icmp eq i8 %bf.clear146, 0, !dbg !4531
  br i1 %tobool148, label %for.inc158, label %if.then149, !dbg !4532

if.then149:                                       ; preds = %for.body134
  %call156 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base66, %struct.ipa_parm_adjustment* %call142) #8, !dbg !4533
  br label %for.inc158, !dbg !4533

for.inc158:                                       ; preds = %for.body134, %if.then149
  %inc159 = add nuw nsw i32 %i.2, 1, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %inc159, metadata !4413, metadata !DIExpression()), !dbg !4433
  br label %for.cond132, !dbg !4535, !llvm.loop !4536

for.end160:                                       ; preds = %for.cond132
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap** %tmp, metadata !4418, metadata !DIExpression(DW_OP_deref)), !dbg !4433
  call fastcc void @VEC_ipa_parm_adjustment_t_heap_free(%struct.VEC_ipa_parm_adjustment_t_heap** nonnull %tmp) #8, !dbg !4538
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4539
  ret %struct.VEC_ipa_parm_adjustment_t_heap* %call25, !dbg !4540
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @VEC_ipa_parm_adjustment_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4541 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4545, metadata !DIExpression()), !dbg !4546
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 56) #6, !dbg !4547
  %0 = bitcast i8* %call to %struct.VEC_ipa_parm_adjustment_t_heap*, !dbg !4547
  ret %struct.VEC_ipa_parm_adjustment_t_heap* %0, !dbg !4547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %vec_, %struct.ipa_parm_adjustment* %obj_) unnamed_addr #0 !dbg !4548 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !4554, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %obj_, metadata !4555, metadata !DIExpression()), !dbg !4557
  %num1 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 0, !dbg !4558
  %0 = load i32, i32* %num1, align 8, !dbg !4558
  %inc = add i32 %0, 1, !dbg !4558
  store i32 %inc, i32* %num1, align 8, !dbg !4558
  %idxprom = zext i32 %0 to i64, !dbg !4558
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4558
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %arrayidx, metadata !4556, metadata !DIExpression()), !dbg !4557
  %tobool = icmp eq %struct.ipa_parm_adjustment* %obj_, null, !dbg !4559
  br i1 %tobool, label %if.end, label %if.then, !dbg !4558

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.ipa_parm_adjustment* %arrayidx to i8*, !dbg !4559
  %2 = bitcast %struct.ipa_parm_adjustment* %obj_ to i8*, !dbg !4559
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 56, i1 false), !dbg !4559
  br label %if.end, !dbg !4559

if.end:                                           ; preds = %entry, %if.then
  ret %struct.ipa_parm_adjustment* %arrayidx, !dbg !4558
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @index_in_adjustments_multiple_times_p(i32 %base_index, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) unnamed_addr #5 !dbg !4561 {
entry:
  call void @llvm.dbg.value(metadata i32 %base_index, metadata !4565, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !4566, metadata !DIExpression()), !dbg !4574
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !4575
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #8, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %call, metadata !4568, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i8 0, metadata !4569, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 0, metadata !4567, metadata !DIExpression()), !dbg !4574
  br label %for.cond, !dbg !4576

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4577
  %one.0 = phi i8 [ 0, %entry ], [ %one.2, %for.inc ], !dbg !4578
  call void @llvm.dbg.value(metadata i8 %one.0, metadata !4569, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4567, metadata !DIExpression()), !dbg !4574
  %cmp = icmp slt i32 %i.0, %call, !dbg !4579
  br i1 %cmp, label %for.body, label %cleanup13, !dbg !4580

for.body:                                         ; preds = %for.cond
  %call7 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0) #8, !dbg !4581
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call7, metadata !4570, metadata !DIExpression()), !dbg !4582
  %base_index8 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call7, i64 0, i32 6, !dbg !4583
  %0 = load i32, i32* %base_index8, align 8, !dbg !4583
  %cmp9 = icmp eq i32 %0, %base_index, !dbg !4585
  br i1 %cmp9, label %if.then, label %if.end12, !dbg !4586

if.then:                                          ; preds = %for.body
  %tobool10 = icmp eq i8 %one.0, 0, !dbg !4587
  br i1 %tobool10, label %if.end12, label %cleanup, !dbg !4590

if.end12:                                         ; preds = %if.then, %for.body
  %one.1 = phi i8 [ %one.0, %for.body ], [ 1, %if.then ], !dbg !4574
  call void @llvm.dbg.value(metadata i8 %one.1, metadata !4569, metadata !DIExpression()), !dbg !4574
  br label %cleanup, !dbg !4591

cleanup:                                          ; preds = %if.then, %if.end12
  %one.2 = phi i8 [ %one.1, %if.end12 ], [ %one.0, %if.then ], !dbg !4574
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end12 ], [ false, %if.then ]
  call void @llvm.dbg.value(metadata i8 %one.2, metadata !4569, metadata !DIExpression()), !dbg !4574
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup13

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4567, metadata !DIExpression()), !dbg !4574
  br label %for.cond, !dbg !4593, !llvm.loop !4594

cleanup13:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i8 [ 1, %cleanup ], [ 0, %for.cond ], !dbg !4574
  ret i8 %retval.2, !dbg !4596
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_parm_adjustment_t_heap_free(%struct.VEC_ipa_parm_adjustment_t_heap** %vec_) unnamed_addr #0 !dbg !4597 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, metadata !4602, metadata !DIExpression()), !dbg !4603
  %0 = load %struct.VEC_ipa_parm_adjustment_t_heap*, %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, align 8, !dbg !4604
  %tobool = icmp eq %struct.VEC_ipa_parm_adjustment_t_heap* %0, null, !dbg !4604
  br i1 %tobool, label %if.end, label %if.then, !dbg !4606

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ipa_parm_adjustment_t_heap* %0 to i8*, !dbg !4606
  tail call void @free(i8* nonnull %1) #6, !dbg !4604
  br label %if.end, !dbg !4604

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ipa_parm_adjustment_t_heap* null, %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, align 8, !dbg !4606
  ret void, !dbg !4606
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_dump_param_adjustments(%struct._IO_FILE* %file, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, %union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !4607 {
entry:
  %parms = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4611, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !4612, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !4613, metadata !DIExpression()), !dbg !4622
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !4623
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #8, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %call, metadata !4615, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 1, metadata !4616, metadata !DIExpression()), !dbg !4622
  %0 = bitcast %struct.VEC_tree_heap** %parms to i8*, !dbg !4624
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4624
  %call1 = tail call %struct.VEC_tree_heap* @ipa_get_vector_of_formal_parms(%union.tree_node* %fndecl) #8, !dbg !4625
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !4617, metadata !DIExpression()), !dbg !4622
  store %struct.VEC_tree_heap* %call1, %struct.VEC_tree_heap** %parms, align 8, !dbg !4626
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4627
  call void @llvm.dbg.value(metadata i32 0, metadata !4614, metadata !DIExpression()), !dbg !4622
  br label %for.cond, !dbg !4628

for.cond:                                         ; preds = %if.end58, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end58 ], !dbg !4629
  %first.0 = phi i8 [ 1, %entry ], [ 0, %if.end58 ], !dbg !4622
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !4616, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4614, metadata !DIExpression()), !dbg !4622
  %cmp = icmp slt i32 %i.0, %call, !dbg !4630
  br i1 %cmp, label %for.body, label %for.end, !dbg !4631

for.body:                                         ; preds = %for.cond
  %call9 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0) #8, !dbg !4632
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call9, metadata !4618, metadata !DIExpression()), !dbg !4633
  %tobool10 = icmp eq i8 %first.0, 0, !dbg !4634
  br i1 %tobool10, label %if.then, label %if.end, !dbg !4636

if.then:                                          ; preds = %for.body
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4637
  br label %if.end, !dbg !4637

if.end:                                           ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata i8 0, metadata !4616, metadata !DIExpression()), !dbg !4622
  %base_index = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 6, !dbg !4638
  %1 = load i32, i32* %base_index, align 8, !dbg !4638
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0), i32 %i.0, i32 %1) #6, !dbg !4639
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !4617, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call1, metadata !4617, metadata !DIExpression()), !dbg !4622
  %base15 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call1, i64 0, i32 0, !dbg !4640
  %2 = load i32, i32* %base_index, align 8, !dbg !4640
  %call20 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base15, i32 %2) #8, !dbg !4640
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %call20, i32 0) #6, !dbg !4641
  %base21 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 0, !dbg !4642
  %3 = load %union.tree_node*, %union.tree_node** %base21, align 8, !dbg !4642
  %tobool22 = icmp eq %union.tree_node* %3, null, !dbg !4644
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !4645

if.then23:                                        ; preds = %if.end
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4646
  %4 = load %union.tree_node*, %union.tree_node** %base21, align 8, !dbg !4648
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %4, i32 0) #6, !dbg !4649
  br label %if.end26, !dbg !4650

if.end26:                                         ; preds = %if.end, %if.then23
  %reduction = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 2, !dbg !4651
  %5 = load %union.tree_node*, %union.tree_node** %reduction, align 8, !dbg !4651
  %tobool27 = icmp eq %union.tree_node* %5, null, !dbg !4653
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !4654

if.then28:                                        ; preds = %if.end26
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4655
  %6 = load %union.tree_node*, %union.tree_node** %reduction, align 8, !dbg !4657
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %6, i32 0) #6, !dbg !4658
  br label %if.end31, !dbg !4659

if.end31:                                         ; preds = %if.end26, %if.then28
  %new_ssa_base = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 3, !dbg !4660
  %7 = load %union.tree_node*, %union.tree_node** %new_ssa_base, align 8, !dbg !4660
  %tobool32 = icmp eq %union.tree_node* %7, null, !dbg !4662
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !4663

if.then33:                                        ; preds = %if.end31
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4664
  %8 = load %union.tree_node*, %union.tree_node** %new_ssa_base, align 8, !dbg !4666
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %8, i32 0) #6, !dbg !4667
  br label %if.end36, !dbg !4668

if.end36:                                         ; preds = %if.end31, %if.then33
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 7, !dbg !4669
  %bf.load = load i8, i8* %copy_param, align 4, !dbg !4669
  %bf.clear = and i8 %bf.load, 1, !dbg !4669
  %tobool37 = icmp eq i8 %bf.clear, 0, !dbg !4671
  br i1 %tobool37, label %if.else40, label %if.then38, !dbg !4672

if.then38:                                        ; preds = %if.end36
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !4673
  br label %if.end50, !dbg !4673

if.else40:                                        ; preds = %if.end36
  %bf.clear42 = and i8 %bf.load, 2, !dbg !4674
  %tobool44 = icmp eq i8 %bf.clear42, 0, !dbg !4676
  br i1 %tobool44, label %if.else47, label %if.then45, !dbg !4677

if.then45:                                        ; preds = %if.else40
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4678
  br label %if.end50, !dbg !4678

if.else47:                                        ; preds = %if.else40
  %offset = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 5, !dbg !4679
  %9 = load i64, i64* %offset, align 8, !dbg !4679
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i64 %9) #6, !dbg !4680
  br label %if.end50

if.end50:                                         ; preds = %if.then45, %if.else47, %if.then38
  %bf.load51 = load i8, i8* %copy_param, align 4, !dbg !4681
  %bf.clear53 = and i8 %bf.load51, 4, !dbg !4681
  %tobool55 = icmp eq i8 %bf.clear53, 0, !dbg !4683
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !4684

if.then56:                                        ; preds = %if.end50
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4685
  br label %if.end58, !dbg !4685

if.end58:                                         ; preds = %if.end50, %if.then56
  %type = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call9, i64 0, i32 1, !dbg !4686
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4686
  tail call void @print_node_brief(%struct._IO_FILE* %file, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), %union.tree_node* %10, i32 0) #6, !dbg !4687
  %call59 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4688
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4614, metadata !DIExpression()), !dbg !4622
  br label %for.cond, !dbg !4690, !llvm.loop !4691

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %parms, metadata !4617, metadata !DIExpression(DW_OP_deref)), !dbg !4622
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %parms) #8, !dbg !4693
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4694
  ret void, !dbg !4694
}

declare dso_local void @print_node_brief(%struct._IO_FILE*, i8*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_prop_write_jump_functions(%struct.cgraph_node_set_def* %set) local_unnamed_addr #5 !dbg !4695 {
entry:
  %csi = alloca %struct.cgraph_node_set_iterator, align 8
  %tmp = alloca %struct.cgraph_node_set_iterator, align 8
  %tmp7 = alloca %struct.cgraph_node_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !4700, metadata !DIExpression()), !dbg !4770
  %call = tail call %struct.output_block* @create_output_block(i32 4) #6, !dbg !4771
  call void @llvm.dbg.value(metadata %struct.output_block* %call, metadata !4702, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 0, metadata !4763, metadata !DIExpression()), !dbg !4770
  %0 = bitcast %struct.cgraph_node_set_iterator* %csi to i8*, !dbg !4772
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4772
  %cgraph_node = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 6, !dbg !4773
  store %struct.cgraph_node* null, %struct.cgraph_node** %cgraph_node, align 8, !dbg !4774
  %1 = bitcast %struct.cgraph_node_set_iterator* %tmp to i8*, !dbg !4775
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4775
  %call1 = tail call fastcc { %struct.cgraph_node_set_def*, i32 } @csi_start(%struct.cgraph_node_set_def* %set) #8, !dbg !4775
  %2 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 0, !dbg !4775
  %3 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call1, 0, !dbg !4775
  store %struct.cgraph_node_set_def* %3, %struct.cgraph_node_set_def** %2, align 8, !dbg !4775
  %4 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 1, !dbg !4775
  %5 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call1, 1, !dbg !4775
  store i32 %5, i32* %4, align 8, !dbg !4775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !4775
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4775
  %6 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 0, !dbg !4777
  %7 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 1, !dbg !4777
  br label %for.cond, !dbg !4779

for.cond:                                         ; preds = %for.inc, %entry
  %count.0 = phi i32 [ 0, %entry ], [ %count.1, %for.inc ], !dbg !4770
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4763, metadata !DIExpression()), !dbg !4770
  %8 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !4780
  %9 = load i32, i32* %7, align 8, !dbg !4780
  %call2 = call fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %8, i32 %9) #8, !dbg !4780
  %tobool = icmp eq i8 %call2, 0, !dbg !4781
  br i1 %tobool, label %for.body, label %for.end, !dbg !4782

for.body:                                         ; preds = %for.cond
  %10 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !4783
  %11 = load i32, i32* %7, align 8, !dbg !4783
  %call3 = call fastcc %struct.cgraph_node* @csi_node(%struct.cgraph_node_set_def* %10, i32 %11) #8, !dbg !4783
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call3, metadata !4701, metadata !DIExpression()), !dbg !4770
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call3, i64 0, i32 27, !dbg !4785
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !4785
  %bf.clear = and i16 %bf.load, 32, !dbg !4785
  %tobool4 = icmp eq i16 %bf.clear, 0, !dbg !4787
  br i1 %tobool4, label %for.inc, label %land.lhs.true, !dbg !4788

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !4789
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %12, i64 0, i32 0, !dbg !4789
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call3, i64 0, i32 24, !dbg !4789
  %13 = load i32, i32* %uid, align 8, !dbg !4789
  %call6 = call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %13) #8, !dbg !4789
  %cmp = icmp ne %struct.ipa_node_params* %call6, null, !dbg !4790
  %inc = zext i1 %cmp to i32, !dbg !4791
  %spec.select = add i32 %count.0, %inc, !dbg !4791
  br label %for.inc, !dbg !4791

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %count.1 = phi i32 [ %count.0, %for.body ], [ %spec.select, %land.lhs.true ], !dbg !4770
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !4763, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_iterator* %csi, metadata !4764, metadata !DIExpression(DW_OP_deref)), !dbg !4770
  call fastcc void @csi_next(%struct.cgraph_node_set_iterator* nonnull %csi) #8, !dbg !4792
  br label %for.cond, !dbg !4793, !llvm.loop !4794

for.end:                                          ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !4770
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4763, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4763, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4763, metadata !DIExpression()), !dbg !4770
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 2, !dbg !4796
  %14 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4796
  %conv = zext i32 %count.0.lcssa to i64, !dbg !4797
  call void @lto_output_uleb128_stream(%struct.lto_output_stream* %14, i64 %conv) #6, !dbg !4798
  %15 = bitcast %struct.cgraph_node_set_iterator* %tmp7 to i8*, !dbg !4799
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7, !dbg !4799
  %call8 = call fastcc { %struct.cgraph_node_set_def*, i32 } @csi_start(%struct.cgraph_node_set_def* %set) #8, !dbg !4799
  %16 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp7, i64 0, i32 0, !dbg !4799
  %17 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call8, 0, !dbg !4799
  store %struct.cgraph_node_set_def* %17, %struct.cgraph_node_set_def** %16, align 8, !dbg !4799
  %18 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp7, i64 0, i32 1, !dbg !4799
  %19 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call8, 1, !dbg !4799
  store i32 %19, i32* %18, align 8, !dbg !4799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %15, i64 16, i1 false), !dbg !4799
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7, !dbg !4799
  br label %for.cond9, !dbg !4801

for.cond9:                                        ; preds = %for.inc34, %for.end
  %20 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !4802
  %21 = load i32, i32* %7, align 8, !dbg !4802
  %call10 = call fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %20, i32 %21) #8, !dbg !4802
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4804
  br i1 %tobool11, label %for.body13, label %for.end35, !dbg !4805

for.body13:                                       ; preds = %for.cond9
  %22 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !4806
  %23 = load i32, i32* %7, align 8, !dbg !4806
  %call14 = call fastcc %struct.cgraph_node* @csi_node(%struct.cgraph_node_set_def* %22, i32 %23) #8, !dbg !4806
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call14, metadata !4701, metadata !DIExpression()), !dbg !4770
  %analyzed15 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call14, i64 0, i32 27, !dbg !4808
  %bf.load16 = load i16, i16* %analyzed15, align 4, !dbg !4808
  %bf.clear18 = and i16 %bf.load16, 32, !dbg !4808
  %tobool20 = icmp eq i16 %bf.clear18, 0, !dbg !4810
  br i1 %tobool20, label %for.inc34, label %land.lhs.true21, !dbg !4811

land.lhs.true21:                                  ; preds = %for.body13
  %24 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !4812
  %base24 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %24, i64 0, i32 0, !dbg !4812
  %uid28 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call14, i64 0, i32 24, !dbg !4812
  %25 = load i32, i32* %uid28, align 8, !dbg !4812
  %call29 = call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base24, i32 %25) #8, !dbg !4812
  %cmp30 = icmp eq %struct.ipa_node_params* %call29, null, !dbg !4813
  br i1 %cmp30, label %for.inc34, label %if.then32, !dbg !4814

if.then32:                                        ; preds = %land.lhs.true21
  call fastcc void @ipa_write_node_info(%struct.output_block* %call, %struct.cgraph_node* %call14) #8, !dbg !4815
  br label %for.inc34, !dbg !4815

for.inc34:                                        ; preds = %land.lhs.true21, %for.body13, %if.then32
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_iterator* %csi, metadata !4764, metadata !DIExpression(DW_OP_deref)), !dbg !4770
  call fastcc void @csi_next(%struct.cgraph_node_set_iterator* nonnull %csi) #8, !dbg !4816
  br label %for.cond9, !dbg !4817, !llvm.loop !4818

for.end35:                                        ; preds = %for.cond9
  %26 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4820
  call void @lto_output_1_stream(%struct.lto_output_stream* %26, i8 signext 0) #6, !dbg !4821
  call void @produce_asm(%struct.output_block* %call, %union.tree_node* null) #6, !dbg !4822
  call void @destroy_output_block(%struct.output_block* %call) #6, !dbg !4823
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4824
  ret void, !dbg !4824
}

declare dso_local %struct.output_block* @create_output_block(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.cgraph_node_set_def*, i32 } @csi_start(%struct.cgraph_node_set_def* %set) unnamed_addr #0 !dbg !4825 {
entry:
  %retval = alloca %struct.cgraph_node_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !4829, metadata !DIExpression()), !dbg !4831
  %set1 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %retval, i64 0, i32 0, !dbg !4832
  store %struct.cgraph_node_set_def* %set, %struct.cgraph_node_set_def** %set1, align 8, !dbg !4833
  %index = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %retval, i64 0, i32 1, !dbg !4834
  store i32 0, i32* %index, align 8, !dbg !4835
  %0 = bitcast %struct.cgraph_node_set_iterator* %retval to { %struct.cgraph_node_set_def*, i32 }*, !dbg !4836
  %1 = load { %struct.cgraph_node_set_def*, i32 }, { %struct.cgraph_node_set_def*, i32 }* %0, align 8, !dbg !4836
  ret { %struct.cgraph_node_set_def*, i32 } %1, !dbg !4836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %csi.coerce0, i32 %csi.coerce1) unnamed_addr #0 !dbg !4837 {
entry:
  %nodes = getelementptr inbounds %struct.cgraph_node_set_def, %struct.cgraph_node_set_def* %csi.coerce0, i64 0, i32 1, !dbg !4842
  %0 = load %struct.VEC_cgraph_node_ptr_gc*, %struct.VEC_cgraph_node_ptr_gc** %nodes, align 8, !dbg !4842
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_gc* %0, null, !dbg !4842
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4842

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_node_ptr_gc, %struct.VEC_cgraph_node_ptr_gc* %0, i64 0, i32 0, !dbg !4842
  br label %cond.end, !dbg !4842

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_node_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4842
  %call = tail call fastcc i32 @VEC_cgraph_node_ptr_base_length(%struct.VEC_cgraph_node_ptr_base* %cond) #8, !dbg !4842
  %cmp = icmp ule i32 %call, %csi.coerce1, !dbg !4843
  %conv3 = zext i1 %cmp to i8, !dbg !4844
  ret i8 %conv3, !dbg !4845
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_node* @csi_node(%struct.cgraph_node_set_def* %csi.coerce0, i32 %csi.coerce1) unnamed_addr #0 !dbg !4846 {
entry:
  %nodes = getelementptr inbounds %struct.cgraph_node_set_def, %struct.cgraph_node_set_def* %csi.coerce0, i64 0, i32 1, !dbg !4851
  %0 = load %struct.VEC_cgraph_node_ptr_gc*, %struct.VEC_cgraph_node_ptr_gc** %nodes, align 8, !dbg !4851
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_gc* %0, null, !dbg !4851
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4851

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_node_ptr_gc, %struct.VEC_cgraph_node_ptr_gc* %0, i64 0, i32 0, !dbg !4851
  br label %cond.end, !dbg !4851

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_node_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4851
  %call = tail call fastcc %struct.cgraph_node* @VEC_cgraph_node_ptr_base_index(%struct.VEC_cgraph_node_ptr_base* %cond, i32 %csi.coerce1) #8, !dbg !4851
  ret %struct.cgraph_node* %call, !dbg !4852
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @csi_next(%struct.cgraph_node_set_iterator* %csi) unnamed_addr #0 !dbg !4853 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_iterator* %csi, metadata !4858, metadata !DIExpression()), !dbg !4859
  %index = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 1, !dbg !4860
  %0 = load i32, i32* %index, align 8, !dbg !4861
  %inc = add i32 %0, 1, !dbg !4861
  store i32 %inc, i32* %index, align 8, !dbg !4861
  ret void, !dbg !4862
}

declare dso_local void @lto_output_uleb128_stream(%struct.lto_output_stream*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_write_node_info(%struct.output_block* %ob, %struct.cgraph_node* %node) unnamed_addr #5 !dbg !4863 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4867, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !4868, metadata !DIExpression()), !dbg !4900
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !4901
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !4901
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !4901
  %1 = load i32, i32* %uid, align 8, !dbg !4901
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !4901
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !4871, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 0, metadata !4894, metadata !DIExpression()), !dbg !4900
  %decl_state = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !4902
  %2 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !4902
  %cgraph_node_encoder = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %2, i64 0, i32 1, !dbg !4903
  %3 = load %struct.lto_cgraph_encoder_d*, %struct.lto_cgraph_encoder_d** %cgraph_node_encoder, align 8, !dbg !4903
  call void @llvm.dbg.value(metadata %struct.lto_cgraph_encoder_d* %3, metadata !4870, metadata !DIExpression()), !dbg !4900
  %call1 = tail call i32 @lto_cgraph_encoder_encode(%struct.lto_cgraph_encoder_d* %3, %struct.cgraph_node* %node) #6, !dbg !4904
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4869, metadata !DIExpression()), !dbg !4900
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !4905
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4905
  %conv = sext i32 %call1 to i64, !dbg !4906
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %4, i64 %conv) #6, !dbg !4907
  %call2 = tail call %struct.bitpack_d* @bitpack_create() #6, !dbg !4908
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call2, metadata !4874, metadata !DIExpression()), !dbg !4900
  %called_with_var_arguments = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 5, !dbg !4909
  %bf.load = load i8, i8* %called_with_var_arguments, align 8, !dbg !4909
  %bf.clear = and i8 %bf.load, 1, !dbg !4909
  %conv3 = zext i8 %bf.clear to i64, !dbg !4910
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv3, i32 1) #6, !dbg !4911
  %bf.load4 = load i8, i8* %called_with_var_arguments, align 8, !dbg !4912
  %bf.lshr = lshr i8 %bf.load4, 2, !dbg !4912
  %bf.clear5 = and i8 %bf.lshr, 1, !dbg !4912
  %conv7 = zext i8 %bf.clear5 to i64, !dbg !4913
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv7, i32 1) #6, !dbg !4914
  %bf.load8 = load i8, i8* %called_with_var_arguments, align 8, !dbg !4915
  %bf.clear10 = and i8 %bf.load8, 2, !dbg !4915
  %tobool12 = icmp eq i8 %bf.clear10, 0, !dbg !4915
  br i1 %tobool12, label %lor.lhs.false, label %cond.end17, !dbg !4915

lor.lhs.false:                                    ; preds = %entry
  %call13 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !4915
  %cmp = icmp eq i32 %call13, 0, !dbg !4915
  br i1 %cmp, label %cond.end17, label %cond.true15, !dbg !4915

cond.true15:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2020, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4915
  br label %cond.end17, !dbg !4915

cond.end17:                                       ; preds = %entry, %lor.lhs.false, %cond.true15
  %bf.load19 = load i8, i8* %called_with_var_arguments, align 8, !dbg !4916
  %bf.clear21 = and i8 %bf.load19, 8, !dbg !4916
  %tobool23 = icmp eq i8 %bf.clear21, 0, !dbg !4916
  br i1 %tobool23, label %cond.end26, label %cond.true24, !dbg !4916

cond.true24:                                      ; preds = %cond.end17
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4916
  br label %cond.end26, !dbg !4916

cond.end26:                                       ; preds = %cond.end17, %cond.true24
  %ipcp_orig_node = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 3, !dbg !4917
  %5 = load %struct.cgraph_node*, %struct.cgraph_node** %ipcp_orig_node, align 8, !dbg !4917
  %tobool28 = icmp eq %struct.cgraph_node* %5, null, !dbg !4917
  br i1 %tobool28, label %cond.end31, label %cond.true29, !dbg !4917

cond.true29:                                      ; preds = %cond.end26
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2022, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4917
  br label %cond.end31, !dbg !4917

cond.end31:                                       ; preds = %cond.end26, %cond.true29
  call void @llvm.dbg.value(metadata i32 0, metadata !4872, metadata !DIExpression()), !dbg !4900
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 1, !dbg !4918
  br label %for.cond, !dbg !4921

for.cond:                                         ; preds = %for.body, %cond.end31
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end31 ], !dbg !4922
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4872, metadata !DIExpression()), !dbg !4900
  %call33 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !4923
  %6 = sext i32 %call33 to i64, !dbg !4924
  %cmp34 = icmp slt i64 %indvars.iv, %6, !dbg !4924
  br i1 %cmp34, label %for.body, label %for.end, !dbg !4925

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !4926
  %modified = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %7, i64 %indvars.iv, i32 2, !dbg !4927
  %bf.load36 = load i8, i8* %modified, align 8, !dbg !4927
  %bf.clear37 = and i8 %bf.load36, 1, !dbg !4927
  %conv39 = zext i8 %bf.clear37 to i64, !dbg !4928
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv39, i32 1) #6, !dbg !4929
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4872, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4900
  br label %for.cond, !dbg !4931, !llvm.loop !4932

for.end:                                          ; preds = %for.cond
  %8 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4934
  tail call void @lto_output_bitpack(%struct.lto_output_stream* %8, %struct.bitpack_d* %call2) #6, !dbg !4935
  tail call void @bitpack_delete(%struct.bitpack_d* %call2) #6, !dbg !4936
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 1, !dbg !4937
  br label %for.cond41, !dbg !4938

for.cond41:                                       ; preds = %for.inc64, %for.end
  %e.0.in = phi %struct.cgraph_edge** [ %callees, %for.end ], [ %next_callee, %for.inc64 ]
  %e.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %e.0.in, align 8, !dbg !4939
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %e.0, metadata !4873, metadata !DIExpression()), !dbg !4900
  %tobool42 = icmp eq %struct.cgraph_edge* %e.0, null, !dbg !4940
  br i1 %tobool42, label %for.end65, label %for.body43, !dbg !4940

for.body43:                                       ; preds = %for.cond41
  %9 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !4941
  %base46 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %9, i64 0, i32 0, !dbg !4941
  %uid50 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 12, !dbg !4941
  %10 = load i32, i32* %uid50, align 4, !dbg !4941
  %call51 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base46, i32 %10) #8, !dbg !4941
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call51, metadata !4896, metadata !DIExpression()), !dbg !4942
  %11 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4943
  %call53 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call51) #8, !dbg !4944
  %conv54 = sext i32 %call53 to i64, !dbg !4944
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %11, i64 %conv54) #6, !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4872, metadata !DIExpression()), !dbg !4900
  br label %for.cond55, !dbg !4946

for.cond55:                                       ; preds = %for.body59, %for.body43
  %j.1 = phi i32 [ 0, %for.body43 ], [ %inc62, %for.body59 ], !dbg !4948
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !4872, metadata !DIExpression()), !dbg !4900
  %call56 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call51) #8, !dbg !4949
  %cmp57 = icmp slt i32 %j.1, %call56, !dbg !4951
  br i1 %cmp57, label %for.body59, label %for.inc64, !dbg !4952

for.body59:                                       ; preds = %for.cond55
  %call60 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %call51, i32 %j.1) #8, !dbg !4953
  tail call fastcc void @ipa_write_jump_function(%struct.output_block* %ob, %struct.ipa_jump_func* %call60) #8, !dbg !4954
  %inc62 = add nuw nsw i32 %j.1, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %inc62, metadata !4872, metadata !DIExpression()), !dbg !4900
  br label %for.cond55, !dbg !4956, !llvm.loop !4957

for.inc64:                                        ; preds = %for.cond55
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 6, !dbg !4959
  br label %for.cond41, !dbg !4960, !llvm.loop !4961

for.end65:                                        ; preds = %for.cond41
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 2, !dbg !4963
  br label %for.cond66, !dbg !4965

for.cond66:                                       ; preds = %for.body68, %for.end65
  %note_count.0 = phi i32 [ 0, %for.end65 ], [ %inc69, %for.body68 ], !dbg !4900
  %note.0.in = phi %struct.ipa_param_call_note** [ %param_calls, %for.end65 ], [ %next, %for.body68 ]
  %note.0 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %note.0.in, align 8, !dbg !4966
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %note.0, metadata !4895, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %note_count.0, metadata !4894, metadata !DIExpression()), !dbg !4900
  %tobool67 = icmp eq %struct.ipa_param_call_note* %note.0, null, !dbg !4967
  br i1 %tobool67, label %for.end71, label %for.body68, !dbg !4967

for.body68:                                       ; preds = %for.cond66
  %inc69 = add nuw nsw i32 %note_count.0, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %inc69, metadata !4894, metadata !DIExpression()), !dbg !4900
  %next = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.0, i64 0, i32 1, !dbg !4970
  br label %for.cond66, !dbg !4971, !llvm.loop !4972

for.end71:                                        ; preds = %for.cond66
  %note_count.0.lcssa = phi i32 [ %note_count.0, %for.cond66 ], !dbg !4900
  call void @llvm.dbg.value(metadata i32 %note_count.0.lcssa, metadata !4894, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %note_count.0.lcssa, metadata !4894, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %note_count.0.lcssa, metadata !4894, metadata !DIExpression()), !dbg !4900
  %12 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4974
  %conv73 = zext i32 %note_count.0.lcssa to i64, !dbg !4975
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %12, i64 %conv73) #6, !dbg !4976
  br label %for.cond75, !dbg !4977

for.cond75:                                       ; preds = %for.body77, %for.end71
  %note.1.in = phi %struct.ipa_param_call_note** [ %param_calls, %for.end71 ], [ %next79, %for.body77 ]
  %note.1 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %note.1.in, align 8, !dbg !4979
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %note.1, metadata !4895, metadata !DIExpression()), !dbg !4900
  %tobool76 = icmp eq %struct.ipa_param_call_note* %note.1, null, !dbg !4980
  br i1 %tobool76, label %for.end80, label %for.body77, !dbg !4980

for.body77:                                       ; preds = %for.cond75
  tail call fastcc void @ipa_write_param_call_note(%struct.output_block* %ob, %struct.ipa_param_call_note* nonnull %note.1) #8, !dbg !4981
  %next79 = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.1, i64 0, i32 1, !dbg !4983
  br label %for.cond75, !dbg !4984, !llvm.loop !4985

for.end80:                                        ; preds = %for.cond75
  ret void, !dbg !4987
}

declare dso_local void @lto_output_1_stream(%struct.lto_output_stream*, i8 signext) local_unnamed_addr #2

declare dso_local void @produce_asm(%struct.output_block*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @destroy_output_block(%struct.output_block*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ipa_prop_read_jump_functions() local_unnamed_addr #5 !dbg !4988 {
entry:
  %len = alloca i64, align 8
  %call = tail call %struct.lto_file_decl_data** @lto_get_file_decl_data() #6, !dbg !4997
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data** %call, metadata !4990, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.value(metadata i32 0, metadata !4993, metadata !DIExpression()), !dbg !4998
  tail call fastcc void @ipa_check_create_node_params() #8, !dbg !4999
  tail call fastcc void @ipa_check_create_edge_args() #8, !dbg !5000
  tail call void @ipa_register_cgraph_hooks() #8, !dbg !5001
  %0 = bitcast i64* %len to i8*, !dbg !5002
  br label %while.cond, !dbg !5003

while.cond:                                       ; preds = %if.end, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !4998
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4993, metadata !DIExpression()), !dbg !4998
  %inc = add i32 %j.0, 1, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4993, metadata !DIExpression()), !dbg !4998
  %idxprom = zext i32 %j.0 to i64, !dbg !5005
  %arrayidx = getelementptr inbounds %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %call, i64 %idxprom, !dbg !5005
  %1 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %arrayidx, align 8, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %1, metadata !4992, metadata !DIExpression()), !dbg !4998
  %tobool = icmp eq %struct.lto_file_decl_data* %1, null, !dbg !5003
  br i1 %tobool, label %while.end, label %while.body, !dbg !5003

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5006
  call void @llvm.dbg.value(metadata i64* %len, metadata !4994, metadata !DIExpression(DW_OP_deref)), !dbg !5002
  %call1 = call i8* @lto_get_section_data(%struct.lto_file_decl_data* nonnull %1, i32 4, i8* null, i64* nonnull %len) #6, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4996, metadata !DIExpression()), !dbg !5002
  %tobool2 = icmp eq i8* %call1, null, !dbg !5008
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5010

if.then:                                          ; preds = %while.body
  %2 = load i64, i64* %len, align 8, !dbg !5011
  call void @llvm.dbg.value(metadata i64 %2, metadata !4994, metadata !DIExpression()), !dbg !5002
  call fastcc void @ipa_prop_read_section(%struct.lto_file_decl_data* nonnull %1, i8* nonnull %call1, i64 %2) #8, !dbg !5012
  br label %if.end, !dbg !5012

if.end:                                           ; preds = %while.body, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5013
  br label %while.cond, !dbg !5003, !llvm.loop !5014

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5015
}

declare dso_local %struct.lto_file_decl_data** @lto_get_file_decl_data() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ipa_check_create_node_params() unnamed_addr #0 !dbg !5016 {
entry:
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !5017
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_heap* %0, null, !dbg !5017
  br i1 %tobool, label %if.then, label %if.end, !dbg !5019

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @cgraph_max_uid, align 4, !dbg !5020
  %call = tail call fastcc %struct.VEC_ipa_node_params_t_heap* @VEC_ipa_node_params_t_heap_alloc(i32 %1) #8, !dbg !5020
  store %struct.VEC_ipa_node_params_t_heap* %call, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !5021
  br label %if.end, !dbg !5022

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.VEC_ipa_node_params_t_heap* [ %0, %entry ], [ %call, %if.then ], !dbg !5023
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %2, i64 0, i32 0, !dbg !5023
  %call2 = tail call fastcc i32 @VEC_ipa_node_params_t_base_length(%struct.VEC_ipa_node_params_t_base* %base) #8, !dbg !5023
  %3 = load i32, i32* @cgraph_max_uid, align 4, !dbg !5025
  %cmp = icmp ugt i32 %call2, %3, !dbg !5026
  br i1 %cmp, label %if.end4, label %if.then3, !dbg !5027

if.then3:                                         ; preds = %if.end
  %add = add nsw i32 %3, 1, !dbg !5028
  tail call fastcc void @VEC_ipa_node_params_t_heap_safe_grow_cleared(%struct.VEC_ipa_node_params_t_heap** nonnull @ipa_node_params_vector, i32 %add) #8, !dbg !5028
  br label %if.end4, !dbg !5028

if.end4:                                          ; preds = %if.end, %if.then3
  ret void, !dbg !5029
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ipa_check_create_edge_args() unnamed_addr #0 !dbg !5030 {
entry:
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5031
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_gc* %0, null, !dbg !5031
  br i1 %tobool, label %if.then, label %if.end, !dbg !5033

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @cgraph_edge_max_uid, align 4, !dbg !5034
  %call = tail call fastcc %struct.VEC_ipa_edge_args_t_gc* @VEC_ipa_edge_args_t_gc_alloc(i32 %1) #8, !dbg !5034
  store %struct.VEC_ipa_edge_args_t_gc* %call, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5035
  br label %if.end, !dbg !5036

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.VEC_ipa_edge_args_t_gc* [ %0, %entry ], [ %call, %if.then ], !dbg !5037
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %2, i64 0, i32 0, !dbg !5037
  %call2 = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %base) #8, !dbg !5037
  %3 = load i32, i32* @cgraph_edge_max_uid, align 4, !dbg !5039
  %cmp = icmp ugt i32 %call2, %3, !dbg !5040
  br i1 %cmp, label %if.end4, label %if.then3, !dbg !5041

if.then3:                                         ; preds = %if.end
  %add = add nsw i32 %3, 1, !dbg !5042
  tail call fastcc void @VEC_ipa_edge_args_t_gc_safe_grow_cleared(%struct.VEC_ipa_edge_args_t_gc** nonnull @ipa_edge_args_vector, i32 %add) #8, !dbg !5042
  br label %if.end4, !dbg !5042

if.end4:                                          ; preds = %if.end, %if.then3
  ret void, !dbg !5043
}

declare dso_local i8* @lto_get_section_data(%struct.lto_file_decl_data*, i32, i8*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_prop_read_section(%struct.lto_file_decl_data* %file_data, i8* %data, i64 %len) unnamed_addr #5 !dbg !5044 {
entry:
  %ib_main = alloca %struct.lto_input_block, align 8
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %file_data, metadata !5048, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i8* %data, metadata !5049, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i64 %len, metadata !5050, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i8* %data, metadata !5051, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32 36, metadata !5052, metadata !DIExpression()), !dbg !5098
  %cfg_size = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5099
  %0 = bitcast i8* %cfg_size to i32*, !dbg !5099
  %1 = load i32, i32* %0, align 4, !dbg !5099
  %add = add nsw i32 %1, 36, !dbg !5100
  call void @llvm.dbg.value(metadata i32 %add, metadata !5054, metadata !DIExpression()), !dbg !5098
  %main_size = getelementptr inbounds i8, i8* %data, i64 28, !dbg !5101
  %2 = bitcast i8* %main_size to i32*, !dbg !5101
  %3 = load i32, i32* %2, align 4, !dbg !5101
  %add1 = add nsw i32 %add, %3, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %add1, metadata !5055, metadata !DIExpression()), !dbg !5098
  %4 = bitcast %struct.lto_input_block* %ib_main to i8*, !dbg !5103
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7, !dbg !5103
  %idx.ext = sext i32 %add to i64, !dbg !5104
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %idx.ext, !dbg !5104
  %data2 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 0, !dbg !5104
  store i8* %add.ptr, i8** %data2, align 8, !dbg !5104
  %p = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 1, !dbg !5104
  store i32 0, i32* %p, align 8, !dbg !5104
  %len4 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 2, !dbg !5104
  store i32 %3, i32* %len4, align 4, !dbg !5104
  %idx.ext5 = sext i32 %add1 to i64, !dbg !5106
  %add.ptr6 = getelementptr inbounds i8, i8* %data, i64 %idx.ext5, !dbg !5106
  %string_size = getelementptr inbounds i8, i8* %data, i64 32, !dbg !5107
  %5 = bitcast i8* %string_size to i32*, !dbg !5107
  %6 = load i32, i32* %5, align 4, !dbg !5107
  %call = tail call %struct.data_in* @lto_data_in_create(%struct.lto_file_decl_data* %file_data, i8* %add.ptr6, i32 %6, %struct.VEC_ld_plugin_symbol_resolution_t_heap* null) #6, !dbg !5108
  call void @llvm.dbg.value(metadata %struct.data_in* %call, metadata !5056, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_main, metadata !5084, metadata !DIExpression(DW_OP_deref)), !dbg !5098
  %call7 = call i64 @lto_input_uleb128(%struct.lto_input_block* nonnull %ib_main) #6, !dbg !5109
  %conv = trunc i64 %call7 to i32, !dbg !5109
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5091, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32 0, metadata !5090, metadata !DIExpression()), !dbg !5098
  %cgraph_node_encoder = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %file_data, i64 0, i32 2, !dbg !5110
  br label %for.cond, !dbg !5111

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5112
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5090, metadata !DIExpression()), !dbg !5098
  %exitcond = icmp eq i32 %i.0, %conv, !dbg !5113
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5114

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_main, metadata !5084, metadata !DIExpression(DW_OP_deref)), !dbg !5098
  %call9 = call i64 @lto_input_uleb128(%struct.lto_input_block* nonnull %ib_main) #6, !dbg !5115
  %conv10 = trunc i64 %call9 to i32, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %conv10, metadata !5092, metadata !DIExpression()), !dbg !5110
  %7 = load %struct.lto_cgraph_encoder_d*, %struct.lto_cgraph_encoder_d** %cgraph_node_encoder, align 8, !dbg !5116
  call void @llvm.dbg.value(metadata %struct.lto_cgraph_encoder_d* %7, metadata !5097, metadata !DIExpression()), !dbg !5110
  %call11 = call %struct.cgraph_node* @lto_cgraph_encoder_deref(%struct.lto_cgraph_encoder_d* %7, i32 %conv10) #6, !dbg !5117
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call11, metadata !5096, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_main, metadata !5084, metadata !DIExpression(DW_OP_deref)), !dbg !5098
  call fastcc void @ipa_read_node_info(%struct.lto_input_block* nonnull %ib_main, %struct.cgraph_node* %call11, %struct.data_in* %call) #8, !dbg !5118
  %inc = add i32 %i.0, 1, !dbg !5119
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5090, metadata !DIExpression()), !dbg !5098
  br label %for.cond, !dbg !5120, !llvm.loop !5121

for.end:                                          ; preds = %for.cond
  call void @lto_free_section_data(%struct.lto_file_decl_data* %file_data, i32 4, i8* null, i8* %data, i64 %len) #6, !dbg !5123
  call void @lto_data_in_delete(%struct.data_in* %call) #6, !dbg !5124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7, !dbg !5125
  ret void, !dbg !5125
}

; Function Attrs: nounwind uwtable
define dso_local void @ipa_update_after_lto_read() local_unnamed_addr #5 !dbg !5126 {
entry:
  tail call fastcc void @ipa_check_create_node_params() #8, !dbg !5130
  tail call fastcc void @ipa_check_create_edge_args() #8, !dbg !5131
  br label %for.cond, !dbg !5132

for.cond:                                         ; preds = %for.inc, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !5134
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !5128, metadata !DIExpression()), !dbg !5135
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !5136
  br i1 %tobool, label %for.end, label %for.body, !dbg !5136

for.body:                                         ; preds = %for.cond
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 27, !dbg !5137
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !5137
  %bf.clear = and i16 %bf.load, 32, !dbg !5137
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !5140
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !5141

if.then:                                          ; preds = %for.body
  tail call void @ipa_initialize_node_params(%struct.cgraph_node* nonnull %node.0) #8, !dbg !5142
  br label %for.inc, !dbg !5142

for.inc:                                          ; preds = %for.body, %if.then
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !5143
  br label %for.cond, !dbg !5144, !llvm.loop !5145

for.end:                                          ; preds = %for.cond
  br label %for.cond2, !dbg !5147

for.cond2:                                        ; preds = %for.inc40, %for.end
  %node.1.in = phi %struct.cgraph_node** [ @cgraph_nodes, %for.end ], [ %next41, %for.inc40 ]
  %node.1 = load %struct.cgraph_node*, %struct.cgraph_node** %node.1.in, align 8, !dbg !5149
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1, metadata !5128, metadata !DIExpression()), !dbg !5135
  %tobool3 = icmp eq %struct.cgraph_node* %node.1, null, !dbg !5150
  br i1 %tobool3, label %for.end42, label %for.body4, !dbg !5150

for.body4:                                        ; preds = %for.cond2
  %analyzed5 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 27, !dbg !5151
  %bf.load6 = load i16, i16* %analyzed5, align 4, !dbg !5151
  %bf.clear8 = and i16 %bf.load6, 32, !dbg !5151
  %tobool10 = icmp eq i16 %bf.clear8, 0, !dbg !5154
  br i1 %tobool10, label %for.inc40, label %if.then11, !dbg !5155

if.then11:                                        ; preds = %for.body4
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 1, !dbg !5156
  br label %for.cond12, !dbg !5158

for.cond12:                                       ; preds = %for.inc37, %if.then11
  %cs.0.in = phi %struct.cgraph_edge** [ %callees, %if.then11 ], [ %next_callee, %for.inc37 ]
  %cs.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.0.in, align 8, !dbg !5159
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.0, metadata !5129, metadata !DIExpression()), !dbg !5135
  %tobool13 = icmp eq %struct.cgraph_edge* %cs.0, null, !dbg !5160
  br i1 %tobool13, label %for.inc40.loopexit, label %for.body14, !dbg !5160

for.body14:                                       ; preds = %for.cond12
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5161
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !5161
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 12, !dbg !5161
  %1 = load i32, i32* %uid, align 4, !dbg !5161
  %call = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base, i32 %1) #8, !dbg !5161
  %call16 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call) #8, !dbg !5165
  %2 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !5166
  %base19 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %2, i64 0, i32 0, !dbg !5166
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 2, !dbg !5166
  %3 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !5166
  %uid23 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %3, i64 0, i32 24, !dbg !5166
  %4 = load i32, i32* %uid23, align 8, !dbg !5166
  %call24 = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base19, i32 %4) #8, !dbg !5166
  %call25 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call24) #8, !dbg !5167
  %cmp = icmp eq i32 %call16, %call25, !dbg !5168
  br i1 %cmp, label %for.inc37, label %if.then26, !dbg !5169

if.then26:                                        ; preds = %for.body14
  %5 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !5170
  %base29 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %5, i64 0, i32 0, !dbg !5170
  %6 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !5170
  %uid34 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %6, i64 0, i32 24, !dbg !5170
  %7 = load i32, i32* %uid34, align 8, !dbg !5170
  %call35 = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base29, i32 %7) #8, !dbg !5170
  tail call fastcc void @ipa_set_called_with_variable_arg(%struct.ipa_node_params* %call35) #8, !dbg !5171
  br label %for.inc37, !dbg !5171

for.inc37:                                        ; preds = %for.body14, %if.then26
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 6, !dbg !5172
  br label %for.cond12, !dbg !5173, !llvm.loop !5174

for.inc40.loopexit:                               ; preds = %for.cond12
  br label %for.inc40, !dbg !5176

for.inc40:                                        ; preds = %for.inc40.loopexit, %for.body4
  %next41 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 3, !dbg !5176
  br label %for.cond2, !dbg !5177, !llvm.loop !5178

for.end42:                                        ; preds = %for.cond2
  ret void, !dbg !5180
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ipa_set_called_with_variable_arg(%struct.ipa_node_params* %info) unnamed_addr #0 !dbg !5181 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5183, metadata !DIExpression()), !dbg !5184
  %called_with_var_arguments = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 5, !dbg !5185
  %bf.load = load i8, i8* %called_with_var_arguments, align 8, !dbg !5186
  %bf.set = or i8 %bf.load, 1, !dbg !5186
  store i8 %bf.set, i8* %called_with_var_arguments, align 8, !dbg !5186
  ret void, !dbg !5187
}

; Function Attrs: nounwind uwtable
define dso_local void @lto_ipa_fixup_call_notes(%struct.cgraph_node* %node, %union.gimple_statement_d** %stmts) local_unnamed_addr #5 !dbg !5188 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !5190, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmts, metadata !5191, metadata !DIExpression()), !dbg !5194
  tail call fastcc void @ipa_check_create_node_params() #8, !dbg !5195
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !5196
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !5196
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !5196
  %1 = load i32, i32* %uid, align 8, !dbg !5196
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !5196
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !5192, metadata !DIExpression()), !dbg !5194
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 2, !dbg !5197
  %2 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %param_calls, align 8, !dbg !5197
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %2, metadata !5193, metadata !DIExpression()), !dbg !5194
  %tobool1 = icmp eq %struct.ipa_param_call_note* %2, null, !dbg !5198
  br i1 %tobool1, label %cleanup.cont, label %lor.lhs.false, !dbg !5200

lor.lhs.false:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %2, i64 0, i32 2, !dbg !5201
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5201
  %tobool2 = icmp eq %union.gimple_statement_d* %3, null, !dbg !5202
  br i1 %tobool2, label %do.body.preheader, label %cleanup.cont, !dbg !5203

do.body.preheader:                                ; preds = %lor.lhs.false
  br label %do.body, !dbg !5204

do.body:                                          ; preds = %do.body.preheader, %do.body
  %note.0 = phi %struct.ipa_param_call_note* [ %8, %do.body ], [ %2, %do.body.preheader ], !dbg !5194
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %note.0, metadata !5193, metadata !DIExpression()), !dbg !5194
  %lto_stmt_uid = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.0, i64 0, i32 3, !dbg !5205
  %4 = load i32, i32* %lto_stmt_uid, align 8, !dbg !5205
  %idxprom = zext i32 %4 to i64, !dbg !5207
  %arrayidx = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %stmts, i64 %idxprom, !dbg !5207
  %5 = bitcast %union.gimple_statement_d** %arrayidx to i64*, !dbg !5207
  %6 = load i64, i64* %5, align 8, !dbg !5207
  %stmt3 = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.0, i64 0, i32 2, !dbg !5208
  %7 = bitcast %union.gimple_statement_d** %stmt3 to i64*, !dbg !5209
  store i64 %6, i64* %7, align 8, !dbg !5209
  %next = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note.0, i64 0, i32 1, !dbg !5210
  %8 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %next, align 8, !dbg !5210
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %8, metadata !5193, metadata !DIExpression()), !dbg !5194
  %tobool4 = icmp eq %struct.ipa_param_call_note* %8, null, !dbg !5211
  br i1 %tobool4, label %cleanup.cont.loopexit, label %do.body, !dbg !5211, !llvm.loop !5212

cleanup.cont.loopexit:                            ; preds = %do.body
  br label %cleanup.cont, !dbg !5214

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %lor.lhs.false, %entry
  ret void, !dbg !5214
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ipa_set_param_count(%struct.ipa_node_params* %info, i32 %count) unnamed_addr #0 !dbg !5215 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5219, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32 %count, metadata !5220, metadata !DIExpression()), !dbg !5221
  %param_count = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 0, !dbg !5222
  store i32 %count, i32* %param_count, align 8, !dbg !5223
  ret void, !dbg !5224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5225 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5232, metadata !DIExpression()), !dbg !5233
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5234
  %0 = load i32, i32* %flags, align 8, !dbg !5234
  %and = and i32 %0, 512, !dbg !5235
  %tobool = icmp eq i32 %and, 0, !dbg !5235
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5236

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5237
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5237
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5238
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5239

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5240
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5240
  br label %cond.end, !dbg !5239

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5239
  ret %struct.gimple_seq_d* %cond, !dbg !5241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5242 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5249, metadata !DIExpression()), !dbg !5250
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5251
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5251

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5252
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5252
  br label %cond.end, !dbg !5251

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5251
  ret %struct.gimple_seq_node_d* %cond, !dbg !5253
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %ptree) unnamed_addr #5 !dbg !5254 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5258, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %union.tree_node* %ptree, metadata !5259, metadata !DIExpression()), !dbg !5262
  %call = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %info) #8, !dbg !5263
  call void @llvm.dbg.value(metadata i32 %call, metadata !5261, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 0, metadata !5260, metadata !DIExpression()), !dbg !5262
  br label %for.cond, !dbg !5264

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5266
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5260, metadata !DIExpression()), !dbg !5262
  %cmp = icmp slt i32 %i.0, %call, !dbg !5267
  br i1 %cmp, label %for.body, label %cleanup, !dbg !5269

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %union.tree_node* @ipa_get_param(%struct.ipa_node_params* %info, i32 %i.0) #8, !dbg !5270
  %cmp2 = icmp eq %union.tree_node* %call1, %ptree, !dbg !5272
  br i1 %cmp2, label %cleanup, label %for.inc, !dbg !5273

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5260, metadata !DIExpression()), !dbg !5262
  br label %for.cond, !dbg !5275, !llvm.loop !5276

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i32 [ %i.0, %for.body ], [ -1, %for.cond ], !dbg !5262
  ret i32 %retval.0, !dbg !5278
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5279 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5283, metadata !DIExpression()), !dbg !5284
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !5285
  %bf.load = load i32, i32* %0, align 8, !dbg !5285
  %bf.clear = and i32 %bf.load, 255, !dbg !5285
  ret i32 %bf.clear, !dbg !5286
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5287 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5289, metadata !DIExpression()), !dbg !5290
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5291
  %0 = load i32, i32* %num_ops, align 4, !dbg !5291
  ret i32 %0, !dbg !5292
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_edge_args_t_gc_safe_grow(%struct.VEC_ipa_edge_args_t_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5293 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, metadata !5295, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5296, metadata !DIExpression()), !dbg !5297
  %cmp = icmp sgt i32 %size_, -1, !dbg !5298
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5298

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5298
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_gc* %0, null, !dbg !5298
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5298

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !5298
  br label %cond.end, !dbg !5298

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_ipa_edge_args_t_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5298
  %call = tail call fastcc i32 @VEC_ipa_edge_args_t_base_length(%struct.VEC_ipa_edge_args_t_base* %cond) #8, !dbg !5298
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5298
  %tobool2 = icmp eq %struct.VEC_ipa_edge_args_t_gc* %1, null, !dbg !5298
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5298

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %1, i64 0, i32 0, i32 0, !dbg !5298
  %2 = load i32, i32* %num, align 8, !dbg !5298
  br label %cond.end11, !dbg !5298

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5298
  %sub = sub nsw i32 %size_, %cond12, !dbg !5298
  %call13 = tail call fastcc i32 @VEC_ipa_edge_args_t_gc_reserve_exact(%struct.VEC_ipa_edge_args_t_gc** nonnull @ipa_edge_args_vector, i32 %sub) #8, !dbg !5298
  %3 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5298
  %num20 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %3, i64 0, i32 0, i32 0, !dbg !5298
  store i32 %size_, i32* %num20, align 8, !dbg !5298
  ret void, !dbg !5298
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_address(%struct.VEC_ipa_edge_args_t_base* %vec_) unnamed_addr #0 !dbg !5299 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_base* %vec_, metadata !5303, metadata !DIExpression()), !dbg !5304
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_base* %vec_, null, !dbg !5305
  %arraydecay = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !5305
  %cond = select i1 %tobool, %struct.ipa_edge_args* null, %struct.ipa_edge_args* %arraydecay, !dbg !5305
  ret %struct.ipa_edge_args* %cond, !dbg !5305
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_edge_args_t_gc_reserve_exact(%struct.VEC_ipa_edge_args_t_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5306 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, metadata !5310, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5311, metadata !DIExpression()), !dbg !5313
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !5314
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_gc* %0, null, !dbg !5314
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5314

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !5314
  br label %cond.end, !dbg !5314

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ipa_edge_args_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5314
  %call = tail call fastcc i32 @VEC_ipa_edge_args_t_base_space(%struct.VEC_ipa_edge_args_t_base* %cond, i32 %alloc_) #8, !dbg !5314
  %tobool1 = icmp eq i32 %call, 0, !dbg !5314
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5312, metadata !DIExpression()), !dbg !5313
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5314

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector to i8**), align 8, !dbg !5315
  %call3 = tail call i8* @vec_gc_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 16) #6, !dbg !5315
  store i8* %call3, i8** bitcast (%struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector to i8**), align 8, !dbg !5315
  br label %if.end, !dbg !5315

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5314
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_edge_args_t_base_space(%struct.VEC_ipa_edge_args_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5317 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_edge_args_t_base* %vec_, metadata !5321, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5322, metadata !DIExpression()), !dbg !5323
  %tobool = icmp eq %struct.VEC_ipa_edge_args_t_base* %vec_, null, !dbg !5324
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5324

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 1, !dbg !5324
  %0 = load i32, i32* %alloc, align 4, !dbg !5324
  %num = getelementptr inbounds %struct.VEC_ipa_edge_args_t_base, %struct.VEC_ipa_edge_args_t_base* %vec_, i64 0, i32 0, !dbg !5324
  %1 = load i32, i32* %num, align 8, !dbg !5324
  %sub = sub i32 %0, %1, !dbg !5324
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5324
  br label %cond.end, !dbg !5324

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5324
  br label %cond.end, !dbg !5324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5324
  ret i32 %cond, !dbg !5324
}

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_ip_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_complex_pass_through(%struct.ipa_node_params* %info, %struct.ipa_jump_func* %jfunc, %union.tree_node* %name) unnamed_addr #5 !dbg !5325 {
entry:
  %offset = alloca i64, align 8
  %size = alloca i64, align 8
  %max_size = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5329, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jfunc, metadata !5330, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5331, metadata !DIExpression()), !dbg !5340
  %0 = bitcast i64* %offset to i8*, !dbg !5341
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5341
  %1 = bitcast i64* %size to i8*, !dbg !5341
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5341
  %2 = bitcast i64* %max_size to i8*, !dbg !5341
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5341
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5342
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5342
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !5342
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !5339, metadata !DIExpression()), !dbg !5340
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %4) #8, !dbg !5343
  %tobool = icmp eq i8 %call, 0, !dbg !5343
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5345

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %4) #8, !dbg !5346
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5335, metadata !DIExpression()), !dbg !5340
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %4) #8, !dbg !5347
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5336, metadata !DIExpression()), !dbg !5340
  %tobool3 = icmp eq %union.tree_node* %call2, null, !dbg !5348
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5340
  %bf.load = load i64, i64* %5, align 8, !dbg !5340
  %6 = trunc i64 %bf.load to i32, !dbg !5340
  %bf.cast = and i32 %6, 65535, !dbg !5340
  br i1 %tobool3, label %if.end34, label %if.then4, !dbg !5350

if.then4:                                         ; preds = %if.end
  %cmp = icmp eq i32 %bf.cast, 141, !dbg !5351
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !5354

lor.lhs.false:                                    ; preds = %if.then4
  %bf.cast84 = and i64 %bf.load, 4294967296, !dbg !5355
  %tobool9 = icmp eq i64 %bf.cast84, 0, !dbg !5355
  br i1 %tobool9, label %cleanup, label %lor.lhs.false10, !dbg !5356

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %call11 = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %4) #8, !dbg !5357
  %idxprom = sext i32 %call11 to i64, !dbg !5357
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5357
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5357
  %cmp12 = icmp eq i32 %7, 5, !dbg !5358
  br i1 %cmp12, label %lor.lhs.false18, label %land.lhs.true, !dbg !5359

land.lhs.true:                                    ; preds = %lor.lhs.false10
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5360
  %8 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !5360
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5361
  %9 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !5361
  %call16 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %8, %union.tree_node* %9) #6, !dbg !5362
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5362
  br i1 %tobool17, label %cleanup, label %lor.lhs.false18, !dbg !5363

lor.lhs.false18:                                  ; preds = %land.lhs.true, %lor.lhs.false10
  %call19 = tail call zeroext i8 @is_gimple_ip_invariant(%union.tree_node* nonnull %call2) #6, !dbg !5364
  %tobool20 = icmp eq i8 %call19, 0, !dbg !5364
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !5365

if.end22:                                         ; preds = %lor.lhs.false18
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5366
  %10 = bitcast i32* %var to %union.tree_node**, !dbg !5366
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5366
  %call24 = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %11) #8, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %call24, metadata !5338, metadata !DIExpression()), !dbg !5340
  %cmp25 = icmp sgt i32 %call24, -1, !dbg !5368
  br i1 %cmp25, label %if.then26, label %cleanup, !dbg !5370

if.then26:                                        ; preds = %if.end22
  %type27 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 0, !dbg !5371
  store i32 3, i32* %type27, align 8, !dbg !5373
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 1, !dbg !5374
  %12 = bitcast %union.tree_node** %formal_id to i32*, !dbg !5374
  store i32 %call24, i32* %12, align 8, !dbg !5375
  %call28 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %4) #8, !dbg !5376
  %value29 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, !dbg !5377
  %pass_through30 = bitcast %union.jump_func_value* %value29 to %struct.ipa_pass_through_data*, !dbg !5378
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through30, i64 0, i32 2, !dbg !5379
  store i32 %call28, i32* %operation, align 4, !dbg !5380
  %operand = bitcast %union.jump_func_value* %value29 to %union.tree_node**, !dbg !5381
  store %union.tree_node* %call2, %union.tree_node** %operand, align 8, !dbg !5382
  br label %cleanup, !dbg !5383

if.end34:                                         ; preds = %if.end
  %cmp39 = icmp eq i32 %bf.cast, 121, !dbg !5384
  br i1 %cmp39, label %if.end41, label %cleanup, !dbg !5386

if.end41:                                         ; preds = %if.end34
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5387
  %13 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5387
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !5335, metadata !DIExpression()), !dbg !5340
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5388
  %14 = bitcast %union.tree_node** %type44 to i64*, !dbg !5388
  %15 = load i64, i64* %14, align 8, !dbg !5388
  call void @llvm.dbg.value(metadata i64* %offset, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5340
  call void @llvm.dbg.value(metadata i64* %size, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5340
  call void @llvm.dbg.value(metadata i64* %max_size, metadata !5334, metadata !DIExpression(DW_OP_deref)), !dbg !5340
  %call45 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %13, i64* nonnull %offset, i64* nonnull %size, i64* nonnull %max_size) #6, !dbg !5389
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !5335, metadata !DIExpression()), !dbg !5340
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5390
  %bf.load47 = load i64, i64* %16, align 8, !dbg !5390
  %bf.cast491 = and i64 %bf.load47, 65535, !dbg !5392
  %cmp50 = icmp ne i64 %bf.cast491, 47, !dbg !5392
  %17 = load i64, i64* %max_size, align 8, !dbg !5393
  call void @llvm.dbg.value(metadata i64 %17, metadata !5334, metadata !DIExpression()), !dbg !5340
  %cmp52 = icmp eq i64 %17, -1, !dbg !5394
  %or.cond = or i1 %cmp50, %cmp52, !dbg !5395
  br i1 %or.cond, label %cleanup, label %lor.lhs.false53, !dbg !5395

lor.lhs.false53:                                  ; preds = %if.end41
  call void @llvm.dbg.value(metadata i64 %17, metadata !5334, metadata !DIExpression()), !dbg !5340
  %18 = load i64, i64* %size, align 8, !dbg !5396
  call void @llvm.dbg.value(metadata i64 %18, metadata !5333, metadata !DIExpression()), !dbg !5340
  %cmp54 = icmp eq i64 %17, %18, !dbg !5397
  br i1 %cmp54, label %if.end56, label %cleanup, !dbg !5398

if.end56:                                         ; preds = %lor.lhs.false53
  %operands58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5399
  %19 = load %union.tree_node*, %union.tree_node** %operands58, align 8, !dbg !5399
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5335, metadata !DIExpression()), !dbg !5340
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5400
  %bf.load61 = load i64, i64* %20, align 8, !dbg !5400
  %bf.cast632 = and i64 %bf.load61, 65535, !dbg !5402
  %cmp64 = icmp eq i64 %bf.cast632, 141, !dbg !5402
  br i1 %cmp64, label %lor.lhs.false65, label %cleanup, !dbg !5403

lor.lhs.false65:                                  ; preds = %if.end56
  %bf.cast703 = and i64 %bf.load61, 4294967296, !dbg !5404
  %tobool71 = icmp eq i64 %bf.cast703, 0, !dbg !5404
  br i1 %tobool71, label %cleanup, label %if.end73, !dbg !5405

if.end73:                                         ; preds = %lor.lhs.false65
  %var75 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5406
  %21 = bitcast i32* %var75 to %union.tree_node**, !dbg !5406
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !5406
  %call76 = call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %22) #8, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %call76, metadata !5338, metadata !DIExpression()), !dbg !5340
  %cmp77 = icmp sgt i32 %call76, -1, !dbg !5408
  br i1 %cmp77, label %if.then78, label %cleanup, !dbg !5410

if.then78:                                        ; preds = %if.end73
  %type79 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 0, !dbg !5411
  store i32 4, i32* %type79, align 8, !dbg !5413
  %formal_id81 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 2, !dbg !5414
  store i32 %call76, i32* %formal_id81, align 8, !dbg !5415
  %23 = load i64, i64* %offset, align 8, !dbg !5416
  call void @llvm.dbg.value(metadata i64 %23, metadata !5332, metadata !DIExpression()), !dbg !5340
  %offset84 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 0, !dbg !5417
  store i64 %23, i64* %offset84, align 8, !dbg !5418
  %type87 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 1, !dbg !5419
  %24 = bitcast %union.tree_node** %type87 to i64*, !dbg !5420
  store i64 %15, i64* %24, align 8, !dbg !5420
  br label %cleanup, !dbg !5421

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false18, %lor.lhs.false, %if.then4, %lor.lhs.false65, %if.end56, %lor.lhs.false53, %if.end34, %entry, %if.end73, %if.then78, %if.end41, %if.end22, %if.then26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5422
  ret void, !dbg !5422
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5423 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5425, metadata !DIExpression()), !dbg !5426
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5427
  %cmp = icmp eq i32 %call, 6, !dbg !5428
  %conv1 = zext i1 %cmp to i8, !dbg !5427
  ret i8 %conv1, !dbg !5429
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5430 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5432, metadata !DIExpression()), !dbg !5433
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !5434
  ret %union.tree_node* %call, !dbg !5435
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5436 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5438, metadata !DIExpression()), !dbg !5439
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5440
  %cmp = icmp ugt i32 %call, 2, !dbg !5442
  br i1 %cmp, label %if.then, label %return, !dbg !5443

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !5444
  br label %return, !dbg !5445

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5446
  ret %union.tree_node* %retval.0, !dbg !5447
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5448 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5452, metadata !DIExpression()), !dbg !5454
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5455
  call void @llvm.dbg.value(metadata i32 %call, metadata !5453, metadata !DIExpression()), !dbg !5454
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5456

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5458
  %bf.load = load i32, i32* %0, align 8, !dbg !5458
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5458
  br label %cleanup, !dbg !5459

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5460
  br label %cleanup, !dbg !5462

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5454
  ret i32 %retval.0, !dbg !5463
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5464 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5466, metadata !DIExpression()), !dbg !5468
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !5469
  call void @llvm.dbg.value(metadata i32 %call, metadata !5467, metadata !DIExpression()), !dbg !5468
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !5470
  %cmp = icmp eq i32 %call1, 3, !dbg !5472
  br i1 %cmp, label %if.then, label %if.end, !dbg !5473

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !5474
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5474
  %bf.load = load i64, i64* %0, align 8, !dbg !5474
  %1 = trunc i64 %bf.load to i32, !dbg !5474
  %bf.cast = and i32 %1, 65535, !dbg !5474
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5467, metadata !DIExpression()), !dbg !5468
  br label %if.end, !dbg !5475

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5468
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5467, metadata !DIExpression()), !dbg !5468
  ret i32 %code.0, !dbg !5476
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5477 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5479, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %i, metadata !5480, metadata !DIExpression()), !dbg !5481
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5482
  %tobool = icmp eq i8 %call, 0, !dbg !5482
  br i1 %tobool, label %return, label %if.then, !dbg !5484

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5485
  %idxprom = zext i32 %i to i64, !dbg !5485
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5485
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5485
  br label %return, !dbg !5487

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5488
  ret %union.tree_node* %retval.0, !dbg !5489
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5490 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5492, metadata !DIExpression()), !dbg !5493
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5494
  %cmp = icmp eq i32 %call, 0, !dbg !5495
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5496

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5497
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5498
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5499
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5500 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5504, metadata !DIExpression()), !dbg !5506
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !5507
  %idxprom = zext i32 %call to i64, !dbg !5508
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5508
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5508
  call void @llvm.dbg.value(metadata i64 %0, metadata !5505, metadata !DIExpression()), !dbg !5506
  %cmp = icmp eq i64 %0, 0, !dbg !5509
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5509

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5509
  br label %cond.end, !dbg !5509

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5510
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5511
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5512
  ret %union.tree_node** %2, !dbg !5513
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5514 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5518, metadata !DIExpression()), !dbg !5519
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5520
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !5521
  ret i32 %call1, !dbg !5522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5523 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5527, metadata !DIExpression()), !dbg !5528
  %idxprom = zext i32 %code to i64, !dbg !5529
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5529
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5529
  ret i32 %0, !dbg !5530
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5531 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5535, metadata !DIExpression()), !dbg !5536
  %idxprom = sext i32 %code to i64, !dbg !5537
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5537
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5537
  %conv = zext i8 %0 to i32, !dbg !5538
  ret i32 %conv, !dbg !5539
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @type_like_member_ptr_p(%union.tree_node* %type, %union.tree_node** %method_ptr, %union.tree_node** %delta) unnamed_addr #5 !dbg !5540 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5544, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node** %method_ptr, metadata !5545, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node** %delta, metadata !5546, metadata !DIExpression()), !dbg !5548
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5549
  %bf.load = load i64, i64* %0, align 8, !dbg !5549
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5551
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !5551
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5552

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5553
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !5553
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5553
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5547, metadata !DIExpression()), !dbg !5548
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !5554
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5556

lor.lhs.false:                                    ; preds = %if.end
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5557
  %3 = bitcast %union.tree_node** %type2 to i64**, !dbg !5557
  %4 = load i64*, i64** %3, align 8, !dbg !5557
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5557
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !5557
  %cmp7 = icmp eq i64 %bf.cast62, 10, !dbg !5557
  br i1 %cmp7, label %lor.lhs.false16, label %lor.lhs.false8, !dbg !5557

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast62, 12, !dbg !5557
  br i1 %cmp15, label %lor.lhs.false16, label %cleanup, !dbg !5558

lor.lhs.false16:                                  ; preds = %lor.lhs.false8, %lor.lhs.false
  %type20 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !5559
  %5 = bitcast i64* %type20 to i64**, !dbg !5559
  %6 = load i64*, i64** %5, align 8, !dbg !5559
  %bf.load22 = load i64, i64* %6, align 8, !dbg !5559
  %bf.cast244 = and i64 %bf.load22, 65535, !dbg !5560
  %cmp25 = icmp eq i64 %bf.cast244, 21, !dbg !5560
  br i1 %cmp25, label %if.end27, label %cleanup, !dbg !5561

if.end27:                                         ; preds = %lor.lhs.false16
  %tobool28 = icmp eq %union.tree_node** %method_ptr, null, !dbg !5562
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !5564

if.then29:                                        ; preds = %if.end27
  store %union.tree_node* %2, %union.tree_node** %method_ptr, align 8, !dbg !5565
  br label %if.end30, !dbg !5566

if.end30:                                         ; preds = %if.end27, %if.then29
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5567
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5567
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5547, metadata !DIExpression()), !dbg !5548
  %tobool32 = icmp eq %union.tree_node* %7, null, !dbg !5568
  br i1 %tobool32, label %cleanup, label %lor.lhs.false33, !dbg !5570

lor.lhs.false33:                                  ; preds = %if.end30
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5571
  %bf.load35 = load i64, i64* %8, align 8, !dbg !5571
  %bf.cast375 = and i64 %bf.load35, 65535, !dbg !5571
  %cmp38 = icmp eq i64 %bf.cast375, 6, !dbg !5571
  br i1 %cmp38, label %cleanup, label %lor.lhs.false39, !dbg !5571

lor.lhs.false39:                                  ; preds = %lor.lhs.false33
  %cmp44 = icmp eq i64 %bf.cast375, 7, !dbg !5571
  br i1 %cmp44, label %cleanup, label %lor.lhs.false45, !dbg !5571

lor.lhs.false45:                                  ; preds = %lor.lhs.false39
  %cmp50 = icmp eq i64 %bf.cast375, 8, !dbg !5571
  br i1 %cmp50, label %cleanup, label %if.end52, !dbg !5572

if.end52:                                         ; preds = %lor.lhs.false45
  %tobool53 = icmp eq %union.tree_node** %delta, null, !dbg !5573
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !5575

if.then54:                                        ; preds = %if.end52
  store %union.tree_node* %7, %union.tree_node** %delta, align 8, !dbg !5576
  br label %if.end55, !dbg !5577

if.end55:                                         ; preds = %if.end52, %if.then54
  %chain57 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5578
  %9 = load %union.tree_node*, %union.tree_node** %chain57, align 8, !dbg !5578
  %tobool58 = icmp eq %union.tree_node* %9, null, !dbg !5578
  %. = zext i1 %tobool58 to i8, !dbg !5548
  br label %cleanup, !dbg !5548

cleanup:                                          ; preds = %if.end30, %lor.lhs.false16, %if.end, %entry, %if.end55, %lor.lhs.false33, %lor.lhs.false39, %lor.lhs.false45, %lor.lhs.false8
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %lor.lhs.false16 ], [ 0, %lor.lhs.false8 ], [ 0, %if.end ], [ 0, %lor.lhs.false45 ], [ 0, %lor.lhs.false39 ], [ 0, %lor.lhs.false33 ], [ 0, %if.end30 ], [ %., %if.end55 ], !dbg !5548
  ret i8 %retval.0, !dbg !5580
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_cst_member_ptr(%union.gimple_statement_d* %call, %union.tree_node* %arg, %union.tree_node* %method_field, %union.tree_node* %delta_field, %struct.ipa_jump_func* %jfunc) unnamed_addr #5 !dbg !5581 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5585, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !5586, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %method_field, metadata !5587, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %delta_field, metadata !5588, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jfunc, metadata !5589, metadata !DIExpression()), !dbg !5600
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5601
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5601
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5591, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5592, metadata !DIExpression()), !dbg !5600
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5602
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5602
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %call) #6, !dbg !5602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5602
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5602
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5590, metadata !DIExpression(DW_OP_deref)), !dbg !5600
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5603
  br label %for.cond, !dbg !5604

for.cond:                                         ; preds = %for.inc, %entry
  %method.0 = phi %union.tree_node* [ null, %entry ], [ %method.2, %for.inc ], !dbg !5605
  %delta.0 = phi %union.tree_node* [ null, %entry ], [ %delta.2, %for.inc ], !dbg !5606
  call void @llvm.dbg.value(metadata %union.tree_node* %delta.0, metadata !5592, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %method.0, metadata !5591, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5590, metadata !DIExpression(DW_OP_deref)), !dbg !5600
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5607
  %tobool = icmp eq i8 %call1, 0, !dbg !5608
  br i1 %tobool, label %for.body, label %cleanup69, !dbg !5609

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5590, metadata !DIExpression(DW_OP_deref)), !dbg !5600
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5610
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5593, metadata !DIExpression()), !dbg !5611
  %call3 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %call2) #6, !dbg !5612
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5612
  br i1 %tobool4, label %cleanup, label %if.end, !dbg !5614

if.end:                                           ; preds = %for.body
  %call5 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call2) #8, !dbg !5615
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5597, metadata !DIExpression()), !dbg !5611
  %call6 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call2) #8, !dbg !5616
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5598, metadata !DIExpression()), !dbg !5611
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5617
  %bf.load = load i64, i64* %2, align 8, !dbg !5617
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5619
  %cmp = icmp eq i64 %bf.cast2, 41, !dbg !5619
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !5620

lor.lhs.false:                                    ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5621
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5621
  %cmp7 = icmp eq %union.tree_node* %3, %arg, !dbg !5622
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !5623

if.end9:                                          ; preds = %lor.lhs.false
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5624
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !5624
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5599, metadata !DIExpression()), !dbg !5611
  %tobool13 = icmp eq %union.tree_node* %method.0, null, !dbg !5625
  %cmp14 = icmp eq %union.tree_node* %4, %method_field, !dbg !5627
  %or.cond = and i1 %tobool13, %cmp14, !dbg !5628
  br i1 %or.cond, label %if.then15, label %if.end48, !dbg !5628

if.then15:                                        ; preds = %if.end9
  %call16 = call fastcc %union.tree_node* @get_ssa_def_if_simple_copy(%union.tree_node* %call6) #8, !dbg !5629
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5598, metadata !DIExpression()), !dbg !5611
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5631
  %bf.load18 = load i64, i64* %5, align 8, !dbg !5631
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !5633
  %cmp21 = icmp eq i64 %bf.cast204, 121, !dbg !5633
  br i1 %cmp21, label %land.lhs.true22, label %cleanup, !dbg !5634

land.lhs.true22:                                  ; preds = %if.then15
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5635
  %6 = bitcast %union.tree_node** %operands24 to i64**, !dbg !5635
  %7 = load i64*, i64** %6, align 8, !dbg !5635
  %bf.load27 = load i64, i64* %7, align 8, !dbg !5635
  %bf.cast295 = and i64 %bf.load27, 65535, !dbg !5636
  %cmp30 = icmp eq i64 %bf.cast295, 29, !dbg !5636
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !5637
  br i1 %cmp30, label %land.lhs.true31, label %cleanup, !dbg !5637

land.lhs.true31:                                  ; preds = %land.lhs.true22
  %type = getelementptr inbounds i64, i64* %7, i64 2, !dbg !5638
  %9 = bitcast i64* %type to i64**, !dbg !5638
  %10 = load i64*, i64** %9, align 8, !dbg !5638
  %bf.load36 = load i64, i64* %10, align 8, !dbg !5638
  %bf.cast386 = and i64 %bf.load36, 65535, !dbg !5639
  %cmp39 = icmp eq i64 %bf.cast386, 21, !dbg !5639
  br i1 %cmp39, label %if.then40, label %cleanup, !dbg !5640

if.then40:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5591, metadata !DIExpression()), !dbg !5600
  %tobool44 = icmp eq %union.tree_node* %delta.0, null, !dbg !5641
  br i1 %tobool44, label %if.end48, label %if.then45, !dbg !5644

if.then45:                                        ; preds = %if.then40
  call fastcc void @fill_member_ptr_cst_jump_function(%struct.ipa_jump_func* %jfunc, %union.tree_node* %call16, %union.tree_node* nonnull %delta.0) #8, !dbg !5645
  br label %cleanup, !dbg !5647

if.end48:                                         ; preds = %if.then40, %if.end9
  %method.1 = phi %union.tree_node* [ %method.0, %if.end9 ], [ %8, %if.then40 ], !dbg !5600
  %rhs.0 = phi %union.tree_node* [ %call6, %if.end9 ], [ %call16, %if.then40 ], !dbg !5611
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !5598, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata %union.tree_node* %method.1, metadata !5591, metadata !DIExpression()), !dbg !5600
  %tobool49 = icmp eq %union.tree_node* %delta.0, null, !dbg !5648
  %cmp51 = icmp eq %union.tree_node* %4, %delta_field, !dbg !5650
  %or.cond1 = and i1 %tobool49, %cmp51, !dbg !5651
  br i1 %or.cond1, label %if.then52, label %cleanup, !dbg !5651

if.then52:                                        ; preds = %if.end48
  %call53 = call fastcc %union.tree_node* @get_ssa_def_if_simple_copy(%union.tree_node* %rhs.0) #8, !dbg !5652
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !5598, metadata !DIExpression()), !dbg !5611
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5654
  %bf.load55 = load i64, i64* %11, align 8, !dbg !5654
  %bf.cast573 = and i64 %bf.load55, 65535, !dbg !5656
  %cmp58 = icmp eq i64 %bf.cast573, 23, !dbg !5656
  br i1 %cmp58, label %if.then59, label %cleanup, !dbg !5657

if.then59:                                        ; preds = %if.then52
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !5592, metadata !DIExpression()), !dbg !5600
  %tobool60 = icmp eq %union.tree_node* %method.1, null, !dbg !5658
  br i1 %tobool60, label %cleanup, label %if.then61, !dbg !5661

if.then61:                                        ; preds = %if.then59
  call fastcc void @fill_member_ptr_cst_jump_function(%struct.ipa_jump_func* %jfunc, %union.tree_node* %call53, %union.tree_node* %call53) #8, !dbg !5662
  br label %cleanup, !dbg !5664

cleanup:                                          ; preds = %if.then59, %lor.lhs.false, %if.end, %for.body, %if.end48, %if.then52, %if.then15, %land.lhs.true22, %land.lhs.true31, %if.then61, %if.then45
  %method.2 = phi %union.tree_node* [ %method.1, %if.then61 ], [ %8, %if.then45 ], [ %method.0, %for.body ], [ %method.0, %lor.lhs.false ], [ %method.0, %if.end ], [ null, %land.lhs.true31 ], [ null, %land.lhs.true22 ], [ null, %if.then15 ], [ %method.1, %if.then52 ], [ null, %if.then59 ], [ %method.1, %if.end48 ], !dbg !5600
  %delta.2 = phi %union.tree_node* [ %call53, %if.then61 ], [ %delta.0, %if.then45 ], [ %delta.0, %for.body ], [ %delta.0, %lor.lhs.false ], [ %delta.0, %if.end ], [ %delta.0, %land.lhs.true31 ], [ %delta.0, %land.lhs.true22 ], [ %delta.0, %if.then15 ], [ null, %if.then52 ], [ %call53, %if.then59 ], [ %delta.0, %if.end48 ], !dbg !5600
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then61 ], [ 1, %if.then45 ], [ 1, %for.body ], [ 4, %lor.lhs.false ], [ 4, %if.end ], [ 1, %land.lhs.true31 ], [ 1, %land.lhs.true22 ], [ 1, %if.then15 ], [ 1, %if.then52 ], [ 0, %if.then59 ], [ 0, %if.end48 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %delta.2, metadata !5592, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %method.2, metadata !5591, metadata !DIExpression()), !dbg !5600
  switch i32 %cleanup.dest.slot.0, label %cleanup69 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5590, metadata !DIExpression(DW_OP_deref)), !dbg !5600
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5665
  br label %for.cond, !dbg !5666, !llvm.loop !5667

cleanup69:                                        ; preds = %for.cond, %cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5669
  ret void, !dbg !5669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_prev(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5670 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5672, metadata !DIExpression()), !dbg !5673
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5674
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5674
  %prev = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 1, !dbg !5675
  %1 = bitcast %struct.gimple_seq_node_d** %prev to i64*, !dbg !5675
  %2 = load i64, i64* %1, align 8, !dbg !5675
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5676
  store i64 %2, i64* %3, align 8, !dbg !5676
  ret void, !dbg !5677
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5678 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5680, metadata !DIExpression()), !dbg !5681
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !5682
  ret %union.tree_node* %call, !dbg !5683
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_ssa_def_if_simple_copy(%union.tree_node* %rhs) unnamed_addr #0 !dbg !5684 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !5688, metadata !DIExpression()), !dbg !5691
  br label %while.cond, !dbg !5692

while.cond:                                       ; preds = %cleanup, %entry
  %rhs.addr.0 = phi %union.tree_node* [ %rhs, %entry ], [ %rhs.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0, metadata !5688, metadata !DIExpression()), !dbg !5691
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5693
  %bf.load = load i64, i64* %0, align 8, !dbg !5693
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5694
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5694
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !5695

land.rhs:                                         ; preds = %while.cond
  %bf.cast42 = and i64 %bf.load, 4294967296, !dbg !5696
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !5696
  br i1 %tobool, label %while.body, label %while.end, !dbg !5692

while.body:                                       ; preds = %land.rhs
  %def_stmt5 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5697
  %1 = bitcast %union.tree_node** %def_stmt5 to %union.gimple_statement_d**, !dbg !5697
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5697
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5689, metadata !DIExpression()), !dbg !5698
  %call = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %2) #6, !dbg !5699
  %tobool6 = icmp eq i8 %call, 0, !dbg !5699
  br i1 %tobool6, label %cleanup, label %if.then, !dbg !5701

if.then:                                          ; preds = %while.body
  %call7 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #8, !dbg !5702
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5688, metadata !DIExpression()), !dbg !5691
  br label %cleanup, !dbg !5703

cleanup:                                          ; preds = %while.body, %if.then
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then ], [ false, %while.body ]
  %rhs.addr.1 = phi %union.tree_node* [ %call7, %if.then ], [ %rhs.addr.0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.1, metadata !5688, metadata !DIExpression()), !dbg !5691
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !5704

while.end:                                        ; preds = %while.cond, %cleanup, %land.rhs
  %rhs.addr.2 = phi %union.tree_node* [ %rhs.addr.1, %cleanup ], [ %rhs.addr.0, %land.rhs ], [ %rhs.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.2, metadata !5688, metadata !DIExpression()), !dbg !5691
  ret %union.tree_node* %rhs.addr.2, !dbg !5705
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_member_ptr_cst_jump_function(%struct.ipa_jump_func* %jfunc, %union.tree_node* %pfn, %union.tree_node* %delta) unnamed_addr #5 !dbg !5706 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jfunc, metadata !5710, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %union.tree_node* %pfn, metadata !5711, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata %union.tree_node* %delta, metadata !5712, metadata !DIExpression()), !dbg !5713
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 0, !dbg !5714
  store i32 2, i32* %type, align 8, !dbg !5715
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, !dbg !5716
  %pfn1 = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !5717
  store %union.tree_node* %pfn, %union.tree_node** %pfn1, align 8, !dbg !5718
  %0 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 1, !dbg !5719
  store %union.tree_node* %delta, %union.tree_node** %0, align 8, !dbg !5720
  ret void, !dbg !5721
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_analyze_call_uses(%struct.ipa_node_params* %info, %union.gimple_statement_d* %call) unnamed_addr #5 !dbg !5722 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5724, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5725, metadata !DIExpression()), !dbg !5741
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call) #8, !dbg !5742
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5726, metadata !DIExpression()), !dbg !5741
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5743
  %bf.load = load i64, i64* %0, align 8, !dbg !5743
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5745
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5745
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5746

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !5728, metadata !DIExpression()), !dbg !5741
  %bf.cast62 = and i64 %bf.load, 4294967296, !dbg !5747
  %tobool = icmp eq i64 %bf.cast62, 0, !dbg !5747
  br i1 %tobool, label %if.end12, label %if.then7, !dbg !5749

if.then7:                                         ; preds = %if.end
  %var2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5750
  %1 = bitcast i32* %var2 to %union.tree_node**, !dbg !5750
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5750
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5728, metadata !DIExpression()), !dbg !5741
  %call8 = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %2) #8, !dbg !5751
  call void @llvm.dbg.value(metadata i32 %call8, metadata !5737, metadata !DIExpression()), !dbg !5741
  %cmp9 = icmp sgt i32 %call8, -1, !dbg !5753
  br i1 %cmp9, label %if.then10, label %cleanup, !dbg !5755

if.then10:                                        ; preds = %if.then7
  tail call fastcc void @ipa_note_param_call(%struct.ipa_node_params* %info, i32 %call8, %union.gimple_statement_d* %call) #8, !dbg !5756
  br label %cleanup, !dbg !5756

if.end12:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5757
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5757
  %4 = load i64*, i64** %3, align 8, !dbg !5757
  %bf.load14 = load i64, i64* %4, align 8, !dbg !5757
  %bf.cast163 = and i64 %bf.load14, 65535, !dbg !5757
  %cmp17 = icmp eq i64 %bf.cast163, 10, !dbg !5757
  br i1 %cmp17, label %lor.lhs.false25, label %lor.lhs.false, !dbg !5757

lor.lhs.false:                                    ; preds = %if.end12
  %cmp24 = icmp eq i64 %bf.cast163, 12, !dbg !5757
  br i1 %cmp24, label %lor.lhs.false25, label %cleanup, !dbg !5759

lor.lhs.false25:                                  ; preds = %lor.lhs.false, %if.end12
  %type29 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !5760
  %5 = bitcast i64* %type29 to i64**, !dbg !5760
  %6 = load i64*, i64** %5, align 8, !dbg !5760
  %bf.load31 = load i64, i64* %6, align 8, !dbg !5760
  %bf.cast335 = and i64 %bf.load31, 65535, !dbg !5761
  %cmp34 = icmp eq i64 %bf.cast335, 21, !dbg !5761
  br i1 %cmp34, label %if.end36, label %cleanup, !dbg !5762

if.end36:                                         ; preds = %lor.lhs.false25
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5763
  %7 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5763
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !5763
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !5727, metadata !DIExpression()), !dbg !5741
  %call38 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %8) #8, !dbg !5764
  %cmp39 = icmp eq i32 %call38, 16, !dbg !5766
  br i1 %cmp39, label %if.end41, label %cleanup, !dbg !5767

if.end41:                                         ; preds = %if.end36
  %call42 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %8) #8, !dbg !5768
  %cmp43 = icmp eq i32 %call42, 2, !dbg !5770
  br i1 %cmp43, label %if.end45, label %cleanup, !dbg !5771

if.end45:                                         ; preds = %if.end41
  %call46 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %8, i32 0) #8, !dbg !5772
  %call47 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call46) #8, !dbg !5772
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !5729, metadata !DIExpression()), !dbg !5741
  %call48 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %8, i32 1) #8, !dbg !5773
  %call49 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call48) #8, !dbg !5773
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !5730, metadata !DIExpression()), !dbg !5741
  %call50 = tail call fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %call47) #8, !dbg !5774
  %tobool51 = icmp eq i8 %call50, 0, !dbg !5774
  br i1 %tobool51, label %cleanup, label %lor.lhs.false52, !dbg !5776

lor.lhs.false52:                                  ; preds = %if.end45
  %call53 = tail call fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %call49) #8, !dbg !5777
  %tobool54 = icmp eq i8 %call53, 0, !dbg !5777
  br i1 %tobool54, label %cleanup, label %if.end56, !dbg !5778

if.end56:                                         ; preds = %lor.lhs.false52
  %def_stmt58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5779
  %9 = bitcast %union.tree_node** %def_stmt58 to %union.gimple_statement_d**, !dbg !5779
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %9, align 8, !dbg !5779
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %10, metadata !5731, metadata !DIExpression()), !dbg !5741
  %def_stmt60 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5780
  %11 = bitcast %union.tree_node** %def_stmt60 to %union.gimple_statement_d**, !dbg !5780
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %11, align 8, !dbg !5780
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !5732, metadata !DIExpression()), !dbg !5741
  %call61 = tail call fastcc %union.tree_node* @ipa_get_stmt_member_ptr_load_param(%union.gimple_statement_d* %10, i8 zeroext 0) #8, !dbg !5781
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !5733, metadata !DIExpression()), !dbg !5741
  %tobool62 = icmp eq %union.tree_node* %call61, null, !dbg !5783
  %call64 = tail call fastcc %union.tree_node* @ipa_get_stmt_member_ptr_load_param(%union.gimple_statement_d* %12, i8 zeroext 0) #8, !dbg !5784
  %tobool65 = icmp ne %union.tree_node* %call64, null, !dbg !5784
  br i1 %tobool62, label %if.else, label %if.then63, !dbg !5785

if.then63:                                        ; preds = %if.end56
  br i1 %tobool65, label %cleanup, label %if.end67, !dbg !5786

if.end67:                                         ; preds = %if.then63
  %call68 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %10) #8, !dbg !5788
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call68, metadata !5738, metadata !DIExpression()), !dbg !5741
  %call69 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %12) #8, !dbg !5789
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call69, metadata !5739, metadata !DIExpression()), !dbg !5741
  br label %if.end77, !dbg !5790

if.else:                                          ; preds = %if.end56
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !5733, metadata !DIExpression()), !dbg !5741
  br i1 %tobool65, label %if.then72, label %cleanup, !dbg !5791

if.then72:                                        ; preds = %if.else
  %call73 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %12) #8, !dbg !5792
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call73, metadata !5738, metadata !DIExpression()), !dbg !5741
  %call74 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %10) #8, !dbg !5795
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call74, metadata !5739, metadata !DIExpression()), !dbg !5741
  br label %if.end77

if.end77:                                         ; preds = %if.then72, %if.end67
  %rec.0 = phi %union.tree_node* [ %call61, %if.end67 ], [ %call64, %if.then72 ], !dbg !5784
  %bb.0 = phi %struct.basic_block_def* [ %call68, %if.end67 ], [ %call73, %if.then72 ], !dbg !5784
  %virt_bb.0 = phi %struct.basic_block_def* [ %call69, %if.end67 ], [ %call74, %if.then72 ], !dbg !5784
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %virt_bb.0, metadata !5739, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5738, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.0, metadata !5733, metadata !DIExpression()), !dbg !5741
  %call78 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %8) #8, !dbg !5796
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call78, metadata !5740, metadata !DIExpression()), !dbg !5741
  %call79 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %virt_bb.0) #8, !dbg !5797
  %tobool80 = icmp eq i8 %call79, 0, !dbg !5797
  br i1 %tobool80, label %cleanup, label %lor.lhs.false81, !dbg !5799

lor.lhs.false81:                                  ; preds = %if.end77
  %call82 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %virt_bb.0) #8, !dbg !5800
  %tobool83 = icmp eq i8 %call82, 0, !dbg !5800
  br i1 %tobool83, label %cleanup, label %lor.lhs.false84, !dbg !5801

lor.lhs.false84:                                  ; preds = %lor.lhs.false81
  %call85 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %virt_bb.0) #8, !dbg !5802
  %cmp86 = icmp eq %struct.basic_block_def* %call85, %bb.0, !dbg !5803
  br i1 %cmp86, label %lor.lhs.false87, label %cleanup, !dbg !5804

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %call88 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %virt_bb.0) #8, !dbg !5805
  %cmp89 = icmp eq %struct.basic_block_def* %call88, %call78, !dbg !5806
  br i1 %cmp89, label %if.end91, label %cleanup, !dbg !5807

if.end91:                                         ; preds = %lor.lhs.false87
  %call92 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #6, !dbg !5808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call92, metadata !5736, metadata !DIExpression()), !dbg !5741
  %call93 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call92) #8, !dbg !5809
  %cmp94 = icmp eq i32 %call93, 1, !dbg !5811
  br i1 %cmp94, label %if.end96, label %cleanup, !dbg !5812

if.end96:                                         ; preds = %if.end91
  %call97 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call92) #8, !dbg !5813
  %cmp98 = icmp eq i32 %call97, 102, !dbg !5815
  br i1 %cmp98, label %lor.lhs.false99, label %cleanup, !dbg !5816

lor.lhs.false99:                                  ; preds = %if.end96
  %call100 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call92) #8, !dbg !5817
  %call101 = tail call i32 @integer_zerop(%union.tree_node* %call100) #6, !dbg !5818
  %tobool102 = icmp eq i32 %call101, 0, !dbg !5818
  br i1 %tobool102, label %cleanup, label %if.end104, !dbg !5819

if.end104:                                        ; preds = %lor.lhs.false99
  %call105 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call92) #8, !dbg !5820
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !5735, metadata !DIExpression()), !dbg !5741
  %call106 = tail call fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %call105) #8, !dbg !5821
  %tobool107 = icmp eq i8 %call106, 0, !dbg !5821
  br i1 %tobool107, label %cleanup, label %if.end109, !dbg !5823

if.end109:                                        ; preds = %if.end104
  %def_stmt111 = getelementptr inbounds %union.tree_node, %union.tree_node* %call105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5824
  %13 = bitcast %union.tree_node** %def_stmt111 to %union.gimple_statement_d**, !dbg !5824
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %13, align 8, !dbg !5824
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %14, metadata !5727, metadata !DIExpression()), !dbg !5741
  %call112 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %14) #8, !dbg !5825
  %tobool113 = icmp eq i8 %call112, 0, !dbg !5825
  br i1 %tobool113, label %cleanup, label %lor.lhs.false114, !dbg !5827

lor.lhs.false114:                                 ; preds = %if.end109
  %call115 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %14) #8, !dbg !5828
  %cmp116 = icmp eq i32 %call115, 89, !dbg !5829
  br i1 %cmp116, label %lor.lhs.false117, label %cleanup, !dbg !5830

lor.lhs.false117:                                 ; preds = %lor.lhs.false114
  %call118 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %14) #8, !dbg !5831
  %call119 = tail call i32 @integer_onep(%union.tree_node* %call118) #6, !dbg !5832
  %tobool120 = icmp eq i32 %call119, 0, !dbg !5832
  br i1 %tobool120, label %cleanup, label %if.end122, !dbg !5833

if.end122:                                        ; preds = %lor.lhs.false117
  %call123 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %14) #8, !dbg !5834
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !5735, metadata !DIExpression()), !dbg !5741
  %call124 = tail call fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %call123) #8, !dbg !5835
  %tobool125 = icmp eq i8 %call124, 0, !dbg !5835
  br i1 %tobool125, label %cleanup, label %if.end127, !dbg !5837

if.end127:                                        ; preds = %if.end122
  %def_stmt129 = getelementptr inbounds %union.tree_node, %union.tree_node* %call123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5838
  %15 = bitcast %union.tree_node** %def_stmt129 to %union.gimple_statement_d**, !dbg !5838
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %15, align 8, !dbg !5838
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %16, metadata !5727, metadata !DIExpression()), !dbg !5741
  %call130 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %16) #8, !dbg !5839
  %tobool131 = icmp eq i8 %call130, 0, !dbg !5839
  br i1 %tobool131, label %if.end147, label %land.lhs.true, !dbg !5841

land.lhs.true:                                    ; preds = %if.end127
  %call132 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %16) #8, !dbg !5842
  %cmp133 = icmp eq i32 %call132, 116, !dbg !5842
  br i1 %cmp133, label %if.then139, label %lor.lhs.false135, !dbg !5842

lor.lhs.false135:                                 ; preds = %land.lhs.true
  %call136 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %16) #8, !dbg !5842
  %cmp137 = icmp eq i32 %call136, 113, !dbg !5842
  br i1 %cmp137, label %if.then139, label %if.end147, !dbg !5843

if.then139:                                       ; preds = %lor.lhs.false135, %land.lhs.true
  %call140 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %16) #8, !dbg !5844
  call void @llvm.dbg.value(metadata %union.tree_node* %call140, metadata !5735, metadata !DIExpression()), !dbg !5741
  %call141 = tail call fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %call140) #8, !dbg !5846
  %tobool142 = icmp eq i8 %call141, 0, !dbg !5846
  br i1 %tobool142, label %cleanup, label %if.end144, !dbg !5848

if.end144:                                        ; preds = %if.then139
  %def_stmt146 = getelementptr inbounds %union.tree_node, %union.tree_node* %call140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5849
  %17 = bitcast %union.tree_node** %def_stmt146 to %union.gimple_statement_d**, !dbg !5849
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %17, align 8, !dbg !5849
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !5727, metadata !DIExpression()), !dbg !5741
  br label %if.end147, !dbg !5850

if.end147:                                        ; preds = %if.end127, %if.end144, %lor.lhs.false135
  %def.0 = phi %union.gimple_statement_d* [ %18, %if.end144 ], [ %16, %lor.lhs.false135 ], [ %16, %if.end127 ], !dbg !5741
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def.0, metadata !5727, metadata !DIExpression()), !dbg !5741
  %call148 = tail call fastcc %union.tree_node* @ipa_get_stmt_member_ptr_load_param(%union.gimple_statement_d* %def.0, i8 zeroext 0) #8, !dbg !5851
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !5734, metadata !DIExpression()), !dbg !5741
  %cmp149 = icmp eq %union.tree_node* %rec.0, %call148, !dbg !5852
  br i1 %cmp149, label %if.end152, label %cleanup, !dbg !5854

if.end152:                                        ; preds = %if.end147
  %call153 = tail call fastcc i32 @ipa_get_param_decl_index(%struct.ipa_node_params* %info, %union.tree_node* %rec.0) #8, !dbg !5855
  call void @llvm.dbg.value(metadata i32 %call153, metadata !5737, metadata !DIExpression()), !dbg !5741
  %cmp154 = icmp sgt i32 %call153, -1, !dbg !5856
  br i1 %cmp154, label %land.lhs.true156, label %cleanup, !dbg !5858

land.lhs.true156:                                 ; preds = %if.end152
  %call157 = tail call fastcc zeroext i8 @ipa_is_param_modified(%struct.ipa_node_params* %info, i32 %call153) #8, !dbg !5859
  %tobool158 = icmp eq i8 %call157, 0, !dbg !5859
  br i1 %tobool158, label %if.then159, label %cleanup, !dbg !5860

if.then159:                                       ; preds = %land.lhs.true156
  tail call fastcc void @ipa_note_param_call(%struct.ipa_node_params* %info, i32 %call153, %union.gimple_statement_d* %call) #8, !dbg !5861
  br label %cleanup, !dbg !5861

cleanup:                                          ; preds = %if.then139, %land.lhs.true156, %if.end147, %if.end122, %lor.lhs.false117, %lor.lhs.false114, %if.end109, %if.end104, %lor.lhs.false99, %if.end96, %if.end91, %lor.lhs.false87, %lor.lhs.false84, %lor.lhs.false81, %if.end77, %lor.lhs.false52, %if.end45, %if.end41, %if.end36, %lor.lhs.false25, %entry, %if.end152, %if.then159, %if.else, %if.then63, %lor.lhs.false, %if.then7, %if.then10
  ret void, !dbg !5862
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5863 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5865, metadata !DIExpression()), !dbg !5866
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !5867
  ret %union.tree_node* %call, !dbg !5868
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_note_param_call(%struct.ipa_node_params* %info, i32 %formal_id, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5869 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !5873, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.value(metadata i32 %formal_id, metadata !5874, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5875, metadata !DIExpression()), !dbg !5878
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !5879
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5877, metadata !DIExpression()), !dbg !5878
  %call1 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !5880
  call void @llvm.dbg.value(metadata i8* %call1, metadata !5876, metadata !DIExpression()), !dbg !5878
  %formal_id2 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !5881
  %0 = bitcast i8* %formal_id2 to i32*, !dbg !5881
  store i32 %formal_id, i32* %0, align 4, !dbg !5882
  %stmt3 = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !5883
  %1 = bitcast i8* %stmt3 to %union.gimple_statement_d**, !dbg !5883
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %1, align 8, !dbg !5884
  %call4 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #8, !dbg !5885
  %lto_stmt_uid = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !5886
  %2 = bitcast i8* %lto_stmt_uid to i32*, !dbg !5886
  store i32 %call4, i32* %2, align 8, !dbg !5887
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 8, !dbg !5888
  %3 = load i64, i64* %count, align 8, !dbg !5888
  %count5 = bitcast i8* %call1 to i64*, !dbg !5889
  store i64 %3, i64* %count5, align 8, !dbg !5890
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5891
  %call6 = tail call i32 @compute_call_stmt_bb_frequency(%union.tree_node* %4, %struct.basic_block_def* %call) #6, !dbg !5892
  %frequency = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5893
  %5 = bitcast i8* %frequency to i32*, !dbg !5893
  store i32 %call6, i32* %5, align 8, !dbg !5894
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 10, !dbg !5895
  %6 = load i32, i32* %loop_depth, align 4, !dbg !5895
  %conv = trunc i32 %6 to i16, !dbg !5896
  %loop_nest = getelementptr inbounds i8, i8* %call1, i64 36, !dbg !5897
  %7 = bitcast i8* %loop_nest to i16*, !dbg !5897
  store i16 %conv, i16* %7, align 4, !dbg !5898
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 2, !dbg !5899
  %8 = bitcast %struct.ipa_param_call_note** %param_calls to i64*, !dbg !5899
  %9 = load i64, i64* %8, align 8, !dbg !5899
  %next = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !5900
  %10 = bitcast i8* %next to i64*, !dbg !5901
  store i64 %9, i64* %10, align 8, !dbg !5901
  %11 = bitcast %struct.ipa_param_call_note** %param_calls to i8**, !dbg !5902
  store i8* %call1, i8** %11, align 8, !dbg !5902
  ret void, !dbg !5903
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5904 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5906, metadata !DIExpression()), !dbg !5907
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5908
  %0 = load i32, i32* %nargs, align 4, !dbg !5908
  ret i32 %0, !dbg !5909
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5910 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5918, metadata !DIExpression()), !dbg !5919
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5920
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5920
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5921
  ret %union.tree_node* %1, !dbg !5922
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5923 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5927, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.value(metadata i32 %i, metadata !5928, metadata !DIExpression()), !dbg !5929
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !5930
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5931
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5932
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ipa_is_ssa_with_stmt_def(%union.tree_node* %t) unnamed_addr #5 !dbg !5933 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5937, metadata !DIExpression()), !dbg !5938
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5939
  %bf.load = load i64, i64* %0, align 8, !dbg !5939
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5941
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5941
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5942

land.lhs.true:                                    ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 4294967296, !dbg !5943
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !5943
  br i1 %tobool, label %return, label %if.else, !dbg !5944

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %return, !dbg !5945

return:                                           ; preds = %land.lhs.true, %if.else
  %retval.0 = phi i8 [ 0, %if.else ], [ 1, %land.lhs.true ], !dbg !5946
  ret i8 %retval.0, !dbg !5947
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ipa_get_stmt_member_ptr_load_param(%union.gimple_statement_d* %stmt, i8 zeroext %use_delta) unnamed_addr #5 !dbg !5948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5952, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.value(metadata i8 0, metadata !5953, metadata !DIExpression()), !dbg !5955
  %call = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !5956
  %tobool = icmp eq i8 %call, 0, !dbg !5956
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5958

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5959
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5954, metadata !DIExpression()), !dbg !5955
  %call2 = tail call fastcc %union.tree_node* @ipa_get_member_ptr_load_param(%union.tree_node* %call1, i8 zeroext 0) #8, !dbg !5960
  br label %cleanup, !dbg !5961

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call2, %if.end ], [ null, %entry ], !dbg !5955
  ret %union.tree_node* %retval.0, !dbg !5962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5963 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5967, metadata !DIExpression()), !dbg !5968
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5969
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5969
  ret %struct.basic_block_def* %0, !dbg !5970
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5971 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5975, metadata !DIExpression()), !dbg !5976
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5977
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5977
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5977
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5977

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5977
  br label %cond.end, !dbg !5977

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5977
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5977
  %cmp = icmp eq i32 %call, 1, !dbg !5978
  %conv2 = zext i1 %cmp to i8, !dbg !5977
  ret i8 %conv2, !dbg !5979
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5980 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5982, metadata !DIExpression()), !dbg !5983
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5984
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5984
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5984
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5984

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5984
  br label %cond.end, !dbg !5984

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5984
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5984
  %cmp = icmp eq i32 %call, 1, !dbg !5985
  %conv2 = zext i1 %cmp to i8, !dbg !5984
  ret i8 %conv2, !dbg !5986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5987 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5991, metadata !DIExpression()), !dbg !5992
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !5993
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !5994
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5994
  ret %struct.basic_block_def* %0, !dbg !5995
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5996 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5998, metadata !DIExpression()), !dbg !5999
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !6000
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6001
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6001
  ret %struct.basic_block_def* %0, !dbg !6002
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6003 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6005, metadata !DIExpression()), !dbg !6006
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6007
  %bf.load = load i32, i32* %0, align 8, !dbg !6007
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6007
  ret i32 %bf.lshr, !dbg !6008
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6009 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6011, metadata !DIExpression()), !dbg !6012
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6013
  ret %union.tree_node* %call, !dbg !6014
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6015 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6017, metadata !DIExpression()), !dbg !6018
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !6019
  ret %union.tree_node* %call, !dbg !6020
}

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6021 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6023, metadata !DIExpression()), !dbg !6024
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !6025
  %0 = load i32, i32* %uid, align 4, !dbg !6025
  ret i32 %0, !dbg !6026
}

declare dso_local i32 @compute_call_stmt_bb_frequency(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6027 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6032, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i32 %index, metadata !6033, metadata !DIExpression()), !dbg !6034
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6035
  %0 = load i32, i32* %capacity, align 8, !dbg !6035
  %cmp = icmp ult i32 %0, %index, !dbg !6035
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6035

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6035
  br label %cond.end, !dbg !6035

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !6036
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !6036
  ret %struct.phi_arg_d* %arrayidx, !dbg !6037
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ipa_get_member_ptr_load_param(%union.tree_node* %rhs, i8 zeroext %use_delta) unnamed_addr #5 !dbg !6038 {
entry:
  %ptr_field = alloca %union.tree_node*, align 8
  %delta_field = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6042, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata i8 0, metadata !6043, metadata !DIExpression()), !dbg !6048
  %0 = bitcast %union.tree_node** %ptr_field to i8*, !dbg !6049
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6049
  %1 = bitcast %union.tree_node** %delta_field to i8*, !dbg !6050
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6050
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6051
  %bf.load = load i64, i64* %2, align 8, !dbg !6051
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6053
  %cmp = icmp eq i64 %bf.cast1, 41, !dbg !6053
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6054

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6055
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6055
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6044, metadata !DIExpression()), !dbg !6048
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6056
  %bf.load2 = load i64, i64* %4, align 8, !dbg !6056
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !6058
  %cmp5 = icmp eq i64 %bf.cast42, 34, !dbg !6058
  br i1 %cmp5, label %lor.lhs.false, label %cleanup, !dbg !6059

lor.lhs.false:                                    ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6060
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr_field, metadata !6046, metadata !DIExpression(DW_OP_deref)), !dbg !6048
  call void @llvm.dbg.value(metadata %union.tree_node** %delta_field, metadata !6047, metadata !DIExpression(DW_OP_deref)), !dbg !6048
  %call = call fastcc zeroext i8 @type_like_member_ptr_p(%union.tree_node* %5, %union.tree_node** nonnull %ptr_field, %union.tree_node** nonnull %delta_field) #8, !dbg !6061
  %tobool = icmp eq i8 %call, 0, !dbg !6061
  br i1 %tobool, label %cleanup, label %if.end7, !dbg !6062

if.end7:                                          ; preds = %lor.lhs.false
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6063
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !6063
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6045, metadata !DIExpression()), !dbg !6048
  %7 = load %union.tree_node*, %union.tree_node** %ptr_field, align 8, !dbg !6064
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6046, metadata !DIExpression()), !dbg !6048
  %cmp14 = icmp eq %union.tree_node* %6, %7, !dbg !6066
  br i1 %cmp14, label %cleanup, label %if.else, !dbg !6067

if.else:                                          ; preds = %if.end7
  br label %cleanup, !dbg !6068

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %entry, %if.end7, %if.else
  %retval.0 = phi %union.tree_node* [ null, %if.else ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.end ], [ %3, %if.end7 ], !dbg !6048
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6069
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6069
  ret %union.tree_node* %retval.0, !dbg !6069
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6070 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6076, metadata !DIExpression()), !dbg !6077
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6078
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6078

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6078
  %0 = load i32, i32* %num, align 8, !dbg !6078
  br label %cond.end, !dbg !6078

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6078
  ret i32 %cond, !dbg !6078
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6079 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6083, metadata !DIExpression()), !dbg !6084
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !6085
  %tobool = icmp eq i8 %call, 0, !dbg !6085
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6085

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6085
  br label %cond.end, !dbg !6085

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6086
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6086
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6086
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6086

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6086
  br label %cond.end5, !dbg !6086

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6086
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !6086
  ret %struct.edge_def* %call7, !dbg !6087
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6088 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6092, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 0, metadata !6093, metadata !DIExpression()), !dbg !6094
  br label %land.end, !dbg !6095

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 0, !dbg !6095
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6095
  ret %struct.edge_def* %0, !dbg !6095
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6096 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6098, metadata !DIExpression()), !dbg !6099
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !6100
  %tobool = icmp eq i8 %call, 0, !dbg !6100
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6100

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6100
  br label %cond.end, !dbg !6100

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6101
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6101
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6101
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6101

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6101
  br label %cond.end5, !dbg !6101

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6101
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !6101
  ret %struct.edge_def* %call7, !dbg !6102
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @update_call_notes_after_inlining(%struct.cgraph_edge* %cs, %struct.cgraph_node* %node, %struct.VEC_cgraph_edge_p_heap** %new_edges) unnamed_addr #5 !dbg !6103 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !6105, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !6106, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_heap** %new_edges, metadata !6107, metadata !DIExpression()), !dbg !6122
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6123
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !6123
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !6123
  %1 = load i32, i32* %uid, align 8, !dbg !6123
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !6123
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !6108, metadata !DIExpression()), !dbg !6122
  %2 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !6124
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %2, i64 0, i32 0, !dbg !6124
  %uid7 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 12, !dbg !6124
  %3 = load i32, i32* %uid7, align 4, !dbg !6124
  %call8 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base3, i32 %3) #8, !dbg !6124
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call8, metadata !6109, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i8 0, metadata !6111, metadata !DIExpression()), !dbg !6122
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 2, !dbg !6125
  %tobool64 = icmp eq %struct.VEC_cgraph_edge_p_heap** %new_edges, null, !dbg !6126
  br label %for.cond, !dbg !6128

for.cond:                                         ; preds = %cleanup89, %entry
  %top.0 = phi %struct.ipa_edge_args* [ %call8, %entry ], [ %top.4, %cleanup89 ], !dbg !6129
  %nt.0.in = phi %struct.ipa_param_call_note** [ %param_calls, %entry ], [ %next, %cleanup89 ]
  %res.0 = phi i8 [ 0, %entry ], [ %res.4, %cleanup89 ], !dbg !6130
  %nt.0 = load %struct.ipa_param_call_note*, %struct.ipa_param_call_note** %nt.0.in, align 8, !dbg !6131
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %nt.0, metadata !6110, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %top.0, metadata !6109, metadata !DIExpression()), !dbg !6122
  %tobool9 = icmp eq %struct.ipa_param_call_note* %nt.0, null, !dbg !6132
  br i1 %tobool9, label %for.end, label %for.body, !dbg !6132

for.body:                                         ; preds = %for.cond
  %processed = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 7, !dbg !6133
  %4 = load i8, i8* %processed, align 2, !dbg !6133
  %tobool10 = icmp eq i8 %4, 0, !dbg !6135
  br i1 %tobool10, label %if.end, label %cleanup89, !dbg !6136

if.end:                                           ; preds = %for.body
  %formal_id = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 4, !dbg !6137
  %5 = load i32, i32* %formal_id, align 4, !dbg !6137
  %call11 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %top.0) #8, !dbg !6139
  %cmp = icmp slt i32 %5, %call11, !dbg !6140
  br i1 %cmp, label %if.end14, label %if.then12, !dbg !6141

if.then12:                                        ; preds = %if.end
  store i8 1, i8* %processed, align 2, !dbg !6142
  br label %cleanup89, !dbg !6144

if.end14:                                         ; preds = %if.end
  %6 = load i32, i32* %formal_id, align 4, !dbg !6145
  %call16 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %top.0, i32 %6) #8, !dbg !6146
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %call16, metadata !6112, metadata !DIExpression()), !dbg !6147
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call16, i64 0, i32 0, !dbg !6148
  %7 = load i32, i32* %type, align 8, !dbg !6148
  %cmp17 = icmp eq i32 %7, 3, !dbg !6149
  br i1 %cmp17, label %land.lhs.true, label %if.else, !dbg !6150

land.lhs.true:                                    ; preds = %if.end14
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call16, i64 0, i32 1, !dbg !6151
  %pass_through = bitcast %union.jump_func_value* %value to %struct.ipa_pass_through_data*, !dbg !6152
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through, i64 0, i32 2, !dbg !6153
  %8 = load i32, i32* %operation, align 4, !dbg !6153
  %cmp18 = icmp eq i32 %8, 116, !dbg !6154
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !6155

if.then19:                                        ; preds = %land.lhs.true
  %formal_id22 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call16, i64 0, i32 1, i32 0, i32 1, !dbg !6156
  %9 = bitcast %union.tree_node** %formal_id22 to i32*, !dbg !6156
  %10 = load i32, i32* %9, align 8, !dbg !6156
  store i32 %10, i32* %formal_id, align 4, !dbg !6157
  br label %if.end88, !dbg !6158

if.else:                                          ; preds = %land.lhs.true, %if.end14
  %cmp25 = icmp eq i32 %7, 1, !dbg !6159
  br i1 %cmp25, label %if.then28, label %lor.lhs.false, !dbg !6160

lor.lhs.false:                                    ; preds = %if.else
  %cmp27 = icmp eq i32 %7, 2, !dbg !6161
  br i1 %cmp27, label %if.then28, label %if.else78, !dbg !6162

if.then28:                                        ; preds = %lor.lhs.false, %if.else
  store i8 1, i8* %processed, align 2, !dbg !6163
  %value33 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call16, i64 0, i32 1, !dbg !6164
  br label %if.then32, !dbg !6166

if.then32:                                        ; preds = %if.then28
  br label %if.end36, !dbg !6167

if.else34:                                        ; No predecessors!
  unreachable

if.end36:                                         ; preds = %if.then32
  %decl.0.in = bitcast %union.jump_func_value* %value33 to %union.tree_node**, !dbg !6164
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !6164
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !6121, metadata !DIExpression()), !dbg !6168
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6169
  %bf.load = load i64, i64* %11, align 8, !dbg !6169
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6171
  %cmp38 = icmp eq i64 %bf.cast2, 121, !dbg !6171
  br i1 %cmp38, label %if.end40, label %cleanup, !dbg !6172

if.end40:                                         ; preds = %if.end36
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6173
  %12 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6173
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6121, metadata !DIExpression()), !dbg !6168
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6174
  %bf.load42 = load i64, i64* %13, align 8, !dbg !6174
  %bf.cast443 = and i64 %bf.load42, 65535, !dbg !6176
  %cmp45 = icmp eq i64 %bf.cast443, 29, !dbg !6176
  br i1 %cmp45, label %if.end47, label %cleanup, !dbg !6177

if.end47:                                         ; preds = %if.end40
  %call48 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %12) #6, !dbg !6178
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call48, metadata !6116, metadata !DIExpression()), !dbg !6168
  %tobool49 = icmp eq %struct.cgraph_node* %call48, null, !dbg !6179
  br i1 %tobool49, label %cleanup, label %lor.lhs.false50, !dbg !6181

lor.lhs.false50:                                  ; preds = %if.end47
  %inlinable = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call48, i64 0, i32 18, i32 2, !dbg !6182
  %bf.load51 = load i8, i8* %inlinable, align 8, !dbg !6182
  %bf.clear52 = and i8 %bf.load51, 8, !dbg !6182
  %tobool54 = icmp eq i8 %bf.clear52, 0, !dbg !6183
  br i1 %tobool54, label %cleanup, label %if.end56, !dbg !6184

if.end56:                                         ; preds = %lor.lhs.false50
  call void @llvm.dbg.value(metadata i8 1, metadata !6111, metadata !DIExpression()), !dbg !6122
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6185
  %tobool57 = icmp eq %struct._IO_FILE* %14, null, !dbg !6185
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !6187

if.then58:                                        ; preds = %if.end56
  tail call fastcc void @print_edge_addition_message(%struct._IO_FILE* nonnull %14, %struct.ipa_param_call_note* nonnull %nt.0, %struct.ipa_jump_func* %call16, %struct.cgraph_node* %node) #8, !dbg !6188
  br label %if.end59, !dbg !6188

if.end59:                                         ; preds = %if.end56, %if.then58
  %stmt = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 2, !dbg !6189
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6189
  %count = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 0, !dbg !6190
  %16 = load i64, i64* %count, align 8, !dbg !6190
  %frequency = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 5, !dbg !6191
  %17 = load i32, i32* %frequency, align 8, !dbg !6191
  %loop_nest = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 6, !dbg !6192
  %18 = load i16, i16* %loop_nest, align 4, !dbg !6192
  %conv = zext i16 %18 to i32, !dbg !6193
  %call60 = tail call %struct.cgraph_edge* @cgraph_create_edge(%struct.cgraph_node* %node, %struct.cgraph_node* nonnull %call48, %union.gimple_statement_d* %15, i64 %16, i32 %17, i32 %conv) #6, !dbg !6194
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %call60, metadata !6120, metadata !DIExpression()), !dbg !6168
  %lto_stmt_uid = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 3, !dbg !6195
  %19 = load i32, i32* %lto_stmt_uid, align 8, !dbg !6195
  %lto_stmt_uid61 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %call60, i64 0, i32 10, !dbg !6196
  store i32 %19, i32* %lto_stmt_uid61, align 4, !dbg !6197
  %indirect_call = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %call60, i64 0, i32 14, !dbg !6198
  %bf.load62 = load i8, i8* %indirect_call, align 2, !dbg !6199
  %bf.set = or i8 %bf.load62, 1, !dbg !6199
  store i8 %bf.set, i8* %indirect_call, align 2, !dbg !6199
  tail call fastcc void @ipa_check_create_edge_args() #8, !dbg !6200
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !6201

if.then65:                                        ; preds = %if.end59
  %call66 = tail call fastcc %struct.cgraph_edge** @VEC_cgraph_edge_p_heap_safe_push(%struct.VEC_cgraph_edge_p_heap** nonnull %new_edges, %struct.cgraph_edge* %call60) #8, !dbg !6202
  br label %if.end67, !dbg !6202

if.end67:                                         ; preds = %if.end59, %if.then65
  %20 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !6203
  %base70 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %20, i64 0, i32 0, !dbg !6203
  %21 = load i32, i32* %uid7, align 4, !dbg !6203
  %call75 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base70, i32 %21) #8, !dbg !6203
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call75, metadata !6109, metadata !DIExpression()), !dbg !6122
  br label %cleanup, !dbg !6204

cleanup:                                          ; preds = %lor.lhs.false50, %if.end47, %if.end40, %if.end36, %if.end67
  %top.1 = phi %struct.ipa_edge_args* [ %call75, %if.end67 ], [ %top.0, %if.end36 ], [ %top.0, %if.end40 ], [ %top.0, %lor.lhs.false50 ], [ %top.0, %if.end47 ], !dbg !6122
  %res.1 = phi i8 [ 1, %if.end67 ], [ %res.0, %if.end36 ], [ %res.0, %if.end40 ], [ %res.0, %lor.lhs.false50 ], [ %res.0, %if.end47 ], !dbg !6122
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end67 ], [ false, %if.end36 ], [ false, %if.end40 ], [ false, %lor.lhs.false50 ], [ false, %if.end47 ]
  call void @llvm.dbg.value(metadata i8 %res.1, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %top.1, metadata !6109, metadata !DIExpression()), !dbg !6122
  br i1 %cleanup.dest.slot.0, label %if.end88, label %cleanup89

if.else78:                                        ; preds = %lor.lhs.false
  %cmp80 = icmp eq i32 %7, 0, !dbg !6205
  br i1 %cmp80, label %cond.end84, label %cond.true82, !dbg !6205

cond.true82:                                      ; preds = %if.else78
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6205
  br label %cond.end84, !dbg !6205

cond.end84:                                       ; preds = %if.else78, %cond.true82
  store i8 1, i8* %processed, align 2, !dbg !6207
  br label %if.end88

if.end88:                                         ; preds = %cond.end84, %cleanup, %if.then19
  %top.3 = phi %struct.ipa_edge_args* [ %top.0, %if.then19 ], [ %top.0, %cond.end84 ], [ %top.1, %cleanup ], !dbg !6129
  %res.3 = phi i8 [ %res.0, %if.then19 ], [ %res.0, %cond.end84 ], [ %res.1, %cleanup ], !dbg !6130
  call void @llvm.dbg.value(metadata i8 %res.3, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %top.3, metadata !6109, metadata !DIExpression()), !dbg !6122
  br label %cleanup89, !dbg !6208

cleanup89:                                        ; preds = %for.body, %cleanup, %if.end88, %if.then12
  %top.4 = phi %struct.ipa_edge_args* [ %top.0, %if.then12 ], [ %top.3, %if.end88 ], [ %top.1, %cleanup ], [ %top.0, %for.body ], !dbg !6129
  %res.4 = phi i8 [ %res.0, %if.then12 ], [ %res.3, %if.end88 ], [ %res.1, %cleanup ], [ %res.0, %for.body ], !dbg !6130
  call void @llvm.dbg.value(metadata i8 %res.4, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %top.4, metadata !6109, metadata !DIExpression()), !dbg !6122
  %next = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt.0, i64 0, i32 1, !dbg !6209
  br label %for.cond, !dbg !6210, !llvm.loop !6211

for.end:                                          ; preds = %for.cond
  %res.0.lcssa = phi i8 [ %res.0, %for.cond ], !dbg !6130
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !6111, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !6111, metadata !DIExpression()), !dbg !6122
  ret i8 %res.0.lcssa, !dbg !6213
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_jump_functions_after_inlining(%struct.cgraph_edge* %cs, %struct.cgraph_edge* %e) unnamed_addr #5 !dbg !6214 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs, metadata !6218, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %e, metadata !6219, metadata !DIExpression()), !dbg !6229
  %0 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !6230
  %base = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %0, i64 0, i32 0, !dbg !6230
  %uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs, i64 0, i32 12, !dbg !6230
  %1 = load i32, i32* %uid, align 4, !dbg !6230
  %call = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base, i32 %1) #8, !dbg !6230
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call, metadata !6220, metadata !DIExpression()), !dbg !6229
  %2 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !6231
  %base3 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %2, i64 0, i32 0, !dbg !6231
  %uid7 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e, i64 0, i32 12, !dbg !6231
  %3 = load i32, i32* %uid7, align 4, !dbg !6231
  %call8 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base3, i32 %3) #8, !dbg !6231
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call8, metadata !6221, metadata !DIExpression()), !dbg !6229
  %call9 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call8) #8, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %call9, metadata !6222, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i32 0, metadata !6223, metadata !DIExpression()), !dbg !6229
  br label %for.cond, !dbg !6233

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !6234
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6223, metadata !DIExpression()), !dbg !6229
  %cmp = icmp slt i32 %i.0, %call9, !dbg !6235
  br i1 %cmp, label %for.body, label %for.end, !dbg !6236

for.body:                                         ; preds = %for.cond
  %call10 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %call8, i32 %i.0) #8, !dbg !6237
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %call10, metadata !6228, metadata !DIExpression()), !dbg !6238
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call10, i64 0, i32 0, !dbg !6239
  %4 = load i32, i32* %type, align 8, !dbg !6239
  %cmp11 = icmp eq i32 %4, 4, !dbg !6241
  br i1 %cmp11, label %if.then, label %if.end, !dbg !6242

if.then:                                          ; preds = %for.body
  store i32 0, i32* %type, align 8, !dbg !6243
  br label %cleanup, !dbg !6245

if.end:                                           ; preds = %for.body
  %cmp14 = icmp eq i32 %4, 3, !dbg !6246
  br i1 %cmp14, label %if.end16, label %cleanup, !dbg !6248

if.end16:                                         ; preds = %if.end
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call10, i64 0, i32 1, !dbg !6249
  %pass_through = bitcast %union.jump_func_value* %value to %struct.ipa_pass_through_data*, !dbg !6251
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through, i64 0, i32 2, !dbg !6252
  %5 = load i32, i32* %operation, align 4, !dbg !6252
  %cmp17 = icmp eq i32 %5, 116, !dbg !6253
  br i1 %cmp17, label %lor.lhs.false, label %if.then22, !dbg !6254

lor.lhs.false:                                    ; preds = %if.end16
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %call10, i64 0, i32 1, i32 0, i32 1, !dbg !6255
  %6 = bitcast %union.tree_node** %formal_id to i32*, !dbg !6255
  %7 = load i32, i32* %6, align 8, !dbg !6255
  %call20 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call) #8, !dbg !6256
  %cmp21 = icmp slt i32 %7, %call20, !dbg !6257
  br i1 %cmp21, label %if.end24, label %if.then22, !dbg !6258

if.then22:                                        ; preds = %lor.lhs.false, %if.end16
  store i32 0, i32* %type, align 8, !dbg !6259
  br label %cleanup, !dbg !6261

if.end24:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %6, align 8, !dbg !6262
  %call28 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %call, i32 %8) #8, !dbg !6263
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %call28, metadata !6224, metadata !DIExpression()), !dbg !6238
  %9 = bitcast %struct.ipa_jump_func* %call10 to i8*, !dbg !6264
  %10 = bitcast %struct.ipa_jump_func* %call28 to i8*, !dbg !6264
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !6264
  br label %cleanup, !dbg !6265

cleanup:                                          ; preds = %if.end, %if.end24, %if.then22, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6223, metadata !DIExpression()), !dbg !6229
  br label %for.cond, !dbg !6267, !llvm.loop !6268

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6270
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_edge_addition_message(%struct._IO_FILE* %f, %struct.ipa_param_call_note* %nt, %struct.ipa_jump_func* %jfunc, %struct.cgraph_node* %node) unnamed_addr #5 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !6275, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %nt, metadata !6276, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jfunc, metadata !6277, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !6278, metadata !DIExpression()), !dbg !6279
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !6280
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 0, !dbg !6281
  %0 = load i32, i32* %type, align 8, !dbg !6281
  %cmp = icmp eq i32 %0, 2, !dbg !6283
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, !dbg !6284
  br i1 %cmp, label %if.then, label %if.else, !dbg !6285

if.then:                                          ; preds = %entry
  %pfn = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !6286
  %1 = load %union.tree_node*, %union.tree_node** %pfn, align 8, !dbg !6286
  tail call void @print_node_brief(%struct._IO_FILE* %f, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), %union.tree_node* %1, i32 0) #6, !dbg !6288
  %2 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jfunc, i64 0, i32 1, i32 0, i32 1, !dbg !6289
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6289
  tail call void @print_node_brief(%struct._IO_FILE* %f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %union.tree_node* %3, i32 0) #6, !dbg !6290
  br label %if.end, !dbg !6291

if.else:                                          ; preds = %entry
  %constant = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !6292
  %4 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !6292
  tail call void @print_node_brief(%struct._IO_FILE* %f, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), %union.tree_node* %4, i32 0) #6, !dbg !6293
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call4 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %node) #6, !dbg !6294
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i8* %call4) #6, !dbg !6295
  %stmt = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %nt, i64 0, i32 2, !dbg !6296
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6296
  tail call void @print_gimple_stmt(%struct._IO_FILE* %f, %union.gimple_statement_d* %5, i32 2, i32 2) #6, !dbg !6297
  ret void, !dbg !6298
}

declare dso_local %struct.cgraph_edge* @cgraph_create_edge(%struct.cgraph_node*, %struct.cgraph_node*, %union.gimple_statement_d*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_edge** @VEC_cgraph_edge_p_heap_safe_push(%struct.VEC_cgraph_edge_p_heap** %vec_, %struct.cgraph_edge* %obj_) unnamed_addr #0 !dbg !6299 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_heap** %vec_, metadata !6304, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %obj_, metadata !6305, metadata !DIExpression()), !dbg !6306
  %call = tail call fastcc i32 @VEC_cgraph_edge_p_heap_reserve(%struct.VEC_cgraph_edge_p_heap** %vec_, i32 1) #8, !dbg !6307
  %0 = load %struct.VEC_cgraph_edge_p_heap*, %struct.VEC_cgraph_edge_p_heap** %vec_, align 8, !dbg !6307
  %tobool = icmp eq %struct.VEC_cgraph_edge_p_heap* %0, null, !dbg !6307
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6307

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_edge_p_heap, %struct.VEC_cgraph_edge_p_heap* %0, i64 0, i32 0, !dbg !6307
  br label %cond.end, !dbg !6307

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_edge_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6307
  %call1 = tail call fastcc %struct.cgraph_edge** @VEC_cgraph_edge_p_base_quick_push(%struct.VEC_cgraph_edge_p_base* %cond, %struct.cgraph_edge* %obj_) #8, !dbg !6307
  ret %struct.cgraph_edge** %call1, !dbg !6307
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_cgraph_edge_p_heap_reserve(%struct.VEC_cgraph_edge_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6308 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_heap** %vec_, metadata !6312, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata i32 1, metadata !6313, metadata !DIExpression()), !dbg !6315
  %0 = load %struct.VEC_cgraph_edge_p_heap*, %struct.VEC_cgraph_edge_p_heap** %vec_, align 8, !dbg !6316
  %tobool = icmp eq %struct.VEC_cgraph_edge_p_heap* %0, null, !dbg !6316
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6316

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_edge_p_heap, %struct.VEC_cgraph_edge_p_heap* %0, i64 0, i32 0, !dbg !6316
  br label %cond.end, !dbg !6316

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_edge_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6316
  %call = tail call fastcc i32 @VEC_cgraph_edge_p_base_space(%struct.VEC_cgraph_edge_p_base* %cond, i32 1) #8, !dbg !6316
  %tobool1 = icmp eq i32 %call, 0, !dbg !6316
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6314, metadata !DIExpression()), !dbg !6315
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6316

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_cgraph_edge_p_heap** %vec_ to i8**, !dbg !6317
  %2 = load i8*, i8** %1, align 8, !dbg !6317
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6317
  store i8* %call3, i8** %1, align 8, !dbg !6317
  br label %if.end, !dbg !6317

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6316
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_edge** @VEC_cgraph_edge_p_base_quick_push(%struct.VEC_cgraph_edge_p_base* %vec_, %struct.cgraph_edge* %obj_) unnamed_addr #0 !dbg !6319 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_base* %vec_, metadata !6324, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %obj_, metadata !6325, metadata !DIExpression()), !dbg !6327
  %num1 = getelementptr inbounds %struct.VEC_cgraph_edge_p_base, %struct.VEC_cgraph_edge_p_base* %vec_, i64 0, i32 0, !dbg !6328
  %0 = load i32, i32* %num1, align 8, !dbg !6328
  %inc = add i32 %0, 1, !dbg !6328
  store i32 %inc, i32* %num1, align 8, !dbg !6328
  %idxprom = zext i32 %0 to i64, !dbg !6328
  %arrayidx = getelementptr inbounds %struct.VEC_cgraph_edge_p_base, %struct.VEC_cgraph_edge_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6328
  call void @llvm.dbg.value(metadata %struct.cgraph_edge** %arrayidx, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.cgraph_edge* %obj_, %struct.cgraph_edge** %arrayidx, align 8, !dbg !6328
  ret %struct.cgraph_edge** %arrayidx, !dbg !6328
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_cgraph_edge_p_base_space(%struct.VEC_cgraph_edge_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6329 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_edge_p_base* %vec_, metadata !6333, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 1, metadata !6334, metadata !DIExpression()), !dbg !6335
  %tobool = icmp eq %struct.VEC_cgraph_edge_p_base* %vec_, null, !dbg !6336
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6336

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_cgraph_edge_p_base, %struct.VEC_cgraph_edge_p_base* %vec_, i64 0, i32 1, !dbg !6336
  %0 = load i32, i32* %alloc, align 4, !dbg !6336
  %num = getelementptr inbounds %struct.VEC_cgraph_edge_p_base, %struct.VEC_cgraph_edge_p_base* %vec_, i64 0, i32 0, !dbg !6336
  %1 = load i32, i32* %num, align 8, !dbg !6336
  %cmp1 = icmp ne i32 %0, %1, !dbg !6336
  %phitmp = zext i1 %cmp1 to i32, !dbg !6336
  br label %cond.end, !dbg !6336

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6336
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @duplicate_ggc_array(i8* %src, i64 %n) unnamed_addr #5 !dbg !6337 {
entry:
  call void @llvm.dbg.value(metadata i8* %src, metadata !6341, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i64 %n, metadata !6342, metadata !DIExpression()), !dbg !6344
  %tobool = icmp eq i8* %src, null, !dbg !6345
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6347

if.end:                                           ; preds = %entry
  %call = tail call i8* @ggc_alloc_stat(i64 %n) #6, !dbg !6348
  call void @llvm.dbg.value(metadata i8* %call, metadata !6343, metadata !DIExpression()), !dbg !6344
  %call1 = tail call i8* @memcpy(i8* %call, i8* nonnull %src, i64 %n) #6, !dbg !6349
  br label %cleanup, !dbg !6350

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8* [ %call, %if.end ], [ null, %entry ], !dbg !6344
  ret i8* %retval.0, !dbg !6351
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @duplicate_array(i8* %src, i64 %n) unnamed_addr #5 !dbg !6352 {
entry:
  call void @llvm.dbg.value(metadata i8* %src, metadata !6354, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i64 %n, metadata !6355, metadata !DIExpression()), !dbg !6357
  %tobool = icmp eq i8* %src, null, !dbg !6358
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6360

if.end:                                           ; preds = %entry
  %call = tail call i8* @xmalloc(i64 %n) #6, !dbg !6361
  call void @llvm.dbg.value(metadata i8* %call, metadata !6356, metadata !DIExpression()), !dbg !6357
  %call1 = tail call i8* @memcpy(i8* %call, i8* nonnull %src, i64 %n) #6, !dbg !6362
  br label %cleanup, !dbg !6363

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8* [ %call, %if.end ], [ null, %entry ], !dbg !6357
  ret i8* %retval.0, !dbg !6364
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local void @cgraph_remove_edge_removal_hook(%struct.cgraph_edge_hook_list*) local_unnamed_addr #2

declare dso_local void @cgraph_remove_node_removal_hook(%struct.cgraph_node_hook_list*) local_unnamed_addr #2

declare dso_local void @cgraph_remove_edge_duplication_hook(%struct.cgraph_2edge_hook_list*) local_unnamed_addr #2

declare dso_local void @cgraph_remove_node_duplication_hook(%struct.cgraph_2node_hook_list*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6365 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6369, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.value(metadata i32 %i, metadata !6370, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6371, metadata !DIExpression()), !dbg !6372
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !6373
  %tobool = icmp eq i8 %call, 0, !dbg !6373
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6373

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !6373
  %cmp = icmp ugt i32 %call1, %i, !dbg !6373
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6373

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6373
  br label %cond.end, !dbg !6373

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !6374
  %idxprom = zext i32 %i to i64, !dbg !6374
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !6374
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !6375
  ret void, !dbg !6376
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_cgraph_node_ptr_base_length(%struct.VEC_cgraph_node_ptr_base* %vec_) unnamed_addr #0 !dbg !6377 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_node_ptr_base* %vec_, metadata !6383, metadata !DIExpression()), !dbg !6384
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_base* %vec_, null, !dbg !6385
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6385

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_cgraph_node_ptr_base, %struct.VEC_cgraph_node_ptr_base* %vec_, i64 0, i32 0, !dbg !6385
  %0 = load i32, i32* %num, align 8, !dbg !6385
  br label %cond.end, !dbg !6385

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6385
  ret i32 %cond, !dbg !6385
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_node* @VEC_cgraph_node_ptr_base_index(%struct.VEC_cgraph_node_ptr_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6386 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_node_ptr_base* %vec_, metadata !6390, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6391, metadata !DIExpression()), !dbg !6392
  br label %land.end, !dbg !6393

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6393
  %arrayidx = getelementptr inbounds %struct.VEC_cgraph_node_ptr_base, %struct.VEC_cgraph_node_ptr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6393
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %arrayidx, align 8, !dbg !6393
  ret %struct.cgraph_node* %0, !dbg !6393
}

declare dso_local i32 @lto_cgraph_encoder_encode(%struct.lto_cgraph_encoder_d*, %struct.cgraph_node*) local_unnamed_addr #2

declare dso_local %struct.bitpack_d* @bitpack_create() local_unnamed_addr #2

declare dso_local void @bp_pack_value(%struct.bitpack_d*, i64, i32) local_unnamed_addr #2

declare dso_local void @lto_output_bitpack(%struct.lto_output_stream*, %struct.bitpack_d*) local_unnamed_addr #2

declare dso_local void @bitpack_delete(%struct.bitpack_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_write_jump_function(%struct.output_block* %ob, %struct.ipa_jump_func* %jump_func) unnamed_addr #5 !dbg !6394 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6398, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jump_func, metadata !6399, metadata !DIExpression()), !dbg !6400
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !6401
  %0 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6401
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 0, !dbg !6402
  %1 = load i32, i32* %type, align 8, !dbg !6402
  %conv = zext i32 %1 to i64, !dbg !6403
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %0, i64 %conv) #6, !dbg !6404
  %2 = load i32, i32* %type, align 8, !dbg !6405
  switch i32 %2, label %sw.epilog [
    i32 2, label %sw.bb23
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
    i32 4, label %sw.bb12
  ], !dbg !6406

sw.bb:                                            ; preds = %entry
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6407
  %constant = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !6409
  %3 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !6409
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext 1) #6, !dbg !6410
  br label %sw.epilog, !dbg !6411

sw.bb2:                                           ; preds = %entry
  %value3 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6412
  %operand = bitcast %union.jump_func_value* %value3 to %union.tree_node**, !dbg !6413
  %4 = load %union.tree_node*, %union.tree_node** %operand, align 8, !dbg !6413
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext 1) #6, !dbg !6414
  %5 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6415
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6416
  %6 = bitcast %union.tree_node** %formal_id to i32*, !dbg !6416
  %7 = load i32, i32* %6, align 8, !dbg !6416
  %conv7 = sext i32 %7 to i64, !dbg !6417
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %5, i64 %conv7) #6, !dbg !6418
  %8 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6419
  %pass_through10 = bitcast %union.jump_func_value* %value3 to %struct.ipa_pass_through_data*, !dbg !6420
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through10, i64 0, i32 2, !dbg !6421
  %9 = load i32, i32* %operation, align 4, !dbg !6421
  %conv11 = zext i32 %9 to i64, !dbg !6422
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %8, i64 %conv11) #6, !dbg !6423
  br label %sw.epilog, !dbg !6424

sw.bb12:                                          ; preds = %entry
  %10 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6425
  %offset = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 0, !dbg !6426
  %11 = load i64, i64* %offset, align 8, !dbg !6426
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %10, i64 %11) #6, !dbg !6427
  %type17 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6428
  %12 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !6428
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %12, i8 zeroext 1) #6, !dbg !6429
  %13 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6430
  %formal_id21 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 2, !dbg !6431
  %14 = load i32, i32* %formal_id21, align 8, !dbg !6431
  %conv22 = sext i32 %14 to i64, !dbg !6432
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %13, i64 %conv22) #6, !dbg !6433
  br label %sw.epilog, !dbg !6434

sw.bb23:                                          ; preds = %entry
  %value24 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6435
  %pfn = bitcast %union.jump_func_value* %value24 to %union.tree_node**, !dbg !6436
  %15 = load %union.tree_node*, %union.tree_node** %pfn, align 8, !dbg !6436
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %15, i8 zeroext 1) #6, !dbg !6437
  %16 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6438
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !6438
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %17, i8 zeroext 0) #6, !dbg !6439
  br label %sw.epilog, !dbg !6440

sw.epilog:                                        ; preds = %entry, %sw.bb23, %sw.bb12, %sw.bb2, %sw.bb
  ret void, !dbg !6441
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_write_param_call_note(%struct.output_block* %ob, %struct.ipa_param_call_note* %note) unnamed_addr #5 !dbg !6442 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %struct.ipa_param_call_note* %note, metadata !6447, metadata !DIExpression()), !dbg !6448
  %processed = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 7, !dbg !6449
  %0 = load i8, i8* %processed, align 2, !dbg !6449
  %tobool = icmp eq i8 %0, 0, !dbg !6449
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6449

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1970, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6449
  br label %cond.end, !dbg !6449

cond.end:                                         ; preds = %entry, %cond.true
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !6450
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6450
  %stmt = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 2, !dbg !6451
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6451
  %call = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %2) #8, !dbg !6452
  %conv = zext i32 %call to i64, !dbg !6452
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %1, i64 %conv) #6, !dbg !6453
  %3 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6454
  %formal_id = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 4, !dbg !6455
  %4 = load i32, i32* %formal_id, align 4, !dbg !6455
  %conv2 = sext i32 %4 to i64, !dbg !6456
  tail call void @lto_output_sleb128_stream(%struct.lto_output_stream* %3, i64 %conv2) #6, !dbg !6457
  %5 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6458
  %count = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 0, !dbg !6459
  %6 = load i64, i64* %count, align 8, !dbg !6459
  tail call void @lto_output_sleb128_stream(%struct.lto_output_stream* %5, i64 %6) #6, !dbg !6460
  %7 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6461
  %frequency = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 5, !dbg !6462
  %8 = load i32, i32* %frequency, align 8, !dbg !6462
  %conv5 = sext i32 %8 to i64, !dbg !6463
  tail call void @lto_output_sleb128_stream(%struct.lto_output_stream* %7, i64 %conv5) #6, !dbg !6464
  %9 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6465
  %loop_nest = getelementptr inbounds %struct.ipa_param_call_note, %struct.ipa_param_call_note* %note, i64 0, i32 6, !dbg !6466
  %10 = load i16, i16* %loop_nest, align 4, !dbg !6466
  %conv7 = zext i16 %10 to i64, !dbg !6467
  tail call void @lto_output_sleb128_stream(%struct.lto_output_stream* %9, i64 %conv7) #6, !dbg !6468
  ret void, !dbg !6469
}

declare dso_local void @lto_output_tree(%struct.output_block*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @lto_output_sleb128_stream(%struct.lto_output_stream*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ipa_node_params_t_heap* @VEC_ipa_node_params_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6470 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6474, metadata !DIExpression()), !dbg !6475
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 48) #6, !dbg !6476
  %0 = bitcast i8* %call to %struct.VEC_ipa_node_params_t_heap*, !dbg !6476
  ret %struct.VEC_ipa_node_params_t_heap* %0, !dbg !6476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_node_params_t_base_length(%struct.VEC_ipa_node_params_t_base* %vec_) unnamed_addr #0 !dbg !6477 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_base* %vec_, metadata !6483, metadata !DIExpression()), !dbg !6484
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_base* %vec_, null, !dbg !6485
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6485

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 0, !dbg !6485
  %0 = load i32, i32* %num, align 8, !dbg !6485
  br label %cond.end, !dbg !6485

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6485
  ret i32 %cond, !dbg !6485
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_node_params_t_heap_safe_grow_cleared(%struct.VEC_ipa_node_params_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !6486 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, metadata !6490, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6491, metadata !DIExpression()), !dbg !6493
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6494
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_heap* %0, null, !dbg !6494
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6494

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !6494
  br label %cond.end, !dbg !6494

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ipa_node_params_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6494
  %call = tail call fastcc i32 @VEC_ipa_node_params_t_base_length(%struct.VEC_ipa_node_params_t_base* %cond) #8, !dbg !6494
  call void @llvm.dbg.value(metadata i32 %call, metadata !6492, metadata !DIExpression()), !dbg !6493
  tail call fastcc void @VEC_ipa_node_params_t_heap_safe_grow(%struct.VEC_ipa_node_params_t_heap** nonnull @ipa_node_params_vector, i32 %size_) #8, !dbg !6494
  %1 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6494
  %tobool1 = icmp eq %struct.VEC_ipa_node_params_t_heap* %1, null, !dbg !6494
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6494

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %1, i64 0, i32 0, !dbg !6494
  br label %cond.end5, !dbg !6494

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_ipa_node_params_t_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !6494
  %call7 = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_address(%struct.VEC_ipa_node_params_t_base* %cond6) #8, !dbg !6494
  %idxprom = sext i32 %call to i64, !dbg !6494
  %arrayidx = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call7, i64 %idxprom, !dbg !6494
  %2 = bitcast %struct.ipa_node_params* %arrayidx to i8*, !dbg !6494
  %sub = sub nsw i32 %size_, %call, !dbg !6494
  %conv = sext i32 %sub to i64, !dbg !6494
  %mul = mul nsw i64 %conv, 48, !dbg !6494
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !6494
  ret void, !dbg !6494
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_node_params_t_heap_safe_grow(%struct.VEC_ipa_node_params_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !6495 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, metadata !6497, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6498, metadata !DIExpression()), !dbg !6499
  %cmp = icmp sgt i32 %size_, -1, !dbg !6500
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6500

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6500
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_heap* %0, null, !dbg !6500
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6500

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !6500
  br label %cond.end, !dbg !6500

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_ipa_node_params_t_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !6500
  %call = tail call fastcc i32 @VEC_ipa_node_params_t_base_length(%struct.VEC_ipa_node_params_t_base* %cond) #8, !dbg !6500
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6500
  %tobool2 = icmp eq %struct.VEC_ipa_node_params_t_heap* %1, null, !dbg !6500
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !6500

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %1, i64 0, i32 0, i32 0, !dbg !6500
  %2 = load i32, i32* %num, align 8, !dbg !6500
  br label %cond.end11, !dbg !6500

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !6500
  %sub = sub nsw i32 %size_, %cond12, !dbg !6500
  %call13 = tail call fastcc i32 @VEC_ipa_node_params_t_heap_reserve_exact(%struct.VEC_ipa_node_params_t_heap** nonnull @ipa_node_params_vector, i32 %sub) #8, !dbg !6500
  %3 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6500
  %num20 = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %3, i64 0, i32 0, i32 0, !dbg !6500
  store i32 %size_, i32* %num20, align 8, !dbg !6500
  ret void, !dbg !6500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_address(%struct.VEC_ipa_node_params_t_base* %vec_) unnamed_addr #0 !dbg !6501 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_base* %vec_, metadata !6505, metadata !DIExpression()), !dbg !6506
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_base* %vec_, null, !dbg !6507
  %arraydecay = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !6507
  %cond = select i1 %tobool, %struct.ipa_node_params* null, %struct.ipa_node_params* %arraydecay, !dbg !6507
  ret %struct.ipa_node_params* %cond, !dbg !6507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_node_params_t_heap_reserve_exact(%struct.VEC_ipa_node_params_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6508 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, metadata !6512, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6513, metadata !DIExpression()), !dbg !6515
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6516
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_heap* %0, null, !dbg !6516
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6516

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !6516
  br label %cond.end, !dbg !6516

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ipa_node_params_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6516
  %call = tail call fastcc i32 @VEC_ipa_node_params_t_base_space(%struct.VEC_ipa_node_params_t_base* %cond, i32 %alloc_) #8, !dbg !6516
  %tobool1 = icmp eq i32 %call, 0, !dbg !6516
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6516
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6514, metadata !DIExpression()), !dbg !6515
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6516

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector to i8**), align 8, !dbg !6517
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 48) #6, !dbg !6517
  store i8* %call3, i8** bitcast (%struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector to i8**), align 8, !dbg !6517
  br label %if.end, !dbg !6517

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6516
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_node_params_t_base_space(%struct.VEC_ipa_node_params_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6519 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_node_params_t_base* %vec_, metadata !6523, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6524, metadata !DIExpression()), !dbg !6525
  %tobool = icmp eq %struct.VEC_ipa_node_params_t_base* %vec_, null, !dbg !6526
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6526

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 1, !dbg !6526
  %0 = load i32, i32* %alloc, align 4, !dbg !6526
  %num = getelementptr inbounds %struct.VEC_ipa_node_params_t_base, %struct.VEC_ipa_node_params_t_base* %vec_, i64 0, i32 0, !dbg !6526
  %1 = load i32, i32* %num, align 8, !dbg !6526
  %sub = sub i32 %0, %1, !dbg !6526
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6526
  br label %cond.end, !dbg !6526

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6526
  br label %cond.end, !dbg !6526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6526
  ret i32 %cond, !dbg !6526
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ipa_edge_args_t_gc* @VEC_ipa_edge_args_t_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6527 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6531, metadata !DIExpression()), !dbg !6532
  %call = tail call i8* @vec_gc_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 16) #6, !dbg !6533
  %0 = bitcast i8* %call to %struct.VEC_ipa_edge_args_t_gc*, !dbg !6533
  ret %struct.VEC_ipa_edge_args_t_gc* %0, !dbg !6533
}

declare dso_local %struct.data_in* @lto_data_in_create(%struct.lto_file_decl_data*, i8*, i32, %struct.VEC_ld_plugin_symbol_resolution_t_heap*) local_unnamed_addr #2

declare dso_local i64 @lto_input_uleb128(%struct.lto_input_block*) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @lto_cgraph_encoder_deref(%struct.lto_cgraph_encoder_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_read_node_info(%struct.lto_input_block* %ib, %struct.cgraph_node* %node, %struct.data_in* %data_in) unnamed_addr #5 !dbg !6534 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6539, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !6540, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6541, metadata !DIExpression()), !dbg !6553
  %0 = load %struct.VEC_ipa_node_params_t_heap*, %struct.VEC_ipa_node_params_t_heap** @ipa_node_params_vector, align 8, !dbg !6554
  %base = getelementptr inbounds %struct.VEC_ipa_node_params_t_heap, %struct.VEC_ipa_node_params_t_heap* %0, i64 0, i32 0, !dbg !6554
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 24, !dbg !6554
  %1 = load i32, i32* %uid, align 8, !dbg !6554
  %call = tail call fastcc %struct.ipa_node_params* @VEC_ipa_node_params_t_base_index(%struct.VEC_ipa_node_params_t_base* %base, i32 %1) #8, !dbg !6554
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %call, metadata !6542, metadata !DIExpression()), !dbg !6553
  tail call void @ipa_initialize_node_params(%struct.cgraph_node* %node) #8, !dbg !6555
  %call1 = tail call %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block* %ib) #6, !dbg !6556
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call1, metadata !6545, metadata !DIExpression()), !dbg !6553
  %call2 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #6, !dbg !6557
  %called_with_var_arguments = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 5, !dbg !6558
  %2 = trunc i64 %call2 to i8, !dbg !6559
  %bf.load = load i8, i8* %called_with_var_arguments, align 8, !dbg !6559
  %bf.value = and i8 %2, 1, !dbg !6559
  %bf.clear = and i8 %bf.load, -2, !dbg !6559
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6559
  store i8 %bf.set, i8* %called_with_var_arguments, align 8, !dbg !6559
  %call3 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #6, !dbg !6560
  %3 = trunc i64 %call3 to i8, !dbg !6561
  %bf.load5 = load i8, i8* %called_with_var_arguments, align 8, !dbg !6561
  %bf.value6 = shl i8 %3, 2, !dbg !6561
  %bf.shl = and i8 %bf.value6, 4, !dbg !6561
  %bf.clear7 = and i8 %bf.load5, -5, !dbg !6561
  %bf.set8 = or i8 %bf.clear7, %bf.shl, !dbg !6561
  store i8 %bf.set8, i8* %called_with_var_arguments, align 8, !dbg !6561
  %call10 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !6562
  %cmp = icmp eq i32 %call10, 0, !dbg !6564
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.then, !dbg !6565

entry.if.end_crit_edge:                           ; preds = %entry
  %bf.load19.pre = load i8, i8* %called_with_var_arguments, align 8, !dbg !6566
  br label %if.end, !dbg !6565

if.then:                                          ; preds = %entry
  %bf.load12 = load i8, i8* %called_with_var_arguments, align 8, !dbg !6567
  %bf.set18 = or i8 %bf.load12, 6, !dbg !6569
  store i8 %bf.set18, i8* %called_with_var_arguments, align 8, !dbg !6569
  br label %if.end, !dbg !6570

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %bf.load19 = phi i8 [ %bf.load19.pre, %entry.if.end_crit_edge ], [ %bf.set18, %if.then ], !dbg !6566
  %bf.clear20 = and i8 %bf.load19, -9, !dbg !6566
  store i8 %bf.clear20, i8* %called_with_var_arguments, align 8, !dbg !6566
  call void @llvm.dbg.value(metadata i32 0, metadata !6543, metadata !DIExpression()), !dbg !6553
  %params = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %call, i64 0, i32 1, !dbg !6571
  br label %for.cond, !dbg !6574

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !6575
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6543, metadata !DIExpression()), !dbg !6553
  %call21 = tail call fastcc i32 @ipa_get_param_count(%struct.ipa_node_params* %call) #8, !dbg !6576
  %4 = sext i32 %call21 to i64, !dbg !6577
  %cmp22 = icmp slt i64 %indvars.iv, %4, !dbg !6577
  br i1 %cmp22, label %for.body, label %for.end, !dbg !6578

for.body:                                         ; preds = %for.cond
  %call24 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #6, !dbg !6579
  %5 = load %struct.ipa_param_descriptor*, %struct.ipa_param_descriptor** %params, align 8, !dbg !6580
  %modified = getelementptr inbounds %struct.ipa_param_descriptor, %struct.ipa_param_descriptor* %5, i64 %indvars.iv, i32 2, !dbg !6581
  %6 = trunc i64 %call24 to i8, !dbg !6582
  %bf.load26 = load i8, i8* %modified, align 8, !dbg !6582
  %bf.value27 = and i8 %6, 1, !dbg !6582
  %bf.clear28 = and i8 %bf.load26, -2, !dbg !6582
  %bf.set29 = or i8 %bf.clear28, %bf.value27, !dbg !6582
  store i8 %bf.set29, i8* %modified, align 8, !dbg !6582
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6583
  call void @llvm.dbg.value(metadata i32 undef, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6553
  br label %for.cond, !dbg !6584, !llvm.loop !6585

for.end:                                          ; preds = %for.cond
  tail call void @bitpack_delete(%struct.bitpack_d* %call1) #6, !dbg !6587
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 1, !dbg !6588
  br label %for.cond31, !dbg !6589

for.cond31:                                       ; preds = %cleanup, %for.end
  %e.0.in = phi %struct.cgraph_edge** [ %callees, %for.end ], [ %next_callee, %cleanup ]
  %e.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %e.0.in, align 8, !dbg !6590
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %e.0, metadata !6544, metadata !DIExpression()), !dbg !6553
  %tobool32 = icmp eq %struct.cgraph_edge* %e.0, null, !dbg !6591
  br i1 %tobool32, label %for.end61, label %for.body33, !dbg !6591

for.body33:                                       ; preds = %for.cond31
  %7 = load %struct.VEC_ipa_edge_args_t_gc*, %struct.VEC_ipa_edge_args_t_gc** @ipa_edge_args_vector, align 8, !dbg !6592
  %base36 = getelementptr inbounds %struct.VEC_ipa_edge_args_t_gc, %struct.VEC_ipa_edge_args_t_gc* %7, i64 0, i32 0, !dbg !6592
  %uid40 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 12, !dbg !6592
  %8 = load i32, i32* %uid40, align 4, !dbg !6592
  %call41 = tail call fastcc %struct.ipa_edge_args* @VEC_ipa_edge_args_t_base_index(%struct.VEC_ipa_edge_args_t_base* %base36, i32 %8) #8, !dbg !6592
  call void @llvm.dbg.value(metadata %struct.ipa_edge_args* %call41, metadata !6548, metadata !DIExpression()), !dbg !6593
  %call42 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6594
  %conv43 = trunc i64 %call42 to i32, !dbg !6594
  call void @llvm.dbg.value(metadata i32 %conv43, metadata !6552, metadata !DIExpression()), !dbg !6593
  tail call fastcc void @ipa_set_cs_argument_count(%struct.ipa_edge_args* %call41, i32 %conv43) #8, !dbg !6595
  %tobool44 = icmp eq i32 %conv43, 0, !dbg !6596
  br i1 %tobool44, label %cleanup, label %if.end46, !dbg !6598

if.end46:                                         ; preds = %for.body33
  %call47 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call41) #8, !dbg !6599
  %conv48 = sext i32 %call47 to i64, !dbg !6599
  %mul = shl nsw i64 %conv48, 5, !dbg !6599
  %call49 = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #6, !dbg !6599
  %jump_functions = getelementptr inbounds %struct.ipa_edge_args, %struct.ipa_edge_args* %call41, i64 0, i32 1, !dbg !6600
  %9 = bitcast %struct.ipa_jump_func** %jump_functions to i8**, !dbg !6601
  store i8* %call49, i8** %9, align 8, !dbg !6601
  call void @llvm.dbg.value(metadata i32 0, metadata !6543, metadata !DIExpression()), !dbg !6553
  br label %for.cond50, !dbg !6602

for.cond50:                                       ; preds = %for.body54, %if.end46
  %k.1 = phi i32 [ 0, %if.end46 ], [ %inc57, %for.body54 ], !dbg !6604
  call void @llvm.dbg.value(metadata i32 %k.1, metadata !6543, metadata !DIExpression()), !dbg !6553
  %call51 = tail call fastcc i32 @ipa_get_cs_argument_count(%struct.ipa_edge_args* %call41) #8, !dbg !6605
  %cmp52 = icmp slt i32 %k.1, %call51, !dbg !6607
  br i1 %cmp52, label %for.body54, label %cleanup.loopexit, !dbg !6608

for.body54:                                       ; preds = %for.cond50
  %call55 = tail call fastcc %struct.ipa_jump_func* @ipa_get_ith_jump_func(%struct.ipa_edge_args* %call41, i32 %k.1) #8, !dbg !6609
  tail call fastcc void @ipa_read_jump_function(%struct.lto_input_block* %ib, %struct.ipa_jump_func* %call55, %struct.data_in* %data_in) #8, !dbg !6610
  %inc57 = add nuw nsw i32 %k.1, 1, !dbg !6611
  call void @llvm.dbg.value(metadata i32 %inc57, metadata !6543, metadata !DIExpression()), !dbg !6553
  br label %for.cond50, !dbg !6612, !llvm.loop !6613

cleanup.loopexit:                                 ; preds = %for.cond50
  br label %cleanup, !dbg !6615

cleanup:                                          ; preds = %cleanup.loopexit, %for.body33
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 6, !dbg !6615
  br label %for.cond31, !dbg !6616, !llvm.loop !6617

for.end61:                                        ; preds = %for.cond31
  %call62 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6619
  %conv63 = trunc i64 %call62 to i32, !dbg !6619
  call void @llvm.dbg.value(metadata i32 %conv63, metadata !6547, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i32 0, metadata !6546, metadata !DIExpression()), !dbg !6553
  br label %for.cond64, !dbg !6620

for.cond64:                                       ; preds = %for.body67, %for.end61
  %i.0 = phi i32 [ 0, %for.end61 ], [ %inc69, %for.body67 ], !dbg !6622
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6546, metadata !DIExpression()), !dbg !6553
  %cmp65 = icmp slt i32 %i.0, %conv63, !dbg !6623
  br i1 %cmp65, label %for.body67, label %for.end70, !dbg !6625

for.body67:                                       ; preds = %for.cond64
  tail call fastcc void @ipa_read_param_call_note(%struct.lto_input_block* %ib, %struct.ipa_node_params* %call) #8, !dbg !6626
  %inc69 = add nuw nsw i32 %i.0, 1, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %inc69, metadata !6546, metadata !DIExpression()), !dbg !6553
  br label %for.cond64, !dbg !6628, !llvm.loop !6629

for.end70:                                        ; preds = %for.cond64
  ret void, !dbg !6631
}

declare dso_local void @lto_free_section_data(%struct.lto_file_decl_data*, i32, i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @lto_data_in_delete(%struct.data_in*) local_unnamed_addr #2

declare dso_local %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block*) local_unnamed_addr #2

declare dso_local i64 @bp_unpack_value(%struct.bitpack_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_read_jump_function(%struct.lto_input_block* %ib, %struct.ipa_jump_func* %jump_func, %struct.data_in* %data_in) unnamed_addr #5 !dbg !6632 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6636, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata %struct.ipa_jump_func* %jump_func, metadata !6637, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6638, metadata !DIExpression()), !dbg !6639
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6640
  %conv = trunc i64 %call to i32, !dbg !6641
  %type = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 0, !dbg !6642
  store i32 %conv, i32* %type, align 8, !dbg !6643
  switch i32 %conv, label %sw.epilog [
    i32 2, label %sw.bb26
    i32 1, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb14
  ], !dbg !6644

sw.bb:                                            ; preds = %entry
  %call2 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #6, !dbg !6645
  %value = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6647
  %constant = bitcast %union.jump_func_value* %value to %union.tree_node**, !dbg !6648
  store %union.tree_node* %call2, %union.tree_node** %constant, align 8, !dbg !6649
  br label %sw.epilog, !dbg !6650

sw.bb3:                                           ; preds = %entry
  %call4 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #6, !dbg !6651
  %value5 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6652
  %operand = bitcast %union.jump_func_value* %value5 to %union.tree_node**, !dbg !6653
  store %union.tree_node* %call4, %union.tree_node** %operand, align 8, !dbg !6654
  %call6 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6655
  %conv7 = trunc i64 %call6 to i32, !dbg !6655
  %formal_id = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6656
  %0 = bitcast %union.tree_node** %formal_id to i32*, !dbg !6656
  store i32 %conv7, i32* %0, align 8, !dbg !6657
  %call10 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6658
  %conv11 = trunc i64 %call10 to i32, !dbg !6659
  %pass_through13 = bitcast %union.jump_func_value* %value5 to %struct.ipa_pass_through_data*, !dbg !6660
  %operation = getelementptr inbounds %struct.ipa_pass_through_data, %struct.ipa_pass_through_data* %pass_through13, i64 0, i32 2, !dbg !6661
  store i32 %conv11, i32* %operation, align 4, !dbg !6662
  br label %sw.epilog, !dbg !6663

sw.bb14:                                          ; preds = %entry
  %call15 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6664
  %offset = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 0, !dbg !6665
  store i64 %call15, i64* %offset, align 8, !dbg !6666
  %call17 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #6, !dbg !6667
  %type20 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6668
  store %union.tree_node* %call17, %union.tree_node** %type20, align 8, !dbg !6669
  %call21 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6670
  %conv22 = trunc i64 %call21 to i32, !dbg !6670
  %formal_id25 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 2, !dbg !6671
  store i32 %conv22, i32* %formal_id25, align 8, !dbg !6672
  br label %sw.epilog, !dbg !6673

sw.bb26:                                          ; preds = %entry
  %call27 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #6, !dbg !6674
  %value28 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, !dbg !6675
  %pfn = bitcast %union.jump_func_value* %value28 to %union.tree_node**, !dbg !6676
  store %union.tree_node* %call27, %union.tree_node** %pfn, align 8, !dbg !6677
  %call29 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #6, !dbg !6678
  %1 = getelementptr inbounds %struct.ipa_jump_func, %struct.ipa_jump_func* %jump_func, i64 0, i32 1, i32 0, i32 1, !dbg !6679
  store %union.tree_node* %call29, %union.tree_node** %1, align 8, !dbg !6680
  br label %sw.epilog, !dbg !6681

sw.epilog:                                        ; preds = %entry, %sw.bb26, %sw.bb14, %sw.bb3, %sw.bb
  ret void, !dbg !6682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ipa_read_param_call_note(%struct.lto_input_block* %ib, %struct.ipa_node_params* %info) unnamed_addr #5 !dbg !6683 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6687, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata %struct.ipa_node_params* %info, metadata !6688, metadata !DIExpression()), !dbg !6690
  %call = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !6691
  call void @llvm.dbg.value(metadata i8* %call, metadata !6689, metadata !DIExpression()), !dbg !6690
  %call1 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #6, !dbg !6692
  %conv = trunc i64 %call1 to i32, !dbg !6693
  %lto_stmt_uid = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6694
  %0 = bitcast i8* %lto_stmt_uid to i32*, !dbg !6694
  store i32 %conv, i32* %0, align 8, !dbg !6695
  %call2 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #6, !dbg !6696
  %conv3 = trunc i64 %call2 to i32, !dbg !6697
  %formal_id = getelementptr inbounds i8, i8* %call, i64 28, !dbg !6698
  %1 = bitcast i8* %formal_id to i32*, !dbg !6698
  store i32 %conv3, i32* %1, align 4, !dbg !6699
  %call4 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #6, !dbg !6700
  %count = bitcast i8* %call to i64*, !dbg !6701
  store i64 %call4, i64* %count, align 8, !dbg !6702
  %call5 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #6, !dbg !6703
  %conv6 = trunc i64 %call5 to i32, !dbg !6704
  %frequency = getelementptr inbounds i8, i8* %call, i64 32, !dbg !6705
  %2 = bitcast i8* %frequency to i32*, !dbg !6705
  store i32 %conv6, i32* %2, align 8, !dbg !6706
  %call7 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #6, !dbg !6707
  %conv9 = trunc i64 %call7 to i16, !dbg !6708
  %loop_nest = getelementptr inbounds i8, i8* %call, i64 36, !dbg !6709
  %3 = bitcast i8* %loop_nest to i16*, !dbg !6709
  store i16 %conv9, i16* %3, align 4, !dbg !6710
  %param_calls = getelementptr inbounds %struct.ipa_node_params, %struct.ipa_node_params* %info, i64 0, i32 2, !dbg !6711
  %4 = bitcast %struct.ipa_param_call_note** %param_calls to i64*, !dbg !6711
  %5 = load i64, i64* %4, align 8, !dbg !6711
  %next = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6712
  %6 = bitcast i8* %next to i64*, !dbg !6713
  store i64 %5, i64* %6, align 8, !dbg !6713
  %7 = bitcast %struct.ipa_param_call_note** %param_calls to i8**, !dbg !6714
  store i8* %call, i8** %7, align 8, !dbg !6714
  ret void, !dbg !6715
}

declare dso_local %union.tree_node* @lto_input_tree(%struct.lto_input_block*, %struct.data_in*) local_unnamed_addr #2

declare dso_local i64 @lto_input_sleb128(%struct.lto_input_block*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2191, !2192, !2193}
!llvm.ident = !{!2194}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ipa_node_params_vector", scope: !2, file: !3, line: 40, type: !2135, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !565, globals: !2172, nameTableKind: None)
!3 = !DIFile(filename: "ipa-prop.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !201, !207, !212, !217, !235, !242, !249, !272, !279, !455, !461, !468, !482, !521, !547, !553}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !6, line: 39, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200}
!9 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!98 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!99 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!100 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!101 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!102 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!103 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!104 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!105 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!106 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!107 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!108 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!109 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!110 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!111 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!112 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!113 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!114 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!115 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!116 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!117 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!118 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!119 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!120 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!121 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!122 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!123 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!124 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!125 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!126 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!127 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!128 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!129 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!130 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!131 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!132 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!133 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!134 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!135 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!136 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!137 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!138 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!139 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!140 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!141 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!142 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!143 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!144 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!145 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!146 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!147 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!148 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!149 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!150 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!151 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!152 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!153 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!154 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!155 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!156 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!157 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!158 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!159 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!160 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!161 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!173 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!174 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!175 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!176 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!177 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!178 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!179 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!180 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!181 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!182 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!183 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!184 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!185 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!186 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!187 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!188 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!189 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!190 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!191 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!192 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!193 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!194 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!195 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!196 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!197 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!198 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!199 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!200 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !202, line: 363, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !202, line: 355, baseType: !7, size: 32, elements: !208)
!208 = !{!209, !210, !211}
!209 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !213, line: 474, baseType: !7, size: 32, elements: !214)
!213 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!214 = !{!215, !216}
!215 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!216 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !6, line: 280, baseType: !7, size: 32, elements: !218)
!218 = !{!219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234}
!219 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!223 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!224 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!225 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!226 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!227 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!228 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!229 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!230 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!231 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!232 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!233 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!234 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !6, line: 1817, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!238 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!239 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!240 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!241 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !6, line: 1805, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245, !246, !247, !248}
!244 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!247 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!248 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !250, line: 309, baseType: !7, size: 32, elements: !251)
!250 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271}
!252 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!253 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!255 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!256 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!258 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!259 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!260 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!261 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!262 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!263 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!264 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!265 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!266 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!267 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!268 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!269 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!270 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!271 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !273, line: 104, baseType: !7, size: 32, elements: !274)
!273 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!274 = !{!275, !276, !277, !278}
!275 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!276 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!277 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!278 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!279 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !280, line: 74, baseType: !7, size: 32, elements: !281)
!280 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!281 = !{!282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!282 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!283 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!287 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!288 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!289 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!290 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!291 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!292 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!293 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!294 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!295 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!296 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!297 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!298 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!299 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!300 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!301 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!302 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!303 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!304 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!305 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!306 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!307 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!308 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!309 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!310 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!311 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!312 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!313 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!314 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!315 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!316 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!317 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!318 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!319 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!320 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!321 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!322 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!323 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!324 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!325 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!326 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!327 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!328 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!329 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!330 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!331 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!332 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!333 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!334 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!335 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!336 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!337 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!338 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!339 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!340 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!341 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!342 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!343 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!344 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!345 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!346 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!347 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!348 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!349 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!350 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!351 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!352 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!353 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!354 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!355 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!356 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!357 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!358 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!359 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!360 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!361 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!362 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!363 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!364 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!365 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!366 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!367 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!368 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!369 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!370 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!371 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!372 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!373 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!374 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!375 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!376 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!377 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!378 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!379 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!380 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!381 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!382 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!383 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!384 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!385 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!386 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!387 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!388 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!389 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!390 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!391 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!392 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!393 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!454 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ipa_lattice_type", file: !456, line: 66, baseType: !7, size: 32, elements: !457)
!456 = !DIFile(filename: "./ipa-prop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!457 = !{!458, !459, !460}
!458 = !DIEnumerator(name: "IPA_BOTTOM", value: 0, isUnsigned: true)
!459 = !DIEnumerator(name: "IPA_CONST_VALUE", value: 1, isUnsigned: true)
!460 = !DIEnumerator(name: "IPA_TOP", value: 2, isUnsigned: true)
!461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "jump_func_type", file: !456, line: 48, baseType: !7, size: 32, elements: !462)
!462 = !{!463, !464, !465, !466, !467}
!463 = !DIEnumerator(name: "IPA_JF_UNKNOWN", value: 0, isUnsigned: true)
!464 = !DIEnumerator(name: "IPA_JF_CONST", value: 1, isUnsigned: true)
!465 = !DIEnumerator(name: "IPA_JF_CONST_MEMBER_PTR", value: 2, isUnsigned: true)
!466 = !DIEnumerator(name: "IPA_JF_PASS_THROUGH", value: 3, isUnsigned: true)
!467 = !DIEnumerator(name: "IPA_JF_ANCESTOR", value: 4, isUnsigned: true)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lto_section_type", file: !469, line: 256, baseType: !7, size: 32, elements: !470)
!469 = !DIFile(filename: "./lto-streamer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!470 = !{!471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481}
!471 = !DIEnumerator(name: "LTO_section_decls", value: 0, isUnsigned: true)
!472 = !DIEnumerator(name: "LTO_section_function_body", value: 1, isUnsigned: true)
!473 = !DIEnumerator(name: "LTO_section_static_initializer", value: 2, isUnsigned: true)
!474 = !DIEnumerator(name: "LTO_section_cgraph", value: 3, isUnsigned: true)
!475 = !DIEnumerator(name: "LTO_section_jump_functions", value: 4, isUnsigned: true)
!476 = !DIEnumerator(name: "LTO_section_ipa_pure_const", value: 5, isUnsigned: true)
!477 = !DIEnumerator(name: "LTO_section_ipa_reference", value: 6, isUnsigned: true)
!478 = !DIEnumerator(name: "LTO_section_symtab", value: 7, isUnsigned: true)
!479 = !DIEnumerator(name: "LTO_section_wpa_fixup", value: 8, isUnsigned: true)
!480 = !DIEnumerator(name: "LTO_section_opts", value: 9, isUnsigned: true)
!481 = !DIEnumerator(name: "LTO_N_SECTION_TYPES", value: 10, isUnsigned: true)
!482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !483, line: 51, baseType: !7, size: 32, elements: !484)
!483 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!484 = !{!485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!485 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!486 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!487 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!488 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!489 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!490 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!491 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!492 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!493 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!494 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!495 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!496 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!497 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!498 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!499 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!500 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!501 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!502 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!503 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!504 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!505 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!506 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!507 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!508 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!509 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!510 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!511 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!512 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!513 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!514 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!515 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!516 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!517 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!518 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!519 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!520 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !483, line: 727, baseType: !7, size: 32, elements: !522)
!522 = !{!523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546}
!523 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!524 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!525 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!526 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!527 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!528 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!529 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!530 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!531 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!532 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!533 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!534 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!535 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!536 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!537 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!538 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!539 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!540 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!541 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!542 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!543 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!544 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!545 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!546 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !483, line: 80, baseType: !7, size: 32, elements: !548)
!548 = !{!549, !550, !551, !552}
!549 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!550 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!551 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!552 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ld_plugin_symbol_resolution", file: !554, line: 123, baseType: !7, size: 32, elements: !555)
!554 = !DIFile(filename: "./include/plugin-api.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!555 = !{!556, !557, !558, !559, !560, !561, !562, !563, !564}
!556 = !DIEnumerator(name: "LDPR_UNKNOWN", value: 0, isUnsigned: true)
!557 = !DIEnumerator(name: "LDPR_UNDEF", value: 1, isUnsigned: true)
!558 = !DIEnumerator(name: "LDPR_PREVAILING_DEF", value: 2, isUnsigned: true)
!559 = !DIEnumerator(name: "LDPR_PREVAILING_DEF_IRONLY", value: 3, isUnsigned: true)
!560 = !DIEnumerator(name: "LDPR_PREEMPTED_REG", value: 4, isUnsigned: true)
!561 = !DIEnumerator(name: "LDPR_PREEMPTED_IR", value: 5, isUnsigned: true)
!562 = !DIEnumerator(name: "LDPR_RESOLVED_IR", value: 6, isUnsigned: true)
!563 = !DIEnumerator(name: "LDPR_RESOLVED_EXEC", value: 7, isUnsigned: true)
!564 = !DIEnumerator(name: "LDPR_RESOLVED_DYN", value: 8, isUnsigned: true)
!565 = !{!566, !567, !568, !569, !572, !573, !575, !2015, !7, !2025, !5, !583, !694, !639, !2050, !2073, !879, !2090, !913, !570, !547, !2056, !2092, !2105, !2110, !2135, !2148, !461, !1090}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!568 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_func_list", file: !456, line: 390, size: 128, elements: !577)
!577 = !{!578, !2014}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !576, file: !456, line: 392, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !250, line: 181, size: 2496, elements: !581)
!581 = !{!582, !1757, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1897, !1951, !1961, !1965, !1991, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !580, file: !250, line: 182, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !584, line: 56, baseType: !585)
!584 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !6, line: 3371, size: 1792, elements: !587)
!587 = !{!588, !621, !627, !640, !647, !654, !659, !668, !674, !687, !699, !737, !745, !773, !790, !791, !796, !805, !811, !816, !820, !824, !1406, !1455, !1461, !1467, !1474, !1487, !1501, !1518, !1530, !1552, !1567, !1739}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !6, line: 3372, baseType: !589, size: 64)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !6, line: 360, size: 64, elements: !590)
!590 = !{!591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !589, file: !6, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !589, file: !6, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !589, file: !6, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !589, file: !6, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !589, file: !6, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !589, file: !6, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !589, file: !6, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !589, file: !6, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !589, file: !6, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !589, file: !6, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !589, file: !6, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !589, file: !6, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !589, file: !6, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !589, file: !6, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !589, file: !6, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !589, file: !6, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !589, file: !6, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !589, file: !6, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !589, file: !6, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !589, file: !6, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !589, file: !6, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !589, file: !6, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !589, file: !6, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !589, file: !6, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !589, file: !6, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !589, file: !6, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !589, file: !6, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !589, file: !6, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !589, file: !6, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !589, file: !6, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !586, file: !6, line: 3373, baseType: !622, size: 192)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !6, line: 402, size: 192, elements: !623)
!623 = !{!624, !625, !626}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !622, file: !6, line: 403, baseType: !589, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !622, file: !6, line: 404, baseType: !583, size: 64, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !622, file: !6, line: 405, baseType: !583, size: 64, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !586, file: !6, line: 3374, baseType: !628, size: 320)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !6, line: 1384, size: 320, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !628, file: !6, line: 1385, baseType: !622, size: 192)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !628, file: !6, line: 1386, baseType: !632, size: 128, offset: 192)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !633, line: 58, baseType: !634)
!633 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !633, line: 54, size: 128, elements: !635)
!635 = !{!636, !638}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !634, file: !633, line: 56, baseType: !637, size: 64)
!637 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !634, file: !633, line: 57, baseType: !639, size: 64, offset: 64)
!639 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !586, file: !6, line: 3375, baseType: !641, size: 256)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !6, line: 1397, size: 256, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !641, file: !6, line: 1398, baseType: !622, size: 192)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !641, file: !6, line: 1399, baseType: !645, size: 64, offset: 192)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !6, line: 1392, flags: DIFlagFwdDecl)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !586, file: !6, line: 3376, baseType: !648, size: 256)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !6, line: 1408, size: 256, elements: !649)
!649 = !{!650, !651}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !648, file: !6, line: 1409, baseType: !622, size: 192)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !648, file: !6, line: 1410, baseType: !652, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !6, line: 1403, flags: DIFlagFwdDecl)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !586, file: !6, line: 3377, baseType: !655, size: 256)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !6, line: 1437, size: 256, elements: !656)
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !655, file: !6, line: 1438, baseType: !622, size: 192)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !655, file: !6, line: 1439, baseType: !583, size: 64, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !586, file: !6, line: 3378, baseType: !660, size: 256)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !6, line: 1418, size: 256, elements: !661)
!661 = !{!662, !663, !664}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !660, file: !6, line: 1419, baseType: !622, size: 192)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !660, file: !6, line: 1420, baseType: !568, size: 32, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !660, file: !6, line: 1421, baseType: !665, size: 8, offset: 224)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 8, elements: !666)
!666 = !{!667}
!667 = !DISubrange(count: 1)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !586, file: !6, line: 3379, baseType: !669, size: 320)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !6, line: 1428, size: 320, elements: !670)
!670 = !{!671, !672, !673}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !669, file: !6, line: 1429, baseType: !622, size: 192)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !669, file: !6, line: 1430, baseType: !583, size: 64, offset: 192)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !669, file: !6, line: 1431, baseType: !583, size: 64, offset: 256)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !586, file: !6, line: 3380, baseType: !675, size: 320)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !6, line: 1460, size: 320, elements: !676)
!676 = !{!677, !678}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !675, file: !6, line: 1461, baseType: !622, size: 192)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !675, file: !6, line: 1462, baseType: !679, size: 128, offset: 192)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !680, line: 31, size: 128, elements: !681)
!680 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!681 = !{!682, !685, !686}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !679, file: !680, line: 32, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !567)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !679, file: !680, line: 33, baseType: !7, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !679, file: !680, line: 34, baseType: !7, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !586, file: !6, line: 3381, baseType: !688, size: 384)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !6, line: 2507, size: 384, elements: !689)
!689 = !{!690, !691, !696, !697, !698}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !688, file: !6, line: 2508, baseType: !622, size: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !688, file: !6, line: 2509, baseType: !692, size: 32, offset: 192)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !693, line: 58, baseType: !694)
!693 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !695, line: 44, baseType: !7)
!695 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !688, file: !6, line: 2510, baseType: !7, size: 32, offset: 224)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !688, file: !6, line: 2511, baseType: !583, size: 64, offset: 256)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !688, file: !6, line: 2512, baseType: !583, size: 64, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !586, file: !6, line: 3382, baseType: !700, size: 896)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !6, line: 2652, size: 896, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !700, file: !6, line: 2653, baseType: !688, size: 384)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !700, file: !6, line: 2654, baseType: !583, size: 64, offset: 384)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !700, file: !6, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !700, file: !6, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !700, file: !6, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !700, file: !6, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !700, file: !6, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !700, file: !6, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !700, file: !6, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !700, file: !6, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !700, file: !6, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !700, file: !6, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !700, file: !6, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !700, file: !6, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !700, file: !6, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !700, file: !6, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !700, file: !6, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !700, file: !6, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !700, file: !6, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !700, file: !6, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !700, file: !6, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !700, file: !6, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !700, file: !6, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !700, file: !6, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !700, file: !6, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !700, file: !6, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !700, file: !6, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !700, file: !6, line: 2703, baseType: !7, size: 32, offset: 512)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !700, file: !6, line: 2705, baseType: !583, size: 64, offset: 576)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !700, file: !6, line: 2706, baseType: !583, size: 64, offset: 640)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !700, file: !6, line: 2707, baseType: !583, size: 64, offset: 704)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !700, file: !6, line: 2708, baseType: !583, size: 64, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !700, file: !6, line: 2711, baseType: !735, size: 64, offset: 832)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !6, line: 2711, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !586, file: !6, line: 3383, baseType: !738, size: 960)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !6, line: 2756, size: 960, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !738, file: !6, line: 2757, baseType: !700, size: 896)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !738, file: !6, line: 2758, baseType: !742, size: 64, offset: 896)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !584, line: 50, baseType: !743)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !584, line: 49, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !586, file: !6, line: 3384, baseType: !746, size: 1472)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !6, line: 3114, size: 1472, elements: !747)
!747 = !{!748, !769, !770, !771, !772}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !746, file: !6, line: 3115, baseType: !749, size: 1216)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !6, line: 2984, size: 1216, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !749, file: !6, line: 2985, baseType: !738, size: 960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !749, file: !6, line: 2986, baseType: !583, size: 64, offset: 960)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !749, file: !6, line: 2987, baseType: !583, size: 64, offset: 1024)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !749, file: !6, line: 2988, baseType: !583, size: 64, offset: 1088)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !749, file: !6, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !749, file: !6, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !749, file: !6, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !749, file: !6, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !749, file: !6, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !749, file: !6, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !749, file: !6, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !749, file: !6, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !749, file: !6, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !749, file: !6, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !749, file: !6, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !749, file: !6, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !749, file: !6, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !749, file: !6, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !746, file: !6, line: 3117, baseType: !583, size: 64, offset: 1216)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !746, file: !6, line: 3119, baseType: !583, size: 64, offset: 1280)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !746, file: !6, line: 3121, baseType: !583, size: 64, offset: 1344)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !746, file: !6, line: 3123, baseType: !583, size: 64, offset: 1408)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !586, file: !6, line: 3385, baseType: !774, size: 1088)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !6, line: 2874, size: 1088, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !774, file: !6, line: 2875, baseType: !738, size: 960)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !774, file: !6, line: 2876, baseType: !742, size: 64, offset: 960)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !774, file: !6, line: 2877, baseType: !779, size: 64, offset: 1024)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !781, line: 172, size: 128, elements: !782)
!781 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!782 = !{!783, !784, !785, !786, !787, !788, !789}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !780, file: !781, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !780, file: !781, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !780, file: !781, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !780, file: !781, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !780, file: !781, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !780, file: !781, line: 195, baseType: !7, size: 32, offset: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !780, file: !781, line: 199, baseType: !583, size: 64, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !586, file: !6, line: 3386, baseType: !749, size: 1216)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !586, file: !6, line: 3387, baseType: !792, size: 1280)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !6, line: 3093, size: 1280, elements: !793)
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !792, file: !6, line: 3094, baseType: !749, size: 1216)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !792, file: !6, line: 3095, baseType: !779, size: 64, offset: 1216)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !586, file: !6, line: 3388, baseType: !797, size: 1216)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !6, line: 2824, size: 1216, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !797, file: !6, line: 2825, baseType: !700, size: 896)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !797, file: !6, line: 2827, baseType: !583, size: 64, offset: 896)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !797, file: !6, line: 2828, baseType: !583, size: 64, offset: 960)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !797, file: !6, line: 2829, baseType: !583, size: 64, offset: 1024)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !797, file: !6, line: 2830, baseType: !583, size: 64, offset: 1088)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !797, file: !6, line: 2831, baseType: !583, size: 64, offset: 1152)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !586, file: !6, line: 3389, baseType: !806, size: 1024)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !6, line: 2850, size: 1024, elements: !807)
!807 = !{!808, !809, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !6, line: 2851, baseType: !738, size: 960)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !806, file: !6, line: 2852, baseType: !568, size: 32, offset: 960)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !806, file: !6, line: 2853, baseType: !568, size: 32, offset: 992)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !586, file: !6, line: 3390, baseType: !812, size: 1024)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !6, line: 2857, size: 1024, elements: !813)
!813 = !{!814, !815}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !812, file: !6, line: 2858, baseType: !738, size: 960)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !812, file: !6, line: 2859, baseType: !779, size: 64, offset: 960)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !586, file: !6, line: 3391, baseType: !817, size: 960)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !6, line: 2862, size: 960, elements: !818)
!818 = !{!819}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !817, file: !6, line: 2863, baseType: !738, size: 960)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !586, file: !6, line: 3392, baseType: !821, size: 1472)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !6, line: 3304, size: 1472, elements: !822)
!822 = !{!823}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !821, file: !6, line: 3305, baseType: !746, size: 1472)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !586, file: !6, line: 3393, baseType: !825, size: 1792)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !6, line: 3248, size: 1792, elements: !826)
!826 = !{!827, !828, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !825, file: !6, line: 3249, baseType: !746, size: 1472)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !825, file: !6, line: 3251, baseType: !829, size: 64, offset: 1472)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !831, line: 463, size: 1152, elements: !832)
!831 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!832 = !{!833, !836, !1153, !1154, !1326, !1329, !1330, !1331, !1332, !1333, !1334, !1358, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !830, file: !831, line: 464, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !831, line: 464, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !830, file: !831, line: 467, baseType: !837, size: 64, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !202, line: 374, size: 640, elements: !839)
!839 = !{!840, !1128, !1129, !1142, !1143, !1144, !1145, !1146, !1147, !1149, !1151, !1152}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !838, file: !202, line: 377, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !584, line: 111, baseType: !842)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !202, line: 217, size: 832, elements: !844)
!844 = !{!845, !1091, !1092, !1093, !1096, !1102, !1103, !1104, !1122, !1123, !1124, !1125, !1126, !1127}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !843, file: !202, line: 219, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !202, line: 151, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !202, line: 151, size: 128, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !848, file: !202, line: 151, baseType: !851, size: 128)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !202, line: 150, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !202, line: 150, size: 128, elements: !853)
!853 = !{!854, !855, !856}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !852, file: !202, line: 150, baseType: !7, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !852, file: !202, line: 150, baseType: !7, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !852, file: !202, line: 150, baseType: !857, size: 64, offset: 64)
!857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !858, size: 64, elements: !666)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !584, line: 108, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !202, line: 122, size: 512, elements: !861)
!861 = !{!862, !863, !864, !1083, !1084, !1085, !1086, !1087, !1088, !1089}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !860, file: !202, line: 124, baseType: !842, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !860, file: !202, line: 125, baseType: !842, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !860, file: !202, line: 131, baseType: !865, size: 64, offset: 128)
!865 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !202, line: 128, size: 64, elements: !866)
!866 = !{!867, !1082}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !865, file: !202, line: 129, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !584, line: 66, baseType: !869)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !483, line: 143, size: 192, elements: !871)
!871 = !{!872, !1080, !1081}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !870, file: !483, line: 145, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !584, line: 69, baseType: !874)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !483, line: 136, size: 192, elements: !876)
!876 = !{!877, !1078, !1079}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !875, file: !483, line: 137, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !584, line: 58, baseType: !879)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !483, line: 737, size: 768, elements: !881)
!881 = !{!882, !899, !933, !939, !944, !949, !956, !962, !968, !973, !987, !992, !998, !1003, !1013, !1018, !1036, !1043, !1050, !1056, !1061, !1067, !1073}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !880, file: !483, line: 738, baseType: !883, size: 256)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !483, line: 271, size: 256, elements: !884)
!884 = !{!885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !883, file: !483, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !883, file: !483, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !883, file: !483, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !883, file: !483, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !883, file: !483, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !883, file: !483, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !883, file: !483, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !883, file: !483, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !883, file: !483, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !883, file: !483, line: 312, baseType: !7, size: 32, offset: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !883, file: !483, line: 316, baseType: !692, size: 32, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !883, file: !483, line: 319, baseType: !7, size: 32, offset: 96)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !883, file: !483, line: 323, baseType: !842, size: 64, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !883, file: !483, line: 327, baseType: !583, size: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !880, file: !483, line: 739, baseType: !900, size: 448)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !483, line: 350, size: 448, elements: !901)
!901 = !{!902, !931}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !900, file: !483, line: 353, baseType: !903, size: 384)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !483, line: 333, size: 384, elements: !904)
!904 = !{!905, !906, !914}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !903, file: !483, line: 336, baseType: !883, size: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !903, file: !483, line: 343, baseType: !907, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !909, line: 37, size: 128, elements: !910)
!909 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !909, line: 39, baseType: !907, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !908, file: !909, line: 40, baseType: !913, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !903, file: !483, line: 344, baseType: !915, size: 64, offset: 320)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !909, line: 45, size: 320, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !916, file: !909, line: 47, baseType: !915, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !916, file: !909, line: 48, baseType: !920, size: 256, offset: 64)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !6, line: 1883, size: 256, elements: !921)
!921 = !{!922, !924, !925, !930}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !920, file: !6, line: 1884, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !920, file: !6, line: 1885, baseType: !923, size: 64, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !920, file: !6, line: 1891, baseType: !926, size: 64, offset: 128)
!926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !920, file: !6, line: 1891, size: 64, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !926, file: !6, line: 1891, baseType: !878, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !926, file: !6, line: 1891, baseType: !583, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !920, file: !6, line: 1892, baseType: !913, size: 64, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !900, file: !483, line: 359, baseType: !932, size: 64, offset: 384)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 64, elements: !666)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !880, file: !483, line: 740, baseType: !934, size: 512)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !483, line: 365, size: 512, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !934, file: !483, line: 368, baseType: !903, size: 384)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !934, file: !483, line: 373, baseType: !583, size: 64, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !934, file: !483, line: 374, baseType: !583, size: 64, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !880, file: !483, line: 741, baseType: !940, size: 576)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !483, line: 380, size: 576, elements: !941)
!941 = !{!942, !943}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !940, file: !483, line: 383, baseType: !934, size: 512)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !940, file: !483, line: 389, baseType: !932, size: 64, offset: 512)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !880, file: !483, line: 742, baseType: !945, size: 320)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !483, line: 395, size: 320, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !945, file: !483, line: 397, baseType: !883, size: 256)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !945, file: !483, line: 400, baseType: !868, size: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !880, file: !483, line: 743, baseType: !950, size: 448)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !483, line: 406, size: 448, elements: !951)
!951 = !{!952, !953, !954, !955}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !950, file: !483, line: 408, baseType: !883, size: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !950, file: !483, line: 412, baseType: !583, size: 64, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !950, file: !483, line: 420, baseType: !583, size: 64, offset: 320)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !950, file: !483, line: 423, baseType: !868, size: 64, offset: 384)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !880, file: !483, line: 744, baseType: !957, size: 384)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !483, line: 429, size: 384, elements: !958)
!958 = !{!959, !960, !961}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !957, file: !483, line: 431, baseType: !883, size: 256)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !957, file: !483, line: 434, baseType: !583, size: 64, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !957, file: !483, line: 437, baseType: !868, size: 64, offset: 320)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !880, file: !483, line: 745, baseType: !963, size: 384)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !483, line: 443, size: 384, elements: !964)
!964 = !{!965, !966, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !963, file: !483, line: 445, baseType: !883, size: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !963, file: !483, line: 449, baseType: !583, size: 64, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !963, file: !483, line: 453, baseType: !868, size: 64, offset: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !880, file: !483, line: 746, baseType: !969, size: 320)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !483, line: 459, size: 320, elements: !970)
!970 = !{!971, !972}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !969, file: !483, line: 461, baseType: !883, size: 256)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !969, file: !483, line: 464, baseType: !583, size: 64, offset: 256)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !880, file: !483, line: 747, baseType: !974, size: 768)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !483, line: 469, size: 768, elements: !975)
!975 = !{!976, !977, !978, !979, !980}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !974, file: !483, line: 471, baseType: !883, size: 256)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !974, file: !483, line: 474, baseType: !7, size: 32, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !974, file: !483, line: 475, baseType: !7, size: 32, offset: 288)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !974, file: !483, line: 478, baseType: !583, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !974, file: !483, line: 481, baseType: !981, size: 384, offset: 384)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 384, elements: !666)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !6, line: 1917, size: 384, elements: !983)
!983 = !{!984, !985, !986}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !982, file: !6, line: 1920, baseType: !920, size: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !982, file: !6, line: 1921, baseType: !583, size: 64, offset: 256)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !982, file: !6, line: 1922, baseType: !692, size: 32, offset: 320)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !880, file: !483, line: 748, baseType: !988, size: 320)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !483, line: 487, size: 320, elements: !989)
!989 = !{!990, !991}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !988, file: !483, line: 490, baseType: !883, size: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !988, file: !483, line: 494, baseType: !568, size: 32, offset: 256)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !880, file: !483, line: 749, baseType: !993, size: 384)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !483, line: 500, size: 384, elements: !994)
!994 = !{!995, !996, !997}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !993, file: !483, line: 502, baseType: !883, size: 256)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !993, file: !483, line: 506, baseType: !868, size: 64, offset: 256)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !993, file: !483, line: 510, baseType: !868, size: 64, offset: 320)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !880, file: !483, line: 750, baseType: !999, size: 320)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !483, line: 529, size: 320, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !999, file: !483, line: 531, baseType: !883, size: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !999, file: !483, line: 540, baseType: !868, size: 64, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !880, file: !483, line: 751, baseType: !1004, size: 704)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !483, line: 546, size: 704, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1004, file: !483, line: 549, baseType: !934, size: 512)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1004, file: !483, line: 553, baseType: !573, size: 64, offset: 512)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1004, file: !483, line: 557, baseType: !567, size: 8, offset: 576)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1004, file: !483, line: 558, baseType: !567, size: 8, offset: 584)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1004, file: !483, line: 559, baseType: !567, size: 8, offset: 592)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1004, file: !483, line: 560, baseType: !567, size: 8, offset: 600)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1004, file: !483, line: 566, baseType: !932, size: 64, offset: 640)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !880, file: !483, line: 752, baseType: !1014, size: 384)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !483, line: 571, size: 384, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1014, file: !483, line: 573, baseType: !945, size: 320)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1014, file: !483, line: 577, baseType: !583, size: 64, offset: 320)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !880, file: !483, line: 753, baseType: !1019, size: 576)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !483, line: 600, size: 576, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1026, !1035}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1019, file: !483, line: 602, baseType: !945, size: 320)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1019, file: !483, line: 605, baseType: !583, size: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1019, file: !483, line: 609, baseType: !1024, size: 64, offset: 384)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1025, line: 46, baseType: !637)
!1025 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1019, file: !483, line: 612, baseType: !1027, size: 64, offset: 448)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !483, line: 581, size: 320, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1028, file: !483, line: 583, baseType: !5, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1028, file: !483, line: 586, baseType: !583, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1028, file: !483, line: 589, baseType: !583, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1028, file: !483, line: 592, baseType: !583, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1028, file: !483, line: 595, baseType: !583, size: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1019, file: !483, line: 616, baseType: !868, size: 64, offset: 512)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !880, file: !483, line: 754, baseType: !1037, size: 512)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !483, line: 622, size: 512, elements: !1038)
!1038 = !{!1039, !1040, !1041, !1042}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1037, file: !483, line: 624, baseType: !945, size: 320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1037, file: !483, line: 628, baseType: !583, size: 64, offset: 320)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1037, file: !483, line: 632, baseType: !583, size: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1037, file: !483, line: 636, baseType: !583, size: 64, offset: 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !880, file: !483, line: 755, baseType: !1044, size: 704)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !483, line: 642, size: 704, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1044, file: !483, line: 644, baseType: !1037, size: 512)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1044, file: !483, line: 648, baseType: !583, size: 64, offset: 512)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1044, file: !483, line: 652, baseType: !583, size: 64, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1044, file: !483, line: 653, baseType: !583, size: 64, offset: 640)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !880, file: !483, line: 756, baseType: !1051, size: 448)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !483, line: 663, size: 448, elements: !1052)
!1052 = !{!1053, !1054, !1055}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1051, file: !483, line: 665, baseType: !945, size: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1051, file: !483, line: 668, baseType: !583, size: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1051, file: !483, line: 673, baseType: !583, size: 64, offset: 384)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !880, file: !483, line: 757, baseType: !1057, size: 384)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !483, line: 694, size: 384, elements: !1058)
!1058 = !{!1059, !1060}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1057, file: !483, line: 696, baseType: !945, size: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1057, file: !483, line: 699, baseType: !583, size: 64, offset: 320)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !880, file: !483, line: 758, baseType: !1062, size: 384)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !483, line: 681, size: 384, elements: !1063)
!1063 = !{!1064, !1065, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1062, file: !483, line: 683, baseType: !883, size: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1062, file: !483, line: 686, baseType: !583, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1062, file: !483, line: 689, baseType: !583, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !880, file: !483, line: 759, baseType: !1068, size: 384)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !483, line: 707, size: 384, elements: !1069)
!1069 = !{!1070, !1071, !1072}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1068, file: !483, line: 709, baseType: !883, size: 256)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1068, file: !483, line: 712, baseType: !583, size: 64, offset: 256)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1068, file: !483, line: 712, baseType: !583, size: 64, offset: 320)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !880, file: !483, line: 760, baseType: !1074, size: 320)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !483, line: 718, size: 320, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1074, file: !483, line: 720, baseType: !883, size: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1074, file: !483, line: 723, baseType: !583, size: 64, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !875, file: !483, line: 138, baseType: !874, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !875, file: !483, line: 139, baseType: !874, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !870, file: !483, line: 146, baseType: !873, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !870, file: !483, line: 152, baseType: !868, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !865, file: !202, line: 130, baseType: !742, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !860, file: !202, line: 134, baseType: !572, size: 64, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !860, file: !202, line: 137, baseType: !583, size: 64, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !860, file: !202, line: 138, baseType: !692, size: 32, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !860, file: !202, line: 142, baseType: !7, size: 32, offset: 352)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !860, file: !202, line: 144, baseType: !568, size: 32, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !860, file: !202, line: 145, baseType: !568, size: 32, offset: 416)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !860, file: !202, line: 146, baseType: !1090, size: 64, offset: 448)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !202, line: 119, baseType: !639)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !843, file: !202, line: 220, baseType: !846, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !843, file: !202, line: 223, baseType: !572, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !843, file: !202, line: 226, baseType: !1094, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !202, line: 185, flags: DIFlagFwdDecl)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !843, file: !202, line: 229, baseType: !1097, size: 128, offset: 256)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 128, elements: !1100)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !202, line: 229, flags: DIFlagFwdDecl)
!1100 = !{!1101}
!1101 = !DISubrange(count: 2)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !843, file: !202, line: 232, baseType: !842, size: 64, offset: 384)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !843, file: !202, line: 233, baseType: !842, size: 64, offset: 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !843, file: !202, line: 238, baseType: !1105, size: 64, offset: 512)
!1105 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !202, line: 235, size: 64, elements: !1106)
!1106 = !{!1107, !1113}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1105, file: !202, line: 236, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !202, line: 273, size: 128, elements: !1110)
!1110 = !{!1111, !1112}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1109, file: !202, line: 275, baseType: !868, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1109, file: !202, line: 278, baseType: !868, size: 64, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1105, file: !202, line: 237, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !202, line: 259, size: 320, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1115, file: !202, line: 261, baseType: !742, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1115, file: !202, line: 262, baseType: !742, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1115, file: !202, line: 266, baseType: !742, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1115, file: !202, line: 267, baseType: !742, size: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1115, file: !202, line: 270, baseType: !568, size: 32, offset: 256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !843, file: !202, line: 241, baseType: !1090, size: 64, offset: 576)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !843, file: !202, line: 244, baseType: !568, size: 32, offset: 640)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !843, file: !202, line: 247, baseType: !568, size: 32, offset: 672)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !843, file: !202, line: 250, baseType: !568, size: 32, offset: 704)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !843, file: !202, line: 253, baseType: !568, size: 32, offset: 736)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !843, file: !202, line: 256, baseType: !568, size: 32, offset: 768)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !838, file: !202, line: 378, baseType: !841, size: 64, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !838, file: !202, line: 381, baseType: !1130, size: 64, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !202, line: 282, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !202, line: 282, size: 128, elements: !1133)
!1133 = !{!1134}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1132, file: !202, line: 282, baseType: !1135, size: 128)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !202, line: 281, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !202, line: 281, size: 128, elements: !1137)
!1137 = !{!1138, !1139, !1140}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1136, file: !202, line: 281, baseType: !7, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1136, file: !202, line: 281, baseType: !7, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1136, file: !202, line: 281, baseType: !1141, size: 64, offset: 64)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 64, elements: !666)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !838, file: !202, line: 384, baseType: !568, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !838, file: !202, line: 387, baseType: !568, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !838, file: !202, line: 390, baseType: !568, size: 32, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !838, file: !202, line: 394, baseType: !1130, size: 64, offset: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !838, file: !202, line: 396, baseType: !201, size: 32, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !838, file: !202, line: 399, baseType: !1148, size: 64, offset: 416)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 64, elements: !1100)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !838, file: !202, line: 402, baseType: !1150, size: 64, offset: 480)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1100)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !838, file: !202, line: 406, baseType: !568, size: 32, offset: 544)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !838, file: !202, line: 409, baseType: !568, size: 32, offset: 576)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !830, file: !831, line: 470, baseType: !869, size: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !830, file: !831, line: 473, baseType: !1155, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !781, line: 39, size: 1152, elements: !1157)
!1157 = !{!1158, !1208, !1221, !1233, !1234, !1303, !1304, !1308, !1309, !1310, !1311, !1312}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1156, file: !781, line: 41, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1160, line: 144, baseType: !1161)
!1160 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1160, line: 100, size: 896, elements: !1163)
!1163 = !{!1164, !1172, !1177, !1182, !1184, !1185, !1186, !1187, !1188, !1189, !1194, !1196, !1197, !1202, !1207}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1162, file: !1160, line: 102, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1160, line: 52, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!1169, !1170}
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1160, line: 47, baseType: !7)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1162, file: !1160, line: 105, baseType: !1173, size: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1160, line: 59, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!568, !1170, !1170}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1162, file: !1160, line: 108, baseType: !1178, size: 64, offset: 128)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1160, line: 63, baseType: !1179)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{null, !572}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1162, file: !1160, line: 111, baseType: !1183, size: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1162, file: !1160, line: 114, baseType: !1024, size: 64, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1162, file: !1160, line: 117, baseType: !1024, size: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1162, file: !1160, line: 120, baseType: !1024, size: 64, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1162, file: !1160, line: 124, baseType: !7, size: 32, offset: 448)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1162, file: !1160, line: 128, baseType: !7, size: 32, offset: 480)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1162, file: !1160, line: 131, baseType: !1190, size: 64, offset: 512)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1160, line: 75, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!572, !1024, !1024}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1162, file: !1160, line: 132, baseType: !1195, size: 64, offset: 576)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1160, line: 78, baseType: !1179)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1162, file: !1160, line: 135, baseType: !572, size: 64, offset: 640)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1162, file: !1160, line: 136, baseType: !1198, size: 64, offset: 704)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1160, line: 82, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!572, !572, !1024, !1024}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1162, file: !1160, line: 137, baseType: !1203, size: 64, offset: 768)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1160, line: 83, baseType: !1204)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{null, !572, !572}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1162, file: !1160, line: 141, baseType: !7, size: 32, offset: 832)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1156, file: !781, line: 48, baseType: !1209, size: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !483, line: 35, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !483, line: 35, size: 128, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1211, file: !483, line: 35, baseType: !1214, size: 128)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !483, line: 33, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !483, line: 33, size: 128, elements: !1216)
!1216 = !{!1217, !1218, !1219}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1215, file: !483, line: 33, baseType: !7, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1215, file: !483, line: 33, baseType: !7, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1215, file: !483, line: 33, baseType: !1220, size: 64, offset: 64)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !878, size: 64, elements: !666)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1156, file: !781, line: 51, baseType: !1222, size: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !6, line: 183, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !6, line: 183, size: 128, elements: !1225)
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1224, file: !6, line: 183, baseType: !1227, size: 128)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !6, line: 182, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !6, line: 182, size: 128, elements: !1229)
!1229 = !{!1230, !1231, !1232}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1228, file: !6, line: 182, baseType: !7, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1228, file: !6, line: 182, baseType: !7, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1228, file: !6, line: 182, baseType: !932, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1156, file: !781, line: 54, baseType: !583, size: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1156, file: !781, line: 57, baseType: !1235, size: 128, offset: 256)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1236, line: 31, size: 128, elements: !1237)
!1236 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1235, file: !1236, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1235, file: !1236, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1235, file: !1236, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1235, file: !1236, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1235, file: !1236, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1235, file: !1236, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1235, file: !1236, line: 56, baseType: !1245, size: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !584, line: 47, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1248, line: 75, size: 256, elements: !1249)
!1248 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1249 = !{!1250, !1262, !1263, !1264}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1247, file: !1248, line: 76, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1248, line: 68, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1248, line: 63, size: 320, elements: !1254)
!1254 = !{!1255, !1257, !1258, !1259}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !1248, line: 64, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1253, file: !1248, line: 65, baseType: !1256, size: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1253, file: !1248, line: 66, baseType: !7, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1253, file: !1248, line: 67, baseType: !1260, size: 128, offset: 192)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1261, size: 128, elements: !1100)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1248, line: 29, baseType: !637)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1247, file: !1248, line: 77, baseType: !1251, size: 64, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1247, file: !1248, line: 78, baseType: !7, size: 32, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1247, file: !1248, line: 79, baseType: !1265, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1248, line: 49, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1248, line: 45, size: 832, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1267, file: !1248, line: 46, baseType: !1256, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1267, file: !1248, line: 47, baseType: !1246, size: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1267, file: !1248, line: 48, baseType: !1272, size: 704, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1273, line: 164, size: 704, elements: !1274)
!1273 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1274 = !{!1275, !1276, !1286, !1287, !1288, !1289, !1290, !1291, !1295, !1299, !1300, !1301, !1302}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1272, file: !1273, line: 166, baseType: !639, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1272, file: !1273, line: 167, baseType: !1277, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1273, line: 157, size: 192, elements: !1279)
!1279 = !{!1280, !1281, !1282}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1278, file: !1273, line: 159, baseType: !570, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1278, file: !1273, line: 160, baseType: !1277, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1278, file: !1273, line: 161, baseType: !1283, size: 32, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 32, elements: !1284)
!1284 = !{!1285}
!1285 = !DISubrange(count: 4)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1272, file: !1273, line: 168, baseType: !570, size: 64, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1272, file: !1273, line: 169, baseType: !570, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1272, file: !1273, line: 170, baseType: !570, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1272, file: !1273, line: 171, baseType: !639, size: 64, offset: 320)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1272, file: !1273, line: 172, baseType: !568, size: 32, offset: 384)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1272, file: !1273, line: 176, baseType: !1292, size: 64, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!1277, !572, !639}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1272, file: !1273, line: 177, baseType: !1296, size: 64, offset: 512)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !572, !1277}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1272, file: !1273, line: 178, baseType: !572, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1272, file: !1273, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1272, file: !1273, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1272, file: !1273, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1156, file: !781, line: 60, baseType: !1235, size: 128, offset: 384)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1156, file: !781, line: 64, baseType: !1305, size: 64, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1307, line: 33, flags: DIFlagFwdDecl)
!1307 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1156, file: !781, line: 67, baseType: !583, size: 64, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1156, file: !781, line: 73, baseType: !1159, size: 64, offset: 640)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1156, file: !781, line: 77, baseType: !1245, size: 64, offset: 704)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1156, file: !781, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1156, file: !781, line: 82, baseType: !1313, size: 320, offset: 832)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !909, line: 62, size: 320, elements: !1314)
!1314 = !{!1315, !1321, !1322, !1323, !1324, !1325}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1313, file: !909, line: 63, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !909, line: 56, size: 128, elements: !1318)
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1317, file: !909, line: 57, baseType: !1316, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1317, file: !909, line: 58, baseType: !665, size: 8, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1313, file: !909, line: 64, baseType: !7, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1313, file: !909, line: 66, baseType: !7, size: 32, offset: 96)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1313, file: !909, line: 68, baseType: !567, size: 8, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1313, file: !909, line: 70, baseType: !907, size: 64, offset: 192)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1313, file: !909, line: 71, baseType: !915, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !830, file: !831, line: 476, baseType: !1327, size: 64, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !831, line: 476, flags: DIFlagFwdDecl)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !830, file: !831, line: 479, baseType: !1159, size: 64, offset: 320)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !830, file: !831, line: 484, baseType: !583, size: 64, offset: 384)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !830, file: !831, line: 488, baseType: !583, size: 64, offset: 448)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !830, file: !831, line: 493, baseType: !583, size: 64, offset: 512)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !830, file: !831, line: 496, baseType: !583, size: 64, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !830, file: !831, line: 501, baseType: !1335, size: 64, offset: 640)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !213, line: 2355, size: 576, elements: !1337)
!1337 = !{!1338, !1341, !1342, !1343, !1344, !1346, !1347, !1352, !1353, !1354, !1355, !1356, !1357}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1336, file: !213, line: 2356, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !213, line: 2356, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1336, file: !213, line: 2357, baseType: !573, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1336, file: !213, line: 2358, baseType: !568, size: 32, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1336, file: !213, line: 2359, baseType: !568, size: 32, offset: 160)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1336, file: !213, line: 2360, baseType: !1345, size: 128, offset: 192)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 128, elements: !1284)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1336, file: !213, line: 2364, baseType: !568, size: 32, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1336, file: !213, line: 2367, baseType: !1348, size: 128, offset: 384)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !213, line: 2349, size: 128, elements: !1349)
!1349 = !{!1350, !1351}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1348, file: !213, line: 2351, baseType: !742, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1348, file: !213, line: 2352, baseType: !639, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1336, file: !213, line: 2371, baseType: !212, size: 32, offset: 512)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1336, file: !213, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1336, file: !213, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1336, file: !213, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1336, file: !213, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1336, file: !213, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !830, file: !831, line: 504, baseType: !1359, size: 64, offset: 704)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !831, line: 504, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !830, file: !831, line: 507, baseType: !1159, size: 64, offset: 768)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !830, file: !831, line: 510, baseType: !568, size: 32, offset: 832)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !830, file: !831, line: 513, baseType: !568, size: 32, offset: 864)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !830, file: !831, line: 516, baseType: !692, size: 32, offset: 896)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !830, file: !831, line: 519, baseType: !692, size: 32, offset: 928)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !830, file: !831, line: 522, baseType: !7, size: 32, offset: 960)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !830, file: !831, line: 523, baseType: !7, size: 32, offset: 992)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !830, file: !831, line: 528, baseType: !573, size: 64, offset: 1024)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !830, file: !831, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !830, file: !831, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !830, file: !831, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !830, file: !831, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !830, file: !831, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !830, file: !831, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !830, file: !831, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !830, file: !831, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !830, file: !831, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !830, file: !831, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !830, file: !831, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !830, file: !831, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !830, file: !831, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !830, file: !831, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !830, file: !831, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !830, file: !831, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !825, file: !6, line: 3254, baseType: !583, size: 64, offset: 1536)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !825, file: !6, line: 3257, baseType: !583, size: 64, offset: 1600)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !825, file: !6, line: 3258, baseType: !583, size: 64, offset: 1664)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !825, file: !6, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !825, file: !6, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !825, file: !6, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !825, file: !6, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !825, file: !6, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !825, file: !6, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !825, file: !6, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !825, file: !6, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !825, file: !6, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !825, file: !6, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !825, file: !6, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !825, file: !6, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !825, file: !6, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !825, file: !6, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !825, file: !6, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !825, file: !6, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !825, file: !6, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !825, file: !6, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !586, file: !6, line: 3394, baseType: !1407, size: 1344)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !6, line: 2279, size: 1344, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1434, !1435, !1436, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1407, file: !6, line: 2280, baseType: !622, size: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1407, file: !6, line: 2281, baseType: !583, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1407, file: !6, line: 2282, baseType: !583, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1407, file: !6, line: 2283, baseType: !583, size: 64, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1407, file: !6, line: 2284, baseType: !583, size: 64, offset: 384)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1407, file: !6, line: 2285, baseType: !7, size: 32, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1407, file: !6, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1407, file: !6, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1407, file: !6, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1407, file: !6, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1407, file: !6, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1407, file: !6, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1407, file: !6, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1407, file: !6, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1407, file: !6, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1407, file: !6, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1407, file: !6, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1407, file: !6, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1407, file: !6, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1407, file: !6, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1407, file: !6, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1407, file: !6, line: 2305, baseType: !7, size: 32, offset: 512)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1407, file: !6, line: 2306, baseType: !1432, size: 32, offset: 544)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1433, line: 31, baseType: !568)
!1433 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1407, file: !6, line: 2307, baseType: !583, size: 64, offset: 576)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1407, file: !6, line: 2308, baseType: !583, size: 64, offset: 640)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1407, file: !6, line: 2314, baseType: !1437, size: 64, offset: 704)
!1437 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !6, line: 2309, size: 64, elements: !1438)
!1438 = !{!1439, !1440, !1441}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1437, file: !6, line: 2310, baseType: !568, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1437, file: !6, line: 2311, baseType: !573, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1437, file: !6, line: 2312, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !6, line: 2277, flags: DIFlagFwdDecl)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1407, file: !6, line: 2315, baseType: !583, size: 64, offset: 768)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1407, file: !6, line: 2316, baseType: !583, size: 64, offset: 832)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1407, file: !6, line: 2317, baseType: !583, size: 64, offset: 896)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1407, file: !6, line: 2318, baseType: !583, size: 64, offset: 960)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1407, file: !6, line: 2319, baseType: !583, size: 64, offset: 1024)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1407, file: !6, line: 2320, baseType: !583, size: 64, offset: 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1407, file: !6, line: 2321, baseType: !583, size: 64, offset: 1152)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1407, file: !6, line: 2322, baseType: !583, size: 64, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1407, file: !6, line: 2324, baseType: !1453, size: 64, offset: 1280)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !6, line: 2324, flags: DIFlagFwdDecl)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !586, file: !6, line: 3395, baseType: !1456, size: 320)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !6, line: 1469, size: 320, elements: !1457)
!1457 = !{!1458, !1459, !1460}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1456, file: !6, line: 1470, baseType: !622, size: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1456, file: !6, line: 1471, baseType: !583, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1456, file: !6, line: 1472, baseType: !583, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !586, file: !6, line: 3396, baseType: !1462, size: 320)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !6, line: 1482, size: 320, elements: !1463)
!1463 = !{!1464, !1465, !1466}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1462, file: !6, line: 1483, baseType: !622, size: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1462, file: !6, line: 1484, baseType: !568, size: 32, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1462, file: !6, line: 1485, baseType: !932, size: 64, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !586, file: !6, line: 3397, baseType: !1468, size: 384)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !6, line: 1829, size: 384, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1468, file: !6, line: 1830, baseType: !622, size: 192)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1468, file: !6, line: 1831, baseType: !692, size: 32, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1468, file: !6, line: 1832, baseType: !583, size: 64, offset: 256)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1468, file: !6, line: 1835, baseType: !932, size: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !586, file: !6, line: 3398, baseType: !1475, size: 704)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !6, line: 1898, size: 704, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1486}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1475, file: !6, line: 1899, baseType: !622, size: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1475, file: !6, line: 1902, baseType: !583, size: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1475, file: !6, line: 1905, baseType: !878, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1475, file: !6, line: 1908, baseType: !7, size: 32, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1475, file: !6, line: 1911, baseType: !1482, size: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !781, line: 117, size: 128, elements: !1484)
!1484 = !{!1485}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1483, file: !781, line: 120, baseType: !1235, size: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1475, file: !6, line: 1914, baseType: !920, size: 256, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !586, file: !6, line: 3399, baseType: !1488, size: 704)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !6, line: 2008, size: 704, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1488, file: !6, line: 2009, baseType: !622, size: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1488, file: !6, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1488, file: !6, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1488, file: !6, line: 2014, baseType: !692, size: 32, offset: 224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1488, file: !6, line: 2016, baseType: !583, size: 64, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1488, file: !6, line: 2017, baseType: !1222, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1488, file: !6, line: 2019, baseType: !583, size: 64, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1488, file: !6, line: 2020, baseType: !583, size: 64, offset: 448)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1488, file: !6, line: 2021, baseType: !583, size: 64, offset: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1488, file: !6, line: 2022, baseType: !583, size: 64, offset: 576)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1488, file: !6, line: 2023, baseType: !583, size: 64, offset: 640)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !586, file: !6, line: 3400, baseType: !1502, size: 832)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !6, line: 2430, size: 832, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1502, file: !6, line: 2431, baseType: !622, size: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1502, file: !6, line: 2433, baseType: !583, size: 64, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1502, file: !6, line: 2434, baseType: !583, size: 64, offset: 256)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1502, file: !6, line: 2435, baseType: !583, size: 64, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1502, file: !6, line: 2436, baseType: !583, size: 64, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1502, file: !6, line: 2437, baseType: !1222, size: 64, offset: 448)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1502, file: !6, line: 2438, baseType: !583, size: 64, offset: 512)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1502, file: !6, line: 2440, baseType: !583, size: 64, offset: 576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1502, file: !6, line: 2441, baseType: !583, size: 64, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1502, file: !6, line: 2443, baseType: !1514, size: 128, offset: 704)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !6, line: 182, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !6, line: 182, size: 128, elements: !1516)
!1516 = !{!1517}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1515, file: !6, line: 182, baseType: !1227, size: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !586, file: !6, line: 3401, baseType: !1519, size: 320)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !6, line: 3327, size: 320, elements: !1520)
!1520 = !{!1521, !1522, !1529}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1519, file: !6, line: 3329, baseType: !622, size: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1519, file: !6, line: 3330, baseType: !1523, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !6, line: 3320, size: 192, elements: !1525)
!1525 = !{!1526, !1527, !1528}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1524, file: !6, line: 3322, baseType: !1523, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1524, file: !6, line: 3323, baseType: !1523, size: 64, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1524, file: !6, line: 3324, baseType: !583, size: 64, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1519, file: !6, line: 3331, baseType: !1523, size: 64, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !586, file: !6, line: 3402, baseType: !1531, size: 256)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !6, line: 1540, size: 256, elements: !1532)
!1532 = !{!1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1531, file: !6, line: 1541, baseType: !622, size: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1531, file: !6, line: 1542, baseType: !1535, size: 64, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !6, line: 1538, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !6, line: 1538, size: 192, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1537, file: !6, line: 1538, baseType: !1540, size: 192)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !6, line: 1537, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !6, line: 1537, size: 192, elements: !1542)
!1542 = !{!1543, !1544, !1545}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1541, file: !6, line: 1537, baseType: !7, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1541, file: !6, line: 1537, baseType: !7, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1541, file: !6, line: 1537, baseType: !1546, size: 128, offset: 64)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 128, elements: !666)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !6, line: 1535, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !6, line: 1532, size: 128, elements: !1549)
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1548, file: !6, line: 1533, baseType: !583, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1548, file: !6, line: 1534, baseType: !583, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !586, file: !6, line: 3403, baseType: !1553, size: 512)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !6, line: 1938, size: 512, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1564, !1565, !1566}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1553, file: !6, line: 1939, baseType: !622, size: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1553, file: !6, line: 1940, baseType: !692, size: 32, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1553, file: !6, line: 1941, baseType: !217, size: 32, offset: 224)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1553, file: !6, line: 1946, baseType: !1559, size: 32, offset: 256)
!1559 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !6, line: 1942, size: 32, elements: !1560)
!1560 = !{!1561, !1562, !1563}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1559, file: !6, line: 1943, baseType: !235, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1559, file: !6, line: 1944, baseType: !242, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1559, file: !6, line: 1945, baseType: !5, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1553, file: !6, line: 1950, baseType: !868, size: 64, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1553, file: !6, line: 1951, baseType: !868, size: 64, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1553, file: !6, line: 1953, baseType: !932, size: 64, offset: 448)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !586, file: !6, line: 3404, baseType: !1568, size: 1664)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !6, line: 3337, size: 1664, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1568, file: !6, line: 3338, baseType: !622, size: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1568, file: !6, line: 3341, baseType: !1572, size: 1472, offset: 192)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1573, line: 410, size: 1472, elements: !1574)
!1573 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1572, file: !1573, line: 412, baseType: !568, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1572, file: !1573, line: 413, baseType: !568, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1572, file: !1573, line: 414, baseType: !568, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1572, file: !1573, line: 415, baseType: !568, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1572, file: !1573, line: 416, baseType: !568, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1572, file: !1573, line: 417, baseType: !568, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1572, file: !1573, line: 418, baseType: !567, size: 8, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1572, file: !1573, line: 419, baseType: !567, size: 8, offset: 200)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1572, file: !1573, line: 420, baseType: !1584, size: 8, offset: 208)
!1584 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1572, file: !1573, line: 421, baseType: !1584, size: 8, offset: 216)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1572, file: !1573, line: 422, baseType: !1584, size: 8, offset: 224)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1572, file: !1573, line: 423, baseType: !1584, size: 8, offset: 232)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1572, file: !1573, line: 424, baseType: !1584, size: 8, offset: 240)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1572, file: !1573, line: 425, baseType: !1584, size: 8, offset: 248)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1572, file: !1573, line: 426, baseType: !1584, size: 8, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1572, file: !1573, line: 427, baseType: !1584, size: 8, offset: 264)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1572, file: !1573, line: 428, baseType: !1584, size: 8, offset: 272)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1572, file: !1573, line: 429, baseType: !1584, size: 8, offset: 280)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1572, file: !1573, line: 430, baseType: !1584, size: 8, offset: 288)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1572, file: !1573, line: 431, baseType: !1584, size: 8, offset: 296)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1572, file: !1573, line: 432, baseType: !1584, size: 8, offset: 304)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1572, file: !1573, line: 433, baseType: !1584, size: 8, offset: 312)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1572, file: !1573, line: 434, baseType: !1584, size: 8, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1572, file: !1573, line: 435, baseType: !1584, size: 8, offset: 328)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1572, file: !1573, line: 436, baseType: !1584, size: 8, offset: 336)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1572, file: !1573, line: 437, baseType: !1584, size: 8, offset: 344)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1572, file: !1573, line: 438, baseType: !1584, size: 8, offset: 352)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1572, file: !1573, line: 439, baseType: !1584, size: 8, offset: 360)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1572, file: !1573, line: 440, baseType: !1584, size: 8, offset: 368)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1572, file: !1573, line: 441, baseType: !1584, size: 8, offset: 376)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1572, file: !1573, line: 442, baseType: !1584, size: 8, offset: 384)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1572, file: !1573, line: 443, baseType: !1584, size: 8, offset: 392)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1572, file: !1573, line: 444, baseType: !1584, size: 8, offset: 400)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1572, file: !1573, line: 445, baseType: !1584, size: 8, offset: 408)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1572, file: !1573, line: 446, baseType: !1584, size: 8, offset: 416)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1572, file: !1573, line: 447, baseType: !1584, size: 8, offset: 424)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1572, file: !1573, line: 448, baseType: !1584, size: 8, offset: 432)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1572, file: !1573, line: 449, baseType: !1584, size: 8, offset: 440)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1572, file: !1573, line: 450, baseType: !1584, size: 8, offset: 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1572, file: !1573, line: 451, baseType: !1584, size: 8, offset: 456)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1572, file: !1573, line: 452, baseType: !1584, size: 8, offset: 464)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1572, file: !1573, line: 453, baseType: !1584, size: 8, offset: 472)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1572, file: !1573, line: 454, baseType: !1584, size: 8, offset: 480)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1572, file: !1573, line: 455, baseType: !1584, size: 8, offset: 488)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1572, file: !1573, line: 456, baseType: !1584, size: 8, offset: 496)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1572, file: !1573, line: 457, baseType: !1584, size: 8, offset: 504)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1572, file: !1573, line: 458, baseType: !1584, size: 8, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1572, file: !1573, line: 459, baseType: !1584, size: 8, offset: 520)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1572, file: !1573, line: 460, baseType: !1584, size: 8, offset: 528)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1572, file: !1573, line: 461, baseType: !1584, size: 8, offset: 536)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1572, file: !1573, line: 462, baseType: !1584, size: 8, offset: 544)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1572, file: !1573, line: 463, baseType: !1584, size: 8, offset: 552)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1572, file: !1573, line: 464, baseType: !1584, size: 8, offset: 560)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1572, file: !1573, line: 465, baseType: !1584, size: 8, offset: 568)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1572, file: !1573, line: 466, baseType: !1584, size: 8, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1572, file: !1573, line: 467, baseType: !1584, size: 8, offset: 584)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1572, file: !1573, line: 468, baseType: !1584, size: 8, offset: 592)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1572, file: !1573, line: 469, baseType: !1584, size: 8, offset: 600)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1572, file: !1573, line: 470, baseType: !1584, size: 8, offset: 608)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1572, file: !1573, line: 471, baseType: !1584, size: 8, offset: 616)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1572, file: !1573, line: 472, baseType: !1584, size: 8, offset: 624)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1572, file: !1573, line: 473, baseType: !1584, size: 8, offset: 632)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1572, file: !1573, line: 474, baseType: !1584, size: 8, offset: 640)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1572, file: !1573, line: 475, baseType: !1584, size: 8, offset: 648)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1572, file: !1573, line: 476, baseType: !1584, size: 8, offset: 656)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1572, file: !1573, line: 477, baseType: !1584, size: 8, offset: 664)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1572, file: !1573, line: 478, baseType: !1584, size: 8, offset: 672)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1572, file: !1573, line: 479, baseType: !1584, size: 8, offset: 680)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1572, file: !1573, line: 480, baseType: !1584, size: 8, offset: 688)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1572, file: !1573, line: 481, baseType: !1584, size: 8, offset: 696)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1572, file: !1573, line: 482, baseType: !1584, size: 8, offset: 704)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1572, file: !1573, line: 483, baseType: !1584, size: 8, offset: 712)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1572, file: !1573, line: 484, baseType: !1584, size: 8, offset: 720)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1572, file: !1573, line: 485, baseType: !1584, size: 8, offset: 728)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1572, file: !1573, line: 486, baseType: !1584, size: 8, offset: 736)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1572, file: !1573, line: 487, baseType: !1584, size: 8, offset: 744)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1572, file: !1573, line: 488, baseType: !1584, size: 8, offset: 752)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1572, file: !1573, line: 489, baseType: !1584, size: 8, offset: 760)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1572, file: !1573, line: 490, baseType: !1584, size: 8, offset: 768)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1572, file: !1573, line: 491, baseType: !1584, size: 8, offset: 776)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1572, file: !1573, line: 492, baseType: !1584, size: 8, offset: 784)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1572, file: !1573, line: 493, baseType: !1584, size: 8, offset: 792)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1572, file: !1573, line: 494, baseType: !1584, size: 8, offset: 800)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1572, file: !1573, line: 495, baseType: !1584, size: 8, offset: 808)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1572, file: !1573, line: 496, baseType: !1584, size: 8, offset: 816)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1572, file: !1573, line: 497, baseType: !1584, size: 8, offset: 824)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1572, file: !1573, line: 498, baseType: !1584, size: 8, offset: 832)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1572, file: !1573, line: 499, baseType: !1584, size: 8, offset: 840)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1572, file: !1573, line: 500, baseType: !1584, size: 8, offset: 848)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1572, file: !1573, line: 501, baseType: !1584, size: 8, offset: 856)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1572, file: !1573, line: 502, baseType: !1584, size: 8, offset: 864)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1572, file: !1573, line: 503, baseType: !1584, size: 8, offset: 872)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1572, file: !1573, line: 504, baseType: !1584, size: 8, offset: 880)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1572, file: !1573, line: 505, baseType: !1584, size: 8, offset: 888)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1572, file: !1573, line: 506, baseType: !1584, size: 8, offset: 896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1572, file: !1573, line: 507, baseType: !1584, size: 8, offset: 904)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1572, file: !1573, line: 508, baseType: !1584, size: 8, offset: 912)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1572, file: !1573, line: 509, baseType: !1584, size: 8, offset: 920)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1572, file: !1573, line: 510, baseType: !1584, size: 8, offset: 928)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1572, file: !1573, line: 511, baseType: !1584, size: 8, offset: 936)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1572, file: !1573, line: 512, baseType: !1584, size: 8, offset: 944)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1572, file: !1573, line: 513, baseType: !1584, size: 8, offset: 952)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1572, file: !1573, line: 514, baseType: !1584, size: 8, offset: 960)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1572, file: !1573, line: 515, baseType: !1584, size: 8, offset: 968)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1572, file: !1573, line: 516, baseType: !1584, size: 8, offset: 976)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1572, file: !1573, line: 517, baseType: !1584, size: 8, offset: 984)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1572, file: !1573, line: 518, baseType: !1584, size: 8, offset: 992)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1572, file: !1573, line: 519, baseType: !1584, size: 8, offset: 1000)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1572, file: !1573, line: 520, baseType: !1584, size: 8, offset: 1008)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1572, file: !1573, line: 521, baseType: !1584, size: 8, offset: 1016)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1572, file: !1573, line: 522, baseType: !1584, size: 8, offset: 1024)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1572, file: !1573, line: 523, baseType: !1584, size: 8, offset: 1032)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1572, file: !1573, line: 524, baseType: !1584, size: 8, offset: 1040)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1572, file: !1573, line: 525, baseType: !1584, size: 8, offset: 1048)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1572, file: !1573, line: 526, baseType: !1584, size: 8, offset: 1056)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1572, file: !1573, line: 527, baseType: !1584, size: 8, offset: 1064)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1572, file: !1573, line: 528, baseType: !1584, size: 8, offset: 1072)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1572, file: !1573, line: 529, baseType: !1584, size: 8, offset: 1080)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1572, file: !1573, line: 530, baseType: !1584, size: 8, offset: 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1572, file: !1573, line: 531, baseType: !1584, size: 8, offset: 1096)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1572, file: !1573, line: 532, baseType: !1584, size: 8, offset: 1104)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1572, file: !1573, line: 533, baseType: !1584, size: 8, offset: 1112)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1572, file: !1573, line: 534, baseType: !1584, size: 8, offset: 1120)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1572, file: !1573, line: 535, baseType: !1584, size: 8, offset: 1128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1572, file: !1573, line: 536, baseType: !1584, size: 8, offset: 1136)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1572, file: !1573, line: 537, baseType: !1584, size: 8, offset: 1144)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1572, file: !1573, line: 538, baseType: !1584, size: 8, offset: 1152)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1572, file: !1573, line: 539, baseType: !1584, size: 8, offset: 1160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1572, file: !1573, line: 540, baseType: !1584, size: 8, offset: 1168)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1572, file: !1573, line: 541, baseType: !1584, size: 8, offset: 1176)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1572, file: !1573, line: 542, baseType: !1584, size: 8, offset: 1184)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1572, file: !1573, line: 543, baseType: !1584, size: 8, offset: 1192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1572, file: !1573, line: 544, baseType: !1584, size: 8, offset: 1200)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1572, file: !1573, line: 545, baseType: !1584, size: 8, offset: 1208)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1572, file: !1573, line: 546, baseType: !1584, size: 8, offset: 1216)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1572, file: !1573, line: 547, baseType: !1584, size: 8, offset: 1224)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1572, file: !1573, line: 548, baseType: !1584, size: 8, offset: 1232)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1572, file: !1573, line: 549, baseType: !1584, size: 8, offset: 1240)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1572, file: !1573, line: 550, baseType: !1584, size: 8, offset: 1248)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1572, file: !1573, line: 551, baseType: !1584, size: 8, offset: 1256)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1572, file: !1573, line: 552, baseType: !1584, size: 8, offset: 1264)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1572, file: !1573, line: 553, baseType: !1584, size: 8, offset: 1272)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1572, file: !1573, line: 554, baseType: !1584, size: 8, offset: 1280)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1572, file: !1573, line: 555, baseType: !1584, size: 8, offset: 1288)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1572, file: !1573, line: 556, baseType: !1584, size: 8, offset: 1296)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1572, file: !1573, line: 557, baseType: !1584, size: 8, offset: 1304)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1572, file: !1573, line: 558, baseType: !1584, size: 8, offset: 1312)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1572, file: !1573, line: 559, baseType: !1584, size: 8, offset: 1320)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1572, file: !1573, line: 560, baseType: !1584, size: 8, offset: 1328)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1572, file: !1573, line: 561, baseType: !1584, size: 8, offset: 1336)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1572, file: !1573, line: 562, baseType: !1584, size: 8, offset: 1344)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1572, file: !1573, line: 563, baseType: !1584, size: 8, offset: 1352)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1572, file: !1573, line: 564, baseType: !1584, size: 8, offset: 1360)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1572, file: !1573, line: 565, baseType: !1584, size: 8, offset: 1368)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1572, file: !1573, line: 566, baseType: !1584, size: 8, offset: 1376)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1572, file: !1573, line: 567, baseType: !1584, size: 8, offset: 1384)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1572, file: !1573, line: 568, baseType: !1584, size: 8, offset: 1392)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1572, file: !1573, line: 569, baseType: !1584, size: 8, offset: 1400)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1572, file: !1573, line: 570, baseType: !1584, size: 8, offset: 1408)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1572, file: !1573, line: 571, baseType: !1584, size: 8, offset: 1416)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1572, file: !1573, line: 572, baseType: !1584, size: 8, offset: 1424)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1572, file: !1573, line: 573, baseType: !1584, size: 8, offset: 1432)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1572, file: !1573, line: 574, baseType: !1584, size: 8, offset: 1440)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !586, file: !6, line: 3405, baseType: !1740, size: 384)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !6, line: 3352, size: 384, elements: !1741)
!1741 = !{!1742, !1743}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1740, file: !6, line: 3353, baseType: !622, size: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1740, file: !6, line: 3356, baseType: !1744, size: 192, offset: 192)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1573, line: 578, size: 192, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1744, file: !1573, line: 580, baseType: !568, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1744, file: !1573, line: 581, baseType: !568, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1744, file: !1573, line: 582, baseType: !568, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1744, file: !1573, line: 583, baseType: !568, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1744, file: !1573, line: 584, baseType: !567, size: 8, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1744, file: !1573, line: 585, baseType: !567, size: 8, offset: 136)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1744, file: !1573, line: 586, baseType: !567, size: 8, offset: 144)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1744, file: !1573, line: 587, baseType: !567, size: 8, offset: 152)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1744, file: !1573, line: 588, baseType: !567, size: 8, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1744, file: !1573, line: 589, baseType: !567, size: 8, offset: 168)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1744, file: !1573, line: 590, baseType: !567, size: 8, offset: 176)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !580, file: !250, line: 183, baseType: !1758, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !250, line: 314, size: 768, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1772, !1773, !1774, !1775, !1777, !1778, !1779}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1759, file: !250, line: 316, baseType: !1090, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !1759, file: !250, line: 317, baseType: !579, size: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !1759, file: !250, line: 318, baseType: !579, size: 64, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !1759, file: !250, line: 319, baseType: !1758, size: 64, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !1759, file: !250, line: 320, baseType: !1758, size: 64, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !1759, file: !250, line: 321, baseType: !1758, size: 64, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !1759, file: !250, line: 322, baseType: !1758, size: 64, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !1759, file: !250, line: 323, baseType: !878, size: 64, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1759, file: !250, line: 324, baseType: !572, size: 64, offset: 512)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !1759, file: !250, line: 327, baseType: !1771, size: 32, offset: 576)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !250, line: 312, baseType: !249)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !1759, file: !250, line: 330, baseType: !7, size: 32, offset: 608)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1759, file: !250, line: 334, baseType: !568, size: 32, offset: 640)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1759, file: !250, line: 336, baseType: !568, size: 32, offset: 672)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1759, file: !250, line: 338, baseType: !1776, size: 16, offset: 704)
!1776 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !1759, file: !250, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !1759, file: !250, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !1759, file: !250, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !580, file: !250, line: 184, baseType: !1758, size: 64, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !580, file: !250, line: 185, baseType: !579, size: 64, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !580, file: !250, line: 186, baseType: !579, size: 64, offset: 256)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !580, file: !250, line: 188, baseType: !579, size: 64, offset: 320)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !580, file: !250, line: 190, baseType: !579, size: 64, offset: 384)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !580, file: !250, line: 192, baseType: !579, size: 64, offset: 448)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !580, file: !250, line: 194, baseType: !579, size: 64, offset: 512)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !580, file: !250, line: 196, baseType: !579, size: 64, offset: 576)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !580, file: !250, line: 197, baseType: !579, size: 64, offset: 640)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !580, file: !250, line: 198, baseType: !579, size: 64, offset: 704)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !580, file: !250, line: 199, baseType: !579, size: 64, offset: 768)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !580, file: !250, line: 202, baseType: !579, size: 64, offset: 832)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !580, file: !250, line: 204, baseType: !579, size: 64, offset: 896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !580, file: !250, line: 207, baseType: !1159, size: 64, offset: 960)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !580, file: !250, line: 209, baseType: !572, size: 64, offset: 1024)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !580, file: !250, line: 214, baseType: !1796, size: 64, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !831, line: 177, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !831, line: 177, size: 128, elements: !1799)
!1799 = !{!1800}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1798, file: !831, line: 177, baseType: !1801, size: 128)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !831, line: 176, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !831, line: 176, size: 128, elements: !1803)
!1803 = !{!1804, !1805, !1806}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1802, file: !831, line: 176, baseType: !7, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1802, file: !831, line: 176, baseType: !7, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1802, file: !831, line: 176, baseType: !1807, size: 64, offset: 64)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 64, elements: !666)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !831, line: 174, baseType: !1809)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !273, line: 173, size: 1152, elements: !1811)
!1811 = !{!1812, !1836, !1840, !1863, !1864, !1868, !1873, !1874, !1878}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1810, file: !273, line: 175, baseType: !1813, size: 640)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !273, line: 114, size: 640, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1821, !1825, !1827, !1828, !1829, !1831, !1832, !1833, !1834, !1835}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1813, file: !273, line: 117, baseType: !272, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1813, file: !273, line: 121, baseType: !573, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1813, file: !273, line: 125, baseType: !1818, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!567}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1813, file: !273, line: 130, baseType: !1822, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!7}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1813, file: !273, line: 133, baseType: !1826, size: 64, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1813, file: !273, line: 136, baseType: !1826, size: 64, offset: 320)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1813, file: !273, line: 139, baseType: !568, size: 32, offset: 384)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1813, file: !273, line: 143, baseType: !1830, size: 32, offset: 416)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !280, line: 80, baseType: !279)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1813, file: !273, line: 146, baseType: !7, size: 32, offset: 448)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1813, file: !273, line: 147, baseType: !7, size: 32, offset: 480)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1813, file: !273, line: 148, baseType: !7, size: 32, offset: 512)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1813, file: !273, line: 151, baseType: !7, size: 32, offset: 544)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1813, file: !273, line: 152, baseType: !7, size: 32, offset: 576)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !1810, file: !273, line: 179, baseType: !1837, size: 64, offset: 640)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{null}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !1810, file: !273, line: 182, baseType: !1841, size: 64, offset: 704)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{null, !1844}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !250, line: 276, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1862}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !1845, file: !250, line: 278, baseType: !1159, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1845, file: !250, line: 279, baseType: !1849, size: 64, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !250, line: 272, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !250, line: 272, size: 128, elements: !1852)
!1852 = !{!1853}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1851, file: !250, line: 272, baseType: !1854, size: 128)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !250, line: 270, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !250, line: 270, size: 128, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1855, file: !250, line: 270, baseType: !7, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1855, file: !250, line: 270, baseType: !7, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1855, file: !250, line: 270, baseType: !1860, size: 64, offset: 64)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 64, elements: !666)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !250, line: 268, baseType: !579)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1845, file: !250, line: 280, baseType: !572, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !1810, file: !273, line: 187, baseType: !1837, size: 64, offset: 768)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !1810, file: !273, line: 188, baseType: !1865, size: 64, offset: 832)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{null, !579}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !1810, file: !273, line: 191, baseType: !1869, size: 64, offset: 896)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !579, !1872}
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !1810, file: !273, line: 195, baseType: !7, size: 32, offset: 960)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !1810, file: !273, line: 196, baseType: !1875, size: 64, offset: 1024)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!7, !579}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !1810, file: !273, line: 197, baseType: !1879, size: 64, offset: 1088)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !250, line: 358, size: 320, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1883, file: !250, line: 359, baseType: !583, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1883, file: !250, line: 361, baseType: !1882, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !1883, file: !250, line: 363, baseType: !1882, size: 64, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !1883, file: !250, line: 366, baseType: !1882, size: 64, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1883, file: !250, line: 368, baseType: !568, size: 32, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !1883, file: !250, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !1883, file: !250, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !1883, file: !250, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !1883, file: !250, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1883, file: !250, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !1883, file: !250, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1883, file: !250, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !580, file: !250, line: 216, baseType: !1898, size: 320, offset: 1152)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !250, line: 88, size: 320, elements: !1899)
!1899 = !{!1900, !1935, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !1898, file: !250, line: 90, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !469, line: 540, size: 512, elements: !1903)
!1903 = !{!1904, !1917, !1918, !1930, !1931, !1932, !1933, !1934}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "current_decl_state", scope: !1902, file: !469, line: 543, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_in_decl_state", file: !469, line: 502, size: 960, elements: !1907)
!1907 = !{!1908, !1916}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1906, file: !469, line: 505, baseType: !1909, size: 896)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1910, size: 896, elements: !1914)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_tree_ref_table", file: !469, line: 473, size: 128, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !1910, file: !469, line: 476, baseType: !913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1910, file: !469, line: 479, baseType: !7, size: 32, offset: 64)
!1914 = !{!1915}
!1915 = !DISubrange(count: 7)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !1906, file: !469, line: 509, baseType: !583, size: 64, offset: 896)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "global_decl_state", scope: !1902, file: !469, line: 547, baseType: !1905, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node_encoder", scope: !1902, file: !469, line: 550, baseType: !1919, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "lto_cgraph_encoder_t", file: !469, line: 470, baseType: !1920)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_cgraph_encoder_d", file: !469, line: 461, size: 128, elements: !1922)
!1922 = !{!1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1921, file: !469, line: 464, baseType: !1305, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1921, file: !469, line: 467, baseType: !1925, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_heap", file: !250, line: 271, baseType: !1927)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_heap", file: !250, line: 271, size: 128, elements: !1928)
!1928 = !{!1929}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1927, file: !250, line: 271, baseType: !1854, size: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl_states", scope: !1902, file: !469, line: 553, baseType: !1159, size: 64, offset: 192)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !1902, file: !469, line: 556, baseType: !573, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "needs_ltrans_p", scope: !1902, file: !469, line: 559, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "section_hash_table", scope: !1902, file: !469, line: 562, baseType: !1159, size: 64, offset: 384)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "renaming_hash_table", scope: !1902, file: !469, line: 565, baseType: !1159, size: 64, offset: 448)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !1898, file: !250, line: 92, baseType: !1936, size: 192, offset: 64)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !250, line: 57, size: 192, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941, !1942}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !1936, file: !250, line: 60, baseType: !639, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !1936, file: !250, line: 63, baseType: !568, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !1936, file: !250, line: 65, baseType: !568, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !1936, file: !250, line: 67, baseType: !568, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !1936, file: !250, line: 69, baseType: !568, size: 32, offset: 160)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1898, file: !250, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !1898, file: !250, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !1898, file: !250, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !1898, file: !250, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1898, file: !250, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !1898, file: !250, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !1898, file: !250, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !1898, file: !250, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !580, file: !250, line: 217, baseType: !1952, size: 320, offset: 1472)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !250, line: 126, size: 320, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1960}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !1952, file: !250, line: 128, baseType: !639, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !1952, file: !250, line: 130, baseType: !639, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !1952, file: !250, line: 134, baseType: !579, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1952, file: !250, line: 137, baseType: !568, size: 32, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1952, file: !250, line: 138, baseType: !568, size: 32, offset: 224)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !1952, file: !250, line: 141, baseType: !568, size: 32, offset: 256)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !1952, file: !250, line: 144, baseType: !567, size: 8, offset: 288)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !580, file: !250, line: 218, baseType: !1962, size: 32, offset: 1792)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !250, line: 150, size: 32, elements: !1963)
!1963 = !{!1964}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !1962, file: !250, line: 151, baseType: !7, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !580, file: !250, line: 219, baseType: !1966, size: 192, offset: 1856)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !250, line: 171, size: 192, elements: !1967)
!1967 = !{!1968, !1989, !1990}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !1966, file: !250, line: 173, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !250, line: 169, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !250, line: 169, size: 128, elements: !1972)
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1971, file: !250, line: 169, baseType: !1974, size: 128)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !250, line: 168, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !250, line: 168, size: 128, elements: !1976)
!1976 = !{!1977, !1978, !1979}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1975, file: !250, line: 168, baseType: !7, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1975, file: !250, line: 168, baseType: !7, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1975, file: !250, line: 168, baseType: !1980, size: 64, offset: 64)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1981, size: 64, elements: !666)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !250, line: 167, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !250, line: 156, size: 192, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !1983, file: !250, line: 159, baseType: !583, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !1983, file: !250, line: 161, baseType: !583, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !1983, file: !250, line: 163, baseType: !567, size: 8, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !1983, file: !250, line: 165, baseType: !567, size: 8, offset: 136)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !1966, file: !250, line: 174, baseType: !1245, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !1966, file: !250, line: 175, baseType: !1245, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !580, file: !250, line: 220, baseType: !1992, size: 256, offset: 2048)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !250, line: 74, size: 256, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997, !1998, !1999}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !1992, file: !250, line: 76, baseType: !639, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !1992, file: !250, line: 77, baseType: !639, size: 64, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1992, file: !250, line: 78, baseType: !583, size: 64, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !1992, file: !250, line: 79, baseType: !567, size: 8, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !1992, file: !250, line: 80, baseType: !567, size: 8, offset: 200)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !1992, file: !250, line: 82, baseType: !567, size: 8, offset: 208)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !580, file: !250, line: 223, baseType: !1090, size: 64, offset: 2304)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !580, file: !250, line: 225, baseType: !568, size: 32, offset: 2368)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !580, file: !250, line: 227, baseType: !568, size: 32, offset: 2400)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !580, file: !250, line: 231, baseType: !568, size: 32, offset: 2432)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !580, file: !250, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !580, file: !250, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !580, file: !250, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !580, file: !250, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !580, file: !250, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !580, file: !250, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !580, file: !250, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !580, file: !250, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !580, file: !250, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !580, file: !250, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !576, file: !456, line: 393, baseType: !575, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_param_descriptor", file: !456, line: 165, size: 256, elements: !2017)
!2017 = !{!2018, !2023, !2024}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ipcp_lattice", scope: !2016, file: !456, line: 168, baseType: !2019, size: 128)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipcp_lattice", file: !456, line: 132, size: 128, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2019, file: !456, line: 134, baseType: !455, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !2019, file: !456, line: 135, baseType: !583, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2016, file: !456, line: 170, baseType: !583, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !2016, file: !456, line: 172, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_jump_func", file: !456, line: 114, size: 256, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2026, file: !456, line: 116, baseType: !461, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2026, file: !456, line: 126, baseType: !2030, size: 192, offset: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "jump_func_value", file: !456, line: 120, size: 192, elements: !2031)
!2031 = !{!2032, !2033, !2039, !2045}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !2030, file: !456, line: 122, baseType: !583, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pass_through", scope: !2030, file: !456, line: 123, baseType: !2034, size: 128)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_pass_through_data", file: !456, line: 76, size: 128, elements: !2035)
!2035 = !{!2036, !2037, !2038}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "operand", scope: !2034, file: !456, line: 80, baseType: !583, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "formal_id", scope: !2034, file: !456, line: 82, baseType: !568, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "operation", scope: !2034, file: !456, line: 87, baseType: !5, size: 32, offset: 96)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ancestor", scope: !2030, file: !456, line: 124, baseType: !2040, size: 192)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_ancestor_jf_data", file: !456, line: 93, size: 192, elements: !2041)
!2041 = !{!2042, !2043, !2044}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2040, file: !456, line: 96, baseType: !639, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2040, file: !456, line: 98, baseType: !583, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "formal_id", scope: !2040, file: !456, line: 100, baseType: !568, size: 32, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "member_cst", scope: !2030, file: !456, line: 125, baseType: !2046, size: 128)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_member_ptr_cst", file: !456, line: 105, size: 128, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pfn", scope: !2046, file: !456, line: 107, baseType: !583, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2046, file: !456, line: 108, baseType: !583, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_node_params", file: !456, line: 178, size: 384, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2067, !2068, !2069, !2070, !2071, !2072}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !2051, file: !456, line: 183, baseType: !568, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !2051, file: !456, line: 186, baseType: !2015, size: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "param_calls", scope: !2051, file: !456, line: 188, baseType: !2056, size: 64, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_param_call_note", file: !456, line: 141, size: 320, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2057, file: !456, line: 144, baseType: !1090, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2057, file: !456, line: 146, baseType: !2056, size: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2057, file: !456, line: 148, baseType: !878, size: 64, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2057, file: !456, line: 150, baseType: !7, size: 32, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "formal_id", scope: !2057, file: !456, line: 152, baseType: !568, size: 32, offset: 224)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2057, file: !456, line: 155, baseType: !568, size: 32, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2057, file: !456, line: 157, baseType: !1776, size: 16, offset: 288)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "processed", scope: !2057, file: !456, line: 161, baseType: !567, size: 8, offset: 304)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "ipcp_orig_node", scope: !2051, file: !456, line: 191, baseType: !579, size: 64, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "count_scale", scope: !2051, file: !456, line: 197, baseType: !1090, size: 64, offset: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "called_with_var_arguments", scope: !2051, file: !456, line: 201, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "modification_analysis_done", scope: !2051, file: !456, line: 203, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "uses_analysis_done", scope: !2051, file: !456, line: 205, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "node_enqueued", scope: !2051, file: !456, line: 207, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_edge_args_t_gc", file: !456, line: 317, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_edge_args_t_gc", file: !456, line: 317, size: 192, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2075, file: !456, line: 317, baseType: !2078, size: 192)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_edge_args_t_base", file: !456, line: 316, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_edge_args_t_base", file: !456, line: 316, size: 192, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2079, file: !456, line: 316, baseType: !7, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2079, file: !456, line: 316, baseType: !7, size: 32, offset: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2079, file: !456, line: 316, baseType: !2084, size: 128, offset: 64)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 128, elements: !666)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_edge_args_t", file: !456, line: 279, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_edge_args", file: !456, line: 271, size: 128, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "argument_count", scope: !2086, file: !456, line: 276, baseType: !568, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "jump_functions", scope: !2086, file: !456, line: 278, baseType: !2025, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_edge_p_heap", file: !250, line: 353, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_edge_p_heap", file: !250, line: 353, size: 128, elements: !2095)
!2095 = !{!2096}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2094, file: !250, line: 353, baseType: !2097, size: 128)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_edge_p_base", file: !250, line: 352, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_edge_p_base", file: !250, line: 352, size: 128, elements: !2099)
!2099 = !{!2100, !2101, !2102}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2098, file: !250, line: 352, baseType: !7, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2098, file: !250, line: 352, baseType: !7, size: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2098, file: !250, line: 352, baseType: !2103, size: 64, offset: 64)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2104, size: 64, elements: !666)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_edge_p", file: !250, line: 350, baseType: !1758)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !6, line: 184, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !6, line: 184, size: 128, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2107, file: !6, line: 184, baseType: !1227, size: 128)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_parm_adjustment_t_heap", file: !456, line: 485, baseType: !2112)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_parm_adjustment_t_heap", file: !456, line: 485, size: 512, elements: !2113)
!2113 = !{!2114}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2112, file: !456, line: 485, baseType: !2115, size: 512)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_parm_adjustment_t_base", file: !456, line: 484, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_parm_adjustment_t_base", file: !456, line: 484, size: 512, elements: !2117)
!2117 = !{!2118, !2119, !2120}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2116, file: !456, line: 484, baseType: !7, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2116, file: !456, line: 484, baseType: !7, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2116, file: !456, line: 484, baseType: !2121, size: 448, offset: 64)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 448, elements: !666)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_parm_adjustment_t", file: !456, line: 483, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_parm_adjustment", file: !456, line: 436, size: 448, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2123, file: !456, line: 443, baseType: !583, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2123, file: !456, line: 447, baseType: !583, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "reduction", scope: !2123, file: !456, line: 452, baseType: !583, size: 64, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "new_ssa_base", scope: !2123, file: !456, line: 456, baseType: !583, size: 64, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_value", scope: !2123, file: !456, line: 460, baseType: !583, size: 64, offset: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2123, file: !456, line: 464, baseType: !639, size: 64, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2123, file: !456, line: 469, baseType: !568, size: 32, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "copy_param", scope: !2123, file: !456, line: 472, baseType: !7, size: 1, offset: 416, flags: DIFlagBitField, extraData: i64 416)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "remove_param", scope: !2123, file: !456, line: 477, baseType: !7, size: 1, offset: 417, flags: DIFlagBitField, extraData: i64 416)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "by_ref", scope: !2123, file: !456, line: 480, baseType: !7, size: 1, offset: 418, flags: DIFlagBitField, extraData: i64 416)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_node_params_t_heap", file: !456, line: 315, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_node_params_t_heap", file: !456, line: 315, size: 448, elements: !2138)
!2138 = !{!2139}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2137, file: !456, line: 315, baseType: !2140, size: 448)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_node_params_t_base", file: !456, line: 314, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_node_params_t_base", file: !456, line: 314, size: 448, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2141, file: !456, line: 314, baseType: !7, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2141, file: !456, line: 314, baseType: !7, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2141, file: !456, line: 314, baseType: !2146, size: 384, offset: 64)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2147, size: 384, elements: !666)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_node_params_t", file: !456, line: 311, baseType: !2051)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_function_header", file: !469, line: 395, size: 288, elements: !2151)
!2151 = !{!2152, !2163, !2166, !2167, !2168, !2169, !2170, !2171}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "lto_header", scope: !2150, file: !469, line: 398, baseType: !2153, size: 64)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_header", file: !469, line: 387, size: 64, elements: !2154)
!2154 = !{!2155, !2161, !2162}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !2153, file: !469, line: 389, baseType: !2156, size: 16)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !2157, line: 25, baseType: !2158)
!2157 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !2159, line: 39, baseType: !2160)
!2159 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !2153, file: !469, line: 390, baseType: !2156, size: 16, offset: 16)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "section_type", scope: !2153, file: !469, line: 391, baseType: !468, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "num_named_labels", scope: !2150, file: !469, line: 401, baseType: !2164, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !2157, line: 26, baseType: !2165)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !2159, line: 41, baseType: !568)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "num_unnamed_labels", scope: !2150, file: !469, line: 404, baseType: !2164, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !2150, file: !469, line: 407, baseType: !2164, size: 32, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "named_label_size", scope: !2150, file: !469, line: 410, baseType: !2164, size: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !2150, file: !469, line: 413, baseType: !2164, size: 32, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "main_size", scope: !2150, file: !469, line: 416, baseType: !2164, size: 32, offset: 224)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "string_size", scope: !2150, file: !469, line: 419, baseType: !2164, size: 32, offset: 256)
!2172 = !{!0, !2173, !2175, !2179, !2183, !2187}
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "ipa_edge_args_vector", scope: !2, file: !3, line: 42, type: !2073, isLocal: false, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "edge_removal_hook_holder", scope: !2, file: !3, line: 45, type: !2177, isLocal: true, isDefinition: true)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge_hook_list", file: !250, line: 519, flags: DIFlagFwdDecl)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "node_removal_hook_holder", scope: !2, file: !3, line: 46, type: !2181, isLocal: true, isDefinition: true)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_hook_list", file: !250, line: 520, flags: DIFlagFwdDecl)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "edge_duplication_hook_holder", scope: !2, file: !3, line: 47, type: !2185, isLocal: true, isDefinition: true)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_2edge_hook_list", file: !250, line: 521, flags: DIFlagFwdDecl)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "node_duplication_hook_holder", scope: !2, file: !3, line: 48, type: !2189, isLocal: true, isDefinition: true)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_2node_hook_list", file: !250, line: 522, flags: DIFlagFwdDecl)
!2191 = !{i32 2, !"Dwarf Version", i32 4}
!2192 = !{i32 2, !"Debug Info Version", i32 3}
!2193 = !{i32 1, !"wchar_size", i32 4}
!2194 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2195 = distinct !DISubprogram(name: "vprintf", scope: !2196, file: !2196, line: 39, type: !2197, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2207)
!2196 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!568, !2199, !2200}
!2199 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !573)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2202)
!2202 = !{!2203, !2204, !2205, !2206}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2201, file: !3, baseType: !7, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2201, file: !3, baseType: !7, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2201, file: !3, baseType: !572, size: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2201, file: !3, baseType: !572, size: 64, offset: 128)
!2207 = !{!2208, !2209}
!2208 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2195, file: !2196, line: 39, type: !2199)
!2209 = !DILocalVariable(name: "__arg", arg: 2, scope: !2195, file: !2196, line: 39, type: !2200)
!2210 = !DILocation(line: 0, scope: !2195)
!2211 = !DILocation(line: 41, column: 20, scope: !2195)
!2212 = !DILocation(line: 41, column: 10, scope: !2195)
!2213 = !DILocation(line: 41, column: 3, scope: !2195)
!2214 = distinct !DISubprogram(name: "getchar", scope: !2196, file: !2196, line: 47, type: !2215, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!568}
!2217 = !{}
!2218 = !DILocation(line: 49, column: 16, scope: !2214)
!2219 = !DILocation(line: 49, column: 10, scope: !2214)
!2220 = !DILocation(line: 49, column: 3, scope: !2214)
!2221 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2196, file: !2196, line: 56, type: !2222, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2273)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!568, !2224}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2226, line: 7, baseType: !2227)
!2226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2228, line: 49, size: 1728, elements: !2229)
!2228 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2245, !2247, !2248, !2249, !2251, !2252, !2253, !2254, !2257, !2259, !2262, !2265, !2266, !2267, !2268, !2269}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2227, file: !2228, line: 51, baseType: !568, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2227, file: !2228, line: 54, baseType: !570, size: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2227, file: !2228, line: 55, baseType: !570, size: 64, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2227, file: !2228, line: 56, baseType: !570, size: 64, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2227, file: !2228, line: 57, baseType: !570, size: 64, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2227, file: !2228, line: 58, baseType: !570, size: 64, offset: 320)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2227, file: !2228, line: 59, baseType: !570, size: 64, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2227, file: !2228, line: 60, baseType: !570, size: 64, offset: 448)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2227, file: !2228, line: 61, baseType: !570, size: 64, offset: 512)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2227, file: !2228, line: 64, baseType: !570, size: 64, offset: 576)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2227, file: !2228, line: 65, baseType: !570, size: 64, offset: 640)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2227, file: !2228, line: 66, baseType: !570, size: 64, offset: 704)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2227, file: !2228, line: 68, baseType: !2243, size: 64, offset: 768)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2228, line: 36, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2227, file: !2228, line: 70, baseType: !2246, size: 64, offset: 832)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2227, file: !2228, line: 72, baseType: !568, size: 32, offset: 896)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2227, file: !2228, line: 73, baseType: !568, size: 32, offset: 928)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2227, file: !2228, line: 74, baseType: !2250, size: 64, offset: 960)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2159, line: 152, baseType: !639)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2227, file: !2228, line: 77, baseType: !1776, size: 16, offset: 1024)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2227, file: !2228, line: 78, baseType: !1584, size: 8, offset: 1040)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2227, file: !2228, line: 79, baseType: !665, size: 8, offset: 1048)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2227, file: !2228, line: 81, baseType: !2255, size: 64, offset: 1088)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2228, line: 43, baseType: null)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2227, file: !2228, line: 89, baseType: !2258, size: 64, offset: 1152)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2159, line: 153, baseType: !639)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2227, file: !2228, line: 91, baseType: !2260, size: 64, offset: 1216)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2228, line: 37, flags: DIFlagFwdDecl)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2227, file: !2228, line: 92, baseType: !2263, size: 64, offset: 1280)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2228, line: 38, flags: DIFlagFwdDecl)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2227, file: !2228, line: 93, baseType: !2246, size: 64, offset: 1344)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2227, file: !2228, line: 94, baseType: !572, size: 64, offset: 1408)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2227, file: !2228, line: 95, baseType: !1024, size: 64, offset: 1472)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2227, file: !2228, line: 96, baseType: !568, size: 32, offset: 1536)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2227, file: !2228, line: 98, baseType: !2270, size: 160, offset: 1568)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 160, elements: !2271)
!2271 = !{!2272}
!2272 = !DISubrange(count: 20)
!2273 = !{!2274}
!2274 = !DILocalVariable(name: "__fp", arg: 1, scope: !2221, file: !2196, line: 56, type: !2224)
!2275 = !DILocation(line: 0, scope: !2221)
!2276 = !DILocation(line: 58, column: 10, scope: !2221)
!2277 = !DILocation(line: 58, column: 3, scope: !2221)
!2278 = distinct !DISubprogram(name: "getc_unlocked", scope: !2196, file: !2196, line: 66, type: !2222, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__fp", arg: 1, scope: !2278, file: !2196, line: 66, type: !2224)
!2281 = !DILocation(line: 0, scope: !2278)
!2282 = !DILocation(line: 68, column: 10, scope: !2278)
!2283 = !DILocation(line: 68, column: 3, scope: !2278)
!2284 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2196, file: !2196, line: 73, type: !2215, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!2285 = !DILocation(line: 75, column: 10, scope: !2284)
!2286 = !DILocation(line: 75, column: 3, scope: !2284)
!2287 = distinct !DISubprogram(name: "putchar", scope: !2196, file: !2196, line: 82, type: !2288, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!568, !568}
!2290 = !{!2291}
!2291 = !DILocalVariable(name: "__c", arg: 1, scope: !2287, file: !2196, line: 82, type: !568)
!2292 = !DILocation(line: 0, scope: !2287)
!2293 = !DILocation(line: 84, column: 21, scope: !2287)
!2294 = !DILocation(line: 84, column: 10, scope: !2287)
!2295 = !DILocation(line: 84, column: 3, scope: !2287)
!2296 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2196, file: !2196, line: 91, type: !2297, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2299)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!568, !568, !2224}
!2299 = !{!2300, !2301}
!2300 = !DILocalVariable(name: "__c", arg: 1, scope: !2296, file: !2196, line: 91, type: !568)
!2301 = !DILocalVariable(name: "__stream", arg: 2, scope: !2296, file: !2196, line: 91, type: !2224)
!2302 = !DILocation(line: 0, scope: !2296)
!2303 = !DILocation(line: 93, column: 10, scope: !2296)
!2304 = !DILocation(line: 93, column: 3, scope: !2296)
!2305 = distinct !DISubprogram(name: "putc_unlocked", scope: !2196, file: !2196, line: 101, type: !2297, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2306 = !{!2307, !2308}
!2307 = !DILocalVariable(name: "__c", arg: 1, scope: !2305, file: !2196, line: 101, type: !568)
!2308 = !DILocalVariable(name: "__stream", arg: 2, scope: !2305, file: !2196, line: 101, type: !2224)
!2309 = !DILocation(line: 0, scope: !2305)
!2310 = !DILocation(line: 103, column: 10, scope: !2305)
!2311 = !DILocation(line: 103, column: 3, scope: !2305)
!2312 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2196, file: !2196, line: 108, type: !2288, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2313)
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "__c", arg: 1, scope: !2312, file: !2196, line: 108, type: !568)
!2315 = !DILocation(line: 0, scope: !2312)
!2316 = !DILocation(line: 110, column: 10, scope: !2312)
!2317 = !DILocation(line: 110, column: 3, scope: !2312)
!2318 = distinct !DISubprogram(name: "getline", scope: !2196, file: !2196, line: 118, type: !2319, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2323)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!2321, !569, !2322, !2224}
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2159, line: 193, baseType: !639)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!2323 = !{!2324, !2325, !2326}
!2324 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2318, file: !2196, line: 118, type: !569)
!2325 = !DILocalVariable(name: "__n", arg: 2, scope: !2318, file: !2196, line: 118, type: !2322)
!2326 = !DILocalVariable(name: "__stream", arg: 3, scope: !2318, file: !2196, line: 118, type: !2224)
!2327 = !DILocation(line: 0, scope: !2318)
!2328 = !DILocation(line: 120, column: 10, scope: !2318)
!2329 = !DILocation(line: 120, column: 3, scope: !2318)
!2330 = distinct !DISubprogram(name: "feof_unlocked", scope: !2196, file: !2196, line: 128, type: !2222, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2331)
!2331 = !{!2332}
!2332 = !DILocalVariable(name: "__stream", arg: 1, scope: !2330, file: !2196, line: 128, type: !2224)
!2333 = !DILocation(line: 0, scope: !2330)
!2334 = !DILocation(line: 130, column: 10, scope: !2330)
!2335 = !DILocation(line: 130, column: 3, scope: !2330)
!2336 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2196, file: !2196, line: 135, type: !2222, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2337)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__stream", arg: 1, scope: !2336, file: !2196, line: 135, type: !2224)
!2339 = !DILocation(line: 0, scope: !2336)
!2340 = !DILocation(line: 137, column: 10, scope: !2336)
!2341 = !DILocation(line: 137, column: 3, scope: !2336)
!2342 = distinct !DISubprogram(name: "tolower", scope: !2343, file: !2343, line: 207, type: !2288, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2344)
!2343 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2344 = !{!2345}
!2345 = !DILocalVariable(name: "__c", arg: 1, scope: !2342, file: !2343, line: 207, type: !568)
!2346 = !DILocation(line: 0, scope: !2342)
!2347 = !DILocation(line: 209, column: 22, scope: !2342)
!2348 = !DILocation(line: 209, column: 39, scope: !2342)
!2349 = !DILocation(line: 209, column: 38, scope: !2342)
!2350 = !DILocation(line: 209, column: 37, scope: !2342)
!2351 = !DILocation(line: 209, column: 10, scope: !2342)
!2352 = !DILocation(line: 209, column: 3, scope: !2342)
!2353 = distinct !DISubprogram(name: "toupper", scope: !2343, file: !2343, line: 213, type: !2288, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2354)
!2354 = !{!2355}
!2355 = !DILocalVariable(name: "__c", arg: 1, scope: !2353, file: !2343, line: 213, type: !568)
!2356 = !DILocation(line: 0, scope: !2353)
!2357 = !DILocation(line: 215, column: 22, scope: !2353)
!2358 = !DILocation(line: 215, column: 39, scope: !2353)
!2359 = !DILocation(line: 215, column: 38, scope: !2353)
!2360 = !DILocation(line: 215, column: 37, scope: !2353)
!2361 = !DILocation(line: 215, column: 10, scope: !2353)
!2362 = !DILocation(line: 215, column: 3, scope: !2353)
!2363 = distinct !DISubprogram(name: "atoi", scope: !2364, file: !2364, line: 361, type: !2365, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2364 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!568, !573}
!2367 = !{!2368}
!2368 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2363, file: !2364, line: 361, type: !573)
!2369 = !DILocation(line: 0, scope: !2363)
!2370 = !DILocation(line: 363, column: 16, scope: !2363)
!2371 = !DILocation(line: 363, column: 10, scope: !2363)
!2372 = !DILocation(line: 363, column: 3, scope: !2363)
!2373 = distinct !DISubprogram(name: "atol", scope: !2364, file: !2364, line: 366, type: !2374, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!639, !573}
!2376 = !{!2377}
!2377 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2373, file: !2364, line: 366, type: !573)
!2378 = !DILocation(line: 0, scope: !2373)
!2379 = !DILocation(line: 368, column: 10, scope: !2373)
!2380 = !DILocation(line: 368, column: 3, scope: !2373)
!2381 = distinct !DISubprogram(name: "atoll", scope: !2364, file: !2364, line: 373, type: !2382, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2385)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!2384, !573}
!2384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2385 = !{!2386}
!2386 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2381, file: !2364, line: 373, type: !573)
!2387 = !DILocation(line: 0, scope: !2381)
!2388 = !DILocation(line: 375, column: 10, scope: !2381)
!2389 = !DILocation(line: 375, column: 3, scope: !2381)
!2390 = distinct !DISubprogram(name: "bsearch", scope: !2391, file: !2391, line: 20, type: !2392, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2395)
!2391 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!572, !1170, !1170, !1024, !1024, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2364, line: 808, baseType: !1174)
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405}
!2396 = !DILocalVariable(name: "__key", arg: 1, scope: !2390, file: !2391, line: 20, type: !1170)
!2397 = !DILocalVariable(name: "__base", arg: 2, scope: !2390, file: !2391, line: 20, type: !1170)
!2398 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2390, file: !2391, line: 20, type: !1024)
!2399 = !DILocalVariable(name: "__size", arg: 4, scope: !2390, file: !2391, line: 20, type: !1024)
!2400 = !DILocalVariable(name: "__compar", arg: 5, scope: !2390, file: !2391, line: 21, type: !2394)
!2401 = !DILocalVariable(name: "__l", scope: !2390, file: !2391, line: 23, type: !1024)
!2402 = !DILocalVariable(name: "__u", scope: !2390, file: !2391, line: 23, type: !1024)
!2403 = !DILocalVariable(name: "__idx", scope: !2390, file: !2391, line: 23, type: !1024)
!2404 = !DILocalVariable(name: "__p", scope: !2390, file: !2391, line: 24, type: !1170)
!2405 = !DILocalVariable(name: "__comparison", scope: !2390, file: !2391, line: 25, type: !568)
!2406 = !DILocation(line: 0, scope: !2390)
!2407 = !DILocation(line: 29, column: 3, scope: !2390)
!2408 = !DILocation(line: 27, column: 7, scope: !2390)
!2409 = !DILocation(line: 29, column: 14, scope: !2390)
!2410 = !DILocation(line: 31, column: 20, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2390, file: !2391, line: 30, column: 5)
!2412 = !DILocation(line: 31, column: 27, scope: !2411)
!2413 = !DILocation(line: 32, column: 56, scope: !2411)
!2414 = !DILocation(line: 32, column: 47, scope: !2411)
!2415 = !DILocation(line: 33, column: 22, scope: !2411)
!2416 = !DILocation(line: 34, column: 24, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2411, file: !2391, line: 34, column: 11)
!2418 = !DILocation(line: 34, column: 11, scope: !2411)
!2419 = !DILocation(line: 36, column: 29, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2417, file: !2391, line: 36, column: 16)
!2421 = !DILocation(line: 36, column: 16, scope: !2417)
!2422 = !DILocation(line: 37, column: 14, scope: !2420)
!2423 = distinct !{!2423, !2407, !2424}
!2424 = !DILocation(line: 40, column: 5, scope: !2390)
!2425 = !DILocation(line: 43, column: 1, scope: !2390)
!2426 = distinct !DISubprogram(name: "atof", scope: !2427, file: !2427, line: 25, type: !2428, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2431)
!2427 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!2430, !573}
!2430 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2431 = !{!2432}
!2432 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2426, file: !2427, line: 25, type: !573)
!2433 = !DILocation(line: 0, scope: !2426)
!2434 = !DILocation(line: 27, column: 10, scope: !2426)
!2435 = !DILocation(line: 27, column: 3, scope: !2426)
!2436 = distinct !DISubprogram(name: "strtoimax", scope: !2437, file: !2437, line: 324, type: !2438, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2444)
!2437 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!2440, !2199, !2443, !568}
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2441, line: 101, baseType: !2442)
!2441 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2159, line: 72, baseType: !639)
!2443 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!2444 = !{!2445, !2446, !2447}
!2445 = !DILocalVariable(name: "nptr", arg: 1, scope: !2436, file: !2437, line: 324, type: !2199)
!2446 = !DILocalVariable(name: "endptr", arg: 2, scope: !2436, file: !2437, line: 324, type: !2443)
!2447 = !DILocalVariable(name: "base", arg: 3, scope: !2436, file: !2437, line: 324, type: !568)
!2448 = !DILocation(line: 0, scope: !2436)
!2449 = !DILocation(line: 327, column: 10, scope: !2436)
!2450 = !DILocation(line: 327, column: 3, scope: !2436)
!2451 = distinct !DISubprogram(name: "strtoumax", scope: !2437, file: !2437, line: 336, type: !2452, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2456)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!2454, !2199, !2443, !568}
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2441, line: 102, baseType: !2455)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2159, line: 73, baseType: !637)
!2456 = !{!2457, !2458, !2459}
!2457 = !DILocalVariable(name: "nptr", arg: 1, scope: !2451, file: !2437, line: 336, type: !2199)
!2458 = !DILocalVariable(name: "endptr", arg: 2, scope: !2451, file: !2437, line: 336, type: !2443)
!2459 = !DILocalVariable(name: "base", arg: 3, scope: !2451, file: !2437, line: 336, type: !568)
!2460 = !DILocation(line: 0, scope: !2451)
!2461 = !DILocation(line: 339, column: 10, scope: !2451)
!2462 = !DILocation(line: 339, column: 3, scope: !2451)
!2463 = distinct !DISubprogram(name: "wcstoimax", scope: !2437, file: !2437, line: 348, type: !2464, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2473)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!2440, !2466, !2470, !568}
!2466 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2469)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2437, line: 34, baseType: !568)
!2470 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2473 = !{!2474, !2475, !2476}
!2474 = !DILocalVariable(name: "nptr", arg: 1, scope: !2463, file: !2437, line: 348, type: !2466)
!2475 = !DILocalVariable(name: "endptr", arg: 2, scope: !2463, file: !2437, line: 348, type: !2470)
!2476 = !DILocalVariable(name: "base", arg: 3, scope: !2463, file: !2437, line: 348, type: !568)
!2477 = !DILocation(line: 0, scope: !2463)
!2478 = !DILocation(line: 351, column: 10, scope: !2463)
!2479 = !DILocation(line: 351, column: 3, scope: !2463)
!2480 = distinct !DISubprogram(name: "wcstoumax", scope: !2437, file: !2437, line: 362, type: !2481, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2483)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!2454, !2466, !2470, !568}
!2483 = !{!2484, !2485, !2486}
!2484 = !DILocalVariable(name: "nptr", arg: 1, scope: !2480, file: !2437, line: 362, type: !2466)
!2485 = !DILocalVariable(name: "endptr", arg: 2, scope: !2480, file: !2437, line: 362, type: !2470)
!2486 = !DILocalVariable(name: "base", arg: 3, scope: !2480, file: !2437, line: 362, type: !568)
!2487 = !DILocation(line: 0, scope: !2480)
!2488 = !DILocation(line: 365, column: 10, scope: !2480)
!2489 = !DILocation(line: 365, column: 3, scope: !2480)
!2490 = distinct !DISubprogram(name: "stat", scope: !2491, file: !2491, line: 453, type: !2492, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2531)
!2491 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!568, !573, !2494}
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2496, line: 46, size: 1152, elements: !2497)
!2496 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2497 = !{!2498, !2500, !2502, !2504, !2506, !2508, !2510, !2511, !2512, !2513, !2515, !2517, !2525, !2526, !2527}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2495, file: !2496, line: 48, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2159, line: 145, baseType: !637)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2495, file: !2496, line: 53, baseType: !2501, size: 64, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2159, line: 148, baseType: !637)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2495, file: !2496, line: 61, baseType: !2503, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2159, line: 151, baseType: !637)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2495, file: !2496, line: 62, baseType: !2505, size: 32, offset: 192)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2159, line: 150, baseType: !7)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2495, file: !2496, line: 64, baseType: !2507, size: 32, offset: 224)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2159, line: 146, baseType: !7)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2495, file: !2496, line: 65, baseType: !2509, size: 32, offset: 256)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2159, line: 147, baseType: !7)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2495, file: !2496, line: 67, baseType: !568, size: 32, offset: 288)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2495, file: !2496, line: 69, baseType: !2499, size: 64, offset: 320)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2495, file: !2496, line: 74, baseType: !2250, size: 64, offset: 384)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2495, file: !2496, line: 78, baseType: !2514, size: 64, offset: 448)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2159, line: 174, baseType: !639)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2495, file: !2496, line: 80, baseType: !2516, size: 64, offset: 512)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2159, line: 179, baseType: !639)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2495, file: !2496, line: 91, baseType: !2518, size: 128, offset: 576)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2519, line: 10, size: 128, elements: !2520)
!2519 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2520 = !{!2521, !2523}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2518, file: !2519, line: 12, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2159, line: 160, baseType: !639)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2518, file: !2519, line: 16, baseType: !2524, size: 64, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2159, line: 196, baseType: !639)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2495, file: !2496, line: 92, baseType: !2518, size: 128, offset: 704)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2495, file: !2496, line: 93, baseType: !2518, size: 128, offset: 832)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2495, file: !2496, line: 106, baseType: !2528, size: 192, offset: 960)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2524, size: 192, elements: !2529)
!2529 = !{!2530}
!2530 = !DISubrange(count: 3)
!2531 = !{!2532, !2533}
!2532 = !DILocalVariable(name: "__path", arg: 1, scope: !2490, file: !2491, line: 453, type: !573)
!2533 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2490, file: !2491, line: 453, type: !2494)
!2534 = !DILocation(line: 0, scope: !2490)
!2535 = !DILocation(line: 455, column: 10, scope: !2490)
!2536 = !DILocation(line: 455, column: 3, scope: !2490)
!2537 = distinct !DISubprogram(name: "lstat", scope: !2491, file: !2491, line: 460, type: !2492, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2538 = !{!2539, !2540}
!2539 = !DILocalVariable(name: "__path", arg: 1, scope: !2537, file: !2491, line: 460, type: !573)
!2540 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2537, file: !2491, line: 460, type: !2494)
!2541 = !DILocation(line: 0, scope: !2537)
!2542 = !DILocation(line: 462, column: 10, scope: !2537)
!2543 = !DILocation(line: 462, column: 3, scope: !2537)
!2544 = distinct !DISubprogram(name: "fstat", scope: !2491, file: !2491, line: 467, type: !2545, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2547)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!568, !568, !2494}
!2547 = !{!2548, !2549}
!2548 = !DILocalVariable(name: "__fd", arg: 1, scope: !2544, file: !2491, line: 467, type: !568)
!2549 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2544, file: !2491, line: 467, type: !2494)
!2550 = !DILocation(line: 0, scope: !2544)
!2551 = !DILocation(line: 469, column: 10, scope: !2544)
!2552 = !DILocation(line: 469, column: 3, scope: !2544)
!2553 = distinct !DISubprogram(name: "fstatat", scope: !2491, file: !2491, line: 474, type: !2554, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2556)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!568, !568, !573, !2494, !568}
!2556 = !{!2557, !2558, !2559, !2560}
!2557 = !DILocalVariable(name: "__fd", arg: 1, scope: !2553, file: !2491, line: 474, type: !568)
!2558 = !DILocalVariable(name: "__filename", arg: 2, scope: !2553, file: !2491, line: 474, type: !573)
!2559 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2553, file: !2491, line: 474, type: !2494)
!2560 = !DILocalVariable(name: "__flag", arg: 4, scope: !2553, file: !2491, line: 474, type: !568)
!2561 = !DILocation(line: 0, scope: !2553)
!2562 = !DILocation(line: 477, column: 10, scope: !2553)
!2563 = !DILocation(line: 477, column: 3, scope: !2553)
!2564 = distinct !DISubprogram(name: "mknod", scope: !2491, file: !2491, line: 483, type: !2565, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2567)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!568, !573, !2505, !2499}
!2567 = !{!2568, !2569, !2570}
!2568 = !DILocalVariable(name: "__path", arg: 1, scope: !2564, file: !2491, line: 483, type: !573)
!2569 = !DILocalVariable(name: "__mode", arg: 2, scope: !2564, file: !2491, line: 483, type: !2505)
!2570 = !DILocalVariable(name: "__dev", arg: 3, scope: !2564, file: !2491, line: 483, type: !2499)
!2571 = !DILocation(line: 0, scope: !2564)
!2572 = !DILocation(line: 485, column: 10, scope: !2564)
!2573 = !DILocation(line: 485, column: 3, scope: !2564)
!2574 = distinct !DISubprogram(name: "mknodat", scope: !2491, file: !2491, line: 491, type: !2575, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2577)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!568, !568, !573, !2505, !2499}
!2577 = !{!2578, !2579, !2580, !2581}
!2578 = !DILocalVariable(name: "__fd", arg: 1, scope: !2574, file: !2491, line: 491, type: !568)
!2579 = !DILocalVariable(name: "__path", arg: 2, scope: !2574, file: !2491, line: 491, type: !573)
!2580 = !DILocalVariable(name: "__mode", arg: 3, scope: !2574, file: !2491, line: 491, type: !2505)
!2581 = !DILocalVariable(name: "__dev", arg: 4, scope: !2574, file: !2491, line: 491, type: !2499)
!2582 = !DILocation(line: 0, scope: !2574)
!2583 = !DILocation(line: 494, column: 10, scope: !2574)
!2584 = !DILocation(line: 494, column: 3, scope: !2574)
!2585 = distinct !DISubprogram(name: "stat64", scope: !2491, file: !2491, line: 502, type: !2586, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2608)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!568, !573, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2496, line: 119, size: 1152, elements: !2590)
!2590 = !{!2591, !2592, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2604, !2605, !2606, !2607}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2589, file: !2496, line: 121, baseType: !2499, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2589, file: !2496, line: 123, baseType: !2593, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2159, line: 149, baseType: !637)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2589, file: !2496, line: 124, baseType: !2503, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2589, file: !2496, line: 125, baseType: !2505, size: 32, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2589, file: !2496, line: 132, baseType: !2507, size: 32, offset: 224)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2589, file: !2496, line: 133, baseType: !2509, size: 32, offset: 256)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2589, file: !2496, line: 135, baseType: !568, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2589, file: !2496, line: 136, baseType: !2499, size: 64, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2589, file: !2496, line: 137, baseType: !2250, size: 64, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2589, file: !2496, line: 143, baseType: !2514, size: 64, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2589, file: !2496, line: 144, baseType: !2603, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2159, line: 180, baseType: !639)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2589, file: !2496, line: 152, baseType: !2518, size: 128, offset: 576)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2589, file: !2496, line: 153, baseType: !2518, size: 128, offset: 704)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2589, file: !2496, line: 154, baseType: !2518, size: 128, offset: 832)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2589, file: !2496, line: 164, baseType: !2528, size: 192, offset: 960)
!2608 = !{!2609, !2610}
!2609 = !DILocalVariable(name: "__path", arg: 1, scope: !2585, file: !2491, line: 502, type: !573)
!2610 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2585, file: !2491, line: 502, type: !2588)
!2611 = !DILocation(line: 0, scope: !2585)
!2612 = !DILocation(line: 504, column: 10, scope: !2585)
!2613 = !DILocation(line: 504, column: 3, scope: !2585)
!2614 = distinct !DISubprogram(name: "lstat64", scope: !2491, file: !2491, line: 509, type: !2586, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2615)
!2615 = !{!2616, !2617}
!2616 = !DILocalVariable(name: "__path", arg: 1, scope: !2614, file: !2491, line: 509, type: !573)
!2617 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2614, file: !2491, line: 509, type: !2588)
!2618 = !DILocation(line: 0, scope: !2614)
!2619 = !DILocation(line: 511, column: 10, scope: !2614)
!2620 = !DILocation(line: 511, column: 3, scope: !2614)
!2621 = distinct !DISubprogram(name: "fstat64", scope: !2491, file: !2491, line: 516, type: !2622, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!568, !568, !2588}
!2624 = !{!2625, !2626}
!2625 = !DILocalVariable(name: "__fd", arg: 1, scope: !2621, file: !2491, line: 516, type: !568)
!2626 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2621, file: !2491, line: 516, type: !2588)
!2627 = !DILocation(line: 0, scope: !2621)
!2628 = !DILocation(line: 518, column: 10, scope: !2621)
!2629 = !DILocation(line: 518, column: 3, scope: !2621)
!2630 = distinct !DISubprogram(name: "fstatat64", scope: !2491, file: !2491, line: 523, type: !2631, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2633)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!568, !568, !573, !2588, !568}
!2633 = !{!2634, !2635, !2636, !2637}
!2634 = !DILocalVariable(name: "__fd", arg: 1, scope: !2630, file: !2491, line: 523, type: !568)
!2635 = !DILocalVariable(name: "__filename", arg: 2, scope: !2630, file: !2491, line: 523, type: !573)
!2636 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2630, file: !2491, line: 523, type: !2588)
!2637 = !DILocalVariable(name: "__flag", arg: 4, scope: !2630, file: !2491, line: 523, type: !568)
!2638 = !DILocation(line: 0, scope: !2630)
!2639 = !DILocation(line: 526, column: 10, scope: !2630)
!2640 = !DILocation(line: 526, column: 3, scope: !2630)
!2641 = distinct !DISubprogram(name: "ipa_push_func_to_list_1", scope: !3, file: !3, line: 55, type: !2642, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !2644, !579, !2050}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!2645 = !{!2646, !2647, !2648, !2649}
!2646 = !DILocalVariable(name: "wl", arg: 1, scope: !2641, file: !3, line: 55, type: !2644)
!2647 = !DILocalVariable(name: "node", arg: 2, scope: !2641, file: !3, line: 56, type: !579)
!2648 = !DILocalVariable(name: "info", arg: 3, scope: !2641, file: !3, line: 57, type: !2050)
!2649 = !DILocalVariable(name: "temp", scope: !2641, file: !3, line: 59, type: !575)
!2650 = !DILocation(line: 0, scope: !2641)
!2651 = !DILocation(line: 61, column: 9, scope: !2641)
!2652 = !DILocation(line: 61, column: 23, scope: !2641)
!2653 = !DILocation(line: 62, column: 10, scope: !2641)
!2654 = !DILocation(line: 63, column: 9, scope: !2641)
!2655 = !DILocation(line: 63, column: 14, scope: !2641)
!2656 = !DILocation(line: 64, column: 16, scope: !2641)
!2657 = !DILocation(line: 64, column: 9, scope: !2641)
!2658 = !DILocation(line: 64, column: 14, scope: !2641)
!2659 = !DILocation(line: 65, column: 7, scope: !2641)
!2660 = !DILocation(line: 66, column: 1, scope: !2641)
!2661 = distinct !DISubprogram(name: "ipa_init_func_list", scope: !3, file: !3, line: 71, type: !2662, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2664)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!575}
!2664 = !{!2665, !2666, !2667}
!2665 = !DILocalVariable(name: "node", scope: !2661, file: !3, line: 73, type: !579)
!2666 = !DILocalVariable(name: "wl", scope: !2661, file: !3, line: 74, type: !575)
!2667 = !DILocalVariable(name: "info", scope: !2668, file: !3, line: 80, type: !2050)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 79, column: 7)
!2669 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 78, column: 9)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 77, column: 3)
!2671 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 77, column: 3)
!2672 = !DILocation(line: 74, column: 3, scope: !2661)
!2673 = !DILocation(line: 0, scope: !2661)
!2674 = !DILocation(line: 76, column: 6, scope: !2661)
!2675 = !DILocation(line: 77, column: 8, scope: !2671)
!2676 = !DILocation(line: 0, scope: !2671)
!2677 = !DILocation(line: 77, column: 3, scope: !2671)
!2678 = !DILocation(line: 78, column: 15, scope: !2669)
!2679 = !DILocation(line: 78, column: 9, scope: !2669)
!2680 = !DILocation(line: 78, column: 9, scope: !2670)
!2681 = !DILocation(line: 80, column: 33, scope: !2668)
!2682 = !DILocation(line: 0, scope: !2668)
!2683 = !DILocation(line: 83, column: 2, scope: !2668)
!2684 = !DILocation(line: 84, column: 2, scope: !2668)
!2685 = !DILocation(line: 85, column: 7, scope: !2668)
!2686 = !DILocation(line: 77, column: 48, scope: !2670)
!2687 = !DILocation(line: 77, column: 3, scope: !2670)
!2688 = distinct !{!2688, !2677, !2689}
!2689 = !DILocation(line: 85, column: 7, scope: !2671)
!2690 = !DILocation(line: 87, column: 10, scope: !2661)
!2691 = !DILocation(line: 88, column: 1, scope: !2661)
!2692 = !DILocation(line: 87, column: 3, scope: !2661)
!2693 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_base_index", scope: !456, file: !456, line: 314, type: !2694, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2698)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!2696, !2697, !7}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2698 = !{!2699, !2700}
!2699 = !DILocalVariable(name: "vec_", arg: 1, scope: !2693, file: !456, line: 314, type: !2697)
!2700 = !DILocalVariable(name: "ix_", arg: 2, scope: !2693, file: !456, line: 314, type: !7)
!2701 = !DILocation(line: 0, scope: !2693)
!2702 = !DILocation(line: 314, column: 1, scope: !2693)
!2703 = distinct !DISubprogram(name: "ipa_pop_func_from_list", scope: !3, file: !3, line: 93, type: !2704, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2706)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!579, !2644}
!2706 = !{!2707, !2708, !2709, !2710}
!2707 = !DILocalVariable(name: "wl", arg: 1, scope: !2703, file: !3, line: 93, type: !2644)
!2708 = !DILocalVariable(name: "info", scope: !2703, file: !3, line: 95, type: !2050)
!2709 = !DILocalVariable(name: "first", scope: !2703, file: !3, line: 96, type: !575)
!2710 = !DILocalVariable(name: "node", scope: !2703, file: !3, line: 97, type: !579)
!2711 = !DILocation(line: 0, scope: !2703)
!2712 = !DILocation(line: 99, column: 11, scope: !2703)
!2713 = !DILocation(line: 100, column: 16, scope: !2703)
!2714 = !DILocation(line: 100, column: 7, scope: !2703)
!2715 = !DILocation(line: 101, column: 17, scope: !2703)
!2716 = !DILocation(line: 102, column: 9, scope: !2703)
!2717 = !DILocation(line: 102, column: 3, scope: !2703)
!2718 = !DILocation(line: 104, column: 10, scope: !2703)
!2719 = !DILocation(line: 105, column: 9, scope: !2703)
!2720 = !DILocation(line: 105, column: 23, scope: !2703)
!2721 = !DILocation(line: 106, column: 3, scope: !2703)
!2722 = distinct !DISubprogram(name: "ipa_initialize_node_params", scope: !3, file: !3, line: 179, type: !1866, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2723)
!2723 = !{!2724, !2725}
!2724 = !DILocalVariable(name: "node", arg: 1, scope: !2722, file: !3, line: 179, type: !579)
!2725 = !DILocalVariable(name: "info", scope: !2722, file: !3, line: 181, type: !2050)
!2726 = !DILocation(line: 0, scope: !2722)
!2727 = !DILocation(line: 181, column: 34, scope: !2722)
!2728 = !DILocation(line: 183, column: 14, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 183, column: 7)
!2730 = !DILocation(line: 183, column: 8, scope: !2729)
!2731 = !DILocation(line: 183, column: 7, scope: !2722)
!2732 = !DILocation(line: 185, column: 7, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 184, column: 5)
!2734 = !DILocation(line: 186, column: 22, scope: !2733)
!2735 = !DILocation(line: 186, column: 20, scope: !2733)
!2736 = !DILocation(line: 188, column: 7, scope: !2733)
!2737 = !DILocation(line: 189, column: 5, scope: !2733)
!2738 = !DILocation(line: 190, column: 1, scope: !2722)
!2739 = distinct !DISubprogram(name: "ipa_count_formal_params", scope: !3, file: !3, line: 165, type: !2740, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2742)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{null, !579, !2050}
!2742 = !{!2743, !2744, !2745}
!2743 = !DILocalVariable(name: "node", arg: 1, scope: !2739, file: !3, line: 165, type: !579)
!2744 = !DILocalVariable(name: "info", arg: 2, scope: !2739, file: !3, line: 166, type: !2050)
!2745 = !DILocalVariable(name: "param_num", scope: !2739, file: !3, line: 168, type: !568)
!2746 = !DILocation(line: 0, scope: !2739)
!2747 = !DILocation(line: 170, column: 44, scope: !2739)
!2748 = !DILocation(line: 170, column: 15, scope: !2739)
!2749 = !DILocation(line: 171, column: 3, scope: !2739)
!2750 = !DILocation(line: 172, column: 1, scope: !2739)
!2751 = distinct !DISubprogram(name: "ipa_get_param_count", scope: !456, file: !456, line: 224, type: !2752, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2754)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!568, !2050}
!2754 = !{!2755}
!2755 = !DILocalVariable(name: "info", arg: 1, scope: !2751, file: !456, line: 224, type: !2050)
!2756 = !DILocation(line: 0, scope: !2751)
!2757 = !DILocation(line: 226, column: 16, scope: !2751)
!2758 = !DILocation(line: 226, column: 3, scope: !2751)
!2759 = distinct !DISubprogram(name: "ipa_populate_param_decls", scope: !3, file: !3, line: 129, type: !2740, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766}
!2761 = !DILocalVariable(name: "node", arg: 1, scope: !2759, file: !3, line: 129, type: !579)
!2762 = !DILocalVariable(name: "info", arg: 2, scope: !2759, file: !3, line: 130, type: !2050)
!2763 = !DILocalVariable(name: "fndecl", scope: !2759, file: !3, line: 132, type: !583)
!2764 = !DILocalVariable(name: "fnargs", scope: !2759, file: !3, line: 133, type: !583)
!2765 = !DILocalVariable(name: "parm", scope: !2759, file: !3, line: 134, type: !583)
!2766 = !DILocalVariable(name: "param_num", scope: !2759, file: !3, line: 135, type: !568)
!2767 = !DILocation(line: 0, scope: !2759)
!2768 = !DILocation(line: 137, column: 18, scope: !2759)
!2769 = !DILocation(line: 138, column: 12, scope: !2759)
!2770 = !DILocation(line: 0, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 141, column: 5)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 140, column: 3)
!2773 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 140, column: 3)
!2774 = !DILocation(line: 140, column: 8, scope: !2773)
!2775 = !DILocation(line: 0, scope: !2773)
!2776 = !DILocation(line: 140, column: 3, scope: !2773)
!2777 = !DILocation(line: 142, column: 13, scope: !2771)
!2778 = !DILocation(line: 142, column: 31, scope: !2771)
!2779 = !DILocation(line: 142, column: 36, scope: !2771)
!2780 = !DILocation(line: 143, column: 16, scope: !2771)
!2781 = !DILocation(line: 140, column: 36, scope: !2772)
!2782 = !DILocation(line: 140, column: 3, scope: !2772)
!2783 = distinct !{!2783, !2776, !2784}
!2784 = !DILocation(line: 144, column: 5, scope: !2773)
!2785 = !DILocation(line: 145, column: 1, scope: !2759)
!2786 = distinct !DISubprogram(name: "ipa_detect_param_modifications", scope: !3, file: !3, line: 218, type: !1866, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2787)
!2787 = !{!2788, !2789, !2790, !2791, !2792, !2799}
!2788 = !DILocalVariable(name: "node", arg: 1, scope: !2786, file: !3, line: 218, type: !579)
!2789 = !DILocalVariable(name: "decl", scope: !2786, file: !3, line: 220, type: !583)
!2790 = !DILocalVariable(name: "bb", scope: !2786, file: !3, line: 221, type: !841)
!2791 = !DILocalVariable(name: "func", scope: !2786, file: !3, line: 222, type: !829)
!2792 = !DILocalVariable(name: "gsi", scope: !2786, file: !3, line: 223, type: !2793)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !483, line: 265, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !483, line: 254, size: 192, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2794, file: !483, line: 257, baseType: !873, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2794, file: !483, line: 263, baseType: !868, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2794, file: !483, line: 264, baseType: !841, size: 64, offset: 128)
!2799 = !DILocalVariable(name: "info", scope: !2786, file: !3, line: 224, type: !2050)
!2800 = !DILocation(line: 0, scope: !2786)
!2801 = !DILocation(line: 220, column: 21, scope: !2786)
!2802 = !DILocation(line: 223, column: 3, scope: !2786)
!2803 = !DILocation(line: 224, column: 34, scope: !2786)
!2804 = !DILocation(line: 226, column: 7, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 226, column: 7)
!2806 = !DILocation(line: 226, column: 34, scope: !2805)
!2807 = !DILocation(line: 226, column: 39, scope: !2805)
!2808 = !DILocation(line: 226, column: 48, scope: !2805)
!2809 = !DILocation(line: 226, column: 42, scope: !2805)
!2810 = !DILocation(line: 226, column: 7, scope: !2786)
!2811 = !DILocation(line: 229, column: 10, scope: !2786)
!2812 = !DILocation(line: 230, column: 3, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 230, column: 3)
!2814 = !DILocation(line: 0, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 231, column: 5)
!2816 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 230, column: 3)
!2817 = !DILocation(line: 0, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2815, file: !3, line: 231, column: 5)
!2819 = !DILocation(line: 230, column: 3, scope: !2816)
!2820 = !DILocation(line: 0, scope: !2813)
!2821 = !DILocation(line: 231, column: 16, scope: !2815)
!2822 = !DILocation(line: 231, column: 10, scope: !2815)
!2823 = !DILocation(line: 231, column: 36, scope: !2818)
!2824 = !DILocation(line: 231, column: 35, scope: !2818)
!2825 = !DILocation(line: 231, column: 5, scope: !2815)
!2826 = !DILocation(line: 232, column: 38, scope: !2818)
!2827 = !DILocation(line: 232, column: 7, scope: !2818)
!2828 = !DILocation(line: 231, column: 53, scope: !2818)
!2829 = !DILocation(line: 231, column: 5, scope: !2818)
!2830 = distinct !{!2830, !2825, !2831}
!2831 = !DILocation(line: 234, column: 43, scope: !2815)
!2832 = distinct !{!2832, !2812, !2833}
!2833 = !DILocation(line: 234, column: 43, scope: !2813)
!2834 = !DILocation(line: 236, column: 36, scope: !2786)
!2835 = !DILocation(line: 237, column: 1, scope: !2786)
!2836 = distinct !DISubprogram(name: "gsi_start_bb", scope: !483, file: !483, line: 4418, type: !2837, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2839)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!2793, !841}
!2839 = !{!2840, !2841, !2842}
!2840 = !DILocalVariable(name: "bb", arg: 1, scope: !2836, file: !483, line: 4418, type: !841)
!2841 = !DILocalVariable(name: "i", scope: !2836, file: !483, line: 4420, type: !2793)
!2842 = !DILocalVariable(name: "seq", scope: !2836, file: !483, line: 4421, type: !868)
!2843 = !DILocation(line: 0, scope: !2836)
!2844 = !DILocation(line: 4420, column: 24, scope: !2836)
!2845 = !DILocation(line: 4423, column: 9, scope: !2836)
!2846 = !DILocation(line: 4424, column: 11, scope: !2836)
!2847 = !DILocation(line: 4424, column: 5, scope: !2836)
!2848 = !DILocation(line: 4424, column: 9, scope: !2836)
!2849 = !DILocation(line: 4425, column: 5, scope: !2836)
!2850 = !DILocation(line: 4425, column: 9, scope: !2836)
!2851 = !DILocation(line: 4426, column: 5, scope: !2836)
!2852 = !DILocation(line: 4426, column: 8, scope: !2836)
!2853 = !DILocation(line: 4429, column: 1, scope: !2836)
!2854 = distinct !DISubprogram(name: "gsi_end_p", scope: !483, file: !483, line: 4467, type: !2855, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2857)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{!567, !2793}
!2857 = !{!2858}
!2858 = !DILocalVariable(name: "i", arg: 1, scope: !2854, file: !483, line: 4467, type: !2793)
!2859 = !DILocation(line: 4467, column: 33, scope: !2854)
!2860 = !DILocation(line: 4469, column: 12, scope: !2854)
!2861 = !DILocation(line: 4469, column: 16, scope: !2854)
!2862 = !DILocation(line: 4469, column: 10, scope: !2854)
!2863 = !DILocation(line: 4469, column: 3, scope: !2854)
!2864 = distinct !DISubprogram(name: "gsi_stmt", scope: !483, file: !483, line: 4501, type: !2865, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2867)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!878, !2793}
!2867 = !{!2868}
!2868 = !DILocalVariable(name: "i", arg: 1, scope: !2864, file: !483, line: 4501, type: !2793)
!2869 = !DILocation(line: 4501, column: 32, scope: !2864)
!2870 = !DILocation(line: 4503, column: 12, scope: !2864)
!2871 = !DILocation(line: 4503, column: 17, scope: !2864)
!2872 = !DILocation(line: 4503, column: 3, scope: !2864)
!2873 = distinct !DISubprogram(name: "visit_store_addr_for_mod_analysis", scope: !3, file: !3, line: 197, type: !2874, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2876)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!567, !878, !583, !572}
!2876 = !{!2877, !2878, !2879, !2880, !2881}
!2877 = !DILocalVariable(name: "stmt", arg: 1, scope: !2873, file: !3, line: 197, type: !878)
!2878 = !DILocalVariable(name: "op", arg: 2, scope: !2873, file: !3, line: 198, type: !583)
!2879 = !DILocalVariable(name: "data", arg: 3, scope: !2873, file: !3, line: 198, type: !572)
!2880 = !DILocalVariable(name: "info", scope: !2873, file: !3, line: 200, type: !2050)
!2881 = !DILocalVariable(name: "index", scope: !2882, file: !3, line: 204, type: !568)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 203, column: 5)
!2883 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 202, column: 7)
!2884 = !DILocation(line: 0, scope: !2873)
!2885 = !DILocation(line: 202, column: 7, scope: !2883)
!2886 = !DILocation(line: 202, column: 22, scope: !2883)
!2887 = !DILocation(line: 202, column: 7, scope: !2873)
!2888 = !DILocation(line: 200, column: 34, scope: !2873)
!2889 = !DILocation(line: 204, column: 19, scope: !2882)
!2890 = !DILocation(line: 0, scope: !2882)
!2891 = !DILocation(line: 205, column: 7, scope: !2882)
!2892 = !DILocation(line: 206, column: 13, scope: !2882)
!2893 = !DILocation(line: 206, column: 7, scope: !2882)
!2894 = !DILocation(line: 206, column: 27, scope: !2882)
!2895 = !DILocation(line: 206, column: 36, scope: !2882)
!2896 = !DILocation(line: 207, column: 5, scope: !2882)
!2897 = !DILocation(line: 209, column: 3, scope: !2873)
!2898 = distinct !DISubprogram(name: "gsi_next", scope: !483, file: !483, line: 4485, type: !2899, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2902)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{null, !2901}
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2902 = !{!2903}
!2903 = !DILocalVariable(name: "i", arg: 1, scope: !2898, file: !483, line: 4485, type: !2901)
!2904 = !DILocation(line: 0, scope: !2898)
!2905 = !DILocation(line: 4487, column: 15, scope: !2898)
!2906 = !DILocation(line: 4487, column: 20, scope: !2898)
!2907 = !DILocation(line: 4487, column: 10, scope: !2898)
!2908 = !DILocation(line: 4488, column: 1, scope: !2898)
!2909 = distinct !DISubprogram(name: "ipa_count_arguments", scope: !3, file: !3, line: 243, type: !2910, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2912)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !1758}
!2912 = !{!2913, !2914, !2915}
!2913 = !DILocalVariable(name: "cs", arg: 1, scope: !2909, file: !3, line: 243, type: !1758)
!2914 = !DILocalVariable(name: "stmt", scope: !2909, file: !3, line: 245, type: !878)
!2915 = !DILocalVariable(name: "arg_num", scope: !2909, file: !3, line: 246, type: !568)
!2916 = !DILocation(line: 0, scope: !2909)
!2917 = !DILocation(line: 248, column: 14, scope: !2909)
!2918 = !DILocation(line: 249, column: 3, scope: !2909)
!2919 = !DILocation(line: 250, column: 13, scope: !2909)
!2920 = !DILocation(line: 251, column: 7, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 251, column: 7)
!2922 = !DILocation(line: 252, column: 21, scope: !2921)
!2923 = !DILocation(line: 252, column: 7, scope: !2921)
!2924 = !DILocation(line: 251, column: 7, scope: !2909)
!2925 = !DILocation(line: 253, column: 5, scope: !2921)
!2926 = !DILocation(line: 255, column: 30, scope: !2909)
!2927 = !DILocation(line: 255, column: 3, scope: !2909)
!2928 = !DILocation(line: 256, column: 1, scope: !2909)
!2929 = distinct !DISubprogram(name: "is_gimple_call", scope: !483, file: !483, line: 1870, type: !2930, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2933)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!567, !2932}
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !584, line: 60, baseType: !2090)
!2933 = !{!2934}
!2934 = !DILocalVariable(name: "gs", arg: 1, scope: !2929, file: !483, line: 1870, type: !2932)
!2935 = !DILocation(line: 0, scope: !2929)
!2936 = !DILocation(line: 1872, column: 10, scope: !2929)
!2937 = !DILocation(line: 1872, column: 27, scope: !2929)
!2938 = !DILocation(line: 1872, column: 3, scope: !2929)
!2939 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !483, file: !483, line: 2013, type: !2940, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2942)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!7, !2932}
!2942 = !{!2943, !2944}
!2943 = !DILocalVariable(name: "gs", arg: 1, scope: !2939, file: !483, line: 2013, type: !2932)
!2944 = !DILocalVariable(name: "num_ops", scope: !2939, file: !483, line: 2015, type: !7)
!2945 = !DILocation(line: 0, scope: !2939)
!2946 = !DILocation(line: 2017, column: 13, scope: !2939)
!2947 = !DILocation(line: 2018, column: 18, scope: !2939)
!2948 = !DILocation(line: 2018, column: 3, scope: !2939)
!2949 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_base_length", scope: !456, file: !456, line: 316, type: !2950, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2954)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!7, !2952}
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2078)
!2954 = !{!2955}
!2955 = !DILocalVariable(name: "vec_", arg: 1, scope: !2949, file: !456, line: 316, type: !2952)
!2956 = !DILocation(line: 0, scope: !2949)
!2957 = !DILocation(line: 316, column: 1, scope: !2949)
!2958 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_gc_safe_grow_cleared", scope: !456, file: !456, line: 317, type: !2959, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2962)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{null, !2961, !568}
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2962 = !{!2963, !2964, !2965}
!2963 = !DILocalVariable(name: "vec_", arg: 1, scope: !2958, file: !456, line: 317, type: !2961)
!2964 = !DILocalVariable(name: "size_", arg: 2, scope: !2958, file: !456, line: 317, type: !568)
!2965 = !DILocalVariable(name: "oldsize", scope: !2958, file: !456, line: 317, type: !568)
!2966 = !DILocation(line: 0, scope: !2958)
!2967 = !DILocation(line: 317, column: 1, scope: !2958)
!2968 = distinct !DISubprogram(name: "ipa_set_cs_argument_count", scope: !456, file: !456, line: 287, type: !2969, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2972)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !2971, !568}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2972 = !{!2973, !2974}
!2973 = !DILocalVariable(name: "args", arg: 1, scope: !2968, file: !456, line: 287, type: !2971)
!2974 = !DILocalVariable(name: "count", arg: 2, scope: !2968, file: !456, line: 287, type: !568)
!2975 = !DILocation(line: 0, scope: !2968)
!2976 = !DILocation(line: 289, column: 9, scope: !2968)
!2977 = !DILocation(line: 289, column: 24, scope: !2968)
!2978 = !DILocation(line: 290, column: 1, scope: !2968)
!2979 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_base_index", scope: !456, file: !456, line: 316, type: !2980, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2984)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!2982, !2983, !7}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2984 = !{!2985, !2986}
!2985 = !DILocalVariable(name: "vec_", arg: 1, scope: !2979, file: !456, line: 316, type: !2983)
!2986 = !DILocalVariable(name: "ix_", arg: 2, scope: !2979, file: !456, line: 316, type: !7)
!2987 = !DILocation(line: 0, scope: !2979)
!2988 = !DILocation(line: 316, column: 1, scope: !2979)
!2989 = distinct !DISubprogram(name: "ipa_print_node_jump_functions", scope: !3, file: !3, line: 262, type: !2990, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2992)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2224, !579}
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000}
!2993 = !DILocalVariable(name: "f", arg: 1, scope: !2989, file: !3, line: 262, type: !2224)
!2994 = !DILocalVariable(name: "node", arg: 2, scope: !2989, file: !3, line: 262, type: !579)
!2995 = !DILocalVariable(name: "i", scope: !2989, file: !3, line: 264, type: !568)
!2996 = !DILocalVariable(name: "count", scope: !2989, file: !3, line: 264, type: !568)
!2997 = !DILocalVariable(name: "cs", scope: !2989, file: !3, line: 265, type: !1758)
!2998 = !DILocalVariable(name: "jump_func", scope: !2989, file: !3, line: 266, type: !2025)
!2999 = !DILocalVariable(name: "type", scope: !2989, file: !3, line: 267, type: !461)
!3000 = !DILocalVariable(name: "val", scope: !3001, file: !3, line: 289, type: !583)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 288, column: 7)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 287, column: 13)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 285, column: 8)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 280, column: 2)
!3005 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 279, column: 7)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 279, column: 7)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 271, column: 5)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 270, column: 3)
!3009 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 270, column: 3)
!3010 = !DILocation(line: 0, scope: !2989)
!3011 = !DILocation(line: 269, column: 52, scope: !2989)
!3012 = !DILocation(line: 269, column: 3, scope: !2989)
!3013 = !DILocation(line: 270, column: 19, scope: !3009)
!3014 = !DILocation(line: 270, column: 8, scope: !3009)
!3015 = !DILocation(line: 0, scope: !3009)
!3016 = !DILocation(line: 270, column: 3, scope: !3009)
!3017 = !DILocation(line: 272, column: 12, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 272, column: 11)
!3019 = !DILocation(line: 272, column: 11, scope: !3007)
!3020 = !DILocation(line: 275, column: 40, scope: !3007)
!3021 = !DILocation(line: 275, column: 7, scope: !3007)
!3022 = !DILocation(line: 276, column: 56, scope: !3007)
!3023 = !DILocation(line: 276, column: 34, scope: !3007)
!3024 = !DILocation(line: 276, column: 7, scope: !3007)
!3025 = !DILocation(line: 278, column: 42, scope: !3007)
!3026 = !DILocation(line: 278, column: 15, scope: !3007)
!3027 = !DILocation(line: 279, column: 12, scope: !3006)
!3028 = !DILocation(line: 0, scope: !3006)
!3029 = !DILocation(line: 279, column: 21, scope: !3005)
!3030 = !DILocation(line: 279, column: 7, scope: !3006)
!3031 = !DILocation(line: 281, column: 39, scope: !3004)
!3032 = !DILocation(line: 281, column: 16, scope: !3004)
!3033 = !DILocation(line: 282, column: 22, scope: !3004)
!3034 = !DILocation(line: 284, column: 4, scope: !3004)
!3035 = !DILocation(line: 285, column: 8, scope: !3004)
!3036 = !DILocation(line: 286, column: 6, scope: !3003)
!3037 = !DILocation(line: 289, column: 30, scope: !3001)
!3038 = !DILocation(line: 289, column: 36, scope: !3001)
!3039 = !DILocation(line: 0, scope: !3001)
!3040 = !DILocation(line: 290, column: 8, scope: !3001)
!3041 = !DILocation(line: 291, column: 8, scope: !3001)
!3042 = !DILocation(line: 292, column: 8, scope: !3001)
!3043 = !DILocation(line: 293, column: 6, scope: !3001)
!3044 = !DILocation(line: 296, column: 8, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 295, column: 6)
!3046 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 294, column: 13)
!3047 = !DILocation(line: 297, column: 42, scope: !3045)
!3048 = !DILocation(line: 297, column: 59, scope: !3045)
!3049 = !DILocation(line: 297, column: 8, scope: !3045)
!3050 = !DILocation(line: 298, column: 8, scope: !3045)
!3051 = !DILocation(line: 299, column: 59, scope: !3045)
!3052 = !DILocation(line: 299, column: 8, scope: !3045)
!3053 = !DILocation(line: 300, column: 8, scope: !3045)
!3054 = !DILocation(line: 301, column: 6, scope: !3045)
!3055 = !DILocation(line: 304, column: 8, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 303, column: 7)
!3057 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 302, column: 13)
!3058 = !DILocation(line: 306, column: 40, scope: !3056)
!3059 = !DILocation(line: 308, column: 22, scope: !3056)
!3060 = !DILocation(line: 308, column: 28, scope: !3056)
!3061 = !DILocation(line: 308, column: 41, scope: !3056)
!3062 = !DILocation(line: 307, column: 10, scope: !3056)
!3063 = !DILocation(line: 305, column: 8, scope: !3056)
!3064 = !DILocation(line: 309, column: 42, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 309, column: 12)
!3066 = !DILocation(line: 309, column: 52, scope: !3065)
!3067 = !DILocation(line: 309, column: 12, scope: !3056)
!3068 = !DILocation(line: 310, column: 23, scope: !3065)
!3069 = !DILocation(line: 311, column: 39, scope: !3065)
!3070 = !DILocation(line: 310, column: 3, scope: !3065)
!3071 = !DILocation(line: 312, column: 17, scope: !3056)
!3072 = !DILocation(line: 312, column: 8, scope: !3056)
!3073 = !DILocation(line: 313, column: 7, scope: !3056)
!3074 = !DILocation(line: 316, column: 8, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 315, column: 6)
!3076 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 314, column: 13)
!3077 = !DILocation(line: 318, column: 36, scope: !3075)
!3078 = !DILocation(line: 319, column: 36, scope: !3075)
!3079 = !DILocation(line: 317, column: 8, scope: !3075)
!3080 = !DILocation(line: 320, column: 6, scope: !3075)
!3081 = !DILocation(line: 279, column: 31, scope: !3005)
!3082 = !DILocation(line: 279, column: 7, scope: !3005)
!3083 = distinct !{!3083, !3030, !3084}
!3084 = !DILocation(line: 321, column: 2, scope: !3006)
!3085 = !DILocation(line: 270, column: 41, scope: !3008)
!3086 = !DILocation(line: 270, column: 3, scope: !3008)
!3087 = distinct !{!3087, !3016, !3088}
!3088 = !DILocation(line: 322, column: 5, scope: !3009)
!3089 = !DILocation(line: 323, column: 1, scope: !2989)
!3090 = distinct !DISubprogram(name: "ipa_edge_args_info_available_for_edge_p", scope: !456, file: !456, line: 382, type: !3091, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!567, !1758}
!3093 = !{!3094}
!3094 = !DILocalVariable(name: "edge", arg: 1, scope: !3090, file: !456, line: 382, type: !1758)
!3095 = !DILocation(line: 0, scope: !3090)
!3096 = !DILocation(line: 384, column: 28, scope: !3090)
!3097 = !DILocation(line: 384, column: 34, scope: !3090)
!3098 = !DILocation(line: 384, column: 32, scope: !3090)
!3099 = !DILocation(line: 384, column: 10, scope: !3090)
!3100 = !DILocation(line: 384, column: 3, scope: !3090)
!3101 = distinct !DISubprogram(name: "ipa_get_cs_argument_count", scope: !456, file: !456, line: 295, type: !3102, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3104)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!568, !2971}
!3104 = !{!3105}
!3105 = !DILocalVariable(name: "args", arg: 1, scope: !3101, file: !456, line: 295, type: !2971)
!3106 = !DILocation(line: 0, scope: !3101)
!3107 = !DILocation(line: 297, column: 16, scope: !3101)
!3108 = !DILocation(line: 297, column: 3, scope: !3101)
!3109 = distinct !DISubprogram(name: "ipa_get_ith_jump_func", scope: !456, file: !456, line: 305, type: !3110, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3112)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!2025, !2971, !568}
!3112 = !{!3113, !3114}
!3113 = !DILocalVariable(name: "args", arg: 1, scope: !3109, file: !456, line: 305, type: !2971)
!3114 = !DILocalVariable(name: "i", arg: 2, scope: !3109, file: !456, line: 305, type: !568)
!3115 = !DILocation(line: 0, scope: !3109)
!3116 = !DILocation(line: 307, column: 17, scope: !3109)
!3117 = !DILocation(line: 307, column: 11, scope: !3109)
!3118 = !DILocation(line: 307, column: 3, scope: !3109)
!3119 = distinct !DISubprogram(name: "ipa_print_all_jump_functions", scope: !3, file: !3, line: 328, type: !3120, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3122)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{null, !2224}
!3122 = !{!3123, !3124}
!3123 = !DILocalVariable(name: "f", arg: 1, scope: !3119, file: !3, line: 328, type: !2224)
!3124 = !DILocalVariable(name: "node", scope: !3119, file: !3, line: 330, type: !579)
!3125 = !DILocation(line: 0, scope: !3119)
!3126 = !DILocation(line: 332, column: 3, scope: !3119)
!3127 = !DILocation(line: 333, column: 8, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 333, column: 3)
!3129 = !DILocation(line: 0, scope: !3128)
!3130 = !DILocation(line: 333, column: 3, scope: !3128)
!3131 = !DILocation(line: 335, column: 7, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 334, column: 5)
!3133 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 333, column: 3)
!3134 = !DILocation(line: 333, column: 48, scope: !3133)
!3135 = !DILocation(line: 333, column: 3, scope: !3133)
!3136 = distinct !{!3136, !3130, !3137}
!3137 = !DILocation(line: 336, column: 5, scope: !3128)
!3138 = !DILocation(line: 337, column: 1, scope: !3119)
!3139 = distinct !DISubprogram(name: "ipa_compute_jump_functions", scope: !3, file: !3, line: 658, type: !2910, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3140)
!3140 = !{!3141, !3142, !3143, !3144}
!3141 = !DILocalVariable(name: "cs", arg: 1, scope: !3139, file: !3, line: 658, type: !1758)
!3142 = !DILocalVariable(name: "info", scope: !3139, file: !3, line: 660, type: !2050)
!3143 = !DILocalVariable(name: "arguments", scope: !3139, file: !3, line: 661, type: !2971)
!3144 = !DILocalVariable(name: "call", scope: !3139, file: !3, line: 662, type: !878)
!3145 = !DILocation(line: 0, scope: !3139)
!3146 = !DILocation(line: 660, column: 34, scope: !3139)
!3147 = !DILocation(line: 661, column: 37, scope: !3139)
!3148 = !DILocation(line: 664, column: 7, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 664, column: 7)
!3150 = !DILocation(line: 664, column: 45, scope: !3149)
!3151 = !DILocation(line: 664, column: 50, scope: !3149)
!3152 = !DILocation(line: 664, column: 64, scope: !3149)
!3153 = !DILocation(line: 664, column: 53, scope: !3149)
!3154 = !DILocation(line: 664, column: 7, scope: !3139)
!3155 = !DILocation(line: 666, column: 31, scope: !3139)
!3156 = !DILocation(line: 666, column: 29, scope: !3139)
!3157 = !DILocation(line: 669, column: 14, scope: !3139)
!3158 = !DILocation(line: 670, column: 3, scope: !3139)
!3159 = !DILocation(line: 673, column: 51, scope: !3139)
!3160 = !DILocation(line: 673, column: 3, scope: !3139)
!3161 = !DILocation(line: 677, column: 59, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 677, column: 7)
!3163 = !DILocation(line: 677, column: 8, scope: !3162)
!3164 = !DILocation(line: 677, column: 7, scope: !3139)
!3165 = !DILocation(line: 682, column: 48, scope: !3139)
!3166 = !DILocation(line: 682, column: 3, scope: !3139)
!3167 = !DILocation(line: 683, column: 1, scope: !3139)
!3168 = distinct !DISubprogram(name: "compute_scalar_jump_functions", scope: !3, file: !3, line: 413, type: !3169, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3171)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null, !2050, !2025, !878}
!3171 = !{!3172, !3173, !3174, !3175, !3176, !3177}
!3172 = !DILocalVariable(name: "info", arg: 1, scope: !3168, file: !3, line: 413, type: !2050)
!3173 = !DILocalVariable(name: "functions", arg: 2, scope: !3168, file: !3, line: 414, type: !2025)
!3174 = !DILocalVariable(name: "call", arg: 3, scope: !3168, file: !3, line: 415, type: !878)
!3175 = !DILocalVariable(name: "arg", scope: !3168, file: !3, line: 417, type: !583)
!3176 = !DILocalVariable(name: "num", scope: !3168, file: !3, line: 418, type: !7)
!3177 = !DILocalVariable(name: "index", scope: !3178, file: !3, line: 433, type: !568)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 432, column: 6)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 431, column: 8)
!3180 = distinct !DILexicalBlock(scope: !3181, file: !3, line: 430, column: 2)
!3181 = distinct !DILexicalBlock(scope: !3182, file: !3, line: 429, column: 16)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 424, column: 11)
!3183 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 421, column: 5)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 420, column: 3)
!3185 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 420, column: 3)
!3186 = !DILocation(line: 0, scope: !3168)
!3187 = !DILocation(line: 420, column: 8, scope: !3185)
!3188 = !DILocation(line: 0, scope: !3185)
!3189 = !DILocation(line: 420, column: 23, scope: !3184)
!3190 = !DILocation(line: 420, column: 21, scope: !3184)
!3191 = !DILocation(line: 420, column: 3, scope: !3185)
!3192 = !DILocation(line: 422, column: 13, scope: !3183)
!3193 = !DILocation(line: 424, column: 11, scope: !3182)
!3194 = !DILocation(line: 424, column: 11, scope: !3183)
!3195 = !DILocation(line: 426, column: 19, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3182, file: !3, line: 425, column: 2)
!3197 = !DILocation(line: 426, column: 24, scope: !3196)
!3198 = !DILocation(line: 427, column: 19, scope: !3196)
!3199 = !DILocation(line: 427, column: 25, scope: !3196)
!3200 = !DILocation(line: 427, column: 34, scope: !3196)
!3201 = !DILocation(line: 428, column: 2, scope: !3196)
!3202 = !DILocation(line: 429, column: 16, scope: !3181)
!3203 = !DILocation(line: 429, column: 32, scope: !3181)
!3204 = !DILocation(line: 429, column: 16, scope: !3182)
!3205 = !DILocation(line: 431, column: 8, scope: !3179)
!3206 = !DILocation(line: 431, column: 8, scope: !3180)
!3207 = !DILocation(line: 433, column: 52, scope: !3178)
!3208 = !DILocation(line: 433, column: 20, scope: !3178)
!3209 = !DILocation(line: 0, scope: !3178)
!3210 = !DILocation(line: 435, column: 18, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 435, column: 12)
!3212 = !DILocation(line: 435, column: 12, scope: !3178)
!3213 = !DILocation(line: 437, column: 20, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 436, column: 3)
!3215 = !DILocation(line: 437, column: 25, scope: !3214)
!3216 = !DILocation(line: 438, column: 39, scope: !3214)
!3217 = !DILocation(line: 438, column: 49, scope: !3214)
!3218 = !DILocation(line: 439, column: 20, scope: !3214)
!3219 = !DILocation(line: 439, column: 26, scope: !3214)
!3220 = !DILocation(line: 439, column: 39, scope: !3214)
!3221 = !DILocation(line: 439, column: 49, scope: !3214)
!3222 = !DILocation(line: 440, column: 3, scope: !3214)
!3223 = !DILocation(line: 443, column: 43, scope: !3179)
!3224 = !DILocation(line: 443, column: 6, scope: !3179)
!3225 = !DILocation(line: 420, column: 55, scope: !3184)
!3226 = !DILocation(line: 420, column: 3, scope: !3184)
!3227 = distinct !{!3227, !3191, !3228}
!3228 = !DILocation(line: 445, column: 5, scope: !3185)
!3229 = !DILocation(line: 446, column: 1, scope: !3168)
!3230 = distinct !DISubprogram(name: "compute_pass_through_member_ptrs", scope: !3, file: !3, line: 488, type: !3231, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3233)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!567, !2050, !2025, !878}
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3239, !3240}
!3234 = !DILocalVariable(name: "info", arg: 1, scope: !3230, file: !3, line: 488, type: !2050)
!3235 = !DILocalVariable(name: "functions", arg: 2, scope: !3230, file: !3, line: 489, type: !2025)
!3236 = !DILocalVariable(name: "call", arg: 3, scope: !3230, file: !3, line: 490, type: !878)
!3237 = !DILocalVariable(name: "undecided_members", scope: !3230, file: !3, line: 492, type: !567)
!3238 = !DILocalVariable(name: "num", scope: !3230, file: !3, line: 493, type: !7)
!3239 = !DILocalVariable(name: "arg", scope: !3230, file: !3, line: 494, type: !583)
!3240 = !DILocalVariable(name: "index", scope: !3241, file: !3, line: 504, type: !568)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 503, column: 6)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 502, column: 8)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 501, column: 2)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 500, column: 11)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 497, column: 5)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 496, column: 3)
!3247 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 496, column: 3)
!3248 = !DILocation(line: 0, scope: !3230)
!3249 = !DILocation(line: 496, column: 8, scope: !3247)
!3250 = !DILocation(line: 496, column: 23, scope: !3246)
!3251 = !DILocation(line: 496, column: 21, scope: !3246)
!3252 = !DILocation(line: 496, column: 3, scope: !3247)
!3253 = !DILocation(line: 498, column: 13, scope: !3245)
!3254 = !DILocation(line: 500, column: 35, scope: !3244)
!3255 = !DILocation(line: 500, column: 11, scope: !3244)
!3256 = !DILocation(line: 500, column: 11, scope: !3245)
!3257 = !DILocation(line: 502, column: 8, scope: !3242)
!3258 = !DILocation(line: 502, column: 24, scope: !3242)
!3259 = !DILocation(line: 502, column: 8, scope: !3243)
!3260 = !DILocation(line: 504, column: 20, scope: !3241)
!3261 = !DILocation(line: 0, scope: !3241)
!3262 = !DILocation(line: 506, column: 8, scope: !3241)
!3263 = !DILocation(line: 507, column: 13, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 507, column: 12)
!3265 = !DILocation(line: 507, column: 12, scope: !3241)
!3266 = !DILocation(line: 509, column: 20, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 508, column: 3)
!3268 = !DILocation(line: 509, column: 25, scope: !3267)
!3269 = !DILocation(line: 510, column: 39, scope: !3267)
!3270 = !DILocation(line: 510, column: 49, scope: !3267)
!3271 = !DILocation(line: 511, column: 20, scope: !3267)
!3272 = !DILocation(line: 511, column: 26, scope: !3267)
!3273 = !DILocation(line: 511, column: 39, scope: !3267)
!3274 = !DILocation(line: 511, column: 49, scope: !3267)
!3275 = !DILocation(line: 512, column: 3, scope: !3267)
!3276 = !DILocation(line: 496, column: 55, scope: !3246)
!3277 = !DILocation(line: 496, column: 3, scope: !3246)
!3278 = distinct !{!3278, !3252, !3279}
!3279 = !DILocation(line: 519, column: 5, scope: !3247)
!3280 = !DILocation(line: 521, column: 3, scope: !3230)
!3281 = distinct !DISubprogram(name: "compute_cst_member_ptr_arguments", scope: !3, file: !3, line: 635, type: !3282, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3284)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{null, !2025, !878}
!3284 = !{!3285, !3286, !3287, !3288, !3289, !3290}
!3285 = !DILocalVariable(name: "functions", arg: 1, scope: !3281, file: !3, line: 635, type: !2025)
!3286 = !DILocalVariable(name: "call", arg: 2, scope: !3281, file: !3, line: 636, type: !878)
!3287 = !DILocalVariable(name: "num", scope: !3281, file: !3, line: 638, type: !7)
!3288 = !DILocalVariable(name: "arg", scope: !3281, file: !3, line: 639, type: !583)
!3289 = !DILocalVariable(name: "method_field", scope: !3281, file: !3, line: 639, type: !583)
!3290 = !DILocalVariable(name: "delta_field", scope: !3281, file: !3, line: 639, type: !583)
!3291 = !DILocation(line: 0, scope: !3281)
!3292 = !DILocation(line: 639, column: 3, scope: !3281)
!3293 = !DILocation(line: 641, column: 8, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 641, column: 3)
!3295 = !DILocation(line: 0, scope: !3294)
!3296 = !DILocation(line: 641, column: 23, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 641, column: 3)
!3298 = !DILocation(line: 641, column: 21, scope: !3297)
!3299 = !DILocation(line: 641, column: 3, scope: !3294)
!3300 = !DILocation(line: 643, column: 13, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 642, column: 5)
!3302 = !DILocation(line: 645, column: 26, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 645, column: 11)
!3304 = !DILocation(line: 645, column: 31, scope: !3303)
!3305 = !DILocation(line: 646, column: 4, scope: !3303)
!3306 = !DILocation(line: 646, column: 31, scope: !3303)
!3307 = !DILocation(line: 646, column: 7, scope: !3303)
!3308 = !DILocation(line: 645, column: 11, scope: !3301)
!3309 = !DILocation(line: 648, column: 39, scope: !3303)
!3310 = !DILocation(line: 648, column: 53, scope: !3303)
!3311 = !DILocation(line: 649, column: 8, scope: !3303)
!3312 = !DILocation(line: 648, column: 2, scope: !3303)
!3313 = !DILocation(line: 641, column: 55, scope: !3297)
!3314 = !DILocation(line: 641, column: 3, scope: !3297)
!3315 = distinct !{!3315, !3299, !3316}
!3316 = !DILocation(line: 650, column: 5, scope: !3294)
!3317 = !DILocation(line: 651, column: 1, scope: !3281)
!3318 = distinct !DISubprogram(name: "ipa_analyze_params_uses", scope: !3, file: !3, line: 950, type: !1866, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3320 = !DILocalVariable(name: "node", arg: 1, scope: !3318, file: !3, line: 950, type: !579)
!3321 = !DILocalVariable(name: "decl", scope: !3318, file: !3, line: 952, type: !583)
!3322 = !DILocalVariable(name: "bb", scope: !3318, file: !3, line: 953, type: !841)
!3323 = !DILocalVariable(name: "func", scope: !3318, file: !3, line: 954, type: !829)
!3324 = !DILocalVariable(name: "gsi", scope: !3318, file: !3, line: 955, type: !2793)
!3325 = !DILocalVariable(name: "info", scope: !3318, file: !3, line: 956, type: !2050)
!3326 = !DILocalVariable(name: "stmt", scope: !3327, file: !3, line: 966, type: !878)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 965, column: 2)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 964, column: 7)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 964, column: 7)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 963, column: 5)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 962, column: 3)
!3332 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 962, column: 3)
!3333 = !DILocation(line: 0, scope: !3318)
!3334 = !DILocation(line: 952, column: 21, scope: !3318)
!3335 = !DILocation(line: 955, column: 3, scope: !3318)
!3336 = !DILocation(line: 956, column: 34, scope: !3318)
!3337 = !DILocation(line: 958, column: 7, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 958, column: 7)
!3339 = !DILocation(line: 958, column: 34, scope: !3338)
!3340 = !DILocation(line: 958, column: 39, scope: !3338)
!3341 = !DILocation(line: 958, column: 48, scope: !3338)
!3342 = !DILocation(line: 958, column: 42, scope: !3338)
!3343 = !DILocation(line: 958, column: 7, scope: !3318)
!3344 = !DILocation(line: 961, column: 10, scope: !3318)
!3345 = !DILocation(line: 962, column: 3, scope: !3332)
!3346 = !DILocation(line: 0, scope: !3329)
!3347 = !DILocation(line: 962, column: 3, scope: !3331)
!3348 = !DILocation(line: 0, scope: !3332)
!3349 = !DILocation(line: 964, column: 18, scope: !3329)
!3350 = !DILocation(line: 964, column: 12, scope: !3329)
!3351 = !DILocation(line: 964, column: 38, scope: !3328)
!3352 = !DILocation(line: 964, column: 37, scope: !3328)
!3353 = !DILocation(line: 964, column: 7, scope: !3329)
!3354 = !DILocation(line: 966, column: 18, scope: !3327)
!3355 = !DILocation(line: 0, scope: !3327)
!3356 = !DILocation(line: 967, column: 4, scope: !3327)
!3357 = !DILocation(line: 964, column: 55, scope: !3328)
!3358 = !DILocation(line: 964, column: 7, scope: !3328)
!3359 = distinct !{!3359, !3353, !3360}
!3360 = !DILocation(line: 968, column: 2, scope: !3329)
!3361 = distinct !{!3361, !3345, !3362}
!3362 = !DILocation(line: 969, column: 5, scope: !3332)
!3363 = !DILocation(line: 971, column: 28, scope: !3318)
!3364 = !DILocation(line: 972, column: 1, scope: !3318)
!3365 = distinct !DISubprogram(name: "ipa_analyze_stmt_uses", scope: !3, file: !3, line: 939, type: !3366, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3368)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{null, !2050, !878}
!3368 = !{!3369, !3370}
!3369 = !DILocalVariable(name: "info", arg: 1, scope: !3365, file: !3, line: 939, type: !2050)
!3370 = !DILocalVariable(name: "stmt", arg: 2, scope: !3365, file: !3, line: 939, type: !878)
!3371 = !DILocation(line: 0, scope: !3365)
!3372 = !DILocation(line: 941, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 941, column: 7)
!3374 = !DILocation(line: 941, column: 7, scope: !3365)
!3375 = !DILocation(line: 942, column: 5, scope: !3373)
!3376 = !DILocation(line: 943, column: 1, scope: !3365)
!3377 = distinct !DISubprogram(name: "ipa_propagate_indirect_call_infos", scope: !3, file: !3, line: 1156, type: !3378, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3381)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!567, !1758, !3380}
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!3381 = !{!3382, !3383}
!3382 = !DILocalVariable(name: "cs", arg: 1, scope: !3377, file: !3, line: 1156, type: !1758)
!3383 = !DILocalVariable(name: "new_edges", arg: 2, scope: !3377, file: !3, line: 1157, type: !3380)
!3384 = !DILocation(line: 0, scope: !3377)
!3385 = !DILocation(line: 1160, column: 7, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1160, column: 7)
!3387 = !DILocation(line: 1165, column: 8, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1165, column: 7)
!3389 = !DILocation(line: 1160, column: 7, scope: !3377)
!3390 = !DILocation(line: 1167, column: 3, scope: !3377)
!3391 = !DILocation(line: 1169, column: 53, scope: !3377)
!3392 = !DILocation(line: 1169, column: 10, scope: !3377)
!3393 = !DILocation(line: 1169, column: 3, scope: !3377)
!3394 = !DILocation(line: 1170, column: 1, scope: !3377)
!3395 = distinct !DISubprogram(name: "propagate_info_to_inlined_callees", scope: !3, file: !3, line: 1131, type: !3396, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!567, !1758, !579, !3380}
!3398 = !{!3399, !3400, !3401, !3402, !3403}
!3399 = !DILocalVariable(name: "cs", arg: 1, scope: !3395, file: !3, line: 1131, type: !1758)
!3400 = !DILocalVariable(name: "node", arg: 2, scope: !3395, file: !3, line: 1132, type: !579)
!3401 = !DILocalVariable(name: "new_edges", arg: 3, scope: !3395, file: !3, line: 1133, type: !3380)
!3402 = !DILocalVariable(name: "e", scope: !3395, file: !3, line: 1135, type: !1758)
!3403 = !DILocalVariable(name: "res", scope: !3395, file: !3, line: 1136, type: !567)
!3404 = !DILocation(line: 0, scope: !3395)
!3405 = !DILocation(line: 1138, column: 9, scope: !3395)
!3406 = !DILocation(line: 1140, column: 18, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1140, column: 3)
!3408 = !DILocation(line: 1140, column: 8, scope: !3407)
!3409 = !DILocation(line: 1138, column: 7, scope: !3395)
!3410 = !DILocation(line: 0, scope: !3407)
!3411 = !DILocation(line: 1140, column: 3, scope: !3407)
!3412 = !DILocation(line: 1141, column: 13, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1141, column: 9)
!3414 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1140, column: 3)
!3415 = !DILocation(line: 1141, column: 10, scope: !3413)
!3416 = !DILocation(line: 1141, column: 9, scope: !3414)
!3417 = !DILocation(line: 1142, column: 56, scope: !3413)
!3418 = !DILocation(line: 1142, column: 14, scope: !3413)
!3419 = !DILocation(line: 1142, column: 11, scope: !3413)
!3420 = !DILocation(line: 1142, column: 7, scope: !3413)
!3421 = !DILocation(line: 1144, column: 7, scope: !3413)
!3422 = !DILocation(line: 1140, column: 37, scope: !3414)
!3423 = !DILocation(line: 1140, column: 3, scope: !3414)
!3424 = distinct !{!3424, !3411, !3425}
!3425 = !DILocation(line: 1144, column: 50, scope: !3407)
!3426 = !DILocation(line: 1146, column: 3, scope: !3395)
!3427 = distinct !DISubprogram(name: "ipa_free_edge_args_substructures", scope: !3, file: !3, line: 1176, type: !3428, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3430)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !2971}
!3430 = !{!3431}
!3431 = !DILocalVariable(name: "args", arg: 1, scope: !3427, file: !3, line: 1176, type: !2971)
!3432 = !DILocation(line: 0, scope: !3427)
!3433 = !DILocation(line: 1178, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1178, column: 7)
!3435 = !DILocation(line: 1178, column: 7, scope: !3434)
!3436 = !DILocation(line: 1178, column: 7, scope: !3427)
!3437 = !DILocation(line: 1179, column: 5, scope: !3434)
!3438 = !DILocation(line: 1181, column: 11, scope: !3427)
!3439 = !DILocation(line: 1181, column: 3, scope: !3427)
!3440 = !DILocation(line: 1182, column: 1, scope: !3427)
!3441 = distinct !DISubprogram(name: "ipa_free_all_edge_args", scope: !3, file: !3, line: 1187, type: !1838, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3442)
!3442 = !{!3443, !3444}
!3443 = !DILocalVariable(name: "i", scope: !3441, file: !3, line: 1189, type: !568)
!3444 = !DILocalVariable(name: "args", scope: !3441, file: !3, line: 1190, type: !2971)
!3445 = !DILocation(line: 1190, column: 3, scope: !3441)
!3446 = !DILocation(line: 0, scope: !3441)
!3447 = !DILocation(line: 1192, column: 8, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 1192, column: 3)
!3449 = !DILocation(line: 0, scope: !3448)
!3450 = !DILocation(line: 1193, column: 8, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 1192, column: 3)
!3452 = !DILocation(line: 1192, column: 3, scope: !3448)
!3453 = !DILocation(line: 1195, column: 39, scope: !3451)
!3454 = !DILocation(line: 1195, column: 5, scope: !3451)
!3455 = !DILocation(line: 1194, column: 9, scope: !3451)
!3456 = !DILocation(line: 1192, column: 3, scope: !3451)
!3457 = distinct !{!3457, !3452, !3458}
!3458 = !DILocation(line: 1195, column: 43, scope: !3448)
!3459 = !DILocation(line: 1197, column: 3, scope: !3441)
!3460 = !DILocation(line: 1198, column: 24, scope: !3441)
!3461 = !DILocation(line: 1199, column: 1, scope: !3441)
!3462 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_base_iterate", scope: !456, file: !456, line: 316, type: !3463, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3466)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!568, !2983, !7, !3465}
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!3466 = !{!3467, !3468, !3469}
!3467 = !DILocalVariable(name: "vec_", arg: 1, scope: !3462, file: !456, line: 316, type: !2983)
!3468 = !DILocalVariable(name: "ix_", arg: 2, scope: !3462, file: !456, line: 316, type: !7)
!3469 = !DILocalVariable(name: "ptr", arg: 3, scope: !3462, file: !456, line: 316, type: !3465)
!3470 = !DILocation(line: 0, scope: !3462)
!3471 = !DILocation(line: 316, column: 1, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3462, file: !456, line: 316, column: 1)
!3473 = !DILocation(line: 316, column: 1, scope: !3462)
!3474 = !DILocation(line: 316, column: 1, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3472, file: !456, line: 316, column: 1)
!3476 = !DILocation(line: 316, column: 1, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3472, file: !456, line: 316, column: 1)
!3478 = !DILocation(line: 0, scope: !3472)
!3479 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_gc_free", scope: !456, file: !456, line: 317, type: !3480, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3482)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{null, !2961}
!3482 = !{!3483}
!3483 = !DILocalVariable(name: "vec_", arg: 1, scope: !3479, file: !456, line: 317, type: !2961)
!3484 = !DILocation(line: 0, scope: !3479)
!3485 = !DILocation(line: 317, column: 1, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3479, file: !456, line: 317, column: 1)
!3487 = !DILocation(line: 317, column: 1, scope: !3479)
!3488 = distinct !DISubprogram(name: "ipa_free_node_params_substructures", scope: !3, file: !3, line: 1205, type: !3489, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3491)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{null, !2050}
!3491 = !{!3492, !3493}
!3492 = !DILocalVariable(name: "info", arg: 1, scope: !3488, file: !3, line: 1205, type: !2050)
!3493 = !DILocalVariable(name: "note", scope: !3494, file: !3, line: 1212, type: !2056)
!3494 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 1211, column: 5)
!3495 = !DILocation(line: 0, scope: !3488)
!3496 = !DILocation(line: 1207, column: 13, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 1207, column: 7)
!3498 = !DILocation(line: 1207, column: 7, scope: !3497)
!3499 = !DILocation(line: 1207, column: 7, scope: !3488)
!3500 = !DILocation(line: 1208, column: 5, scope: !3497)
!3501 = !DILocation(line: 0, scope: !3494)
!3502 = !DILocation(line: 1210, column: 3, scope: !3488)
!3503 = !DILocation(line: 1210, column: 16, scope: !3488)
!3504 = !DILocation(line: 1213, column: 33, scope: !3494)
!3505 = !DILocation(line: 1213, column: 25, scope: !3494)
!3506 = !DILocation(line: 1214, column: 13, scope: !3494)
!3507 = !DILocation(line: 1214, column: 7, scope: !3494)
!3508 = distinct !{!3508, !3502, !3509}
!3509 = !DILocation(line: 1215, column: 5, scope: !3488)
!3510 = !DILocation(line: 1217, column: 11, scope: !3488)
!3511 = !DILocation(line: 1217, column: 3, scope: !3488)
!3512 = !DILocation(line: 1218, column: 1, scope: !3488)
!3513 = distinct !DISubprogram(name: "ipa_free_all_node_params", scope: !3, file: !3, line: 1223, type: !1838, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3514)
!3514 = !{!3515, !3516}
!3515 = !DILocalVariable(name: "i", scope: !3513, file: !3, line: 1225, type: !568)
!3516 = !DILocalVariable(name: "info", scope: !3513, file: !3, line: 1226, type: !2050)
!3517 = !DILocation(line: 1226, column: 3, scope: !3513)
!3518 = !DILocation(line: 0, scope: !3513)
!3519 = !DILocation(line: 1228, column: 8, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1228, column: 3)
!3521 = !DILocation(line: 0, scope: !3520)
!3522 = !DILocation(line: 1229, column: 8, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 1228, column: 3)
!3524 = !DILocation(line: 1228, column: 3, scope: !3520)
!3525 = !DILocation(line: 1231, column: 41, scope: !3523)
!3526 = !DILocation(line: 1231, column: 5, scope: !3523)
!3527 = !DILocation(line: 1230, column: 9, scope: !3523)
!3528 = !DILocation(line: 1228, column: 3, scope: !3523)
!3529 = distinct !{!3529, !3524, !3530}
!3530 = !DILocation(line: 1231, column: 45, scope: !3520)
!3531 = !DILocation(line: 1233, column: 3, scope: !3513)
!3532 = !DILocation(line: 1234, column: 26, scope: !3513)
!3533 = !DILocation(line: 1235, column: 1, scope: !3513)
!3534 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_base_iterate", scope: !456, file: !456, line: 314, type: !3535, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3538)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!568, !2697, !7, !3537}
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!3538 = !{!3539, !3540, !3541}
!3539 = !DILocalVariable(name: "vec_", arg: 1, scope: !3534, file: !456, line: 314, type: !2697)
!3540 = !DILocalVariable(name: "ix_", arg: 2, scope: !3534, file: !456, line: 314, type: !7)
!3541 = !DILocalVariable(name: "ptr", arg: 3, scope: !3534, file: !456, line: 314, type: !3537)
!3542 = !DILocation(line: 0, scope: !3534)
!3543 = !DILocation(line: 314, column: 1, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3534, file: !456, line: 314, column: 1)
!3545 = !DILocation(line: 314, column: 1, scope: !3534)
!3546 = !DILocation(line: 314, column: 1, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3544, file: !456, line: 314, column: 1)
!3548 = !DILocation(line: 314, column: 1, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3544, file: !456, line: 314, column: 1)
!3550 = !DILocation(line: 0, scope: !3544)
!3551 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_heap_free", scope: !456, file: !456, line: 315, type: !3552, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3555)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{null, !3554}
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!3555 = !{!3556}
!3556 = !DILocalVariable(name: "vec_", arg: 1, scope: !3551, file: !456, line: 315, type: !3554)
!3557 = !DILocation(line: 0, scope: !3551)
!3558 = !DILocation(line: 315, column: 1, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3551, file: !456, line: 315, column: 1)
!3560 = !DILocation(line: 315, column: 1, scope: !3551)
!3561 = distinct !DISubprogram(name: "ipa_register_cgraph_hooks", scope: !3, file: !3, line: 1346, type: !1838, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!3562 = !DILocation(line: 1348, column: 8, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1348, column: 7)
!3564 = !DILocation(line: 1348, column: 7, scope: !3561)
!3565 = !DILocation(line: 1350, column: 7, scope: !3563)
!3566 = !DILocation(line: 1349, column: 30, scope: !3563)
!3567 = !DILocation(line: 1349, column: 5, scope: !3563)
!3568 = !DILocation(line: 1351, column: 8, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1351, column: 7)
!3570 = !DILocation(line: 1351, column: 7, scope: !3561)
!3571 = !DILocation(line: 1353, column: 7, scope: !3569)
!3572 = !DILocation(line: 1352, column: 30, scope: !3569)
!3573 = !DILocation(line: 1352, column: 5, scope: !3569)
!3574 = !DILocation(line: 1354, column: 8, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1354, column: 7)
!3576 = !DILocation(line: 1354, column: 7, scope: !3561)
!3577 = !DILocation(line: 1356, column: 7, scope: !3575)
!3578 = !DILocation(line: 1355, column: 34, scope: !3575)
!3579 = !DILocation(line: 1355, column: 5, scope: !3575)
!3580 = !DILocation(line: 1357, column: 8, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1357, column: 7)
!3582 = !DILocation(line: 1357, column: 7, scope: !3561)
!3583 = !DILocation(line: 1359, column: 7, scope: !3581)
!3584 = !DILocation(line: 1358, column: 34, scope: !3581)
!3585 = !DILocation(line: 1358, column: 5, scope: !3581)
!3586 = !DILocation(line: 1360, column: 1, scope: !3561)
!3587 = distinct !DISubprogram(name: "ipa_edge_removal_hook", scope: !3, file: !3, line: 1240, type: !3588, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3590)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{null, !1758, !572}
!3590 = !{!3591, !3592}
!3591 = !DILocalVariable(name: "cs", arg: 1, scope: !3587, file: !3, line: 1240, type: !1758)
!3592 = !DILocalVariable(name: "data", arg: 2, scope: !3587, file: !3, line: 1240, type: !572)
!3593 = !DILocation(line: 0, scope: !3587)
!3594 = !DILocation(line: 1243, column: 7, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 1243, column: 7)
!3596 = !DILocation(line: 1244, column: 24, scope: !3595)
!3597 = !DILocation(line: 1244, column: 7, scope: !3595)
!3598 = !DILocation(line: 1243, column: 7, scope: !3587)
!3599 = !DILocation(line: 1246, column: 37, scope: !3587)
!3600 = !DILocation(line: 1246, column: 3, scope: !3587)
!3601 = !DILocation(line: 1247, column: 1, scope: !3587)
!3602 = distinct !DISubprogram(name: "ipa_node_removal_hook", scope: !3, file: !3, line: 1252, type: !3603, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3605)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{null, !579, !572}
!3605 = !{!3606, !3607}
!3606 = !DILocalVariable(name: "node", arg: 1, scope: !3602, file: !3, line: 1252, type: !579)
!3607 = !DILocalVariable(name: "data", arg: 2, scope: !3602, file: !3, line: 1252, type: !572)
!3608 = !DILocation(line: 0, scope: !3602)
!3609 = !DILocation(line: 1254, column: 39, scope: !3602)
!3610 = !DILocation(line: 1254, column: 3, scope: !3602)
!3611 = !DILocation(line: 1255, column: 1, scope: !3602)
!3612 = distinct !DISubprogram(name: "ipa_edge_duplication_hook", scope: !3, file: !3, line: 1291, type: !3613, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{null, !1758, !1758, !572}
!3615 = !{!3616, !3617, !3618, !3619, !3620, !3621}
!3616 = !DILocalVariable(name: "src", arg: 1, scope: !3612, file: !3, line: 1291, type: !1758)
!3617 = !DILocalVariable(name: "dst", arg: 2, scope: !3612, file: !3, line: 1291, type: !1758)
!3618 = !DILocalVariable(name: "data", arg: 3, scope: !3612, file: !3, line: 1292, type: !572)
!3619 = !DILocalVariable(name: "old_args", scope: !3612, file: !3, line: 1294, type: !2971)
!3620 = !DILocalVariable(name: "new_args", scope: !3612, file: !3, line: 1294, type: !2971)
!3621 = !DILocalVariable(name: "arg_count", scope: !3612, file: !3, line: 1295, type: !568)
!3622 = !DILocation(line: 0, scope: !3612)
!3623 = !DILocation(line: 1297, column: 3, scope: !3612)
!3624 = !DILocation(line: 1299, column: 14, scope: !3612)
!3625 = !DILocation(line: 1300, column: 14, scope: !3612)
!3626 = !DILocation(line: 1302, column: 15, scope: !3612)
!3627 = !DILocation(line: 1303, column: 3, scope: !3612)
!3628 = !DILocation(line: 1305, column: 36, scope: !3612)
!3629 = !DILocation(line: 1306, column: 44, scope: !3612)
!3630 = !DILocation(line: 1306, column: 42, scope: !3612)
!3631 = !DILocation(line: 1305, column: 5, scope: !3612)
!3632 = !DILocation(line: 1304, column: 13, scope: !3612)
!3633 = !DILocation(line: 1304, column: 28, scope: !3612)
!3634 = !DILocation(line: 1307, column: 1, scope: !3612)
!3635 = distinct !DISubprogram(name: "ipa_node_duplication_hook", scope: !3, file: !3, line: 1312, type: !3636, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3638)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{null, !579, !579, !572}
!3638 = !{!3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646}
!3639 = !DILocalVariable(name: "src", arg: 1, scope: !3635, file: !3, line: 1312, type: !579)
!3640 = !DILocalVariable(name: "dst", arg: 2, scope: !3635, file: !3, line: 1312, type: !579)
!3641 = !DILocalVariable(name: "data", arg: 3, scope: !3635, file: !3, line: 1313, type: !572)
!3642 = !DILocalVariable(name: "old_info", scope: !3635, file: !3, line: 1315, type: !2050)
!3643 = !DILocalVariable(name: "new_info", scope: !3635, file: !3, line: 1315, type: !2050)
!3644 = !DILocalVariable(name: "note", scope: !3635, file: !3, line: 1316, type: !2056)
!3645 = !DILocalVariable(name: "param_count", scope: !3635, file: !3, line: 1317, type: !568)
!3646 = !DILocalVariable(name: "nn", scope: !3647, file: !3, line: 1333, type: !2056)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 1332, column: 5)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1331, column: 3)
!3649 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 1331, column: 3)
!3650 = !DILocation(line: 0, scope: !3635)
!3651 = !DILocation(line: 1319, column: 3, scope: !3635)
!3652 = !DILocation(line: 1320, column: 14, scope: !3635)
!3653 = !DILocation(line: 1321, column: 14, scope: !3635)
!3654 = !DILocation(line: 1322, column: 17, scope: !3635)
!3655 = !DILocation(line: 1324, column: 3, scope: !3635)
!3656 = !DILocation(line: 1326, column: 32, scope: !3635)
!3657 = !DILocation(line: 1327, column: 47, scope: !3635)
!3658 = !DILocation(line: 1327, column: 45, scope: !3635)
!3659 = !DILocation(line: 1326, column: 5, scope: !3635)
!3660 = !DILocation(line: 1325, column: 13, scope: !3635)
!3661 = !DILocation(line: 1325, column: 20, scope: !3635)
!3662 = !DILocation(line: 1328, column: 40, scope: !3635)
!3663 = !DILocation(line: 1328, column: 13, scope: !3635)
!3664 = !DILocation(line: 1328, column: 28, scope: !3635)
!3665 = !DILocation(line: 1329, column: 37, scope: !3635)
!3666 = !DILocation(line: 1329, column: 13, scope: !3635)
!3667 = !DILocation(line: 1329, column: 25, scope: !3635)
!3668 = !DILocation(line: 1331, column: 25, scope: !3649)
!3669 = !DILocation(line: 0, scope: !3647)
!3670 = !DILocation(line: 1331, column: 8, scope: !3649)
!3671 = !DILocation(line: 0, scope: !3649)
!3672 = !DILocation(line: 1331, column: 3, scope: !3649)
!3673 = !DILocation(line: 1336, column: 2, scope: !3647)
!3674 = !DILocation(line: 1337, column: 19, scope: !3647)
!3675 = !DILocation(line: 1337, column: 7, scope: !3647)
!3676 = !DILocation(line: 1338, column: 28, scope: !3647)
!3677 = !DILocation(line: 1338, column: 11, scope: !3647)
!3678 = !DILocation(line: 1338, column: 16, scope: !3647)
!3679 = !DILocation(line: 1339, column: 29, scope: !3647)
!3680 = !DILocation(line: 1331, column: 57, scope: !3648)
!3681 = !DILocation(line: 1331, column: 3, scope: !3648)
!3682 = distinct !{!3682, !3672, !3683}
!3683 = !DILocation(line: 1340, column: 5, scope: !3649)
!3684 = !DILocation(line: 1341, column: 1, scope: !3635)
!3685 = distinct !DISubprogram(name: "free_all_ipa_structures_after_ipa_cp", scope: !3, file: !3, line: 1381, type: !1838, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!3686 = !DILocation(line: 1383, column: 8, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1383, column: 7)
!3688 = !DILocation(line: 1383, column: 7, scope: !3685)
!3689 = !DILocation(line: 1385, column: 7, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 1384, column: 5)
!3691 = !DILocation(line: 1386, column: 7, scope: !3690)
!3692 = !DILocation(line: 1387, column: 7, scope: !3690)
!3693 = !DILocation(line: 1388, column: 5, scope: !3690)
!3694 = !DILocation(line: 1389, column: 1, scope: !3685)
!3695 = distinct !DISubprogram(name: "ipa_unregister_cgraph_hooks", scope: !3, file: !3, line: 1365, type: !1838, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!3696 = !DILocation(line: 1367, column: 36, scope: !3695)
!3697 = !DILocation(line: 1367, column: 3, scope: !3695)
!3698 = !DILocation(line: 1368, column: 28, scope: !3695)
!3699 = !DILocation(line: 1369, column: 36, scope: !3695)
!3700 = !DILocation(line: 1369, column: 3, scope: !3695)
!3701 = !DILocation(line: 1370, column: 28, scope: !3695)
!3702 = !DILocation(line: 1371, column: 40, scope: !3695)
!3703 = !DILocation(line: 1371, column: 3, scope: !3695)
!3704 = !DILocation(line: 1372, column: 32, scope: !3695)
!3705 = !DILocation(line: 1373, column: 40, scope: !3695)
!3706 = !DILocation(line: 1373, column: 3, scope: !3695)
!3707 = !DILocation(line: 1374, column: 32, scope: !3695)
!3708 = !DILocation(line: 1375, column: 1, scope: !3695)
!3709 = distinct !DISubprogram(name: "free_all_ipa_structures_after_iinln", scope: !3, file: !3, line: 1395, type: !1838, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!3710 = !DILocation(line: 1397, column: 3, scope: !3709)
!3711 = !DILocation(line: 1398, column: 3, scope: !3709)
!3712 = !DILocation(line: 1399, column: 3, scope: !3709)
!3713 = !DILocation(line: 1400, column: 1, scope: !3709)
!3714 = distinct !DISubprogram(name: "ipa_print_node_params", scope: !3, file: !3, line: 1406, type: !2990, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3715)
!3715 = !{!3716, !3717, !3718, !3719, !3720, !3721}
!3716 = !DILocalVariable(name: "f", arg: 1, scope: !3714, file: !3, line: 1406, type: !2224)
!3717 = !DILocalVariable(name: "node", arg: 2, scope: !3714, file: !3, line: 1406, type: !579)
!3718 = !DILocalVariable(name: "i", scope: !3714, file: !3, line: 1408, type: !568)
!3719 = !DILocalVariable(name: "count", scope: !3714, file: !3, line: 1408, type: !568)
!3720 = !DILocalVariable(name: "temp", scope: !3714, file: !3, line: 1409, type: !583)
!3721 = !DILocalVariable(name: "info", scope: !3714, file: !3, line: 1410, type: !2050)
!3722 = !DILocation(line: 0, scope: !3714)
!3723 = !DILocation(line: 1412, column: 14, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1412, column: 7)
!3725 = !DILocation(line: 1412, column: 8, scope: !3724)
!3726 = !DILocation(line: 1412, column: 7, scope: !3714)
!3727 = !DILocation(line: 1414, column: 10, scope: !3714)
!3728 = !DILocation(line: 1415, column: 45, scope: !3714)
!3729 = !DILocation(line: 1415, column: 3, scope: !3714)
!3730 = !DILocation(line: 1416, column: 11, scope: !3714)
!3731 = !DILocation(line: 1417, column: 8, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1417, column: 3)
!3733 = !DILocation(line: 0, scope: !3732)
!3734 = !DILocation(line: 1417, column: 17, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 1417, column: 3)
!3736 = !DILocation(line: 1417, column: 3, scope: !3732)
!3737 = !DILocation(line: 1419, column: 14, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1418, column: 5)
!3739 = !DILocation(line: 1420, column: 11, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1420, column: 11)
!3741 = !DILocation(line: 1420, column: 28, scope: !3740)
!3742 = !DILocation(line: 1420, column: 11, scope: !3738)
!3743 = !DILocation(line: 1422, column: 19, scope: !3740)
!3744 = !DILocation(line: 1423, column: 34, scope: !3740)
!3745 = !DILocation(line: 1423, column: 21, scope: !3740)
!3746 = !DILocation(line: 1421, column: 2, scope: !3740)
!3747 = !DILocation(line: 1425, column: 11, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1425, column: 11)
!3749 = !DILocation(line: 1425, column: 11, scope: !3738)
!3750 = !DILocation(line: 1426, column: 2, scope: !3748)
!3751 = !DILocation(line: 1427, column: 7, scope: !3738)
!3752 = !DILocation(line: 1417, column: 27, scope: !3735)
!3753 = !DILocation(line: 1417, column: 3, scope: !3735)
!3754 = distinct !{!3754, !3736, !3755}
!3755 = !DILocation(line: 1428, column: 5, scope: !3732)
!3756 = !DILocation(line: 1429, column: 1, scope: !3714)
!3757 = distinct !DISubprogram(name: "ipa_get_param", scope: !456, file: !456, line: 234, type: !3758, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3760)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!583, !2050, !568}
!3760 = !{!3761, !3762}
!3761 = !DILocalVariable(name: "info", arg: 1, scope: !3757, file: !456, line: 234, type: !2050)
!3762 = !DILocalVariable(name: "i", arg: 2, scope: !3757, file: !456, line: 234, type: !568)
!3763 = !DILocation(line: 0, scope: !3757)
!3764 = !DILocation(line: 236, column: 16, scope: !3757)
!3765 = !DILocation(line: 236, column: 10, scope: !3757)
!3766 = !DILocation(line: 236, column: 26, scope: !3757)
!3767 = !DILocation(line: 236, column: 3, scope: !3757)
!3768 = distinct !DISubprogram(name: "ipa_is_param_modified", scope: !456, file: !456, line: 245, type: !3769, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!567, !2050, !568}
!3771 = !{!3772, !3773}
!3772 = !DILocalVariable(name: "info", arg: 1, scope: !3768, file: !456, line: 245, type: !2050)
!3773 = !DILocalVariable(name: "i", arg: 2, scope: !3768, file: !456, line: 245, type: !568)
!3774 = !DILocation(line: 0, scope: !3768)
!3775 = !DILocation(line: 247, column: 16, scope: !3768)
!3776 = !DILocation(line: 247, column: 10, scope: !3768)
!3777 = !DILocation(line: 247, column: 26, scope: !3768)
!3778 = !DILocation(line: 247, column: 3, scope: !3768)
!3779 = distinct !DISubprogram(name: "ipa_print_all_params", scope: !3, file: !3, line: 1435, type: !3120, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3780)
!3780 = !{!3781, !3782}
!3781 = !DILocalVariable(name: "f", arg: 1, scope: !3779, file: !3, line: 1435, type: !2224)
!3782 = !DILocalVariable(name: "node", scope: !3779, file: !3, line: 1437, type: !579)
!3783 = !DILocation(line: 0, scope: !3779)
!3784 = !DILocation(line: 1439, column: 3, scope: !3779)
!3785 = !DILocation(line: 1440, column: 8, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 1440, column: 3)
!3787 = !DILocation(line: 0, scope: !3786)
!3788 = !DILocation(line: 1440, column: 3, scope: !3786)
!3789 = !DILocation(line: 1441, column: 5, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 1440, column: 3)
!3791 = !DILocation(line: 1440, column: 48, scope: !3790)
!3792 = !DILocation(line: 1440, column: 3, scope: !3790)
!3793 = distinct !{!3793, !3788, !3794}
!3794 = !DILocation(line: 1441, column: 35, scope: !3786)
!3795 = !DILocation(line: 1442, column: 1, scope: !3779)
!3796 = distinct !DISubprogram(name: "ipa_get_vector_of_formal_parms", scope: !3, file: !3, line: 1447, type: !3797, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3799)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!2105, !583}
!3799 = !{!3800, !3801, !3802, !3803}
!3800 = !DILocalVariable(name: "fndecl", arg: 1, scope: !3796, file: !3, line: 1447, type: !583)
!3801 = !DILocalVariable(name: "args", scope: !3796, file: !3, line: 1449, type: !2105)
!3802 = !DILocalVariable(name: "count", scope: !3796, file: !3, line: 1450, type: !568)
!3803 = !DILocalVariable(name: "parm", scope: !3796, file: !3, line: 1451, type: !583)
!3804 = !DILocation(line: 0, scope: !3796)
!3805 = !DILocation(line: 1453, column: 11, scope: !3796)
!3806 = !DILocation(line: 1454, column: 10, scope: !3796)
!3807 = !DILocation(line: 1455, column: 15, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1455, column: 3)
!3809 = !DILocation(line: 0, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1455, column: 3)
!3811 = !DILocation(line: 1455, column: 8, scope: !3808)
!3812 = !DILocation(line: 0, scope: !3808)
!3813 = !DILocation(line: 1455, column: 3, scope: !3808)
!3814 = !DILocation(line: 1456, column: 5, scope: !3810)
!3815 = !DILocation(line: 1455, column: 53, scope: !3810)
!3816 = !DILocation(line: 1455, column: 3, scope: !3810)
!3817 = distinct !{!3817, !3813, !3818}
!3818 = !DILocation(line: 1456, column: 5, scope: !3808)
!3819 = !DILocation(line: 1458, column: 3, scope: !3796)
!3820 = distinct !DISubprogram(name: "count_formal_params_1", scope: !3, file: !3, line: 150, type: !3821, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3823)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{!568, !583}
!3823 = !{!3824, !3825, !3826}
!3824 = !DILocalVariable(name: "fndecl", arg: 1, scope: !3820, file: !3, line: 150, type: !583)
!3825 = !DILocalVariable(name: "parm", scope: !3820, file: !3, line: 152, type: !583)
!3826 = !DILocalVariable(name: "count", scope: !3820, file: !3, line: 153, type: !568)
!3827 = !DILocation(line: 0, scope: !3820)
!3828 = !DILocation(line: 155, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 155, column: 3)
!3830 = !DILocation(line: 155, column: 8, scope: !3829)
!3831 = !DILocation(line: 0, scope: !3829)
!3832 = !DILocation(line: 155, column: 3, scope: !3829)
!3833 = !DILocation(line: 156, column: 10, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 155, column: 3)
!3835 = !DILocation(line: 155, column: 53, scope: !3834)
!3836 = !DILocation(line: 155, column: 3, scope: !3834)
!3837 = distinct !{!3837, !3832, !3838}
!3838 = !DILocation(line: 156, column: 10, scope: !3829)
!3839 = !DILocation(line: 158, column: 3, scope: !3820)
!3840 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !6, file: !6, line: 184, type: !3841, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!2105, !568}
!3843 = !{!3844}
!3844 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3840, file: !6, line: 184, type: !568)
!3845 = !DILocation(line: 0, scope: !3840)
!3846 = !DILocation(line: 184, column: 1, scope: !3840)
!3847 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !6, file: !6, line: 182, type: !3848, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3851)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!913, !3850, !583}
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!3851 = !{!3852, !3853, !3854}
!3852 = !DILocalVariable(name: "vec_", arg: 1, scope: !3847, file: !6, line: 182, type: !3850)
!3853 = !DILocalVariable(name: "obj_", arg: 2, scope: !3847, file: !6, line: 182, type: !583)
!3854 = !DILocalVariable(name: "slot_", scope: !3847, file: !6, line: 182, type: !913)
!3855 = !DILocation(line: 0, scope: !3847)
!3856 = !DILocation(line: 182, column: 1, scope: !3847)
!3857 = distinct !DISubprogram(name: "ipa_modify_formal_parameters", scope: !3, file: !3, line: 1487, type: !3858, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3861)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !583, !3860, !573}
!3860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_parm_adjustment_vec", file: !456, line: 487, baseType: !2110)
!3861 = !{!3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3884, !3888}
!3862 = !DILocalVariable(name: "fndecl", arg: 1, scope: !3857, file: !3, line: 1487, type: !583)
!3863 = !DILocalVariable(name: "adjustments", arg: 2, scope: !3857, file: !3, line: 1487, type: !3860)
!3864 = !DILocalVariable(name: "synth_parm_prefix", arg: 3, scope: !3857, file: !3, line: 1488, type: !573)
!3865 = !DILocalVariable(name: "oparms", scope: !3857, file: !3, line: 1490, type: !2105)
!3866 = !DILocalVariable(name: "otypes", scope: !3857, file: !3, line: 1490, type: !2105)
!3867 = !DILocalVariable(name: "orig_type", scope: !3857, file: !3, line: 1491, type: !583)
!3868 = !DILocalVariable(name: "new_type", scope: !3857, file: !3, line: 1491, type: !583)
!3869 = !DILocalVariable(name: "old_arg_types", scope: !3857, file: !3, line: 1492, type: !583)
!3870 = !DILocalVariable(name: "t", scope: !3857, file: !3, line: 1492, type: !583)
!3871 = !DILocalVariable(name: "new_arg_types", scope: !3857, file: !3, line: 1492, type: !583)
!3872 = !DILocalVariable(name: "parm", scope: !3857, file: !3, line: 1493, type: !583)
!3873 = !DILocalVariable(name: "link", scope: !3857, file: !3, line: 1493, type: !913)
!3874 = !DILocalVariable(name: "i", scope: !3857, file: !3, line: 1494, type: !568)
!3875 = !DILocalVariable(name: "len", scope: !3857, file: !3, line: 1494, type: !568)
!3876 = !DILocalVariable(name: "new_reversed", scope: !3857, file: !3, line: 1495, type: !583)
!3877 = !DILocalVariable(name: "care_for_types", scope: !3857, file: !3, line: 1496, type: !567)
!3878 = !DILocalVariable(name: "last_parm_void", scope: !3857, file: !3, line: 1496, type: !567)
!3879 = !DILocalVariable(name: "adj", scope: !3880, file: !3, line: 1526, type: !3883)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 1525, column: 5)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 1524, column: 3)
!3882 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1524, column: 3)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!3884 = !DILocalVariable(name: "new_parm", scope: !3885, file: !3, line: 1544, type: !583)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1543, column: 2)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1542, column: 16)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 1533, column: 11)
!3888 = !DILocalVariable(name: "ptype", scope: !3885, file: !3, line: 1545, type: !583)
!3889 = !DILocation(line: 0, scope: !3857)
!3890 = !DILocation(line: 1490, column: 3, scope: !3857)
!3891 = !DILocation(line: 1493, column: 23, scope: !3857)
!3892 = !DILocation(line: 1494, column: 16, scope: !3857)
!3893 = !DILocation(line: 1498, column: 8, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1498, column: 7)
!3895 = !DILocation(line: 1498, column: 7, scope: !3857)
!3896 = !DILocation(line: 1501, column: 12, scope: !3857)
!3897 = !DILocation(line: 1501, column: 10, scope: !3857)
!3898 = !DILocation(line: 1502, column: 15, scope: !3857)
!3899 = !DILocation(line: 1503, column: 19, scope: !3857)
!3900 = !DILocation(line: 1507, column: 35, scope: !3857)
!3901 = !DILocation(line: 1508, column: 7, scope: !3857)
!3902 = !DILocation(line: 1510, column: 25, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1509, column: 5)
!3904 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1508, column: 7)
!3905 = !DILocation(line: 1511, column: 7, scope: !3903)
!3906 = !DILocation(line: 1511, column: 4, scope: !3903)
!3907 = !DILocation(line: 1510, column: 24, scope: !3903)
!3908 = !DILocation(line: 1512, column: 16, scope: !3903)
!3909 = !DILocation(line: 1512, column: 14, scope: !3903)
!3910 = !DILocation(line: 0, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 1513, column: 11)
!3912 = !DILocation(line: 1513, column: 11, scope: !3903)
!3913 = !DILocation(line: 1514, column: 2, scope: !3911)
!3914 = !DILocation(line: 1516, column: 2, scope: !3911)
!3915 = !DILocation(line: 1521, column: 14, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1519, column: 5)
!3917 = !DILocation(line: 0, scope: !3904)
!3918 = !DILocation(line: 1524, column: 8, scope: !3882)
!3919 = !DILocation(line: 0, scope: !3882)
!3920 = !DILocation(line: 1524, column: 17, scope: !3881)
!3921 = !DILocation(line: 1524, column: 3, scope: !3882)
!3922 = !DILocation(line: 1527, column: 7, scope: !3880)
!3923 = !DILocation(line: 1529, column: 13, scope: !3880)
!3924 = !DILocation(line: 0, scope: !3880)
!3925 = !DILocation(line: 1530, column: 14, scope: !3880)
!3926 = !DILocation(line: 1531, column: 12, scope: !3880)
!3927 = !DILocation(line: 1531, column: 17, scope: !3880)
!3928 = !DILocation(line: 1533, column: 16, scope: !3887)
!3929 = !DILocation(line: 1533, column: 11, scope: !3887)
!3930 = !DILocation(line: 1533, column: 11, scope: !3880)
!3931 = !DILocation(line: 1536, column: 22, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 1535, column: 8)
!3933 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1534, column: 2)
!3934 = !DILocation(line: 1539, column: 10, scope: !3933)
!3935 = !DILocation(line: 1540, column: 12, scope: !3933)
!3936 = !DILocation(line: 1541, column: 2, scope: !3933)
!3937 = !DILocation(line: 1542, column: 22, scope: !3886)
!3938 = !DILocation(line: 1542, column: 17, scope: !3886)
!3939 = !DILocation(line: 1542, column: 16, scope: !3887)
!3940 = !DILocation(line: 1547, column: 13, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1547, column: 8)
!3942 = !DILocation(line: 1547, column: 8, scope: !3941)
!3943 = !DILocation(line: 0, scope: !3941)
!3944 = !DILocation(line: 1547, column: 8, scope: !3885)
!3945 = !DILocation(line: 1548, column: 14, scope: !3941)
!3946 = !DILocation(line: 0, scope: !3885)
!3947 = !DILocation(line: 1548, column: 6, scope: !3941)
!3948 = !DILocation(line: 1553, column: 22, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1552, column: 8)
!3950 = !DILocation(line: 1555, column: 15, scope: !3885)
!3951 = !DILocation(line: 1557, column: 27, scope: !3885)
!3952 = !DILocation(line: 1557, column: 4, scope: !3885)
!3953 = !DILocation(line: 1557, column: 25, scope: !3885)
!3954 = !DILocation(line: 1559, column: 4, scope: !3885)
!3955 = !DILocation(line: 1559, column: 31, scope: !3885)
!3956 = !DILocation(line: 1560, column: 4, scope: !3885)
!3957 = !DILocation(line: 1560, column: 29, scope: !3885)
!3958 = !DILocation(line: 1561, column: 4, scope: !3885)
!3959 = !DILocation(line: 1561, column: 28, scope: !3885)
!3960 = !DILocation(line: 1562, column: 4, scope: !3885)
!3961 = !DILocation(line: 1562, column: 25, scope: !3885)
!3962 = !DILocation(line: 1563, column: 30, scope: !3885)
!3963 = !DILocation(line: 1564, column: 4, scope: !3885)
!3964 = !DILocation(line: 1566, column: 4, scope: !3885)
!3965 = !DILocation(line: 1567, column: 4, scope: !3885)
!3966 = !DILocation(line: 1568, column: 14, scope: !3885)
!3967 = !DILocation(line: 1569, column: 9, scope: !3885)
!3968 = !DILocation(line: 1569, column: 19, scope: !3885)
!3969 = !DILocation(line: 1571, column: 10, scope: !3885)
!3970 = !DILocation(line: 1573, column: 12, scope: !3885)
!3971 = !DILocation(line: 1574, column: 2, scope: !3885)
!3972 = !DILocation(line: 1524, column: 25, scope: !3881)
!3973 = !DILocation(line: 1524, column: 3, scope: !3881)
!3974 = distinct !{!3974, !3921, !3975}
!3975 = !DILocation(line: 1575, column: 5, scope: !3882)
!3976 = !DILocation(line: 1577, column: 9, scope: !3857)
!3977 = !DILocation(line: 1579, column: 7, scope: !3857)
!3978 = !DILocation(line: 1581, column: 22, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1580, column: 5)
!3980 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1579, column: 7)
!3981 = !DILocation(line: 1582, column: 11, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1582, column: 11)
!3983 = !DILocation(line: 1582, column: 11, scope: !3979)
!3984 = !DILocation(line: 1584, column: 8, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1584, column: 8)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1583, column: 2)
!3987 = !DILocation(line: 0, scope: !3985)
!3988 = !DILocation(line: 1584, column: 8, scope: !3986)
!3989 = !DILocation(line: 1585, column: 6, scope: !3985)
!3990 = !DILocation(line: 1585, column: 33, scope: !3985)
!3991 = !DILocation(line: 1596, column: 7, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1596, column: 7)
!3993 = !DILocation(line: 1596, column: 29, scope: !3992)
!3994 = !DILocation(line: 1597, column: 8, scope: !3992)
!3995 = !DILocation(line: 1597, column: 12, scope: !3992)
!3996 = !DILocation(line: 1597, column: 63, scope: !3992)
!3997 = !DILocation(line: 1598, column: 3, scope: !3992)
!3998 = !DILocation(line: 1598, column: 6, scope: !3992)
!3999 = !DILocation(line: 1598, column: 57, scope: !3992)
!4000 = !DILocation(line: 1598, column: 68, scope: !3992)
!4001 = !DILocation(line: 1596, column: 7, scope: !3857)
!4002 = !DILocation(line: 1600, column: 18, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1599, column: 5)
!4004 = !DILocation(line: 1601, column: 7, scope: !4003)
!4005 = !DILocation(line: 1601, column: 33, scope: !4003)
!4006 = !DILocation(line: 1602, column: 5, scope: !4003)
!4007 = !DILocation(line: 1606, column: 58, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1604, column: 5)
!4009 = !DILocation(line: 1606, column: 37, scope: !4008)
!4010 = !DILocation(line: 1606, column: 11, scope: !4008)
!4011 = !DILocation(line: 1608, column: 33, scope: !4008)
!4012 = !DILocation(line: 1608, column: 7, scope: !4008)
!4013 = !DILocation(line: 1608, column: 31, scope: !4008)
!4014 = !DILocation(line: 1609, column: 7, scope: !4008)
!4015 = !DILocation(line: 1609, column: 28, scope: !4008)
!4016 = !DILocation(line: 0, scope: !3992)
!4017 = !DILocation(line: 1614, column: 7, scope: !3857)
!4018 = !DILocation(line: 1615, column: 17, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1615, column: 7)
!4020 = !DILocation(line: 0, scope: !4019)
!4021 = !DILocation(line: 1615, column: 7, scope: !3857)
!4022 = !DILocation(line: 1617, column: 36, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1616, column: 5)
!4024 = !DILocation(line: 1618, column: 38, scope: !4023)
!4025 = !DILocation(line: 1618, column: 7, scope: !4023)
!4026 = !DILocation(line: 1618, column: 36, scope: !4023)
!4027 = !DILocation(line: 1619, column: 29, scope: !4023)
!4028 = !DILocation(line: 1620, column: 5, scope: !4023)
!4029 = !DILocation(line: 1623, column: 36, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1622, column: 5)
!4031 = !DILocation(line: 1624, column: 7, scope: !4030)
!4032 = !DILocation(line: 1624, column: 36, scope: !4030)
!4033 = !DILocation(line: 1627, column: 22, scope: !3857)
!4034 = !DILocation(line: 1628, column: 7, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1628, column: 7)
!4036 = !DILocation(line: 1628, column: 7, scope: !3857)
!4037 = !DILocation(line: 1629, column: 5, scope: !4035)
!4038 = !DILocation(line: 1630, column: 3, scope: !3857)
!4039 = !DILocation(line: 1631, column: 1, scope: !3857)
!4040 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_length", scope: !456, file: !456, line: 484, type: !4041, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4045)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!7, !4043}
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!4045 = !{!4046}
!4046 = !DILocalVariable(name: "vec_", arg: 1, scope: !4040, file: !456, line: 484, type: !4043)
!4047 = !DILocation(line: 0, scope: !4040)
!4048 = !DILocation(line: 484, column: 1, scope: !4040)
!4049 = distinct !DISubprogram(name: "get_vector_of_formal_parm_types", scope: !3, file: !3, line: 1465, type: !3797, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4050)
!4050 = !{!4051, !4052, !4053, !4054}
!4051 = !DILocalVariable(name: "fntype", arg: 1, scope: !4049, file: !3, line: 1465, type: !583)
!4052 = !DILocalVariable(name: "types", scope: !4049, file: !3, line: 1467, type: !2105)
!4053 = !DILocalVariable(name: "count", scope: !4049, file: !3, line: 1468, type: !568)
!4054 = !DILocalVariable(name: "t", scope: !4049, file: !3, line: 1469, type: !583)
!4055 = !DILocation(line: 0, scope: !4049)
!4056 = !DILocation(line: 1471, column: 12, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1471, column: 3)
!4058 = !DILocation(line: 1471, column: 8, scope: !4057)
!4059 = !DILocation(line: 0, scope: !4057)
!4060 = !DILocation(line: 1471, column: 3, scope: !4057)
!4061 = !DILocation(line: 1472, column: 10, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 1471, column: 3)
!4063 = !DILocation(line: 1471, column: 44, scope: !4062)
!4064 = !DILocation(line: 1471, column: 3, scope: !4062)
!4065 = distinct !{!4065, !4060, !4066}
!4066 = !DILocation(line: 1472, column: 10, scope: !4057)
!4067 = !DILocation(line: 1474, column: 11, scope: !4049)
!4068 = !DILocation(line: 0, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 1475, column: 3)
!4070 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1475, column: 3)
!4071 = !DILocation(line: 1475, column: 8, scope: !4070)
!4072 = !DILocation(line: 0, scope: !4070)
!4073 = !DILocation(line: 1475, column: 3, scope: !4070)
!4074 = !DILocation(line: 1476, column: 5, scope: !4069)
!4075 = !DILocation(line: 1475, column: 44, scope: !4069)
!4076 = !DILocation(line: 1475, column: 3, scope: !4069)
!4077 = distinct !{!4077, !4073, !4078}
!4078 = !DILocation(line: 1476, column: 5, scope: !4070)
!4079 = !DILocation(line: 1478, column: 3, scope: !4049)
!4080 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !6, file: !6, line: 182, type: !4081, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4085)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!7, !4083}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1227)
!4085 = !{!4086}
!4086 = !DILocalVariable(name: "vec_", arg: 1, scope: !4080, file: !6, line: 182, type: !4083)
!4087 = !DILocation(line: 0, scope: !4080)
!4088 = !DILocation(line: 182, column: 1, scope: !4080)
!4089 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_index", scope: !456, file: !456, line: 484, type: !4090, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4094)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!4092, !4093, !7}
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!4094 = !{!4095, !4096}
!4095 = !DILocalVariable(name: "vec_", arg: 1, scope: !4089, file: !456, line: 484, type: !4093)
!4096 = !DILocalVariable(name: "ix_", arg: 2, scope: !4089, file: !456, line: 484, type: !7)
!4097 = !DILocation(line: 0, scope: !4089)
!4098 = !DILocation(line: 484, column: 1, scope: !4089)
!4099 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !6, file: !6, line: 182, type: !4100, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4102)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!583, !4083, !7}
!4102 = !{!4103, !4104}
!4103 = !DILocalVariable(name: "vec_", arg: 1, scope: !4099, file: !6, line: 182, type: !4083)
!4104 = !DILocalVariable(name: "ix_", arg: 2, scope: !4099, file: !6, line: 182, type: !7)
!4105 = !DILocation(line: 0, scope: !4099)
!4106 = !DILocation(line: 182, column: 1, scope: !4099)
!4107 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !6, file: !6, line: 184, type: !4108, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4111)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{null, !4110}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "vec_", arg: 1, scope: !4107, file: !6, line: 184, type: !4110)
!4113 = !DILocation(line: 0, scope: !4107)
!4114 = !DILocation(line: 184, column: 1, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4107, file: !6, line: 184, column: 1)
!4116 = !DILocation(line: 184, column: 1, scope: !4107)
!4117 = distinct !DISubprogram(name: "ipa_modify_call_arguments", scope: !3, file: !3, line: 1638, type: !4118, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4120)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !1758, !878, !3860}
!4120 = !{!4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4134, !4137, !4140, !4141, !4142, !4143}
!4121 = !DILocalVariable(name: "cs", arg: 1, scope: !4117, file: !3, line: 1638, type: !1758)
!4122 = !DILocalVariable(name: "stmt", arg: 2, scope: !4117, file: !3, line: 1638, type: !878)
!4123 = !DILocalVariable(name: "adjustments", arg: 3, scope: !4117, file: !3, line: 1639, type: !3860)
!4124 = !DILocalVariable(name: "vargs", scope: !4117, file: !3, line: 1641, type: !2105)
!4125 = !DILocalVariable(name: "new_stmt", scope: !4117, file: !3, line: 1642, type: !878)
!4126 = !DILocalVariable(name: "gsi", scope: !4117, file: !3, line: 1643, type: !2793)
!4127 = !DILocalVariable(name: "callee_decl", scope: !4117, file: !3, line: 1644, type: !583)
!4128 = !DILocalVariable(name: "i", scope: !4117, file: !3, line: 1645, type: !568)
!4129 = !DILocalVariable(name: "len", scope: !4117, file: !3, line: 1645, type: !568)
!4130 = !DILocalVariable(name: "adj", scope: !4131, file: !3, line: 1653, type: !3883)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1652, column: 5)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1651, column: 3)
!4133 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1651, column: 3)
!4134 = !DILocalVariable(name: "arg", scope: !4135, file: !3, line: 1659, type: !583)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1658, column: 2)
!4136 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 1657, column: 11)
!4137 = !DILocalVariable(name: "expr", scope: !4138, file: !3, line: 1665, type: !583)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1664, column: 2)
!4139 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1663, column: 16)
!4140 = !DILocalVariable(name: "orig_expr", scope: !4138, file: !3, line: 1665, type: !583)
!4141 = !DILocalVariable(name: "allow_ptr", scope: !4138, file: !3, line: 1666, type: !567)
!4142 = !DILocalVariable(name: "repl_found", scope: !4138, file: !3, line: 1666, type: !567)
!4143 = !DILocalVariable(name: "ptrtype", scope: !4144, file: !3, line: 1687, type: !583)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 1686, column: 6)
!4145 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1680, column: 8)
!4146 = !DILocation(line: 0, scope: !4117)
!4147 = !DILocation(line: 1641, column: 3, scope: !4117)
!4148 = !DILocation(line: 1643, column: 3, scope: !4117)
!4149 = !DILocation(line: 1647, column: 9, scope: !4117)
!4150 = !DILocation(line: 1648, column: 11, scope: !4117)
!4151 = !DILocation(line: 1648, column: 9, scope: !4117)
!4152 = !DILocation(line: 1650, column: 9, scope: !4117)
!4153 = !DILocation(line: 0, scope: !4138)
!4154 = !DILocation(line: 0, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 1670, column: 6)
!4156 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1669, column: 8)
!4157 = !DILocation(line: 1651, column: 8, scope: !4133)
!4158 = !DILocation(line: 0, scope: !4133)
!4159 = !DILocation(line: 1651, column: 17, scope: !4132)
!4160 = !DILocation(line: 1651, column: 3, scope: !4133)
!4161 = !DILocation(line: 1655, column: 13, scope: !4131)
!4162 = !DILocation(line: 0, scope: !4131)
!4163 = !DILocation(line: 1657, column: 16, scope: !4136)
!4164 = !DILocation(line: 1657, column: 11, scope: !4136)
!4165 = !DILocation(line: 1657, column: 11, scope: !4131)
!4166 = !DILocation(line: 1659, column: 43, scope: !4135)
!4167 = !DILocation(line: 1659, column: 15, scope: !4135)
!4168 = !DILocation(line: 0, scope: !4135)
!4169 = !DILocation(line: 1661, column: 4, scope: !4135)
!4170 = !DILocation(line: 1662, column: 2, scope: !4135)
!4171 = !DILocation(line: 1663, column: 22, scope: !4139)
!4172 = !DILocation(line: 1663, column: 17, scope: !4139)
!4173 = !DILocation(line: 1663, column: 16, scope: !4136)
!4174 = !DILocation(line: 1665, column: 4, scope: !4138)
!4175 = !DILocation(line: 1668, column: 51, scope: !4138)
!4176 = !DILocation(line: 1668, column: 23, scope: !4138)
!4177 = !DILocation(line: 1668, column: 21, scope: !4138)
!4178 = !DILocation(line: 1669, column: 8, scope: !4156)
!4179 = !DILocation(line: 1669, column: 25, scope: !4156)
!4180 = !DILocation(line: 1669, column: 8, scope: !4138)
!4181 = !DILocation(line: 1672, column: 15, scope: !4155)
!4182 = !DILocation(line: 1672, column: 13, scope: !4155)
!4183 = !DILocation(line: 1673, column: 6, scope: !4155)
!4184 = !DILocation(line: 1677, column: 46, scope: !4138)
!4185 = !DILocation(line: 0, scope: !4156)
!4186 = !DILocation(line: 1678, column: 16, scope: !4138)
!4187 = !DILocation(line: 1678, column: 29, scope: !4138)
!4188 = !DILocation(line: 1677, column: 17, scope: !4138)
!4189 = !DILocation(line: 1680, column: 8, scope: !4145)
!4190 = !DILocation(line: 1680, column: 8, scope: !4138)
!4191 = !DILocation(line: 1682, column: 17, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 1682, column: 12)
!4193 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 1681, column: 6)
!4194 = !DILocation(line: 1682, column: 12, scope: !4192)
!4195 = !DILocation(line: 1682, column: 12, scope: !4193)
!4196 = !DILocation(line: 1699, column: 43, scope: !4138)
!4197 = !DILocation(line: 1683, column: 10, scope: !4192)
!4198 = !DILocation(line: 1683, column: 8, scope: !4192)
!4199 = !DILocation(line: 1683, column: 3, scope: !4192)
!4200 = !DILocation(line: 1687, column: 48, scope: !4144)
!4201 = !DILocation(line: 1687, column: 23, scope: !4144)
!4202 = !DILocation(line: 0, scope: !4144)
!4203 = !DILocation(line: 1688, column: 13, scope: !4144)
!4204 = !DILocation(line: 1689, column: 13, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1689, column: 12)
!4206 = !DILocation(line: 1689, column: 12, scope: !4144)
!4207 = !DILocation(line: 1690, column: 10, scope: !4205)
!4208 = !DILocation(line: 1690, column: 8, scope: !4205)
!4209 = !DILocation(line: 0, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1691, column: 12)
!4211 = !DILocation(line: 1691, column: 49, scope: !4210)
!4212 = !DILocation(line: 1690, column: 3, scope: !4205)
!4213 = !DILocation(line: 1691, column: 13, scope: !4210)
!4214 = !DILocation(line: 1691, column: 12, scope: !4144)
!4215 = !DILocation(line: 1693, column: 15, scope: !4144)
!4216 = !DILocation(line: 1692, column: 10, scope: !4210)
!4217 = !DILocation(line: 1692, column: 8, scope: !4210)
!4218 = !DILocation(line: 1692, column: 3, scope: !4210)
!4219 = !DILocation(line: 1693, column: 13, scope: !4144)
!4220 = !DILocation(line: 1696, column: 18, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1696, column: 12)
!4222 = !DILocation(line: 1696, column: 13, scope: !4221)
!4223 = !DILocation(line: 1696, column: 12, scope: !4144)
!4224 = !DILocation(line: 1697, column: 10, scope: !4221)
!4225 = !DILocation(line: 1697, column: 8, scope: !4221)
!4226 = !DILocation(line: 1697, column: 3, scope: !4221)
!4227 = !DILocation(line: 1700, column: 14, scope: !4138)
!4228 = !DILocation(line: 1700, column: 9, scope: !4138)
!4229 = !DILocation(line: 1701, column: 9, scope: !4138)
!4230 = !DILocation(line: 1701, column: 37, scope: !4138)
!4231 = !DILocation(line: 1701, column: 12, scope: !4138)
!4232 = !DILocation(line: 1699, column: 11, scope: !4138)
!4233 = !DILocation(line: 1699, column: 9, scope: !4138)
!4234 = !DILocation(line: 1703, column: 4, scope: !4138)
!4235 = !DILocation(line: 1704, column: 2, scope: !4139)
!4236 = !DILocation(line: 1704, column: 2, scope: !4138)
!4237 = !DILocation(line: 1651, column: 25, scope: !4132)
!4238 = !DILocation(line: 1651, column: 3, scope: !4132)
!4239 = distinct !{!4239, !4160, !4240}
!4240 = !DILocation(line: 1705, column: 5, scope: !4133)
!4241 = !DILocation(line: 1707, column: 7, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1707, column: 7)
!4243 = !DILocation(line: 1707, column: 17, scope: !4242)
!4244 = !DILocation(line: 1707, column: 21, scope: !4242)
!4245 = !DILocation(line: 1707, column: 32, scope: !4242)
!4246 = !DILocation(line: 1707, column: 7, scope: !4117)
!4247 = !DILocation(line: 1709, column: 7, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 1708, column: 5)
!4249 = !DILocation(line: 1710, column: 26, scope: !4248)
!4250 = !DILocation(line: 1710, column: 37, scope: !4248)
!4251 = !DILocation(line: 1710, column: 7, scope: !4248)
!4252 = !DILocation(line: 1711, column: 5, scope: !4248)
!4253 = !DILocation(line: 1713, column: 18, scope: !4117)
!4254 = !DILocation(line: 1713, column: 17, scope: !4117)
!4255 = !DILocation(line: 1713, column: 23, scope: !4117)
!4256 = !DILocation(line: 1713, column: 55, scope: !4117)
!4257 = !DILocation(line: 1713, column: 63, scope: !4117)
!4258 = !DILocation(line: 1714, column: 50, scope: !4117)
!4259 = !DILocation(line: 1714, column: 14, scope: !4117)
!4260 = !DILocation(line: 1715, column: 3, scope: !4117)
!4261 = !DILocation(line: 1716, column: 7, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1716, column: 7)
!4263 = !DILocation(line: 1716, column: 7, scope: !4117)
!4264 = !DILocation(line: 1717, column: 36, scope: !4262)
!4265 = !DILocation(line: 1717, column: 5, scope: !4262)
!4266 = !DILocation(line: 1719, column: 31, scope: !4117)
!4267 = !DILocation(line: 1719, column: 3, scope: !4117)
!4268 = !DILocation(line: 1720, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1720, column: 7)
!4270 = !DILocation(line: 1720, column: 7, scope: !4117)
!4271 = !DILocation(line: 1721, column: 36, scope: !4269)
!4272 = !DILocation(line: 1721, column: 5, scope: !4269)
!4273 = !DILocation(line: 1722, column: 3, scope: !4117)
!4274 = !DILocation(line: 1723, column: 36, scope: !4117)
!4275 = !DILocation(line: 1723, column: 3, scope: !4117)
!4276 = !DILocation(line: 1725, column: 7, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1725, column: 7)
!4278 = !DILocation(line: 1725, column: 17, scope: !4277)
!4279 = !DILocation(line: 1725, column: 21, scope: !4277)
!4280 = !DILocation(line: 1725, column: 32, scope: !4277)
!4281 = !DILocation(line: 1725, column: 7, scope: !4117)
!4282 = !DILocation(line: 1727, column: 7, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 1726, column: 5)
!4284 = !DILocation(line: 1728, column: 26, scope: !4283)
!4285 = !DILocation(line: 1728, column: 7, scope: !4283)
!4286 = !DILocation(line: 1729, column: 16, scope: !4283)
!4287 = !DILocation(line: 1729, column: 7, scope: !4283)
!4288 = !DILocation(line: 1730, column: 5, scope: !4283)
!4289 = !DILocation(line: 1731, column: 3, scope: !4117)
!4290 = !DILocation(line: 1732, column: 7, scope: !4117)
!4291 = !DILocation(line: 1733, column: 5, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1732, column: 7)
!4293 = !DILocation(line: 1734, column: 3, scope: !4117)
!4294 = !DILocation(line: 1735, column: 3, scope: !4117)
!4295 = !DILocation(line: 1736, column: 1, scope: !4117)
!4296 = distinct !DISubprogram(name: "gimple_call_arg", scope: !483, file: !483, line: 2025, type: !4297, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4299)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!583, !2932, !7}
!4299 = !{!4300, !4301}
!4300 = !DILocalVariable(name: "gs", arg: 1, scope: !4296, file: !483, line: 2025, type: !2932)
!4301 = !DILocalVariable(name: "index", arg: 2, scope: !4296, file: !483, line: 2025, type: !7)
!4302 = !DILocation(line: 0, scope: !4296)
!4303 = !DILocation(line: 2028, column: 31, scope: !4296)
!4304 = !DILocation(line: 2028, column: 10, scope: !4296)
!4305 = !DILocation(line: 2028, column: 3, scope: !4296)
!4306 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !483, file: !483, line: 1954, type: !4307, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!583, !2932}
!4309 = !{!4310, !4311}
!4310 = !DILocalVariable(name: "gs", arg: 1, scope: !4306, file: !483, line: 1954, type: !2932)
!4311 = !DILocalVariable(name: "addr", scope: !4306, file: !483, line: 1956, type: !583)
!4312 = !DILocation(line: 0, scope: !4306)
!4313 = !DILocation(line: 1956, column: 15, scope: !4306)
!4314 = !DILocation(line: 1957, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4306, file: !483, line: 1957, column: 7)
!4316 = !DILocation(line: 1957, column: 24, scope: !4315)
!4317 = !DILocation(line: 1957, column: 7, scope: !4306)
!4318 = !DILocation(line: 1958, column: 12, scope: !4315)
!4319 = !DILocation(line: 1958, column: 5, scope: !4315)
!4320 = !DILocation(line: 1960, column: 1, scope: !4306)
!4321 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !483, file: !483, line: 1878, type: !4307, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4322)
!4322 = !{!4323}
!4323 = !DILocalVariable(name: "gs", arg: 1, scope: !4321, file: !483, line: 1878, type: !2932)
!4324 = !DILocation(line: 0, scope: !4321)
!4325 = !DILocation(line: 1881, column: 10, scope: !4321)
!4326 = !DILocation(line: 1881, column: 3, scope: !4321)
!4327 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !483, file: !483, line: 1898, type: !4328, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4330)
!4328 = !DISubroutineType(types: !4329)
!4329 = !{null, !878, !583}
!4330 = !{!4331, !4332}
!4331 = !DILocalVariable(name: "gs", arg: 1, scope: !4327, file: !483, line: 1898, type: !878)
!4332 = !DILocalVariable(name: "lhs", arg: 2, scope: !4327, file: !483, line: 1898, type: !583)
!4333 = !DILocation(line: 0, scope: !4327)
!4334 = !DILocation(line: 1901, column: 3, scope: !4327)
!4335 = !DILocation(line: 1902, column: 7, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4327, file: !483, line: 1902, column: 7)
!4337 = !DILocation(line: 1902, column: 11, scope: !4336)
!4338 = !DILocation(line: 1902, column: 14, scope: !4336)
!4339 = !DILocation(line: 1902, column: 30, scope: !4336)
!4340 = !DILocation(line: 1902, column: 7, scope: !4327)
!4341 = !DILocation(line: 1903, column: 5, scope: !4336)
!4342 = !DILocation(line: 1903, column: 29, scope: !4336)
!4343 = !DILocation(line: 1904, column: 1, scope: !4327)
!4344 = distinct !DISubprogram(name: "gimple_set_block", scope: !483, file: !483, line: 1130, type: !4328, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4345)
!4345 = !{!4346, !4347}
!4346 = !DILocalVariable(name: "g", arg: 1, scope: !4344, file: !483, line: 1130, type: !878)
!4347 = !DILocalVariable(name: "block", arg: 2, scope: !4344, file: !483, line: 1130, type: !583)
!4348 = !DILocation(line: 0, scope: !4344)
!4349 = !DILocation(line: 1132, column: 13, scope: !4344)
!4350 = !DILocation(line: 1132, column: 19, scope: !4344)
!4351 = !DILocation(line: 1133, column: 1, scope: !4344)
!4352 = distinct !DISubprogram(name: "gimple_block", scope: !483, file: !483, line: 1121, type: !4307, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4353)
!4353 = !{!4354}
!4354 = !DILocalVariable(name: "g", arg: 1, scope: !4352, file: !483, line: 1121, type: !2932)
!4355 = !DILocation(line: 0, scope: !4352)
!4356 = !DILocation(line: 1123, column: 20, scope: !4352)
!4357 = !DILocation(line: 1123, column: 3, scope: !4352)
!4358 = distinct !DISubprogram(name: "gimple_has_location", scope: !483, file: !483, line: 1165, type: !2930, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4359)
!4359 = !{!4360}
!4360 = !DILocalVariable(name: "g", arg: 1, scope: !4358, file: !483, line: 1165, type: !2932)
!4361 = !DILocation(line: 0, scope: !4358)
!4362 = !DILocation(line: 1167, column: 10, scope: !4358)
!4363 = !DILocation(line: 1167, column: 30, scope: !4358)
!4364 = !DILocation(line: 1167, column: 3, scope: !4358)
!4365 = distinct !DISubprogram(name: "gimple_set_location", scope: !483, file: !483, line: 1156, type: !4366, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4368)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{null, !878, !692}
!4368 = !{!4369, !4370}
!4369 = !DILocalVariable(name: "g", arg: 1, scope: !4365, file: !483, line: 1156, type: !878)
!4370 = !DILocalVariable(name: "location", arg: 2, scope: !4365, file: !483, line: 1156, type: !692)
!4371 = !DILocation(line: 0, scope: !4365)
!4372 = !DILocation(line: 1158, column: 13, scope: !4365)
!4373 = !DILocation(line: 1158, column: 22, scope: !4365)
!4374 = !DILocation(line: 1159, column: 1, scope: !4365)
!4375 = distinct !DISubprogram(name: "gimple_location", scope: !483, file: !483, line: 1139, type: !4376, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!692, !2932}
!4378 = !{!4379}
!4379 = !DILocalVariable(name: "g", arg: 1, scope: !4375, file: !483, line: 1139, type: !2932)
!4380 = !DILocation(line: 0, scope: !4375)
!4381 = !DILocation(line: 1141, column: 20, scope: !4375)
!4382 = !DILocation(line: 1141, column: 3, scope: !4375)
!4383 = distinct !DISubprogram(name: "gimple_call_copy_flags", scope: !483, file: !483, line: 2198, type: !4384, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4386)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !878, !878}
!4386 = !{!4387, !4388}
!4387 = !DILocalVariable(name: "dest_call", arg: 1, scope: !4383, file: !483, line: 2198, type: !878)
!4388 = !DILocalVariable(name: "orig_call", arg: 2, scope: !4383, file: !483, line: 2198, type: !878)
!4389 = !DILocation(line: 0, scope: !4383)
!4390 = !DILocation(line: 2202, column: 49, scope: !4383)
!4391 = !DILocation(line: 2202, column: 29, scope: !4383)
!4392 = !DILocation(line: 2202, column: 21, scope: !4383)
!4393 = !DILocation(line: 2203, column: 1, scope: !4383)
!4394 = distinct !DISubprogram(name: "gimple_call_set_chain", scope: !483, file: !483, line: 2002, type: !4328, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4395)
!4395 = !{!4396, !4397}
!4396 = !DILocalVariable(name: "gs", arg: 1, scope: !4394, file: !483, line: 2002, type: !878)
!4397 = !DILocalVariable(name: "chain", arg: 2, scope: !4394, file: !483, line: 2002, type: !583)
!4398 = !DILocation(line: 0, scope: !4394)
!4399 = !DILocation(line: 2006, column: 3, scope: !4394)
!4400 = !DILocation(line: 2007, column: 1, scope: !4394)
!4401 = distinct !DISubprogram(name: "gimple_call_chain", scope: !483, file: !483, line: 1983, type: !4307, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4402)
!4402 = !{!4403}
!4403 = !DILocalVariable(name: "gs", arg: 1, scope: !4401, file: !483, line: 1983, type: !2932)
!4404 = !DILocation(line: 0, scope: !4401)
!4405 = !DILocation(line: 1986, column: 10, scope: !4401)
!4406 = !DILocation(line: 1986, column: 3, scope: !4401)
!4407 = distinct !DISubprogram(name: "ipa_combine_adjustments", scope: !3, file: !3, line: 1769, type: !4408, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!3860, !3860, !3860}
!4410 = !{!4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4423, !4427, !4428, !4429}
!4411 = !DILocalVariable(name: "inner", arg: 1, scope: !4407, file: !3, line: 1769, type: !3860)
!4412 = !DILocalVariable(name: "outer", arg: 2, scope: !4407, file: !3, line: 1770, type: !3860)
!4413 = !DILocalVariable(name: "i", scope: !4407, file: !3, line: 1772, type: !568)
!4414 = !DILocalVariable(name: "outlen", scope: !4407, file: !3, line: 1772, type: !568)
!4415 = !DILocalVariable(name: "inlen", scope: !4407, file: !3, line: 1773, type: !568)
!4416 = !DILocalVariable(name: "removals", scope: !4407, file: !3, line: 1774, type: !568)
!4417 = !DILocalVariable(name: "adjustments", scope: !4407, file: !3, line: 1775, type: !3860)
!4418 = !DILocalVariable(name: "tmp", scope: !4407, file: !3, line: 1775, type: !3860)
!4419 = !DILocalVariable(name: "n", scope: !4420, file: !3, line: 1780, type: !3883)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1779, column: 5)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 1778, column: 3)
!4422 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 1778, column: 3)
!4423 = !DILocalVariable(name: "r", scope: !4424, file: !3, line: 1792, type: !3883)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1791, column: 5)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1790, column: 3)
!4426 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 1790, column: 3)
!4427 = !DILocalVariable(name: "out", scope: !4424, file: !3, line: 1793, type: !3883)
!4428 = !DILocalVariable(name: "in", scope: !4424, file: !3, line: 1795, type: !3883)
!4429 = !DILocalVariable(name: "n", scope: !4430, file: !3, line: 1829, type: !3883)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1828, column: 5)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 1827, column: 3)
!4432 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 1827, column: 3)
!4433 = !DILocation(line: 0, scope: !4407)
!4434 = !DILocation(line: 1772, column: 19, scope: !4407)
!4435 = !DILocation(line: 1773, column: 15, scope: !4407)
!4436 = !DILocation(line: 1775, column: 3, scope: !4407)
!4437 = !DILocation(line: 1777, column: 9, scope: !4407)
!4438 = !DILocation(line: 1777, column: 7, scope: !4407)
!4439 = !DILocation(line: 0, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1783, column: 11)
!4441 = !DILocation(line: 1778, column: 8, scope: !4422)
!4442 = !DILocation(line: 0, scope: !4422)
!4443 = !DILocation(line: 1778, column: 17, scope: !4421)
!4444 = !DILocation(line: 1778, column: 3, scope: !4422)
!4445 = !DILocation(line: 1781, column: 11, scope: !4420)
!4446 = !DILocation(line: 0, scope: !4420)
!4447 = !DILocation(line: 1783, column: 14, scope: !4440)
!4448 = !DILocation(line: 1783, column: 11, scope: !4440)
!4449 = !DILocation(line: 1783, column: 11, scope: !4420)
!4450 = !DILocation(line: 1784, column: 10, scope: !4440)
!4451 = !DILocation(line: 1784, column: 2, scope: !4440)
!4452 = !DILocation(line: 1786, column: 2, scope: !4440)
!4453 = !DILocation(line: 1778, column: 27, scope: !4421)
!4454 = !DILocation(line: 1778, column: 3, scope: !4421)
!4455 = distinct !{!4455, !4444, !4456}
!4456 = !DILocation(line: 1787, column: 5, scope: !4422)
!4457 = !DILocation(line: 1789, column: 17, scope: !4407)
!4458 = !DILocation(line: 0, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1802, column: 6)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1801, column: 8)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1800, column: 2)
!4462 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1799, column: 11)
!4463 = !DILocation(line: 1790, column: 8, scope: !4426)
!4464 = !DILocation(line: 0, scope: !4426)
!4465 = !DILocation(line: 1790, column: 17, scope: !4425)
!4466 = !DILocation(line: 1790, column: 3, scope: !4426)
!4467 = !DILocation(line: 1827, column: 3, scope: !4432)
!4468 = !DILocation(line: 1793, column: 41, scope: !4424)
!4469 = !DILocation(line: 0, scope: !4424)
!4470 = !DILocation(line: 1795, column: 40, scope: !4424)
!4471 = !DILocation(line: 1798, column: 7, scope: !4424)
!4472 = !DILocation(line: 1799, column: 16, scope: !4462)
!4473 = !DILocation(line: 1799, column: 11, scope: !4462)
!4474 = !DILocation(line: 1799, column: 11, scope: !4424)
!4475 = !DILocation(line: 1801, column: 52, scope: !4460)
!4476 = !DILocation(line: 1801, column: 9, scope: !4460)
!4477 = !DILocation(line: 1801, column: 8, scope: !4461)
!4478 = !DILocation(line: 1803, column: 12, scope: !4459)
!4479 = !DILocation(line: 1804, column: 16, scope: !4459)
!4480 = !DILocation(line: 1804, column: 8, scope: !4459)
!4481 = !DILocation(line: 1805, column: 11, scope: !4459)
!4482 = !DILocation(line: 1805, column: 24, scope: !4459)
!4483 = !DILocation(line: 1806, column: 6, scope: !4459)
!4484 = !DILocation(line: 1810, column: 11, scope: !4424)
!4485 = !DILocation(line: 1811, column: 15, scope: !4424)
!4486 = !DILocation(line: 1811, column: 7, scope: !4424)
!4487 = !DILocation(line: 1812, column: 27, scope: !4424)
!4488 = !DILocation(line: 1812, column: 10, scope: !4424)
!4489 = !DILocation(line: 1812, column: 21, scope: !4424)
!4490 = !DILocation(line: 1813, column: 22, scope: !4424)
!4491 = !DILocation(line: 1813, column: 10, scope: !4424)
!4492 = !DILocation(line: 1813, column: 15, scope: !4424)
!4493 = !DILocation(line: 1817, column: 15, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1817, column: 11)
!4495 = !DILocation(line: 1817, column: 11, scope: !4494)
!4496 = !DILocation(line: 1817, column: 26, scope: !4494)
!4497 = !DILocation(line: 1817, column: 34, scope: !4494)
!4498 = !DILocation(line: 1817, column: 29, scope: !4494)
!4499 = !DILocation(line: 1817, column: 11, scope: !4424)
!4500 = !DILocation(line: 1818, column: 5, scope: !4494)
!4501 = !DILocation(line: 1818, column: 16, scope: !4494)
!4502 = !DILocation(line: 1818, column: 2, scope: !4494)
!4503 = !DILocation(line: 1819, column: 16, scope: !4494)
!4504 = !DILocation(line: 1820, column: 19, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1819, column: 16)
!4506 = !DILocation(line: 1820, column: 5, scope: !4505)
!4507 = !DILocation(line: 1820, column: 12, scope: !4505)
!4508 = !DILocation(line: 1820, column: 2, scope: !4505)
!4509 = !DILocation(line: 1821, column: 21, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 1821, column: 16)
!4511 = !DILocation(line: 1821, column: 16, scope: !4510)
!4512 = !DILocation(line: 0, scope: !4510)
!4513 = !DILocation(line: 1821, column: 16, scope: !4505)
!4514 = !DILocation(line: 1822, column: 5, scope: !4510)
!4515 = !DILocation(line: 1822, column: 12, scope: !4510)
!4516 = !DILocation(line: 1822, column: 2, scope: !4510)
!4517 = !DILocation(line: 1824, column: 32, scope: !4510)
!4518 = !DILocation(line: 1824, column: 25, scope: !4510)
!4519 = !DILocation(line: 1824, column: 5, scope: !4510)
!4520 = !DILocation(line: 1824, column: 12, scope: !4510)
!4521 = !DILocation(line: 1790, column: 28, scope: !4425)
!4522 = !DILocation(line: 1790, column: 3, scope: !4425)
!4523 = distinct !{!4523, !4466, !4524}
!4524 = !DILocation(line: 1825, column: 5, scope: !4426)
!4525 = !DILocation(line: 0, scope: !4432)
!4526 = !DILocation(line: 1827, column: 17, scope: !4431)
!4527 = !DILocation(line: 1829, column: 39, scope: !4430)
!4528 = !DILocation(line: 0, scope: !4430)
!4529 = !DILocation(line: 1832, column: 14, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 1832, column: 11)
!4531 = !DILocation(line: 1832, column: 11, scope: !4530)
!4532 = !DILocation(line: 1832, column: 11, scope: !4430)
!4533 = !DILocation(line: 1833, column: 2, scope: !4530)
!4534 = !DILocation(line: 1827, column: 27, scope: !4431)
!4535 = !DILocation(line: 1827, column: 3, scope: !4431)
!4536 = distinct !{!4536, !4467, !4537}
!4537 = !DILocation(line: 1834, column: 5, scope: !4432)
!4538 = !DILocation(line: 1836, column: 3, scope: !4407)
!4539 = !DILocation(line: 1838, column: 1, scope: !4407)
!4540 = !DILocation(line: 1837, column: 3, scope: !4407)
!4541 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_heap_alloc", scope: !456, file: !456, line: 485, type: !4542, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!2110, !568}
!4544 = !{!4545}
!4545 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4541, file: !456, line: 485, type: !568)
!4546 = !DILocation(line: 0, scope: !4541)
!4547 = !DILocation(line: 485, column: 1, scope: !4541)
!4548 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_quick_push", scope: !456, file: !456, line: 484, type: !4549, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4553)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!4092, !4093, !4551}
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!4553 = !{!4554, !4555, !4556}
!4554 = !DILocalVariable(name: "vec_", arg: 1, scope: !4548, file: !456, line: 484, type: !4093)
!4555 = !DILocalVariable(name: "obj_", arg: 2, scope: !4548, file: !456, line: 484, type: !4551)
!4556 = !DILocalVariable(name: "slot_", scope: !4548, file: !456, line: 484, type: !4092)
!4557 = !DILocation(line: 0, scope: !4548)
!4558 = !DILocation(line: 484, column: 1, scope: !4548)
!4559 = !DILocation(line: 484, column: 1, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4548, file: !456, line: 484, column: 1)
!4561 = distinct !DISubprogram(name: "index_in_adjustments_multiple_times_p", scope: !3, file: !3, line: 1741, type: !4562, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4564)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!567, !568, !3860}
!4564 = !{!4565, !4566, !4567, !4568, !4569, !4570}
!4565 = !DILocalVariable(name: "base_index", arg: 1, scope: !4561, file: !3, line: 1741, type: !568)
!4566 = !DILocalVariable(name: "adjustments", arg: 2, scope: !4561, file: !3, line: 1742, type: !3860)
!4567 = !DILocalVariable(name: "i", scope: !4561, file: !3, line: 1744, type: !568)
!4568 = !DILocalVariable(name: "len", scope: !4561, file: !3, line: 1744, type: !568)
!4569 = !DILocalVariable(name: "one", scope: !4561, file: !3, line: 1745, type: !567)
!4570 = !DILocalVariable(name: "adj", scope: !4571, file: !3, line: 1749, type: !3883)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 1748, column: 5)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 1747, column: 3)
!4573 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 1747, column: 3)
!4574 = !DILocation(line: 0, scope: !4561)
!4575 = !DILocation(line: 1744, column: 16, scope: !4561)
!4576 = !DILocation(line: 1747, column: 8, scope: !4573)
!4577 = !DILocation(line: 0, scope: !4573)
!4578 = !DILocation(line: 1745, column: 8, scope: !4561)
!4579 = !DILocation(line: 1747, column: 17, scope: !4572)
!4580 = !DILocation(line: 1747, column: 3, scope: !4573)
!4581 = !DILocation(line: 1750, column: 13, scope: !4571)
!4582 = !DILocation(line: 0, scope: !4571)
!4583 = !DILocation(line: 1752, column: 16, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 1752, column: 11)
!4585 = !DILocation(line: 1752, column: 27, scope: !4584)
!4586 = !DILocation(line: 1752, column: 11, scope: !4571)
!4587 = !DILocation(line: 1754, column: 8, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 1754, column: 8)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1753, column: 2)
!4590 = !DILocation(line: 1754, column: 8, scope: !4589)
!4591 = !DILocation(line: 1759, column: 5, scope: !4572)
!4592 = !DILocation(line: 1747, column: 25, scope: !4572)
!4593 = !DILocation(line: 1747, column: 3, scope: !4572)
!4594 = distinct !{!4594, !4580, !4595}
!4595 = !DILocation(line: 1759, column: 5, scope: !4573)
!4596 = !DILocation(line: 1761, column: 1, scope: !4561)
!4597 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_heap_free", scope: !456, file: !456, line: 485, type: !4598, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4601)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{null, !4600}
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!4601 = !{!4602}
!4602 = !DILocalVariable(name: "vec_", arg: 1, scope: !4597, file: !456, line: 485, type: !4600)
!4603 = !DILocation(line: 0, scope: !4597)
!4604 = !DILocation(line: 485, column: 1, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4597, file: !456, line: 485, column: 1)
!4606 = !DILocation(line: 485, column: 1, scope: !4597)
!4607 = distinct !DISubprogram(name: "ipa_dump_param_adjustments", scope: !3, file: !3, line: 1844, type: !4608, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4610)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !2224, !3860, !583}
!4610 = !{!4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618}
!4611 = !DILocalVariable(name: "file", arg: 1, scope: !4607, file: !3, line: 1844, type: !2224)
!4612 = !DILocalVariable(name: "adjustments", arg: 2, scope: !4607, file: !3, line: 1844, type: !3860)
!4613 = !DILocalVariable(name: "fndecl", arg: 3, scope: !4607, file: !3, line: 1845, type: !583)
!4614 = !DILocalVariable(name: "i", scope: !4607, file: !3, line: 1847, type: !568)
!4615 = !DILocalVariable(name: "len", scope: !4607, file: !3, line: 1847, type: !568)
!4616 = !DILocalVariable(name: "first", scope: !4607, file: !3, line: 1848, type: !567)
!4617 = !DILocalVariable(name: "parms", scope: !4607, file: !3, line: 1849, type: !2105)
!4618 = !DILocalVariable(name: "adj", scope: !4619, file: !3, line: 1854, type: !3883)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 1853, column: 5)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 1852, column: 3)
!4621 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1852, column: 3)
!4622 = !DILocation(line: 0, scope: !4607)
!4623 = !DILocation(line: 1847, column: 16, scope: !4607)
!4624 = !DILocation(line: 1849, column: 3, scope: !4607)
!4625 = !DILocation(line: 1849, column: 28, scope: !4607)
!4626 = !DILocation(line: 1849, column: 20, scope: !4607)
!4627 = !DILocation(line: 1851, column: 3, scope: !4607)
!4628 = !DILocation(line: 1852, column: 8, scope: !4621)
!4629 = !DILocation(line: 0, scope: !4621)
!4630 = !DILocation(line: 1852, column: 17, scope: !4620)
!4631 = !DILocation(line: 1852, column: 3, scope: !4621)
!4632 = !DILocation(line: 1855, column: 13, scope: !4619)
!4633 = !DILocation(line: 0, scope: !4619)
!4634 = !DILocation(line: 1857, column: 12, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1857, column: 11)
!4636 = !DILocation(line: 1857, column: 11, scope: !4619)
!4637 = !DILocation(line: 1858, column: 2, scope: !4635)
!4638 = !DILocation(line: 1862, column: 55, scope: !4619)
!4639 = !DILocation(line: 1862, column: 7, scope: !4619)
!4640 = !DILocation(line: 1863, column: 33, scope: !4619)
!4641 = !DILocation(line: 1863, column: 7, scope: !4619)
!4642 = !DILocation(line: 1864, column: 16, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1864, column: 11)
!4644 = !DILocation(line: 1864, column: 11, scope: !4643)
!4645 = !DILocation(line: 1864, column: 11, scope: !4619)
!4646 = !DILocation(line: 1866, column: 4, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1865, column: 2)
!4648 = !DILocation(line: 1867, column: 35, scope: !4647)
!4649 = !DILocation(line: 1867, column: 4, scope: !4647)
!4650 = !DILocation(line: 1868, column: 2, scope: !4647)
!4651 = !DILocation(line: 1869, column: 16, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1869, column: 11)
!4653 = !DILocation(line: 1869, column: 11, scope: !4652)
!4654 = !DILocation(line: 1869, column: 11, scope: !4619)
!4655 = !DILocation(line: 1871, column: 4, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 1870, column: 2)
!4657 = !DILocation(line: 1872, column: 35, scope: !4656)
!4658 = !DILocation(line: 1872, column: 4, scope: !4656)
!4659 = !DILocation(line: 1873, column: 2, scope: !4656)
!4660 = !DILocation(line: 1874, column: 16, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1874, column: 11)
!4662 = !DILocation(line: 1874, column: 11, scope: !4661)
!4663 = !DILocation(line: 1874, column: 11, scope: !4619)
!4664 = !DILocation(line: 1876, column: 4, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 1875, column: 2)
!4666 = !DILocation(line: 1877, column: 35, scope: !4665)
!4667 = !DILocation(line: 1877, column: 4, scope: !4665)
!4668 = !DILocation(line: 1878, column: 2, scope: !4665)
!4669 = !DILocation(line: 1880, column: 16, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1880, column: 11)
!4671 = !DILocation(line: 1880, column: 11, scope: !4670)
!4672 = !DILocation(line: 1880, column: 11, scope: !4619)
!4673 = !DILocation(line: 1881, column: 2, scope: !4670)
!4674 = !DILocation(line: 1882, column: 21, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1882, column: 16)
!4676 = !DILocation(line: 1882, column: 16, scope: !4675)
!4677 = !DILocation(line: 1882, column: 16, scope: !4670)
!4678 = !DILocation(line: 1883, column: 2, scope: !4675)
!4679 = !DILocation(line: 1885, column: 45, scope: !4675)
!4680 = !DILocation(line: 1885, column: 2, scope: !4675)
!4681 = !DILocation(line: 1886, column: 16, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1886, column: 11)
!4683 = !DILocation(line: 1886, column: 11, scope: !4682)
!4684 = !DILocation(line: 1886, column: 11, scope: !4619)
!4685 = !DILocation(line: 1887, column: 2, scope: !4682)
!4686 = !DILocation(line: 1888, column: 48, scope: !4619)
!4687 = !DILocation(line: 1888, column: 7, scope: !4619)
!4688 = !DILocation(line: 1889, column: 7, scope: !4619)
!4689 = !DILocation(line: 1852, column: 25, scope: !4620)
!4690 = !DILocation(line: 1852, column: 3, scope: !4620)
!4691 = distinct !{!4691, !4631, !4692}
!4692 = !DILocation(line: 1890, column: 5, scope: !4621)
!4693 = !DILocation(line: 1891, column: 3, scope: !4607)
!4694 = !DILocation(line: 1892, column: 1, scope: !4607)
!4695 = distinct !DISubprogram(name: "ipa_prop_write_jump_functions", scope: !3, file: !3, line: 2093, type: !4696, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4699)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{null, !4698}
!4698 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_set", file: !250, line: 283, baseType: !1844)
!4699 = !{!4700, !4701, !4702, !4763, !4764}
!4700 = !DILocalVariable(name: "set", arg: 1, scope: !4695, file: !3, line: 2093, type: !4698)
!4701 = !DILocalVariable(name: "node", scope: !4695, file: !3, line: 2095, type: !579)
!4702 = !DILocalVariable(name: "ob", scope: !4695, file: !3, line: 2096, type: !4703)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "output_block", file: !469, line: 625, size: 704, elements: !4705)
!4705 = !{!4706, !4707, !4720, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "section_type", scope: !4704, file: !469, line: 627, baseType: !468, size: 32)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "decl_state", scope: !4704, file: !469, line: 628, baseType: !4708, size: 64, offset: 64)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_out_decl_state", file: !469, line: 517, size: 1472, elements: !4710)
!4710 = !{!4711, !4718, !4719}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !4709, file: !469, line: 521, baseType: !4712, size: 1344)
!4712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4713, size: 1344, elements: !1914)
!4713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_tree_ref_encoder", file: !469, line: 493, size: 192, elements: !4714)
!4714 = !{!4715, !4716, !4717}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "tree_hash_table", scope: !4713, file: !469, line: 495, baseType: !1159, size: 64)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "next_index", scope: !4713, file: !469, line: 496, baseType: !7, size: 32, offset: 64)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !4713, file: !469, line: 497, baseType: !2105, size: 64, offset: 128)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node_encoder", scope: !4709, file: !469, line: 524, baseType: !1919, size: 64, offset: 1344)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !4709, file: !469, line: 528, baseType: !583, size: 64, offset: 1408)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "main_stream", scope: !4704, file: !469, line: 631, baseType: !4721, size: 64, offset: 128)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_output_stream", file: !469, line: 577, size: 320, elements: !4723)
!4723 = !{!4724, !4729, !4730, !4731, !4732, !4733}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "first_block", scope: !4722, file: !469, line: 580, baseType: !4725, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_char_ptr_base", file: !469, line: 568, size: 64, elements: !4727)
!4727 = !{!4728}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4726, file: !469, line: 570, baseType: !570, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "current_block", scope: !4722, file: !469, line: 583, baseType: !4725, size: 64, offset: 64)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "current_pointer", scope: !4722, file: !469, line: 586, baseType: !570, size: 64, offset: 128)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "left_in_block", scope: !4722, file: !469, line: 589, baseType: !7, size: 32, offset: 192)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !4722, file: !469, line: 592, baseType: !7, size: 32, offset: 224)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !4722, file: !469, line: 595, baseType: !7, size: 32, offset: 256)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "string_stream", scope: !4704, file: !469, line: 634, baseType: !4721, size: 64, offset: 192)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_stream", scope: !4704, file: !469, line: 637, baseType: !4721, size: 64, offset: 256)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "string_hash_table", scope: !4704, file: !469, line: 641, baseType: !1159, size: 64, offset: 320)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node", scope: !4704, file: !469, line: 645, baseType: !579, size: 64, offset: 384)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "current_file", scope: !4704, file: !469, line: 650, baseType: !573, size: 64, offset: 448)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "current_line", scope: !4704, file: !469, line: 651, baseType: !568, size: 32, offset: 512)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "current_col", scope: !4704, file: !469, line: 652, baseType: !568, size: 32, offset: 544)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !4704, file: !469, line: 655, baseType: !567, size: 8, offset: 576)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "writer_cache", scope: !4704, file: !469, line: 658, baseType: !4743, size: 64, offset: 640)
!4743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4744, size: 64)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_streamer_cache_d", file: !469, line: 346, size: 256, elements: !4745)
!4745 = !{!4746, !4747, !4748, !4749}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "node_map", scope: !4744, file: !469, line: 349, baseType: !1159, size: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "next_slot", scope: !4744, file: !469, line: 352, baseType: !7, size: 32, offset: 64)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !4744, file: !469, line: 355, baseType: !1222, size: 64, offset: 128)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !4744, file: !469, line: 358, baseType: !4750, size: 64, offset: 192)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_heap", file: !4752, line: 35, baseType: !4753)
!4752 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_heap", file: !4752, line: 35, size: 96, elements: !4754)
!4754 = !{!4755}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4753, file: !4752, line: 35, baseType: !4756, size: 96)
!4756 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_base", file: !4752, line: 34, baseType: !4757)
!4757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_base", file: !4752, line: 34, size: 96, elements: !4758)
!4758 = !{!4759, !4760, !4761}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4757, file: !4752, line: 34, baseType: !7, size: 32)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4757, file: !4752, line: 34, baseType: !7, size: 32, offset: 32)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4757, file: !4752, line: 34, baseType: !4762, size: 32, offset: 64)
!4762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !666)
!4763 = !DILocalVariable(name: "count", scope: !4695, file: !3, line: 2097, type: !7)
!4764 = !DILocalVariable(name: "csi", scope: !4695, file: !3, line: 2098, type: !4765)
!4765 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_set_iterator", file: !250, line: 305, baseType: !4766)
!4766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !250, line: 301, size: 128, elements: !4767)
!4767 = !{!4768, !4769}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4766, file: !250, line: 303, baseType: !4698, size: 64)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4766, file: !250, line: 304, baseType: !7, size: 32, offset: 64)
!4770 = !DILocation(line: 0, scope: !4695)
!4771 = !DILocation(line: 2096, column: 29, scope: !4695)
!4772 = !DILocation(line: 2098, column: 3, scope: !4695)
!4773 = !DILocation(line: 2100, column: 7, scope: !4695)
!4774 = !DILocation(line: 2100, column: 19, scope: !4695)
!4775 = !DILocation(line: 2102, column: 14, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2102, column: 3)
!4777 = !DILocation(line: 0, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 2102, column: 3)
!4779 = !DILocation(line: 2102, column: 8, scope: !4776)
!4780 = !DILocation(line: 2102, column: 32, scope: !4778)
!4781 = !DILocation(line: 2102, column: 31, scope: !4778)
!4782 = !DILocation(line: 2102, column: 3, scope: !4776)
!4783 = !DILocation(line: 2104, column: 14, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 2103, column: 5)
!4785 = !DILocation(line: 2105, column: 17, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 2105, column: 11)
!4787 = !DILocation(line: 2105, column: 11, scope: !4786)
!4788 = !DILocation(line: 2105, column: 26, scope: !4786)
!4789 = !DILocation(line: 2105, column: 29, scope: !4786)
!4790 = !DILocation(line: 2105, column: 49, scope: !4786)
!4791 = !DILocation(line: 2105, column: 11, scope: !4784)
!4792 = !DILocation(line: 2102, column: 49, scope: !4778)
!4793 = !DILocation(line: 2102, column: 3, scope: !4778)
!4794 = distinct !{!4794, !4782, !4795}
!4795 = !DILocation(line: 2107, column: 5, scope: !4776)
!4796 = !DILocation(line: 2109, column: 34, scope: !4695)
!4797 = !DILocation(line: 2109, column: 47, scope: !4695)
!4798 = !DILocation(line: 2109, column: 3, scope: !4695)
!4799 = !DILocation(line: 2112, column: 14, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2112, column: 3)
!4801 = !DILocation(line: 2112, column: 8, scope: !4800)
!4802 = !DILocation(line: 2112, column: 32, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 2112, column: 3)
!4804 = !DILocation(line: 2112, column: 31, scope: !4803)
!4805 = !DILocation(line: 2112, column: 3, scope: !4800)
!4806 = !DILocation(line: 2114, column: 14, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 2113, column: 5)
!4808 = !DILocation(line: 2115, column: 17, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 2115, column: 11)
!4810 = !DILocation(line: 2115, column: 11, scope: !4809)
!4811 = !DILocation(line: 2115, column: 26, scope: !4809)
!4812 = !DILocation(line: 2115, column: 29, scope: !4809)
!4813 = !DILocation(line: 2115, column: 49, scope: !4809)
!4814 = !DILocation(line: 2115, column: 11, scope: !4807)
!4815 = !DILocation(line: 2116, column: 9, scope: !4809)
!4816 = !DILocation(line: 2112, column: 49, scope: !4803)
!4817 = !DILocation(line: 2112, column: 3, scope: !4803)
!4818 = distinct !{!4818, !4805, !4819}
!4819 = !DILocation(line: 2117, column: 5, scope: !4800)
!4820 = !DILocation(line: 2118, column: 28, scope: !4695)
!4821 = !DILocation(line: 2118, column: 3, scope: !4695)
!4822 = !DILocation(line: 2119, column: 3, scope: !4695)
!4823 = !DILocation(line: 2120, column: 3, scope: !4695)
!4824 = !DILocation(line: 2121, column: 1, scope: !4695)
!4825 = distinct !DISubprogram(name: "csi_start", scope: !250, file: !250, line: 668, type: !4826, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4828)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!4765, !4698}
!4828 = !{!4829, !4830}
!4829 = !DILocalVariable(name: "set", arg: 1, scope: !4825, file: !250, line: 668, type: !4698)
!4830 = !DILocalVariable(name: "csi", scope: !4825, file: !250, line: 670, type: !4765)
!4831 = !DILocation(line: 0, scope: !4825)
!4832 = !DILocation(line: 672, column: 7, scope: !4825)
!4833 = !DILocation(line: 672, column: 11, scope: !4825)
!4834 = !DILocation(line: 673, column: 7, scope: !4825)
!4835 = !DILocation(line: 673, column: 13, scope: !4825)
!4836 = !DILocation(line: 674, column: 3, scope: !4825)
!4837 = distinct !DISubprogram(name: "csi_end_p", scope: !250, file: !250, line: 647, type: !4838, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4840)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!567, !4765}
!4840 = !{!4841}
!4841 = !DILocalVariable(name: "csi", arg: 1, scope: !4837, file: !250, line: 647, type: !4765)
!4842 = !DILocation(line: 649, column: 23, scope: !4837)
!4843 = !DILocation(line: 649, column: 20, scope: !4837)
!4844 = !DILocation(line: 649, column: 10, scope: !4837)
!4845 = !DILocation(line: 649, column: 3, scope: !4837)
!4846 = distinct !DISubprogram(name: "csi_node", scope: !250, file: !250, line: 661, type: !4847, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!579, !4765}
!4849 = !{!4850}
!4850 = !DILocalVariable(name: "csi", arg: 1, scope: !4846, file: !250, line: 661, type: !4765)
!4851 = !DILocation(line: 663, column: 10, scope: !4846)
!4852 = !DILocation(line: 663, column: 3, scope: !4846)
!4853 = distinct !DISubprogram(name: "csi_next", scope: !250, file: !250, line: 654, type: !4854, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4857)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !4856}
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 64)
!4857 = !{!4858}
!4858 = !DILocalVariable(name: "csi", arg: 1, scope: !4853, file: !250, line: 654, type: !4856)
!4859 = !DILocation(line: 0, scope: !4853)
!4860 = !DILocation(line: 656, column: 8, scope: !4853)
!4861 = !DILocation(line: 656, column: 13, scope: !4853)
!4862 = !DILocation(line: 657, column: 1, scope: !4853)
!4863 = distinct !DISubprogram(name: "ipa_write_node_info", scope: !3, file: !3, line: 2001, type: !4864, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !4703, !579}
!4866 = !{!4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4894, !4895, !4896}
!4867 = !DILocalVariable(name: "ob", arg: 1, scope: !4863, file: !3, line: 2001, type: !4703)
!4868 = !DILocalVariable(name: "node", arg: 2, scope: !4863, file: !3, line: 2001, type: !579)
!4869 = !DILocalVariable(name: "node_ref", scope: !4863, file: !3, line: 2003, type: !568)
!4870 = !DILocalVariable(name: "encoder", scope: !4863, file: !3, line: 2004, type: !1919)
!4871 = !DILocalVariable(name: "info", scope: !4863, file: !3, line: 2005, type: !2050)
!4872 = !DILocalVariable(name: "j", scope: !4863, file: !3, line: 2006, type: !568)
!4873 = !DILocalVariable(name: "e", scope: !4863, file: !3, line: 2007, type: !1758)
!4874 = !DILocalVariable(name: "bp", scope: !4863, file: !3, line: 2008, type: !4875)
!4875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4876, size: 64)
!4876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitpack_d", file: !469, line: 156, size: 192, elements: !4877)
!4877 = !{!4878, !4879, !4880}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !4876, file: !469, line: 159, baseType: !1024, size: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "first_unused_bit", scope: !4876, file: !469, line: 165, baseType: !1024, size: 64, offset: 64)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4876, file: !469, line: 168, baseType: !4881, size: 64, offset: 128)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_heap", file: !469, line: 154, baseType: !4883)
!4883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_heap", file: !469, line: 154, size: 128, elements: !4884)
!4884 = !{!4885}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4883, file: !469, line: 154, baseType: !4886, size: 128)
!4886 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_base", file: !469, line: 153, baseType: !4887)
!4887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_base", file: !469, line: 153, size: 128, elements: !4888)
!4888 = !{!4889, !4890, !4891}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4887, file: !469, line: 153, baseType: !7, size: 32)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4887, file: !469, line: 153, baseType: !7, size: 32, offset: 32)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4887, file: !469, line: 153, baseType: !4892, size: 64, offset: 64)
!4892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4893, size: 64, elements: !666)
!4893 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitpack_word_t", file: !469, line: 152, baseType: !637)
!4894 = !DILocalVariable(name: "note_count", scope: !4863, file: !3, line: 2009, type: !568)
!4895 = !DILocalVariable(name: "note", scope: !4863, file: !3, line: 2010, type: !2056)
!4896 = !DILocalVariable(name: "args", scope: !4897, file: !3, line: 2029, type: !2971)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 2028, column: 5)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2027, column: 3)
!4899 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2027, column: 3)
!4900 = !DILocation(line: 0, scope: !4863)
!4901 = !DILocation(line: 2005, column: 34, scope: !4863)
!4902 = !DILocation(line: 2012, column: 17, scope: !4863)
!4903 = !DILocation(line: 2012, column: 29, scope: !4863)
!4904 = !DILocation(line: 2013, column: 14, scope: !4863)
!4905 = !DILocation(line: 2014, column: 34, scope: !4863)
!4906 = !DILocation(line: 2014, column: 47, scope: !4863)
!4907 = !DILocation(line: 2014, column: 3, scope: !4863)
!4908 = !DILocation(line: 2016, column: 8, scope: !4863)
!4909 = !DILocation(line: 2017, column: 28, scope: !4863)
!4910 = !DILocation(line: 2017, column: 22, scope: !4863)
!4911 = !DILocation(line: 2017, column: 3, scope: !4863)
!4912 = !DILocation(line: 2018, column: 28, scope: !4863)
!4913 = !DILocation(line: 2018, column: 22, scope: !4863)
!4914 = !DILocation(line: 2018, column: 3, scope: !4863)
!4915 = !DILocation(line: 2019, column: 3, scope: !4863)
!4916 = !DILocation(line: 2021, column: 3, scope: !4863)
!4917 = !DILocation(line: 2022, column: 3, scope: !4863)
!4918 = !DILocation(line: 0, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 2023, column: 3)
!4920 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2023, column: 3)
!4921 = !DILocation(line: 2023, column: 8, scope: !4920)
!4922 = !DILocation(line: 0, scope: !4920)
!4923 = !DILocation(line: 2023, column: 19, scope: !4919)
!4924 = !DILocation(line: 2023, column: 17, scope: !4919)
!4925 = !DILocation(line: 2023, column: 3, scope: !4920)
!4926 = !DILocation(line: 2024, column: 30, scope: !4919)
!4927 = !DILocation(line: 2024, column: 40, scope: !4919)
!4928 = !DILocation(line: 2024, column: 24, scope: !4919)
!4929 = !DILocation(line: 2024, column: 5, scope: !4919)
!4930 = !DILocation(line: 2023, column: 48, scope: !4919)
!4931 = !DILocation(line: 2023, column: 3, scope: !4919)
!4932 = distinct !{!4932, !4925, !4933}
!4933 = !DILocation(line: 2024, column: 51, scope: !4920)
!4934 = !DILocation(line: 2025, column: 27, scope: !4863)
!4935 = !DILocation(line: 2025, column: 3, scope: !4863)
!4936 = !DILocation(line: 2026, column: 3, scope: !4863)
!4937 = !DILocation(line: 2027, column: 18, scope: !4899)
!4938 = !DILocation(line: 2027, column: 8, scope: !4899)
!4939 = !DILocation(line: 0, scope: !4899)
!4940 = !DILocation(line: 2027, column: 3, scope: !4899)
!4941 = !DILocation(line: 2029, column: 36, scope: !4897)
!4942 = !DILocation(line: 0, scope: !4897)
!4943 = !DILocation(line: 2031, column: 38, scope: !4897)
!4944 = !DILocation(line: 2032, column: 6, scope: !4897)
!4945 = !DILocation(line: 2031, column: 7, scope: !4897)
!4946 = !DILocation(line: 2033, column: 12, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2033, column: 7)
!4948 = !DILocation(line: 0, scope: !4947)
!4949 = !DILocation(line: 2033, column: 23, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 2033, column: 7)
!4951 = !DILocation(line: 2033, column: 21, scope: !4950)
!4952 = !DILocation(line: 2033, column: 7, scope: !4947)
!4953 = !DILocation(line: 2034, column: 31, scope: !4950)
!4954 = !DILocation(line: 2034, column: 2, scope: !4950)
!4955 = !DILocation(line: 2033, column: 58, scope: !4950)
!4956 = !DILocation(line: 2033, column: 7, scope: !4950)
!4957 = distinct !{!4957, !4952, !4958}
!4958 = !DILocation(line: 2034, column: 62, scope: !4947)
!4959 = !DILocation(line: 2027, column: 37, scope: !4898)
!4960 = !DILocation(line: 2027, column: 3, scope: !4898)
!4961 = distinct !{!4961, !4940, !4962}
!4962 = !DILocation(line: 2035, column: 5, scope: !4899)
!4963 = !DILocation(line: 2037, column: 21, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2037, column: 3)
!4965 = !DILocation(line: 2037, column: 8, scope: !4964)
!4966 = !DILocation(line: 0, scope: !4964)
!4967 = !DILocation(line: 2037, column: 3, scope: !4964)
!4968 = !DILocation(line: 2038, column: 15, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 2037, column: 3)
!4970 = !DILocation(line: 2037, column: 53, scope: !4969)
!4971 = !DILocation(line: 2037, column: 3, scope: !4969)
!4972 = distinct !{!4972, !4967, !4973}
!4973 = !DILocation(line: 2038, column: 15, scope: !4964)
!4974 = !DILocation(line: 2039, column: 34, scope: !4863)
!4975 = !DILocation(line: 2039, column: 47, scope: !4863)
!4976 = !DILocation(line: 2039, column: 3, scope: !4863)
!4977 = !DILocation(line: 2040, column: 8, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2040, column: 3)
!4979 = !DILocation(line: 0, scope: !4978)
!4980 = !DILocation(line: 2040, column: 3, scope: !4978)
!4981 = !DILocation(line: 2041, column: 5, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 2040, column: 3)
!4983 = !DILocation(line: 2040, column: 53, scope: !4982)
!4984 = !DILocation(line: 2040, column: 3, scope: !4982)
!4985 = distinct !{!4985, !4980, !4986}
!4986 = !DILocation(line: 2041, column: 40, scope: !4978)
!4987 = !DILocation(line: 2042, column: 1, scope: !4863)
!4988 = distinct !DISubprogram(name: "ipa_prop_read_jump_functions", scope: !3, file: !3, line: 2166, type: !1838, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4989)
!4989 = !{!4990, !4992, !4993, !4994, !4996}
!4990 = !DILocalVariable(name: "file_data_vec", scope: !4988, file: !3, line: 2168, type: !4991)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!4992 = !DILocalVariable(name: "file_data", scope: !4988, file: !3, line: 2169, type: !1901)
!4993 = !DILocalVariable(name: "j", scope: !4988, file: !3, line: 2170, type: !7)
!4994 = !DILocalVariable(name: "len", scope: !4995, file: !3, line: 2178, type: !1024)
!4995 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2177, column: 5)
!4996 = !DILocalVariable(name: "data", scope: !4995, file: !3, line: 2179, type: !573)
!4997 = !DILocation(line: 2168, column: 47, scope: !4988)
!4998 = !DILocation(line: 0, scope: !4988)
!4999 = !DILocation(line: 2172, column: 3, scope: !4988)
!5000 = !DILocation(line: 2173, column: 3, scope: !4988)
!5001 = !DILocation(line: 2174, column: 3, scope: !4988)
!5002 = !DILocation(line: 0, scope: !4995)
!5003 = !DILocation(line: 2176, column: 3, scope: !4988)
!5004 = !DILocation(line: 2176, column: 38, scope: !4988)
!5005 = !DILocation(line: 2176, column: 23, scope: !4988)
!5006 = !DILocation(line: 2178, column: 7, scope: !4995)
!5007 = !DILocation(line: 2179, column: 26, scope: !4995)
!5008 = !DILocation(line: 2181, column: 11, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 2181, column: 11)
!5010 = !DILocation(line: 2181, column: 11, scope: !4995)
!5011 = !DILocation(line: 2182, column: 49, scope: !5009)
!5012 = !DILocation(line: 2182, column: 9, scope: !5009)
!5013 = !DILocation(line: 2183, column: 5, scope: !4988)
!5014 = distinct !{!5014, !5003, !5013}
!5015 = !DILocation(line: 2184, column: 1, scope: !4988)
!5016 = distinct !DISubprogram(name: "ipa_check_create_node_params", scope: !456, file: !456, line: 349, type: !1838, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!5017 = !DILocation(line: 351, column: 8, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5016, file: !456, line: 351, column: 7)
!5019 = !DILocation(line: 351, column: 7, scope: !5016)
!5020 = !DILocation(line: 352, column: 30, scope: !5018)
!5021 = !DILocation(line: 352, column: 28, scope: !5018)
!5022 = !DILocation(line: 352, column: 5, scope: !5018)
!5023 = !DILocation(line: 355, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5016, file: !456, line: 355, column: 7)
!5025 = !DILocation(line: 356, column: 21, scope: !5024)
!5026 = !DILocation(line: 356, column: 7, scope: !5024)
!5027 = !DILocation(line: 355, column: 7, scope: !5016)
!5028 = !DILocation(line: 357, column: 5, scope: !5024)
!5029 = !DILocation(line: 359, column: 1, scope: !5016)
!5030 = distinct !DISubprogram(name: "ipa_check_create_edge_args", scope: !456, file: !456, line: 365, type: !1838, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!5031 = !DILocation(line: 367, column: 8, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5030, file: !456, line: 367, column: 7)
!5033 = !DILocation(line: 367, column: 7, scope: !5030)
!5034 = !DILocation(line: 368, column: 28, scope: !5032)
!5035 = !DILocation(line: 368, column: 26, scope: !5032)
!5036 = !DILocation(line: 368, column: 5, scope: !5032)
!5037 = !DILocation(line: 371, column: 7, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5030, file: !456, line: 371, column: 7)
!5039 = !DILocation(line: 372, column: 22, scope: !5038)
!5040 = !DILocation(line: 372, column: 7, scope: !5038)
!5041 = !DILocation(line: 371, column: 7, scope: !5030)
!5042 = !DILocation(line: 373, column: 5, scope: !5038)
!5043 = !DILocation(line: 375, column: 1, scope: !5030)
!5044 = distinct !DISubprogram(name: "ipa_prop_read_section", scope: !3, file: !3, line: 2126, type: !5045, scopeLine: 2128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{null, !1901, !573, !1024}
!5047 = !{!5048, !5049, !5050, !5051, !5052, !5054, !5055, !5056, !5084, !5090, !5091, !5092, !5096, !5097}
!5048 = !DILocalVariable(name: "file_data", arg: 1, scope: !5044, file: !3, line: 2126, type: !1901)
!5049 = !DILocalVariable(name: "data", arg: 2, scope: !5044, file: !3, line: 2126, type: !573)
!5050 = !DILocalVariable(name: "len", arg: 3, scope: !5044, file: !3, line: 2127, type: !1024)
!5051 = !DILocalVariable(name: "header", scope: !5044, file: !3, line: 2129, type: !2148)
!5052 = !DILocalVariable(name: "cfg_offset", scope: !5044, file: !3, line: 2131, type: !5053)
!5053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!5054 = !DILocalVariable(name: "main_offset", scope: !5044, file: !3, line: 2132, type: !5053)
!5055 = !DILocalVariable(name: "string_offset", scope: !5044, file: !3, line: 2133, type: !5053)
!5056 = !DILocalVariable(name: "data_in", scope: !5044, file: !3, line: 2134, type: !5057)
!5057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5058, size: 64)
!5058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_in", file: !469, line: 663, size: 576, elements: !5059)
!5059 = !{!5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5083}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "file_data", scope: !5058, file: !469, line: 666, baseType: !1901, size: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "labels", scope: !5058, file: !469, line: 669, baseType: !913, size: 64, offset: 64)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "strings", scope: !5058, file: !469, line: 672, baseType: !573, size: 64, offset: 128)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "strings_len", scope: !5058, file: !469, line: 675, baseType: !7, size: 32, offset: 192)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "num_named_labels", scope: !5058, file: !469, line: 679, baseType: !7, size: 32, offset: 224)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "num_unnamed_labels", scope: !5058, file: !469, line: 682, baseType: !7, size: 32, offset: 256)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "current_file", scope: !5058, file: !469, line: 684, baseType: !573, size: 64, offset: 320)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "current_line", scope: !5058, file: !469, line: 685, baseType: !568, size: 32, offset: 384)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "current_col", scope: !5058, file: !469, line: 686, baseType: !568, size: 32, offset: 416)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "globals_resolution", scope: !5058, file: !469, line: 689, baseType: !5070, size: 64, offset: 448)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ld_plugin_symbol_resolution_t_heap", file: !469, line: 286, baseType: !5072)
!5072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ld_plugin_symbol_resolution_t_heap", file: !469, line: 286, size: 96, elements: !5073)
!5073 = !{!5074}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5072, file: !469, line: 286, baseType: !5075, size: 96)
!5075 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ld_plugin_symbol_resolution_t_base", file: !469, line: 285, baseType: !5076)
!5076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ld_plugin_symbol_resolution_t_base", file: !469, line: 285, size: 96, elements: !5077)
!5077 = !{!5078, !5079, !5080}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5076, file: !469, line: 285, baseType: !7, size: 32)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5076, file: !469, line: 285, baseType: !7, size: 32, offset: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5076, file: !469, line: 285, baseType: !5081, size: 32, offset: 64)
!5081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5082, size: 32, elements: !666)
!5082 = !DIDerivedType(tag: DW_TAG_typedef, name: "ld_plugin_symbol_resolution_t", file: !469, line: 284, baseType: !553)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "reader_cache", scope: !5058, file: !469, line: 692, baseType: !4743, size: 64, offset: 512)
!5084 = !DILocalVariable(name: "ib_main", scope: !5044, file: !3, line: 2135, type: !5085)
!5085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_input_block", file: !469, line: 363, size: 128, elements: !5086)
!5086 = !{!5087, !5088, !5089}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5085, file: !469, line: 365, baseType: !573, size: 64)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5085, file: !469, line: 366, baseType: !7, size: 32, offset: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5085, file: !469, line: 367, baseType: !7, size: 32, offset: 96)
!5090 = !DILocalVariable(name: "i", scope: !5044, file: !3, line: 2136, type: !7)
!5091 = !DILocalVariable(name: "count", scope: !5044, file: !3, line: 2137, type: !7)
!5092 = !DILocalVariable(name: "index", scope: !5093, file: !3, line: 2149, type: !7)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 2148, column: 5)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 2147, column: 3)
!5095 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 2147, column: 3)
!5096 = !DILocalVariable(name: "node", scope: !5093, file: !3, line: 2150, type: !579)
!5097 = !DILocalVariable(name: "encoder", scope: !5093, file: !3, line: 2151, type: !1919)
!5098 = !DILocation(line: 0, scope: !5044)
!5099 = !DILocation(line: 2132, column: 52, scope: !5044)
!5100 = !DILocation(line: 2132, column: 42, scope: !5044)
!5101 = !DILocation(line: 2133, column: 55, scope: !5044)
!5102 = !DILocation(line: 2133, column: 45, scope: !5044)
!5103 = !DILocation(line: 2135, column: 3, scope: !5044)
!5104 = !DILocation(line: 2139, column: 3, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 2139, column: 3)
!5106 = !DILocation(line: 2143, column: 56, scope: !5044)
!5107 = !DILocation(line: 2144, column: 12, scope: !5044)
!5108 = !DILocation(line: 2143, column: 5, scope: !5044)
!5109 = !DILocation(line: 2145, column: 11, scope: !5044)
!5110 = !DILocation(line: 0, scope: !5093)
!5111 = !DILocation(line: 2147, column: 8, scope: !5095)
!5112 = !DILocation(line: 0, scope: !5095)
!5113 = !DILocation(line: 2147, column: 17, scope: !5094)
!5114 = !DILocation(line: 2147, column: 3, scope: !5095)
!5115 = !DILocation(line: 2153, column: 15, scope: !5093)
!5116 = !DILocation(line: 2154, column: 28, scope: !5093)
!5117 = !DILocation(line: 2155, column: 14, scope: !5093)
!5118 = !DILocation(line: 2156, column: 7, scope: !5093)
!5119 = !DILocation(line: 2147, column: 27, scope: !5094)
!5120 = !DILocation(line: 2147, column: 3, scope: !5094)
!5121 = distinct !{!5121, !5114, !5122}
!5122 = !DILocation(line: 2157, column: 5, scope: !5095)
!5123 = !DILocation(line: 2158, column: 3, scope: !5044)
!5124 = !DILocation(line: 2160, column: 3, scope: !5044)
!5125 = !DILocation(line: 2161, column: 1, scope: !5044)
!5126 = distinct !DISubprogram(name: "ipa_update_after_lto_read", scope: !3, file: !3, line: 2191, type: !1838, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5127)
!5127 = !{!5128, !5129}
!5128 = !DILocalVariable(name: "node", scope: !5126, file: !3, line: 2193, type: !579)
!5129 = !DILocalVariable(name: "cs", scope: !5126, file: !3, line: 2194, type: !1758)
!5130 = !DILocation(line: 2196, column: 3, scope: !5126)
!5131 = !DILocation(line: 2197, column: 3, scope: !5126)
!5132 = !DILocation(line: 2199, column: 8, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2199, column: 3)
!5134 = !DILocation(line: 0, scope: !5133)
!5135 = !DILocation(line: 0, scope: !5126)
!5136 = !DILocation(line: 2199, column: 3, scope: !5133)
!5137 = !DILocation(line: 2200, column: 15, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2200, column: 9)
!5139 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2199, column: 3)
!5140 = !DILocation(line: 2200, column: 9, scope: !5138)
!5141 = !DILocation(line: 2200, column: 9, scope: !5139)
!5142 = !DILocation(line: 2201, column: 7, scope: !5138)
!5143 = !DILocation(line: 2199, column: 48, scope: !5139)
!5144 = !DILocation(line: 2199, column: 3, scope: !5139)
!5145 = distinct !{!5145, !5136, !5146}
!5146 = !DILocation(line: 2201, column: 39, scope: !5133)
!5147 = !DILocation(line: 2203, column: 8, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2203, column: 3)
!5149 = !DILocation(line: 0, scope: !5148)
!5150 = !DILocation(line: 2203, column: 3, scope: !5148)
!5151 = !DILocation(line: 2204, column: 15, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 2204, column: 9)
!5153 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 2203, column: 3)
!5154 = !DILocation(line: 2204, column: 9, scope: !5152)
!5155 = !DILocation(line: 2204, column: 9, scope: !5153)
!5156 = !DILocation(line: 2205, column: 23, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 2205, column: 7)
!5158 = !DILocation(line: 2205, column: 12, scope: !5157)
!5159 = !DILocation(line: 0, scope: !5157)
!5160 = !DILocation(line: 2205, column: 7, scope: !5157)
!5161 = !DILocation(line: 2207, column: 35, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2207, column: 8)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2206, column: 2)
!5164 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 2205, column: 7)
!5165 = !DILocation(line: 2207, column: 8, scope: !5162)
!5166 = !DILocation(line: 2208, column: 32, scope: !5162)
!5167 = !DILocation(line: 2208, column: 11, scope: !5162)
!5168 = !DILocation(line: 2208, column: 8, scope: !5162)
!5169 = !DILocation(line: 2207, column: 8, scope: !5163)
!5170 = !DILocation(line: 2209, column: 40, scope: !5162)
!5171 = !DILocation(line: 2209, column: 6, scope: !5162)
!5172 = !DILocation(line: 2205, column: 45, scope: !5164)
!5173 = !DILocation(line: 2205, column: 7, scope: !5164)
!5174 = distinct !{!5174, !5160, !5175}
!5175 = !DILocation(line: 2210, column: 2, scope: !5157)
!5176 = !DILocation(line: 2203, column: 48, scope: !5153)
!5177 = !DILocation(line: 2203, column: 3, scope: !5153)
!5178 = distinct !{!5178, !5150, !5179}
!5179 = !DILocation(line: 2210, column: 2, scope: !5148)
!5180 = !DILocation(line: 2211, column: 1, scope: !5126)
!5181 = distinct !DISubprogram(name: "ipa_set_called_with_variable_arg", scope: !456, file: !456, line: 253, type: !3489, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5182)
!5182 = !{!5183}
!5183 = !DILocalVariable(name: "info", arg: 1, scope: !5181, file: !456, line: 253, type: !2050)
!5184 = !DILocation(line: 0, scope: !5181)
!5185 = !DILocation(line: 255, column: 9, scope: !5181)
!5186 = !DILocation(line: 255, column: 35, scope: !5181)
!5187 = !DILocation(line: 256, column: 1, scope: !5181)
!5188 = distinct !DISubprogram(name: "lto_ipa_fixup_call_notes", scope: !3, file: !3, line: 2218, type: !1870, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5189)
!5189 = !{!5190, !5191, !5192, !5193}
!5190 = !DILocalVariable(name: "node", arg: 1, scope: !5188, file: !3, line: 2218, type: !579)
!5191 = !DILocalVariable(name: "stmts", arg: 2, scope: !5188, file: !3, line: 2218, type: !1872)
!5192 = !DILocalVariable(name: "info", scope: !5188, file: !3, line: 2220, type: !2050)
!5193 = !DILocalVariable(name: "note", scope: !5188, file: !3, line: 2221, type: !2056)
!5194 = !DILocation(line: 0, scope: !5188)
!5195 = !DILocation(line: 2223, column: 3, scope: !5188)
!5196 = !DILocation(line: 2224, column: 10, scope: !5188)
!5197 = !DILocation(line: 2225, column: 16, scope: !5188)
!5198 = !DILocation(line: 2228, column: 8, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 2228, column: 7)
!5200 = !DILocation(line: 2228, column: 13, scope: !5199)
!5201 = !DILocation(line: 2228, column: 22, scope: !5199)
!5202 = !DILocation(line: 2228, column: 16, scope: !5199)
!5203 = !DILocation(line: 2228, column: 7, scope: !5188)
!5204 = !DILocation(line: 2231, column: 3, scope: !5188)
!5205 = !DILocation(line: 2233, column: 32, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 2232, column: 5)
!5207 = !DILocation(line: 2233, column: 20, scope: !5206)
!5208 = !DILocation(line: 2233, column: 13, scope: !5206)
!5209 = !DILocation(line: 2233, column: 18, scope: !5206)
!5210 = !DILocation(line: 2234, column: 20, scope: !5206)
!5211 = !DILocation(line: 2235, column: 5, scope: !5206)
!5212 = distinct !{!5212, !5204, !5213}
!5213 = !DILocation(line: 2236, column: 14, scope: !5188)
!5214 = !DILocation(line: 2237, column: 1, scope: !5188)
!5215 = distinct !DISubprogram(name: "ipa_set_param_count", scope: !456, file: !456, line: 216, type: !5216, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5218)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{null, !2050, !568}
!5218 = !{!5219, !5220}
!5219 = !DILocalVariable(name: "info", arg: 1, scope: !5215, file: !456, line: 216, type: !2050)
!5220 = !DILocalVariable(name: "count", arg: 2, scope: !5215, file: !456, line: 216, type: !568)
!5221 = !DILocation(line: 0, scope: !5215)
!5222 = !DILocation(line: 218, column: 9, scope: !5215)
!5223 = !DILocation(line: 218, column: 21, scope: !5215)
!5224 = !DILocation(line: 219, column: 1, scope: !5215)
!5225 = distinct !DISubprogram(name: "bb_seq", scope: !483, file: !483, line: 237, type: !5226, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5231)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{!868, !5228}
!5228 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !584, line: 112, baseType: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!5231 = !{!5232}
!5232 = !DILocalVariable(name: "bb", arg: 1, scope: !5225, file: !483, line: 237, type: !5228)
!5233 = !DILocation(line: 0, scope: !5225)
!5234 = !DILocation(line: 239, column: 17, scope: !5225)
!5235 = !DILocation(line: 239, column: 23, scope: !5225)
!5236 = !DILocation(line: 239, column: 33, scope: !5225)
!5237 = !DILocation(line: 239, column: 43, scope: !5225)
!5238 = !DILocation(line: 239, column: 36, scope: !5225)
!5239 = !DILocation(line: 239, column: 10, scope: !5225)
!5240 = !DILocation(line: 239, column: 68, scope: !5225)
!5241 = !DILocation(line: 239, column: 3, scope: !5225)
!5242 = distinct !DISubprogram(name: "gimple_seq_first", scope: !483, file: !483, line: 159, type: !5243, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5248)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!873, !5245}
!5245 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !584, line: 67, baseType: !5246)
!5246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5247, size: 64)
!5247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!5248 = !{!5249}
!5249 = !DILocalVariable(name: "s", arg: 1, scope: !5242, file: !483, line: 159, type: !5245)
!5250 = !DILocation(line: 0, scope: !5242)
!5251 = !DILocation(line: 161, column: 10, scope: !5242)
!5252 = !DILocation(line: 161, column: 17, scope: !5242)
!5253 = !DILocation(line: 161, column: 3, scope: !5242)
!5254 = distinct !DISubprogram(name: "ipa_get_param_decl_index", scope: !3, file: !3, line: 113, type: !5255, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5257)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{!568, !2050, !583}
!5257 = !{!5258, !5259, !5260, !5261}
!5258 = !DILocalVariable(name: "info", arg: 1, scope: !5254, file: !3, line: 113, type: !2050)
!5259 = !DILocalVariable(name: "ptree", arg: 2, scope: !5254, file: !3, line: 113, type: !583)
!5260 = !DILocalVariable(name: "i", scope: !5254, file: !3, line: 115, type: !568)
!5261 = !DILocalVariable(name: "count", scope: !5254, file: !3, line: 115, type: !568)
!5262 = !DILocation(line: 0, scope: !5254)
!5263 = !DILocation(line: 117, column: 11, scope: !5254)
!5264 = !DILocation(line: 118, column: 8, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 118, column: 3)
!5266 = !DILocation(line: 0, scope: !5265)
!5267 = !DILocation(line: 118, column: 17, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 118, column: 3)
!5269 = !DILocation(line: 118, column: 3, scope: !5265)
!5270 = !DILocation(line: 119, column: 9, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 119, column: 9)
!5272 = !DILocation(line: 119, column: 32, scope: !5271)
!5273 = !DILocation(line: 119, column: 9, scope: !5268)
!5274 = !DILocation(line: 118, column: 27, scope: !5268)
!5275 = !DILocation(line: 118, column: 3, scope: !5268)
!5276 = distinct !{!5276, !5269, !5277}
!5277 = !DILocation(line: 120, column: 14, scope: !5265)
!5278 = !DILocation(line: 123, column: 1, scope: !5254)
!5279 = distinct !DISubprogram(name: "gimple_code", scope: !483, file: !483, line: 1052, type: !5280, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5282)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{!482, !2932}
!5282 = !{!5283}
!5283 = !DILocalVariable(name: "g", arg: 1, scope: !5279, file: !483, line: 1052, type: !2932)
!5284 = !DILocation(line: 0, scope: !5279)
!5285 = !DILocation(line: 1054, column: 20, scope: !5279)
!5286 = !DILocation(line: 1054, column: 3, scope: !5279)
!5287 = distinct !DISubprogram(name: "gimple_num_ops", scope: !483, file: !483, line: 1596, type: !2940, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5288)
!5288 = !{!5289}
!5289 = !DILocalVariable(name: "gs", arg: 1, scope: !5287, file: !483, line: 1596, type: !2932)
!5290 = !DILocation(line: 0, scope: !5287)
!5291 = !DILocation(line: 1598, column: 21, scope: !5287)
!5292 = !DILocation(line: 1598, column: 3, scope: !5287)
!5293 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_gc_safe_grow", scope: !456, file: !456, line: 317, type: !2959, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5294)
!5294 = !{!5295, !5296}
!5295 = !DILocalVariable(name: "vec_", arg: 1, scope: !5293, file: !456, line: 317, type: !2961)
!5296 = !DILocalVariable(name: "size_", arg: 2, scope: !5293, file: !456, line: 317, type: !568)
!5297 = !DILocation(line: 0, scope: !5293)
!5298 = !DILocation(line: 317, column: 1, scope: !5293)
!5299 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_base_address", scope: !456, file: !456, line: 316, type: !5300, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!2982, !2983}
!5302 = !{!5303}
!5303 = !DILocalVariable(name: "vec_", arg: 1, scope: !5299, file: !456, line: 316, type: !2983)
!5304 = !DILocation(line: 0, scope: !5299)
!5305 = !DILocation(line: 316, column: 1, scope: !5299)
!5306 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_gc_reserve_exact", scope: !456, file: !456, line: 317, type: !5307, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5309)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!568, !2961, !568}
!5309 = !{!5310, !5311, !5312}
!5310 = !DILocalVariable(name: "vec_", arg: 1, scope: !5306, file: !456, line: 317, type: !2961)
!5311 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5306, file: !456, line: 317, type: !568)
!5312 = !DILocalVariable(name: "extend", scope: !5306, file: !456, line: 317, type: !568)
!5313 = !DILocation(line: 0, scope: !5306)
!5314 = !DILocation(line: 317, column: 1, scope: !5306)
!5315 = !DILocation(line: 317, column: 1, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5306, file: !456, line: 317, column: 1)
!5317 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_base_space", scope: !456, file: !456, line: 316, type: !5318, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5320)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!568, !2983, !568}
!5320 = !{!5321, !5322}
!5321 = !DILocalVariable(name: "vec_", arg: 1, scope: !5317, file: !456, line: 316, type: !2983)
!5322 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5317, file: !456, line: 316, type: !568)
!5323 = !DILocation(line: 0, scope: !5317)
!5324 = !DILocation(line: 316, column: 1, scope: !5317)
!5325 = distinct !DISubprogram(name: "compute_complex_pass_through", scope: !3, file: !3, line: 344, type: !5326, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5328)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{null, !2050, !2025, !583}
!5328 = !{!5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339}
!5329 = !DILocalVariable(name: "info", arg: 1, scope: !5325, file: !3, line: 344, type: !2050)
!5330 = !DILocalVariable(name: "jfunc", arg: 2, scope: !5325, file: !3, line: 345, type: !2025)
!5331 = !DILocalVariable(name: "name", arg: 3, scope: !5325, file: !3, line: 346, type: !583)
!5332 = !DILocalVariable(name: "offset", scope: !5325, file: !3, line: 348, type: !639)
!5333 = !DILocalVariable(name: "size", scope: !5325, file: !3, line: 348, type: !639)
!5334 = !DILocalVariable(name: "max_size", scope: !5325, file: !3, line: 348, type: !639)
!5335 = !DILocalVariable(name: "op1", scope: !5325, file: !3, line: 349, type: !583)
!5336 = !DILocalVariable(name: "op2", scope: !5325, file: !3, line: 349, type: !583)
!5337 = !DILocalVariable(name: "type", scope: !5325, file: !3, line: 349, type: !583)
!5338 = !DILocalVariable(name: "index", scope: !5325, file: !3, line: 350, type: !568)
!5339 = !DILocalVariable(name: "stmt", scope: !5325, file: !3, line: 351, type: !878)
!5340 = !DILocation(line: 0, scope: !5325)
!5341 = !DILocation(line: 348, column: 3, scope: !5325)
!5342 = !DILocation(line: 351, column: 17, scope: !5325)
!5343 = !DILocation(line: 353, column: 8, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 353, column: 7)
!5345 = !DILocation(line: 353, column: 7, scope: !5325)
!5346 = !DILocation(line: 355, column: 9, scope: !5325)
!5347 = !DILocation(line: 356, column: 9, scope: !5325)
!5348 = !DILocation(line: 358, column: 7, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 358, column: 7)
!5350 = !DILocation(line: 358, column: 7, scope: !5325)
!5351 = !DILocation(line: 360, column: 27, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 360, column: 11)
!5353 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 359, column: 5)
!5354 = !DILocation(line: 361, column: 4, scope: !5352)
!5355 = !DILocation(line: 361, column: 8, scope: !5352)
!5356 = !DILocation(line: 362, column: 4, scope: !5352)
!5357 = !DILocation(line: 362, column: 8, scope: !5352)
!5358 = !DILocation(line: 362, column: 50, scope: !5352)
!5359 = !DILocation(line: 363, column: 8, scope: !5352)
!5360 = !DILocation(line: 363, column: 39, scope: !5352)
!5361 = !DILocation(line: 364, column: 11, scope: !5352)
!5362 = !DILocation(line: 363, column: 12, scope: !5352)
!5363 = !DILocation(line: 365, column: 4, scope: !5352)
!5364 = !DILocation(line: 365, column: 8, scope: !5352)
!5365 = !DILocation(line: 360, column: 11, scope: !5353)
!5366 = !DILocation(line: 368, column: 47, scope: !5353)
!5367 = !DILocation(line: 368, column: 15, scope: !5353)
!5368 = !DILocation(line: 369, column: 17, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 369, column: 11)
!5370 = !DILocation(line: 369, column: 11, scope: !5353)
!5371 = !DILocation(line: 371, column: 11, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 370, column: 2)
!5373 = !DILocation(line: 371, column: 16, scope: !5372)
!5374 = !DILocation(line: 372, column: 30, scope: !5372)
!5375 = !DILocation(line: 372, column: 40, scope: !5372)
!5376 = !DILocation(line: 373, column: 42, scope: !5372)
!5377 = !DILocation(line: 373, column: 11, scope: !5372)
!5378 = !DILocation(line: 373, column: 17, scope: !5372)
!5379 = !DILocation(line: 373, column: 30, scope: !5372)
!5380 = !DILocation(line: 373, column: 40, scope: !5372)
!5381 = !DILocation(line: 374, column: 30, scope: !5372)
!5382 = !DILocation(line: 374, column: 38, scope: !5372)
!5383 = !DILocation(line: 375, column: 2, scope: !5372)
!5384 = !DILocation(line: 379, column: 23, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 379, column: 7)
!5386 = !DILocation(line: 379, column: 7, scope: !5325)
!5387 = !DILocation(line: 381, column: 9, scope: !5325)
!5388 = !DILocation(line: 382, column: 10, scope: !5325)
!5389 = !DILocation(line: 384, column: 9, scope: !5325)
!5390 = !DILocation(line: 385, column: 7, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 385, column: 7)
!5392 = !DILocation(line: 385, column: 23, scope: !5391)
!5393 = !DILocation(line: 387, column: 10, scope: !5391)
!5394 = !DILocation(line: 387, column: 19, scope: !5391)
!5395 = !DILocation(line: 387, column: 7, scope: !5391)
!5396 = !DILocation(line: 388, column: 22, scope: !5391)
!5397 = !DILocation(line: 388, column: 19, scope: !5391)
!5398 = !DILocation(line: 385, column: 7, scope: !5325)
!5399 = !DILocation(line: 390, column: 9, scope: !5325)
!5400 = !DILocation(line: 391, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 391, column: 7)
!5402 = !DILocation(line: 391, column: 23, scope: !5401)
!5403 = !DILocation(line: 392, column: 7, scope: !5401)
!5404 = !DILocation(line: 392, column: 11, scope: !5401)
!5405 = !DILocation(line: 391, column: 7, scope: !5325)
!5406 = !DILocation(line: 395, column: 43, scope: !5325)
!5407 = !DILocation(line: 395, column: 11, scope: !5325)
!5408 = !DILocation(line: 396, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 396, column: 7)
!5410 = !DILocation(line: 396, column: 7, scope: !5325)
!5411 = !DILocation(line: 398, column: 14, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 397, column: 5)
!5413 = !DILocation(line: 398, column: 19, scope: !5412)
!5414 = !DILocation(line: 399, column: 29, scope: !5412)
!5415 = !DILocation(line: 399, column: 39, scope: !5412)
!5416 = !DILocation(line: 400, column: 38, scope: !5412)
!5417 = !DILocation(line: 400, column: 29, scope: !5412)
!5418 = !DILocation(line: 400, column: 36, scope: !5412)
!5419 = !DILocation(line: 401, column: 29, scope: !5412)
!5420 = !DILocation(line: 401, column: 34, scope: !5412)
!5421 = !DILocation(line: 402, column: 5, scope: !5412)
!5422 = !DILocation(line: 403, column: 1, scope: !5325)
!5423 = distinct !DISubprogram(name: "is_gimple_assign", scope: !483, file: !483, line: 1677, type: !2930, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5424)
!5424 = !{!5425}
!5425 = !DILocalVariable(name: "gs", arg: 1, scope: !5423, file: !483, line: 1677, type: !2932)
!5426 = !DILocation(line: 0, scope: !5423)
!5427 = !DILocation(line: 1679, column: 10, scope: !5423)
!5428 = !DILocation(line: 1679, column: 27, scope: !5423)
!5429 = !DILocation(line: 1679, column: 3, scope: !5423)
!5430 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !483, file: !483, line: 1727, type: !4307, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5431)
!5431 = !{!5432}
!5432 = !DILocalVariable(name: "gs", arg: 1, scope: !5430, file: !483, line: 1727, type: !2932)
!5433 = !DILocation(line: 0, scope: !5430)
!5434 = !DILocation(line: 1730, column: 10, scope: !5430)
!5435 = !DILocation(line: 1730, column: 3, scope: !5430)
!5436 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !483, file: !483, line: 1759, type: !4307, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5437)
!5437 = !{!5438}
!5438 = !DILocalVariable(name: "gs", arg: 1, scope: !5436, file: !483, line: 1759, type: !2932)
!5439 = !DILocation(line: 0, scope: !5436)
!5440 = !DILocation(line: 1763, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !483, line: 1763, column: 7)
!5442 = !DILocation(line: 1763, column: 27, scope: !5441)
!5443 = !DILocation(line: 1763, column: 7, scope: !5436)
!5444 = !DILocation(line: 1764, column: 12, scope: !5441)
!5445 = !DILocation(line: 1764, column: 5, scope: !5441)
!5446 = !DILocation(line: 0, scope: !5441)
!5447 = !DILocation(line: 1767, column: 1, scope: !5436)
!5448 = distinct !DISubprogram(name: "gimple_expr_code", scope: !483, file: !483, line: 1438, type: !5449, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5451)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!5, !2932}
!5451 = !{!5452, !5453}
!5452 = !DILocalVariable(name: "stmt", arg: 1, scope: !5448, file: !483, line: 1438, type: !2932)
!5453 = !DILocalVariable(name: "code", scope: !5448, file: !483, line: 1440, type: !482)
!5454 = !DILocation(line: 0, scope: !5448)
!5455 = !DILocation(line: 1440, column: 27, scope: !5448)
!5456 = !DILocation(line: 1441, column: 29, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5448, file: !483, line: 1441, column: 7)
!5458 = !DILocation(line: 1442, column: 42, scope: !5457)
!5459 = !DILocation(line: 1442, column: 5, scope: !5457)
!5460 = !DILocation(line: 1446, column: 5, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !483, line: 1443, column: 12)
!5462 = !DILocation(line: 1448, column: 5, scope: !5448)
!5463 = !DILocation(line: 1450, column: 1, scope: !5448)
!5464 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !483, file: !483, line: 1815, type: !5449, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5465)
!5465 = !{!5466, !5467}
!5466 = !DILocalVariable(name: "gs", arg: 1, scope: !5464, file: !483, line: 1815, type: !2932)
!5467 = !DILocalVariable(name: "code", scope: !5464, file: !483, line: 1817, type: !5)
!5468 = !DILocation(line: 0, scope: !5464)
!5469 = !DILocation(line: 1820, column: 10, scope: !5464)
!5470 = !DILocation(line: 1821, column: 7, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5464, file: !483, line: 1821, column: 7)
!5472 = !DILocation(line: 1821, column: 35, scope: !5471)
!5473 = !DILocation(line: 1821, column: 7, scope: !5464)
!5474 = !DILocation(line: 1822, column: 12, scope: !5471)
!5475 = !DILocation(line: 1822, column: 5, scope: !5471)
!5476 = !DILocation(line: 1824, column: 3, scope: !5464)
!5477 = distinct !DISubprogram(name: "gimple_op", scope: !483, file: !483, line: 1631, type: !4297, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5478)
!5478 = !{!5479, !5480}
!5479 = !DILocalVariable(name: "gs", arg: 1, scope: !5477, file: !483, line: 1631, type: !2932)
!5480 = !DILocalVariable(name: "i", arg: 2, scope: !5477, file: !483, line: 1631, type: !7)
!5481 = !DILocation(line: 0, scope: !5477)
!5482 = !DILocation(line: 1633, column: 7, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5477, file: !483, line: 1633, column: 7)
!5484 = !DILocation(line: 1633, column: 7, scope: !5477)
!5485 = !DILocation(line: 1638, column: 14, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5483, file: !483, line: 1634, column: 5)
!5487 = !DILocation(line: 1638, column: 7, scope: !5486)
!5488 = !DILocation(line: 0, scope: !5483)
!5489 = !DILocation(line: 1642, column: 1, scope: !5477)
!5490 = distinct !DISubprogram(name: "gimple_has_ops", scope: !483, file: !483, line: 1274, type: !2930, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5491)
!5491 = !{!5492}
!5492 = !DILocalVariable(name: "g", arg: 1, scope: !5490, file: !483, line: 1274, type: !2932)
!5493 = !DILocation(line: 0, scope: !5490)
!5494 = !DILocation(line: 1276, column: 10, scope: !5490)
!5495 = !DILocation(line: 1276, column: 26, scope: !5490)
!5496 = !DILocation(line: 1276, column: 41, scope: !5490)
!5497 = !DILocation(line: 1276, column: 44, scope: !5490)
!5498 = !DILocation(line: 1276, column: 60, scope: !5490)
!5499 = !DILocation(line: 1276, column: 3, scope: !5490)
!5500 = distinct !DISubprogram(name: "gimple_ops", scope: !483, file: !483, line: 1614, type: !5501, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!913, !878}
!5503 = !{!5504, !5505}
!5504 = !DILocalVariable(name: "gs", arg: 1, scope: !5500, file: !483, line: 1614, type: !878)
!5505 = !DILocalVariable(name: "off", scope: !5500, file: !483, line: 1616, type: !1024)
!5506 = !DILocation(line: 0, scope: !5500)
!5507 = !DILocation(line: 1621, column: 28, scope: !5500)
!5508 = !DILocation(line: 1621, column: 9, scope: !5500)
!5509 = !DILocation(line: 1622, column: 3, scope: !5500)
!5510 = !DILocation(line: 1624, column: 20, scope: !5500)
!5511 = !DILocation(line: 1624, column: 32, scope: !5500)
!5512 = !DILocation(line: 1624, column: 10, scope: !5500)
!5513 = !DILocation(line: 1624, column: 3, scope: !5500)
!5514 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !483, file: !483, line: 1073, type: !5515, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5517)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!521, !878}
!5517 = !{!5518}
!5518 = !DILocalVariable(name: "gs", arg: 1, scope: !5514, file: !483, line: 1073, type: !878)
!5519 = !DILocation(line: 0, scope: !5514)
!5520 = !DILocation(line: 1075, column: 24, scope: !5514)
!5521 = !DILocation(line: 1075, column: 10, scope: !5514)
!5522 = !DILocation(line: 1075, column: 3, scope: !5514)
!5523 = distinct !DISubprogram(name: "gss_for_code", scope: !483, file: !483, line: 1061, type: !5524, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!521, !482}
!5526 = !{!5527}
!5527 = !DILocalVariable(name: "code", arg: 1, scope: !5523, file: !483, line: 1061, type: !482)
!5528 = !DILocation(line: 0, scope: !5523)
!5529 = !DILocation(line: 1066, column: 10, scope: !5523)
!5530 = !DILocation(line: 1066, column: 3, scope: !5523)
!5531 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !483, file: !483, line: 1686, type: !5532, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5534)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!547, !5}
!5534 = !{!5535}
!5535 = !DILocalVariable(name: "code", arg: 1, scope: !5531, file: !483, line: 1686, type: !5)
!5536 = !DILocation(line: 0, scope: !5531)
!5537 = !DILocation(line: 1688, column: 34, scope: !5531)
!5538 = !DILocation(line: 1688, column: 10, scope: !5531)
!5539 = !DILocation(line: 1688, column: 3, scope: !5531)
!5540 = distinct !DISubprogram(name: "type_like_member_ptr_p", scope: !3, file: !3, line: 454, type: !5541, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5543)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{!567, !583, !913, !913}
!5543 = !{!5544, !5545, !5546, !5547}
!5544 = !DILocalVariable(name: "type", arg: 1, scope: !5540, file: !3, line: 454, type: !583)
!5545 = !DILocalVariable(name: "method_ptr", arg: 2, scope: !5540, file: !3, line: 454, type: !913)
!5546 = !DILocalVariable(name: "delta", arg: 3, scope: !5540, file: !3, line: 454, type: !913)
!5547 = !DILocalVariable(name: "fld", scope: !5540, file: !3, line: 456, type: !583)
!5548 = !DILocation(line: 0, scope: !5540)
!5549 = !DILocation(line: 458, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 458, column: 7)
!5551 = !DILocation(line: 458, column: 24, scope: !5550)
!5552 = !DILocation(line: 458, column: 7, scope: !5540)
!5553 = !DILocation(line: 461, column: 9, scope: !5540)
!5554 = !DILocation(line: 462, column: 8, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 462, column: 7)
!5556 = !DILocation(line: 462, column: 12, scope: !5555)
!5557 = !DILocation(line: 462, column: 16, scope: !5555)
!5558 = !DILocation(line: 463, column: 7, scope: !5555)
!5559 = !DILocation(line: 463, column: 10, scope: !5555)
!5560 = !DILocation(line: 463, column: 50, scope: !5555)
!5561 = !DILocation(line: 462, column: 7, scope: !5540)
!5562 = !DILocation(line: 466, column: 7, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 466, column: 7)
!5564 = !DILocation(line: 466, column: 7, scope: !5540)
!5565 = !DILocation(line: 467, column: 17, scope: !5563)
!5566 = !DILocation(line: 467, column: 5, scope: !5563)
!5567 = !DILocation(line: 469, column: 9, scope: !5540)
!5568 = !DILocation(line: 470, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 470, column: 7)
!5570 = !DILocation(line: 470, column: 12, scope: !5569)
!5571 = !DILocation(line: 470, column: 15, scope: !5569)
!5572 = !DILocation(line: 470, column: 7, scope: !5540)
!5573 = !DILocation(line: 472, column: 7, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 472, column: 7)
!5575 = !DILocation(line: 472, column: 7, scope: !5540)
!5576 = !DILocation(line: 473, column: 12, scope: !5574)
!5577 = !DILocation(line: 473, column: 5, scope: !5574)
!5578 = !DILocation(line: 475, column: 7, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 475, column: 7)
!5580 = !DILocation(line: 479, column: 1, scope: !5540)
!5581 = distinct !DISubprogram(name: "determine_cst_member_ptr", scope: !3, file: !3, line: 565, type: !5582, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{null, !878, !583, !583, !583, !2025}
!5584 = !{!5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5597, !5598, !5599}
!5585 = !DILocalVariable(name: "call", arg: 1, scope: !5581, file: !3, line: 565, type: !878)
!5586 = !DILocalVariable(name: "arg", arg: 2, scope: !5581, file: !3, line: 565, type: !583)
!5587 = !DILocalVariable(name: "method_field", arg: 3, scope: !5581, file: !3, line: 565, type: !583)
!5588 = !DILocalVariable(name: "delta_field", arg: 4, scope: !5581, file: !3, line: 566, type: !583)
!5589 = !DILocalVariable(name: "jfunc", arg: 5, scope: !5581, file: !3, line: 566, type: !2025)
!5590 = !DILocalVariable(name: "gsi", scope: !5581, file: !3, line: 568, type: !2793)
!5591 = !DILocalVariable(name: "method", scope: !5581, file: !3, line: 569, type: !583)
!5592 = !DILocalVariable(name: "delta", scope: !5581, file: !3, line: 570, type: !583)
!5593 = !DILocalVariable(name: "stmt", scope: !5594, file: !3, line: 577, type: !878)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 576, column: 5)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 575, column: 3)
!5596 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 575, column: 3)
!5597 = !DILocalVariable(name: "lhs", scope: !5594, file: !3, line: 578, type: !583)
!5598 = !DILocalVariable(name: "rhs", scope: !5594, file: !3, line: 578, type: !583)
!5599 = !DILocalVariable(name: "fld", scope: !5594, file: !3, line: 578, type: !583)
!5600 = !DILocation(line: 0, scope: !5581)
!5601 = !DILocation(line: 568, column: 3, scope: !5581)
!5602 = !DILocation(line: 572, column: 9, scope: !5581)
!5603 = !DILocation(line: 574, column: 3, scope: !5581)
!5604 = !DILocation(line: 575, column: 3, scope: !5581)
!5605 = !DILocation(line: 569, column: 8, scope: !5581)
!5606 = !DILocation(line: 570, column: 8, scope: !5581)
!5607 = !DILocation(line: 575, column: 11, scope: !5595)
!5608 = !DILocation(line: 575, column: 10, scope: !5595)
!5609 = !DILocation(line: 575, column: 3, scope: !5596)
!5610 = !DILocation(line: 577, column: 21, scope: !5594)
!5611 = !DILocation(line: 0, scope: !5594)
!5612 = !DILocation(line: 580, column: 12, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 580, column: 11)
!5614 = !DILocation(line: 580, column: 11, scope: !5594)
!5615 = !DILocation(line: 583, column: 13, scope: !5594)
!5616 = !DILocation(line: 584, column: 13, scope: !5594)
!5617 = !DILocation(line: 586, column: 11, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 586, column: 11)
!5619 = !DILocation(line: 586, column: 27, scope: !5618)
!5620 = !DILocation(line: 587, column: 4, scope: !5618)
!5621 = !DILocation(line: 587, column: 7, scope: !5618)
!5622 = !DILocation(line: 587, column: 29, scope: !5618)
!5623 = !DILocation(line: 586, column: 11, scope: !5594)
!5624 = !DILocation(line: 590, column: 13, scope: !5594)
!5625 = !DILocation(line: 591, column: 12, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 591, column: 11)
!5627 = !DILocation(line: 591, column: 26, scope: !5626)
!5628 = !DILocation(line: 591, column: 19, scope: !5626)
!5629 = !DILocation(line: 593, column: 10, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 592, column: 2)
!5631 = !DILocation(line: 594, column: 8, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 594, column: 8)
!5633 = !DILocation(line: 594, column: 24, scope: !5632)
!5634 = !DILocation(line: 595, column: 8, scope: !5632)
!5635 = !DILocation(line: 595, column: 11, scope: !5632)
!5636 = !DILocation(line: 595, column: 45, scope: !5632)
!5637 = !DILocation(line: 596, column: 8, scope: !5632)
!5638 = !DILocation(line: 596, column: 11, scope: !5632)
!5639 = !DILocation(line: 596, column: 57, scope: !5632)
!5640 = !DILocation(line: 594, column: 8, scope: !5630)
!5641 = !DILocation(line: 599, column: 12, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 599, column: 12)
!5643 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 597, column: 6)
!5644 = !DILocation(line: 599, column: 12, scope: !5643)
!5645 = !DILocation(line: 601, column: 5, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 600, column: 3)
!5647 = !DILocation(line: 602, column: 5, scope: !5646)
!5648 = !DILocation(line: 609, column: 12, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 609, column: 11)
!5650 = !DILocation(line: 609, column: 25, scope: !5649)
!5651 = !DILocation(line: 609, column: 18, scope: !5649)
!5652 = !DILocation(line: 611, column: 10, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 610, column: 2)
!5654 = !DILocation(line: 612, column: 8, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 612, column: 8)
!5656 = !DILocation(line: 612, column: 24, scope: !5655)
!5657 = !DILocation(line: 612, column: 8, scope: !5653)
!5658 = !DILocation(line: 615, column: 12, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 615, column: 12)
!5660 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 613, column: 6)
!5661 = !DILocation(line: 615, column: 12, scope: !5660)
!5662 = !DILocation(line: 617, column: 5, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 616, column: 3)
!5664 = !DILocation(line: 618, column: 5, scope: !5663)
!5665 = !DILocation(line: 575, column: 28, scope: !5595)
!5666 = !DILocation(line: 575, column: 3, scope: !5595)
!5667 = distinct !{!5667, !5609, !5668}
!5668 = !DILocation(line: 624, column: 5, scope: !5596)
!5669 = !DILocation(line: 627, column: 1, scope: !5581)
!5670 = distinct !DISubprogram(name: "gsi_prev", scope: !483, file: !483, line: 4493, type: !2899, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5671)
!5671 = !{!5672}
!5672 = !DILocalVariable(name: "i", arg: 1, scope: !5670, file: !483, line: 4493, type: !2901)
!5673 = !DILocation(line: 0, scope: !5670)
!5674 = !DILocation(line: 4495, column: 15, scope: !5670)
!5675 = !DILocation(line: 4495, column: 20, scope: !5670)
!5676 = !DILocation(line: 4495, column: 10, scope: !5670)
!5677 = !DILocation(line: 4496, column: 1, scope: !5670)
!5678 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !483, file: !483, line: 1694, type: !4307, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5679)
!5679 = !{!5680}
!5680 = !DILocalVariable(name: "gs", arg: 1, scope: !5678, file: !483, line: 1694, type: !2932)
!5681 = !DILocation(line: 0, scope: !5678)
!5682 = !DILocation(line: 1697, column: 10, scope: !5678)
!5683 = !DILocation(line: 1697, column: 3, scope: !5678)
!5684 = distinct !DISubprogram(name: "get_ssa_def_if_simple_copy", scope: !3, file: !3, line: 540, type: !5685, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5687)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!583, !583}
!5687 = !{!5688, !5689}
!5688 = !DILocalVariable(name: "rhs", arg: 1, scope: !5684, file: !3, line: 540, type: !583)
!5689 = !DILocalVariable(name: "def_stmt", scope: !5690, file: !3, line: 544, type: !878)
!5690 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 543, column: 5)
!5691 = !DILocation(line: 0, scope: !5684)
!5692 = !DILocation(line: 542, column: 3, scope: !5684)
!5693 = !DILocation(line: 542, column: 10, scope: !5684)
!5694 = !DILocation(line: 542, column: 26, scope: !5684)
!5695 = !DILocation(line: 542, column: 38, scope: !5684)
!5696 = !DILocation(line: 542, column: 41, scope: !5684)
!5697 = !DILocation(line: 544, column: 25, scope: !5690)
!5698 = !DILocation(line: 0, scope: !5690)
!5699 = !DILocation(line: 546, column: 11, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 546, column: 11)
!5701 = !DILocation(line: 546, column: 11, scope: !5690)
!5702 = !DILocation(line: 547, column: 8, scope: !5700)
!5703 = !DILocation(line: 550, column: 5, scope: !5684)
!5704 = distinct !{!5704, !5692, !5703}
!5705 = !DILocation(line: 551, column: 3, scope: !5684)
!5706 = distinct !DISubprogram(name: "fill_member_ptr_cst_jump_function", scope: !3, file: !3, line: 528, type: !5707, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5709)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{null, !2025, !583, !583}
!5709 = !{!5710, !5711, !5712}
!5710 = !DILocalVariable(name: "jfunc", arg: 1, scope: !5706, file: !3, line: 528, type: !2025)
!5711 = !DILocalVariable(name: "pfn", arg: 2, scope: !5706, file: !3, line: 529, type: !583)
!5712 = !DILocalVariable(name: "delta", arg: 3, scope: !5706, file: !3, line: 529, type: !583)
!5713 = !DILocation(line: 0, scope: !5706)
!5714 = !DILocation(line: 531, column: 10, scope: !5706)
!5715 = !DILocation(line: 531, column: 15, scope: !5706)
!5716 = !DILocation(line: 532, column: 10, scope: !5706)
!5717 = !DILocation(line: 532, column: 27, scope: !5706)
!5718 = !DILocation(line: 532, column: 31, scope: !5706)
!5719 = !DILocation(line: 533, column: 27, scope: !5706)
!5720 = !DILocation(line: 533, column: 33, scope: !5706)
!5721 = !DILocation(line: 534, column: 1, scope: !5706)
!5722 = distinct !DISubprogram(name: "ipa_analyze_call_uses", scope: !3, file: !3, line: 811, type: !3366, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5723)
!5723 = !{!5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740}
!5724 = !DILocalVariable(name: "info", arg: 1, scope: !5722, file: !3, line: 811, type: !2050)
!5725 = !DILocalVariable(name: "call", arg: 2, scope: !5722, file: !3, line: 811, type: !878)
!5726 = !DILocalVariable(name: "target", scope: !5722, file: !3, line: 813, type: !583)
!5727 = !DILocalVariable(name: "def", scope: !5722, file: !3, line: 814, type: !878)
!5728 = !DILocalVariable(name: "var", scope: !5722, file: !3, line: 815, type: !583)
!5729 = !DILocalVariable(name: "n1", scope: !5722, file: !3, line: 816, type: !583)
!5730 = !DILocalVariable(name: "n2", scope: !5722, file: !3, line: 816, type: !583)
!5731 = !DILocalVariable(name: "d1", scope: !5722, file: !3, line: 817, type: !878)
!5732 = !DILocalVariable(name: "d2", scope: !5722, file: !3, line: 817, type: !878)
!5733 = !DILocalVariable(name: "rec", scope: !5722, file: !3, line: 818, type: !583)
!5734 = !DILocalVariable(name: "rec2", scope: !5722, file: !3, line: 818, type: !583)
!5735 = !DILocalVariable(name: "cond", scope: !5722, file: !3, line: 818, type: !583)
!5736 = !DILocalVariable(name: "branch", scope: !5722, file: !3, line: 819, type: !878)
!5737 = !DILocalVariable(name: "index", scope: !5722, file: !3, line: 820, type: !568)
!5738 = !DILocalVariable(name: "bb", scope: !5722, file: !3, line: 821, type: !841)
!5739 = !DILocalVariable(name: "virt_bb", scope: !5722, file: !3, line: 821, type: !841)
!5740 = !DILocalVariable(name: "join", scope: !5722, file: !3, line: 821, type: !841)
!5741 = !DILocation(line: 0, scope: !5722)
!5742 = !DILocation(line: 813, column: 17, scope: !5722)
!5743 = !DILocation(line: 823, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 823, column: 7)
!5745 = !DILocation(line: 823, column: 26, scope: !5744)
!5746 = !DILocation(line: 823, column: 7, scope: !5722)
!5747 = !DILocation(line: 827, column: 7, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 827, column: 7)
!5749 = !DILocation(line: 827, column: 7, scope: !5722)
!5750 = !DILocation(line: 826, column: 9, scope: !5722)
!5751 = !DILocation(line: 830, column: 15, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 828, column: 5)
!5753 = !DILocation(line: 831, column: 17, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 831, column: 11)
!5755 = !DILocation(line: 831, column: 11, scope: !5752)
!5756 = !DILocation(line: 832, column: 2, scope: !5754)
!5757 = !DILocation(line: 839, column: 8, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 839, column: 7)
!5759 = !DILocation(line: 840, column: 7, scope: !5758)
!5760 = !DILocation(line: 840, column: 10, scope: !5758)
!5761 = !DILocation(line: 840, column: 53, scope: !5758)
!5762 = !DILocation(line: 839, column: 7, scope: !5722)
!5763 = !DILocation(line: 843, column: 9, scope: !5722)
!5764 = !DILocation(line: 844, column: 7, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 844, column: 7)
!5766 = !DILocation(line: 844, column: 25, scope: !5765)
!5767 = !DILocation(line: 844, column: 7, scope: !5722)
!5768 = !DILocation(line: 847, column: 7, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 847, column: 7)
!5770 = !DILocation(line: 847, column: 33, scope: !5769)
!5771 = !DILocation(line: 847, column: 7, scope: !5722)
!5772 = !DILocation(line: 852, column: 8, scope: !5722)
!5773 = !DILocation(line: 853, column: 8, scope: !5722)
!5774 = !DILocation(line: 854, column: 8, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 854, column: 7)
!5776 = !DILocation(line: 854, column: 38, scope: !5775)
!5777 = !DILocation(line: 854, column: 42, scope: !5775)
!5778 = !DILocation(line: 854, column: 7, scope: !5722)
!5779 = !DILocation(line: 856, column: 8, scope: !5722)
!5780 = !DILocation(line: 857, column: 8, scope: !5722)
!5781 = !DILocation(line: 859, column: 14, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 859, column: 7)
!5783 = !DILocation(line: 859, column: 12, scope: !5782)
!5784 = !DILocation(line: 0, scope: !5782)
!5785 = !DILocation(line: 859, column: 7, scope: !5722)
!5786 = !DILocation(line: 861, column: 11, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 860, column: 5)
!5788 = !DILocation(line: 864, column: 12, scope: !5787)
!5789 = !DILocation(line: 865, column: 17, scope: !5787)
!5790 = !DILocation(line: 866, column: 5, scope: !5787)
!5791 = !DILocation(line: 867, column: 12, scope: !5782)
!5792 = !DILocation(line: 869, column: 12, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 868, column: 5)
!5794 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 867, column: 12)
!5795 = !DILocation(line: 870, column: 17, scope: !5793)
!5796 = !DILocation(line: 878, column: 10, scope: !5722)
!5797 = !DILocation(line: 879, column: 8, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 879, column: 7)
!5799 = !DILocation(line: 879, column: 32, scope: !5798)
!5800 = !DILocation(line: 879, column: 36, scope: !5798)
!5801 = !DILocation(line: 880, column: 7, scope: !5798)
!5802 = !DILocation(line: 880, column: 10, scope: !5798)
!5803 = !DILocation(line: 880, column: 32, scope: !5798)
!5804 = !DILocation(line: 881, column: 7, scope: !5798)
!5805 = !DILocation(line: 881, column: 10, scope: !5798)
!5806 = !DILocation(line: 881, column: 32, scope: !5798)
!5807 = !DILocation(line: 879, column: 7, scope: !5722)
!5808 = !DILocation(line: 887, column: 12, scope: !5722)
!5809 = !DILocation(line: 888, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 888, column: 7)
!5811 = !DILocation(line: 888, column: 28, scope: !5810)
!5812 = !DILocation(line: 888, column: 7, scope: !5722)
!5813 = !DILocation(line: 891, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 891, column: 7)
!5815 = !DILocation(line: 891, column: 33, scope: !5814)
!5816 = !DILocation(line: 892, column: 7, scope: !5814)
!5817 = !DILocation(line: 892, column: 26, scope: !5814)
!5818 = !DILocation(line: 892, column: 11, scope: !5814)
!5819 = !DILocation(line: 891, column: 7, scope: !5722)
!5820 = !DILocation(line: 895, column: 10, scope: !5722)
!5821 = !DILocation(line: 896, column: 8, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 896, column: 7)
!5823 = !DILocation(line: 896, column: 7, scope: !5722)
!5824 = !DILocation(line: 899, column: 9, scope: !5722)
!5825 = !DILocation(line: 900, column: 8, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 900, column: 7)
!5827 = !DILocation(line: 901, column: 7, scope: !5826)
!5828 = !DILocation(line: 901, column: 10, scope: !5826)
!5829 = !DILocation(line: 901, column: 39, scope: !5826)
!5830 = !DILocation(line: 902, column: 7, scope: !5826)
!5831 = !DILocation(line: 902, column: 25, scope: !5826)
!5832 = !DILocation(line: 902, column: 11, scope: !5826)
!5833 = !DILocation(line: 900, column: 7, scope: !5722)
!5834 = !DILocation(line: 905, column: 10, scope: !5722)
!5835 = !DILocation(line: 906, column: 8, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 906, column: 7)
!5837 = !DILocation(line: 906, column: 7, scope: !5722)
!5838 = !DILocation(line: 909, column: 9, scope: !5722)
!5839 = !DILocation(line: 911, column: 7, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 911, column: 7)
!5841 = !DILocation(line: 912, column: 7, scope: !5840)
!5842 = !DILocation(line: 912, column: 10, scope: !5840)
!5843 = !DILocation(line: 911, column: 7, scope: !5722)
!5844 = !DILocation(line: 914, column: 14, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 913, column: 5)
!5846 = !DILocation(line: 915, column: 12, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 915, column: 11)
!5848 = !DILocation(line: 915, column: 11, scope: !5845)
!5849 = !DILocation(line: 917, column: 13, scope: !5845)
!5850 = !DILocation(line: 918, column: 5, scope: !5845)
!5851 = !DILocation(line: 920, column: 10, scope: !5722)
!5852 = !DILocation(line: 924, column: 11, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 924, column: 7)
!5854 = !DILocation(line: 924, column: 7, scope: !5722)
!5855 = !DILocation(line: 927, column: 11, scope: !5722)
!5856 = !DILocation(line: 928, column: 13, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 928, column: 7)
!5858 = !DILocation(line: 928, column: 18, scope: !5857)
!5859 = !DILocation(line: 928, column: 22, scope: !5857)
!5860 = !DILocation(line: 928, column: 7, scope: !5722)
!5861 = !DILocation(line: 929, column: 5, scope: !5857)
!5862 = !DILocation(line: 932, column: 1, scope: !5722)
!5863 = distinct !DISubprogram(name: "gimple_call_fn", scope: !483, file: !483, line: 1911, type: !4307, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5864)
!5864 = !{!5865}
!5865 = !DILocalVariable(name: "gs", arg: 1, scope: !5863, file: !483, line: 1911, type: !2932)
!5866 = !DILocation(line: 0, scope: !5863)
!5867 = !DILocation(line: 1914, column: 10, scope: !5863)
!5868 = !DILocation(line: 1914, column: 3, scope: !5863)
!5869 = distinct !DISubprogram(name: "ipa_note_param_call", scope: !3, file: !3, line: 744, type: !5870, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5872)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{null, !2050, !568, !878}
!5872 = !{!5873, !5874, !5875, !5876, !5877}
!5873 = !DILocalVariable(name: "info", arg: 1, scope: !5869, file: !3, line: 744, type: !2050)
!5874 = !DILocalVariable(name: "formal_id", arg: 2, scope: !5869, file: !3, line: 744, type: !568)
!5875 = !DILocalVariable(name: "stmt", arg: 3, scope: !5869, file: !3, line: 745, type: !878)
!5876 = !DILocalVariable(name: "note", scope: !5869, file: !3, line: 747, type: !2056)
!5877 = !DILocalVariable(name: "bb", scope: !5869, file: !3, line: 748, type: !841)
!5878 = !DILocation(line: 0, scope: !5869)
!5879 = !DILocation(line: 748, column: 20, scope: !5869)
!5880 = !DILocation(line: 750, column: 10, scope: !5869)
!5881 = !DILocation(line: 751, column: 9, scope: !5869)
!5882 = !DILocation(line: 751, column: 19, scope: !5869)
!5883 = !DILocation(line: 752, column: 9, scope: !5869)
!5884 = !DILocation(line: 752, column: 14, scope: !5869)
!5885 = !DILocation(line: 753, column: 24, scope: !5869)
!5886 = !DILocation(line: 753, column: 9, scope: !5869)
!5887 = !DILocation(line: 753, column: 22, scope: !5869)
!5888 = !DILocation(line: 754, column: 21, scope: !5869)
!5889 = !DILocation(line: 754, column: 9, scope: !5869)
!5890 = !DILocation(line: 754, column: 15, scope: !5869)
!5891 = !DILocation(line: 755, column: 53, scope: !5869)
!5892 = !DILocation(line: 755, column: 21, scope: !5869)
!5893 = !DILocation(line: 755, column: 9, scope: !5869)
!5894 = !DILocation(line: 755, column: 19, scope: !5869)
!5895 = !DILocation(line: 756, column: 25, scope: !5869)
!5896 = !DILocation(line: 756, column: 21, scope: !5869)
!5897 = !DILocation(line: 756, column: 9, scope: !5869)
!5898 = !DILocation(line: 756, column: 19, scope: !5869)
!5899 = !DILocation(line: 758, column: 22, scope: !5869)
!5900 = !DILocation(line: 758, column: 9, scope: !5869)
!5901 = !DILocation(line: 758, column: 14, scope: !5869)
!5902 = !DILocation(line: 759, column: 21, scope: !5869)
!5903 = !DILocation(line: 762, column: 1, scope: !5869)
!5904 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !483, file: !483, line: 3061, type: !2940, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5905)
!5905 = !{!5906}
!5906 = !DILocalVariable(name: "gs", arg: 1, scope: !5904, file: !483, line: 3061, type: !2932)
!5907 = !DILocation(line: 0, scope: !5904)
!5908 = !DILocation(line: 3064, column: 25, scope: !5904)
!5909 = !DILocation(line: 3064, column: 3, scope: !5904)
!5910 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5911, file: !5911, line: 427, type: !5912, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5917)
!5911 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5912 = !DISubroutineType(types: !5913)
!5913 = !{!583, !5914}
!5914 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !909, line: 30, baseType: !5915)
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 64)
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !6, line: 1893, baseType: !920)
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "use", arg: 1, scope: !5910, file: !5911, line: 427, type: !5914)
!5919 = !DILocation(line: 0, scope: !5910)
!5920 = !DILocation(line: 429, column: 17, scope: !5910)
!5921 = !DILocation(line: 429, column: 10, scope: !5910)
!5922 = !DILocation(line: 429, column: 3, scope: !5910)
!5923 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !5911, file: !5911, line: 442, type: !5924, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5926)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!5914, !878, !568}
!5926 = !{!5927, !5928}
!5927 = !DILocalVariable(name: "gs", arg: 1, scope: !5923, file: !5911, line: 442, type: !878)
!5928 = !DILocalVariable(name: "i", arg: 2, scope: !5923, file: !5911, line: 442, type: !568)
!5929 = !DILocation(line: 0, scope: !5923)
!5930 = !DILocation(line: 444, column: 11, scope: !5923)
!5931 = !DILocation(line: 444, column: 35, scope: !5923)
!5932 = !DILocation(line: 444, column: 3, scope: !5923)
!5933 = distinct !DISubprogram(name: "ipa_is_ssa_with_stmt_def", scope: !3, file: !3, line: 730, type: !5934, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!567, !583}
!5936 = !{!5937}
!5937 = !DILocalVariable(name: "t", arg: 1, scope: !5933, file: !3, line: 730, type: !583)
!5938 = !DILocation(line: 0, scope: !5933)
!5939 = !DILocation(line: 732, column: 7, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 732, column: 7)
!5941 = !DILocation(line: 732, column: 21, scope: !5940)
!5942 = !DILocation(line: 733, column: 7, scope: !5940)
!5943 = !DILocation(line: 733, column: 11, scope: !5940)
!5944 = !DILocation(line: 732, column: 7, scope: !5933)
!5945 = !DILocation(line: 736, column: 5, scope: !5940)
!5946 = !DILocation(line: 0, scope: !5940)
!5947 = !DILocation(line: 737, column: 1, scope: !5933)
!5948 = distinct !DISubprogram(name: "ipa_get_stmt_member_ptr_load_param", scope: !3, file: !3, line: 716, type: !5949, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5951)
!5949 = !DISubroutineType(types: !5950)
!5950 = !{!583, !878, !567}
!5951 = !{!5952, !5953, !5954}
!5952 = !DILocalVariable(name: "stmt", arg: 1, scope: !5948, file: !3, line: 716, type: !878)
!5953 = !DILocalVariable(name: "use_delta", arg: 2, scope: !5948, file: !3, line: 716, type: !567)
!5954 = !DILocalVariable(name: "rhs", scope: !5948, file: !3, line: 718, type: !583)
!5955 = !DILocation(line: 0, scope: !5948)
!5956 = !DILocation(line: 720, column: 8, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 720, column: 7)
!5958 = !DILocation(line: 720, column: 7, scope: !5948)
!5959 = !DILocation(line: 723, column: 9, scope: !5948)
!5960 = !DILocation(line: 724, column: 10, scope: !5948)
!5961 = !DILocation(line: 724, column: 3, scope: !5948)
!5962 = !DILocation(line: 725, column: 1, scope: !5948)
!5963 = distinct !DISubprogram(name: "gimple_bb", scope: !483, file: !483, line: 1112, type: !5964, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5966)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{!842, !2932}
!5966 = !{!5967}
!5967 = !DILocalVariable(name: "g", arg: 1, scope: !5963, file: !483, line: 1112, type: !2932)
!5968 = !DILocation(line: 0, scope: !5963)
!5969 = !DILocation(line: 1114, column: 20, scope: !5963)
!5970 = !DILocation(line: 1114, column: 3, scope: !5963)
!5971 = distinct !DISubprogram(name: "single_pred_p", scope: !202, file: !202, line: 634, type: !5972, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5974)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!567, !5228}
!5974 = !{!5975}
!5975 = !DILocalVariable(name: "bb", arg: 1, scope: !5971, file: !202, line: 634, type: !5228)
!5976 = !DILocation(line: 0, scope: !5971)
!5977 = !DILocation(line: 636, column: 10, scope: !5971)
!5978 = !DILocation(line: 636, column: 33, scope: !5971)
!5979 = !DILocation(line: 636, column: 3, scope: !5971)
!5980 = distinct !DISubprogram(name: "single_succ_p", scope: !202, file: !202, line: 626, type: !5972, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5981)
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "bb", arg: 1, scope: !5980, file: !202, line: 626, type: !5228)
!5983 = !DILocation(line: 0, scope: !5980)
!5984 = !DILocation(line: 628, column: 10, scope: !5980)
!5985 = !DILocation(line: 628, column: 33, scope: !5980)
!5986 = !DILocation(line: 628, column: 3, scope: !5980)
!5987 = distinct !DISubprogram(name: "single_pred", scope: !202, file: !202, line: 672, type: !5988, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!841, !5228}
!5990 = !{!5991}
!5991 = !DILocalVariable(name: "bb", arg: 1, scope: !5987, file: !202, line: 672, type: !5228)
!5992 = !DILocation(line: 0, scope: !5987)
!5993 = !DILocation(line: 674, column: 10, scope: !5987)
!5994 = !DILocation(line: 674, column: 33, scope: !5987)
!5995 = !DILocation(line: 674, column: 3, scope: !5987)
!5996 = distinct !DISubprogram(name: "single_succ", scope: !202, file: !202, line: 663, type: !5988, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5997)
!5997 = !{!5998}
!5998 = !DILocalVariable(name: "bb", arg: 1, scope: !5996, file: !202, line: 663, type: !5228)
!5999 = !DILocation(line: 0, scope: !5996)
!6000 = !DILocation(line: 665, column: 10, scope: !5996)
!6001 = !DILocation(line: 665, column: 33, scope: !5996)
!6002 = !DILocation(line: 665, column: 3, scope: !5996)
!6003 = distinct !DISubprogram(name: "gimple_cond_code", scope: !483, file: !483, line: 2221, type: !5449, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6004)
!6004 = !{!6005}
!6005 = !DILocalVariable(name: "gs", arg: 1, scope: !6003, file: !483, line: 2221, type: !2932)
!6006 = !DILocation(line: 0, scope: !6003)
!6007 = !DILocation(line: 2224, column: 38, scope: !6003)
!6008 = !DILocation(line: 2224, column: 3, scope: !6003)
!6009 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !483, file: !483, line: 2271, type: !4307, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6010)
!6010 = !{!6011}
!6011 = !DILocalVariable(name: "gs", arg: 1, scope: !6009, file: !483, line: 2271, type: !2932)
!6012 = !DILocation(line: 0, scope: !6009)
!6013 = !DILocation(line: 2274, column: 10, scope: !6009)
!6014 = !DILocation(line: 2274, column: 3, scope: !6009)
!6015 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !483, file: !483, line: 2241, type: !4307, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6016)
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "gs", arg: 1, scope: !6015, file: !483, line: 2241, type: !2932)
!6018 = !DILocation(line: 0, scope: !6015)
!6019 = !DILocation(line: 2244, column: 10, scope: !6015)
!6020 = !DILocation(line: 2244, column: 3, scope: !6015)
!6021 = distinct !DISubprogram(name: "gimple_uid", scope: !483, file: !483, line: 1265, type: !2940, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6022)
!6022 = !{!6023}
!6023 = !DILocalVariable(name: "g", arg: 1, scope: !6021, file: !483, line: 1265, type: !2932)
!6024 = !DILocation(line: 0, scope: !6021)
!6025 = !DILocation(line: 1267, column: 20, scope: !6021)
!6026 = !DILocation(line: 1267, column: 3, scope: !6021)
!6027 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !483, file: !483, line: 3100, type: !6028, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6031)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!6030, !878, !7}
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!6031 = !{!6032, !6033}
!6032 = !DILocalVariable(name: "gs", arg: 1, scope: !6027, file: !483, line: 3100, type: !878)
!6033 = !DILocalVariable(name: "index", arg: 2, scope: !6027, file: !483, line: 3100, type: !7)
!6034 = !DILocation(line: 0, scope: !6027)
!6035 = !DILocation(line: 3103, column: 3, scope: !6027)
!6036 = !DILocation(line: 3104, column: 12, scope: !6027)
!6037 = !DILocation(line: 3104, column: 3, scope: !6027)
!6038 = distinct !DISubprogram(name: "ipa_get_member_ptr_load_param", scope: !3, file: !3, line: 691, type: !6039, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6041)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{!583, !583, !567}
!6041 = !{!6042, !6043, !6044, !6045, !6046, !6047}
!6042 = !DILocalVariable(name: "rhs", arg: 1, scope: !6038, file: !3, line: 691, type: !583)
!6043 = !DILocalVariable(name: "use_delta", arg: 2, scope: !6038, file: !3, line: 691, type: !567)
!6044 = !DILocalVariable(name: "rec", scope: !6038, file: !3, line: 693, type: !583)
!6045 = !DILocalVariable(name: "fld", scope: !6038, file: !3, line: 693, type: !583)
!6046 = !DILocalVariable(name: "ptr_field", scope: !6038, file: !3, line: 694, type: !583)
!6047 = !DILocalVariable(name: "delta_field", scope: !6038, file: !3, line: 695, type: !583)
!6048 = !DILocation(line: 0, scope: !6038)
!6049 = !DILocation(line: 694, column: 3, scope: !6038)
!6050 = !DILocation(line: 695, column: 3, scope: !6038)
!6051 = !DILocation(line: 697, column: 7, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 697, column: 7)
!6053 = !DILocation(line: 697, column: 23, scope: !6052)
!6054 = !DILocation(line: 697, column: 7, scope: !6038)
!6055 = !DILocation(line: 700, column: 9, scope: !6038)
!6056 = !DILocation(line: 701, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 701, column: 7)
!6058 = !DILocation(line: 701, column: 23, scope: !6057)
!6059 = !DILocation(line: 702, column: 7, scope: !6057)
!6060 = !DILocation(line: 702, column: 35, scope: !6057)
!6061 = !DILocation(line: 702, column: 11, scope: !6057)
!6062 = !DILocation(line: 701, column: 7, scope: !6038)
!6063 = !DILocation(line: 705, column: 9, scope: !6038)
!6064 = !DILocation(line: 706, column: 50, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 706, column: 7)
!6066 = !DILocation(line: 706, column: 47, scope: !6065)
!6067 = !DILocation(line: 706, column: 7, scope: !6038)
!6068 = !DILocation(line: 709, column: 5, scope: !6065)
!6069 = !DILocation(line: 710, column: 1, scope: !6038)
!6070 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !202, file: !202, line: 150, type: !6071, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6075)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!7, !6073}
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!6075 = !{!6076}
!6076 = !DILocalVariable(name: "vec_", arg: 1, scope: !6070, file: !202, line: 150, type: !6073)
!6077 = !DILocation(line: 0, scope: !6070)
!6078 = !DILocation(line: 150, column: 1, scope: !6070)
!6079 = distinct !DISubprogram(name: "single_pred_edge", scope: !202, file: !202, line: 653, type: !6080, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!858, !5228}
!6082 = !{!6083}
!6083 = !DILocalVariable(name: "bb", arg: 1, scope: !6079, file: !202, line: 653, type: !5228)
!6084 = !DILocation(line: 0, scope: !6079)
!6085 = !DILocation(line: 655, column: 3, scope: !6079)
!6086 = !DILocation(line: 656, column: 10, scope: !6079)
!6087 = !DILocation(line: 656, column: 3, scope: !6079)
!6088 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !202, file: !202, line: 150, type: !6089, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!858, !6073, !7}
!6091 = !{!6092, !6093}
!6092 = !DILocalVariable(name: "vec_", arg: 1, scope: !6088, file: !202, line: 150, type: !6073)
!6093 = !DILocalVariable(name: "ix_", arg: 2, scope: !6088, file: !202, line: 150, type: !7)
!6094 = !DILocation(line: 0, scope: !6088)
!6095 = !DILocation(line: 150, column: 1, scope: !6088)
!6096 = distinct !DISubprogram(name: "single_succ_edge", scope: !202, file: !202, line: 643, type: !6080, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6097)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "bb", arg: 1, scope: !6096, file: !202, line: 643, type: !5228)
!6099 = !DILocation(line: 0, scope: !6096)
!6100 = !DILocation(line: 645, column: 3, scope: !6096)
!6101 = !DILocation(line: 646, column: 10, scope: !6096)
!6102 = !DILocation(line: 646, column: 3, scope: !6096)
!6103 = distinct !DISubprogram(name: "update_call_notes_after_inlining", scope: !3, file: !3, line: 1047, type: !3396, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6104)
!6104 = !{!6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112, !6116, !6120, !6121}
!6105 = !DILocalVariable(name: "cs", arg: 1, scope: !6103, file: !3, line: 1047, type: !1758)
!6106 = !DILocalVariable(name: "node", arg: 2, scope: !6103, file: !3, line: 1048, type: !579)
!6107 = !DILocalVariable(name: "new_edges", arg: 3, scope: !6103, file: !3, line: 1049, type: !3380)
!6108 = !DILocalVariable(name: "info", scope: !6103, file: !3, line: 1051, type: !2050)
!6109 = !DILocalVariable(name: "top", scope: !6103, file: !3, line: 1052, type: !2971)
!6110 = !DILocalVariable(name: "nt", scope: !6103, file: !3, line: 1053, type: !2056)
!6111 = !DILocalVariable(name: "res", scope: !6103, file: !3, line: 1054, type: !567)
!6112 = !DILocalVariable(name: "jfunc", scope: !6113, file: !3, line: 1058, type: !2025)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1057, column: 5)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1056, column: 3)
!6115 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 1056, column: 3)
!6116 = !DILocalVariable(name: "callee", scope: !6117, file: !3, line: 1077, type: !579)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1076, column: 2)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1074, column: 16)
!6119 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1071, column: 11)
!6120 = !DILocalVariable(name: "new_indirect_edge", scope: !6117, file: !3, line: 1078, type: !1758)
!6121 = !DILocalVariable(name: "decl", scope: !6117, file: !3, line: 1079, type: !583)
!6122 = !DILocation(line: 0, scope: !6103)
!6123 = !DILocation(line: 1051, column: 34, scope: !6103)
!6124 = !DILocation(line: 1052, column: 31, scope: !6103)
!6125 = !DILocation(line: 1056, column: 19, scope: !6115)
!6126 = !DILocation(line: 0, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1107, column: 8)
!6128 = !DILocation(line: 1056, column: 8, scope: !6115)
!6129 = !DILocation(line: 1052, column: 25, scope: !6103)
!6130 = !DILocation(line: 1054, column: 8, scope: !6103)
!6131 = !DILocation(line: 0, scope: !6115)
!6132 = !DILocation(line: 1056, column: 3, scope: !6115)
!6133 = !DILocation(line: 1060, column: 15, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1060, column: 11)
!6135 = !DILocation(line: 1060, column: 11, scope: !6134)
!6136 = !DILocation(line: 1060, column: 11, scope: !6113)
!6137 = !DILocation(line: 1064, column: 15, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1064, column: 11)
!6139 = !DILocation(line: 1064, column: 28, scope: !6138)
!6140 = !DILocation(line: 1064, column: 25, scope: !6138)
!6141 = !DILocation(line: 1064, column: 11, scope: !6113)
!6142 = !DILocation(line: 1066, column: 18, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1065, column: 2)
!6144 = !DILocation(line: 1067, column: 4, scope: !6143)
!6145 = !DILocation(line: 1070, column: 47, scope: !6113)
!6146 = !DILocation(line: 1070, column: 15, scope: !6113)
!6147 = !DILocation(line: 0, scope: !6113)
!6148 = !DILocation(line: 1071, column: 18, scope: !6119)
!6149 = !DILocation(line: 1071, column: 23, scope: !6119)
!6150 = !DILocation(line: 1072, column: 4, scope: !6119)
!6151 = !DILocation(line: 1072, column: 14, scope: !6119)
!6152 = !DILocation(line: 1072, column: 20, scope: !6119)
!6153 = !DILocation(line: 1072, column: 33, scope: !6119)
!6154 = !DILocation(line: 1072, column: 43, scope: !6119)
!6155 = !DILocation(line: 1071, column: 11, scope: !6113)
!6156 = !DILocation(line: 1073, column: 44, scope: !6119)
!6157 = !DILocation(line: 1073, column: 16, scope: !6119)
!6158 = !DILocation(line: 1073, column: 2, scope: !6119)
!6159 = !DILocation(line: 1074, column: 28, scope: !6118)
!6160 = !DILocation(line: 1075, column: 9, scope: !6118)
!6161 = !DILocation(line: 1075, column: 24, scope: !6118)
!6162 = !DILocation(line: 1074, column: 16, scope: !6119)
!6163 = !DILocation(line: 1081, column: 18, scope: !6117)
!6164 = !DILocation(line: 0, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1082, column: 8)
!6166 = !DILocation(line: 1082, column: 8, scope: !6117)
!6167 = !DILocation(line: 1083, column: 6, scope: !6165)
!6168 = !DILocation(line: 0, scope: !6117)
!6169 = !DILocation(line: 1087, column: 8, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1087, column: 8)
!6171 = !DILocation(line: 1087, column: 25, scope: !6170)
!6172 = !DILocation(line: 1087, column: 8, scope: !6117)
!6173 = !DILocation(line: 1089, column: 11, scope: !6117)
!6174 = !DILocation(line: 1091, column: 8, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1091, column: 8)
!6176 = !DILocation(line: 1091, column: 25, scope: !6175)
!6177 = !DILocation(line: 1091, column: 8, scope: !6117)
!6178 = !DILocation(line: 1093, column: 13, scope: !6117)
!6179 = !DILocation(line: 1094, column: 9, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1094, column: 8)
!6181 = !DILocation(line: 1094, column: 16, scope: !6180)
!6182 = !DILocation(line: 1094, column: 34, scope: !6180)
!6183 = !DILocation(line: 1094, column: 20, scope: !6180)
!6184 = !DILocation(line: 1094, column: 8, scope: !6117)
!6185 = !DILocation(line: 1098, column: 8, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1098, column: 8)
!6187 = !DILocation(line: 1098, column: 8, scope: !6117)
!6188 = !DILocation(line: 1099, column: 6, scope: !6186)
!6189 = !DILocation(line: 1101, column: 62, scope: !6117)
!6190 = !DILocation(line: 1102, column: 13, scope: !6117)
!6191 = !DILocation(line: 1102, column: 24, scope: !6117)
!6192 = !DILocation(line: 1103, column: 13, scope: !6117)
!6193 = !DILocation(line: 1103, column: 9, scope: !6117)
!6194 = !DILocation(line: 1101, column: 24, scope: !6117)
!6195 = !DILocation(line: 1104, column: 42, scope: !6117)
!6196 = !DILocation(line: 1104, column: 23, scope: !6117)
!6197 = !DILocation(line: 1104, column: 36, scope: !6117)
!6198 = !DILocation(line: 1105, column: 23, scope: !6117)
!6199 = !DILocation(line: 1105, column: 37, scope: !6117)
!6200 = !DILocation(line: 1106, column: 4, scope: !6117)
!6201 = !DILocation(line: 1107, column: 8, scope: !6117)
!6202 = !DILocation(line: 1108, column: 6, scope: !6127)
!6203 = !DILocation(line: 1109, column: 10, scope: !6117)
!6204 = !DILocation(line: 1110, column: 2, scope: !6118)
!6205 = !DILocation(line: 1115, column: 4, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1112, column: 2)
!6207 = !DILocation(line: 1116, column: 18, scope: !6206)
!6208 = !DILocation(line: 1118, column: 5, scope: !6114)
!6209 = !DILocation(line: 1056, column: 45, scope: !6114)
!6210 = !DILocation(line: 1056, column: 3, scope: !6114)
!6211 = distinct !{!6211, !6132, !6212}
!6212 = !DILocation(line: 1118, column: 5, scope: !6115)
!6213 = !DILocation(line: 1119, column: 3, scope: !6103)
!6214 = distinct !DISubprogram(name: "update_jump_functions_after_inlining", scope: !3, file: !3, line: 982, type: !6215, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{null, !1758, !1758}
!6217 = !{!6218, !6219, !6220, !6221, !6222, !6223, !6224, !6228}
!6218 = !DILocalVariable(name: "cs", arg: 1, scope: !6214, file: !3, line: 982, type: !1758)
!6219 = !DILocalVariable(name: "e", arg: 2, scope: !6214, file: !3, line: 983, type: !1758)
!6220 = !DILocalVariable(name: "top", scope: !6214, file: !3, line: 985, type: !2971)
!6221 = !DILocalVariable(name: "args", scope: !6214, file: !3, line: 986, type: !2971)
!6222 = !DILocalVariable(name: "count", scope: !6214, file: !3, line: 987, type: !568)
!6223 = !DILocalVariable(name: "i", scope: !6214, file: !3, line: 988, type: !568)
!6224 = !DILocalVariable(name: "src", scope: !6225, file: !3, line: 992, type: !2025)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 991, column: 5)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 990, column: 3)
!6227 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 990, column: 3)
!6228 = !DILocalVariable(name: "dst", scope: !6225, file: !3, line: 992, type: !2025)
!6229 = !DILocation(line: 0, scope: !6214)
!6230 = !DILocation(line: 985, column: 31, scope: !6214)
!6231 = !DILocation(line: 986, column: 32, scope: !6214)
!6232 = !DILocation(line: 987, column: 15, scope: !6214)
!6233 = !DILocation(line: 990, column: 8, scope: !6227)
!6234 = !DILocation(line: 0, scope: !6227)
!6235 = !DILocation(line: 990, column: 17, scope: !6226)
!6236 = !DILocation(line: 990, column: 3, scope: !6227)
!6237 = !DILocation(line: 992, column: 41, scope: !6225)
!6238 = !DILocation(line: 0, scope: !6225)
!6239 = !DILocation(line: 994, column: 16, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 994, column: 11)
!6241 = !DILocation(line: 994, column: 21, scope: !6240)
!6242 = !DILocation(line: 994, column: 11, scope: !6225)
!6243 = !DILocation(line: 996, column: 14, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 995, column: 2)
!6245 = !DILocation(line: 997, column: 4, scope: !6244)
!6246 = !DILocation(line: 1000, column: 21, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1000, column: 11)
!6248 = !DILocation(line: 1000, column: 11, scope: !6225)
!6249 = !DILocation(line: 1005, column: 16, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1005, column: 11)
!6251 = !DILocation(line: 1005, column: 22, scope: !6250)
!6252 = !DILocation(line: 1005, column: 35, scope: !6250)
!6253 = !DILocation(line: 1005, column: 45, scope: !6250)
!6254 = !DILocation(line: 1006, column: 4, scope: !6250)
!6255 = !DILocation(line: 1006, column: 32, scope: !6250)
!6256 = !DILocation(line: 1007, column: 11, scope: !6250)
!6257 = !DILocation(line: 1007, column: 8, scope: !6250)
!6258 = !DILocation(line: 1005, column: 11, scope: !6225)
!6259 = !DILocation(line: 1009, column: 14, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 1008, column: 2)
!6261 = !DILocation(line: 1010, column: 4, scope: !6260)
!6262 = !DILocation(line: 1013, column: 65, scope: !6225)
!6263 = !DILocation(line: 1013, column: 13, scope: !6225)
!6264 = !DILocation(line: 1014, column: 14, scope: !6225)
!6265 = !DILocation(line: 1015, column: 5, scope: !6226)
!6266 = !DILocation(line: 990, column: 27, scope: !6226)
!6267 = !DILocation(line: 990, column: 3, scope: !6226)
!6268 = distinct !{!6268, !6236, !6269}
!6269 = !DILocation(line: 1015, column: 5, scope: !6227)
!6270 = !DILocation(line: 1016, column: 1, scope: !6214)
!6271 = distinct !DISubprogram(name: "print_edge_addition_message", scope: !3, file: !3, line: 1023, type: !6272, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !2224, !2056, !2025, !579}
!6274 = !{!6275, !6276, !6277, !6278}
!6275 = !DILocalVariable(name: "f", arg: 1, scope: !6271, file: !3, line: 1023, type: !2224)
!6276 = !DILocalVariable(name: "nt", arg: 2, scope: !6271, file: !3, line: 1023, type: !2056)
!6277 = !DILocalVariable(name: "jfunc", arg: 3, scope: !6271, file: !3, line: 1024, type: !2025)
!6278 = !DILocalVariable(name: "node", arg: 4, scope: !6271, file: !3, line: 1025, type: !579)
!6279 = !DILocation(line: 0, scope: !6271)
!6280 = !DILocation(line: 1027, column: 3, scope: !6271)
!6281 = !DILocation(line: 1028, column: 14, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 1028, column: 7)
!6283 = !DILocation(line: 1028, column: 19, scope: !6282)
!6284 = !DILocation(line: 0, scope: !6282)
!6285 = !DILocation(line: 1028, column: 7, scope: !6271)
!6286 = !DILocation(line: 1030, column: 56, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1029, column: 5)
!6288 = !DILocation(line: 1030, column: 7, scope: !6287)
!6289 = !DILocation(line: 1031, column: 58, scope: !6287)
!6290 = !DILocation(line: 1031, column: 7, scope: !6287)
!6291 = !DILocation(line: 1032, column: 5, scope: !6287)
!6292 = !DILocation(line: 1034, column: 42, scope: !6282)
!6293 = !DILocation(line: 1034, column: 5, scope: !6282)
!6294 = !DILocation(line: 1036, column: 28, scope: !6271)
!6295 = !DILocation(line: 1036, column: 3, scope: !6271)
!6296 = !DILocation(line: 1037, column: 29, scope: !6271)
!6297 = !DILocation(line: 1037, column: 3, scope: !6271)
!6298 = !DILocation(line: 1038, column: 1, scope: !6271)
!6299 = distinct !DISubprogram(name: "VEC_cgraph_edge_p_heap_safe_push", scope: !250, file: !250, line: 353, type: !6300, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6303)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{!6302, !3380, !2104}
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!6303 = !{!6304, !6305}
!6304 = !DILocalVariable(name: "vec_", arg: 1, scope: !6299, file: !250, line: 353, type: !3380)
!6305 = !DILocalVariable(name: "obj_", arg: 2, scope: !6299, file: !250, line: 353, type: !2104)
!6306 = !DILocation(line: 0, scope: !6299)
!6307 = !DILocation(line: 353, column: 1, scope: !6299)
!6308 = distinct !DISubprogram(name: "VEC_cgraph_edge_p_heap_reserve", scope: !250, file: !250, line: 353, type: !6309, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6311)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!568, !3380, !568}
!6311 = !{!6312, !6313, !6314}
!6312 = !DILocalVariable(name: "vec_", arg: 1, scope: !6308, file: !250, line: 353, type: !3380)
!6313 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6308, file: !250, line: 353, type: !568)
!6314 = !DILocalVariable(name: "extend", scope: !6308, file: !250, line: 353, type: !568)
!6315 = !DILocation(line: 0, scope: !6308)
!6316 = !DILocation(line: 353, column: 1, scope: !6308)
!6317 = !DILocation(line: 353, column: 1, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6308, file: !250, line: 353, column: 1)
!6319 = distinct !DISubprogram(name: "VEC_cgraph_edge_p_base_quick_push", scope: !250, file: !250, line: 352, type: !6320, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6323)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{!6302, !6322, !2104}
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!6323 = !{!6324, !6325, !6326}
!6324 = !DILocalVariable(name: "vec_", arg: 1, scope: !6319, file: !250, line: 352, type: !6322)
!6325 = !DILocalVariable(name: "obj_", arg: 2, scope: !6319, file: !250, line: 352, type: !2104)
!6326 = !DILocalVariable(name: "slot_", scope: !6319, file: !250, line: 352, type: !6302)
!6327 = !DILocation(line: 0, scope: !6319)
!6328 = !DILocation(line: 352, column: 1, scope: !6319)
!6329 = distinct !DISubprogram(name: "VEC_cgraph_edge_p_base_space", scope: !250, file: !250, line: 352, type: !6330, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6332)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!568, !6322, !568}
!6332 = !{!6333, !6334}
!6333 = !DILocalVariable(name: "vec_", arg: 1, scope: !6329, file: !250, line: 352, type: !6322)
!6334 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6329, file: !250, line: 352, type: !568)
!6335 = !DILocation(line: 0, scope: !6329)
!6336 = !DILocation(line: 352, column: 1, scope: !6329)
!6337 = distinct !DISubprogram(name: "duplicate_ggc_array", scope: !3, file: !3, line: 1276, type: !6338, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{!572, !572, !1024}
!6340 = !{!6341, !6342, !6343}
!6341 = !DILocalVariable(name: "src", arg: 1, scope: !6337, file: !3, line: 1276, type: !572)
!6342 = !DILocalVariable(name: "n", arg: 2, scope: !6337, file: !3, line: 1276, type: !1024)
!6343 = !DILocalVariable(name: "p", scope: !6337, file: !3, line: 1278, type: !572)
!6344 = !DILocation(line: 0, scope: !6337)
!6345 = !DILocation(line: 1280, column: 8, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1280, column: 7)
!6347 = !DILocation(line: 1280, column: 7, scope: !6337)
!6348 = !DILocation(line: 1283, column: 7, scope: !6337)
!6349 = !DILocation(line: 1284, column: 3, scope: !6337)
!6350 = !DILocation(line: 1285, column: 3, scope: !6337)
!6351 = !DILocation(line: 1286, column: 1, scope: !6337)
!6352 = distinct !DISubprogram(name: "duplicate_array", scope: !3, file: !3, line: 1261, type: !6338, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6353)
!6353 = !{!6354, !6355, !6356}
!6354 = !DILocalVariable(name: "src", arg: 1, scope: !6352, file: !3, line: 1261, type: !572)
!6355 = !DILocalVariable(name: "n", arg: 2, scope: !6352, file: !3, line: 1261, type: !1024)
!6356 = !DILocalVariable(name: "p", scope: !6352, file: !3, line: 1263, type: !572)
!6357 = !DILocation(line: 0, scope: !6352)
!6358 = !DILocation(line: 1265, column: 8, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1265, column: 7)
!6360 = !DILocation(line: 1265, column: 7, scope: !6352)
!6361 = !DILocation(line: 1268, column: 7, scope: !6352)
!6362 = !DILocation(line: 1269, column: 3, scope: !6352)
!6363 = !DILocation(line: 1270, column: 3, scope: !6352)
!6364 = !DILocation(line: 1271, column: 1, scope: !6352)
!6365 = distinct !DISubprogram(name: "gimple_set_op", scope: !483, file: !483, line: 1663, type: !6366, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6368)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{null, !878, !7, !583}
!6368 = !{!6369, !6370, !6371}
!6369 = !DILocalVariable(name: "gs", arg: 1, scope: !6365, file: !483, line: 1663, type: !878)
!6370 = !DILocalVariable(name: "i", arg: 2, scope: !6365, file: !483, line: 1663, type: !7)
!6371 = !DILocalVariable(name: "op", arg: 3, scope: !6365, file: !483, line: 1663, type: !583)
!6372 = !DILocation(line: 0, scope: !6365)
!6373 = !DILocation(line: 1665, column: 3, scope: !6365)
!6374 = !DILocation(line: 1671, column: 3, scope: !6365)
!6375 = !DILocation(line: 1671, column: 22, scope: !6365)
!6376 = !DILocation(line: 1672, column: 1, scope: !6365)
!6377 = distinct !DISubprogram(name: "VEC_cgraph_node_ptr_base_length", scope: !250, file: !250, line: 270, type: !6378, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6382)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!7, !6380}
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!6382 = !{!6383}
!6383 = !DILocalVariable(name: "vec_", arg: 1, scope: !6377, file: !250, line: 270, type: !6380)
!6384 = !DILocation(line: 0, scope: !6377)
!6385 = !DILocation(line: 270, column: 1, scope: !6377)
!6386 = distinct !DISubprogram(name: "VEC_cgraph_node_ptr_base_index", scope: !250, file: !250, line: 270, type: !6387, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6389)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!1861, !6380, !7}
!6389 = !{!6390, !6391}
!6390 = !DILocalVariable(name: "vec_", arg: 1, scope: !6386, file: !250, line: 270, type: !6380)
!6391 = !DILocalVariable(name: "ix_", arg: 2, scope: !6386, file: !250, line: 270, type: !7)
!6392 = !DILocation(line: 0, scope: !6386)
!6393 = !DILocation(line: 270, column: 1, scope: !6386)
!6394 = distinct !DISubprogram(name: "ipa_write_jump_function", scope: !3, file: !3, line: 1897, type: !6395, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{null, !4703, !2025}
!6397 = !{!6398, !6399}
!6398 = !DILocalVariable(name: "ob", arg: 1, scope: !6394, file: !3, line: 1897, type: !4703)
!6399 = !DILocalVariable(name: "jump_func", arg: 2, scope: !6394, file: !3, line: 1898, type: !2025)
!6400 = !DILocation(line: 0, scope: !6394)
!6401 = !DILocation(line: 1900, column: 34, scope: !6394)
!6402 = !DILocation(line: 1901, column: 20, scope: !6394)
!6403 = !DILocation(line: 1901, column: 9, scope: !6394)
!6404 = !DILocation(line: 1900, column: 3, scope: !6394)
!6405 = !DILocation(line: 1903, column: 22, scope: !6394)
!6406 = !DILocation(line: 1903, column: 3, scope: !6394)
!6407 = !DILocation(line: 1908, column: 39, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 1904, column: 5)
!6409 = !DILocation(line: 1908, column: 45, scope: !6408)
!6410 = !DILocation(line: 1908, column: 7, scope: !6408)
!6411 = !DILocation(line: 1909, column: 7, scope: !6408)
!6412 = !DILocation(line: 1911, column: 39, scope: !6408)
!6413 = !DILocation(line: 1911, column: 58, scope: !6408)
!6414 = !DILocation(line: 1911, column: 7, scope: !6408)
!6415 = !DILocation(line: 1912, column: 38, scope: !6408)
!6416 = !DILocation(line: 1913, column: 36, scope: !6408)
!6417 = !DILocation(line: 1913, column: 6, scope: !6408)
!6418 = !DILocation(line: 1912, column: 7, scope: !6408)
!6419 = !DILocation(line: 1914, column: 38, scope: !6408)
!6420 = !DILocation(line: 1915, column: 23, scope: !6408)
!6421 = !DILocation(line: 1915, column: 36, scope: !6408)
!6422 = !DILocation(line: 1915, column: 6, scope: !6408)
!6423 = !DILocation(line: 1914, column: 7, scope: !6408)
!6424 = !DILocation(line: 1916, column: 7, scope: !6408)
!6425 = !DILocation(line: 1918, column: 38, scope: !6408)
!6426 = !DILocation(line: 1919, column: 32, scope: !6408)
!6427 = !DILocation(line: 1918, column: 7, scope: !6408)
!6428 = !DILocation(line: 1920, column: 54, scope: !6408)
!6429 = !DILocation(line: 1920, column: 7, scope: !6408)
!6430 = !DILocation(line: 1921, column: 38, scope: !6408)
!6431 = !DILocation(line: 1922, column: 32, scope: !6408)
!6432 = !DILocation(line: 1922, column: 6, scope: !6408)
!6433 = !DILocation(line: 1921, column: 7, scope: !6408)
!6434 = !DILocation(line: 1923, column: 7, scope: !6408)
!6435 = !DILocation(line: 1925, column: 39, scope: !6408)
!6436 = !DILocation(line: 1925, column: 56, scope: !6408)
!6437 = !DILocation(line: 1925, column: 7, scope: !6408)
!6438 = !DILocation(line: 1926, column: 56, scope: !6408)
!6439 = !DILocation(line: 1926, column: 7, scope: !6408)
!6440 = !DILocation(line: 1927, column: 7, scope: !6408)
!6441 = !DILocation(line: 1929, column: 1, scope: !6394)
!6442 = distinct !DISubprogram(name: "ipa_write_param_call_note", scope: !3, file: !3, line: 1967, type: !6443, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !4703, !2056}
!6445 = !{!6446, !6447}
!6446 = !DILocalVariable(name: "ob", arg: 1, scope: !6442, file: !3, line: 1967, type: !4703)
!6447 = !DILocalVariable(name: "note", arg: 2, scope: !6442, file: !3, line: 1968, type: !2056)
!6448 = !DILocation(line: 0, scope: !6442)
!6449 = !DILocation(line: 1970, column: 3, scope: !6442)
!6450 = !DILocation(line: 1971, column: 34, scope: !6442)
!6451 = !DILocation(line: 1971, column: 65, scope: !6442)
!6452 = !DILocation(line: 1971, column: 47, scope: !6442)
!6453 = !DILocation(line: 1971, column: 3, scope: !6442)
!6454 = !DILocation(line: 1972, column: 34, scope: !6442)
!6455 = !DILocation(line: 1972, column: 53, scope: !6442)
!6456 = !DILocation(line: 1972, column: 47, scope: !6442)
!6457 = !DILocation(line: 1972, column: 3, scope: !6442)
!6458 = !DILocation(line: 1973, column: 34, scope: !6442)
!6459 = !DILocation(line: 1973, column: 53, scope: !6442)
!6460 = !DILocation(line: 1973, column: 3, scope: !6442)
!6461 = !DILocation(line: 1974, column: 34, scope: !6442)
!6462 = !DILocation(line: 1974, column: 53, scope: !6442)
!6463 = !DILocation(line: 1974, column: 47, scope: !6442)
!6464 = !DILocation(line: 1974, column: 3, scope: !6442)
!6465 = !DILocation(line: 1975, column: 34, scope: !6442)
!6466 = !DILocation(line: 1975, column: 53, scope: !6442)
!6467 = !DILocation(line: 1975, column: 47, scope: !6442)
!6468 = !DILocation(line: 1975, column: 3, scope: !6442)
!6469 = !DILocation(line: 1976, column: 1, scope: !6442)
!6470 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_heap_alloc", scope: !456, file: !456, line: 315, type: !6471, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6473)
!6471 = !DISubroutineType(types: !6472)
!6472 = !{!2135, !568}
!6473 = !{!6474}
!6474 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6470, file: !456, line: 315, type: !568)
!6475 = !DILocation(line: 0, scope: !6470)
!6476 = !DILocation(line: 315, column: 1, scope: !6470)
!6477 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_base_length", scope: !456, file: !456, line: 314, type: !6478, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6482)
!6478 = !DISubroutineType(types: !6479)
!6479 = !{!7, !6480}
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2140)
!6482 = !{!6483}
!6483 = !DILocalVariable(name: "vec_", arg: 1, scope: !6477, file: !456, line: 314, type: !6480)
!6484 = !DILocation(line: 0, scope: !6477)
!6485 = !DILocation(line: 314, column: 1, scope: !6477)
!6486 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_heap_safe_grow_cleared", scope: !456, file: !456, line: 315, type: !6487, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6489)
!6487 = !DISubroutineType(types: !6488)
!6488 = !{null, !3554, !568}
!6489 = !{!6490, !6491, !6492}
!6490 = !DILocalVariable(name: "vec_", arg: 1, scope: !6486, file: !456, line: 315, type: !3554)
!6491 = !DILocalVariable(name: "size_", arg: 2, scope: !6486, file: !456, line: 315, type: !568)
!6492 = !DILocalVariable(name: "oldsize", scope: !6486, file: !456, line: 315, type: !568)
!6493 = !DILocation(line: 0, scope: !6486)
!6494 = !DILocation(line: 315, column: 1, scope: !6486)
!6495 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_heap_safe_grow", scope: !456, file: !456, line: 315, type: !6487, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6496)
!6496 = !{!6497, !6498}
!6497 = !DILocalVariable(name: "vec_", arg: 1, scope: !6495, file: !456, line: 315, type: !3554)
!6498 = !DILocalVariable(name: "size_", arg: 2, scope: !6495, file: !456, line: 315, type: !568)
!6499 = !DILocation(line: 0, scope: !6495)
!6500 = !DILocation(line: 315, column: 1, scope: !6495)
!6501 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_base_address", scope: !456, file: !456, line: 314, type: !6502, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6504)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!2696, !2697}
!6504 = !{!6505}
!6505 = !DILocalVariable(name: "vec_", arg: 1, scope: !6501, file: !456, line: 314, type: !2697)
!6506 = !DILocation(line: 0, scope: !6501)
!6507 = !DILocation(line: 314, column: 1, scope: !6501)
!6508 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_heap_reserve_exact", scope: !456, file: !456, line: 315, type: !6509, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6511)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!568, !3554, !568}
!6511 = !{!6512, !6513, !6514}
!6512 = !DILocalVariable(name: "vec_", arg: 1, scope: !6508, file: !456, line: 315, type: !3554)
!6513 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6508, file: !456, line: 315, type: !568)
!6514 = !DILocalVariable(name: "extend", scope: !6508, file: !456, line: 315, type: !568)
!6515 = !DILocation(line: 0, scope: !6508)
!6516 = !DILocation(line: 315, column: 1, scope: !6508)
!6517 = !DILocation(line: 315, column: 1, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6508, file: !456, line: 315, column: 1)
!6519 = distinct !DISubprogram(name: "VEC_ipa_node_params_t_base_space", scope: !456, file: !456, line: 314, type: !6520, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6522)
!6520 = !DISubroutineType(types: !6521)
!6521 = !{!568, !2697, !568}
!6522 = !{!6523, !6524}
!6523 = !DILocalVariable(name: "vec_", arg: 1, scope: !6519, file: !456, line: 314, type: !2697)
!6524 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6519, file: !456, line: 314, type: !568)
!6525 = !DILocation(line: 0, scope: !6519)
!6526 = !DILocation(line: 314, column: 1, scope: !6519)
!6527 = distinct !DISubprogram(name: "VEC_ipa_edge_args_t_gc_alloc", scope: !456, file: !456, line: 317, type: !6528, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6530)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!2073, !568}
!6530 = !{!6531}
!6531 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6527, file: !456, line: 317, type: !568)
!6532 = !DILocation(line: 0, scope: !6527)
!6533 = !DILocation(line: 317, column: 1, scope: !6527)
!6534 = distinct !DISubprogram(name: "ipa_read_node_info", scope: !3, file: !3, line: 2047, type: !6535, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6538)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{null, !6537, !579, !5057}
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!6538 = !{!6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6552}
!6539 = !DILocalVariable(name: "ib", arg: 1, scope: !6534, file: !3, line: 2047, type: !6537)
!6540 = !DILocalVariable(name: "node", arg: 2, scope: !6534, file: !3, line: 2047, type: !579)
!6541 = !DILocalVariable(name: "data_in", arg: 3, scope: !6534, file: !3, line: 2048, type: !5057)
!6542 = !DILocalVariable(name: "info", scope: !6534, file: !3, line: 2050, type: !2050)
!6543 = !DILocalVariable(name: "k", scope: !6534, file: !3, line: 2051, type: !568)
!6544 = !DILocalVariable(name: "e", scope: !6534, file: !3, line: 2052, type: !1758)
!6545 = !DILocalVariable(name: "bp", scope: !6534, file: !3, line: 2053, type: !4875)
!6546 = !DILocalVariable(name: "i", scope: !6534, file: !3, line: 2054, type: !568)
!6547 = !DILocalVariable(name: "note_count", scope: !6534, file: !3, line: 2054, type: !568)
!6548 = !DILocalVariable(name: "args", scope: !6549, file: !3, line: 2072, type: !2971)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 2071, column: 5)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 2070, column: 3)
!6551 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2070, column: 3)
!6552 = !DILocalVariable(name: "count", scope: !6549, file: !3, line: 2073, type: !568)
!6553 = !DILocation(line: 0, scope: !6534)
!6554 = !DILocation(line: 2050, column: 34, scope: !6534)
!6555 = !DILocation(line: 2056, column: 3, scope: !6534)
!6556 = !DILocation(line: 2058, column: 8, scope: !6534)
!6557 = !DILocation(line: 2059, column: 37, scope: !6534)
!6558 = !DILocation(line: 2059, column: 9, scope: !6534)
!6559 = !DILocation(line: 2059, column: 35, scope: !6534)
!6560 = !DILocation(line: 2060, column: 30, scope: !6534)
!6561 = !DILocation(line: 2060, column: 28, scope: !6534)
!6562 = !DILocation(line: 2061, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2061, column: 7)
!6564 = !DILocation(line: 2061, column: 34, scope: !6563)
!6565 = !DILocation(line: 2061, column: 7, scope: !6534)
!6566 = !DILocation(line: 2066, column: 23, scope: !6534)
!6567 = !DILocation(line: 2063, column: 40, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2062, column: 5)
!6569 = !DILocation(line: 2064, column: 32, scope: !6568)
!6570 = !DILocation(line: 2065, column: 5, scope: !6568)
!6571 = !DILocation(line: 0, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2067, column: 3)
!6573 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2067, column: 3)
!6574 = !DILocation(line: 2067, column: 8, scope: !6573)
!6575 = !DILocation(line: 0, scope: !6573)
!6576 = !DILocation(line: 2067, column: 19, scope: !6572)
!6577 = !DILocation(line: 2067, column: 17, scope: !6572)
!6578 = !DILocation(line: 2067, column: 3, scope: !6573)
!6579 = !DILocation(line: 2068, column: 32, scope: !6572)
!6580 = !DILocation(line: 2068, column: 11, scope: !6572)
!6581 = !DILocation(line: 2068, column: 21, scope: !6572)
!6582 = !DILocation(line: 2068, column: 30, scope: !6572)
!6583 = !DILocation(line: 2067, column: 48, scope: !6572)
!6584 = !DILocation(line: 2067, column: 3, scope: !6572)
!6585 = distinct !{!6585, !6578, !6586}
!6586 = !DILocation(line: 2068, column: 54, scope: !6573)
!6587 = !DILocation(line: 2069, column: 3, scope: !6534)
!6588 = !DILocation(line: 2070, column: 18, scope: !6551)
!6589 = !DILocation(line: 2070, column: 8, scope: !6551)
!6590 = !DILocation(line: 0, scope: !6551)
!6591 = !DILocation(line: 2070, column: 3, scope: !6551)
!6592 = !DILocation(line: 2072, column: 36, scope: !6549)
!6593 = !DILocation(line: 0, scope: !6549)
!6594 = !DILocation(line: 2073, column: 19, scope: !6549)
!6595 = !DILocation(line: 2075, column: 7, scope: !6549)
!6596 = !DILocation(line: 2076, column: 12, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 2076, column: 11)
!6598 = !DILocation(line: 2076, column: 11, scope: !6549)
!6599 = !DILocation(line: 2079, column: 30, scope: !6549)
!6600 = !DILocation(line: 2079, column: 13, scope: !6549)
!6601 = !DILocation(line: 2079, column: 28, scope: !6549)
!6602 = !DILocation(line: 2081, column: 12, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 2081, column: 7)
!6604 = !DILocation(line: 0, scope: !6603)
!6605 = !DILocation(line: 2081, column: 23, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2081, column: 7)
!6607 = !DILocation(line: 2081, column: 21, scope: !6606)
!6608 = !DILocation(line: 2081, column: 7, scope: !6603)
!6609 = !DILocation(line: 2082, column: 30, scope: !6606)
!6610 = !DILocation(line: 2082, column: 2, scope: !6606)
!6611 = !DILocation(line: 2081, column: 58, scope: !6606)
!6612 = !DILocation(line: 2081, column: 7, scope: !6606)
!6613 = distinct !{!6613, !6608, !6614}
!6614 = !DILocation(line: 2082, column: 70, scope: !6603)
!6615 = !DILocation(line: 2070, column: 37, scope: !6550)
!6616 = !DILocation(line: 2070, column: 3, scope: !6550)
!6617 = distinct !{!6617, !6591, !6618}
!6618 = !DILocation(line: 2083, column: 5, scope: !6551)
!6619 = !DILocation(line: 2085, column: 16, scope: !6534)
!6620 = !DILocation(line: 2086, column: 8, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2086, column: 3)
!6622 = !DILocation(line: 0, scope: !6621)
!6623 = !DILocation(line: 2086, column: 17, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 2086, column: 3)
!6625 = !DILocation(line: 2086, column: 3, scope: !6621)
!6626 = !DILocation(line: 2087, column: 5, scope: !6624)
!6627 = !DILocation(line: 2086, column: 32, scope: !6624)
!6628 = !DILocation(line: 2086, column: 3, scope: !6624)
!6629 = distinct !{!6629, !6625, !6630}
!6630 = !DILocation(line: 2087, column: 39, scope: !6621)
!6631 = !DILocation(line: 2088, column: 1, scope: !6534)
!6632 = distinct !DISubprogram(name: "ipa_read_jump_function", scope: !3, file: !3, line: 1934, type: !6633, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{null, !6537, !2025, !5057}
!6635 = !{!6636, !6637, !6638}
!6636 = !DILocalVariable(name: "ib", arg: 1, scope: !6632, file: !3, line: 1934, type: !6537)
!6637 = !DILocalVariable(name: "jump_func", arg: 2, scope: !6632, file: !3, line: 1935, type: !2025)
!6638 = !DILocalVariable(name: "data_in", arg: 3, scope: !6632, file: !3, line: 1936, type: !5057)
!6639 = !DILocation(line: 0, scope: !6632)
!6640 = !DILocation(line: 1938, column: 43, scope: !6632)
!6641 = !DILocation(line: 1938, column: 21, scope: !6632)
!6642 = !DILocation(line: 1938, column: 14, scope: !6632)
!6643 = !DILocation(line: 1938, column: 19, scope: !6632)
!6644 = !DILocation(line: 1940, column: 3, scope: !6632)
!6645 = !DILocation(line: 1945, column: 35, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1941, column: 5)
!6647 = !DILocation(line: 1945, column: 18, scope: !6646)
!6648 = !DILocation(line: 1945, column: 24, scope: !6646)
!6649 = !DILocation(line: 1945, column: 33, scope: !6646)
!6650 = !DILocation(line: 1946, column: 7, scope: !6646)
!6651 = !DILocation(line: 1948, column: 47, scope: !6646)
!6652 = !DILocation(line: 1948, column: 18, scope: !6646)
!6653 = !DILocation(line: 1948, column: 37, scope: !6646)
!6654 = !DILocation(line: 1948, column: 45, scope: !6646)
!6655 = !DILocation(line: 1949, column: 49, scope: !6646)
!6656 = !DILocation(line: 1949, column: 37, scope: !6646)
!6657 = !DILocation(line: 1949, column: 47, scope: !6646)
!6658 = !DILocation(line: 1950, column: 66, scope: !6646)
!6659 = !DILocation(line: 1950, column: 49, scope: !6646)
!6660 = !DILocation(line: 1950, column: 24, scope: !6646)
!6661 = !DILocation(line: 1950, column: 37, scope: !6646)
!6662 = !DILocation(line: 1950, column: 47, scope: !6646)
!6663 = !DILocation(line: 1951, column: 7, scope: !6646)
!6664 = !DILocation(line: 1953, column: 42, scope: !6646)
!6665 = !DILocation(line: 1953, column: 33, scope: !6646)
!6666 = !DILocation(line: 1953, column: 40, scope: !6646)
!6667 = !DILocation(line: 1954, column: 40, scope: !6646)
!6668 = !DILocation(line: 1954, column: 33, scope: !6646)
!6669 = !DILocation(line: 1954, column: 38, scope: !6646)
!6670 = !DILocation(line: 1955, column: 45, scope: !6646)
!6671 = !DILocation(line: 1955, column: 33, scope: !6646)
!6672 = !DILocation(line: 1955, column: 43, scope: !6646)
!6673 = !DILocation(line: 1956, column: 7, scope: !6646)
!6674 = !DILocation(line: 1958, column: 41, scope: !6646)
!6675 = !DILocation(line: 1958, column: 18, scope: !6646)
!6676 = !DILocation(line: 1958, column: 35, scope: !6646)
!6677 = !DILocation(line: 1958, column: 39, scope: !6646)
!6678 = !DILocation(line: 1959, column: 43, scope: !6646)
!6679 = !DILocation(line: 1959, column: 35, scope: !6646)
!6680 = !DILocation(line: 1959, column: 41, scope: !6646)
!6681 = !DILocation(line: 1960, column: 7, scope: !6646)
!6682 = !DILocation(line: 1962, column: 1, scope: !6632)
!6683 = distinct !DISubprogram(name: "ipa_read_param_call_note", scope: !3, file: !3, line: 1981, type: !6684, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6686)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{null, !6537, !2050}
!6686 = !{!6687, !6688, !6689}
!6687 = !DILocalVariable(name: "ib", arg: 1, scope: !6683, file: !3, line: 1981, type: !6537)
!6688 = !DILocalVariable(name: "info", arg: 2, scope: !6683, file: !3, line: 1982, type: !2050)
!6689 = !DILocalVariable(name: "note", scope: !6683, file: !3, line: 1985, type: !2056)
!6690 = !DILocation(line: 0, scope: !6683)
!6691 = !DILocation(line: 1985, column: 38, scope: !6683)
!6692 = !DILocation(line: 1987, column: 39, scope: !6683)
!6693 = !DILocation(line: 1987, column: 24, scope: !6683)
!6694 = !DILocation(line: 1987, column: 9, scope: !6683)
!6695 = !DILocation(line: 1987, column: 22, scope: !6683)
!6696 = !DILocation(line: 1988, column: 27, scope: !6683)
!6697 = !DILocation(line: 1988, column: 21, scope: !6683)
!6698 = !DILocation(line: 1988, column: 9, scope: !6683)
!6699 = !DILocation(line: 1988, column: 19, scope: !6683)
!6700 = !DILocation(line: 1989, column: 29, scope: !6683)
!6701 = !DILocation(line: 1989, column: 9, scope: !6683)
!6702 = !DILocation(line: 1989, column: 15, scope: !6683)
!6703 = !DILocation(line: 1990, column: 27, scope: !6683)
!6704 = !DILocation(line: 1990, column: 21, scope: !6683)
!6705 = !DILocation(line: 1990, column: 9, scope: !6683)
!6706 = !DILocation(line: 1990, column: 19, scope: !6683)
!6707 = !DILocation(line: 1991, column: 27, scope: !6683)
!6708 = !DILocation(line: 1991, column: 21, scope: !6683)
!6709 = !DILocation(line: 1991, column: 9, scope: !6683)
!6710 = !DILocation(line: 1991, column: 19, scope: !6683)
!6711 = !DILocation(line: 1993, column: 22, scope: !6683)
!6712 = !DILocation(line: 1993, column: 9, scope: !6683)
!6713 = !DILocation(line: 1993, column: 14, scope: !6683)
!6714 = !DILocation(line: 1994, column: 21, scope: !6683)
!6715 = !DILocation(line: 1995, column: 1, scope: !6683)
