; ModuleID = 'sched-rgn.bc'
source_filename = "sched-rgn.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.region = type { i32, i32, i8 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.candidate = type { i8, i8, i32, %struct.bblst, %struct.bblst }
%struct.bblst = type { %struct.basic_block_def**, i32 }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.VEC_haifa_insn_data_def_heap = type { %struct.VEC_haifa_insn_data_def_base }
%struct.VEC_haifa_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_insn_data] }
%struct._haifa_insn_data = type { i32, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.basic_block_def*, %struct.rtx_def*, %struct.reg_pressure_data*, i32*, %struct.reg_use_data*, %struct.reg_set_data*, i32 }
%struct.reg_pressure_data = type { i32 }
%struct.reg_use_data = type { i32, %struct.rtx_def*, %struct.reg_use_data*, %struct.reg_use_data* }
%struct.reg_set_data = type { i32, %struct.rtx_def*, %struct.reg_set_data* }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct._dep_link = type { %struct._dep_node*, %struct._dep_link*, %struct._dep_link** }
%struct._dep_node = type { %struct._dep_link, %struct._dep, %struct._dep_link }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.gcov_ctr_summary = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_haifa_deps_insn_data_def_heap = type { %struct.VEC_haifa_deps_insn_data_def_base }
%struct.VEC_haifa_deps_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_deps_insn_data] }
%struct._haifa_deps_insn_data = type { i32, i32, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, i8 }
%struct._deps_list = type { %struct._dep_link*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct._sd_iterator = type { i32, %struct.rtx_def*, %struct._dep_link**, i8 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edgelst = type { %struct.edge_def**, i32 }
%struct.sbitmap_iterator = type { i64*, i32, i32, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@nr_regions = dso_local local_unnamed_addr global i32 0, align 4, !dbg !0
@rgn_table = dso_local local_unnamed_addr global %struct.region* null, align 8, !dbg !1975
@rgn_bb_table = dso_local local_unnamed_addr global i32* null, align 8, !dbg !1977
@block_to_bb = dso_local local_unnamed_addr global i32* null, align 8, !dbg !1979
@containing_rgn = dso_local local_unnamed_addr global i32* null, align 8, !dbg !1981
@ebb_head = dso_local local_unnamed_addr global i32* null, align 8, !dbg !1983
@sched_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [40 x i8] c"\0A;;   ------------ REGIONS ----------\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c";;\09rgn %d nr_blocks %d:\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c";;\09bb/block: \00", align 1
@current_blocks = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2023
@.str.3 = private unnamed_addr constant [8 x i8] c" %d/%d \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"\0A;;   ------------ REGION %d ----------\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"digraph Region_%d {\0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"\09%d -> %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"wt\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"sched-rgn.c\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@sched_verbose = external dso_local local_unnamed_addr global i32, align 4
@.str.13 = private unnamed_addr constant [38 x i8] c";; Region extension iterations: %d%s\0A\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"... failed\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@candidate_table = internal unnamed_addr global %struct.candidate* null, align 8, !dbg !2025
@.str.16 = private unnamed_addr constant [29 x i8] c"src b %d bb %d speculative \0A\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"split path: \00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c" %d \00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"update path: \00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c" src %d equivalent\0A\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c"----------- candidate table: target: b=%d bb=%d ---\0A\00", align 1
@current_nr_blocks = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2021
@rgn_sched_info = internal global %struct.haifa_sched_info zeroinitializer, align 8, !dbg !2116
@.str.22 = private unnamed_addr constant [57 x i8] c";;   --------------- forward dependences: ------------ \0A\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"\0A;;   --- Region Dependences --- b %d bb %d \0A\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c";;   %7s%6s%6s%6s%6s%6s%14s\0A\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"insn\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"dep\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"prio\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"cost\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"reservation\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"----\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"---\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"-----------\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c";;   %6d \00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@note_insn_name = external dso_local local_unnamed_addr constant [13 x i8*], align 16
@.str.38 = private unnamed_addr constant [7 x i8] c" {%s}\0A\00", align 1
@rtx_name = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@.str.39 = private unnamed_addr constant [29 x i8] c";;   %s%5d%6d%6d%6d%6d%6d   \00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@sched_emulate_haifa_p = external dso_local local_unnamed_addr global i32, align 4
@h_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_insn_data_def_heap*, align 8
@.str.42 = private unnamed_addr constant [8 x i8] c"nothing\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"\09: \00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@current_sched_info = external dso_local local_unnamed_addr global %struct.haifa_sched_info*, align 8
@rgn_n_insns = internal unnamed_addr global i32 0, align 4, !dbg !2169
@min_spec_prob = internal unnamed_addr global i32 0, align 4, !dbg !2019
@nr_inter = internal unnamed_addr global i32 0, align 4, !dbg !2015
@nr_spec = internal unnamed_addr global i32 0, align 4, !dbg !2017
@flag_schedule_interblock = external dso_local local_unnamed_addr global i32, align 4
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.45 = private unnamed_addr constant [56 x i8] c"\0A;; Procedure interblock/speculative motions == %d/%d \0A\00", align 1
@bb_deps = internal unnamed_addr global %struct.deps* null, align 8, !dbg !2167
@sched_max_luid = external dso_local local_unnamed_addr global i32, align 4
@insn_referenced = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2165
@prob = internal unnamed_addr global i32* null, align 8, !dbg !2042
@dom = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2029
@rgn_nr_edges = internal unnamed_addr global i32 0, align 4, !dbg !2044
@rgn_edges = internal unnamed_addr global %struct.edge_def** null, align 8, !dbg !2046
@pot_split = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2048
@ancestor_edges = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2052
@rgn_common_sched_info = internal global %struct.common_sched_info_def zeroinitializer, align 8, !dbg !2056
@haifa_common_sched_info = external dso_local constant %struct.common_sched_info_def, align 8
@common_sched_info = external dso_local local_unnamed_addr global %struct.common_sched_info_def*, align 8
@rgn_sched_deps_info = internal global %struct.sched_deps_info_def zeroinitializer, align 8, !dbg !2077
@rgn_const_sched_deps_info = internal constant %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* @compute_jump_reg_dependencies, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (i32)* null, void (i32)* null, void (i32)* null, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* null, void (%struct.rtx_def*, i32)* null, i8 0 }, align 8, !dbg !2210
@rgn_const_sel_sched_deps_info = internal constant %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* @compute_jump_reg_dependencies, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (i32)* null, void (i32)* null, void (i32)* null, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* null, void (%struct.rtx_def*, i32)* null, i8 0 }, align 8, !dbg !2213
@sched_deps_info = external dso_local local_unnamed_addr global %struct.sched_deps_info_def*, align 8
@rgn_const_sched_info = internal constant %struct.haifa_sched_info { void ()* @init_ready_list, i32 (%struct.rtx_def*)* @can_schedule_ready_p, i32 ()* @schedule_more_p, i32 (%struct.rtx_def*, i32)* @new_ready, i32 (%struct.rtx_def*, %struct.rtx_def*)* @rgn_rank, i8* (%struct.rtx_def*, i32)* @rgn_print_insn, i32 (%struct.rtx_def*, %struct.rtx_def*)* @contributes_to_priority, i8 (%struct.rtx_def*)* @rgn_insn_finishes_block_p, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, i8 0, i32 0, void (%struct.rtx_def*, i32)* @rgn_add_remove_insn, void (%struct.rtx_def*, %struct.rtx_def*)* @begin_schedule_ready, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* @advance_target_bb, i32 4 }, align 8, !dbg !2215
@not_in_df = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !2054
@.str.46 = private unnamed_addr constant [7 x i8] c"sched1\00", align 1
@pass_sched = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i8 ()* @gate_handle_sched, i32 ()* @rest_of_handle_sched, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 145, i32 0, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !1985
@.str.47 = private unnamed_addr constant [7 x i8] c"sched2\00", align 1
@pass_sched2 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8 ()* @gate_handle_sched2, i32 ()* @rest_of_handle_sched2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 159, i32 0, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2013
@target_bb = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2027
@.str.48 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.49 = private unnamed_addr constant [59 x i8] c";; Region extension statistics: size %d: was %d + %d more\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@sd_iterator_start.null_link = internal global %struct._dep_link* null, align 8, !dbg !2171
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@profile_info = external dso_local local_unnamed_addr global %struct.gcov_ctr_summary*, align 8
@flag_branch_probabilities = external dso_local local_unnamed_addr global i32, align 4
@flag_sel_sched_pipelining = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@sched_luids = external dso_local local_unnamed_addr global %struct.VEC_int_heap*, align 8
@h_d_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_deps_insn_data_def_heap*, align 8
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@.str.50 = private unnamed_addr constant [27 x i8] c";;  bb_prob(%d, %d) = %3d\0A\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@target_n_insns = internal unnamed_addr global i32 0, align 4, !dbg !2218
@sched_target_n_insns = internal unnamed_addr global i32 0, align 4, !dbg !2220
@sched_n_insns = internal unnamed_addr global i32 0, align 4, !dbg !2222
@bblst_last = internal unnamed_addr global i32 0, align 4, !dbg !2224
@bblst_size = internal unnamed_addr global i32 0, align 4, !dbg !2226
@bblst_table = internal unnamed_addr global %struct.basic_block_def** null, align 8, !dbg !2228
@edgelst_last = internal unnamed_addr global i32 0, align 4, !dbg !2230
@edgelst_table = internal unnamed_addr global %struct.edge_def** null, align 8, !dbg !2232
@flag_schedule_speculative = external dso_local local_unnamed_addr global i32, align 4
@global_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@curr_state = external dso_local local_unnamed_addr global i8*, align 8
@spec_info = external dso_local local_unnamed_addr global %struct.spec_info_def*, align 8
@flag_schedule_speculative_load = external dso_local local_unnamed_addr global i32, align 4
@flag_schedule_speculative_load_dangerous = external dso_local local_unnamed_addr global i32, align 4
@rgn_print_insn.tmp = internal global [80 x i8] zeroinitializer, align 16, !dbg !2234
@.str.51 = private unnamed_addr constant [11 x i8] c"b%3d: i%4d\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"%d/b%d\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@sched_pressure_p = external dso_local local_unnamed_addr global i8, align 1
@haifa_recovery_bb_ever_added_p = external dso_local local_unnamed_addr global i8, align 1
@flag_schedule_insns = external dso_local local_unnamed_addr global i32, align 4
@flag_selective_scheduling = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_schedule_insns_after_reload = external dso_local local_unnamed_addr global i32, align 4
@flag_selective_scheduling2 = external dso_local local_unnamed_addr global i32, align 4
@flag_sched2_use_superblocks = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2247 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2260, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2261, metadata !DIExpression()), !dbg !2262
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2263
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2264
  ret i32 %call, !dbg !2265
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2266 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2268
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2269
  ret i32 %call, !dbg !2270
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2271 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2326, metadata !DIExpression()), !dbg !2327
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2328
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2328
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2328
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2328
  %cmp = icmp uge i8* %0, %1, !dbg !2328
  %conv1 = zext i1 %cmp to i64, !dbg !2328
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2328
  %tobool = icmp eq i64 %expval, 0, !dbg !2328
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2328

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2328
  br label %cond.end, !dbg !2328

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2328
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2328
  %2 = load i8, i8* %0, align 1, !dbg !2328
  %conv3 = zext i8 %2 to i32, !dbg !2328
  br label %cond.end, !dbg !2328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2328
  ret i32 %cond, !dbg !2329
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2330 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2332, metadata !DIExpression()), !dbg !2333
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2334
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2334
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2334
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2334
  %cmp = icmp uge i8* %0, %1, !dbg !2334
  %conv1 = zext i1 %cmp to i64, !dbg !2334
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2334
  %tobool = icmp eq i64 %expval, 0, !dbg !2334
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2334

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2334
  br label %cond.end, !dbg !2334

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2334
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2334
  %2 = load i8, i8* %0, align 1, !dbg !2334
  %conv3 = zext i8 %2 to i32, !dbg !2334
  br label %cond.end, !dbg !2334

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2334
  ret i32 %cond, !dbg !2335
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2336 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2337
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2337
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2337
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2337
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2337
  %cmp = icmp uge i8* %1, %2, !dbg !2337
  %conv1 = zext i1 %cmp to i64, !dbg !2337
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2337
  %tobool = icmp eq i64 %expval, 0, !dbg !2337
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2337

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2337
  br label %cond.end, !dbg !2337

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2337
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2337
  %3 = load i8, i8* %1, align 1, !dbg !2337
  %conv3 = zext i8 %3 to i32, !dbg !2337
  br label %cond.end, !dbg !2337

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2337
  ret i32 %cond, !dbg !2338
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2343, metadata !DIExpression()), !dbg !2344
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2345
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2346
  ret i32 %call, !dbg !2347
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2348 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2352, metadata !DIExpression()), !dbg !2354
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2353, metadata !DIExpression()), !dbg !2354
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2355
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2355
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2355
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2355
  %cmp = icmp uge i8* %0, %1, !dbg !2355
  %conv1 = zext i1 %cmp to i64, !dbg !2355
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2355
  %tobool = icmp eq i64 %expval, 0, !dbg !2355
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2355

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2355
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2355
  br label %cond.end, !dbg !2355

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2355
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2355
  store i8 %conv2, i8* %0, align 1, !dbg !2355
  %conv6 = and i32 %__c, 255, !dbg !2355
  br label %cond.end, !dbg !2355

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2355
  ret i32 %cond, !dbg !2356
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2357 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2359, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2360, metadata !DIExpression()), !dbg !2361
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2362
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2362
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2362
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2362
  %cmp = icmp uge i8* %0, %1, !dbg !2362
  %conv1 = zext i1 %cmp to i64, !dbg !2362
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2362
  %tobool = icmp eq i64 %expval, 0, !dbg !2362
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2362

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2362
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2362
  br label %cond.end, !dbg !2362

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2362
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2362
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2362
  store i8 %conv2, i8* %0, align 1, !dbg !2362
  %conv6 = and i32 %__c, 255, !dbg !2362
  br label %cond.end, !dbg !2362

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2362
  ret i32 %cond, !dbg !2363
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2364 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2366, metadata !DIExpression()), !dbg !2367
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2368
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2368
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2368
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2368
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2368
  %cmp = icmp uge i8* %1, %2, !dbg !2368
  %conv1 = zext i1 %cmp to i64, !dbg !2368
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2368
  %tobool = icmp eq i64 %expval, 0, !dbg !2368
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2368

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2368
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2368
  br label %cond.end, !dbg !2368

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2368
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2368
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2368
  store i8 %conv4, i8* %1, align 1, !dbg !2368
  %conv6 = and i32 %__c, 255, !dbg !2368
  br label %cond.end, !dbg !2368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2368
  ret i32 %cond, !dbg !2369
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2370 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2376, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2378, metadata !DIExpression()), !dbg !2379
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2380
  ret i64 %call, !dbg !2381
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2382 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2384, metadata !DIExpression()), !dbg !2385
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2386
  %0 = load i32, i32* %_flags, align 8, !dbg !2386
  %and = lshr i32 %0, 4, !dbg !2386
  %and.lobit = and i32 %and, 1, !dbg !2386
  ret i32 %and.lobit, !dbg !2387
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2390, metadata !DIExpression()), !dbg !2391
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2392
  %0 = load i32, i32* %_flags, align 8, !dbg !2392
  %and = lshr i32 %0, 5, !dbg !2392
  %and.lobit = and i32 %and, 1, !dbg !2392
  ret i32 %and.lobit, !dbg !2393
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2394 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2397, metadata !DIExpression()), !dbg !2398
  %__c.off = add i32 %__c, 128, !dbg !2399
  %0 = icmp ult i32 %__c.off, 384, !dbg !2399
  br i1 %0, label %cond.true, label %cond.end, !dbg !2399

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2400
  %1 = load i32*, i32** %call, align 8, !dbg !2401
  %idxprom = sext i32 %__c to i64, !dbg !2402
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2402
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2402
  br label %cond.end, !dbg !2403

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2403
  ret i32 %cond, !dbg !2404
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2405 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2407, metadata !DIExpression()), !dbg !2408
  %__c.off = add i32 %__c, 128, !dbg !2409
  %0 = icmp ult i32 %__c.off, 384, !dbg !2409
  br i1 %0, label %cond.true, label %cond.end, !dbg !2409

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2410
  %1 = load i32*, i32** %call, align 8, !dbg !2411
  %idxprom = sext i32 %__c to i64, !dbg !2412
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2412
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2412
  br label %cond.end, !dbg !2413

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2413
  ret i32 %cond, !dbg !2414
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2415 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2420, metadata !DIExpression()), !dbg !2421
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2422
  %conv = trunc i64 %call to i32, !dbg !2423
  ret i32 %conv, !dbg !2424
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2425 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2429, metadata !DIExpression()), !dbg !2430
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2431
  ret i64 %call, !dbg !2432
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2433 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2438, metadata !DIExpression()), !dbg !2439
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2440
  ret i64 %call, !dbg !2441
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2442 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2448, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2449, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2450, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2451, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2452, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 0, metadata !2453, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2454, metadata !DIExpression()), !dbg !2458
  br label %while.cond, !dbg !2459

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2460
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2454, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2453, metadata !DIExpression()), !dbg !2458
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2461
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2459

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2462
  %div = lshr i64 %add, 1, !dbg !2464
  call void @llvm.dbg.value(metadata i64 %div, metadata !2455, metadata !DIExpression()), !dbg !2458
  %mul = mul i64 %div, %__size, !dbg !2465
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2466
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2456, metadata !DIExpression()), !dbg !2458
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2467
  call void @llvm.dbg.value(metadata i32 %call, metadata !2457, metadata !DIExpression()), !dbg !2458
  %cmp1 = icmp slt i32 %call, 0, !dbg !2468
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2470

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2471
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2473

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2474
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2453, metadata !DIExpression()), !dbg !2458
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2458
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2454, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2453, metadata !DIExpression()), !dbg !2458
  br label %while.cond, !dbg !2459, !llvm.loop !2475

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2458
  ret i8* %retval.0, !dbg !2477
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2478 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2484, metadata !DIExpression()), !dbg !2485
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2486
  ret double %call, !dbg !2487
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2488 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2497, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2498, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.value(metadata i32 %base, metadata !2499, metadata !DIExpression()), !dbg !2500
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2501
  ret i64 %call, !dbg !2502
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2503 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2509, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2510, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i32 %base, metadata !2511, metadata !DIExpression()), !dbg !2512
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2513
  ret i64 %call, !dbg !2514
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2515 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2526, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2527, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.value(metadata i32 %base, metadata !2528, metadata !DIExpression()), !dbg !2529
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2530
  ret i64 %call, !dbg !2531
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2532 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2536, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2537, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i32 %base, metadata !2538, metadata !DIExpression()), !dbg !2539
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2540
  ret i64 %call, !dbg !2541
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2582, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2583, metadata !DIExpression()), !dbg !2584
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2585
  ret i32 %call, !dbg !2586
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2587 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2589, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2590, metadata !DIExpression()), !dbg !2591
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2592
  ret i32 %call, !dbg !2593
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2594 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2598, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2599, metadata !DIExpression()), !dbg !2600
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2601
  ret i32 %call, !dbg !2602
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2603 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2607, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2608, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2609, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2610, metadata !DIExpression()), !dbg !2611
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2612
  ret i32 %call, !dbg !2613
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2614 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2618, metadata !DIExpression()), !dbg !2621
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2619, metadata !DIExpression()), !dbg !2621
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2620, metadata !DIExpression()), !dbg !2621
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2620, metadata !DIExpression(DW_OP_deref)), !dbg !2621
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2622
  ret i32 %call, !dbg !2623
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2624 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2628, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2629, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2630, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2631, metadata !DIExpression()), !dbg !2632
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2631, metadata !DIExpression(DW_OP_deref)), !dbg !2632
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2633
  ret i32 %call, !dbg !2634
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2635 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2659, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2660, metadata !DIExpression()), !dbg !2661
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2662
  ret i32 %call, !dbg !2663
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2664 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2666, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2667, metadata !DIExpression()), !dbg !2668
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2669
  ret i32 %call, !dbg !2670
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2671 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2675, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2676, metadata !DIExpression()), !dbg !2677
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2678
  ret i32 %call, !dbg !2679
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2680 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2684, metadata !DIExpression()), !dbg !2688
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2685, metadata !DIExpression()), !dbg !2688
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2686, metadata !DIExpression()), !dbg !2688
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2687, metadata !DIExpression()), !dbg !2688
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2689
  ret i32 %call, !dbg !2690
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_regions() local_unnamed_addr #5 !dbg !2691 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2695
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2696
  call void @llvm.dbg.value(metadata i32 0, metadata !2693, metadata !DIExpression()), !dbg !2697
  br label %for.cond, !dbg !2698

for.cond:                                         ; preds = %for.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 0, %entry ], !dbg !2700
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2693, metadata !DIExpression()), !dbg !2697
  %1 = load i32, i32* @nr_regions, align 4, !dbg !2701
  %2 = sext i32 %1 to i64, !dbg !2703
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !2703
  br i1 %cmp, label %for.body, label %for.end17, !dbg !2704

for.body:                                         ; preds = %for.cond
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2705
  %4 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2707
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %4, i64 %indvars.iv, i32 0, !dbg !2708
  %5 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !2708
  %6 = trunc i64 %indvars.iv to i32, !dbg !2709
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 %6, i32 %5) #6, !dbg !2709
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2710
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2711
  %8 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2712
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %8, i64 %indvars.iv, i32 1, !dbg !2712
  %9 = load i32, i32* %rgn_blocks, align 4, !dbg !2712
  store i32 %9, i32* @current_blocks, align 4, !dbg !2713
  call void @llvm.dbg.value(metadata i32 0, metadata !2694, metadata !DIExpression()), !dbg !2697
  br label %for.cond5, !dbg !2714

for.cond5:                                        ; preds = %for.body10, %for.body
  %10 = phi %struct.region* [ %8, %for.body ], [ %.pre, %for.body10 ], !dbg !2716
  %bb.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body10 ], !dbg !2718
  call void @llvm.dbg.value(metadata i32 %bb.0, metadata !2694, metadata !DIExpression()), !dbg !2697
  %rgn_nr_blocks8 = getelementptr inbounds %struct.region, %struct.region* %10, i64 %indvars.iv, i32 0, !dbg !2719
  %11 = load i32, i32* %rgn_nr_blocks8, align 4, !dbg !2719
  %cmp9 = icmp slt i32 %bb.0, %11, !dbg !2720
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2721
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !2722

for.body10:                                       ; preds = %for.cond5
  %13 = load i32*, i32** @rgn_bb_table, align 8, !dbg !2723
  %14 = load i32, i32* @current_blocks, align 4, !dbg !2724
  %add = add nsw i32 %14, %bb.0, !dbg !2725
  %idxprom11 = sext i32 %add to i64, !dbg !2723
  %arrayidx12 = getelementptr inbounds i32, i32* %13, i64 %idxprom11, !dbg !2723
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !2723
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i32 %bb.0, i32 %15) #6, !dbg !2726
  %inc = add nuw nsw i32 %bb.0, 1, !dbg !2727
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2694, metadata !DIExpression()), !dbg !2697
  %.pre = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2716
  br label %for.cond5, !dbg !2728, !llvm.loop !2729

for.end:                                          ; preds = %for.cond5
  %.lcssa = phi %struct._IO_FILE* [ %12, %for.cond5 ], !dbg !2721
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2731
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2732
  call void @llvm.dbg.value(metadata i32 undef, metadata !2693, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2697
  br label %for.cond, !dbg !2733, !llvm.loop !2734

for.end17:                                        ; preds = %for.cond
  ret void, !dbg !2736
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_region(i32 %rgn) local_unnamed_addr #5 !dbg !2737 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !2739, metadata !DIExpression()), !dbg !2741
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2742
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 %rgn) #6, !dbg !2743
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2744
  %2 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2745
  %idxprom = sext i32 %rgn to i64, !dbg !2745
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %2, i64 %idxprom, i32 0, !dbg !2746
  %3 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !2746
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 %rgn, i32 %3) #6, !dbg !2747
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2748
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2749
  %5 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2750
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %5, i64 %idxprom, i32 1, !dbg !2750
  %6 = load i32, i32* %rgn_blocks, align 4, !dbg !2750
  store i32 %6, i32* @current_blocks, align 4, !dbg !2751
  call void @llvm.dbg.value(metadata i32 0, metadata !2740, metadata !DIExpression()), !dbg !2741
  br label %for.cond, !dbg !2752

for.cond:                                         ; preds = %for.body, %entry
  %7 = phi %struct.region* [ %5, %entry ], [ %.pre, %for.body ], !dbg !2754
  %bb.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2756
  call void @llvm.dbg.value(metadata i32 %bb.0, metadata !2740, metadata !DIExpression()), !dbg !2741
  %rgn_nr_blocks7 = getelementptr inbounds %struct.region, %struct.region* %7, i64 %idxprom, i32 0, !dbg !2757
  %8 = load i32, i32* %rgn_nr_blocks7, align 4, !dbg !2757
  %cmp = icmp slt i32 %bb.0, %8, !dbg !2758
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2741
  br i1 %cmp, label %for.body, label %for.end, !dbg !2759

for.body:                                         ; preds = %for.cond
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !2760
  %11 = load i32, i32* @current_blocks, align 4, !dbg !2761
  %add = add nsw i32 %11, %bb.0, !dbg !2762
  %idxprom8 = sext i32 %add to i64, !dbg !2760
  %arrayidx9 = getelementptr inbounds i32, i32* %10, i64 %idxprom8, !dbg !2760
  %12 = load i32, i32* %arrayidx9, align 4, !dbg !2760
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i32 %bb.0, i32 %12) #6, !dbg !2763
  %inc = add nuw nsw i32 %bb.0, 1, !dbg !2764
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2740, metadata !DIExpression()), !dbg !2741
  %.pre = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2754
  br label %for.cond, !dbg !2765, !llvm.loop !2766

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct._IO_FILE* [ %9, %for.cond ], !dbg !2741
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2768
  call void @llvm.dbg.value(metadata i32 0, metadata !2740, metadata !DIExpression()), !dbg !2741
  br label %for.cond12, !dbg !2769

for.cond12:                                       ; preds = %for.body17, %for.end
  %bb.1 = phi i32 [ 0, %for.end ], [ %inc23, %for.body17 ], !dbg !2771
  call void @llvm.dbg.value(metadata i32 %bb.1, metadata !2740, metadata !DIExpression()), !dbg !2741
  %13 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2772
  %rgn_nr_blocks15 = getelementptr inbounds %struct.region, %struct.region* %13, i64 %idxprom, i32 0, !dbg !2774
  %14 = load i32, i32* %rgn_nr_blocks15, align 4, !dbg !2774
  %cmp16 = icmp slt i32 %bb.1, %14, !dbg !2775
  br i1 %cmp16, label %for.body17, label %for.end24, !dbg !2776

for.body17:                                       ; preds = %for.cond12
  %15 = load i32*, i32** @rgn_bb_table, align 8, !dbg !2777
  %16 = load i32, i32* @current_blocks, align 4, !dbg !2779
  %add18 = add nsw i32 %16, %bb.1, !dbg !2780
  %idxprom19 = sext i32 %add18 to i64, !dbg !2777
  %arrayidx20 = getelementptr inbounds i32, i32* %15, i64 %idxprom19, !dbg !2777
  %17 = load i32, i32* %arrayidx20, align 4, !dbg !2777
  tail call void @debug_bb_n_slim(i32 %17) #6, !dbg !2781
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2782
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2783
  %inc23 = add nuw nsw i32 %bb.1, 1, !dbg !2784
  call void @llvm.dbg.value(metadata i32 %inc23, metadata !2740, metadata !DIExpression()), !dbg !2741
  br label %for.cond12, !dbg !2785, !llvm.loop !2786

for.end24:                                        ; preds = %for.cond12
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2788
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2789
  ret void, !dbg !2790
}

declare dso_local void @debug_bb_n_slim(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_region_dot(%struct._IO_FILE* %f, i32 %rgn) local_unnamed_addr #5 !dbg !2791 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2795, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !2796, metadata !DIExpression()), !dbg !2805
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 %rgn) #6, !dbg !2806
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2807
  %idxprom = sext i32 %rgn to i64, !dbg !2807
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 1, !dbg !2807
  %1 = load i32, i32* %rgn_blocks, align 4, !dbg !2807
  store i32 %1, i32* @current_blocks, align 4, !dbg !2808
  call void @llvm.dbg.value(metadata i32 0, metadata !2797, metadata !DIExpression()), !dbg !2805
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !2809
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2809
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2810
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2810
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2810
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2812
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2812
  br label %for.cond, !dbg !2814

for.cond:                                         ; preds = %for.end, %entry
  %9 = phi %struct.region* [ %0, %entry ], [ %.pre, %for.end ], !dbg !2815
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.end ], !dbg !2816
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2797, metadata !DIExpression()), !dbg !2805
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %9, i64 %idxprom, i32 0, !dbg !2817
  %10 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !2817
  %cmp = icmp slt i32 %i.0, %10, !dbg !2818
  br i1 %cmp, label %for.body, label %for.end20, !dbg !2819

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2820
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2821
  %11 = load i32*, i32** @rgn_bb_table, align 8, !dbg !2822
  %12 = load i32, i32* @current_blocks, align 4, !dbg !2823
  %add = add nsw i32 %12, %i.0, !dbg !2824
  %idxprom3 = sext i32 %add to i64, !dbg !2822
  %arrayidx4 = getelementptr inbounds i32, i32* %11, i64 %idxprom3, !dbg !2822
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !2822
  call void @llvm.dbg.value(metadata i32 %13, metadata !2803, metadata !DIExpression()), !dbg !2809
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2825
  %cfg = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !2825
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2825
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 2, !dbg !2825
  %16 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2825
  %tobool = icmp eq %struct.VEC_basic_block_gc* %16, null, !dbg !2825
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2825

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %16, i64 0, i32 0, !dbg !2825
  br label %cond.end, !dbg !2825

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !2825
  %call8 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %13) #8, !dbg !2825
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !2804, metadata !DIExpression()), !dbg !2809
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7, !dbg !2826
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call8, i64 0, i32 1, !dbg !2826
  %call9 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !2826
  %17 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 0, !dbg !2826
  store i32 %17, i32* %5, align 8, !dbg !2826
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 1, !dbg !2826
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %6, align 8, !dbg !2826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !2826
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7, !dbg !2826
  br label %for.cond10, !dbg !2826

for.cond10:                                       ; preds = %for.inc, %cond.end
  %19 = load i32, i32* %7, align 8, !dbg !2827
  %20 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !2827
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2798, metadata !DIExpression(DW_OP_deref)), !dbg !2809
  %call11 = call fastcc zeroext i8 @ei_cond(i32 %19, %struct.VEC_edge_gc** %20, %struct.edge_def** nonnull %e) #8, !dbg !2827
  %tobool12 = icmp eq i8 %call11, 0, !dbg !2826
  br i1 %tobool12, label %for.end, label %for.body13, !dbg !2826

for.body13:                                       ; preds = %for.cond10
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2828
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !2798, metadata !DIExpression()), !dbg !2809
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %21, i64 0, i32 1, !dbg !2830
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2830
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !2831
  %23 = load i32, i32* %index, align 8, !dbg !2831
  %call14 = call fastcc zeroext i8 @bb_in_region_p(i32 %23, i32 %rgn) #8, !dbg !2832
  %tobool15 = icmp eq i8 %call14, 0, !dbg !2832
  br i1 %tobool15, label %for.inc, label %if.then, !dbg !2833

if.then:                                          ; preds = %for.body13
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2834
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !2798, metadata !DIExpression()), !dbg !2809
  %dest16 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 1, !dbg !2835
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest16, align 8, !dbg !2835
  %index17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 9, !dbg !2836
  %26 = load i32, i32* %index17, align 8, !dbg !2836
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 %13, i32 %26) #6, !dbg !2837
  br label %for.inc, !dbg !2837

for.inc:                                          ; preds = %for.body13, %if.then
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2802, metadata !DIExpression(DW_OP_deref)), !dbg !2809
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !2827
  br label %for.cond10, !dbg !2827, !llvm.loop !2838

for.end:                                          ; preds = %for.cond10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2840
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2840
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2841
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2797, metadata !DIExpression()), !dbg !2805
  %.pre = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2815
  br label %for.cond, !dbg !2842, !llvm.loop !2843

for.end20:                                        ; preds = %for.cond
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2845
  ret void, !dbg !2846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2847 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !2853, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2854, metadata !DIExpression()), !dbg !2855
  br label %land.end, !dbg !2856

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2856
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2856
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2856
  ret %struct.basic_block_def* %0, !dbg !2856
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2857 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2861, metadata !DIExpression()), !dbg !2863
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2864
  store i32 0, i32* %index, align 8, !dbg !2865
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2866
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2867
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2868
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2868
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2868
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2869 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2874, metadata !DIExpression()), !dbg !2875
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2876
  %tobool = icmp eq i8 %call, 0, !dbg !2876
  br i1 %tobool, label %if.then, label %if.else, !dbg !2878

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2879
  br label %return, !dbg !2881

if.else:                                          ; preds = %entry
  br label %return, !dbg !2882

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !2884
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !2884
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !2884
  ret i8 %retval.0, !dbg !2885
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @bb_in_region_p(i32 %bb_index, i32 %rgn) unnamed_addr #5 !dbg !2886 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !2890, metadata !DIExpression()), !dbg !2893
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !2891, metadata !DIExpression()), !dbg !2893
  call void @llvm.dbg.value(metadata i32 0, metadata !2892, metadata !DIExpression()), !dbg !2893
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !2894
  %idxprom = sext i32 %rgn to i64, !dbg !2894
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 0, !dbg !2894
  %1 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !2894
  %2 = load i32*, i32** @rgn_bb_table, align 8, !dbg !2897
  %3 = load i32, i32* @current_blocks, align 4, !dbg !2897
  %4 = sext i32 %1 to i64, !dbg !2899
  %5 = sext i32 %3 to i64, !dbg !2899
  br label %for.cond, !dbg !2899

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2900
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2892, metadata !DIExpression()), !dbg !2893
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !2901
  br i1 %cmp, label %for.body, label %cleanup, !dbg !2902

for.body:                                         ; preds = %for.cond
  %6 = add nsw i64 %indvars.iv, %5, !dbg !2903
  %arrayidx2 = getelementptr inbounds i32, i32* %2, i64 %6, !dbg !2904
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !2904
  %cmp3 = icmp eq i32 %7, %bb_index, !dbg !2905
  br i1 %cmp3, label %cleanup, label %for.inc, !dbg !2906

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2907
  call void @llvm.dbg.value(metadata i32 undef, metadata !2892, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2893
  br label %for.cond, !dbg !2908, !llvm.loop !2909

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !2893
  ret i8 %retval.0, !dbg !2911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !2912 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !2916, metadata !DIExpression()), !dbg !2917
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !2918
  %0 = load i32, i32* %index, align 8, !dbg !2918
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !2918
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2918
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !2918
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2918
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2918

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !2918
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2918
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !2918
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2918
  br label %cond.end, !dbg !2918

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2918
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2918
  %cmp = icmp ult i32 %0, %call2, !dbg !2918
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !2918

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !2918
  br label %cond.end5, !dbg !2918

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !2919
  %inc = add i32 %5, 1, !dbg !2919
  store i32 %inc, i32* %index, align 8, !dbg !2919
  ret void, !dbg !2920
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_region_dot_file(i8* %fname, i32 %rgn) local_unnamed_addr #5 !dbg !2921 {
entry:
  call void @llvm.dbg.value(metadata i8* %fname, metadata !2925, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !2926, metadata !DIExpression()), !dbg !2928
  %call = tail call %struct._IO_FILE* @fopen_unlocked(i8* %fname, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2929
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, metadata !2927, metadata !DIExpression()), !dbg !2928
  tail call void @dump_region_dot(%struct._IO_FILE* %call, i32 %rgn) #8, !dbg !2930
  %call1 = tail call i32 @fclose(%struct._IO_FILE* %call) #6, !dbg !2931
  ret void, !dbg !2932
}

declare dso_local %struct._IO_FILE* @fopen_unlocked(i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @fclose(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @extend_rgns(i32* %degree, i32* %idxp, %struct.simple_bitmap_def* %header, i32* %loop_hdr) local_unnamed_addr #5 !dbg !2933 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %s1 = alloca i32*, align 8
  %e132 = alloca %struct.edge_def*, align 8
  %ei133 = alloca %struct.edge_iterator, align 8
  %num_bbs = alloca i32, align 4
  %num_insns = alloca i32, align 4
  %tmp153 = alloca %struct.edge_iterator, align 8
  %tmp274 = alloca %struct.edge_iterator, align 8
  %s2 = alloca i32*, align 8
  call void @llvm.dbg.value(metadata i32* %degree, metadata !2937, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32* %idxp, metadata !2938, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %header, metadata !2939, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32* %loop_hdr, metadata !2940, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 0, metadata !2943, metadata !DIExpression()), !dbg !2996
  %0 = load i32, i32* %idxp, align 4, !dbg !2997
  call void @llvm.dbg.value(metadata i32 %0, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 0, metadata !2945, metadata !DIExpression()), !dbg !2996
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2998
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2998
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2998
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 3, !dbg !2998
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %3, metadata !2948, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !2999
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 82, i32 1, !dbg !2999
  %5 = load i32, i32* %value, align 8, !dbg !2999
  call void @llvm.dbg.value(metadata i32 %5, metadata !2946, metadata !DIExpression()), !dbg !2996
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !3000
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !3000
  %conv = sext i32 %6 to i64, !dbg !3000
  %mul = shl nsw i64 %conv, 2, !dbg !3000
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3000
  %7 = bitcast i8* %call to i32*, !dbg !3000
  call void @llvm.dbg.value(metadata i32* %7, metadata !2947, metadata !DIExpression()), !dbg !2996
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3001
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !3001
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !3001
  %x_last_basic_block5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 5, !dbg !3001
  %10 = load i32, i32* %x_last_basic_block5, align 8, !dbg !3001
  %conv6 = sext i32 %10 to i64, !dbg !3001
  %mul7 = shl nsw i64 %conv6, 2, !dbg !3001
  %call8 = tail call i8* @xmalloc(i64 %mul7) #6, !dbg !3001
  %11 = bitcast i8* %call8 to i32*, !dbg !3001
  call void @llvm.dbg.value(metadata i32* %11, metadata !2941, metadata !DIExpression()), !dbg !2996
  %call9 = tail call i32 @post_order_compute(i32* %11, i8 zeroext 0, i8 zeroext 0) #6, !dbg !3002
  call void @llvm.dbg.value(metadata i32 %3, metadata !2942, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  %12 = add i32 %3, -3, !dbg !3003
  %13 = sext i32 %12 to i64, !dbg !3003
  br label %for.cond, !dbg !3003

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %for.inc ], [ %13, %entry ], !dbg !2996
  %rescan.0 = phi i32 [ %rescan.1, %for.inc ], [ 0, %entry ], !dbg !2996
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !2942, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.0, metadata !2943, metadata !DIExpression()), !dbg !2996
  %cmp = icmp sgt i64 %indvars.iv11, -1, !dbg !3004
  br i1 %cmp, label %for.body, label %while.cond.preheader, !dbg !3005

while.cond.preheader:                             ; preds = %for.cond
  %rescan.0.lcssa = phi i32 [ %rescan.0, %for.cond ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.0.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.0.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.0.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  %14 = bitcast %struct.edge_def** %e to i8*, !dbg !3006
  %15 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3006
  %16 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3007
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3007
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3007
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3008
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3008
  %21 = add i32 %3, -3, !dbg !3009
  %22 = sext i32 %21 to i64, !dbg !3009
  br label %while.cond, !dbg !3009

for.body:                                         ; preds = %for.cond
  %arrayidx12 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv11, !dbg !3010
  %23 = load i32, i32* %arrayidx12, align 4, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %23, metadata !2949, metadata !DIExpression()), !dbg !3011
  %idxprom13 = sext i32 %23 to i64, !dbg !3012
  %arrayidx14 = getelementptr inbounds i32, i32* %degree, i64 %idxprom13, !dbg !3012
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !3012
  %cmp15 = icmp sgt i32 %24, -1, !dbg !3014
  %arrayidx18 = getelementptr inbounds i32, i32* %7, i64 %idxprom13, !dbg !3015
  br i1 %cmp15, label %if.then, label %if.else, !dbg !3016

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 1, metadata !2943, metadata !DIExpression()), !dbg !2996
  br label %for.inc, !dbg !3017

if.else:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %storemerge = phi i32 [ -1, %if.else ], [ %23, %if.then ], !dbg !3015
  %rescan.1 = phi i32 [ %rescan.0, %if.else ], [ 1, %if.then ], !dbg !2996
  store i32 %storemerge, i32* %arrayidx18, align 4, !dbg !3015
  call void @llvm.dbg.value(metadata i32 %rescan.1, metadata !2943, metadata !DIExpression()), !dbg !2996
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, -1, !dbg !3019
  call void @llvm.dbg.value(metadata i32 undef, metadata !2942, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  br label %for.cond, !dbg !3020, !llvm.loop !3021

while.cond:                                       ; preds = %while.cond.preheader, %for.end99
  %iter.0 = phi i32 [ %inc, %for.end99 ], [ 0, %while.cond.preheader ], !dbg !2996
  %rescan.2 = phi i32 [ %rescan.3.lcssa, %for.end99 ], [ %rescan.0.lcssa, %while.cond.preheader ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.2, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %iter.0, metadata !2945, metadata !DIExpression()), !dbg !2996
  %tobool = icmp ne i32 %rescan.2, 0, !dbg !3023
  %cmp21 = icmp slt i32 %iter.0, %5, !dbg !3024
  %spec.select = and i1 %cmp21, %tobool, !dbg !3025
  br i1 %spec.select, label %while.body, label %while.end, !dbg !3009

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %3, metadata !2942, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  br label %for.cond24, !dbg !3026

for.cond24:                                       ; preds = %if.end96, %while.body
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %if.end96 ], [ %22, %while.body ], !dbg !3027
  %rescan.3 = phi i32 [ %rescan.5, %if.end96 ], [ 0, %while.body ], !dbg !3027
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !2942, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.3, metadata !2943, metadata !DIExpression()), !dbg !2996
  %cmp25 = icmp sgt i64 %indvars.iv9, -1, !dbg !3028
  br i1 %cmp25, label %for.body27, label %for.end99, !dbg !3029

for.body27:                                       ; preds = %for.cond24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7, !dbg !3030
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7, !dbg !3031
  %arrayidx30 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv9, !dbg !3032
  %25 = load i32, i32* %arrayidx30, align 4, !dbg !3032
  call void @llvm.dbg.value(metadata i32 %25, metadata !2959, metadata !DIExpression()), !dbg !3006
  %idxprom31 = sext i32 %25 to i64, !dbg !3033
  %arrayidx32 = getelementptr inbounds i32, i32* %7, i64 %idxprom31, !dbg !3033
  %26 = load i32, i32* %arrayidx32, align 4, !dbg !3033
  %cmp33 = icmp eq i32 %26, -1, !dbg !3034
  br i1 %cmp33, label %if.end96, label %land.lhs.true, !dbg !3035

land.lhs.true:                                    ; preds = %for.body27
  %div = lshr i32 %25, 6, !dbg !3036
  %idxprom35 = zext i32 %div to i64, !dbg !3036
  %arrayidx36 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %header, i64 0, i32 3, i64 %idxprom35, !dbg !3036
  %27 = load i64, i64* %arrayidx36, align 8, !dbg !3036
  %rem = and i32 %25, 63, !dbg !3036
  %sh_prom = zext i32 %rem to i64, !dbg !3036
  %28 = shl i64 1, %sh_prom, !dbg !3036
  %29 = and i64 %27, %28, !dbg !3036
  %tobool37 = icmp eq i64 %29, 0, !dbg !3036
  br i1 %tobool37, label %if.then38, label %if.end96, !dbg !3037

if.then38:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 -1, metadata !2960, metadata !DIExpression()), !dbg !3038
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7, !dbg !3039
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3039
  %cfg40 = getelementptr inbounds %struct.function, %struct.function* %30, i64 0, i32 1, !dbg !3039
  %31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg40, align 8, !dbg !3039
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %31, i64 0, i32 2, !dbg !3039
  %32 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3039
  %tobool41 = icmp eq %struct.VEC_basic_block_gc* %32, null, !dbg !3039
  br i1 %tobool41, label %cond.end, label %cond.true, !dbg !3039

cond.true:                                        ; preds = %if.then38
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %32, i64 0, i32 0, !dbg !3039
  br label %cond.end, !dbg !3039

cond.end:                                         ; preds = %if.then38, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.then38 ], !dbg !3039
  %call45 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %25) #8, !dbg !3039
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call45, i64 0, i32 0, !dbg !3039
  %call46 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !3039
  %33 = extractvalue { i32, %struct.VEC_edge_gc** } %call46, 0, !dbg !3039
  store i32 %33, i32* %17, align 8, !dbg !3039
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call46, 1, !dbg !3039
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %18, align 8, !dbg !3039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !3039
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7, !dbg !3039
  %arrayidx60 = getelementptr inbounds i32, i32* %loop_hdr, i64 %idxprom31, !dbg !3040
  br label %for.cond47, !dbg !3039

for.cond47:                                       ; preds = %for.inc81, %cond.end
  %hdr.0 = phi i32 [ -1, %cond.end ], [ %hdr.2, %for.inc81 ], !dbg !3038
  call void @llvm.dbg.value(metadata i32 %hdr.0, metadata !2960, metadata !DIExpression()), !dbg !3038
  %35 = load i32, i32* %19, align 8, !dbg !3042
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !3042
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2953, metadata !DIExpression(DW_OP_deref)), !dbg !3006
  %call48 = call fastcc zeroext i8 @ei_cond(i32 %35, %struct.VEC_edge_gc** %36, %struct.edge_def** nonnull %e) #8, !dbg !3042
  %tobool49 = icmp eq i8 %call48, 0, !dbg !3039
  br i1 %tobool49, label %for.end82, label %for.body50, !dbg !3039

for.body50:                                       ; preds = %for.cond47
  %37 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3043
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !2953, metadata !DIExpression()), !dbg !3006
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %37, i64 0, i32 0, !dbg !3044
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3044
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i64 0, i32 9, !dbg !3045
  %39 = load i32, i32* %index, align 8, !dbg !3045
  call void @llvm.dbg.value(metadata i32 %39, metadata !2963, metadata !DIExpression()), !dbg !3046
  %cmp51 = icmp eq i32 %39, 0, !dbg !3047
  br i1 %cmp51, label %cleanup, label %land.lhs.true53, !dbg !3048

land.lhs.true53:                                  ; preds = %for.body50
  %idxprom54 = sext i32 %39 to i64, !dbg !3049
  %arrayidx55 = getelementptr inbounds i32, i32* %7, i64 %idxprom54, !dbg !3049
  %40 = load i32, i32* %arrayidx55, align 4, !dbg !3049
  %cmp56 = icmp eq i32 %40, -1, !dbg !3050
  br i1 %cmp56, label %cleanup, label %land.lhs.true58, !dbg !3051

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %41 = load i32, i32* %arrayidx60, align 4, !dbg !3052
  %arrayidx62 = getelementptr inbounds i32, i32* %loop_hdr, i64 %idxprom54, !dbg !3053
  %42 = load i32, i32* %arrayidx62, align 4, !dbg !3053
  %cmp63 = icmp eq i32 %41, %42, !dbg !3054
  br i1 %cmp63, label %if.then65, label %cleanup, !dbg !3055

if.then65:                                        ; preds = %land.lhs.true58
  %cmp66 = icmp eq i32 %hdr.0, -1, !dbg !3056
  br i1 %cmp66, label %if.end80, label %if.else71, !dbg !3059

if.else71:                                        ; preds = %if.then65
  %cmp74 = icmp eq i32 %hdr.0, %40, !dbg !3060
  br i1 %cmp74, label %if.end80, label %cleanup, !dbg !3062

if.end80:                                         ; preds = %if.else71, %if.then65
  %hdr.1 = phi i32 [ %40, %if.then65 ], [ %hdr.0, %if.else71 ], !dbg !3038
  call void @llvm.dbg.value(metadata i32 %hdr.1, metadata !2960, metadata !DIExpression()), !dbg !3038
  br label %cleanup, !dbg !3063

cleanup:                                          ; preds = %if.else71, %land.lhs.true53, %for.body50, %land.lhs.true58, %if.end80
  %hdr.2 = phi i32 [ %hdr.1, %if.end80 ], [ %25, %if.else71 ], [ %25, %land.lhs.true58 ], [ %25, %land.lhs.true53 ], [ %25, %for.body50 ], !dbg !3040
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end80 ], [ false, %if.else71 ], [ false, %land.lhs.true58 ], [ false, %land.lhs.true53 ], [ false, %for.body50 ]
  call void @llvm.dbg.value(metadata i32 %hdr.2, metadata !2960, metadata !DIExpression()), !dbg !3038
  br i1 %cleanup.dest.slot.0, label %for.inc81, label %for.end82

for.inc81:                                        ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2958, metadata !DIExpression(DW_OP_deref)), !dbg !3006
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3042
  br label %for.cond47, !dbg !3042, !llvm.loop !3064

for.end82:                                        ; preds = %for.cond47, %cleanup
  %hdr.3 = phi i32 [ %hdr.2, %cleanup ], [ %hdr.0, %for.cond47 ], !dbg !3038
  call void @llvm.dbg.value(metadata i32 %hdr.3, metadata !2960, metadata !DIExpression()), !dbg !3038
  %cmp83 = icmp eq i32 %hdr.3, %25, !dbg !3066
  br i1 %cmp83, label %if.then85, label %if.else86, !dbg !3068

if.then85:                                        ; preds = %for.end82
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %header, i32 %25) #8, !dbg !3069
  call void @llvm.dbg.value(metadata i32 1, metadata !2943, metadata !DIExpression()), !dbg !2996
  br label %if.end93, !dbg !3071

if.else86:                                        ; preds = %for.end82
  %cmp87 = icmp eq i32 %hdr.3, -1, !dbg !3072
  br i1 %cmp87, label %cond.true89, label %if.end93, !dbg !3072

cond.true89:                                      ; preds = %if.else86
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3072
  br label %if.end93, !dbg !3072

if.end93:                                         ; preds = %if.else86, %cond.true89, %if.then85
  %rescan.4 = phi i32 [ 1, %if.then85 ], [ %rescan.3, %if.else86 ], [ %rescan.3, %cond.true89 ], !dbg !3073
  call void @llvm.dbg.value(metadata i32 %rescan.4, metadata !2943, metadata !DIExpression()), !dbg !2996
  store i32 %hdr.3, i32* %arrayidx32, align 4, !dbg !3074
  br label %if.end96, !dbg !3075

if.end96:                                         ; preds = %land.lhs.true, %for.body27, %if.end93
  %rescan.5 = phi i32 [ %rescan.3, %land.lhs.true ], [ %rescan.4, %if.end93 ], [ %rescan.3, %for.body27 ], !dbg !3073
  call void @llvm.dbg.value(metadata i32 %rescan.5, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7, !dbg !3076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7, !dbg !3076
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, -1, !dbg !3077
  call void @llvm.dbg.value(metadata i32 undef, metadata !2942, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  br label %for.cond24, !dbg !3078, !llvm.loop !3079

for.end99:                                        ; preds = %for.cond24
  %rescan.3.lcssa = phi i32 [ %rescan.3, %for.cond24 ], !dbg !3027
  call void @llvm.dbg.value(metadata i32 %rescan.3.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.3.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.3.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  %inc = add nuw nsw i32 %iter.0, 1, !dbg !3081
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2945, metadata !DIExpression()), !dbg !2996
  br label %while.cond, !dbg !3009, !llvm.loop !3082

while.end:                                        ; preds = %while.cond
  %iter.0.lcssa = phi i32 [ %iter.0, %while.cond ], !dbg !2996
  %rescan.2.lcssa = phi i32 [ %rescan.2, %while.cond ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %iter.0.lcssa, metadata !2945, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.2.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %iter.0.lcssa, metadata !2945, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.2.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %iter.0.lcssa, metadata !2945, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %rescan.2.lcssa, metadata !2943, metadata !DIExpression()), !dbg !2996
  %43 = load i32, i32* @sched_verbose, align 4, !dbg !3084
  %tobool100 = icmp ne i32 %43, 0, !dbg !3084
  %cmp102 = icmp ne i32 %iter.0.lcssa, 0, !dbg !3086
  %or.cond = and i1 %tobool100, %cmp102, !dbg !3087
  br i1 %or.cond, label %if.then104, label %if.end108, !dbg !3087

if.then104:                                       ; preds = %while.end
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3088
  %tobool105 = icmp eq i32 %rescan.2.lcssa, 0, !dbg !3089
  %cond106 = select i1 %tobool105, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), !dbg !3089
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %iter.0.lcssa, i8* %cond106) #6, !dbg !3090
  br label %if.end108, !dbg !3090

if.end108:                                        ; preds = %if.then104, %while.end
  %tobool109 = icmp eq i32 %rescan.2.lcssa, 0, !dbg !3091
  %or.cond1 = and i1 %tobool109, %cmp102, !dbg !3092
  br i1 %or.cond1, label %if.then113, label %if.end329, !dbg !3092

if.then113:                                       ; preds = %if.end108
  %45 = bitcast i32** %s1 to i8*, !dbg !3093
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7, !dbg !3093
  call void @llvm.dbg.value(metadata i32* null, metadata !2967, metadata !DIExpression()), !dbg !3094
  store i32* null, i32** %s1, align 8, !dbg !3095
  call void @llvm.dbg.value(metadata i32 0, metadata !2970, metadata !DIExpression()), !dbg !3094
  %46 = load i32, i32* @sched_verbose, align 4, !dbg !3096
  %cmp114 = icmp sgt i32 %46, 5, !dbg !3098
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !3099

if.then116:                                       ; preds = %if.then113
  call void @llvm.dbg.value(metadata i32** %s1, metadata !2967, metadata !DIExpression(DW_OP_deref)), !dbg !3094
  %call117 = call fastcc i32 @gather_region_statistics(i32** nonnull %s1) #8, !dbg !3100
  call void @llvm.dbg.value(metadata i32 %call117, metadata !2970, metadata !DIExpression()), !dbg !3094
  br label %if.end118, !dbg !3101

if.end118:                                        ; preds = %if.then116, %if.then113
  %s1_sz.0 = phi i32 [ %call117, %if.then116 ], [ 0, %if.then113 ], !dbg !3094
  call void @llvm.dbg.value(metadata i32 %s1_sz.0, metadata !2970, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32 %3, metadata !2942, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  %47 = bitcast %struct.edge_def** %e132 to i8*, !dbg !3102
  %48 = bitcast %struct.edge_iterator* %ei133 to i8*, !dbg !3102
  %49 = bitcast i32* %num_bbs to i8*, !dbg !3102
  %50 = bitcast i32* %num_insns to i8*, !dbg !3102
  %51 = bitcast %struct.edge_iterator* %tmp153 to i8*, !dbg !3103
  %52 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp153, i64 0, i32 0, !dbg !3103
  %53 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp153, i64 0, i32 1, !dbg !3103
  %54 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei133, i64 0, i32 0, !dbg !3105
  %55 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei133, i64 0, i32 1, !dbg !3105
  %56 = bitcast %struct.edge_iterator* %tmp274 to i8*, !dbg !3107
  %57 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp274, i64 0, i32 0, !dbg !3107
  %58 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp274, i64 0, i32 1, !dbg !3107
  %59 = add i32 %3, -3, !dbg !3111
  %60 = sext i32 %59 to i64, !dbg !3111
  br label %for.cond120, !dbg !3111

for.cond120:                                      ; preds = %for.inc321, %if.end118
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc321 ], [ %60, %if.end118 ], !dbg !2996
  %idx.0 = phi i32 [ %idx.3, %for.inc321 ], [ %0, %if.end118 ], !dbg !2996
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2942, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.0, metadata !2944, metadata !DIExpression()), !dbg !2996
  %cmp121 = icmp sgt i64 %indvars.iv, -1, !dbg !3112
  br i1 %cmp121, label %for.body123, label %for.end323, !dbg !3113

for.body123:                                      ; preds = %for.cond120
  %arrayidx126 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv, !dbg !3114
  %61 = load i32, i32* %arrayidx126, align 4, !dbg !3114
  call void @llvm.dbg.value(metadata i32 %61, metadata !2971, metadata !DIExpression()), !dbg !3115
  %idxprom127 = sext i32 %61 to i64, !dbg !3116
  %arrayidx128 = getelementptr inbounds i32, i32* %7, i64 %idxprom127, !dbg !3116
  %62 = load i32, i32* %arrayidx128, align 4, !dbg !3116
  %cmp129 = icmp eq i32 %62, %61, !dbg !3117
  br i1 %cmp129, label %if.then131, label %for.inc321, !dbg !3118

if.then131:                                       ; preds = %for.body123
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7, !dbg !3119
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #7, !dbg !3120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #7, !dbg !3121
  call void @llvm.dbg.value(metadata i32 0, metadata !2979, metadata !DIExpression()), !dbg !3102
  store i32 0, i32* %num_bbs, align 4, !dbg !3122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #7, !dbg !3121
  call void @llvm.dbg.value(metadata i32 0, metadata !2981, metadata !DIExpression()), !dbg !3102
  store i32 0, i32* %num_insns, align 4, !dbg !3123
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !2979, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !2981, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  %call134 = call fastcc zeroext i8 @too_large(i32 %61, i32* nonnull %num_bbs, i32* nonnull %num_insns) #8, !dbg !3124
  %conv135 = zext i8 %call134 to i32, !dbg !3124
  call void @llvm.dbg.value(metadata i32 %conv135, metadata !2982, metadata !DIExpression()), !dbg !3102
  %arrayidx137 = getelementptr inbounds i32, i32* %degree, i64 %idxprom127, !dbg !3125
  store i32 -1, i32* %arrayidx137, align 4, !dbg !3126
  %63 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3127
  %idxprom138 = sext i32 %idx.0 to i64, !dbg !3127
  %arrayidx139 = getelementptr inbounds i32, i32* %63, i64 %idxprom138, !dbg !3127
  store i32 %61, i32* %arrayidx139, align 4, !dbg !3128
  %inc140 = add nsw i32 %idx.0, 1, !dbg !3129
  call void @llvm.dbg.value(metadata i32 %inc140, metadata !2944, metadata !DIExpression()), !dbg !2996
  %64 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3130
  %65 = load i32, i32* @nr_regions, align 4, !dbg !3130
  %idxprom141 = sext i32 %65 to i64, !dbg !3130
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %64, i64 %idxprom141, i32 1, !dbg !3130
  store i32 %idx.0, i32* %rgn_blocks, align 4, !dbg !3131
  %66 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3132
  %67 = load i32, i32* @nr_regions, align 4, !dbg !3132
  %idxprom143 = sext i32 %67 to i64, !dbg !3132
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %66, i64 %idxprom143, i32 2, !dbg !3132
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !3133
  %bf.clear = and i8 %bf.load, -2, !dbg !3133
  store i8 %bf.clear, i8* %dont_calc_deps, align 4, !dbg !3133
  %68 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3134
  %69 = load i32, i32* @nr_regions, align 4, !dbg !3134
  %idxprom145 = sext i32 %69 to i64, !dbg !3134
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %68, i64 %idxprom145, i32 2, !dbg !3134
  %bf.load147 = load i8, i8* %has_real_ebb, align 4, !dbg !3135
  %bf.clear148 = and i8 %bf.load147, -3, !dbg !3135
  store i8 %bf.clear148, i8* %has_real_ebb, align 4, !dbg !3135
  %70 = load i32, i32* @nr_regions, align 4, !dbg !3136
  %71 = load i32*, i32** @containing_rgn, align 8, !dbg !3137
  %arrayidx150 = getelementptr inbounds i32, i32* %71, i64 %idxprom127, !dbg !3137
  store i32 %70, i32* %arrayidx150, align 4, !dbg !3138
  %72 = load i32*, i32** @block_to_bb, align 8, !dbg !3139
  %arrayidx152 = getelementptr inbounds i32, i32* %72, i64 %idxprom127, !dbg !3139
  store i32 0, i32* %arrayidx152, align 4, !dbg !3140
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #7, !dbg !3141
  %73 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3141
  %cfg155 = getelementptr inbounds %struct.function, %struct.function* %73, i64 0, i32 1, !dbg !3141
  %74 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg155, align 8, !dbg !3141
  %x_basic_block_info156 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %74, i64 0, i32 2, !dbg !3141
  %75 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info156, align 8, !dbg !3141
  %tobool157 = icmp eq %struct.VEC_basic_block_gc* %75, null, !dbg !3141
  br i1 %tobool157, label %cond.end164, label %cond.true158, !dbg !3141

cond.true158:                                     ; preds = %if.then131
  %base162 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %75, i64 0, i32 0, !dbg !3141
  br label %cond.end164, !dbg !3141

cond.end164:                                      ; preds = %if.then131, %cond.true158
  %cond165 = phi %struct.VEC_basic_block_base* [ %base162, %cond.true158 ], [ null, %if.then131 ], !dbg !3141
  %call166 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond165, i32 %61) #8, !dbg !3141
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call166, i64 0, i32 1, !dbg !3141
  %call167 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !3141
  %76 = extractvalue { i32, %struct.VEC_edge_gc** } %call167, 0, !dbg !3141
  store i32 %76, i32* %52, align 8, !dbg !3141
  %77 = extractvalue { i32, %struct.VEC_edge_gc** } %call167, 1, !dbg !3141
  store %struct.VEC_edge_gc** %77, %struct.VEC_edge_gc*** %53, align 8, !dbg !3141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %51, i64 16, i1 false), !dbg !3141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #7, !dbg !3141
  br label %for.cond168, !dbg !3141

for.cond168:                                      ; preds = %for.inc183, %cond.end164
  %78 = load i32, i32* %54, align 8, !dbg !3142
  %79 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %55, align 8, !dbg !3142
  call void @llvm.dbg.value(metadata %struct.edge_def** %e132, metadata !2975, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  %call169 = call fastcc zeroext i8 @ei_cond(i32 %78, %struct.VEC_edge_gc** %79, %struct.edge_def** nonnull %e132) #8, !dbg !3142
  %tobool170 = icmp eq i8 %call169, 0, !dbg !3141
  br i1 %tobool170, label %for.end184, label %for.body171, !dbg !3141

for.body171:                                      ; preds = %for.cond168
  %80 = load %struct.edge_def*, %struct.edge_def** %e132, align 8, !dbg !3143
  call void @llvm.dbg.value(metadata %struct.edge_def* %80, metadata !2975, metadata !DIExpression()), !dbg !3102
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %80, i64 0, i32 1, !dbg !3145
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3145
  %82 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3146
  %cfg173 = getelementptr inbounds %struct.function, %struct.function* %82, i64 0, i32 1, !dbg !3146
  %83 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg173, align 8, !dbg !3146
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %83, i64 0, i32 1, !dbg !3146
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3146
  %cmp174 = icmp eq %struct.basic_block_def* %81, %84, !dbg !3147
  br i1 %cmp174, label %for.inc183, label %if.then176, !dbg !3148

if.then176:                                       ; preds = %for.body171
  call void @llvm.dbg.value(metadata %struct.edge_def* %80, metadata !2975, metadata !DIExpression()), !dbg !3102
  %index178 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %81, i64 0, i32 9, !dbg !3149
  %85 = load i32, i32* %index178, align 8, !dbg !3149
  %idxprom179 = sext i32 %85 to i64, !dbg !3150
  %arrayidx180 = getelementptr inbounds i32, i32* %degree, i64 %idxprom179, !dbg !3150
  %86 = load i32, i32* %arrayidx180, align 4, !dbg !3151
  %dec181 = add nsw i32 %86, -1, !dbg !3151
  store i32 %dec181, i32* %arrayidx180, align 4, !dbg !3151
  br label %for.inc183, !dbg !3150

for.inc183:                                       ; preds = %for.body171, %if.then176
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei133, metadata !2978, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei133) #8, !dbg !3142
  br label %for.cond168, !dbg !3142, !llvm.loop !3152

for.end184:                                       ; preds = %for.cond168
  %tobool185 = icmp eq i8 %call134, 0, !dbg !3154
  br i1 %tobool185, label %if.then186, label %if.end211, !dbg !3155

if.then186:                                       ; preds = %for.end184
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  br label %for.cond188, !dbg !3156

for.cond188:                                      ; preds = %for.inc208, %if.then186
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc208 ], [ %indvars.iv, %if.then186 ]
  %large.0 = phi i32 [ %large.2, %for.inc208 ], [ %conv135, %if.then186 ], !dbg !3102
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, -1, !dbg !3157
  call void @llvm.dbg.value(metadata i32 %large.0, metadata !2982, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i32 undef, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  %cmp189 = icmp sgt i64 %indvars.iv5, 0, !dbg !3158
  br i1 %cmp189, label %for.body191, label %if.end211.loopexit, !dbg !3159

for.body191:                                      ; preds = %for.cond188
  %arrayidx193 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv.next6, !dbg !3160
  %87 = load i32, i32* %arrayidx193, align 4, !dbg !3160
  call void @llvm.dbg.value(metadata i32 %87, metadata !2983, metadata !DIExpression()), !dbg !3161
  %idxprom194 = sext i32 %87 to i64, !dbg !3162
  %arrayidx195 = getelementptr inbounds i32, i32* %7, i64 %idxprom194, !dbg !3162
  %88 = load i32, i32* %arrayidx195, align 4, !dbg !3162
  %cmp196 = icmp eq i32 %88, %61, !dbg !3164
  br i1 %cmp196, label %if.then198, label %if.end204, !dbg !3165

if.then198:                                       ; preds = %for.body191
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !2979, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !2981, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  %call199 = call fastcc zeroext i8 @too_large(i32 %87, i32* nonnull %num_bbs, i32* nonnull %num_insns) #8, !dbg !3166
  %conv200 = zext i8 %call199 to i32, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %conv200, metadata !2982, metadata !DIExpression()), !dbg !3102
  %tobool201 = icmp eq i8 %call199, 0, !dbg !3169
  br i1 %tobool201, label %if.end204, label %cleanup205, !dbg !3170

if.end204:                                        ; preds = %if.then198, %for.body191
  %large.1 = phi i32 [ %large.0, %for.body191 ], [ %conv200, %if.then198 ], !dbg !3102
  call void @llvm.dbg.value(metadata i32 %large.1, metadata !2982, metadata !DIExpression()), !dbg !3102
  br label %cleanup205, !dbg !3171

cleanup205:                                       ; preds = %if.then198, %if.end204
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end204 ], [ false, %if.then198 ]
  %large.2 = phi i32 [ %large.1, %if.end204 ], [ %conv200, %if.then198 ], !dbg !3169
  call void @llvm.dbg.value(metadata i32 %large.2, metadata !2982, metadata !DIExpression()), !dbg !3102
  br i1 %cleanup.dest.slot.1, label %for.inc208, label %if.end211.loopexit

for.inc208:                                       ; preds = %cleanup205
  call void @llvm.dbg.value(metadata i32 undef, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  br label %for.cond188, !dbg !3172, !llvm.loop !3173

if.end211.loopexit:                               ; preds = %cleanup205, %for.cond188
  %large.4.ph = phi i32 [ %large.0, %for.cond188 ], [ %large.2, %cleanup205 ]
  br label %if.end211, !dbg !3175

if.end211:                                        ; preds = %if.end211.loopexit, %for.end184
  %large.4 = phi i32 [ %conv135, %for.end184 ], [ %large.4.ph, %if.end211.loopexit ], !dbg !3102
  call void @llvm.dbg.value(metadata i32 %large.4, metadata !2982, metadata !DIExpression()), !dbg !3102
  %tobool212 = icmp eq i32 %large.4, 0, !dbg !3175
  br i1 %tobool212, label %if.end217, label %if.then213, !dbg !3177

if.then213:                                       ; preds = %if.end211
  %89 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3178
  %90 = load i32, i32* @nr_regions, align 4, !dbg !3178
  %idxprom214 = sext i32 %90 to i64, !dbg !3178
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %89, i64 %idxprom214, i32 0, !dbg !3178
  store i32 1, i32* %rgn_nr_blocks, align 4, !dbg !3180
  %91 = load i32, i32* @nr_regions, align 4, !dbg !3181
  %inc216 = add nsw i32 %91, 1, !dbg !3181
  store i32 %inc216, i32* @nr_regions, align 4, !dbg !3181
  br label %if.end217, !dbg !3182

if.end217:                                        ; preds = %if.end211, %if.then213
  call void @llvm.dbg.value(metadata i32 1, metadata !2979, metadata !DIExpression()), !dbg !3102
  store i32 1, i32* %num_bbs, align 4, !dbg !3183
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  br label %for.cond219, !dbg !3184

for.cond219:                                      ; preds = %for.inc310, %if.end217
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc310 ], [ %indvars.iv, %if.end217 ], !dbg !3102
  %idx.1 = phi i32 [ %idx.2, %for.inc310 ], [ %inc140, %if.end217 ], !dbg !3102
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !3185
  call void @llvm.dbg.value(metadata i32 undef, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  call void @llvm.dbg.value(metadata i32 %idx.1, metadata !2944, metadata !DIExpression()), !dbg !2996
  %cmp220 = icmp sgt i64 %indvars.iv7, 0, !dbg !3186
  br i1 %cmp220, label %for.body222, label %for.end312, !dbg !3187

for.body222:                                      ; preds = %for.cond219
  %arrayidx225 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv.next8, !dbg !3188
  %92 = load i32, i32* %arrayidx225, align 4, !dbg !3188
  call void @llvm.dbg.value(metadata i32 %92, metadata !2988, metadata !DIExpression()), !dbg !3189
  %idxprom226 = sext i32 %92 to i64, !dbg !3190
  %arrayidx227 = getelementptr inbounds i32, i32* %7, i64 %idxprom226, !dbg !3190
  %93 = load i32, i32* %arrayidx227, align 4, !dbg !3190
  %cmp228 = icmp eq i32 %93, %61, !dbg !3191
  br i1 %cmp228, label %if.then230, label %for.inc310, !dbg !3192

if.then230:                                       ; preds = %for.body222
  %arrayidx232 = getelementptr inbounds i32, i32* %degree, i64 %idxprom226, !dbg !3193
  %94 = load i32, i32* %arrayidx232, align 4, !dbg !3193
  %cmp233 = icmp eq i32 %94, 0, !dbg !3193
  br i1 %cmp233, label %cond.end237, label %cond.true235, !dbg !3193

cond.true235:                                     ; preds = %if.then230
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1346, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3193
  br label %cond.end237, !dbg !3193

cond.end237:                                      ; preds = %if.then230, %cond.true235
  store i32 -1, i32* %arrayidx232, align 4, !dbg !3194
  %95 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3195
  %idxprom241 = sext i32 %idx.1 to i64, !dbg !3195
  %arrayidx242 = getelementptr inbounds i32, i32* %95, i64 %idxprom241, !dbg !3195
  store i32 %92, i32* %arrayidx242, align 4, !dbg !3196
  br i1 %tobool212, label %cond.false245, label %cond.end247, !dbg !3197

cond.false245:                                    ; preds = %cond.end237
  %96 = load i32, i32* %num_bbs, align 4, !dbg !3198
  call void @llvm.dbg.value(metadata i32 %96, metadata !2979, metadata !DIExpression()), !dbg !3102
  %inc246 = add nsw i32 %96, 1, !dbg !3198
  call void @llvm.dbg.value(metadata i32 %inc246, metadata !2979, metadata !DIExpression()), !dbg !3102
  store i32 %inc246, i32* %num_bbs, align 4, !dbg !3198
  br label %cond.end247, !dbg !3197

cond.end247:                                      ; preds = %cond.end237, %cond.false245
  %cond248 = phi i32 [ %96, %cond.false245 ], [ 0, %cond.end237 ], !dbg !3197
  %97 = load i32*, i32** @block_to_bb, align 8, !dbg !3199
  %arrayidx250 = getelementptr inbounds i32, i32* %97, i64 %idxprom226, !dbg !3199
  store i32 %cond248, i32* %arrayidx250, align 4, !dbg !3200
  %98 = load i32, i32* @nr_regions, align 4, !dbg !3201
  %99 = load i32*, i32** @containing_rgn, align 8, !dbg !3202
  %arrayidx252 = getelementptr inbounds i32, i32* %99, i64 %idxprom226, !dbg !3202
  store i32 %98, i32* %arrayidx252, align 4, !dbg !3203
  br i1 %tobool212, label %if.end272, label %if.then254, !dbg !3204

if.then254:                                       ; preds = %cond.end247
  %100 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3205
  %101 = load i32, i32* @nr_regions, align 4, !dbg !3205
  %idxprom255 = sext i32 %101 to i64, !dbg !3205
  %rgn_blocks257 = getelementptr inbounds %struct.region, %struct.region* %100, i64 %idxprom255, i32 1, !dbg !3205
  store i32 %idx.1, i32* %rgn_blocks257, align 4, !dbg !3208
  %102 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3209
  %103 = load i32, i32* @nr_regions, align 4, !dbg !3209
  %idxprom258 = sext i32 %103 to i64, !dbg !3209
  %rgn_nr_blocks260 = getelementptr inbounds %struct.region, %struct.region* %102, i64 %idxprom258, i32 0, !dbg !3209
  store i32 1, i32* %rgn_nr_blocks260, align 4, !dbg !3210
  %104 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3211
  %105 = load i32, i32* @nr_regions, align 4, !dbg !3211
  %idxprom261 = sext i32 %105 to i64, !dbg !3211
  %dont_calc_deps263 = getelementptr inbounds %struct.region, %struct.region* %104, i64 %idxprom261, i32 2, !dbg !3211
  %bf.load264 = load i8, i8* %dont_calc_deps263, align 4, !dbg !3212
  %bf.clear265 = and i8 %bf.load264, -2, !dbg !3212
  store i8 %bf.clear265, i8* %dont_calc_deps263, align 4, !dbg !3212
  %106 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3213
  %107 = load i32, i32* @nr_regions, align 4, !dbg !3213
  %idxprom266 = sext i32 %107 to i64, !dbg !3213
  %has_real_ebb268 = getelementptr inbounds %struct.region, %struct.region* %106, i64 %idxprom266, i32 2, !dbg !3213
  %bf.load269 = load i8, i8* %has_real_ebb268, align 4, !dbg !3214
  %bf.clear270 = and i8 %bf.load269, -3, !dbg !3214
  store i8 %bf.clear270, i8* %has_real_ebb268, align 4, !dbg !3214
  %108 = load i32, i32* @nr_regions, align 4, !dbg !3215
  %inc271 = add nsw i32 %108, 1, !dbg !3215
  store i32 %inc271, i32* @nr_regions, align 4, !dbg !3215
  br label %if.end272, !dbg !3216

if.end272:                                        ; preds = %cond.end247, %if.then254
  %inc273 = add nsw i32 %idx.1, 1, !dbg !3217
  call void @llvm.dbg.value(metadata i32 %inc273, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #7, !dbg !3218
  %109 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3218
  %cfg276 = getelementptr inbounds %struct.function, %struct.function* %109, i64 0, i32 1, !dbg !3218
  %110 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg276, align 8, !dbg !3218
  %x_basic_block_info277 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %110, i64 0, i32 2, !dbg !3218
  %111 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info277, align 8, !dbg !3218
  %tobool278 = icmp eq %struct.VEC_basic_block_gc* %111, null, !dbg !3218
  br i1 %tobool278, label %cond.end285, label %cond.true279, !dbg !3218

cond.true279:                                     ; preds = %if.end272
  %base283 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %111, i64 0, i32 0, !dbg !3218
  br label %cond.end285, !dbg !3218

cond.end285:                                      ; preds = %if.end272, %cond.true279
  %cond286 = phi %struct.VEC_basic_block_base* [ %base283, %cond.true279 ], [ null, %if.end272 ], !dbg !3218
  %call287 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond286, i32 %92) #8, !dbg !3218
  %succs288 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call287, i64 0, i32 1, !dbg !3218
  %call289 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs288) #8, !dbg !3218
  %112 = extractvalue { i32, %struct.VEC_edge_gc** } %call289, 0, !dbg !3218
  store i32 %112, i32* %57, align 8, !dbg !3218
  %113 = extractvalue { i32, %struct.VEC_edge_gc** } %call289, 1, !dbg !3218
  store %struct.VEC_edge_gc** %113, %struct.VEC_edge_gc*** %58, align 8, !dbg !3218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %56, i64 16, i1 false), !dbg !3218
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #7, !dbg !3218
  br label %for.cond290, !dbg !3218

for.cond290:                                      ; preds = %for.inc307, %cond.end285
  %114 = load i32, i32* %54, align 8, !dbg !3219
  %115 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %55, align 8, !dbg !3219
  call void @llvm.dbg.value(metadata %struct.edge_def** %e132, metadata !2975, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  %call291 = call fastcc zeroext i8 @ei_cond(i32 %114, %struct.VEC_edge_gc** %115, %struct.edge_def** nonnull %e132) #8, !dbg !3219
  %tobool292 = icmp eq i8 %call291, 0, !dbg !3218
  br i1 %tobool292, label %for.inc310.loopexit, label %for.body293, !dbg !3218

for.body293:                                      ; preds = %for.cond290
  %116 = load %struct.edge_def*, %struct.edge_def** %e132, align 8, !dbg !3221
  call void @llvm.dbg.value(metadata %struct.edge_def* %116, metadata !2975, metadata !DIExpression()), !dbg !3102
  %dest294 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %116, i64 0, i32 1, !dbg !3223
  %117 = load %struct.basic_block_def*, %struct.basic_block_def** %dest294, align 8, !dbg !3223
  %118 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3224
  %cfg296 = getelementptr inbounds %struct.function, %struct.function* %118, i64 0, i32 1, !dbg !3224
  %119 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg296, align 8, !dbg !3224
  %x_exit_block_ptr297 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %119, i64 0, i32 1, !dbg !3224
  %120 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr297, align 8, !dbg !3224
  %cmp298 = icmp eq %struct.basic_block_def* %117, %120, !dbg !3225
  br i1 %cmp298, label %for.inc307, label %if.then300, !dbg !3226

if.then300:                                       ; preds = %for.body293
  call void @llvm.dbg.value(metadata %struct.edge_def* %116, metadata !2975, metadata !DIExpression()), !dbg !3102
  %index302 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %117, i64 0, i32 9, !dbg !3227
  %121 = load i32, i32* %index302, align 8, !dbg !3227
  %idxprom303 = sext i32 %121 to i64, !dbg !3228
  %arrayidx304 = getelementptr inbounds i32, i32* %degree, i64 %idxprom303, !dbg !3228
  %122 = load i32, i32* %arrayidx304, align 4, !dbg !3229
  %dec305 = add nsw i32 %122, -1, !dbg !3229
  store i32 %dec305, i32* %arrayidx304, align 4, !dbg !3229
  br label %for.inc307, !dbg !3228

for.inc307:                                       ; preds = %for.body293, %if.then300
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei133, metadata !2978, metadata !DIExpression(DW_OP_deref)), !dbg !3102
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei133) #8, !dbg !3219
  br label %for.cond290, !dbg !3219, !llvm.loop !3230

for.inc310.loopexit:                              ; preds = %for.cond290
  br label %for.inc310, !dbg !3232

for.inc310:                                       ; preds = %for.inc310.loopexit, %for.body222
  %idx.2 = phi i32 [ %idx.1, %for.body222 ], [ %inc273, %for.inc310.loopexit ], !dbg !3102
  call void @llvm.dbg.value(metadata i32 %idx.2, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 undef, metadata !2980, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3102
  br label %for.cond219, !dbg !3232, !llvm.loop !3233

for.end312:                                       ; preds = %for.cond219
  %idx.1.lcssa = phi i32 [ %idx.1, %for.cond219 ], !dbg !3102
  call void @llvm.dbg.value(metadata i32 %idx.1.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.1.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.1.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  br i1 %tobool212, label %if.then314, label %if.end319, !dbg !3235

if.then314:                                       ; preds = %for.end312
  %123 = load i32, i32* %num_bbs, align 4, !dbg !3236
  call void @llvm.dbg.value(metadata i32 %123, metadata !2979, metadata !DIExpression()), !dbg !3102
  %124 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3239
  %125 = load i32, i32* @nr_regions, align 4, !dbg !3239
  %idxprom315 = sext i32 %125 to i64, !dbg !3239
  %rgn_nr_blocks317 = getelementptr inbounds %struct.region, %struct.region* %124, i64 %idxprom315, i32 0, !dbg !3239
  store i32 %123, i32* %rgn_nr_blocks317, align 4, !dbg !3240
  %126 = load i32, i32* @nr_regions, align 4, !dbg !3241
  %inc318 = add nsw i32 %126, 1, !dbg !3241
  store i32 %inc318, i32* @nr_regions, align 4, !dbg !3241
  br label %if.end319, !dbg !3242

if.end319:                                        ; preds = %for.end312, %if.then314
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #7, !dbg !3243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #7, !dbg !3243
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7, !dbg !3243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7, !dbg !3243
  br label %for.inc321, !dbg !3244

for.inc321:                                       ; preds = %for.body123, %if.end319
  %idx.3 = phi i32 [ %idx.1.lcssa, %if.end319 ], [ %idx.0, %for.body123 ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.3, metadata !2944, metadata !DIExpression()), !dbg !2996
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3245
  call void @llvm.dbg.value(metadata i32 undef, metadata !2942, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2996
  br label %for.cond120, !dbg !3246, !llvm.loop !3247

for.end323:                                       ; preds = %for.cond120
  %idx.0.lcssa = phi i32 [ %idx.0, %for.cond120 ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.0.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.0.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %idx.0.lcssa, metadata !2944, metadata !DIExpression()), !dbg !2996
  %127 = load i32, i32* @sched_verbose, align 4, !dbg !3249
  %cmp324 = icmp sgt i32 %127, 5, !dbg !3250
  br i1 %cmp324, label %if.then326, label %if.end328, !dbg !3251

if.then326:                                       ; preds = %for.end323
  %128 = bitcast i32** %s2 to i8*, !dbg !3252
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #7, !dbg !3252
  call void @llvm.dbg.value(metadata i32** %s2, metadata !2992, metadata !DIExpression(DW_OP_deref)), !dbg !3253
  %call327 = call fastcc i32 @gather_region_statistics(i32** nonnull %s2) #8, !dbg !3254
  call void @llvm.dbg.value(metadata i32 %call327, metadata !2995, metadata !DIExpression()), !dbg !3253
  %129 = load i32*, i32** %s1, align 8, !dbg !3255
  call void @llvm.dbg.value(metadata i32* %129, metadata !2967, metadata !DIExpression()), !dbg !3094
  %130 = load i32*, i32** %s2, align 8, !dbg !3256
  call void @llvm.dbg.value(metadata i32* %130, metadata !2992, metadata !DIExpression()), !dbg !3253
  call fastcc void @print_region_statistics(i32* %129, i32 %s1_sz.0, i32* %130, i32 %call327) #8, !dbg !3257
  %131 = bitcast i32** %s1 to i8**, !dbg !3258
  %132 = load i8*, i8** %131, align 8, !dbg !3258
  call void @free(i8* %132) #6, !dbg !3259
  %133 = bitcast i32** %s2 to i8**, !dbg !3260
  %134 = load i8*, i8** %133, align 8, !dbg !3260
  call void @free(i8* %134) #6, !dbg !3261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #7, !dbg !3262
  br label %if.end328, !dbg !3263

if.end328:                                        ; preds = %if.then326, %for.end323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7, !dbg !3264
  br label %if.end329, !dbg !3265

if.end329:                                        ; preds = %if.end108, %if.end328
  %idx.4 = phi i32 [ %0, %if.end108 ], [ %idx.0.lcssa, %if.end328 ], !dbg !3266
  call void @llvm.dbg.value(metadata i32 %idx.4, metadata !2944, metadata !DIExpression()), !dbg !2996
  call void @free(i8* %call8) #6, !dbg !3267
  call void @free(i8* %call) #6, !dbg !3268
  store i32 %idx.4, i32* %idxp, align 4, !dbg !3269
  ret void, !dbg !3270
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i32 @post_order_compute(i32*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !3271 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !3275, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !3276, metadata !DIExpression()), !dbg !3280
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !3281
  %0 = load i8*, i8** %popcount, align 8, !dbg !3281
  %tobool = icmp eq i8* %0, null, !dbg !3282
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !3283

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !3284
  %.pre2 = zext i32 %.pre to i64, !dbg !3285
  %.pre3 = shl i64 1, %.pre2, !dbg !3285
  %.pre4 = lshr i32 %bitno, 6, !dbg !3286
  %.pre5 = zext i32 %.pre4 to i64, !dbg !3287
  br label %if.end7, !dbg !3283

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !3288
  %idxprom = zext i32 %div to i64, !dbg !3288
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !3288
  %1 = load i64, i64* %arrayidx, align 8, !dbg !3288
  %rem = and i32 %bitno, 63, !dbg !3288
  %sh_prom = zext i32 %rem to i64, !dbg !3288
  %2 = shl i64 1, %sh_prom, !dbg !3289
  %3 = and i64 %1, %2, !dbg !3289
  %tobool1 = icmp eq i64 %3, 0, !dbg !3289
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !3291

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !3292
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !3293
  %inc = add i8 %4, 1, !dbg !3293
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !3293
  br label %if.end7, !dbg !3292

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !3287
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !3285
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !3287
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !3294
  %or = or i64 %5, %shl.pre-phi, !dbg !3294
  store i64 %or, i64* %arrayidx13, align 8, !dbg !3294
  ret void, !dbg !3295
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gather_region_statistics(i32** %rsp) unnamed_addr #5 !dbg !3296 {
entry:
  call void @llvm.dbg.value(metadata i32** %rsp, metadata !3301, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32* null, metadata !3303, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3302, metadata !DIExpression()), !dbg !3309
  br label %for.cond, !dbg !3310

for.cond:                                         ; preds = %if.end, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %if.end ], [ 0, %entry ], !dbg !3309
  %0 = phi i8* [ %9, %if.end ], [ null, %entry ], !dbg !3309
  %1 = phi i8* [ %10, %if.end ], [ null, %entry ], !dbg !3309
  %a.0 = phi i32* [ %a.1, %if.end ], [ null, %entry ], !dbg !3309
  %a_sz.0 = phi i32 [ %a_sz.2, %if.end ], [ 0, %entry ], !dbg !3309
  call void @llvm.dbg.value(metadata i32 %a_sz.0, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3302, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32* %a.0, metadata !3303, metadata !DIExpression()), !dbg !3309
  %2 = load i32, i32* @nr_regions, align 4, !dbg !3311
  %3 = sext i32 %2 to i64, !dbg !3312
  %cmp = icmp slt i64 %indvars.iv1, %3, !dbg !3312
  br i1 %cmp, label %for.body, label %for.end, !dbg !3313

for.body:                                         ; preds = %for.cond
  %4 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !3314
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %4, i64 %indvars.iv1, i32 0, !dbg !3314
  %5 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !3314
  call void @llvm.dbg.value(metadata i32 %5, metadata !3305, metadata !DIExpression()), !dbg !3315
  %cmp1 = icmp sgt i32 %5, 0, !dbg !3316
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !3316

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3316
  br label %cond.end, !dbg !3316

cond.end:                                         ; preds = %for.body, %cond.true
  %cmp2 = icmp sgt i32 %5, %a_sz.0, !dbg !3317
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3319

if.then:                                          ; preds = %cond.end
  %conv = sext i32 %5 to i64, !dbg !3320
  %mul = shl nsw i64 %conv, 2, !dbg !3320
  %call = tail call i8* @xrealloc(i8* %1, i64 %mul) #6, !dbg !3320
  %6 = bitcast i8* %call to i32*, !dbg !3320
  call void @llvm.dbg.value(metadata i32* %6, metadata !3303, metadata !DIExpression()), !dbg !3309
  %7 = sext i32 %a_sz.0 to i64, !dbg !3322
  %sext = sext i32 %5 to i64
  br label %do.body, !dbg !3322

do.body:                                          ; preds = %do.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %do.body ], [ %7, %if.then ], !dbg !3309
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3304, metadata !DIExpression()), !dbg !3309
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !3323
  call void @llvm.dbg.value(metadata i32 undef, metadata !3304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3309
  %arrayidx4 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv, !dbg !3324
  store i32 0, i32* %arrayidx4, align 4, !dbg !3325
  %8 = icmp eq i64 %indvars.iv.next, %sext
  br i1 %8, label %if.end.loopexit, label %do.body, !dbg !3324, !llvm.loop !3326

if.end.loopexit:                                  ; preds = %do.body
  br label %if.end, !dbg !3328

if.end:                                           ; preds = %if.end.loopexit, %cond.end
  %9 = phi i8* [ %0, %cond.end ], [ %call, %if.end.loopexit ], !dbg !3309
  %10 = phi i8* [ %1, %cond.end ], [ %call, %if.end.loopexit ], !dbg !3309
  %a.1 = phi i32* [ %a.0, %cond.end ], [ %6, %if.end.loopexit ], !dbg !3309
  %a_sz.2 = phi i32 [ %a_sz.0, %cond.end ], [ %5, %if.end.loopexit ], !dbg !3309
  call void @llvm.dbg.value(metadata i32 %a_sz.2, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32* %a.1, metadata !3303, metadata !DIExpression()), !dbg !3309
  %sub = add nsw i32 %5, -1, !dbg !3328
  %idxprom7 = sext i32 %sub to i64, !dbg !3329
  %arrayidx8 = getelementptr inbounds i32, i32* %a.1, i64 %idxprom7, !dbg !3329
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !3330
  %inc9 = add nsw i32 %11, 1, !dbg !3330
  store i32 %inc9, i32* %arrayidx8, align 4, !dbg !3330
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3331
  call void @llvm.dbg.value(metadata i32 undef, metadata !3302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3309
  br label %for.cond, !dbg !3332, !llvm.loop !3333

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8* [ %0, %for.cond ], !dbg !3309
  %a_sz.0.lcssa = phi i32 [ %a_sz.0, %for.cond ], !dbg !3309
  call void @llvm.dbg.value(metadata i32 %a_sz.0.lcssa, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 %a_sz.0.lcssa, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 %a_sz.0.lcssa, metadata !3304, metadata !DIExpression()), !dbg !3309
  %12 = bitcast i32** %rsp to i8**, !dbg !3335
  store i8* %.lcssa, i8** %12, align 8, !dbg !3335
  ret i32 %a_sz.0.lcssa, !dbg !3336
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @too_large(i32 %block, i32* %num_bbs, i32* %num_insns) unnamed_addr #5 !dbg !3337 {
entry:
  call void @llvm.dbg.value(metadata i32 %block, metadata !3341, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !3342, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !3343, metadata !DIExpression()), !dbg !3344
  %0 = load i32, i32* %num_bbs, align 4, !dbg !3345
  %inc = add nsw i32 %0, 1, !dbg !3345
  store i32 %inc, i32* %num_bbs, align 4, !dbg !3345
  %1 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !3346
  %estimate_number_of_insns = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %1, i64 0, i32 2, !dbg !3347
  %2 = load i32 (%struct.basic_block_def*)*, i32 (%struct.basic_block_def*)** %estimate_number_of_insns, align 8, !dbg !3347
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3348
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3348
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3348
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !3348
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3348
  %tobool = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !3348
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3348

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !3348
  br label %cond.end, !dbg !3348

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3348
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %block) #8, !dbg !3348
  %call4 = tail call i32 %2(%struct.basic_block_def* %call) #6, !dbg !3346
  %6 = load i32, i32* %num_insns, align 4, !dbg !3349
  %add = add nsw i32 %6, %call4, !dbg !3349
  store i32 %add, i32* %num_insns, align 4, !dbg !3349
  %7 = load i32, i32* %num_bbs, align 4, !dbg !3350
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3351
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 77, i32 1, !dbg !3351
  %9 = load i32, i32* %value, align 8, !dbg !3351
  %cmp = icmp sgt i32 %7, %9, !dbg !3352
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3353

lor.rhs:                                          ; preds = %cond.end
  %value6 = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 78, i32 1, !dbg !3354
  %10 = load i32, i32* %value6, align 8, !dbg !3354
  %cmp7 = icmp sgt i32 %add, %10, !dbg !3355
  %phitmp = zext i1 %cmp7 to i8, !dbg !3353
  br label %lor.end, !dbg !3353

lor.end:                                          ; preds = %lor.rhs, %cond.end
  %11 = phi i8 [ 1, %cond.end ], [ %phitmp, %lor.rhs ]
  ret i8 %11, !dbg !3356
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_region_statistics(i32* %s1, i32 %s1_sz, i32* %s2, i32 %s2_sz) unnamed_addr #5 !dbg !3357 {
entry:
  call void @llvm.dbg.value(metadata i32* %s1, metadata !3361, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 %s1_sz, metadata !3362, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32* %s2, metadata !3363, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 %s2_sz, metadata !3364, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 1, metadata !3365, metadata !DIExpression()), !dbg !3371
  br label %for.cond, !dbg !3372

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc.pre-phi, %cleanup ], !dbg !3373
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3365, metadata !DIExpression()), !dbg !3371
  %cmp = icmp slt i32 %i.0, %s2_sz, !dbg !3374
  br i1 %cmp, label %for.body, label %for.end, !dbg !3375

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64, !dbg !3376
  %arrayidx = getelementptr inbounds i32, i32* %s2, i64 %idxprom, !dbg !3376
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %0, metadata !3370, metadata !DIExpression()), !dbg !3377
  %cmp1 = icmp eq i32 %0, 0, !dbg !3378
  br i1 %cmp1, label %for.body.cleanup_crit_edge, label %if.end, !dbg !3380

for.body.cleanup_crit_edge:                       ; preds = %for.body
  %.pre = add nuw nsw i32 %i.0, 1, !dbg !3381
  br label %cleanup, !dbg !3380

if.end:                                           ; preds = %for.body
  %cmp2 = icmp slt i32 %i.0, %s1_sz, !dbg !3382
  br i1 %cmp2, label %if.else, label %if.end6, !dbg !3384

if.else:                                          ; preds = %if.end
  %arrayidx5 = getelementptr inbounds i32, i32* %s1, i64 %idxprom, !dbg !3385
  %1 = load i32, i32* %arrayidx5, align 4, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %1, metadata !3366, metadata !DIExpression()), !dbg !3377
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.else
  %n1.0 = phi i32 [ %1, %if.else ], [ 0, %if.end ], !dbg !3386
  call void @llvm.dbg.value(metadata i32 %n1.0, metadata !3366, metadata !DIExpression()), !dbg !3377
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3387
  %add = add nuw nsw i32 %i.0, 1, !dbg !3388
  %sub = sub nsw i32 %0, %n1.0, !dbg !3389
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.49, i64 0, i64 0), i32 %add, i32 %n1.0, i32 %sub) #6, !dbg !3390
  br label %cleanup, !dbg !3391

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end6
  %inc.pre-phi = phi i32 [ %.pre, %for.body.cleanup_crit_edge ], [ %add, %if.end6 ], !dbg !3381
  call void @llvm.dbg.value(metadata i32 %inc.pre-phi, metadata !3365, metadata !DIExpression()), !dbg !3371
  br label %for.cond, !dbg !3392, !llvm.loop !3393

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3395
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_candidate(i32 %i) local_unnamed_addr #5 !dbg !3396 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !3398, metadata !DIExpression()), !dbg !3410
  %0 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !3411
  %idxprom = sext i32 %i to i64, !dbg !3411
  %is_valid = getelementptr inbounds %struct.candidate, %struct.candidate* %0, i64 %idxprom, i32 0, !dbg !3413
  %1 = load i8, i8* %is_valid, align 8, !dbg !3413
  %tobool = icmp eq i8 %1, 0, !dbg !3411
  br i1 %tobool, label %if.end44, label %if.end, !dbg !3414

if.end:                                           ; preds = %entry
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %0, i64 %idxprom, i32 1, !dbg !3415
  %2 = load i8, i8* %is_speculative, align 1, !dbg !3415
  %tobool3 = icmp eq i8 %2, 0, !dbg !3416
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3417
  %4 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3417
  %5 = load i32*, i32** @ebb_head, align 8, !dbg !3417
  %arrayidx6 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !3417
  %6 = load i32, i32* %arrayidx6, align 4, !dbg !3417
  %idxprom7 = sext i32 %6 to i64, !dbg !3417
  %arrayidx8 = getelementptr inbounds i32, i32* %4, i64 %idxprom7, !dbg !3417
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !3417
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !3418

if.then4:                                         ; preds = %if.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0), i32 %7, i32 %i) #6, !dbg !3419
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3420
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3421
  call void @llvm.dbg.value(metadata i32 0, metadata !3399, metadata !DIExpression()), !dbg !3422
  br label %for.cond, !dbg !3423

for.cond:                                         ; preds = %for.body, %if.then4
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %if.then4 ], !dbg !3424
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3399, metadata !DIExpression()), !dbg !3422
  %9 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !3425
  %nr_members = getelementptr inbounds %struct.candidate, %struct.candidate* %9, i64 %idxprom, i32 3, i32 1, !dbg !3426
  %10 = load i32, i32* %nr_members, align 8, !dbg !3426
  %11 = sext i32 %10 to i64, !dbg !3427
  %cmp = icmp slt i64 %indvars.iv1, %11, !dbg !3427
  br i1 %cmp, label %for.body, label %for.end, !dbg !3428

for.body:                                         ; preds = %for.cond
  %first_member = getelementptr inbounds %struct.candidate, %struct.candidate* %9, i64 %idxprom, i32 3, i32 0, !dbg !3429
  %12 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member, align 8, !dbg !3429
  %arrayidx16 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %12, i64 %indvars.iv1, !dbg !3430
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx16, align 8, !dbg !3430
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 9, !dbg !3431
  %14 = load i32, i32* %index, align 8, !dbg !3431
  call void @llvm.dbg.value(metadata i32 %14, metadata !3402, metadata !DIExpression()), !dbg !3432
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3433
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i32 %14) #6, !dbg !3434
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3435
  call void @llvm.dbg.value(metadata i32 undef, metadata !3399, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3422
  br label %for.cond, !dbg !3436, !llvm.loop !3437

for.end:                                          ; preds = %for.cond
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3439
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3440
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3441
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !3442
  call void @llvm.dbg.value(metadata i32 0, metadata !3399, metadata !DIExpression()), !dbg !3422
  br label %for.cond20, !dbg !3443

for.cond20:                                       ; preds = %for.body25, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body25 ], [ 0, %for.end ], !dbg !3444
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3399, metadata !DIExpression()), !dbg !3422
  %18 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !3445
  %nr_members23 = getelementptr inbounds %struct.candidate, %struct.candidate* %18, i64 %idxprom, i32 4, i32 1, !dbg !3446
  %19 = load i32, i32* %nr_members23, align 8, !dbg !3446
  %20 = sext i32 %19 to i64, !dbg !3447
  %cmp24 = icmp slt i64 %indvars.iv, %20, !dbg !3447
  br i1 %cmp24, label %for.body25, label %for.end37, !dbg !3448

for.body25:                                       ; preds = %for.cond20
  %first_member30 = getelementptr inbounds %struct.candidate, %struct.candidate* %18, i64 %idxprom, i32 4, i32 0, !dbg !3449
  %21 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member30, align 8, !dbg !3449
  %arrayidx32 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %21, i64 %indvars.iv, !dbg !3450
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx32, align 8, !dbg !3450
  %index33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !3451
  %23 = load i32, i32* %index33, align 8, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %23, metadata !3406, metadata !DIExpression()), !dbg !3452
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3453
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i32 %23) #6, !dbg !3454
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3455
  call void @llvm.dbg.value(metadata i32 undef, metadata !3399, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3422
  br label %for.cond20, !dbg !3456, !llvm.loop !3457

for.end37:                                        ; preds = %for.cond20
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3459
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3460
  br label %if.end44, !dbg !3461

if.else:                                          ; preds = %if.end
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i32 %7) #6, !dbg !3462
  br label %if.end44

if.end44:                                         ; preds = %entry, %if.else, %for.end37
  ret void, !dbg !3464
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_candidates(i32 %trg) local_unnamed_addr #5 !dbg !3465 {
entry:
  call void @llvm.dbg.value(metadata i32 %trg, metadata !3467, metadata !DIExpression()), !dbg !3469
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3470
  %1 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3471
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !3471
  %idxprom = sext i32 %trg to i64, !dbg !3471
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !3471
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3471
  %idxprom1 = sext i32 %3 to i64, !dbg !3471
  %arrayidx2 = getelementptr inbounds i32, i32* %1, i64 %idxprom1, !dbg !3471
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !3471
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0), i32 %4, i32 %trg) #6, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %trg, metadata !3468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3469
  br label %for.cond, !dbg !3473

for.cond:                                         ; preds = %for.body, %entry
  %i.0.in = phi i32 [ %trg, %entry ], [ %i.0, %for.body ]
  %i.0 = add nsw i32 %i.0.in, 1, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3468, metadata !DIExpression()), !dbg !3469
  %5 = load i32, i32* @current_nr_blocks, align 4, !dbg !3476
  %cmp = icmp slt i32 %i.0, %5, !dbg !3478
  br i1 %cmp, label %for.body, label %for.end, !dbg !3479

for.body:                                         ; preds = %for.cond
  tail call void @debug_candidate(i32 %i.0) #8, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3469
  br label %for.cond, !dbg !3481, !llvm.loop !3482

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3484
}

; Function Attrs: nounwind uwtable
define dso_local i32 @contributes_to_priority(%struct.rtx_def* %next, %struct.rtx_def* %insn) #5 !dbg !3485 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next, metadata !3487, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3488, metadata !DIExpression()), !dbg !3489
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !3490
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 1, !dbg !3490
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3490
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3490
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !3490
  %2 = load i32, i32* %index, align 8, !dbg !3490
  %idxprom = sext i32 %2 to i64, !dbg !3490
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !3490
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !3490
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3491
  %rt_bb5 = bitcast %struct.object_block** %arrayidx4 to %struct.basic_block_def**, !dbg !3491
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb5, align 8, !dbg !3491
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !3491
  %5 = load i32, i32* %index6, align 8, !dbg !3491
  %idxprom8 = sext i32 %5 to i64, !dbg !3491
  %arrayidx9 = getelementptr inbounds i32, i32* %0, i64 %idxprom8, !dbg !3491
  %6 = load i32, i32* %arrayidx9, align 4, !dbg !3491
  %cmp = icmp eq i32 %3, %6, !dbg !3492
  %conv = zext i1 %cmp to i32, !dbg !3492
  ret i32 %conv, !dbg !3493
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_rgn_sched_max_insns_priority() local_unnamed_addr #5 !dbg !3494 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.haifa_sched_info, %struct.haifa_sched_info* @rgn_sched_info, i64 0, i32 13), align 4, !dbg !3495
  ret i32 %0, !dbg !3496
}

; Function Attrs: nounwind uwtable
define dso_local void @deps_join(%struct.deps* %succ_deps, %struct.deps* %pred_deps) local_unnamed_addr #5 !dbg !3497 {
entry:
  %reg = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.deps* %succ_deps, metadata !3501, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.deps* %pred_deps, metadata !3502, metadata !DIExpression()), !dbg !3518
  %0 = bitcast i32* %reg to i8*, !dbg !3519
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3519
  %1 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !3520
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3520
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 15, !dbg !3521
  call void @llvm.dbg.value(metadata i32* %reg, metadata !3503, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3504, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* nonnull %reg_last_in_use, i32 0, i32* nonnull %reg) #8, !dbg !3521
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 14, !dbg !3522
  %reg_last1 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 14, !dbg !3522
  br label %for.cond, !dbg !3521

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %reg, metadata !3503, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3504, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %reg) #8, !dbg !3523
  %tobool = icmp eq i8 %call, 0, !dbg !3521
  br i1 %tobool, label %for.end, label %for.body, !dbg !3521

for.body:                                         ; preds = %for.cond
  %2 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !3524
  %3 = load i32, i32* %reg, align 4, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %3, metadata !3503, metadata !DIExpression()), !dbg !3518
  %idxprom = zext i32 %3 to i64, !dbg !3526
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3513, metadata !DIExpression()), !dbg !3522
  %4 = load %struct.deps_reg*, %struct.deps_reg** %reg_last1, align 8, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %3, metadata !3503, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3517, metadata !DIExpression()), !dbg !3522
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 0, !dbg !3528
  %5 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !3528
  %uses4 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 0, !dbg !3529
  %6 = load %struct.rtx_def*, %struct.rtx_def** %uses4, align 8, !dbg !3529
  %call5 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %5, %struct.rtx_def* %6) #8, !dbg !3530
  store %struct.rtx_def* %call5, %struct.rtx_def** %uses4, align 8, !dbg !3531
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 1, !dbg !3532
  %7 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !3532
  %sets7 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 1, !dbg !3533
  %8 = load %struct.rtx_def*, %struct.rtx_def** %sets7, align 8, !dbg !3533
  %call8 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %7, %struct.rtx_def* %8) #8, !dbg !3534
  store %struct.rtx_def* %call8, %struct.rtx_def** %sets7, align 8, !dbg !3535
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 2, !dbg !3536
  %9 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !3536
  %implicit_sets10 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 2, !dbg !3537
  %10 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets10, align 8, !dbg !3537
  %call11 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %9, %struct.rtx_def* %10) #8, !dbg !3538
  store %struct.rtx_def* %call11, %struct.rtx_def** %implicit_sets10, align 8, !dbg !3539
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 3, !dbg !3540
  %11 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !3540
  %clobbers13 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 3, !dbg !3541
  %12 = load %struct.rtx_def*, %struct.rtx_def** %clobbers13, align 8, !dbg !3541
  %call14 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %11, %struct.rtx_def* %12) #8, !dbg !3542
  store %struct.rtx_def* %call14, %struct.rtx_def** %clobbers13, align 8, !dbg !3543
  %uses_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 4, !dbg !3544
  %13 = load i32, i32* %uses_length, align 8, !dbg !3544
  %uses_length16 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 4, !dbg !3545
  %14 = load i32, i32* %uses_length16, align 8, !dbg !3546
  %add = add nsw i32 %14, %13, !dbg !3546
  store i32 %add, i32* %uses_length16, align 8, !dbg !3546
  %clobbers_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %2, i64 %idxprom, i32 5, !dbg !3547
  %15 = load i32, i32* %clobbers_length, align 4, !dbg !3547
  %clobbers_length17 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 5, !dbg !3548
  %16 = load i32, i32* %clobbers_length17, align 4, !dbg !3549
  %add18 = add nsw i32 %16, %15, !dbg !3549
  store i32 %add18, i32* %clobbers_length17, align 4, !dbg !3549
  call void @llvm.dbg.value(metadata i32* %reg, metadata !3503, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3504, metadata !DIExpression(DW_OP_deref)), !dbg !3518
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %reg) #8, !dbg !3523
  br label %for.cond, !dbg !3523, !llvm.loop !3550

for.end:                                          ; preds = %for.cond
  %reg_last_in_use19 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 15, !dbg !3552
  %call21 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %reg_last_in_use19, %struct.bitmap_head_def* nonnull %reg_last_in_use) #6, !dbg !3552
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 0, !dbg !3553
  %17 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_insns, align 8, !dbg !3553
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 1, !dbg !3554
  %18 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_mems, align 8, !dbg !3554
  %pending_read_insns22 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 0, !dbg !3555
  %pending_read_mems23 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 1, !dbg !3556
  call fastcc void @concat_insn_mem_list(%struct.rtx_def* %17, %struct.rtx_def* %18, %struct.rtx_def** %pending_read_insns22, %struct.rtx_def** nonnull %pending_read_mems23) #8, !dbg !3557
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 2, !dbg !3558
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_insns, align 8, !dbg !3558
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 3, !dbg !3559
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_mems, align 8, !dbg !3559
  %pending_write_insns24 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 2, !dbg !3560
  %pending_write_mems25 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 3, !dbg !3561
  call fastcc void @concat_insn_mem_list(%struct.rtx_def* %19, %struct.rtx_def* %20, %struct.rtx_def** nonnull %pending_write_insns24, %struct.rtx_def** nonnull %pending_write_mems25) #8, !dbg !3562
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 7, !dbg !3563
  %21 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !3563
  %last_pending_memory_flush26 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 7, !dbg !3564
  %22 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush26, align 8, !dbg !3564
  %call27 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %21, %struct.rtx_def* %22) #8, !dbg !3565
  store %struct.rtx_def* %call27, %struct.rtx_def** %last_pending_memory_flush26, align 8, !dbg !3566
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 4, !dbg !3567
  %23 = load i32, i32* %pending_read_list_length, align 8, !dbg !3567
  %pending_read_list_length29 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 4, !dbg !3568
  %24 = load i32, i32* %pending_read_list_length29, align 8, !dbg !3569
  %add30 = add nsw i32 %24, %23, !dbg !3569
  store i32 %add30, i32* %pending_read_list_length29, align 8, !dbg !3569
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 5, !dbg !3570
  %25 = load i32, i32* %pending_write_list_length, align 4, !dbg !3570
  %pending_write_list_length31 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 5, !dbg !3571
  %26 = load i32, i32* %pending_write_list_length31, align 4, !dbg !3572
  %add32 = add nsw i32 %26, %25, !dbg !3572
  store i32 %add32, i32* %pending_write_list_length31, align 4, !dbg !3572
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 6, !dbg !3573
  %27 = load i32, i32* %pending_flush_length, align 8, !dbg !3573
  %pending_flush_length33 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 6, !dbg !3574
  %28 = load i32, i32* %pending_flush_length33, align 8, !dbg !3575
  %add34 = add nsw i32 %28, %27, !dbg !3575
  store i32 %add34, i32* %pending_flush_length33, align 8, !dbg !3575
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 8, !dbg !3576
  %29 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call, align 8, !dbg !3576
  %last_function_call35 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 8, !dbg !3577
  %30 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call35, align 8, !dbg !3577
  %call36 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %29, %struct.rtx_def* %30) #8, !dbg !3578
  store %struct.rtx_def* %call36, %struct.rtx_def** %last_function_call35, align 8, !dbg !3579
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 9, !dbg !3580
  %31 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !3580
  %last_function_call_may_noreturn38 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 9, !dbg !3581
  %32 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call_may_noreturn38, align 8, !dbg !3581
  %call39 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %31, %struct.rtx_def* %32) #8, !dbg !3582
  store %struct.rtx_def* %call39, %struct.rtx_def** %last_function_call_may_noreturn38, align 8, !dbg !3583
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 10, !dbg !3584
  %33 = load %struct.rtx_def*, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !3584
  %sched_before_next_call41 = getelementptr inbounds %struct.deps, %struct.deps* %succ_deps, i64 0, i32 10, !dbg !3585
  %34 = load %struct.rtx_def*, %struct.rtx_def** %sched_before_next_call41, align 8, !dbg !3585
  %call42 = call fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %33, %struct.rtx_def* %34) #8, !dbg !3586
  store %struct.rtx_def* %call42, %struct.rtx_def** %sched_before_next_call41, align 8, !dbg !3587
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3588
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3588
  ret void, !dbg !3588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !3589 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3598, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !3599, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata i32 0, metadata !3600, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3601, metadata !DIExpression()), !dbg !3602
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !3603
  %1 = load i64, i64* %0, align 8, !dbg !3603
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3604
  store i64 %1, i64* %2, align 8, !dbg !3604
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !3605
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !3606
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3607
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !3610
  br label %while.body, !dbg !3610

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !3611
  br i1 %tobool, label %if.then, label %if.end, !dbg !3612

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !3613
  br label %while.end, !dbg !3615

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !3616

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !3610, !llvm.loop !3617

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !3619

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !3619
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !3621
  %7 = load i32, i32* %indx9, align 8, !dbg !3621
  %cmp11 = icmp eq i32 %7, 0, !dbg !3622
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !3623

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !3624
  %8 = load i32, i32* %indx14, align 8, !dbg !3624
  %mul = shl i32 %8, 7, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3600, metadata !DIExpression()), !dbg !3602
  br label %if.end15, !dbg !3626

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !3600, metadata !DIExpression()), !dbg !3602
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3627
  store i32 0, i32* %word_no, align 8, !dbg !3628
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !3629
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3629
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3630
  store i64 %9, i64* %bits21, align 8, !dbg !3631
  %tobool23 = icmp eq i64 %9, 0, !dbg !3632
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !3632
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %add, metadata !3600, metadata !DIExpression()), !dbg !3602
  store i32 %add, i32* %bit_no, align 4, !dbg !3634
  ret void, !dbg !3635
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3636 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3640, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3641, metadata !DIExpression()), !dbg !3645
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3646
  %0 = load i64, i64* %bits, align 8, !dbg !3646
  %tobool = icmp eq i64 %0, 0, !dbg !3647
  br i1 %tobool, label %if.end, label %next_bit, !dbg !3648

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !3649
  br label %next_bit, !dbg !3652

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !3642), !dbg !3653
  br label %while.cond, !dbg !3652

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !3654
  %and = and i64 %2, 1, !dbg !3655
  %tobool2 = icmp eq i64 %and, 0, !dbg !3656
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !3652

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !3657
  store i64 %shr, i64* %bits, align 8, !dbg !3657
  %3 = load i32, i32* %bit_no, align 4, !dbg !3659
  %add = add i32 %3, 1, !dbg !3659
  store i32 %add, i32* %bit_no, align 4, !dbg !3659
  %.pre = load i64, i64* %bits, align 8, !dbg !3654
  br label %while.cond, !dbg !3652, !llvm.loop !3660

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !3662
  %sub = add i32 %4, 63, !dbg !3663
  %div = and i32 %sub, -64, !dbg !3664
  store i32 %div, i32* %bit_no, align 4, !dbg !3665
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3666
  %5 = load i32, i32* %word_no, align 8, !dbg !3667
  %inc = add i32 %5, 1, !dbg !3667
  store i32 %inc, i32* %word_no, align 8, !dbg !3667
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3668
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3668
  br label %while.body6, !dbg !3669

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !3670

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !3671
  %cmp = icmp eq i32 %8, 2, !dbg !3672
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !3668
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !3670

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !3649
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !3649
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3649
  store i64 %10, i64* %bits, align 8, !dbg !3673
  %tobool14 = icmp eq i64 %10, 0, !dbg !3674
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !3676

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !3677
  %add17 = add i32 %11, 64, !dbg !3677
  store i32 %add17, i32* %bit_no, align 4, !dbg !3677
  %12 = load i32, i32* %word_no, align 8, !dbg !3678
  %inc19 = add i32 %12, 1, !dbg !3678
  store i32 %inc19, i32* %word_no, align 8, !dbg !3678
  br label %while.cond7, !dbg !3670, !llvm.loop !3679

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !3668
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !3681
  %14 = load i64, i64* %13, align 8, !dbg !3681
  store i64 %14, i64* %6, align 8, !dbg !3682
  %tobool24 = icmp eq i64 %14, 0, !dbg !3683
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !3685

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !3685
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !3686
  %16 = load i32, i32* %indx, align 8, !dbg !3686
  %mul28 = shl i32 %16, 7, !dbg !3687
  store i32 %mul28, i32* %bit_no, align 4, !dbg !3688
  store i32 0, i32* %word_no, align 8, !dbg !3689
  br label %while.body6, !dbg !3669, !llvm.loop !3690

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3692

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !3692

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !3645
  ret i8 %retval.0, !dbg !3692
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @concat_INSN_LIST(%struct.rtx_def* %copy, %struct.rtx_def* %old) unnamed_addr #5 !dbg !3693 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy, metadata !3697, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !3698, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !3699, metadata !DIExpression()), !dbg !3700
  br label %for.cond, !dbg !3701

for.cond:                                         ; preds = %for.body, %entry
  %new_rtx.0 = phi %struct.rtx_def* [ %old, %entry ], [ %call, %for.body ], !dbg !3700
  %copy.addr.0 = phi %struct.rtx_def* [ %copy, %entry ], [ %2, %for.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy.addr.0, metadata !3697, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !3699, metadata !DIExpression()), !dbg !3700
  %tobool = icmp eq %struct.rtx_def* %copy.addr.0, null, !dbg !3702
  br i1 %tobool, label %for.end, label %for.body, !dbg !3702

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3704
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3704
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3704
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %0, %struct.rtx_def* %new_rtx.0) #6, !dbg !3706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3699, metadata !DIExpression()), !dbg !3700
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3707
  %rt_rtx4 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3707
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3697, metadata !DIExpression()), !dbg !3700
  br label %for.cond, !dbg !3708, !llvm.loop !3709

for.end:                                          ; preds = %for.cond
  %new_rtx.0.lcssa = phi %struct.rtx_def* [ %new_rtx.0, %for.cond ], !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0.lcssa, metadata !3699, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0.lcssa, metadata !3699, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0.lcssa, metadata !3699, metadata !DIExpression()), !dbg !3700
  ret %struct.rtx_def* %new_rtx.0.lcssa, !dbg !3711
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3712 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3716, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3717, metadata !DIExpression()), !dbg !3718
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3719
  %0 = load i64, i64* %bits, align 8, !dbg !3720
  %shr = lshr i64 %0, 1, !dbg !3720
  store i64 %shr, i64* %bits, align 8, !dbg !3720
  %1 = load i32, i32* %bit_no, align 4, !dbg !3721
  %add = add i32 %1, 1, !dbg !3721
  store i32 %add, i32* %bit_no, align 4, !dbg !3721
  ret void, !dbg !3722
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @concat_insn_mem_list(%struct.rtx_def* %copy_insns, %struct.rtx_def* %copy_mems, %struct.rtx_def** %old_insns_p, %struct.rtx_def** %old_mems_p) unnamed_addr #5 !dbg !3723 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy_insns, metadata !3728, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy_mems, metadata !3729, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_insns_p, metadata !3730, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_mems_p, metadata !3731, metadata !DIExpression()), !dbg !3734
  %0 = load %struct.rtx_def*, %struct.rtx_def** %old_insns_p, align 8, !dbg !3735
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3732, metadata !DIExpression()), !dbg !3734
  %1 = load %struct.rtx_def*, %struct.rtx_def** %old_mems_p, align 8, !dbg !3736
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3733, metadata !DIExpression()), !dbg !3734
  br label %while.cond, !dbg !3737

while.cond:                                       ; preds = %while.body, %entry
  %new_insns.0 = phi %struct.rtx_def* [ %0, %entry ], [ %call, %while.body ], !dbg !3734
  %new_mems.0 = phi %struct.rtx_def* [ %1, %entry ], [ %call5, %while.body ], !dbg !3734
  %copy_mems.addr.0 = phi %struct.rtx_def* [ %copy_mems, %entry ], [ %7, %while.body ]
  %copy_insns.addr.0 = phi %struct.rtx_def* [ %copy_insns, %entry ], [ %5, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy_insns.addr.0, metadata !3728, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy_mems.addr.0, metadata !3729, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_mems.0, metadata !3733, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insns.0, metadata !3732, metadata !DIExpression()), !dbg !3734
  %tobool = icmp eq %struct.rtx_def* %copy_insns.addr.0, null, !dbg !3737
  br i1 %tobool, label %while.end, label %while.body, !dbg !3737

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy_insns.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3738
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3738
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3738
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %2, %struct.rtx_def* %new_insns.0) #6, !dbg !3740
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3732, metadata !DIExpression()), !dbg !3734
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy_mems.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3741
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3741
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3741
  %call5 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %3, %struct.rtx_def* %new_mems.0) #6, !dbg !3742
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !3733, metadata !DIExpression()), !dbg !3734
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy_insns.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3743
  %rt_rtx9 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3743
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !3743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3728, metadata !DIExpression()), !dbg !3734
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %copy_mems.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3744
  %rt_rtx13 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !3744
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !3744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !3729, metadata !DIExpression()), !dbg !3734
  br label %while.cond, !dbg !3737, !llvm.loop !3745

while.end:                                        ; preds = %while.cond
  %new_insns.0.lcssa = phi %struct.rtx_def* [ %new_insns.0, %while.cond ], !dbg !3734
  %new_mems.0.lcssa = phi %struct.rtx_def* [ %new_mems.0, %while.cond ], !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insns.0.lcssa, metadata !3732, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_mems.0.lcssa, metadata !3733, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insns.0.lcssa, metadata !3732, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_mems.0.lcssa, metadata !3733, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insns.0.lcssa, metadata !3732, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_mems.0.lcssa, metadata !3733, metadata !DIExpression()), !dbg !3734
  store %struct.rtx_def* %new_insns.0.lcssa, %struct.rtx_def** %old_insns_p, align 8, !dbg !3747
  store %struct.rtx_def* %new_mems.0.lcssa, %struct.rtx_def** %old_mems_p, align 8, !dbg !3748
  ret void, !dbg !3749
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_rgn_dependencies(i32 %from_bb) local_unnamed_addr #5 !dbg !3750 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %from_bb, metadata !3752, metadata !DIExpression()), !dbg !3759
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3760
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %from_bb, metadata !3753, metadata !DIExpression()), !dbg !3759
  %1 = bitcast %struct.rtx_def** %head to i8*, !dbg !3762
  %2 = bitcast %struct.rtx_def** %tail to i8*, !dbg !3762
  %3 = sext i32 %from_bb to i64, !dbg !3763
  br label %for.cond, !dbg !3763

for.cond:                                         ; preds = %cond.end17, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end17 ], [ %3, %entry ], !dbg !3764
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3753, metadata !DIExpression()), !dbg !3759
  %4 = load i32, i32* @current_nr_blocks, align 4, !dbg !3765
  %5 = sext i32 %4 to i64, !dbg !3766
  %cmp = icmp slt i64 %indvars.iv, %5, !dbg !3766
  br i1 %cmp, label %for.body, label %for.end, !dbg !3767

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3768
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3769
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !3769
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3769
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !3769
  %8 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3769
  %tobool = icmp eq %struct.VEC_basic_block_gc* %8, null, !dbg !3769
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3769

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %8, i64 0, i32 0, !dbg !3769
  br label %cond.end, !dbg !3769

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3769
  %9 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3769
  %10 = load i32*, i32** @ebb_head, align 8, !dbg !3769
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %indvars.iv, !dbg !3769
  %11 = load i32, i32* %arrayidx, align 4, !dbg !3769
  %idxprom4 = sext i32 %11 to i64, !dbg !3769
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 %idxprom4, !dbg !3769
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !3769
  %call6 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12) #8, !dbg !3769
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3770
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !3770
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !3770
  %x_basic_block_info9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 2, !dbg !3770
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info9, align 8, !dbg !3770
  %tobool10 = icmp eq %struct.VEC_basic_block_gc* %15, null, !dbg !3770
  br i1 %tobool10, label %cond.end17, label %cond.true11, !dbg !3770

cond.true11:                                      ; preds = %cond.end
  %base15 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %15, i64 0, i32 0, !dbg !3770
  br label %cond.end17, !dbg !3770

cond.end17:                                       ; preds = %cond.end, %cond.true11
  %cond18 = phi %struct.VEC_basic_block_base* [ %base15, %cond.true11 ], [ null, %cond.end ], !dbg !3770
  %16 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3770
  %17 = load i32*, i32** @ebb_head, align 8, !dbg !3770
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !3770
  %arrayidx20 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next, !dbg !3770
  %18 = load i32, i32* %arrayidx20, align 4, !dbg !3770
  %sub = add nsw i32 %18, -1, !dbg !3770
  %idxprom21 = sext i32 %sub to i64, !dbg !3770
  %arrayidx22 = getelementptr inbounds i32, i32* %16, i64 %idxprom21, !dbg !3770
  %19 = load i32, i32* %arrayidx22, align 4, !dbg !3770
  %call23 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond18, i32 %19) #8, !dbg !3770
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !3754, metadata !DIExpression(DW_OP_deref)), !dbg !3762
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !3758, metadata !DIExpression(DW_OP_deref)), !dbg !3762
  call void @get_ebb_head_tail(%struct.basic_block_def* %call6, %struct.basic_block_def* %call23, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !3771
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3772
  %21 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3773
  %22 = load i32*, i32** @ebb_head, align 8, !dbg !3773
  %arrayidx25 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv, !dbg !3773
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !3773
  %idxprom26 = sext i32 %23 to i64, !dbg !3773
  %arrayidx27 = getelementptr inbounds i32, i32* %21, i64 %idxprom26, !dbg !3773
  %24 = load i32, i32* %arrayidx27, align 4, !dbg !3773
  %25 = trunc i64 %indvars.iv to i32, !dbg !3774
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i32 %24, i32 %25) #6, !dbg !3774
  %26 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !3775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !3754, metadata !DIExpression()), !dbg !3762
  %27 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !3776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !3758, metadata !DIExpression()), !dbg !3762
  call void @debug_dependencies(%struct.rtx_def* %26, %struct.rtx_def* %27) #8, !dbg !3777
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3778
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3778
  call void @llvm.dbg.value(metadata i32 undef, metadata !3753, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3759
  br label %for.cond, !dbg !3779, !llvm.loop !3780

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3782
}

declare dso_local void @get_ebb_head_tail(%struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_dependencies(%struct.rtx_def* %head, %struct.rtx_def* %tail) local_unnamed_addr #5 !dbg !3783 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3785, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !3786, metadata !DIExpression()), !dbg !3801
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3802
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3802
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3802
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3788, metadata !DIExpression()), !dbg !3801
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3803
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3804
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3805
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3787, metadata !DIExpression()), !dbg !3801
  %4 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3807
  %5 = bitcast %struct._dep** %dep to i8*, !dbg !3807
  %6 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3808
  br label %for.cond, !dbg !3810

for.cond:                                         ; preds = %for.inc116, %entry
  %insn.0 = phi %struct.rtx_def* [ %head, %entry ], [ %39, %for.inc116 ], !dbg !3811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3787, metadata !DIExpression()), !dbg !3801
  %cmp = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !3812
  br i1 %cmp, label %for.end121, label %for.body, !dbg !3813

for.body:                                         ; preds = %for.cond
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3814
  %bf.load = load i32, i32* %7, align 8, !dbg !3814
  %bf.clear = and i32 %bf.load, 65535, !dbg !3814
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !3814
  br i1 %cmp2, label %if.end33, label %lor.lhs.false, !dbg !3814

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !3814
  br i1 %cmp5, label %if.end33, label %lor.lhs.false6, !dbg !3814

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !3814
  br i1 %cmp9, label %if.end33, label %lor.lhs.false10, !dbg !3814

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !3814
  br i1 %cmp13, label %if.end33, label %if.then, !dbg !3815

if.then:                                          ; preds = %lor.lhs.false10
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3816
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3817
  %rt_int = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !3817
  %9 = load i32, i32* %rt_int, align 8, !dbg !3817
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i32 %9) #6, !dbg !3818
  %bf.load18 = load i32, i32* %7, align 8, !dbg !3819
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !3819
  %cmp20 = icmp eq i32 %bf.clear19, 13, !dbg !3819
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !3821

if.then21:                                        ; preds = %if.then
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3822
  %10 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 0, i64 0, !dbg !3822
  %rt_int25 = bitcast %union.rtunion_def* %10 to i32*, !dbg !3822
  %11 = load i32, i32* %rt_int25, align 8, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %11, metadata !3789, metadata !DIExpression()), !dbg !3824
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3825
  %idxprom = sext i32 %11 to i64, !dbg !3826
  %arrayidx26 = getelementptr inbounds [13 x i8*], [13 x i8*]* @note_insn_name, i64 0, i64 %idxprom, !dbg !3826
  %13 = load i8*, i8** %arrayidx26, align 8, !dbg !3826
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8* %13) #6, !dbg !3827
  br label %for.inc116, !dbg !3828

if.else:                                          ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3829
  %idxprom30 = zext i32 %bf.clear19 to i64, !dbg !3830
  %arrayidx31 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_name, i64 0, i64 %idxprom30, !dbg !3830
  %15 = load i8*, i8** %arrayidx31, align 8, !dbg !3830
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %15) #6, !dbg !3831
  br label %for.inc116

if.end33:                                         ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3832
  %bf.clear35 = and i32 %bf.load, 268435456, !dbg !3833
  %tobool = icmp eq i32 %bf.clear35, 0, !dbg !3833
  %cond = select i1 %tobool, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0), !dbg !3833
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3834
  %rt_int39 = bitcast %union.rtunion_def* %arrayidx38 to i32*, !dbg !3834
  %17 = load i32, i32* %rt_int39, align 8, !dbg !3834
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3835
  %18 = getelementptr inbounds %union.u, %union.u* %u40, i64 1, i32 0, i32 0, i64 1, !dbg !3835
  %rt_int43 = bitcast %union.rtunion_def* %18 to i32*, !dbg !3835
  %19 = load i32, i32* %rt_int43, align 8, !dbg !3835
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !3836
  %rt_bb = bitcast %struct.object_block** %arrayidx46 to %struct.basic_block_def**, !dbg !3836
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3836
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 9, !dbg !3836
  %21 = load i32, i32* %index, align 8, !dbg !3836
  %22 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !3837
  %tobool47 = icmp eq i32 %22, 0, !dbg !3837
  br i1 %tobool47, label %cond.false, label %cond.end, !dbg !3837

cond.false:                                       ; preds = %if.end33
  %call48 = call i32 @sd_lists_size(%struct.rtx_def* %insn.0, i32 3) #6, !dbg !3838
  br label %cond.end, !dbg !3837

cond.end:                                         ; preds = %if.end33, %cond.false
  %cond49 = phi i32 [ %call48, %cond.false ], [ -1, %if.end33 ], !dbg !3837
  %call50 = call fastcc zeroext i8 @sel_sched_p() #8, !dbg !3839
  %tobool51 = icmp eq i8 %call50, 0, !dbg !3839
  br i1 %tobool51, label %cond.false68, label %cond.true52, !dbg !3839

cond.true52:                                      ; preds = %cond.end
  %23 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !3840
  %tobool53 = icmp eq i32 %23, 0, !dbg !3840
  br i1 %tobool53, label %cond.false55, label %cond.end81, !dbg !3840

cond.false55:                                     ; preds = %cond.true52
  %24 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3841
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %24, i64 0, i32 0, !dbg !3841
  %25 = load i32, i32* %rt_int39, align 8, !dbg !3841
  %call65 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %25) #8, !dbg !3841
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call65, i64 0, i32 1, !dbg !3841
  %26 = load i32, i32* %priority, align 4, !dbg !3841
  br label %cond.end81, !dbg !3840

cond.false68:                                     ; preds = %cond.end
  %27 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3842
  %base71 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %27, i64 0, i32 0, !dbg !3842
  %28 = load i32, i32* %rt_int39, align 8, !dbg !3842
  %call79 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base71, i32 %28) #8, !dbg !3842
  %priority80 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call79, i64 0, i32 1, !dbg !3842
  %29 = load i32, i32* %priority80, align 4, !dbg !3842
  br label %cond.end81, !dbg !3839

cond.end81:                                       ; preds = %cond.true52, %cond.false55, %cond.false68
  %cond82 = phi i32 [ %29, %cond.false68 ], [ %26, %cond.false55 ], [ -1, %cond.true52 ], !dbg !3839
  %call83 = call fastcc zeroext i8 @sel_sched_p() #8, !dbg !3843
  %tobool85 = icmp eq i8 %call83, 0, !dbg !3843
  br i1 %tobool85, label %cond.false93, label %cond.true86, !dbg !3843

cond.true86:                                      ; preds = %cond.end81
  %30 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !3844
  %tobool87 = icmp eq i32 %30, 0, !dbg !3844
  br i1 %tobool87, label %cond.false89, label %cond.end95, !dbg !3844

cond.false89:                                     ; preds = %cond.true86
  %call90 = call i32 @insn_cost(%struct.rtx_def* %insn.0) #6, !dbg !3845
  br label %cond.end95, !dbg !3844

cond.false93:                                     ; preds = %cond.end81
  %call94 = call i32 @insn_cost(%struct.rtx_def* %insn.0) #6, !dbg !3846
  br label %cond.end95, !dbg !3843

cond.end95:                                       ; preds = %cond.true86, %cond.false89, %cond.false93
  %cond96 = phi i32 [ %call94, %cond.false93 ], [ %call90, %cond.false89 ], [ -1, %cond.true86 ], !dbg !3843
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0), i8* %cond, i32 %17, i32 %19, i32 %21, i32 %cond49, i32 %cond82, i32 %cond96) #6, !dbg !3847
  %call98 = call fastcc i32 @recog_memoized(%struct.rtx_def* %insn.0) #8, !dbg !3848
  %cmp99 = icmp slt i32 %call98, 0, !dbg !3850
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3851
  br i1 %cmp99, label %if.then101, label %if.else103, !dbg !3852

if.then101:                                       ; preds = %cond.end95
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !3853
  br label %if.end104, !dbg !3853

if.else103:                                       ; preds = %cond.end95
  call void @print_reservation(%struct._IO_FILE* %31, %struct.rtx_def* %insn.0) #6, !dbg !3854
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then101
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3855
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !3856
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7, !dbg !3857
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !3858
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7, !dbg !3859
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn.0, i32 4) #8, !dbg !3859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %6, i64 32, i1 false), !dbg !3859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7, !dbg !3859
  br label %for.cond106, !dbg !3859

for.cond106:                                      ; preds = %for.body109, %if.end104
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3795, metadata !DIExpression(DW_OP_deref)), !dbg !3807
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !3797, metadata !DIExpression(DW_OP_deref)), !dbg !3807
  %call107 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #8, !dbg !3860
  %tobool108 = icmp eq i8 %call107, 0, !dbg !3859
  br i1 %tobool108, label %for.end, label %for.body109, !dbg !3859

for.body109:                                      ; preds = %for.cond106
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3862
  %34 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3863
  call void @llvm.dbg.value(metadata %struct._dep* %34, metadata !3797, metadata !DIExpression()), !dbg !3807
  %con = getelementptr inbounds %struct._dep, %struct._dep* %34, i64 0, i32 1, !dbg !3863
  %35 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3863
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3863
  %rt_int113 = bitcast %union.rtunion_def* %arrayidx112 to i32*, !dbg !3863
  %36 = load i32, i32* %rt_int113, align 8, !dbg !3863
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i32 %36) #6, !dbg !3864
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3795, metadata !DIExpression(DW_OP_deref)), !dbg !3807
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #8, !dbg !3860
  br label %for.cond106, !dbg !3860, !llvm.loop !3865

for.end:                                          ; preds = %for.cond106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !3867
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7, !dbg !3867
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3868
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3869
  br label %for.inc116, !dbg !3870

for.inc116:                                       ; preds = %if.then21, %if.else, %for.end
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3871
  %rt_rtx120 = bitcast %union.rtunion_def* %38 to %struct.rtx_def**, !dbg !3871
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !3871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !3787, metadata !DIExpression()), !dbg !3801
  br label %for.cond, !dbg !3872, !llvm.loop !3873

for.end121:                                       ; preds = %for.cond
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3875
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3876
  ret void, !dbg !3877
}

declare dso_local i32 @sd_lists_size(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sel_sched_p() unnamed_addr #0 !dbg !3878 {
entry:
  %0 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !3879
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %0, i64 0, i32 4, !dbg !3880
  %1 = load i32, i32* %sched_pass_id, align 8, !dbg !3880
  %cmp = icmp eq i32 %1, 4, !dbg !3881
  %conv1 = zext i1 %cmp to i8, !dbg !3879
  ret i8 %conv1, !dbg !3882
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3883 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !3939, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3940, metadata !DIExpression()), !dbg !3941
  br label %land.end, !dbg !3942

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3942
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3942
  ret %struct._haifa_insn_data* %arrayidx, !dbg !3942
}

declare dso_local i32 @insn_cost(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !3943 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3946, metadata !DIExpression()), !dbg !3947
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3948
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !3948
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !3948
  %1 = load i32, i32* %rt_int, align 8, !dbg !3948
  %cmp = icmp slt i32 %1, 0, !dbg !3950
  br i1 %cmp, label %if.then, label %if.end, !dbg !3951

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3952
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3952
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3952
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !3953
  store i32 %call, i32* %rt_int, align 8, !dbg !3954
  br label %if.end, !dbg !3955

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !3956
  ret i32 %4, !dbg !3957
}

declare dso_local void @print_reservation(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_start(%struct._sd_iterator* noalias sret %agg.result, %struct.rtx_def* %insn, i32 %types) unnamed_addr #0 !dbg !2173 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2207, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i32 %types, metadata !2208, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %agg.result, metadata !2209, metadata !DIExpression()), !dbg !3959
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 0, !dbg !3960
  store i32 %types, i32* %types1, align 8, !dbg !3961
  %insn2 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 1, !dbg !3962
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn2, align 8, !dbg !3963
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 2, !dbg !3964
  store %struct._dep_link** @sd_iterator_start.null_link, %struct._dep_link*** %linkp, align 8, !dbg !3965
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 3, !dbg !3966
  store i8 0, i8* %resolved_p, align 8, !dbg !3967
  ret void, !dbg !3968
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) unnamed_addr #0 !dbg !3969 {
entry:
  %list = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !3975, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata %struct._dep** %dep_ptr, metadata !3976, metadata !DIExpression()), !dbg !3990
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !3991
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3991
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3992
  call void @llvm.dbg.value(metadata %struct._dep_link* %1, metadata !3977, metadata !DIExpression()), !dbg !3990
  %cmp = icmp eq %struct._dep_link* %1, null, !dbg !3993
  br i1 %cmp, label %if.else, label %if.then, !dbg !3994

if.then:                                          ; preds = %entry
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !3995
  %2 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3995
  %dep = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, !dbg !3995
  store %struct._dep* %dep, %struct._dep** %dep_ptr, align 8, !dbg !3997
  br label %cleanup9, !dbg !3998

if.else:                                          ; preds = %entry
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 0, !dbg !3999
  %3 = load i32, i32* %types1, align 8, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %3, metadata !3978, metadata !DIExpression()), !dbg !4000
  %cmp2 = icmp eq i32 %3, 0, !dbg !4001
  br i1 %cmp2, label %if.end7, label %if.then3, !dbg !4002

if.then3:                                         ; preds = %if.else
  %4 = bitcast %struct._deps_list** %list to i8*, !dbg !4003
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4003
  %insn = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 1, !dbg !4004
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4004
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 3, !dbg !4005
  call void @llvm.dbg.value(metadata %struct._deps_list** %list, metadata !3981, metadata !DIExpression(DW_OP_deref)), !dbg !4006
  call void @sd_next_list(%struct.rtx_def* %5, i32* %types1, %struct._deps_list** nonnull %list, i8* nonnull %resolved_p) #6, !dbg !4007
  %6 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !4008
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !3981, metadata !DIExpression()), !dbg !4006
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %6, i64 0, i32 0, !dbg !4008
  store %struct._dep_link** %first, %struct._dep_link*** %linkp, align 8, !dbg !4009
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !3981, metadata !DIExpression()), !dbg !4006
  %tobool = icmp eq %struct._deps_list* %6, null, !dbg !4010
  br i1 %tobool, label %cleanup, label %if.then6, !dbg !4012

if.then6:                                         ; preds = %if.then3
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) #8, !dbg !4013
  br label %cleanup, !dbg !4014

cleanup:                                          ; preds = %if.then3, %if.then6
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then6 ], [ true, %if.then3 ]
  %retval.0 = phi i8 [ %call, %if.then6 ], [ undef, %if.then3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4015
  br i1 %cleanup.dest.slot.0, label %if.end7, label %cleanup9

if.end7:                                          ; preds = %if.else, %cleanup
  store %struct._dep* null, %struct._dep** %dep_ptr, align 8, !dbg !4016
  br label %cleanup9, !dbg !4017

cleanup9:                                         ; preds = %if.end7, %cleanup, %if.then
  %retval.2 = phi i8 [ 1, %if.then ], [ %retval.0, %cleanup ], [ 0, %if.end7 ], !dbg !4018
  ret i8 %retval.2, !dbg !4019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_next(%struct._sd_iterator* %it_ptr) unnamed_addr #0 !dbg !4020 {
entry:
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !4024, metadata !DIExpression()), !dbg !4025
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !4026
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !4026
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !4026
  %next = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 1, !dbg !4026
  store %struct._dep_link** %next, %struct._dep_link*** %linkp, align 8, !dbg !4027
  ret void, !dbg !4028
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sched_is_disabled_for_current_region_p() local_unnamed_addr #5 !dbg !4029 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4031, metadata !DIExpression()), !dbg !4032
  br label %for.cond, !dbg !4033

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !4035
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4031, metadata !DIExpression()), !dbg !4032
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !4036
  %1 = sext i32 %0 to i64, !dbg !4038
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !4038
  br i1 %cmp, label %for.body, label %cleanup, !dbg !4039

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4040
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4040
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4040
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !4040
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4040
  %tobool = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !4040
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4040

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !4040
  br label %cond.end, !dbg !4040

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !4040
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4040
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !4040
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %indvars.iv, !dbg !4040
  %7 = load i32, i32* %arrayidx, align 4, !dbg !4040
  %idxprom4 = sext i32 %7 to i64, !dbg !4040
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4, !dbg !4040
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !4040
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %8) #8, !dbg !4040
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 13, !dbg !4042
  %9 = load i32, i32* %flags, align 8, !dbg !4042
  %and = and i32 %9, 16, !dbg !4043
  %tobool6 = icmp eq i32 %and, 0, !dbg !4043
  br i1 %tobool6, label %cleanup, label %for.inc, !dbg !4044

for.inc:                                          ; preds = %cond.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4045
  call void @llvm.dbg.value(metadata i32 undef, metadata !4031, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4032
  br label %for.cond, !dbg !4046, !llvm.loop !4047

cleanup:                                          ; preds = %cond.end, %for.cond
  %retval.0 = phi i8 [ 0, %cond.end ], [ 1, %for.cond ], !dbg !4032
  ret i8 %retval.0, !dbg !4049
}

; Function Attrs: nounwind uwtable
define dso_local void @free_rgn_deps() local_unnamed_addr #5 !dbg !4050 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !4052, metadata !DIExpression()), !dbg !4058
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !4059
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !4059
  br label %for.cond, !dbg !4060

for.cond:                                         ; preds = %cond.end55, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end55 ], [ 0, %entry ], !dbg !4061
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4052, metadata !DIExpression()), !dbg !4058
  %2 = load i32, i32* @current_nr_blocks, align 4, !dbg !4062
  %3 = sext i32 %2 to i64, !dbg !4063
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !4063
  br i1 %cmp, label %for.body, label %for.end, !dbg !4064

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4065
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4065
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4066
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4066
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4066
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 2, !dbg !4066
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4066
  %tobool = icmp eq %struct.VEC_basic_block_gc* %6, null, !dbg !4066
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4066

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %6, i64 0, i32 0, !dbg !4066
  br label %cond.end, !dbg !4066

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !4066
  %7 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4066
  %8 = load i32*, i32** @ebb_head, align 8, !dbg !4066
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %indvars.iv, !dbg !4066
  %9 = load i32, i32* %arrayidx, align 4, !dbg !4066
  %idxprom4 = sext i32 %9 to i64, !dbg !4066
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom4, !dbg !4066
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !4066
  %call = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %10) #8, !dbg !4066
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4066
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !4066
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !4066
  %x_basic_block_info8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 2, !dbg !4066
  %13 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info8, align 8, !dbg !4066
  %tobool9 = icmp eq %struct.VEC_basic_block_gc* %13, null, !dbg !4066
  br i1 %tobool9, label %cond.end16, label %cond.true10, !dbg !4066

cond.true10:                                      ; preds = %cond.end
  %base14 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %13, i64 0, i32 0, !dbg !4066
  br label %cond.end16, !dbg !4066

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi %struct.VEC_basic_block_base* [ %base14, %cond.true10 ], [ null, %cond.end ], !dbg !4066
  %14 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4066
  %15 = load i32*, i32** @ebb_head, align 8, !dbg !4066
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4066
  %arrayidx19 = getelementptr inbounds i32, i32* %15, i64 %indvars.iv.next, !dbg !4066
  %16 = load i32, i32* %arrayidx19, align 4, !dbg !4066
  %sub = add nsw i32 %16, -1, !dbg !4066
  %idxprom20 = sext i32 %sub to i64, !dbg !4066
  %arrayidx21 = getelementptr inbounds i32, i32* %14, i64 %idxprom20, !dbg !4066
  %17 = load i32, i32* %arrayidx21, align 4, !dbg !4066
  %call22 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond17, i32 %17) #8, !dbg !4066
  %cmp23 = icmp eq %struct.basic_block_def* %call, %call22, !dbg !4066
  br i1 %cmp23, label %cond.end26, label %cond.true24, !dbg !4066

cond.true24:                                      ; preds = %cond.end16
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4066
  br label %cond.end26, !dbg !4066

cond.end26:                                       ; preds = %cond.end16, %cond.true24
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4067
  %cfg29 = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 1, !dbg !4067
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg29, align 8, !dbg !4067
  %x_basic_block_info30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i64 0, i32 2, !dbg !4067
  %20 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info30, align 8, !dbg !4067
  %tobool31 = icmp eq %struct.VEC_basic_block_gc* %20, null, !dbg !4067
  br i1 %tobool31, label %cond.end38, label %cond.true32, !dbg !4067

cond.true32:                                      ; preds = %cond.end26
  %base36 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %20, i64 0, i32 0, !dbg !4067
  br label %cond.end38, !dbg !4067

cond.end38:                                       ; preds = %cond.end26, %cond.true32
  %cond39 = phi %struct.VEC_basic_block_base* [ %base36, %cond.true32 ], [ null, %cond.end26 ], !dbg !4067
  %21 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4067
  %22 = load i32*, i32** @ebb_head, align 8, !dbg !4067
  %arrayidx41 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv, !dbg !4067
  %23 = load i32, i32* %arrayidx41, align 4, !dbg !4067
  %idxprom42 = sext i32 %23 to i64, !dbg !4067
  %arrayidx43 = getelementptr inbounds i32, i32* %21, i64 %idxprom42, !dbg !4067
  %24 = load i32, i32* %arrayidx43, align 4, !dbg !4067
  %call44 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond39, i32 %24) #8, !dbg !4067
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4068
  %cfg46 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 1, !dbg !4068
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg46, align 8, !dbg !4068
  %x_basic_block_info47 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 2, !dbg !4068
  %27 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info47, align 8, !dbg !4068
  %tobool48 = icmp eq %struct.VEC_basic_block_gc* %27, null, !dbg !4068
  br i1 %tobool48, label %cond.end55, label %cond.true49, !dbg !4068

cond.true49:                                      ; preds = %cond.end38
  %base53 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %27, i64 0, i32 0, !dbg !4068
  br label %cond.end55, !dbg !4068

cond.end55:                                       ; preds = %cond.end38, %cond.true49
  %cond56 = phi %struct.VEC_basic_block_base* [ %base53, %cond.true49 ], [ null, %cond.end38 ], !dbg !4068
  %28 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4068
  %29 = load i32*, i32** @ebb_head, align 8, !dbg !4068
  %arrayidx59 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv.next, !dbg !4068
  %30 = load i32, i32* %arrayidx59, align 4, !dbg !4068
  %sub60 = add nsw i32 %30, -1, !dbg !4068
  %idxprom61 = sext i32 %sub60 to i64, !dbg !4068
  %arrayidx62 = getelementptr inbounds i32, i32* %28, i64 %idxprom61, !dbg !4068
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !4068
  %call63 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond56, i32 %31) #8, !dbg !4068
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !4053, metadata !DIExpression(DW_OP_deref)), !dbg !4059
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4059
  call void @get_ebb_head_tail(%struct.basic_block_def* %call44, %struct.basic_block_def* %call63, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !4069
  %32 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !4053, metadata !DIExpression()), !dbg !4059
  %33 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !4057, metadata !DIExpression()), !dbg !4059
  call void @sched_free_deps(%struct.rtx_def* %32, %struct.rtx_def* %33, i8 zeroext 0) #6, !dbg !4072
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4073
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4073
  call void @llvm.dbg.value(metadata i32 undef, metadata !4052, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4058
  br label %for.cond, !dbg !4074, !llvm.loop !4075

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4077
}

declare dso_local void @sched_free_deps(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @compute_priorities() local_unnamed_addr #5 !dbg !4078 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4086
  %sched_max_insns_priority = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 13, !dbg !4087
  store i32 0, i32* %sched_max_insns_priority, align 4, !dbg !4088
  call void @llvm.dbg.value(metadata i32 0, metadata !4080, metadata !DIExpression()), !dbg !4089
  %1 = bitcast %struct.rtx_def** %head to i8*, !dbg !4090
  %2 = bitcast %struct.rtx_def** %tail to i8*, !dbg !4090
  br label %for.cond, !dbg !4091

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %entry ], !dbg !4092
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4080, metadata !DIExpression()), !dbg !4089
  %3 = load i32, i32* @current_nr_blocks, align 4, !dbg !4093
  %4 = sext i32 %3 to i64, !dbg !4094
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !4094
  br i1 %cmp, label %for.body, label %for.end, !dbg !4095

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4096
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4096
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4097
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4097
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4097
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 2, !dbg !4097
  %7 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4097
  %tobool = icmp eq %struct.VEC_basic_block_gc* %7, null, !dbg !4097
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4097

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %7, i64 0, i32 0, !dbg !4097
  br label %cond.end, !dbg !4097

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !4097
  %8 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4097
  %9 = load i32*, i32** @ebb_head, align 8, !dbg !4097
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %indvars.iv, !dbg !4097
  %10 = load i32, i32* %arrayidx, align 4, !dbg !4097
  %idxprom4 = sext i32 %10 to i64, !dbg !4097
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 %idxprom4, !dbg !4097
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !4097
  %call = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %11) #8, !dbg !4097
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4097
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !4097
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !4097
  %x_basic_block_info8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 2, !dbg !4097
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info8, align 8, !dbg !4097
  %tobool9 = icmp eq %struct.VEC_basic_block_gc* %14, null, !dbg !4097
  br i1 %tobool9, label %cond.end16, label %cond.true10, !dbg !4097

cond.true10:                                      ; preds = %cond.end
  %base14 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i64 0, i32 0, !dbg !4097
  br label %cond.end16, !dbg !4097

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi %struct.VEC_basic_block_base* [ %base14, %cond.true10 ], [ null, %cond.end ], !dbg !4097
  %15 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4097
  %16 = load i32*, i32** @ebb_head, align 8, !dbg !4097
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4097
  %arrayidx19 = getelementptr inbounds i32, i32* %16, i64 %indvars.iv.next, !dbg !4097
  %17 = load i32, i32* %arrayidx19, align 4, !dbg !4097
  %sub = add nsw i32 %17, -1, !dbg !4097
  %idxprom20 = sext i32 %sub to i64, !dbg !4097
  %arrayidx21 = getelementptr inbounds i32, i32* %15, i64 %idxprom20, !dbg !4097
  %18 = load i32, i32* %arrayidx21, align 4, !dbg !4097
  %call22 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond17, i32 %18) #8, !dbg !4097
  %cmp23 = icmp eq %struct.basic_block_def* %call, %call22, !dbg !4097
  br i1 %cmp23, label %cond.end26, label %cond.true24, !dbg !4097

cond.true24:                                      ; preds = %cond.end16
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2908, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4097
  br label %cond.end26, !dbg !4097

cond.end26:                                       ; preds = %cond.end16, %cond.true24
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4098
  %cfg29 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !4098
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg29, align 8, !dbg !4098
  %x_basic_block_info30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 2, !dbg !4098
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info30, align 8, !dbg !4098
  %tobool31 = icmp eq %struct.VEC_basic_block_gc* %21, null, !dbg !4098
  br i1 %tobool31, label %cond.end38, label %cond.true32, !dbg !4098

cond.true32:                                      ; preds = %cond.end26
  %base36 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i64 0, i32 0, !dbg !4098
  br label %cond.end38, !dbg !4098

cond.end38:                                       ; preds = %cond.end26, %cond.true32
  %cond39 = phi %struct.VEC_basic_block_base* [ %base36, %cond.true32 ], [ null, %cond.end26 ], !dbg !4098
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4098
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !4098
  %arrayidx41 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv, !dbg !4098
  %24 = load i32, i32* %arrayidx41, align 4, !dbg !4098
  %idxprom42 = sext i32 %24 to i64, !dbg !4098
  %arrayidx43 = getelementptr inbounds i32, i32* %22, i64 %idxprom42, !dbg !4098
  %25 = load i32, i32* %arrayidx43, align 4, !dbg !4098
  %call44 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond39, i32 %25) #8, !dbg !4098
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4099
  %cfg46 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !4099
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg46, align 8, !dbg !4099
  %x_basic_block_info47 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 2, !dbg !4099
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info47, align 8, !dbg !4099
  %tobool48 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !4099
  br i1 %tobool48, label %cond.end55, label %cond.true49, !dbg !4099

cond.true49:                                      ; preds = %cond.end38
  %base53 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !4099
  br label %cond.end55, !dbg !4099

cond.end55:                                       ; preds = %cond.end38, %cond.true49
  %cond56 = phi %struct.VEC_basic_block_base* [ %base53, %cond.true49 ], [ null, %cond.end38 ], !dbg !4099
  %29 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4099
  %30 = load i32*, i32** @ebb_head, align 8, !dbg !4099
  %arrayidx59 = getelementptr inbounds i32, i32* %30, i64 %indvars.iv.next, !dbg !4099
  %31 = load i32, i32* %arrayidx59, align 4, !dbg !4099
  %sub60 = add nsw i32 %31, -1, !dbg !4099
  %idxprom61 = sext i32 %sub60 to i64, !dbg !4099
  %arrayidx62 = getelementptr inbounds i32, i32* %29, i64 %idxprom61, !dbg !4099
  %32 = load i32, i32* %arrayidx62, align 4, !dbg !4099
  %call63 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond56, i32 %32) #8, !dbg !4099
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !4081, metadata !DIExpression(DW_OP_deref)), !dbg !4090
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !4085, metadata !DIExpression(DW_OP_deref)), !dbg !4090
  call void @get_ebb_head_tail(%struct.basic_block_def* %call44, %struct.basic_block_def* %call63, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !4100
  %33 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !4081, metadata !DIExpression()), !dbg !4090
  %34 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !4085, metadata !DIExpression()), !dbg !4090
  %call64 = call i32 @no_real_insns_p(%struct.rtx_def* %33, %struct.rtx_def* %34) #6, !dbg !4104
  %tobool65 = icmp eq i32 %call64, 0, !dbg !4104
  br i1 %tobool65, label %if.end, label %cleanup, !dbg !4105

if.end:                                           ; preds = %cond.end55
  %35 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !4081, metadata !DIExpression()), !dbg !4090
  %36 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !4085, metadata !DIExpression()), !dbg !4090
  %call66 = call i32 @set_priorities(%struct.rtx_def* %35, %struct.rtx_def* %36) #6, !dbg !4108
  %37 = load i32, i32* @rgn_n_insns, align 4, !dbg !4109
  %add67 = add nsw i32 %37, %call66, !dbg !4109
  store i32 %add67, i32* @rgn_n_insns, align 4, !dbg !4109
  br label %cleanup, !dbg !4110

cleanup:                                          ; preds = %cond.end55, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4110
  call void @llvm.dbg.value(metadata i32 undef, metadata !4080, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4089
  br label %for.cond, !dbg !4111, !llvm.loop !4112

for.end:                                          ; preds = %for.cond
  %38 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4114
  %sched_max_insns_priority69 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %38, i64 0, i32 13, !dbg !4115
  %39 = load i32, i32* %sched_max_insns_priority69, align 4, !dbg !4116
  %inc70 = add nsw i32 %39, 1, !dbg !4116
  store i32 %inc70, i32* %sched_max_insns_priority69, align 4, !dbg !4116
  ret void, !dbg !4117
}

declare dso_local i32 @no_real_insns_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @set_priorities(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_init(i8 zeroext %single_blocks_p) local_unnamed_addr #5 !dbg !4118 {
entry:
  call void @llvm.dbg.value(metadata i8 %single_blocks_p, metadata !4122, metadata !DIExpression()), !dbg !4123
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4124
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 81, i32 1, !dbg !4124
  %1 = load i32, i32* %value, align 8, !dbg !4124
  %div = mul nsw i32 %1, 100, !dbg !4125
  store i32 %div, i32* @min_spec_prob, align 4, !dbg !4126
  store i32 0, i32* @nr_inter, align 4, !dbg !4127
  store i32 0, i32* @nr_spec, align 4, !dbg !4128
  tail call void @extend_regions() #8, !dbg !4129
  %2 = load i32*, i32** @containing_rgn, align 8, !dbg !4130
  store i32 -1, i32* %2, align 4, !dbg !4131
  %3 = load i32*, i32** @containing_rgn, align 8, !dbg !4132
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !4132
  store i32 -1, i32* %arrayidx2, align 4, !dbg !4133
  %tobool = icmp eq i8 %single_blocks_p, 0, !dbg !4134
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4136

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4137
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4137
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4137
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 3, !dbg !4137
  %6 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4137
  %cmp = icmp ne i32 %6, 3, !dbg !4138
  %7 = load i32, i32* @flag_schedule_interblock, align 4, !dbg !4139
  %tobool5 = icmp ne i32 %7, 0, !dbg !4139
  %or.cond = and i1 %cmp, %tobool5, !dbg !4140
  br i1 %or.cond, label %lor.lhs.false6, label %if.then, !dbg !4140

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call = tail call fastcc i32 @is_cfg_nonregular() #8, !dbg !4141
  %tobool7 = icmp eq i32 %call, 0, !dbg !4141
  br i1 %tobool7, label %if.else, label %if.then, !dbg !4142

if.then:                                          ; preds = %lor.lhs.false6, %entry, %lor.lhs.false
  %call8 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4143
  tail call fastcc void @find_single_block_region(i8 zeroext %call8) #8, !dbg !4145
  br label %if.end20, !dbg !4146

if.else:                                          ; preds = %lor.lhs.false6
  %call9 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4147
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4147
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4150

if.then11:                                        ; preds = %if.else
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !4151
  br label %if.end, !dbg !4151

if.end:                                           ; preds = %if.else, %if.then11
  tail call fastcc void @find_rgns() #8, !dbg !4152
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !4153
  %cmp12 = icmp sgt i32 %8, 2, !dbg !4155
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4156

if.then14:                                        ; preds = %if.end
  tail call void @debug_regions() #8, !dbg !4157
  br label %if.end15, !dbg !4157

if.end15:                                         ; preds = %if.then14, %if.end
  %call16 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4158
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4158
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4160

if.then18:                                        ; preds = %if.end15
  tail call void @free_dominance_info(i32 1) #6, !dbg !4161
  br label %if.end20, !dbg !4161

if.end20:                                         ; preds = %if.end15, %if.then18, %if.then
  %9 = load i32, i32* @nr_regions, align 4, !dbg !4162
  %cmp21 = icmp sgt i32 %9, 0, !dbg !4162
  br i1 %cmp21, label %land.lhs.true, label %cond.true, !dbg !4162

land.lhs.true:                                    ; preds = %if.end20
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4162
  %cfg24 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !4162
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !4162
  %x_n_basic_blocks25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 3, !dbg !4162
  %12 = load i32, i32* %x_n_basic_blocks25, align 8, !dbg !4162
  %cmp26 = icmp sgt i32 %9, %12, !dbg !4162
  br i1 %cmp26, label %cond.true, label %cond.end, !dbg !4162

cond.true:                                        ; preds = %land.lhs.true, %if.end20
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3073, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4162
  %.pre = load i32, i32* @nr_regions, align 4, !dbg !4163
  br label %cond.end, !dbg !4162

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %13 = phi i32 [ %9, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !4164
  %14 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4163
  %sub = add nsw i32 %13, -1, !dbg !4163
  %idxprom = sext i32 %sub to i64, !dbg !4163
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %14, i64 %idxprom, i32 1, !dbg !4163
  %15 = load i32, i32* %rgn_blocks, align 4, !dbg !4163
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %14, i64 %idxprom, i32 0, !dbg !4165
  %16 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !4165
  %add = add nsw i32 %15, %16, !dbg !4166
  %idxprom32 = sext i32 %13 to i64, !dbg !4164
  %rgn_blocks34 = getelementptr inbounds %struct.region, %struct.region* %14, i64 %idxprom32, i32 1, !dbg !4164
  store i32 %add, i32* %rgn_blocks34, align 4, !dbg !4167
  ret void, !dbg !4168
}

; Function Attrs: nounwind uwtable
define dso_local void @extend_regions() local_unnamed_addr #5 !dbg !4169 {
entry:
  %0 = load i8*, i8** bitcast (%struct.region** @rgn_table to i8**), align 8, !dbg !4170
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4170
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !4170
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4170
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 3, !dbg !4170
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4170
  %conv = sext i32 %3 to i64, !dbg !4170
  %mul = mul nsw i64 %conv, 12, !dbg !4170
  %call = tail call i8* @xrealloc(i8* %0, i64 %mul) #6, !dbg !4170
  store i8* %call, i8** bitcast (%struct.region** @rgn_table to i8**), align 8, !dbg !4171
  %4 = load i8*, i8** bitcast (i32** @rgn_bb_table to i8**), align 8, !dbg !4172
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4172
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4172
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !4172
  %x_n_basic_blocks3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 3, !dbg !4172
  %7 = load i32, i32* %x_n_basic_blocks3, align 8, !dbg !4172
  %conv4 = sext i32 %7 to i64, !dbg !4172
  %mul5 = shl nsw i64 %conv4, 2, !dbg !4172
  %call6 = tail call i8* @xrealloc(i8* %4, i64 %mul5) #6, !dbg !4172
  store i8* %call6, i8** bitcast (i32** @rgn_bb_table to i8**), align 8, !dbg !4173
  %8 = load i8*, i8** bitcast (i32** @block_to_bb to i8**), align 8, !dbg !4174
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4174
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !4174
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !4174
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !4174
  %11 = load i32, i32* %x_last_basic_block, align 8, !dbg !4174
  %conv9 = sext i32 %11 to i64, !dbg !4174
  %mul10 = shl nsw i64 %conv9, 2, !dbg !4174
  %call11 = tail call i8* @xrealloc(i8* %8, i64 %mul10) #6, !dbg !4174
  store i8* %call11, i8** bitcast (i32** @block_to_bb to i8**), align 8, !dbg !4175
  %12 = load i8*, i8** bitcast (i32** @containing_rgn to i8**), align 8, !dbg !4176
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4176
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !4176
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !4176
  %x_last_basic_block14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 5, !dbg !4176
  %15 = load i32, i32* %x_last_basic_block14, align 8, !dbg !4176
  %conv15 = sext i32 %15 to i64, !dbg !4176
  %mul16 = shl nsw i64 %conv15, 2, !dbg !4176
  %call17 = tail call i8* @xrealloc(i8* %12, i64 %mul16) #6, !dbg !4176
  store i8* %call17, i8** bitcast (i32** @containing_rgn to i8**), align 8, !dbg !4177
  ret void, !dbg !4178
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_cfg_nonregular() unnamed_addr #5 !dbg !4179 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10), align 8, !dbg !4192
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !4192
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !4194
  %tobool1 = icmp ne %struct.rtx_def* %1, null, !dbg !4194
  %or.cond = or i1 %tobool, %tobool1, !dbg !4196
  br i1 %or.cond, label %cleanup164, label %if.end3, !dbg !4196

if.end3:                                          ; preds = %entry
  %call = tail call zeroext i8 @current_function_has_exception_handlers() #6, !dbg !4197
  %tobool4 = icmp eq i8 %call, 0, !dbg !4197
  br i1 %tobool4, label %if.end6, label %cleanup164, !dbg !4199

if.end6:                                          ; preds = %if.end3
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4200
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4200
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4200
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !4200
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4200
  br label %for.cond, !dbg !4200

for.cond:                                         ; preds = %for.inc131, %if.end6
  %5 = phi %struct.control_flow_graph* [ %3, %if.end6 ], [ %.pre5, %for.inc131 ], !dbg !4201
  %.pn = phi %struct.basic_block_def* [ %4, %if.end6 ], [ %b.0, %for.inc131 ]
  %b.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4202
  %b.0 = load %struct.basic_block_def*, %struct.basic_block_def** %b.0.in, align 8, !dbg !4202
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0, metadata !4181, metadata !DIExpression()), !dbg !4203
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !4201
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4201
  %cmp = icmp eq %struct.basic_block_def* %b.0, %6, !dbg !4201
  br i1 %cmp, label %for.end133, label %for.body, !dbg !4200

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 7, !dbg !4204
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4204
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4204
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 0, !dbg !4204
  br label %for.cond9, !dbg !4204

for.cond9:                                        ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx130, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4182, metadata !DIExpression()), !dbg !4203
  %tobool10 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4206
  br i1 %tobool10, label %for.inc131, label %land.rhs, !dbg !4206

land.rhs:                                         ; preds = %for.cond9
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4206
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !4206
  %9 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4206
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4206
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4206
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4206
  %cmp13 = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !4206
  br i1 %cmp13, label %for.inc131, label %for.body14, !dbg !4204

for.body14:                                       ; preds = %land.rhs
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4207
  %bf.load = load i32, i32* %12, align 8, !dbg !4207
  %bf.clear = and i32 %bf.load, 65535, !dbg !4207
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !4207
  br i1 %cmp15, label %land.lhs.true, label %if.end19, !dbg !4209

land.lhs.true:                                    ; preds = %for.body14
  %call16 = tail call i32 @computed_jump_p(%struct.rtx_def* nonnull %insn.0) #6, !dbg !4210
  %tobool17 = icmp eq i32 %call16, 0, !dbg !4210
  br i1 %tobool17, label %land.lhs.true.if.end19_crit_edge, label %cleanup, !dbg !4211

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  %bf.load20.pre = load i32, i32* %12, align 8, !dbg !4212
  %.pre10 = and i32 %bf.load20.pre, 65535, !dbg !4212
  br label %if.end19, !dbg !4211

if.end19:                                         ; preds = %land.lhs.true.if.end19_crit_edge, %for.body14
  %bf.clear21.pre-phi = phi i32 [ %.pre10, %land.lhs.true.if.end19_crit_edge ], [ %bf.clear, %for.body14 ], !dbg !4212
  %cmp22 = icmp eq i32 %bf.clear21.pre-phi, 8, !dbg !4212
  br i1 %cmp22, label %if.end35, label %lor.lhs.false, !dbg !4212

lor.lhs.false:                                    ; preds = %if.end19
  %cmp25 = icmp eq i32 %bf.clear21.pre-phi, 7, !dbg !4212
  br i1 %cmp25, label %if.end35, label %lor.lhs.false26, !dbg !4212

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %cmp29 = icmp eq i32 %bf.clear21.pre-phi, 9, !dbg !4212
  br i1 %cmp29, label %if.end35, label %lor.lhs.false30, !dbg !4212

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %cmp33 = icmp eq i32 %bf.clear21.pre-phi, 10, !dbg !4212
  br i1 %cmp33, label %if.end35, label %cleanup, !dbg !4214

if.end35:                                         ; preds = %lor.lhs.false30, %lor.lhs.false26, %lor.lhs.false, %if.end19
  %call36 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 10, %struct.rtx_def* null) #6, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !4183, metadata !DIExpression()), !dbg !4216
  %cmp37 = icmp eq %struct.rtx_def* %call36, null, !dbg !4217
  br i1 %cmp37, label %cleanup, label %if.end39, !dbg !4219

if.end39:                                         ; preds = %if.end35
  %call40 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !4220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !4189, metadata !DIExpression()), !dbg !4216
  %cmp41 = icmp eq %struct.rtx_def* %call40, null, !dbg !4221
  br i1 %cmp41, label %cleanup, label %lor.lhs.false42, !dbg !4223

lor.lhs.false42:                                  ; preds = %if.end39
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 0, !dbg !4224
  %bf.load43 = load i32, i32* %13, align 8, !dbg !4224
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !4224
  %cmp45 = icmp eq i32 %bf.clear44, 9, !dbg !4224
  br i1 %cmp45, label %lor.lhs.false46, label %cleanup, !dbg !4225

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, !dbg !4226
  %arrayidx49 = getelementptr inbounds %union.u, %union.u* %u47, i64 1, i32 0, i32 1, !dbg !4226
  %rt_rtx50 = bitcast %struct.object_block** %arrayidx49 to %struct.rtx_def**, !dbg !4226
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !4226
  %arrayidx53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call36, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4227
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !4227
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !4227
  %cmp55 = icmp eq %struct.rtx_def* %14, %15, !dbg !4228
  br i1 %cmp55, label %lor.lhs.false63, label %land.lhs.true56, !dbg !4229

land.lhs.true56:                                  ; preds = %lor.lhs.false46
  %call61 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %call40, i32 9, %struct.rtx_def* %15) #6, !dbg !4230
  %cmp62 = icmp eq %struct.rtx_def* %call61, null, !dbg !4231
  br i1 %cmp62, label %cleanup, label %lor.lhs.false63, !dbg !4232

lor.lhs.false63:                                  ; preds = %lor.lhs.false46, %land.lhs.true56
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !4233
  %rt_bb = bitcast %struct.object_block** %arrayidx66 to %struct.basic_block_def**, !dbg !4233
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4233
  %arrayidx69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, i32 0, i32 1, !dbg !4234
  %rt_bb70 = bitcast %struct.object_block** %arrayidx69 to %struct.basic_block_def**, !dbg !4234
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb70, align 8, !dbg !4234
  %cmp71 = icmp eq %struct.basic_block_def* %16, %17, !dbg !4235
  br i1 %cmp71, label %if.end73, label %cleanup, !dbg !4236

if.end73:                                         ; preds = %lor.lhs.false63
  %bf.load74 = load i32, i32* %12, align 8, !dbg !4237
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !4237
  %cmp76 = icmp eq i32 %bf.clear75, 8, !dbg !4237
  br i1 %cmp76, label %cond.true, label %lor.lhs.false77, !dbg !4237

lor.lhs.false77:                                  ; preds = %if.end73
  %cmp80 = icmp eq i32 %bf.clear75, 7, !dbg !4237
  br i1 %cmp80, label %cond.true, label %lor.lhs.false81, !dbg !4237

lor.lhs.false81:                                  ; preds = %lor.lhs.false77
  %cmp84 = icmp eq i32 %bf.clear75, 9, !dbg !4237
  br i1 %cmp84, label %cond.true, label %lor.lhs.false85, !dbg !4237

lor.lhs.false85:                                  ; preds = %lor.lhs.false81
  %cmp88 = icmp eq i32 %bf.clear75, 10, !dbg !4237
  br i1 %cmp88, label %cond.true, label %cond.end107, !dbg !4237

cond.true:                                        ; preds = %lor.lhs.false85, %lor.lhs.false81, %lor.lhs.false77, %if.end73
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4237
  %18 = getelementptr inbounds %union.u, %union.u* %u89, i64 1, i32 0, i32 0, i64 0, !dbg !4237
  %19 = bitcast %union.rtunion_def* %18 to i32**, !dbg !4237
  %20 = load i32*, i32** %19, align 8, !dbg !4237
  %bf.load93 = load i32, i32* %20, align 8, !dbg !4237
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !4237
  %cmp95 = icmp eq i32 %bf.clear94, 23, !dbg !4237
  %21 = bitcast i32* %20 to %struct.rtx_def*, !dbg !4237
  br i1 %cmp95, label %cond.end107, label %cond.false, !dbg !4237

cond.false:                                       ; preds = %cond.true
  %call105 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %21) #6, !dbg !4237
  br label %cond.end107, !dbg !4237

cond.end107:                                      ; preds = %lor.lhs.false85, %cond.false, %cond.true
  %cond108 = phi %struct.rtx_def* [ %call105, %cond.false ], [ %21, %cond.true ], [ null, %lor.lhs.false85 ], !dbg !4237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond108, metadata !4190, metadata !DIExpression()), !dbg !4216
  %cmp109 = icmp eq %struct.rtx_def* %cond108, null, !dbg !4238
  br i1 %cmp109, label %cleanup, label %if.end111, !dbg !4240

if.end111:                                        ; preds = %cond.end107
  %arrayidx114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond108, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4241
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !4241
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !4241
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !4191, metadata !DIExpression()), !dbg !4216
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 0, !dbg !4242
  %bf.load116 = load i32, i32* %23, align 8, !dbg !4242
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !4242
  %cmp118 = icmp eq i32 %bf.clear117, 37, !dbg !4242
  br i1 %cmp118, label %lor.lhs.false119, label %cleanup, !dbg !4244

lor.lhs.false119:                                 ; preds = %if.end111
  %call120 = tail call i32 @dead_or_set_p(%struct.rtx_def* nonnull %call40, %struct.rtx_def* %22) #6, !dbg !4245
  %tobool121 = icmp eq i32 %call120, 0, !dbg !4245
  %spec.select = zext i1 %tobool121 to i32, !dbg !4246
  br label %cleanup, !dbg !4246

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false63, %lor.lhs.false119, %if.end111, %cond.end107, %if.end39, %lor.lhs.false42, %land.lhs.true56, %if.end35, %lor.lhs.false30
  %cleanup.dest.slot.0 = phi i32 [ 1, %land.lhs.true ], [ 7, %lor.lhs.false30 ], [ 7, %if.end35 ], [ 1, %lor.lhs.false63 ], [ 1, %land.lhs.true56 ], [ 1, %lor.lhs.false42 ], [ 1, %if.end39 ], [ 1, %cond.end107 ], [ 1, %if.end111 ], [ %spec.select, %lor.lhs.false119 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup164.loopexit3 [
    i32 0, label %for.inc
    i32 7, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4206
  %rt_rtx130 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !4206
  br label %for.cond9, !dbg !4206, !llvm.loop !4247

for.inc131:                                       ; preds = %land.rhs, %for.cond9
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4201
  %cfg8.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4249
  %.pre5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8.phi.trans.insert, align 8, !dbg !4201
  br label %for.cond, !dbg !4201, !llvm.loop !4250

for.end133:                                       ; preds = %for.cond
  %.lcssa = phi %struct.control_flow_graph* [ %5, %for.cond ], !dbg !4201
  %b.0.lcssa = phi %struct.basic_block_def* [ %b.0, %for.cond ], !dbg !4202
  %x_entry_block_ptr136 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !4252
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr136, align 8, !dbg !4252
  br label %for.cond138, !dbg !4252

for.cond138:                                      ; preds = %for.inc161, %for.end133
  %26 = phi %struct.basic_block_def* [ %b.0.lcssa, %for.end133 ], [ %.pre9, %for.inc161 ], !dbg !4254
  %.pn2 = phi %struct.basic_block_def* [ %25, %for.end133 ], [ %b.1, %for.inc161 ]
  %b.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn2, i64 0, i32 6, !dbg !4256
  %b.1 = load %struct.basic_block_def*, %struct.basic_block_def** %b.1.in, align 8, !dbg !4256
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.1, metadata !4181, metadata !DIExpression()), !dbg !4203
  %cmp142 = icmp eq %struct.basic_block_def* %b.1, %26, !dbg !4254
  br i1 %cmp142, label %cleanup164.loopexit, label %for.body143, !dbg !4252

for.body143:                                      ; preds = %for.cond138
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.1, i64 0, i32 0, !dbg !4257
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4257
  %tobool144 = icmp eq %struct.VEC_edge_gc* %27, null, !dbg !4257
  br i1 %tobool144, label %cond.end148, label %cond.true145, !dbg !4257

cond.true145:                                     ; preds = %for.body143
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !4257
  br label %cond.end148, !dbg !4257

cond.end148:                                      ; preds = %for.body143, %cond.true145
  %cond149 = phi %struct.VEC_edge_base* [ %base, %cond.true145 ], [ null, %for.body143 ], !dbg !4257
  %call150 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond149) #8, !dbg !4257
  %cmp151 = icmp eq i32 %call150, 0, !dbg !4260
  br i1 %cmp151, label %cleanup164.loopexit, label %lor.lhs.false152, !dbg !4261

lor.lhs.false152:                                 ; preds = %cond.end148
  %call153 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b.1) #8, !dbg !4262
  %tobool154 = icmp eq i8 %call153, 0, !dbg !4262
  br i1 %tobool154, label %for.inc161, label %land.lhs.true155, !dbg !4263

land.lhs.true155:                                 ; preds = %lor.lhs.false152
  %call156 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %b.1) #8, !dbg !4264
  %cmp157 = icmp eq %struct.basic_block_def* %call156, %b.1, !dbg !4265
  br i1 %cmp157, label %cleanup164.loopexit, label %for.inc161, !dbg !4266

for.inc161:                                       ; preds = %lor.lhs.false152, %land.lhs.true155
  %.pre7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4254
  %cfg140.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre7, i64 0, i32 1, !dbg !4267
  %.pre8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg140.phi.trans.insert, align 8, !dbg !4254
  %x_exit_block_ptr141.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre8, i64 0, i32 1, !dbg !4267
  %.pre9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr141.phi.trans.insert, align 8, !dbg !4254
  br label %for.cond138, !dbg !4254, !llvm.loop !4268

cleanup164.loopexit:                              ; preds = %land.lhs.true155, %cond.end148, %for.cond138
  %retval.3.ph = phi i32 [ 0, %for.cond138 ], [ 1, %cond.end148 ], [ 1, %land.lhs.true155 ]
  br label %cleanup164, !dbg !4270

cleanup164.loopexit3:                             ; preds = %cleanup
  br label %cleanup164, !dbg !4270

cleanup164:                                       ; preds = %cleanup164.loopexit3, %cleanup164.loopexit, %if.end3, %entry
  %retval.3 = phi i32 [ 1, %entry ], [ 1, %if.end3 ], [ %retval.3.ph, %cleanup164.loopexit ], [ 1, %cleanup164.loopexit3 ], !dbg !4203
  ret i32 %retval.3, !dbg !4270
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_single_block_region(i8 zeroext %ebbs_p) unnamed_addr #5 !dbg !4271 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %ebbs_p, metadata !4273, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i32 0, metadata !4276, metadata !DIExpression()), !dbg !4288
  store i32 0, i32* @nr_regions, align 4, !dbg !4289
  %tobool = icmp eq i8 %ebbs_p, 0, !dbg !4290
  br i1 %tobool, label %if.else65, label %if.then, !dbg !4291

if.then:                                          ; preds = %entry
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !4292
  %tobool1 = icmp ne %struct.gcov_ctr_summary* %0, null, !dbg !4292
  %1 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !4294
  %tobool2 = icmp ne i32 %1, 0, !dbg !4294
  %or.cond = and i1 %tobool1, %tobool2, !dbg !4295
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4296
  br i1 %or.cond, label %if.then3, label %if.else, !dbg !4295

if.then3:                                         ; preds = %if.then
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 51, i32 1, !dbg !4297
  br label %if.end, !dbg !4298

if.else:                                          ; preds = %if.then
  %value5 = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 52, i32 1, !dbg !4299
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %probability_cutoff.0.in = phi i32* [ %value, %if.then3 ], [ %value5, %if.else ]
  %probability_cutoff.0 = load i32, i32* %probability_cutoff.0.in, align 8, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %probability_cutoff.0, metadata !4277, metadata !DIExpression()), !dbg !4300
  %mul = mul nsw i32 %probability_cutoff.0, 100, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4277, metadata !DIExpression()), !dbg !4300
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4302
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4302
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4302
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4302
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4302
  %6 = bitcast %struct.edge_def** %e to i8*, !dbg !4303
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4303
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4304
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4304
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4304
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4306
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4306
  br label %for.cond, !dbg !4302

for.cond:                                         ; preds = %for.end60, %if.end
  %13 = phi i32 [ 0, %if.end ], [ %inc61, %for.end60 ]
  %14 = phi %struct.control_flow_graph* [ %4, %if.end ], [ %.pre3, %for.end60 ], !dbg !4308
  %i.0 = phi i32 [ 0, %if.end ], [ %54, %for.end60 ], !dbg !4288
  %.pn = phi %struct.basic_block_def* [ %5, %if.end ], [ %bb.0.lcssa, %for.end60 ]
  %ebb_start.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4309
  %ebb_start.0 = load %struct.basic_block_def*, %struct.basic_block_def** %ebb_start.0.in, align 8, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %ebb_start.0, metadata !4275, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4276, metadata !DIExpression()), !dbg !4288
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !4308
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4308
  %cmp = icmp eq %struct.basic_block_def* %ebb_start.0, %15, !dbg !4308
  br i1 %cmp, label %if.end105.loopexit2, label %for.body, !dbg !4302

for.body:                                         ; preds = %for.cond
  %16 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4310
  %idxprom = sext i32 %13 to i64, !dbg !4310
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %16, i64 %idxprom, i32 0, !dbg !4310
  store i32 0, i32* %rgn_nr_blocks, align 4, !dbg !4311
  %17 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4312
  %18 = load i32, i32* @nr_regions, align 4, !dbg !4312
  %idxprom9 = sext i32 %18 to i64, !dbg !4312
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %17, i64 %idxprom9, i32 1, !dbg !4312
  store i32 %i.0, i32* %rgn_blocks, align 4, !dbg !4313
  %19 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4314
  %20 = load i32, i32* @nr_regions, align 4, !dbg !4314
  %idxprom11 = sext i32 %20 to i64, !dbg !4314
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %19, i64 %idxprom11, i32 2, !dbg !4314
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !4315
  %bf.clear = and i8 %bf.load, -2, !dbg !4315
  store i8 %bf.clear, i8* %dont_calc_deps, align 4, !dbg !4315
  %21 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4316
  %22 = load i32, i32* @nr_regions, align 4, !dbg !4316
  %idxprom13 = sext i32 %22 to i64, !dbg !4316
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %21, i64 %idxprom13, i32 2, !dbg !4316
  %bf.load15 = load i8, i8* %has_real_ebb, align 4, !dbg !4317
  %bf.clear16 = and i8 %bf.load15, -3, !dbg !4317
  store i8 %bf.clear16, i8* %has_real_ebb, align 4, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %ebb_start.0, metadata !4274, metadata !DIExpression()), !dbg !4288
  %23 = sext i32 %i.0 to i64, !dbg !4318
  br label %for.cond17, !dbg !4318

for.cond17:                                       ; preds = %for.inc58, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc58 ], [ %23, %for.body ], !dbg !4288
  %bb.0 = phi %struct.basic_block_def* [ %53, %for.inc58 ], [ %ebb_start.0, %for.body ], !dbg !4319
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4274, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4276, metadata !DIExpression()), !dbg !4288
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !4320
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7, !dbg !4321
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4322
  %24 = load i32, i32* %index, align 8, !dbg !4322
  %25 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4323
  %arrayidx19 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv, !dbg !4323
  store i32 %24, i32* %arrayidx19, align 4, !dbg !4324
  %26 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4325
  %27 = load i32, i32* @nr_regions, align 4, !dbg !4325
  %idxprom20 = sext i32 %27 to i64, !dbg !4325
  %rgn_nr_blocks22 = getelementptr inbounds %struct.region, %struct.region* %26, i64 %idxprom20, i32 0, !dbg !4325
  %28 = load i32, i32* %rgn_nr_blocks22, align 4, !dbg !4326
  %inc = add nsw i32 %28, 1, !dbg !4326
  store i32 %inc, i32* %rgn_nr_blocks22, align 4, !dbg !4326
  %29 = load i32, i32* @nr_regions, align 4, !dbg !4327
  %30 = load i32*, i32** @containing_rgn, align 8, !dbg !4328
  %31 = load i32, i32* %index, align 8, !dbg !4328
  %idxprom24 = sext i32 %31 to i64, !dbg !4328
  %arrayidx25 = getelementptr inbounds i32, i32* %30, i64 %idxprom24, !dbg !4328
  store i32 %29, i32* %arrayidx25, align 4, !dbg !4329
  %32 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4330
  %33 = load i32, i32* @nr_regions, align 4, !dbg !4330
  %idxprom26 = sext i32 %33 to i64, !dbg !4330
  %rgn_blocks28 = getelementptr inbounds %struct.region, %struct.region* %32, i64 %idxprom26, i32 1, !dbg !4330
  %34 = load i32, i32* %rgn_blocks28, align 4, !dbg !4330
  %35 = trunc i64 %indvars.iv to i32, !dbg !4331
  %sub = sub nsw i32 %35, %34, !dbg !4331
  %36 = load i32*, i32** @block_to_bb, align 8, !dbg !4332
  %37 = load i32, i32* %index, align 8, !dbg !4332
  %idxprom30 = sext i32 %37 to i64, !dbg !4332
  %arrayidx31 = getelementptr inbounds i32, i32* %36, i64 %idxprom30, !dbg !4332
  store i32 %sub, i32* %arrayidx31, align 4, !dbg !4333
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 undef, metadata !4276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4288
  %next_bb33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4335
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb33, align 8, !dbg !4335
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4337
  %cfg35 = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, i32 1, !dbg !4337
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg35, align 8, !dbg !4337
  %x_exit_block_ptr36 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i64 0, i32 1, !dbg !4337
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr36, align 8, !dbg !4337
  %cmp37 = icmp eq %struct.basic_block_def* %38, %41, !dbg !4338
  br i1 %cmp37, label %cleanup, label %lor.lhs.false, !dbg !4339

lor.lhs.false:                                    ; preds = %for.cond17
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i64 0, i32 7, !dbg !4340
  %42 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !4340
  %43 = load i32**, i32*** %42, align 8, !dbg !4340
  %44 = load i32*, i32** %43, align 8, !dbg !4340
  %bf.load39 = load i32, i32* %44, align 8, !dbg !4340
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !4340
  %cmp41 = icmp eq i32 %bf.clear40, 12, !dbg !4340
  br i1 %cmp41, label %cleanup, label %if.end43, !dbg !4341

if.end43:                                         ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7, !dbg !4342
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !4342
  %call = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4342
  %45 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4342
  store i32 %45, i32* %9, align 8, !dbg !4342
  %46 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4342
  store %struct.VEC_edge_gc** %46, %struct.VEC_edge_gc*** %10, align 8, !dbg !4342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !4342
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7, !dbg !4342
  br label %for.cond44, !dbg !4342

for.cond44:                                       ; preds = %for.inc, %if.end43
  %47 = load i32, i32* %11, align 8, !dbg !4343
  %48 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4280, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  %call45 = call fastcc zeroext i8 @ei_cond(i32 %47, %struct.VEC_edge_gc** %48, %struct.edge_def** nonnull %e) #8, !dbg !4343
  %tobool46 = icmp eq i8 %call45, 0, !dbg !4342
  br i1 %tobool46, label %for.cond44.for.end_crit_edge, label %for.body47, !dbg !4342

for.cond44.for.end_crit_edge:                     ; preds = %for.cond44
  %.pre4 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4344
  br label %for.end, !dbg !4342

for.body47:                                       ; preds = %for.cond44
  %49 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4346
  call void @llvm.dbg.value(metadata %struct.edge_def* %49, metadata !4280, metadata !DIExpression()), !dbg !4303
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %49, i64 0, i32 7, !dbg !4348
  %50 = load i32, i32* %flags, align 8, !dbg !4348
  %and = and i32 %50, 1, !dbg !4349
  %cmp48 = icmp eq i32 %and, 0, !dbg !4350
  br i1 %cmp48, label %for.inc, label %for.end.loopexit, !dbg !4351

for.inc:                                          ; preds = %for.body47
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4287, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4343
  br label %for.cond44, !dbg !4343, !llvm.loop !4352

for.end.loopexit:                                 ; preds = %for.body47
  %.lcssa = phi %struct.edge_def* [ %49, %for.body47 ], !dbg !4346
  br label %for.end, !dbg !4344

for.end:                                          ; preds = %for.end.loopexit, %for.cond44.for.end_crit_edge
  %51 = phi %struct.edge_def* [ %.pre4, %for.cond44.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !4344
  call void @llvm.dbg.value(metadata %struct.edge_def* %51, metadata !4280, metadata !DIExpression()), !dbg !4303
  %tobool51 = icmp eq %struct.edge_def* %51, null, !dbg !4344
  br i1 %tobool51, label %cleanup, label %if.end53, !dbg !4354

if.end53:                                         ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.edge_def* %51, metadata !4280, metadata !DIExpression()), !dbg !4303
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %51, i64 0, i32 8, !dbg !4355
  %52 = load i32, i32* %probability, align 4, !dbg !4355
  %cmp54 = icmp sgt i32 %52, %mul, !dbg !4357
  %. = select i1 %cmp54, i32 0, i32 5, !dbg !4358
  br label %cleanup, !dbg !4358

cleanup:                                          ; preds = %for.end, %if.end53, %for.cond17, %lor.lhs.false
  %cleanup.dest.slot.0 = phi i32 [ 5, %lor.lhs.false ], [ 5, %for.cond17 ], [ 5, %for.end ], [ %., %if.end53 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7, !dbg !4359
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !4359
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %for.inc58, label %for.end60

for.inc58:                                        ; preds = %cleanup
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb33, align 8, !dbg !4360
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %53, metadata !4274, metadata !DIExpression()), !dbg !4288
  br label %for.cond17, !dbg !4361, !llvm.loop !4362

for.end60:                                        ; preds = %cleanup
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %cleanup ], !dbg !4319
  %indvars.iv.next.lcssa = phi i64 [ %indvars.iv.next, %cleanup ], !dbg !4334
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4274, metadata !DIExpression()), !dbg !4288
  %54 = trunc i64 %indvars.iv.next.lcssa to i32, !dbg !4288
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4274, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4274, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4275, metadata !DIExpression()), !dbg !4288
  %55 = load i32, i32* @nr_regions, align 4, !dbg !4365
  %inc61 = add nsw i32 %55, 1, !dbg !4365
  store i32 %inc61, i32* @nr_regions, align 4, !dbg !4365
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4308
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4366
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !4308
  br label %for.cond, !dbg !4308, !llvm.loop !4367

if.else65:                                        ; preds = %entry
  %56 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4369
  %cfg67 = getelementptr inbounds %struct.function, %struct.function* %56, i64 0, i32 1, !dbg !4369
  %57 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg67, align 8, !dbg !4369
  %x_entry_block_ptr68 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %57, i64 0, i32 0, !dbg !4369
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr68, align 8, !dbg !4369
  br label %for.cond70, !dbg !4369

for.cond70:                                       ; preds = %for.body75, %if.else65
  %59 = phi i32 [ 0, %if.else65 ], [ %inc101, %for.body75 ]
  %60 = phi %struct.control_flow_graph* [ %57, %if.else65 ], [ %.pre6, %for.body75 ], !dbg !4371
  %.pn1 = phi %struct.basic_block_def* [ %58, %if.else65 ], [ %bb.1, %for.body75 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !4373
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4373
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4274, metadata !DIExpression()), !dbg !4288
  %x_exit_block_ptr73 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %60, i64 0, i32 1, !dbg !4371
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr73, align 8, !dbg !4371
  %cmp74 = icmp eq %struct.basic_block_def* %bb.1, %61, !dbg !4371
  br i1 %cmp74, label %if.end105.loopexit, label %for.body75, !dbg !4369

for.body75:                                       ; preds = %for.cond70
  %index76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !4374
  %62 = load i32, i32* %index76, align 8, !dbg !4374
  %63 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4376
  %idxprom77 = sext i32 %59 to i64, !dbg !4376
  %arrayidx78 = getelementptr inbounds i32, i32* %63, i64 %idxprom77, !dbg !4376
  store i32 %62, i32* %arrayidx78, align 4, !dbg !4377
  %64 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4378
  %65 = load i32, i32* @nr_regions, align 4, !dbg !4378
  %idxprom79 = sext i32 %65 to i64, !dbg !4378
  %rgn_nr_blocks81 = getelementptr inbounds %struct.region, %struct.region* %64, i64 %idxprom79, i32 0, !dbg !4378
  store i32 1, i32* %rgn_nr_blocks81, align 4, !dbg !4379
  %66 = load i32, i32* @nr_regions, align 4, !dbg !4380
  %67 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4381
  %idxprom82 = sext i32 %66 to i64, !dbg !4381
  %rgn_blocks84 = getelementptr inbounds %struct.region, %struct.region* %67, i64 %idxprom82, i32 1, !dbg !4381
  store i32 %66, i32* %rgn_blocks84, align 4, !dbg !4382
  %68 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4383
  %69 = load i32, i32* @nr_regions, align 4, !dbg !4383
  %idxprom85 = sext i32 %69 to i64, !dbg !4383
  %dont_calc_deps87 = getelementptr inbounds %struct.region, %struct.region* %68, i64 %idxprom85, i32 2, !dbg !4383
  %bf.load88 = load i8, i8* %dont_calc_deps87, align 4, !dbg !4384
  %bf.clear89 = and i8 %bf.load88, -2, !dbg !4384
  store i8 %bf.clear89, i8* %dont_calc_deps87, align 4, !dbg !4384
  %70 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4385
  %71 = load i32, i32* @nr_regions, align 4, !dbg !4385
  %idxprom90 = sext i32 %71 to i64, !dbg !4385
  %has_real_ebb92 = getelementptr inbounds %struct.region, %struct.region* %70, i64 %idxprom90, i32 2, !dbg !4385
  %bf.load93 = load i8, i8* %has_real_ebb92, align 4, !dbg !4386
  %bf.clear94 = and i8 %bf.load93, -3, !dbg !4386
  store i8 %bf.clear94, i8* %has_real_ebb92, align 4, !dbg !4386
  %72 = load i32, i32* @nr_regions, align 4, !dbg !4387
  %73 = load i32*, i32** @containing_rgn, align 8, !dbg !4388
  %74 = load i32, i32* %index76, align 8, !dbg !4388
  %idxprom96 = sext i32 %74 to i64, !dbg !4388
  %arrayidx97 = getelementptr inbounds i32, i32* %73, i64 %idxprom96, !dbg !4388
  store i32 %72, i32* %arrayidx97, align 4, !dbg !4389
  %75 = load i32*, i32** @block_to_bb, align 8, !dbg !4390
  %76 = load i32, i32* %index76, align 8, !dbg !4390
  %idxprom99 = sext i32 %76 to i64, !dbg !4390
  %arrayidx100 = getelementptr inbounds i32, i32* %75, i64 %idxprom99, !dbg !4390
  store i32 0, i32* %arrayidx100, align 4, !dbg !4391
  %77 = load i32, i32* @nr_regions, align 4, !dbg !4392
  %inc101 = add nsw i32 %77, 1, !dbg !4392
  store i32 %inc101, i32* @nr_regions, align 4, !dbg !4392
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4371
  %cfg72.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 1, !dbg !4393
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg72.phi.trans.insert, align 8, !dbg !4371
  br label %for.cond70, !dbg !4371, !llvm.loop !4394

if.end105.loopexit:                               ; preds = %for.cond70
  br label %if.end105, !dbg !4396

if.end105.loopexit2:                              ; preds = %for.cond
  br label %if.end105, !dbg !4396

if.end105:                                        ; preds = %if.end105.loopexit2, %if.end105.loopexit
  ret void, !dbg !4396
}

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_rgns() unnamed_addr #5 !dbg !4397 {
entry:
  %call = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4398
  %tobool = icmp ne i8 %call, 0, !dbg !4398
  %0 = load i32, i32* @flag_sel_sched_pipelining, align 4, !dbg !4400
  %tobool1 = icmp ne i32 %0, 0, !dbg !4400
  %or.cond = and i1 %tobool, %tobool1, !dbg !4401
  br i1 %or.cond, label %if.then, label %if.else, !dbg !4401

if.then:                                          ; preds = %entry
  tail call void @sel_find_rgns() #6, !dbg !4402
  br label %if.end, !dbg !4402

if.else:                                          ; preds = %entry
  tail call fastcc void @haifa_find_rgns() #8, !dbg !4403
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4404
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_finish() local_unnamed_addr #5 !dbg !4405 {
entry:
  %0 = load i32, i32* @reload_completed, align 4, !dbg !4406
  %tobool = icmp eq i32 %0, 0, !dbg !4406
  br i1 %tobool, label %if.end, label %if.then, !dbg !4408

if.then:                                          ; preds = %entry
  tail call void @reposition_prologue_and_epilogue_notes() #6, !dbg !4409
  br label %if.end, !dbg !4409

if.end:                                           ; preds = %entry, %if.then
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !4410
  %tobool1 = icmp eq i32 %1, 0, !dbg !4410
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !4412

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* @reload_completed, align 4, !dbg !4413
  %cmp = icmp eq i32 %2, 0, !dbg !4416
  %3 = load i32, i32* @flag_schedule_interblock, align 4, !dbg !4417
  %tobool3 = icmp ne i32 %3, 0, !dbg !4417
  %or.cond = and i1 %cmp, %tobool3, !dbg !4418
  br i1 %or.cond, label %if.then4, label %if.else, !dbg !4418

if.then4:                                         ; preds = %if.then2
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4419
  %5 = load i32, i32* @nr_inter, align 4, !dbg !4421
  %6 = load i32, i32* @nr_spec, align 4, !dbg !4422
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.45, i64 0, i64 0), i32 %5, i32 %6) #6, !dbg !4423
  br label %if.end6, !dbg !4424

if.else:                                          ; preds = %if.then2
  %7 = load i32, i32* @nr_inter, align 4, !dbg !4425
  %cmp5 = icmp slt i32 %7, 1, !dbg !4425
  br i1 %cmp5, label %if.end6, label %cond.true, !dbg !4425

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3098, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4425
  br label %if.end6, !dbg !4425

if.end6:                                          ; preds = %cond.true, %if.else, %if.then4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4426
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4427
  br label %if.end8, !dbg !4428

if.end8:                                          ; preds = %if.end, %if.end6
  store i32 0, i32* @nr_regions, align 4, !dbg !4429
  %9 = load i8*, i8** bitcast (%struct.region** @rgn_table to i8**), align 8, !dbg !4430
  tail call void @free(i8* %9) #6, !dbg !4431
  store %struct.region* null, %struct.region** @rgn_table, align 8, !dbg !4432
  %10 = load i8*, i8** bitcast (i32** @rgn_bb_table to i8**), align 8, !dbg !4433
  tail call void @free(i8* %10) #6, !dbg !4434
  store i32* null, i32** @rgn_bb_table, align 8, !dbg !4435
  %11 = load i8*, i8** bitcast (i32** @block_to_bb to i8**), align 8, !dbg !4436
  tail call void @free(i8* %11) #6, !dbg !4437
  store i32* null, i32** @block_to_bb, align 8, !dbg !4438
  %12 = load i8*, i8** bitcast (i32** @containing_rgn to i8**), align 8, !dbg !4439
  tail call void @free(i8* %12) #6, !dbg !4440
  store i32* null, i32** @containing_rgn, align 8, !dbg !4441
  %13 = load i8*, i8** bitcast (i32** @ebb_head to i8**), align 8, !dbg !4442
  tail call void @free(i8* %13) #6, !dbg !4443
  store i32* null, i32** @ebb_head, align 8, !dbg !4444
  ret void, !dbg !4445
}

declare dso_local void @reposition_prologue_and_epilogue_notes() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @rgn_setup_region(i32 %rgn) local_unnamed_addr #5 !dbg !4446 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !4448, metadata !DIExpression()), !dbg !4450
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4451
  %idxprom = sext i32 %rgn to i64, !dbg !4451
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 0, !dbg !4451
  %1 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !4451
  store i32 %1, i32* @current_nr_blocks, align 4, !dbg !4452
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 1, !dbg !4453
  %2 = load i32, i32* %rgn_blocks, align 4, !dbg !4453
  store i32 %2, i32* @current_blocks, align 4, !dbg !4454
  %3 = load i8*, i8** bitcast (i32** @ebb_head to i8**), align 8, !dbg !4455
  %add = add nsw i32 %1, 1, !dbg !4455
  %conv = sext i32 %add to i64, !dbg !4455
  %mul = shl nsw i64 %conv, 2, !dbg !4455
  %call = tail call i8* @xrealloc(i8* %3, i64 %mul) #6, !dbg !4455
  store i8* %call, i8** bitcast (i32** @ebb_head to i8**), align 8, !dbg !4456
  call void @llvm.dbg.value(metadata i32 0, metadata !4449, metadata !DIExpression()), !dbg !4450
  br label %for.cond, !dbg !4457

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4459
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4449, metadata !DIExpression()), !dbg !4450
  %4 = load i32, i32* @current_nr_blocks, align 4, !dbg !4460
  %5 = sext i32 %4 to i64, !dbg !4462
  %cmp = icmp sgt i64 %indvars.iv, %5, !dbg !4462
  br i1 %cmp, label %for.end, label %for.body, !dbg !4463

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* @current_blocks, align 4, !dbg !4464
  %7 = trunc i64 %indvars.iv to i32, !dbg !4465
  %add4 = add nsw i32 %6, %7, !dbg !4465
  %8 = load i32*, i32** @ebb_head, align 8, !dbg !4466
  %arrayidx6 = getelementptr inbounds i32, i32* %8, i64 %indvars.iv, !dbg !4466
  store i32 %add4, i32* %arrayidx6, align 4, !dbg !4467
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4468
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4450
  br label %for.cond, !dbg !4469, !llvm.loop !4470

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4472
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_compute_dependencies(i32 %rgn) local_unnamed_addr #5 !dbg !4473 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !4475, metadata !DIExpression()), !dbg !4479
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4480
  %idxprom = sext i32 %rgn to i64, !dbg !4480
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 2, !dbg !4480
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !4480
  %bf.clear = and i8 %bf.load, 1, !dbg !4480
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4480
  br i1 %tobool, label %if.then, label %if.else, !dbg !4481

if.then:                                          ; preds = %entry
  %call = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4482
  %tobool1 = icmp eq i8 %call, 0, !dbg !4482
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !4484

if.then2:                                         ; preds = %if.then
  store i32 1, i32* @sched_emulate_haifa_p, align 4, !dbg !4485
  br label %if.end, !dbg !4486

if.end:                                           ; preds = %if.then, %if.then2
  tail call void @init_deps_global() #6, !dbg !4487
  %1 = load i32, i32* @current_nr_blocks, align 4, !dbg !4488
  %conv = sext i32 %1 to i64, !dbg !4488
  %mul = mul nsw i64 %conv, 184, !dbg !4488
  %call3 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !4488
  store i8* %call3, i8** bitcast (%struct.deps** @bb_deps to i8**), align 8, !dbg !4489
  call void @llvm.dbg.value(metadata i32 0, metadata !4476, metadata !DIExpression()), !dbg !4490
  br label %for.cond, !dbg !4491

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !4493
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4476, metadata !DIExpression()), !dbg !4490
  %2 = load i32, i32* @current_nr_blocks, align 4, !dbg !4494
  %3 = sext i32 %2 to i64, !dbg !4496
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !4496
  br i1 %cmp, label %for.body, label %for.end, !dbg !4497

for.body:                                         ; preds = %for.cond
  %4 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4498
  %add.ptr = getelementptr inbounds %struct.deps, %struct.deps* %4, i64 %indvars.iv, !dbg !4499
  tail call void @init_deps(%struct.deps* %add.ptr, i8 zeroext 0) #6, !dbg !4500
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4501
  call void @llvm.dbg.value(metadata i32 undef, metadata !4476, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4490
  br label %for.cond, !dbg !4502, !llvm.loop !4503

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* @sched_max_luid, align 4, !dbg !4505
  %call5 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %5) #6, !dbg !4506
  store %struct.simple_bitmap_def* %call5, %struct.simple_bitmap_def** @insn_referenced, align 8, !dbg !4507
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call5) #6, !dbg !4508
  call void @llvm.dbg.value(metadata i32 0, metadata !4476, metadata !DIExpression()), !dbg !4490
  br label %for.cond6, !dbg !4509

for.cond6:                                        ; preds = %for.body9, %for.end
  %bb.1 = phi i32 [ 0, %for.end ], [ %inc11, %for.body9 ], !dbg !4511
  call void @llvm.dbg.value(metadata i32 %bb.1, metadata !4476, metadata !DIExpression()), !dbg !4490
  %6 = load i32, i32* @current_nr_blocks, align 4, !dbg !4512
  %cmp7 = icmp slt i32 %bb.1, %6, !dbg !4514
  br i1 %cmp7, label %for.body9, label %for.end12, !dbg !4515

for.body9:                                        ; preds = %for.cond6
  tail call fastcc void @compute_block_dependences(i32 %bb.1) #8, !dbg !4516
  %inc11 = add nuw nsw i32 %bb.1, 1, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %inc11, metadata !4476, metadata !DIExpression()), !dbg !4490
  br label %for.cond6, !dbg !4518, !llvm.loop !4519

for.end12:                                        ; preds = %for.cond6
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @insn_referenced, align 8, !dbg !4521
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i64 0, i32 0, !dbg !4521
  %8 = load i8*, i8** %popcount, align 8, !dbg !4521
  tail call void @free(i8* %8) #6, !dbg !4521
  %9 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @insn_referenced to i8**), align 8, !dbg !4521
  tail call void @free(i8* %9) #6, !dbg !4521
  tail call fastcc void @free_pending_lists() #8, !dbg !4522
  tail call void @finish_deps_global() #6, !dbg !4523
  %10 = load i8*, i8** bitcast (%struct.deps** @bb_deps to i8**), align 8, !dbg !4524
  tail call void @free(i8* %10) #6, !dbg !4525
  %11 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4526
  %dont_calc_deps15 = getelementptr inbounds %struct.region, %struct.region* %11, i64 %idxprom, i32 2, !dbg !4526
  %bf.load16 = load i8, i8* %dont_calc_deps15, align 4, !dbg !4527
  %bf.set = or i8 %bf.load16, 1, !dbg !4527
  store i8 %bf.set, i8* %dont_calc_deps15, align 4, !dbg !4527
  %call18 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4528
  %tobool19 = icmp eq i8 %call18, 0, !dbg !4528
  br i1 %tobool19, label %if.end27, label %if.then20, !dbg !4530

if.then20:                                        ; preds = %for.end12
  store i32 0, i32* @sched_emulate_haifa_p, align 4, !dbg !4531
  br label %if.end27, !dbg !4532

if.else:                                          ; preds = %entry
  %12 = load i32, i32* @current_nr_blocks, align 4, !dbg !4533
  %cmp22 = icmp eq i32 %12, 1, !dbg !4533
  br i1 %cmp22, label %if.end27, label %lor.lhs.false, !dbg !4533

lor.lhs.false:                                    ; preds = %if.else
  %call24 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4533
  %tobool26 = icmp eq i8 %call24, 0, !dbg !4533
  br i1 %tobool26, label %cond.true, label %if.end27, !dbg !4533

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4533
  br label %if.end27, !dbg !4533

if.end27:                                         ; preds = %lor.lhs.false, %for.end12, %cond.true, %if.else, %if.then20
  ret void, !dbg !4534
}

declare dso_local void @init_deps_global() local_unnamed_addr #2

declare dso_local void @init_deps(%struct.deps*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_block_dependences(i32 %bb) unnamed_addr #5 !dbg !4535 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %tmp_deps = alloca %struct.deps, align 8
  call void @llvm.dbg.value(metadata i32 %bb, metadata !4537, metadata !DIExpression()), !dbg !4541
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !4542
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4542
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !4542
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4542
  %2 = bitcast %struct.deps* %tmp_deps to i8*, !dbg !4543
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %2) #7, !dbg !4543
  %3 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4544
  %idxprom = sext i32 %bb to i64, !dbg !4544
  %arrayidx = getelementptr inbounds %struct.deps, %struct.deps* %3, i64 %idxprom, !dbg !4544
  %4 = bitcast %struct.deps* %arrayidx to i8*, !dbg !4544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %4, i64 184, i1 false), !dbg !4544
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4545
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4545
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4545
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 2, !dbg !4545
  %7 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4545
  %tobool = icmp eq %struct.VEC_basic_block_gc* %7, null, !dbg !4545
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4545

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %7, i64 0, i32 0, !dbg !4545
  br label %cond.end, !dbg !4545

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4545
  %8 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4545
  %9 = load i32*, i32** @ebb_head, align 8, !dbg !4545
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !4545
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !4545
  %idxprom6 = sext i32 %10 to i64, !dbg !4545
  %arrayidx7 = getelementptr inbounds i32, i32* %8, i64 %idxprom6, !dbg !4545
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !4545
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %11) #8, !dbg !4545
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4545
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !4545
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !4545
  %x_basic_block_info10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 2, !dbg !4545
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info10, align 8, !dbg !4545
  %tobool11 = icmp eq %struct.VEC_basic_block_gc* %14, null, !dbg !4545
  br i1 %tobool11, label %cond.end18, label %cond.true12, !dbg !4545

cond.true12:                                      ; preds = %cond.end
  %base16 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i64 0, i32 0, !dbg !4545
  br label %cond.end18, !dbg !4545

cond.end18:                                       ; preds = %cond.end, %cond.true12
  %cond19 = phi %struct.VEC_basic_block_base* [ %base16, %cond.true12 ], [ null, %cond.end ], !dbg !4545
  %15 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4545
  %16 = load i32*, i32** @ebb_head, align 8, !dbg !4545
  %add = add nsw i32 %bb, 1, !dbg !4545
  %idxprom20 = sext i32 %add to i64, !dbg !4545
  %arrayidx21 = getelementptr inbounds i32, i32* %16, i64 %idxprom20, !dbg !4545
  %17 = load i32, i32* %arrayidx21, align 4, !dbg !4545
  %sub = add nsw i32 %17, -1, !dbg !4545
  %idxprom22 = sext i32 %sub to i64, !dbg !4545
  %arrayidx23 = getelementptr inbounds i32, i32* %15, i64 %idxprom22, !dbg !4545
  %18 = load i32, i32* %arrayidx23, align 4, !dbg !4545
  %call24 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond19, i32 %18) #8, !dbg !4545
  %cmp = icmp eq %struct.basic_block_def* %call, %call24, !dbg !4545
  br i1 %cmp, label %cond.end27, label %cond.true25, !dbg !4545

cond.true25:                                      ; preds = %cond.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2723, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4545
  br label %cond.end27, !dbg !4545

cond.end27:                                       ; preds = %cond.end18, %cond.true25
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4546
  %cfg30 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !4546
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg30, align 8, !dbg !4546
  %x_basic_block_info31 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 2, !dbg !4546
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info31, align 8, !dbg !4546
  %tobool32 = icmp eq %struct.VEC_basic_block_gc* %21, null, !dbg !4546
  br i1 %tobool32, label %cond.end39, label %cond.true33, !dbg !4546

cond.true33:                                      ; preds = %cond.end27
  %base37 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i64 0, i32 0, !dbg !4546
  br label %cond.end39, !dbg !4546

cond.end39:                                       ; preds = %cond.end27, %cond.true33
  %cond40 = phi %struct.VEC_basic_block_base* [ %base37, %cond.true33 ], [ null, %cond.end27 ], !dbg !4546
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4546
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !4546
  %arrayidx42 = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !4546
  %24 = load i32, i32* %arrayidx42, align 4, !dbg !4546
  %idxprom43 = sext i32 %24 to i64, !dbg !4546
  %arrayidx44 = getelementptr inbounds i32, i32* %22, i64 %idxprom43, !dbg !4546
  %25 = load i32, i32* %arrayidx44, align 4, !dbg !4546
  %call45 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond40, i32 %25) #8, !dbg !4546
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4547
  %cfg47 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !4547
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg47, align 8, !dbg !4547
  %x_basic_block_info48 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 2, !dbg !4547
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info48, align 8, !dbg !4547
  %tobool49 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !4547
  br i1 %tobool49, label %cond.end56, label %cond.true50, !dbg !4547

cond.true50:                                      ; preds = %cond.end39
  %base54 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !4547
  br label %cond.end56, !dbg !4547

cond.end56:                                       ; preds = %cond.end39, %cond.true50
  %cond57 = phi %struct.VEC_basic_block_base* [ %base54, %cond.true50 ], [ null, %cond.end39 ], !dbg !4547
  %29 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4547
  %30 = load i32*, i32** @ebb_head, align 8, !dbg !4547
  %arrayidx60 = getelementptr inbounds i32, i32* %30, i64 %idxprom20, !dbg !4547
  %31 = load i32, i32* %arrayidx60, align 4, !dbg !4547
  %sub61 = add nsw i32 %31, -1, !dbg !4547
  %idxprom62 = sext i32 %sub61 to i64, !dbg !4547
  %arrayidx63 = getelementptr inbounds i32, i32* %29, i64 %idxprom62, !dbg !4547
  %32 = load i32, i32* %arrayidx63, align 4, !dbg !4547
  %call64 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond57, i32 %32) #8, !dbg !4547
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !4538, metadata !DIExpression(DW_OP_deref)), !dbg !4541
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !4539, metadata !DIExpression(DW_OP_deref)), !dbg !4541
  call void @get_ebb_head_tail(%struct.basic_block_def* %call45, %struct.basic_block_def* %call64, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !4548
  %33 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !4538, metadata !DIExpression()), !dbg !4541
  %34 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4550
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata %struct.deps* %tmp_deps, metadata !4540, metadata !DIExpression(DW_OP_deref)), !dbg !4541
  call void @sched_analyze(%struct.deps* nonnull %tmp_deps, %struct.rtx_def* %33, %struct.rtx_def* %34) #6, !dbg !4551
  %call65 = call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4552
  %tobool66 = icmp eq i8 %call65, 0, !dbg !4552
  br i1 %tobool66, label %if.then, label %if.end, !dbg !4554

if.then:                                          ; preds = %cond.end56
  %35 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !4538, metadata !DIExpression()), !dbg !4541
  %36 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4556
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !4539, metadata !DIExpression()), !dbg !4541
  call fastcc void @add_branch_dependences(%struct.rtx_def* %35, %struct.rtx_def* %36) #8, !dbg !4557
  br label %if.end, !dbg !4557

if.end:                                           ; preds = %cond.end56, %if.then
  %37 = load i32, i32* @current_nr_blocks, align 4, !dbg !4558
  %cmp67 = icmp sgt i32 %37, 1, !dbg !4560
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !4561

if.then68:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.deps* %tmp_deps, metadata !4540, metadata !DIExpression(DW_OP_deref)), !dbg !4541
  call fastcc void @propagate_deps(i32 %bb, %struct.deps* nonnull %tmp_deps) #8, !dbg !4562
  br label %if.end69, !dbg !4562

if.end69:                                         ; preds = %if.then68, %if.end
  call void @llvm.dbg.value(metadata %struct.deps* %tmp_deps, metadata !4540, metadata !DIExpression(DW_OP_deref)), !dbg !4541
  call void @free_deps(%struct.deps* nonnull %tmp_deps) #6, !dbg !4563
  %38 = load void (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 10), align 8, !dbg !4564
  %tobool70 = icmp eq void (%struct.rtx_def*, %struct.rtx_def*)* %38, null, !dbg !4566
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !4567

if.then71:                                        ; preds = %if.end69
  %39 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !4568
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !4538, metadata !DIExpression()), !dbg !4541
  %40 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !4569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %40, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void %38(%struct.rtx_def* %39, %struct.rtx_def* %40) #6, !dbg !4570
  br label %if.end72, !dbg !4570

if.end72:                                         ; preds = %if.end69, %if.then71
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %2) #7, !dbg !4571
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4571
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4571
  ret void, !dbg !4571
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_pending_lists() unnamed_addr #5 !dbg !4572 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4574, metadata !DIExpression()), !dbg !4575
  br label %for.cond, !dbg !4576

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4578
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4574, metadata !DIExpression()), !dbg !4575
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !4579
  %1 = sext i32 %0 to i64, !dbg !4581
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !4581
  br i1 %cmp, label %for.body, label %for.end, !dbg !4582

for.body:                                         ; preds = %for.cond
  %2 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4583
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %2, i64 %indvars.iv, i32 0, !dbg !4585
  tail call void @free_INSN_LIST_list(%struct.rtx_def** %pending_read_insns) #6, !dbg !4586
  %3 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4587
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %3, i64 %indvars.iv, i32 2, !dbg !4588
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %pending_write_insns) #6, !dbg !4589
  %4 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4590
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %4, i64 %indvars.iv, i32 1, !dbg !4591
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_read_mems) #6, !dbg !4592
  %5 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !4593
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %5, i64 %indvars.iv, i32 3, !dbg !4594
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_write_mems) #6, !dbg !4595
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4596
  call void @llvm.dbg.value(metadata i32 undef, metadata !4574, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4575
  br label %for.cond, !dbg !4597, !llvm.loop !4598

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4600
}

declare dso_local void @finish_deps_global() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_local_init(i32 %rgn) local_unnamed_addr #5 !dbg !4601 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp38 = alloca %struct.edge_iterator, align 8
  %tmp80 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !4603, metadata !DIExpression()), !dbg !4610
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !4611
  %cmp = icmp sgt i32 %0, 1, !dbg !4612
  br i1 %cmp, label %if.then, label %if.end93, !dbg !4613

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4614
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4614
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4615
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4615
  %conv = sext i32 %0 to i64, !dbg !4616
  %mul = shl nsw i64 %conv, 2, !dbg !4616
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !4616
  store i8* %call, i8** bitcast (i32** @prob to i8**), align 8, !dbg !4617
  %3 = load i32, i32* @current_nr_blocks, align 4, !dbg !4618
  %call1 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %3, i32 %3) #6, !dbg !4619
  store %struct.simple_bitmap_def** %call1, %struct.simple_bitmap_def*** @dom, align 8, !dbg !4620
  %4 = load i32, i32* @current_nr_blocks, align 4, !dbg !4621
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call1, i32 %4) #6, !dbg !4622
  store i32 0, i32* @rgn_nr_edges, align 4, !dbg !4623
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4624
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4624
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4624
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !4624
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4624
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4626
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4626
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4626
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4630
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4630
  br label %for.cond, !dbg !4624

for.cond:                                         ; preds = %for.inc14, %if.then
  %.pre4 = phi %struct.function* [ %5, %if.then ], [ %.pre, %for.inc14 ]
  %13 = phi %struct.control_flow_graph* [ %6, %if.then ], [ %.pre3, %for.inc14 ], !dbg !4632
  %.pn = phi %struct.basic_block_def* [ %7, %if.then ], [ %block.0, %for.inc14 ]
  %block.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4633
  %block.0 = load %struct.basic_block_def*, %struct.basic_block_def** %block.0.in, align 8, !dbg !4633
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block.0, metadata !4605, metadata !DIExpression()), !dbg !4634
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 1, !dbg !4632
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4632
  %cmp4 = icmp eq %struct.basic_block_def* %block.0, %14, !dbg !4632
  br i1 %cmp4, label %for.end16, label %for.body, !dbg !4624

for.body:                                         ; preds = %for.cond
  %15 = load i32*, i32** @containing_rgn, align 8, !dbg !4635
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.0, i64 0, i32 9, !dbg !4635
  %16 = load i32, i32* %index, align 8, !dbg !4635
  %idxprom = sext i32 %16 to i64, !dbg !4635
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !4635
  %17 = load i32, i32* %arrayidx, align 4, !dbg !4635
  %cmp6 = icmp eq i32 %17, %rgn, !dbg !4637
  br i1 %cmp6, label %if.end, label %for.inc14, !dbg !4638

if.end:                                           ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7, !dbg !4639
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.0, i64 0, i32 1, !dbg !4639
  %call9 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4639
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 0, !dbg !4639
  store i32 %18, i32* %9, align 8, !dbg !4639
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 1, !dbg !4639
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %10, align 8, !dbg !4639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !4639
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7, !dbg !4639
  br label %for.cond10, !dbg !4639

for.cond10:                                       ; preds = %for.body12, %if.end
  %20 = load i32, i32* %11, align 8, !dbg !4640
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4640
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4608, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  %call11 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #8, !dbg !4640
  %tobool = icmp eq i8 %call11, 0, !dbg !4639
  br i1 %tobool, label %for.inc14.loopexit, label %for.body12, !dbg !4639

for.body12:                                       ; preds = %for.cond10
  %22 = load i32, i32* @rgn_nr_edges, align 4, !dbg !4641
  %inc = add nsw i32 %22, 1, !dbg !4641
  store i32 %inc, i32* @rgn_nr_edges, align 4, !dbg !4641
  %conv13 = sext i32 %22 to i64, !dbg !4641
  %23 = inttoptr i64 %conv13 to i8*, !dbg !4641
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !4608, metadata !DIExpression()), !dbg !4634
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 3, !dbg !4641
  store i8* %23, i8** %aux, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4609, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4640
  br label %for.cond10, !dbg !4640, !llvm.loop !4642

for.inc14.loopexit:                               ; preds = %for.cond10
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4632
  br label %for.inc14, !dbg !4632

for.inc14:                                        ; preds = %for.inc14.loopexit, %for.body
  %.pre = phi %struct.function* [ %.pre.pre, %for.inc14.loopexit ], [ %.pre4, %for.body ], !dbg !4632
  %cfg3.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4644
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3.phi.trans.insert, align 8, !dbg !4632
  br label %for.cond, !dbg !4632, !llvm.loop !4645

for.end16:                                        ; preds = %for.cond
  %25 = load i32, i32* @rgn_nr_edges, align 4, !dbg !4647
  %conv17 = sext i32 %25 to i64, !dbg !4647
  %mul18 = shl nsw i64 %conv17, 3, !dbg !4647
  %call19 = call i8* @xmalloc(i64 %mul18) #6, !dbg !4647
  store i8* %call19, i8** bitcast (%struct.edge_def*** @rgn_edges to i8**), align 8, !dbg !4648
  store i32 0, i32* @rgn_nr_edges, align 4, !dbg !4649
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4650
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !4650
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !4650
  %x_entry_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 0, !dbg !4650
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr22, align 8, !dbg !4650
  %29 = bitcast %struct.edge_iterator* %tmp38 to i8*, !dbg !4652
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp38, i64 0, i32 0, !dbg !4652
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp38, i64 0, i32 1, !dbg !4652
  %32 = bitcast %struct.edge_def** %e to i64*, !dbg !4656
  br label %for.cond24, !dbg !4650

for.cond24:                                       ; preds = %for.inc50, %for.end16
  %.pre68 = phi %struct.function* [ %26, %for.end16 ], [ %.pre6, %for.inc50 ]
  %33 = phi %struct.control_flow_graph* [ %27, %for.end16 ], [ %.pre7, %for.inc50 ], !dbg !4658
  %.pn1 = phi %struct.basic_block_def* [ %28, %for.end16 ], [ %block.1, %for.inc50 ]
  %block.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !4659
  %block.1 = load %struct.basic_block_def*, %struct.basic_block_def** %block.1.in, align 8, !dbg !4659
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block.1, metadata !4605, metadata !DIExpression()), !dbg !4634
  %x_exit_block_ptr27 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %33, i64 0, i32 1, !dbg !4658
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr27, align 8, !dbg !4658
  %cmp28 = icmp eq %struct.basic_block_def* %block.1, %34, !dbg !4658
  br i1 %cmp28, label %for.end52, label %for.body30, !dbg !4650

for.body30:                                       ; preds = %for.cond24
  %35 = load i32*, i32** @containing_rgn, align 8, !dbg !4660
  %index31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.1, i64 0, i32 9, !dbg !4660
  %36 = load i32, i32* %index31, align 8, !dbg !4660
  %idxprom32 = sext i32 %36 to i64, !dbg !4660
  %arrayidx33 = getelementptr inbounds i32, i32* %35, i64 %idxprom32, !dbg !4660
  %37 = load i32, i32* %arrayidx33, align 4, !dbg !4660
  %cmp34 = icmp eq i32 %37, %rgn, !dbg !4662
  br i1 %cmp34, label %if.end37, label %for.inc50, !dbg !4663

if.end37:                                         ; preds = %for.body30
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7, !dbg !4664
  %succs39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.1, i64 0, i32 1, !dbg !4664
  %call40 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs39) #8, !dbg !4664
  %38 = extractvalue { i32, %struct.VEC_edge_gc** } %call40, 0, !dbg !4664
  store i32 %38, i32* %30, align 8, !dbg !4664
  %39 = extractvalue { i32, %struct.VEC_edge_gc** } %call40, 1, !dbg !4664
  store %struct.VEC_edge_gc** %39, %struct.VEC_edge_gc*** %31, align 8, !dbg !4664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %29, i64 16, i1 false), !dbg !4664
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7, !dbg !4664
  br label %for.cond41, !dbg !4664

for.cond41:                                       ; preds = %for.body44, %if.end37
  %40 = load i32, i32* %11, align 8, !dbg !4665
  %41 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4665
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4608, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  %call42 = call fastcc zeroext i8 @ei_cond(i32 %40, %struct.VEC_edge_gc** %41, %struct.edge_def** nonnull %e) #8, !dbg !4665
  %tobool43 = icmp eq i8 %call42, 0, !dbg !4664
  br i1 %tobool43, label %for.inc50.loopexit, label %for.body44, !dbg !4664

for.body44:                                       ; preds = %for.cond41
  %42 = load i64, i64* %32, align 8, !dbg !4666
  %43 = load %struct.edge_def**, %struct.edge_def*** @rgn_edges, align 8, !dbg !4667
  %44 = load i32, i32* @rgn_nr_edges, align 4, !dbg !4668
  %inc45 = add nsw i32 %44, 1, !dbg !4668
  store i32 %inc45, i32* @rgn_nr_edges, align 4, !dbg !4668
  %idxprom46 = sext i32 %44 to i64, !dbg !4667
  %arrayidx47 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %43, i64 %idxprom46, !dbg !4667
  %45 = bitcast %struct.edge_def** %arrayidx47 to i64*, !dbg !4669
  store i64 %42, i64* %45, align 8, !dbg !4669
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4609, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4665
  br label %for.cond41, !dbg !4665, !llvm.loop !4670

for.inc50.loopexit:                               ; preds = %for.cond41
  %.pre6.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4658
  br label %for.inc50, !dbg !4658

for.inc50:                                        ; preds = %for.inc50.loopexit, %for.body30
  %.pre6 = phi %struct.function* [ %.pre6.pre, %for.inc50.loopexit ], [ %.pre68, %for.body30 ], !dbg !4658
  %cfg26.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre6, i64 0, i32 1, !dbg !4672
  %.pre7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg26.phi.trans.insert, align 8, !dbg !4658
  br label %for.cond24, !dbg !4658, !llvm.loop !4673

for.end52:                                        ; preds = %for.cond24
  %46 = load i32, i32* @current_nr_blocks, align 4, !dbg !4675
  %47 = load i32, i32* @rgn_nr_edges, align 4, !dbg !4676
  %call53 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %46, i32 %47) #6, !dbg !4677
  store %struct.simple_bitmap_def** %call53, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !4678
  %48 = load i32, i32* @current_nr_blocks, align 4, !dbg !4679
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call53, i32 %48) #6, !dbg !4680
  %49 = load i32, i32* @current_nr_blocks, align 4, !dbg !4681
  %50 = load i32, i32* @rgn_nr_edges, align 4, !dbg !4682
  %call54 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %49, i32 %50) #6, !dbg !4683
  store %struct.simple_bitmap_def** %call54, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !4684
  %51 = load i32, i32* @current_nr_blocks, align 4, !dbg !4685
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call54, i32 %51) #6, !dbg !4686
  call void @llvm.dbg.value(metadata i32 0, metadata !4604, metadata !DIExpression()), !dbg !4610
  br label %for.cond55, !dbg !4687

for.cond55:                                       ; preds = %for.body58, %for.end52
  %bb.0 = phi i32 [ 0, %for.end52 ], [ %inc60, %for.body58 ], !dbg !4689
  call void @llvm.dbg.value(metadata i32 %bb.0, metadata !4604, metadata !DIExpression()), !dbg !4610
  %52 = load i32, i32* @current_nr_blocks, align 4, !dbg !4690
  %cmp56 = icmp slt i32 %bb.0, %52, !dbg !4692
  br i1 %cmp56, label %for.body58, label %for.end61, !dbg !4693

for.body58:                                       ; preds = %for.cond55
  call fastcc void @compute_dom_prob_ps(i32 %bb.0) #8, !dbg !4694
  %inc60 = add nuw nsw i32 %bb.0, 1, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %inc60, metadata !4604, metadata !DIExpression()), !dbg !4610
  br label %for.cond55, !dbg !4696, !llvm.loop !4697

for.end61:                                        ; preds = %for.cond55
  %53 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4699
  %cfg63 = getelementptr inbounds %struct.function, %struct.function* %53, i64 0, i32 1, !dbg !4699
  %54 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg63, align 8, !dbg !4699
  %x_entry_block_ptr64 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %54, i64 0, i32 0, !dbg !4699
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr64, align 8, !dbg !4699
  %56 = bitcast %struct.edge_iterator* %tmp80 to i8*, !dbg !4701
  %57 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp80, i64 0, i32 0, !dbg !4701
  %58 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp80, i64 0, i32 1, !dbg !4701
  br label %for.cond66, !dbg !4699

for.cond66:                                       ; preds = %for.inc90, %for.end61
  %.pre1012 = phi %struct.function* [ %53, %for.end61 ], [ %.pre10, %for.inc90 ]
  %59 = phi %struct.control_flow_graph* [ %54, %for.end61 ], [ %.pre11, %for.inc90 ], !dbg !4705
  %.pn2 = phi %struct.basic_block_def* [ %55, %for.end61 ], [ %block.2, %for.inc90 ]
  %block.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn2, i64 0, i32 6, !dbg !4706
  %block.2 = load %struct.basic_block_def*, %struct.basic_block_def** %block.2.in, align 8, !dbg !4706
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block.2, metadata !4605, metadata !DIExpression()), !dbg !4634
  %x_exit_block_ptr69 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %59, i64 0, i32 1, !dbg !4705
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr69, align 8, !dbg !4705
  %cmp70 = icmp eq %struct.basic_block_def* %block.2, %60, !dbg !4705
  br i1 %cmp70, label %for.end92, label %for.body72, !dbg !4699

for.body72:                                       ; preds = %for.cond66
  %61 = load i32*, i32** @containing_rgn, align 8, !dbg !4707
  %index73 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.2, i64 0, i32 9, !dbg !4707
  %62 = load i32, i32* %index73, align 8, !dbg !4707
  %idxprom74 = sext i32 %62 to i64, !dbg !4707
  %arrayidx75 = getelementptr inbounds i32, i32* %61, i64 %idxprom74, !dbg !4707
  %63 = load i32, i32* %arrayidx75, align 4, !dbg !4707
  %cmp76 = icmp eq i32 %63, %rgn, !dbg !4709
  br i1 %cmp76, label %if.end79, label %for.inc90, !dbg !4710

if.end79:                                         ; preds = %for.body72
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #7, !dbg !4711
  %succs81 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.2, i64 0, i32 1, !dbg !4711
  %call82 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs81) #8, !dbg !4711
  %64 = extractvalue { i32, %struct.VEC_edge_gc** } %call82, 0, !dbg !4711
  store i32 %64, i32* %57, align 8, !dbg !4711
  %65 = extractvalue { i32, %struct.VEC_edge_gc** } %call82, 1, !dbg !4711
  store %struct.VEC_edge_gc** %65, %struct.VEC_edge_gc*** %58, align 8, !dbg !4711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %56, i64 16, i1 false), !dbg !4711
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #7, !dbg !4711
  br label %for.cond83, !dbg !4711

for.cond83:                                       ; preds = %for.body86, %if.end79
  %66 = load i32, i32* %11, align 8, !dbg !4712
  %67 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4712
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4608, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  %call84 = call fastcc zeroext i8 @ei_cond(i32 %66, %struct.VEC_edge_gc** %67, %struct.edge_def** nonnull %e) #8, !dbg !4712
  %tobool85 = icmp eq i8 %call84, 0, !dbg !4711
  br i1 %tobool85, label %for.inc90.loopexit, label %for.body86, !dbg !4711

for.body86:                                       ; preds = %for.cond83
  %68 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4714
  call void @llvm.dbg.value(metadata %struct.edge_def* %68, metadata !4608, metadata !DIExpression()), !dbg !4634
  %aux87 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %68, i64 0, i32 3, !dbg !4715
  store i8* null, i8** %aux87, align 8, !dbg !4716
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4609, metadata !DIExpression(DW_OP_deref)), !dbg !4634
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4712
  br label %for.cond83, !dbg !4712, !llvm.loop !4717

for.inc90.loopexit:                               ; preds = %for.cond83
  %.pre10.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4705
  br label %for.inc90, !dbg !4705

for.inc90:                                        ; preds = %for.inc90.loopexit, %for.body72
  %.pre10 = phi %struct.function* [ %.pre10.pre, %for.inc90.loopexit ], [ %.pre1012, %for.body72 ], !dbg !4705
  %cfg68.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre10, i64 0, i32 1, !dbg !4719
  %.pre11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg68.phi.trans.insert, align 8, !dbg !4705
  br label %for.cond66, !dbg !4705, !llvm.loop !4720

for.end92:                                        ; preds = %for.cond66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4722
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4722
  br label %if.end93, !dbg !4723

if.end93:                                         ; preds = %for.end92, %entry
  ret void, !dbg !4724
}

declare dso_local %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) local_unnamed_addr #2

declare dso_local void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_dom_prob_ps(i32 %bb) unnamed_addr #5 !dbg !4725 {
entry:
  %in_ei = alloca %struct.edge_iterator, align 8
  %in_edge = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %out_edge = alloca %struct.edge_def*, align 8
  %out_ei = alloca %struct.edge_iterator, align 8
  %tmp52 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %bb, metadata !4727, metadata !DIExpression()), !dbg !4736
  %0 = bitcast %struct.edge_iterator* %in_ei to i8*, !dbg !4737
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4737
  %1 = bitcast %struct.edge_def** %in_edge to i8*, !dbg !4738
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4738
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !4739
  %idxprom = sext i32 %bb to i64, !dbg !4739
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !4739
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4739
  %4 = load i32, i32* @current_blocks, align 4, !dbg !4739
  %add = add nsw i32 %4, %bb, !dbg !4739
  %cmp = icmp eq i32 %3, %add, !dbg !4739
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4739

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1410, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4739
  br label %cond.end, !dbg !4739

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq i32 %bb, 0, !dbg !4740
  br i1 %tobool, label %if.then, label %if.end, !dbg !4742

if.then:                                          ; preds = %cond.end
  %5 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @dom, align 8, !dbg !4743
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %5, align 8, !dbg !4743
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %6, i32 0) #8, !dbg !4745
  %7 = load i32*, i32** @prob, align 8, !dbg !4746
  store i32 10000, i32* %7, align 4, !dbg !4747
  br label %cleanup93, !dbg !4748

if.end:                                           ; preds = %cond.end
  %8 = load i32*, i32** @prob, align 8, !dbg !4749
  %arrayidx6 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !4749
  store i32 0, i32* %arrayidx6, align 4, !dbg !4750
  %9 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @dom, align 8, !dbg !4751
  %arrayidx8 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %9, i64 %idxprom, !dbg !4751
  %10 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx8, align 8, !dbg !4751
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %10) #6, !dbg !4752
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4753
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7, !dbg !4753
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4753
  %cfg = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !4753
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4753
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 2, !dbg !4753
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4753
  %tobool9 = icmp eq %struct.VEC_basic_block_gc* %14, null, !dbg !4753
  br i1 %tobool9, label %cond.end15, label %cond.true10, !dbg !4753

cond.true10:                                      ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i64 0, i32 0, !dbg !4753
  br label %cond.end15, !dbg !4753

cond.end15:                                       ; preds = %if.end, %cond.true10
  %cond16 = phi %struct.VEC_basic_block_base* [ %base, %cond.true10 ], [ null, %if.end ], !dbg !4753
  %15 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4753
  %16 = load i32*, i32** @ebb_head, align 8, !dbg !4753
  %arrayidx18 = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !4753
  %17 = load i32, i32* %arrayidx18, align 4, !dbg !4753
  %idxprom19 = sext i32 %17 to i64, !dbg !4753
  %arrayidx20 = getelementptr inbounds i32, i32* %15, i64 %idxprom19, !dbg !4753
  %18 = load i32, i32* %arrayidx20, align 4, !dbg !4753
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond16, i32 %18) #8, !dbg !4753
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !4753
  %call21 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !4753
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4753
  %20 = extractvalue { i32, %struct.VEC_edge_gc** } %call21, 0, !dbg !4753
  store i32 %20, i32* %19, align 8, !dbg !4753
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4753
  %22 = extractvalue { i32, %struct.VEC_edge_gc** } %call21, 1, !dbg !4753
  store %struct.VEC_edge_gc** %22, %struct.VEC_edge_gc*** %21, align 8, !dbg !4753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !4753
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7, !dbg !4753
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %in_ei, i64 0, i32 0, !dbg !4754
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %in_ei, i64 0, i32 1, !dbg !4754
  %25 = bitcast %struct.edge_def** %out_edge to i8*, !dbg !4755
  %26 = bitcast %struct.edge_iterator* %out_ei to i8*, !dbg !4755
  %27 = bitcast %struct.edge_iterator* %tmp52 to i8*, !dbg !4756
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp52, i64 0, i32 0, !dbg !4756
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp52, i64 0, i32 1, !dbg !4756
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %out_ei, i64 0, i32 0, !dbg !4758
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %out_ei, i64 0, i32 1, !dbg !4758
  br label %for.cond, !dbg !4753

for.cond:                                         ; preds = %cleanup, %cond.end15
  %32 = load i32, i32* %23, align 8, !dbg !4760
  %33 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %24, align 8, !dbg !4760
  call void @llvm.dbg.value(metadata %struct.edge_def** %in_edge, metadata !4729, metadata !DIExpression(DW_OP_deref)), !dbg !4736
  %call22 = call fastcc zeroext i8 @ei_cond(i32 %32, %struct.VEC_edge_gc** %33, %struct.edge_def** nonnull %in_edge) #8, !dbg !4760
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4753
  br i1 %tobool23, label %for.end71, label %for.body, !dbg !4753

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7, !dbg !4761
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7, !dbg !4762
  %34 = load %struct.edge_def*, %struct.edge_def** %in_edge, align 8, !dbg !4763
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !4729, metadata !DIExpression()), !dbg !4736
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 0, !dbg !4765
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4765
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4766
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !4766
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !4766
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 0, !dbg !4766
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4766
  %cmp26 = icmp eq %struct.basic_block_def* %35, %38, !dbg !4767
  br i1 %cmp26, label %cleanup, label %if.end28, !dbg !4768

if.end28:                                         ; preds = %for.body
  %39 = load i32*, i32** @block_to_bb, align 8, !dbg !4769
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !4729, metadata !DIExpression()), !dbg !4736
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 9, !dbg !4769
  %40 = load i32, i32* %index, align 8, !dbg !4769
  %idxprom30 = sext i32 %40 to i64, !dbg !4769
  %arrayidx31 = getelementptr inbounds i32, i32* %39, i64 %idxprom30, !dbg !4769
  %41 = load i32, i32* %arrayidx31, align 4, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %41, metadata !4730, metadata !DIExpression()), !dbg !4755
  %42 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @dom, align 8, !dbg !4770
  %arrayidx33 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %42, i64 %idxprom, !dbg !4770
  %43 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx33, align 8, !dbg !4770
  %idxprom36 = sext i32 %41 to i64, !dbg !4771
  %arrayidx37 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %42, i64 %idxprom36, !dbg !4771
  %44 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx37, align 8, !dbg !4771
  call void @sbitmap_a_and_b(%struct.simple_bitmap_def* %43, %struct.simple_bitmap_def* %43, %struct.simple_bitmap_def* %44) #6, !dbg !4772
  %45 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !4773
  %arrayidx39 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %45, i64 %idxprom, !dbg !4773
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx39, align 8, !dbg !4773
  %arrayidx43 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %45, i64 %idxprom36, !dbg !4774
  %47 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx43, align 8, !dbg !4774
  call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %46, %struct.simple_bitmap_def* %46, %struct.simple_bitmap_def* %47) #6, !dbg !4775
  %48 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !4776
  %arrayidx45 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %48, i64 %idxprom, !dbg !4776
  %49 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx45, align 8, !dbg !4776
  %50 = load %struct.edge_def*, %struct.edge_def** %in_edge, align 8, !dbg !4777
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !4729, metadata !DIExpression()), !dbg !4736
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %50, i64 0, i32 3, !dbg !4777
  %51 = bitcast i8** %aux to i64*, !dbg !4777
  %52 = load i64, i64* %51, align 8, !dbg !4777
  %conv = trunc i64 %52 to i32, !dbg !4777
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %49, i32 %conv) #8, !dbg !4778
  %53 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !4779
  %arrayidx47 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %53, i64 %idxprom, !dbg !4779
  %54 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx47, align 8, !dbg !4779
  %arrayidx51 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %53, i64 %idxprom36, !dbg !4780
  %55 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx51, align 8, !dbg !4780
  call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %54, %struct.simple_bitmap_def* %54, %struct.simple_bitmap_def* %55) #6, !dbg !4781
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7, !dbg !4782
  %56 = load %struct.edge_def*, %struct.edge_def** %in_edge, align 8, !dbg !4782
  call void @llvm.dbg.value(metadata %struct.edge_def* %56, metadata !4729, metadata !DIExpression()), !dbg !4736
  %src53 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %56, i64 0, i32 0, !dbg !4782
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %src53, align 8, !dbg !4782
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i64 0, i32 1, !dbg !4782
  %call54 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4782
  %58 = extractvalue { i32, %struct.VEC_edge_gc** } %call54, 0, !dbg !4782
  store i32 %58, i32* %28, align 8, !dbg !4782
  %59 = extractvalue { i32, %struct.VEC_edge_gc** } %call54, 1, !dbg !4782
  store %struct.VEC_edge_gc** %59, %struct.VEC_edge_gc*** %29, align 8, !dbg !4782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %27, i64 16, i1 false), !dbg !4782
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7, !dbg !4782
  br label %for.cond55, !dbg !4782

for.cond55:                                       ; preds = %for.body58, %if.end28
  %60 = load i32, i32* %30, align 8, !dbg !4783
  %61 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %31, align 8, !dbg !4783
  call void @llvm.dbg.value(metadata %struct.edge_def** %out_edge, metadata !4734, metadata !DIExpression(DW_OP_deref)), !dbg !4755
  %call56 = call fastcc zeroext i8 @ei_cond(i32 %60, %struct.VEC_edge_gc** %61, %struct.edge_def** nonnull %out_edge) #8, !dbg !4783
  %tobool57 = icmp eq i8 %call56, 0, !dbg !4782
  br i1 %tobool57, label %for.end, label %for.body58, !dbg !4782

for.body58:                                       ; preds = %for.cond55
  %62 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !4784
  %arrayidx60 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %62, i64 %idxprom, !dbg !4784
  %63 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx60, align 8, !dbg !4784
  %64 = load %struct.edge_def*, %struct.edge_def** %out_edge, align 8, !dbg !4785
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !4734, metadata !DIExpression()), !dbg !4755
  %aux61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 3, !dbg !4785
  %65 = bitcast i8** %aux61 to i64*, !dbg !4785
  %66 = load i64, i64* %65, align 8, !dbg !4785
  %conv62 = trunc i64 %66 to i32, !dbg !4785
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %63, i32 %conv62) #8, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %out_ei, metadata !4735, metadata !DIExpression(DW_OP_deref)), !dbg !4755
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %out_ei) #8, !dbg !4783
  br label %for.cond55, !dbg !4783, !llvm.loop !4787

for.end:                                          ; preds = %for.cond55
  %67 = load i32*, i32** @prob, align 8, !dbg !4789
  %arrayidx64 = getelementptr inbounds i32, i32* %67, i64 %idxprom36, !dbg !4789
  %68 = load i32, i32* %arrayidx64, align 4, !dbg !4789
  %69 = load %struct.edge_def*, %struct.edge_def** %in_edge, align 8, !dbg !4790
  call void @llvm.dbg.value(metadata %struct.edge_def* %69, metadata !4729, metadata !DIExpression()), !dbg !4736
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %69, i64 0, i32 8, !dbg !4791
  %70 = load i32, i32* %probability, align 4, !dbg !4791
  %mul = mul nsw i32 %68, %70, !dbg !4792
  %div = sdiv i32 %mul, 10000, !dbg !4793
  %arrayidx66 = getelementptr inbounds i32, i32* %67, i64 %idxprom, !dbg !4794
  %71 = load i32, i32* %arrayidx66, align 4, !dbg !4795
  %add67 = add nsw i32 %71, %div, !dbg !4795
  store i32 %add67, i32* %arrayidx66, align 4, !dbg !4795
  br label %cleanup, !dbg !4796

cleanup:                                          ; preds = %for.body, %for.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7, !dbg !4796
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7, !dbg !4796
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %in_ei, metadata !4728, metadata !DIExpression(DW_OP_deref)), !dbg !4736
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %in_ei) #8, !dbg !4760
  br label %for.cond, !dbg !4760, !llvm.loop !4797

for.end71:                                        ; preds = %for.cond
  %72 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @dom, align 8, !dbg !4799
  %arrayidx73 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %72, i64 %idxprom, !dbg !4799
  %73 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx73, align 8, !dbg !4799
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %73, i32 %bb) #8, !dbg !4800
  %74 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !4801
  %arrayidx75 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %74, i64 %idxprom, !dbg !4801
  %75 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx75, align 8, !dbg !4801
  %76 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !4802
  %arrayidx79 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %76, i64 %idxprom, !dbg !4802
  %77 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx79, align 8, !dbg !4802
  call void @sbitmap_difference(%struct.simple_bitmap_def* %75, %struct.simple_bitmap_def* %75, %struct.simple_bitmap_def* %77) #6, !dbg !4803
  %78 = load i32, i32* @sched_verbose, align 4, !dbg !4804
  %cmp80 = icmp sgt i32 %78, 1, !dbg !4806
  br i1 %cmp80, label %if.then82, label %cleanup93, !dbg !4807

if.then82:                                        ; preds = %for.end71
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4808
  %80 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4809
  %81 = load i32*, i32** @ebb_head, align 8, !dbg !4809
  %arrayidx84 = getelementptr inbounds i32, i32* %81, i64 %idxprom, !dbg !4809
  %82 = load i32, i32* %arrayidx84, align 4, !dbg !4809
  %idxprom85 = sext i32 %82 to i64, !dbg !4809
  %arrayidx86 = getelementptr inbounds i32, i32* %80, i64 %idxprom85, !dbg !4809
  %83 = load i32, i32* %arrayidx86, align 4, !dbg !4809
  %84 = load i32*, i32** @prob, align 8, !dbg !4810
  %arrayidx88 = getelementptr inbounds i32, i32* %84, i64 %idxprom, !dbg !4810
  %85 = load i32, i32* %arrayidx88, align 4, !dbg !4810
  %div90 = sdiv i32 %85, 100, !dbg !4811
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0), i32 %bb, i32 %83, i32 %div90) #6, !dbg !4812
  br label %cleanup93, !dbg !4812

cleanup93:                                        ; preds = %for.end71, %if.then82, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4813
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4813
  ret void, !dbg !4813
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_local_free() local_unnamed_addr #5 !dbg !4814 {
entry:
  %0 = load i8*, i8** bitcast (i32** @prob to i8**), align 8, !dbg !4815
  tail call void @free(i8* %0) #6, !dbg !4816
  %1 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @dom to i8**), align 8, !dbg !4817
  tail call void @free(i8* %1) #6, !dbg !4817
  %2 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @pot_split to i8**), align 8, !dbg !4818
  tail call void @free(i8* %2) #6, !dbg !4818
  %3 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @ancestor_edges to i8**), align 8, !dbg !4819
  tail call void @free(i8* %3) #6, !dbg !4819
  %4 = load i8*, i8** bitcast (%struct.edge_def*** @rgn_edges to i8**), align 8, !dbg !4820
  tail call void @free(i8* %4) #6, !dbg !4821
  ret void, !dbg !4822
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_rgn_local_finish() local_unnamed_addr #5 !dbg !4823 {
entry:
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !4824
  %cmp = icmp sgt i32 %0, 1, !dbg !4826
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4827

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !4828
  %tobool = icmp eq i8 %call, 0, !dbg !4828
  br i1 %tobool, label %if.then, label %if.end, !dbg !4829

if.then:                                          ; preds = %land.lhs.true
  tail call void @sched_rgn_local_free() #8, !dbg !4830
  br label %if.end, !dbg !4832

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !4833
}

; Function Attrs: nounwind uwtable
define dso_local void @rgn_setup_common_sched_info() local_unnamed_addr #5 !dbg !4834 {
entry:
  %call = tail call i8* @memcpy(i8* bitcast (%struct.common_sched_info_def* @rgn_common_sched_info to i8*), i8* bitcast (%struct.common_sched_info_def* @haifa_common_sched_info to i8*), i64 40) #6, !dbg !4835
  store void (i32, i32, i32)* @rgn_fix_recovery_cfg, void (i32, i32, i32)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @rgn_common_sched_info, i64 0, i32 0), align 8, !dbg !4836
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* @rgn_add_block, void (%struct.basic_block_def*, %struct.basic_block_def*)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @rgn_common_sched_info, i64 0, i32 1), align 8, !dbg !4837
  store i32 (%struct.basic_block_def*)* @rgn_estimate_number_of_insns, i32 (%struct.basic_block_def*)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @rgn_common_sched_info, i64 0, i32 2), align 8, !dbg !4838
  store i32 1, i32* getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @rgn_common_sched_info, i64 0, i32 4), align 8, !dbg !4839
  store %struct.common_sched_info_def* @rgn_common_sched_info, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !4840
  ret void, !dbg !4841
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @rgn_fix_recovery_cfg(i32 %bbi, i32 %check_bbi, i32 %check_bb_nexti) #5 !dbg !4842 {
entry:
  call void @llvm.dbg.value(metadata i32 %bbi, metadata !4844, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i32 %check_bbi, metadata !4845, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i32 %check_bb_nexti, metadata !4846, metadata !DIExpression()), !dbg !4850
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !4851
  %idxprom = sext i32 %bbi to i64, !dbg !4851
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !4851
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4851
  %idxprom1 = sext i32 %check_bb_nexti to i64, !dbg !4852
  %arrayidx2 = getelementptr inbounds i32, i32* %0, i64 %idxprom1, !dbg !4852
  store i32 %1, i32* %arrayidx2, align 4, !dbg !4853
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !4854
  %3 = load i32*, i32** @block_to_bb, align 8, !dbg !4856
  %idxprom3 = sext i32 %check_bbi to i64, !dbg !4856
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 %idxprom3, !dbg !4856
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !4856
  %add = add nsw i32 %4, 1, !dbg !4857
  %idxprom5 = sext i32 %add to i64, !dbg !4854
  %arrayidx6 = getelementptr inbounds i32, i32* %2, i64 %idxprom5, !dbg !4854
  %5 = load i32, i32* %arrayidx6, align 4, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %5, metadata !4847, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  %6 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4858
  %7 = sext i32 %5 to i64, !dbg !4860
  br label %for.cond, !dbg !4860

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc ], [ %7, %entry ]
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, -1, !dbg !4861
  call void @llvm.dbg.value(metadata i32 undef, metadata !4847, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  %arrayidx8 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next7, !dbg !4862
  %8 = load i32, i32* %arrayidx8, align 4, !dbg !4862
  %cmp = icmp eq i32 %8, %check_bb_nexti, !dbg !4863
  br i1 %cmp, label %for.end, label %for.inc, !dbg !4864

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 undef, metadata !4847, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  br label %for.cond, !dbg !4865, !llvm.loop !4866

for.end:                                          ; preds = %for.cond
  %indvars.iv.next7.lcssa = phi i64 [ %indvars.iv.next7, %for.cond ], !dbg !4861
  %9 = trunc i64 %indvars.iv.next7.lcssa to i32, !dbg !4868
  %idxprom11 = sext i32 %4 to i64, !dbg !4868
  %arrayidx12 = getelementptr inbounds i32, i32* %2, i64 %idxprom11, !dbg !4868
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !4868
  %cmp13 = icmp slt i32 %10, %9, !dbg !4868
  br i1 %cmp13, label %cond.end, label %cond.true, !dbg !4868

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4868
  %.pre = load i32*, i32** @ebb_head, align 8, !dbg !4869
  %.pre1 = load i32*, i32** @block_to_bb, align 8, !dbg !4871
  %.pre2 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4872
  br label %cond.end, !dbg !4868

cond.end:                                         ; preds = %for.end, %cond.true
  %11 = phi i32* [ %6, %for.end ], [ %.pre2, %cond.true ], !dbg !4872
  %12 = phi i32* [ %3, %for.end ], [ %.pre1, %cond.true ], !dbg !4871
  %13 = phi i32* [ %2, %for.end ], [ %.pre, %cond.true ], !dbg !4869
  %arrayidx15 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !4871
  %14 = load i32, i32* %arrayidx15, align 4, !dbg !4871
  %add16 = add nsw i32 %14, 1, !dbg !4874
  %idxprom17 = sext i32 %add16 to i64, !dbg !4869
  %arrayidx18 = getelementptr inbounds i32, i32* %13, i64 %idxprom17, !dbg !4869
  %15 = load i32, i32* %arrayidx18, align 4, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %15, metadata !4848, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  %16 = sext i32 %15 to i64, !dbg !4875
  br label %for.cond20, !dbg !4875

for.cond20:                                       ; preds = %for.inc25, %cond.end
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc25 ], [ %16, %cond.end ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !4876
  call void @llvm.dbg.value(metadata i32 undef, metadata !4848, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  %arrayidx22 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv.next5, !dbg !4877
  %17 = load i32, i32* %arrayidx22, align 4, !dbg !4877
  %cmp23 = icmp eq i32 %17, %bbi, !dbg !4878
  br i1 %cmp23, label %for.end27, label %for.inc25, !dbg !4879

for.inc25:                                        ; preds = %for.cond20
  call void @llvm.dbg.value(metadata i32 undef, metadata !4848, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4850
  br label %for.cond20, !dbg !4880, !llvm.loop !4881

for.end27:                                        ; preds = %for.cond20
  %indvars.iv4.lcssa = phi i64 [ %indvars.iv4, %for.cond20 ]
  %18 = trunc i64 %indvars.iv4.lcssa to i32, !dbg !4850
  call void @llvm.dbg.value(metadata i32 %18, metadata !4848, metadata !DIExpression()), !dbg !4850
  %idxprom30 = sext i32 %14 to i64, !dbg !4883
  %arrayidx31 = getelementptr inbounds i32, i32* %13, i64 %idxprom30, !dbg !4883
  %19 = load i32, i32* %arrayidx31, align 4, !dbg !4883
  %cmp32 = icmp slt i32 %19, %18, !dbg !4883
  br i1 %cmp32, label %cond.end35, label %cond.true33, !dbg !4883

cond.true33:                                      ; preds = %for.end27
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4883
  br label %cond.end35, !dbg !4883

cond.end35:                                       ; preds = %for.end27, %cond.true33
  %cmp37 = icmp sgt i32 %9, %18, !dbg !4884
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !4884

cond.true38:                                      ; preds = %cond.end35
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4884
  br label %cond.end40, !dbg !4884

cond.end40:                                       ; preds = %cond.end35, %cond.true38
  %20 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4885
  %sext = shl i64 %indvars.iv4.lcssa, 32, !dbg !4886
  %idx.ext = ashr exact i64 %sext, 32, !dbg !4886
  %add.ptr = getelementptr inbounds i32, i32* %20, i64 %idx.ext, !dbg !4886
  %add.ptr42 = getelementptr inbounds i32, i32* %add.ptr, i64 1, !dbg !4887
  %21 = bitcast i32* %add.ptr42 to i8*, !dbg !4885
  %22 = bitcast i32* %add.ptr to i8*, !dbg !4888
  %sub45 = sub i64 %indvars.iv.next7.lcssa, %indvars.iv4.lcssa, !dbg !4889
  %sext8 = shl i64 %sub45, 32, !dbg !4890
  %mul = ashr exact i64 %sext8, 30, !dbg !4891
  %call = tail call i8* @memmove(i8* nonnull %21, i8* %22, i64 %mul) #6, !dbg !4892
  %23 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4893
  %arrayidx47 = getelementptr inbounds i32, i32* %23, i64 %idx.ext, !dbg !4893
  store i32 %check_bb_nexti, i32* %arrayidx47, align 4, !dbg !4894
  %24 = load i32*, i32** @block_to_bb, align 8, !dbg !4895
  %arrayidx49 = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !4895
  %25 = load i32, i32* %arrayidx49, align 4, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %25, metadata !4849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4850
  %26 = sext i32 %25 to i64, !dbg !4897
  br label %for.cond51, !dbg !4897

for.cond51:                                       ; preds = %for.body56, %cond.end40
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body56 ], [ %26, %cond.end40 ], !dbg !4898
  %27 = phi i32* [ %.pre3, %for.body56 ], [ %24, %cond.end40 ], !dbg !4898
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !4900
  call void @llvm.dbg.value(metadata i32 undef, metadata !4849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4850
  %arrayidx53 = getelementptr inbounds i32, i32* %27, i64 %idxprom3, !dbg !4898
  %28 = load i32, i32* %arrayidx53, align 4, !dbg !4898
  %29 = sext i32 %28 to i64, !dbg !4901
  %cmp54 = icmp slt i64 %indvars.iv, %29, !dbg !4901
  br i1 %cmp54, label %for.body56, label %for.end62, !dbg !4902

for.body56:                                       ; preds = %for.cond51
  %30 = load i32*, i32** @ebb_head, align 8, !dbg !4903
  %arrayidx58 = getelementptr inbounds i32, i32* %30, i64 %indvars.iv.next, !dbg !4903
  %31 = load i32, i32* %arrayidx58, align 4, !dbg !4904
  %inc59 = add nsw i32 %31, 1, !dbg !4904
  store i32 %inc59, i32* %arrayidx58, align 4, !dbg !4904
  call void @llvm.dbg.value(metadata i32 undef, metadata !4849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4850
  %.pre3 = load i32*, i32** @block_to_bb, align 8, !dbg !4898
  br label %for.cond51, !dbg !4905, !llvm.loop !4906

for.end62:                                        ; preds = %for.cond51
  ret void, !dbg !4908
}

; Function Attrs: nounwind uwtable
define internal void @rgn_add_block(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #5 !dbg !4909 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4911, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !4912, metadata !DIExpression()), !dbg !4917
  tail call void @extend_regions() #8, !dbg !4918
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4919
  %0 = load i32, i32* %index, align 8, !dbg !4919
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull @not_in_df, i32 %0) #6, !dbg !4920
  %cmp = icmp eq %struct.basic_block_def* %after, null, !dbg !4921
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4922

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4923
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !4923
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4923
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !4923
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4923
  %cmp1 = icmp eq %struct.basic_block_def* %3, %after, !dbg !4924
  br i1 %cmp1, label %if.then, label %if.else, !dbg !4925

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @rgn_make_new_region_out_of_new_block(%struct.basic_block_def* %bb) #8, !dbg !4926
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4928
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4928
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !4928
  %x_exit_block_ptr4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !4928
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr4, align 8, !dbg !4928
  %cmp5 = icmp eq %struct.basic_block_def* %6, %after, !dbg !4929
  %7 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4930
  %8 = load i32, i32* @nr_regions, align 4, !dbg !4930
  %sub = add nsw i32 %8, -1, !dbg !4930
  %idxprom = sext i32 %sub to i64, !dbg !4930
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %7, i64 %idxprom, i32 2, !dbg !4930
  %9 = zext i1 %cmp5 to i8, !dbg !4931
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !4931
  %bf.clear = and i8 %bf.load, -2, !dbg !4931
  %bf.set = or i8 %bf.clear, %9, !dbg !4931
  store i8 %bf.set, i8* %dont_calc_deps, align 4, !dbg !4931
  br label %if.end, !dbg !4932

if.else:                                          ; preds = %lor.lhs.false
  %10 = load i32*, i32** @block_to_bb, align 8, !dbg !4933
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %after, i64 0, i32 9, !dbg !4933
  %11 = load i32, i32* %index6, align 8, !dbg !4933
  %idxprom7 = sext i32 %11 to i64, !dbg !4933
  %arrayidx8 = getelementptr inbounds i32, i32* %10, i64 %idxprom7, !dbg !4933
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !4933
  %13 = load i32, i32* %index, align 8, !dbg !4934
  %idxprom10 = sext i32 %13 to i64, !dbg !4934
  %arrayidx11 = getelementptr inbounds i32, i32* %10, i64 %idxprom10, !dbg !4934
  store i32 %12, i32* %arrayidx11, align 4, !dbg !4935
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !4936
  %15 = load i32, i32* %index6, align 8, !dbg !4936
  %idxprom13 = sext i32 %15 to i64, !dbg !4936
  %arrayidx14 = getelementptr inbounds i32, i32* %14, i64 %idxprom13, !dbg !4936
  %16 = load i32, i32* %arrayidx14, align 4, !dbg !4936
  %add = add nsw i32 %16, 1, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %add, metadata !4913, metadata !DIExpression()), !dbg !4938
  %17 = load i32*, i32** @ebb_head, align 8, !dbg !4939
  %idxprom15 = sext i32 %add to i64, !dbg !4939
  %arrayidx16 = getelementptr inbounds i32, i32* %17, i64 %idxprom15, !dbg !4939
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %18, metadata !4916, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4938
  %19 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4940
  %20 = sext i32 %18 to i64, !dbg !4943
  br label %for.cond, !dbg !4943

for.cond:                                         ; preds = %for.inc, %if.else
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc ], [ %20, %if.else ]
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !4938
  call void @llvm.dbg.value(metadata i32 undef, metadata !4916, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4938
  %arrayidx19 = getelementptr inbounds i32, i32* %19, i64 %indvars.iv.next4, !dbg !4944
  %21 = load i32, i32* %arrayidx19, align 4, !dbg !4944
  %cmp21 = icmp eq i32 %21, %15, !dbg !4945
  br i1 %cmp21, label %for.end, label %for.inc, !dbg !4946

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 undef, metadata !4916, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4938
  br label %for.cond, !dbg !4947, !llvm.loop !4948

for.end:                                          ; preds = %for.cond
  %indvars.iv3.lcssa = phi i64 [ %indvars.iv3, %for.cond ]
  %22 = trunc i64 %indvars.iv3.lcssa to i32, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %22, metadata !4916, metadata !DIExpression()), !dbg !4938
  %idxprom24 = sext i32 %16 to i64, !dbg !4950
  %arrayidx25 = getelementptr inbounds i32, i32* %17, i64 %idxprom24, !dbg !4950
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !4950
  %cmp26 = icmp slt i32 %23, %22, !dbg !4950
  br i1 %cmp26, label %cond.end, label %cond.true, !dbg !4950

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4950
  %.pre = load i32*, i32** @rgn_bb_table, align 8, !dbg !4951
  br label %cond.end, !dbg !4950

cond.end:                                         ; preds = %for.end, %cond.true
  %24 = phi i32* [ %19, %for.end ], [ %.pre, %cond.true ], !dbg !4951
  %sext = shl i64 %indvars.iv3.lcssa, 32, !dbg !4952
  %idx.ext = ashr exact i64 %sext, 32, !dbg !4952
  %add.ptr28 = getelementptr inbounds i32, i32* %24, i64 %idx.ext, !dbg !4952
  %add.ptr29 = getelementptr inbounds i32, i32* %add.ptr28, i64 1, !dbg !4953
  %25 = bitcast i32* %add.ptr29 to i8*, !dbg !4951
  %26 = bitcast i32* %add.ptr28 to i8*, !dbg !4954
  %27 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4955
  %28 = load i32, i32* @nr_regions, align 4, !dbg !4955
  %idxprom32 = sext i32 %28 to i64, !dbg !4955
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %27, i64 %idxprom32, i32 1, !dbg !4955
  %29 = load i32, i32* %rgn_blocks, align 4, !dbg !4955
  %add36 = sub i32 %29, %22, !dbg !4956
  %conv37 = sext i32 %add36 to i64, !dbg !4957
  %mul = shl nsw i64 %conv37, 2, !dbg !4958
  %call38 = tail call i8* @memmove(i8* nonnull %25, i8* %26, i64 %mul) #6, !dbg !4959
  %30 = load i32, i32* %index, align 8, !dbg !4960
  %31 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4961
  %arrayidx41 = getelementptr inbounds i32, i32* %31, i64 %idx.ext, !dbg !4961
  store i32 %30, i32* %arrayidx41, align 4, !dbg !4962
  %32 = add i32 %16, 1, !dbg !4963
  %33 = sext i32 %32 to i64, !dbg !4963
  br label %for.cond42, !dbg !4963

for.cond42:                                       ; preds = %for.body45, %cond.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body45 ], [ %33, %cond.end ], !dbg !4938
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4913, metadata !DIExpression()), !dbg !4938
  %34 = load i32, i32* @current_nr_blocks, align 4, !dbg !4964
  %35 = sext i32 %34 to i64, !dbg !4967
  %cmp43 = icmp sgt i64 %indvars.iv1, %35, !dbg !4967
  br i1 %cmp43, label %for.end51, label %for.body45, !dbg !4968

for.body45:                                       ; preds = %for.cond42
  %36 = load i32*, i32** @ebb_head, align 8, !dbg !4969
  %arrayidx47 = getelementptr inbounds i32, i32* %36, i64 %indvars.iv1, !dbg !4969
  %37 = load i32, i32* %arrayidx47, align 4, !dbg !4970
  %inc48 = add nsw i32 %37, 1, !dbg !4970
  store i32 %inc48, i32* %arrayidx47, align 4, !dbg !4970
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, 1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 undef, metadata !4913, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4938
  br label %for.cond42, !dbg !4972, !llvm.loop !4973

for.end51:                                        ; preds = %for.cond42
  %38 = load i32*, i32** @containing_rgn, align 8, !dbg !4975
  %39 = load i32, i32* %index6, align 8, !dbg !4975
  %idxprom53 = sext i32 %39 to i64, !dbg !4975
  %arrayidx54 = getelementptr inbounds i32, i32* %38, i64 %idxprom53, !dbg !4975
  %40 = load i32, i32* %arrayidx54, align 4, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %40, metadata !4913, metadata !DIExpression()), !dbg !4938
  %41 = load i32, i32* %index, align 8, !dbg !4976
  %idxprom56 = sext i32 %41 to i64, !dbg !4976
  %arrayidx57 = getelementptr inbounds i32, i32* %38, i64 %idxprom56, !dbg !4976
  store i32 %40, i32* %arrayidx57, align 4, !dbg !4977
  %42 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4978
  %idxprom58 = sext i32 %40 to i64, !dbg !4978
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %42, i64 %idxprom58, i32 2, !dbg !4978
  %bf.load60 = load i8, i8* %has_real_ebb, align 4, !dbg !4979
  %bf.set62 = or i8 %bf.load60, 2, !dbg !4979
  store i8 %bf.set62, i8* %has_real_ebb, align 4, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %40, metadata !4913, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4938
  %43 = sext i32 %40 to i64, !dbg !4980
  br label %for.cond64, !dbg !4980

for.cond64:                                       ; preds = %for.body67, %for.end51
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body67 ], [ %43, %for.end51 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !4982
  call void @llvm.dbg.value(metadata i32 undef, metadata !4913, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4938
  %44 = load i32, i32* @nr_regions, align 4, !dbg !4983
  %45 = sext i32 %44 to i64, !dbg !4985
  %cmp65 = icmp slt i64 %indvars.iv, %45, !dbg !4985
  br i1 %cmp65, label %for.body67, label %if.end.loopexit, !dbg !4986

for.body67:                                       ; preds = %for.cond64
  %46 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !4987
  %rgn_blocks70 = getelementptr inbounds %struct.region, %struct.region* %46, i64 %indvars.iv.next, i32 1, !dbg !4987
  %47 = load i32, i32* %rgn_blocks70, align 4, !dbg !4988
  %inc71 = add nsw i32 %47, 1, !dbg !4988
  store i32 %inc71, i32* %rgn_blocks70, align 4, !dbg !4988
  call void @llvm.dbg.value(metadata i32 undef, metadata !4913, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4938
  br label %for.cond64, !dbg !4989, !llvm.loop !4990

if.end.loopexit:                                  ; preds = %for.cond64
  br label %if.end, !dbg !4992

if.end:                                           ; preds = %if.end.loopexit, %if.then
  ret void, !dbg !4992
}

; Function Attrs: nounwind uwtable
define internal i32 @rgn_estimate_number_of_insns(%struct.basic_block_def* %bb) #5 !dbg !4993 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4995, metadata !DIExpression()), !dbg !5000
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5001
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !5001
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5001
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5001
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5001
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !5001
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5001
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5001
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5001
  %3 = load i32, i32* %rt_int, align 8, !dbg !5001
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %3) #8, !dbg !5001
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5002
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !5002
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5002
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !5002
  %6 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5002
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5002
  %rt_int12 = bitcast %union.rtunion_def* %arrayidx11 to i32*, !dbg !5002
  %7 = load i32, i32* %rt_int12, align 8, !dbg !5002
  %call13 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %7) #8, !dbg !5002
  %sub = sub nsw i32 %call, %call13, !dbg !5003
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4996, metadata !DIExpression()), !dbg !5000
  %8 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5004
  %tobool14 = icmp eq i32 %8, 0, !dbg !5004
  br i1 %tobool14, label %if.end31, label %if.then, !dbg !5005

if.then:                                          ; preds = %entry
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5006
  %head_17 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 0, !dbg !5006
  %end_21 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !5008
  br label %for.cond, !dbg !5006

for.cond:                                         ; preds = %for.body, %if.then
  %count.0 = phi i32 [ %sub, %if.then ], [ %spec.select, %for.body ], !dbg !5000
  %insn.0.in = phi %struct.rtx_def** [ %head_17, %if.then ], [ %rt_rtx30, %for.body ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4997, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4996, metadata !DIExpression()), !dbg !5000
  %tobool18 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5008
  br i1 %tobool18, label %if.end31.loopexit, label %land.rhs, !dbg !5008

land.rhs:                                         ; preds = %for.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_21, align 8, !dbg !5008
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5008
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5008
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5008
  %cmp = icmp eq %struct.rtx_def* %insn.0, %12, !dbg !5008
  br i1 %cmp, label %if.end31.loopexit, label %for.body, !dbg !5006

for.body:                                         ; preds = %land.rhs
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5012
  %bf.load = load i32, i32* %13, align 8, !dbg !5012
  %bf.clear = and i32 %bf.load, 65535, !dbg !5012
  %cmp25 = icmp eq i32 %bf.clear, 7, !dbg !5012
  %14 = zext i1 %cmp25 to i32, !dbg !5014
  %spec.select = sub i32 %count.0, %14, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4996, metadata !DIExpression()), !dbg !5000
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5008
  %rt_rtx30 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5008
  br label %for.cond, !dbg !5008, !llvm.loop !5015

if.end31.loopexit:                                ; preds = %for.cond, %land.rhs
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], [ %count.0, %land.rhs ], !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4996, metadata !DIExpression()), !dbg !5000
  br label %if.end31, !dbg !5017

if.end31:                                         ; preds = %if.end31.loopexit, %entry
  %count.2 = phi i32 [ %sub, %entry ], [ %count.0.lcssa, %if.end31.loopexit ], !dbg !5018
  call void @llvm.dbg.value(metadata i32 %count.2, metadata !4996, metadata !DIExpression()), !dbg !5000
  ret i32 %count.2, !dbg !5017
}

; Function Attrs: nounwind uwtable
define dso_local void @rgn_setup_sched_infos() local_unnamed_addr #5 !dbg !5019 {
entry:
  %call = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !5020
  %tobool = icmp eq i8 %call, 0, !dbg !5020
  br i1 %tobool, label %if.then, label %if.else, !dbg !5022

if.then:                                          ; preds = %entry
  %call1 = tail call i8* @memcpy(i8* bitcast (%struct.sched_deps_info_def* @rgn_sched_deps_info to i8*), i8* bitcast (%struct.sched_deps_info_def* @rgn_const_sched_deps_info to i8*), i64 104) #6, !dbg !5023
  br label %if.end, !dbg !5023

if.else:                                          ; preds = %entry
  %call2 = tail call i8* @memcpy(i8* bitcast (%struct.sched_deps_info_def* @rgn_sched_deps_info to i8*), i8* bitcast (%struct.sched_deps_info_def* @rgn_const_sel_sched_deps_info to i8*), i64 104) #6, !dbg !5024
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store %struct.sched_deps_info_def* @rgn_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5025
  %call3 = tail call i8* @memcpy(i8* bitcast (%struct.haifa_sched_info* @rgn_sched_info to i8*), i8* bitcast (%struct.haifa_sched_info* @rgn_const_sched_info to i8*), i64 136) #6, !dbg !5026
  store %struct.haifa_sched_info* @rgn_sched_info, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5027
  ret void, !dbg !5028
}

; Function Attrs: nounwind uwtable
define dso_local void @schedule_insns() local_unnamed_addr #5 !dbg !5029 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5032
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5032
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5032
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !5032
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5032
  %cmp = icmp eq i32 %2, 2, !dbg !5034
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5035

if.end:                                           ; preds = %entry
  tail call void @rgn_setup_common_sched_info() #8, !dbg !5036
  tail call void @rgn_setup_sched_infos() #8, !dbg !5037
  tail call void @haifa_sched_init() #6, !dbg !5038
  %3 = load i32, i32* @reload_completed, align 4, !dbg !5039
  %conv = trunc i32 %3 to i8, !dbg !5039
  tail call void @sched_rgn_init(i8 zeroext %conv) #8, !dbg !5040
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull @not_in_df, %struct.bitmap_obstack* null) #8, !dbg !5041
  tail call void @bitmap_clear(%struct.bitmap_head_def* nonnull @not_in_df) #6, !dbg !5042
  call void @llvm.dbg.value(metadata i32 0, metadata !5031, metadata !DIExpression()), !dbg !5043
  br label %for.cond, !dbg !5044

for.cond:                                         ; preds = %for.inc, %if.end
  %rgn.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !5046
  call void @llvm.dbg.value(metadata i32 %rgn.0, metadata !5031, metadata !DIExpression()), !dbg !5043
  %4 = load i32, i32* @nr_regions, align 4, !dbg !5047
  %cmp1 = icmp slt i32 %rgn.0, %4, !dbg !5049
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5050

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @dbg_cnt(i32 30) #6, !dbg !5051
  %tobool = icmp eq i8 %call, 0, !dbg !5051
  br i1 %tobool, label %for.inc, label %if.then3, !dbg !5053

if.then3:                                         ; preds = %for.body
  tail call fastcc void @schedule_region(i32 %rgn.0) #8, !dbg !5054
  br label %for.inc, !dbg !5054

for.inc:                                          ; preds = %for.body, %if.then3
  %inc = add nuw nsw i32 %rgn.0, 1, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5031, metadata !DIExpression()), !dbg !5043
  br label %for.cond, !dbg !5056, !llvm.loop !5057

for.end:                                          ; preds = %for.cond
  tail call void @sched_rgn_finish() #8, !dbg !5059
  tail call void @bitmap_clear(%struct.bitmap_head_def* nonnull @not_in_df) #6, !dbg !5060
  tail call void @haifa_sched_finish() #6, !dbg !5061
  br label %cleanup.cont, !dbg !5062

cleanup.cont:                                     ; preds = %for.end, %entry
  ret void, !dbg !5062
}

declare dso_local void @haifa_sched_init() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !5063 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* @not_in_df, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* null, metadata !5068, metadata !DIExpression()), !dbg !5069
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** getelementptr inbounds (%struct.bitmap_head_def, %struct.bitmap_head_def* @not_in_df, i64 0, i32 1), align 8, !dbg !5070
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** getelementptr inbounds (%struct.bitmap_head_def, %struct.bitmap_head_def* @not_in_df, i64 0, i32 0), align 8, !dbg !5071
  store %struct.bitmap_obstack* null, %struct.bitmap_obstack** getelementptr inbounds (%struct.bitmap_head_def, %struct.bitmap_head_def* @not_in_df, i64 0, i32 3), align 8, !dbg !5072
  ret void, !dbg !5073
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @schedule_region(i32 %rgn) unnamed_addr #5 !dbg !5074 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %curr_bb = alloca %struct.basic_block_def*, align 8
  %head46 = alloca %struct.rtx_def*, align 8
  %tail47 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !5076, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 0, metadata !5078, metadata !DIExpression()), !dbg !5096
  store i32 0, i32* @rgn_n_insns, align 4, !dbg !5097
  tail call void @rgn_setup_region(i32 %rgn) #8, !dbg !5098
  %call = tail call zeroext i8 @sched_is_disabled_for_current_region_p() #8, !dbg !5099
  %tobool = icmp eq i8 %call, 0, !dbg !5099
  br i1 %tobool, label %if.end, label %cleanup.cont177, !dbg !5101

if.end:                                           ; preds = %entry
  tail call void @sched_rgn_compute_dependencies(i32 %rgn) #8, !dbg !5102
  tail call void @sched_rgn_local_init(i32 %rgn) #8, !dbg !5103
  tail call void @compute_priorities() #8, !dbg !5104
  %0 = load i32, i32* @rgn_n_insns, align 4, !dbg !5105
  tail call void @sched_extend_ready_list(i32 %0) #6, !dbg !5106
  %1 = load i8, i8* @sched_pressure_p, align 1, !dbg !5107
  %tobool1 = icmp eq i8 %1, 0, !dbg !5107
  br i1 %tobool1, label %if.end40, label %if.then2, !dbg !5108

if.then2:                                         ; preds = %if.end
  tail call void @sched_init_region_reg_pressure_info() #6, !dbg !5109
  call void @llvm.dbg.value(metadata i32 0, metadata !5077, metadata !DIExpression()), !dbg !5096
  %2 = bitcast %struct.rtx_def** %head to i8*, !dbg !5110
  %3 = bitcast %struct.rtx_def** %tail to i8*, !dbg !5110
  br label %for.cond, !dbg !5111

for.cond:                                         ; preds = %cleanup, %if.then2
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %cleanup ], [ 0, %if.then2 ], !dbg !5112
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !5077, metadata !DIExpression()), !dbg !5096
  %4 = load i32, i32* @current_nr_blocks, align 4, !dbg !5113
  %5 = sext i32 %4 to i64, !dbg !5114
  %cmp = icmp slt i64 %indvars.iv2, %5, !dbg !5114
  br i1 %cmp, label %for.body, label %if.end40.loopexit, !dbg !5115

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5116
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !5116
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5117
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !5117
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5117
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !5117
  %8 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5117
  %tobool3 = icmp eq %struct.VEC_basic_block_gc* %8, null, !dbg !5117
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !5117

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %8, i64 0, i32 0, !dbg !5117
  br label %cond.end, !dbg !5117

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !5117
  %9 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5117
  %10 = load i32*, i32** @ebb_head, align 8, !dbg !5117
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %indvars.iv2, !dbg !5117
  %11 = load i32, i32* %arrayidx, align 4, !dbg !5117
  %idxprom7 = sext i32 %11 to i64, !dbg !5117
  %arrayidx8 = getelementptr inbounds i32, i32* %9, i64 %idxprom7, !dbg !5117
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !5117
  %call9 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12) #8, !dbg !5117
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !5079, metadata !DIExpression()), !dbg !5110
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5118
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !5118
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !5118
  %x_basic_block_info12 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 2, !dbg !5118
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info12, align 8, !dbg !5118
  %tobool13 = icmp eq %struct.VEC_basic_block_gc* %15, null, !dbg !5118
  br i1 %tobool13, label %cond.end20, label %cond.true14, !dbg !5118

cond.true14:                                      ; preds = %cond.end
  %base18 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %15, i64 0, i32 0, !dbg !5118
  br label %cond.end20, !dbg !5118

cond.end20:                                       ; preds = %cond.end, %cond.true14
  %cond21 = phi %struct.VEC_basic_block_base* [ %base18, %cond.true14 ], [ null, %cond.end ], !dbg !5118
  %16 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5118
  %17 = load i32*, i32** @ebb_head, align 8, !dbg !5118
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !5118
  %arrayidx23 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next3, !dbg !5118
  %18 = load i32, i32* %arrayidx23, align 4, !dbg !5118
  %sub = add nsw i32 %18, -1, !dbg !5118
  %idxprom24 = sext i32 %sub to i64, !dbg !5118
  %arrayidx25 = getelementptr inbounds i32, i32* %16, i64 %idxprom24, !dbg !5118
  %19 = load i32, i32* %arrayidx25, align 4, !dbg !5118
  %call26 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond21, i32 %19) #8, !dbg !5118
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call26, metadata !5085, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !5086, metadata !DIExpression(DW_OP_deref)), !dbg !5110
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !5087, metadata !DIExpression(DW_OP_deref)), !dbg !5110
  call void @get_ebb_head_tail(%struct.basic_block_def* %call9, %struct.basic_block_def* %call26, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !5119
  %20 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !5120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5086, metadata !DIExpression()), !dbg !5110
  %21 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !5122
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !5087, metadata !DIExpression()), !dbg !5110
  %call27 = call i32 @no_real_insns_p(%struct.rtx_def* %20, %struct.rtx_def* %21) #6, !dbg !5123
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5123
  br i1 %tobool28, label %if.end35, label %if.then29, !dbg !5124

if.then29:                                        ; preds = %cond.end20
  %cmp30 = icmp eq %struct.basic_block_def* %call9, %call26, !dbg !5125
  br i1 %cmp30, label %cleanup, label %cond.true31, !dbg !5125

cond.true31:                                      ; preds = %if.then29
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2962, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5125
  br label %cleanup, !dbg !5125

if.end35:                                         ; preds = %cond.end20
  %22 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !5086, metadata !DIExpression()), !dbg !5110
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5127
  %rt_rtx = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5127
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5127
  call void @sched_setup_bb_reg_pressure_info(%struct.basic_block_def* %call9, %struct.rtx_def* %24) #6, !dbg !5128
  br label %cleanup, !dbg !5129

cleanup:                                          ; preds = %cond.true31, %if.then29, %if.end35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !5129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5129
  call void @llvm.dbg.value(metadata i32 undef, metadata !5077, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5096
  br label %for.cond, !dbg !5130, !llvm.loop !5131

if.end40.loopexit:                                ; preds = %for.cond
  br label %if.end40, !dbg !5133

if.end40:                                         ; preds = %if.end40.loopexit, %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !5077, metadata !DIExpression()), !dbg !5096
  %25 = bitcast %struct.basic_block_def** %curr_bb to i8*, !dbg !5134
  %26 = bitcast %struct.rtx_def** %head46 to i8*, !dbg !5134
  %27 = bitcast %struct.rtx_def** %tail47 to i8*, !dbg !5134
  br label %for.cond41, !dbg !5133

for.cond41:                                       ; preds = %cleanup141, %if.end40
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup141 ], [ 0, %if.end40 ], !dbg !5135
  %sched_rgn_n_insns.0 = phi i32 [ %sched_rgn_n_insns.2, %cleanup141 ], [ 0, %if.end40 ], !dbg !5135
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5077, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.0, metadata !5078, metadata !DIExpression()), !dbg !5096
  %28 = load i32, i32* @current_nr_blocks, align 4, !dbg !5136
  %29 = sext i32 %28 to i64, !dbg !5137
  %cmp42 = icmp slt i64 %indvars.iv, %29, !dbg !5137
  br i1 %cmp42, label %for.body43, label %for.end150, !dbg !5138

for.body43:                                       ; preds = %for.cond41
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7, !dbg !5139
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7, !dbg !5140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7, !dbg !5140
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5141
  %cfg49 = getelementptr inbounds %struct.function, %struct.function* %30, i64 0, i32 1, !dbg !5141
  %31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg49, align 8, !dbg !5141
  %x_basic_block_info50 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %31, i64 0, i32 2, !dbg !5141
  %32 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info50, align 8, !dbg !5141
  %tobool51 = icmp eq %struct.VEC_basic_block_gc* %32, null, !dbg !5141
  br i1 %tobool51, label %cond.end58, label %cond.true52, !dbg !5141

cond.true52:                                      ; preds = %for.body43
  %base56 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %32, i64 0, i32 0, !dbg !5141
  br label %cond.end58, !dbg !5141

cond.end58:                                       ; preds = %for.body43, %cond.true52
  %cond59 = phi %struct.VEC_basic_block_base* [ %base56, %cond.true52 ], [ null, %for.body43 ], !dbg !5141
  %33 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5141
  %34 = load i32*, i32** @ebb_head, align 8, !dbg !5141
  %arrayidx61 = getelementptr inbounds i32, i32* %34, i64 %indvars.iv, !dbg !5141
  %35 = load i32, i32* %arrayidx61, align 4, !dbg !5141
  %idxprom62 = sext i32 %35 to i64, !dbg !5141
  %arrayidx63 = getelementptr inbounds i32, i32* %33, i64 %idxprom62, !dbg !5141
  %36 = load i32, i32* %arrayidx63, align 4, !dbg !5141
  %call64 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond59, i32 %36) #8, !dbg !5141
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call64, metadata !5088, metadata !DIExpression()), !dbg !5134
  %37 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5142
  %cfg66 = getelementptr inbounds %struct.function, %struct.function* %37, i64 0, i32 1, !dbg !5142
  %38 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg66, align 8, !dbg !5142
  %x_basic_block_info67 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %38, i64 0, i32 2, !dbg !5142
  %39 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info67, align 8, !dbg !5142
  %tobool68 = icmp eq %struct.VEC_basic_block_gc* %39, null, !dbg !5142
  br i1 %tobool68, label %cond.end75, label %cond.true69, !dbg !5142

cond.true69:                                      ; preds = %cond.end58
  %base73 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %39, i64 0, i32 0, !dbg !5142
  br label %cond.end75, !dbg !5142

cond.end75:                                       ; preds = %cond.end58, %cond.true69
  %cond76 = phi %struct.VEC_basic_block_base* [ %base73, %cond.true69 ], [ null, %cond.end58 ], !dbg !5142
  %40 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5142
  %41 = load i32*, i32** @ebb_head, align 8, !dbg !5142
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5142
  %arrayidx79 = getelementptr inbounds i32, i32* %41, i64 %indvars.iv.next, !dbg !5142
  %42 = load i32, i32* %arrayidx79, align 4, !dbg !5142
  %sub80 = add nsw i32 %42, -1, !dbg !5142
  %idxprom81 = sext i32 %sub80 to i64, !dbg !5142
  %arrayidx82 = getelementptr inbounds i32, i32* %40, i64 %idxprom81, !dbg !5142
  %43 = load i32, i32* %arrayidx82, align 4, !dbg !5142
  %call83 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond76, i32 %43) #8, !dbg !5142
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call83, metadata !5092, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head46, metadata !5094, metadata !DIExpression(DW_OP_deref)), !dbg !5134
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail47, metadata !5095, metadata !DIExpression(DW_OP_deref)), !dbg !5134
  call void @get_ebb_head_tail(%struct.basic_block_def* %call64, %struct.basic_block_def* %call83, %struct.rtx_def** nonnull %head46, %struct.rtx_def** nonnull %tail47) #6, !dbg !5143
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head46, align 8, !dbg !5144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %44, metadata !5094, metadata !DIExpression()), !dbg !5134
  %45 = load %struct.rtx_def*, %struct.rtx_def** %tail47, align 8, !dbg !5146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !5095, metadata !DIExpression()), !dbg !5134
  %call84 = call i32 @no_real_insns_p(%struct.rtx_def* %44, %struct.rtx_def* %45) #6, !dbg !5147
  %tobool85 = icmp eq i32 %call84, 0, !dbg !5147
  br i1 %tobool85, label %if.end92, label %if.then86, !dbg !5148

if.then86:                                        ; preds = %cond.end75
  %cmp87 = icmp eq %struct.basic_block_def* %call64, %call83, !dbg !5149
  br i1 %cmp87, label %cleanup141, label %cond.true88, !dbg !5149

cond.true88:                                      ; preds = %if.then86
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2982, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5149
  br label %cleanup141, !dbg !5149

if.end92:                                         ; preds = %cond.end75
  %46 = load %struct.rtx_def*, %struct.rtx_def** %head46, align 8, !dbg !5151
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !5094, metadata !DIExpression()), !dbg !5134
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5151
  %48 = bitcast %union.rtunion_def* %47 to i64*, !dbg !5151
  %49 = load i64, i64* %48, align 8, !dbg !5151
  %50 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5152
  %prev_head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %50, i64 0, i32 8, !dbg !5153
  %51 = bitcast %struct.rtx_def** %prev_head to i64*, !dbg !5154
  store i64 %49, i64* %51, align 8, !dbg !5154
  %52 = load %struct.rtx_def*, %struct.rtx_def** %tail47, align 8, !dbg !5155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !5095, metadata !DIExpression()), !dbg !5134
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5155
  %54 = bitcast %union.rtunion_def* %53 to i64*, !dbg !5155
  %55 = load i64, i64* %54, align 8, !dbg !5155
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %50, i64 0, i32 9, !dbg !5156
  %56 = bitcast %struct.rtx_def** %next_tail to i64*, !dbg !5157
  store i64 %55, i64* %56, align 8, !dbg !5157
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !5094, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !5095, metadata !DIExpression()), !dbg !5134
  call void @remove_notes(%struct.rtx_def* %46, %struct.rtx_def* %52) #6, !dbg !5158
  call void @unlink_bb_notes(%struct.basic_block_def* %call64, %struct.basic_block_def* %call83) #6, !dbg !5159
  %57 = trunc i64 %indvars.iv to i32, !dbg !5160
  store i32 %57, i32* @target_bb, align 4, !dbg !5160
  %58 = load i32, i32* @flag_schedule_interblock, align 4, !dbg !5161
  %tobool101 = icmp ne i32 %58, 0, !dbg !5161
  %59 = load i32, i32* @current_nr_blocks, align 4, !dbg !5161
  %cmp102 = icmp eq i32 %59, 1, !dbg !5161
  %or.cond = or i1 %tobool101, %cmp102, !dbg !5161
  br i1 %or.cond, label %cond.end105, label %cond.true103, !dbg !5161

cond.true103:                                     ; preds = %if.end92
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5161
  %.pre = load i32, i32* @current_nr_blocks, align 4, !dbg !5162
  br label %cond.end105, !dbg !5161

cond.end105:                                      ; preds = %if.end92, %cond.true103
  %60 = phi i32 [ %59, %if.end92 ], [ %.pre, %cond.true103 ], !dbg !5162
  %cmp107 = icmp eq i32 %60, 1, !dbg !5163
  %61 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5164
  %queue_must_finish_empty = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %61, i64 0, i32 12, !dbg !5165
  %62 = zext i1 %cmp107 to i8, !dbg !5166
  %bf.load = load i8, i8* %queue_must_finish_empty, align 8, !dbg !5166
  %bf.clear = and i8 %bf.load, -2, !dbg !5166
  %bf.set = or i8 %bf.clear, %62, !dbg !5166
  store i8 %bf.set, i8* %queue_must_finish_empty, align 8, !dbg !5166
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call64, metadata !5093, metadata !DIExpression()), !dbg !5134
  store %struct.basic_block_def* %call64, %struct.basic_block_def** %curr_bb, align 8, !dbg !5167
  %call108 = call zeroext i8 @dbg_cnt(i32 27) #6, !dbg !5168
  %tobool109 = icmp eq i8 %call108, 0, !dbg !5168
  br i1 %tobool109, label %if.else, label %if.then110, !dbg !5170

if.then110:                                       ; preds = %cond.end105
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %curr_bb, metadata !5093, metadata !DIExpression(DW_OP_deref)), !dbg !5134
  call void @schedule_block(%struct.basic_block_def** nonnull %curr_bb) #6, !dbg !5171
  %63 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5173
  %cfg112 = getelementptr inbounds %struct.function, %struct.function* %63, i64 0, i32 1, !dbg !5173
  %64 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg112, align 8, !dbg !5173
  %x_basic_block_info113 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %64, i64 0, i32 2, !dbg !5173
  %65 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info113, align 8, !dbg !5173
  %tobool114 = icmp eq %struct.VEC_basic_block_gc* %65, null, !dbg !5173
  br i1 %tobool114, label %cond.end121, label %cond.true115, !dbg !5173

cond.true115:                                     ; preds = %if.then110
  %base119 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %65, i64 0, i32 0, !dbg !5173
  br label %cond.end121, !dbg !5173

cond.end121:                                      ; preds = %if.then110, %cond.true115
  %cond122 = phi %struct.VEC_basic_block_base* [ %base119, %cond.true115 ], [ null, %if.then110 ], !dbg !5173
  %66 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5173
  %67 = load i32*, i32** @ebb_head, align 8, !dbg !5173
  %arrayidx124 = getelementptr inbounds i32, i32* %67, i64 %indvars.iv, !dbg !5173
  %68 = load i32, i32* %arrayidx124, align 4, !dbg !5173
  %idxprom125 = sext i32 %68 to i64, !dbg !5173
  %arrayidx126 = getelementptr inbounds i32, i32* %66, i64 %idxprom125, !dbg !5173
  %69 = load i32, i32* %arrayidx126, align 4, !dbg !5173
  %call127 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond122, i32 %69) #8, !dbg !5173
  %cmp128 = icmp eq %struct.basic_block_def* %call127, %call64, !dbg !5173
  br i1 %cmp128, label %cond.end132, label %cond.true130, !dbg !5173

cond.true130:                                     ; preds = %cond.end121
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3002, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5173
  br label %cond.end132, !dbg !5173

cond.end132:                                      ; preds = %cond.end121, %cond.true130
  br label %if.end136, !dbg !5174

if.else:                                          ; preds = %cond.end105
  br label %if.end136

if.end136:                                        ; preds = %if.else, %cond.end132
  %.pn.in = phi i32* [ @sched_n_insns, %cond.end132 ], [ @rgn_n_insns, %if.else ]
  %.pn = load i32, i32* %.pn.in, align 4, !dbg !5175
  %sched_rgn_n_insns.1 = add nsw i32 %sched_rgn_n_insns.0, %.pn, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.1, metadata !5078, metadata !DIExpression()), !dbg !5096
  %70 = load i32, i32* @current_nr_blocks, align 4, !dbg !5176
  %cmp137 = icmp sgt i32 %70, 1, !dbg !5178
  br i1 %cmp137, label %if.then139, label %cleanup141, !dbg !5179

if.then139:                                       ; preds = %if.end136
  call fastcc void @free_trg_info() #8, !dbg !5180
  br label %cleanup141, !dbg !5180

cleanup141:                                       ; preds = %if.end136, %if.then139, %cond.true88, %if.then86
  %sched_rgn_n_insns.2 = phi i32 [ %sched_rgn_n_insns.0, %if.then86 ], [ %sched_rgn_n_insns.0, %cond.true88 ], [ %sched_rgn_n_insns.1, %if.then139 ], [ %sched_rgn_n_insns.1, %if.end136 ], !dbg !5096
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.2, metadata !5078, metadata !DIExpression()), !dbg !5096
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7, !dbg !5181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7, !dbg !5181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7, !dbg !5181
  call void @llvm.dbg.value(metadata i32 undef, metadata !5077, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5096
  br label %for.cond41, !dbg !5182, !llvm.loop !5183

for.end150:                                       ; preds = %for.cond41
  %sched_rgn_n_insns.0.lcssa = phi i32 [ %sched_rgn_n_insns.0, %for.cond41 ], !dbg !5135
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.0.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.0.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %sched_rgn_n_insns.0.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5096
  %71 = load i32, i32* @rgn_n_insns, align 4, !dbg !5185
  %cmp151 = icmp eq i32 %sched_rgn_n_insns.0.lcssa, %71, !dbg !5185
  br i1 %cmp151, label %cond.end155, label %cond.true153, !dbg !5185

cond.true153:                                     ; preds = %for.end150
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3016, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5185
  br label %cond.end155, !dbg !5185

cond.end155:                                      ; preds = %for.end150, %cond.true153
  call void @sched_finish_ready_list() #6, !dbg !5186
  call void @sched_rgn_local_finish() #8, !dbg !5187
  call void @llvm.dbg.value(metadata i32 0, metadata !5077, metadata !DIExpression()), !dbg !5096
  br label %for.cond157, !dbg !5188

for.cond157:                                      ; preds = %for.body160, %cond.end155
  %bb.2 = phi i32 [ 0, %cond.end155 ], [ %inc162, %for.body160 ], !dbg !5190
  call void @llvm.dbg.value(metadata i32 %bb.2, metadata !5077, metadata !DIExpression()), !dbg !5096
  %72 = load i32, i32* @current_nr_blocks, align 4, !dbg !5191
  %cmp158 = icmp slt i32 %bb.2, %72, !dbg !5193
  br i1 %cmp158, label %for.body160, label %for.end163, !dbg !5194

for.body160:                                      ; preds = %for.cond157
  call fastcc void @free_block_dependencies(i32 %bb.2) #8, !dbg !5195
  %inc162 = add nuw nsw i32 %bb.2, 1, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %inc162, metadata !5077, metadata !DIExpression()), !dbg !5096
  br label %for.cond157, !dbg !5197, !llvm.loop !5198

for.end163:                                       ; preds = %for.cond157
  %73 = load i8, i8* @haifa_recovery_bb_ever_added_p, align 1, !dbg !5200
  %tobool165 = icmp eq i8 %73, 0, !dbg !5200
  br i1 %tobool165, label %lor.lhs.false166, label %cleanup.cont177, !dbg !5200

lor.lhs.false166:                                 ; preds = %for.end163
  %call167 = call zeroext i8 @deps_pools_are_empty_p() #6, !dbg !5200
  %tobool169 = icmp eq i8 %call167, 0, !dbg !5200
  br i1 %tobool169, label %cond.true170, label %cleanup.cont177, !dbg !5200

cond.true170:                                     ; preds = %lor.lhs.false166
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3028, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5200
  br label %cleanup.cont177, !dbg !5200

cleanup.cont177:                                  ; preds = %lor.lhs.false166, %for.end163, %entry, %cond.true170
  ret void, !dbg !5201
}

declare dso_local void @haifa_sched_finish() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @rgn_make_new_region_out_of_new_block(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !5202 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5206, metadata !DIExpression()), !dbg !5208
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5209
  %1 = load i32, i32* @nr_regions, align 4, !dbg !5209
  %idxprom = sext i32 %1 to i64, !dbg !5209
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 1, !dbg !5209
  %2 = load i32, i32* %rgn_blocks, align 4, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %2, metadata !5207, metadata !DIExpression()), !dbg !5208
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5210
  %3 = load i32, i32* %index, align 8, !dbg !5210
  %4 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5211
  %idxprom1 = sext i32 %2 to i64, !dbg !5211
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1, !dbg !5211
  store i32 %3, i32* %arrayidx2, align 4, !dbg !5212
  %5 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5213
  %6 = load i32, i32* @nr_regions, align 4, !dbg !5213
  %idxprom3 = sext i32 %6 to i64, !dbg !5213
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %5, i64 %idxprom3, i32 0, !dbg !5213
  store i32 1, i32* %rgn_nr_blocks, align 4, !dbg !5214
  %7 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5215
  %8 = load i32, i32* @nr_regions, align 4, !dbg !5215
  %idxprom5 = sext i32 %8 to i64, !dbg !5215
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %7, i64 %idxprom5, i32 2, !dbg !5215
  %bf.load = load i8, i8* %has_real_ebb, align 4, !dbg !5216
  %bf.clear = and i8 %bf.load, -3, !dbg !5216
  store i8 %bf.clear, i8* %has_real_ebb, align 4, !dbg !5216
  %9 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5217
  %10 = load i32, i32* @nr_regions, align 4, !dbg !5217
  %idxprom7 = sext i32 %10 to i64, !dbg !5217
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %9, i64 %idxprom7, i32 2, !dbg !5217
  %bf.load9 = load i8, i8* %dont_calc_deps, align 4, !dbg !5218
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5218
  store i8 %bf.clear10, i8* %dont_calc_deps, align 4, !dbg !5218
  %11 = load i32, i32* @nr_regions, align 4, !dbg !5219
  %12 = load i32*, i32** @containing_rgn, align 8, !dbg !5220
  %13 = load i32, i32* %index, align 8, !dbg !5220
  %idxprom12 = sext i32 %13 to i64, !dbg !5220
  %arrayidx13 = getelementptr inbounds i32, i32* %12, i64 %idxprom12, !dbg !5220
  store i32 %11, i32* %arrayidx13, align 4, !dbg !5221
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !5222
  %15 = load i32, i32* %index, align 8, !dbg !5222
  %idxprom15 = sext i32 %15 to i64, !dbg !5222
  %arrayidx16 = getelementptr inbounds i32, i32* %14, i64 %idxprom15, !dbg !5222
  store i32 0, i32* %arrayidx16, align 4, !dbg !5223
  %16 = load i32, i32* @nr_regions, align 4, !dbg !5224
  %inc = add nsw i32 %16, 1, !dbg !5224
  store i32 %inc, i32* @nr_regions, align 4, !dbg !5224
  %add = add nsw i32 %2, 1, !dbg !5225
  %17 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5226
  %idxprom17 = sext i32 %inc to i64, !dbg !5226
  %rgn_blocks19 = getelementptr inbounds %struct.region, %struct.region* %17, i64 %idxprom17, i32 1, !dbg !5226
  store i32 %add, i32* %rgn_blocks19, align 4, !dbg !5227
  ret void, !dbg !5228
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_sched() #5 !dbg !5229 {
entry:
  %0 = load i32, i32* @flag_schedule_insns, align 4, !dbg !5230
  %tobool = icmp eq i32 %0, 0, !dbg !5230
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5231

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 28) #6, !dbg !5232
  %tobool1 = icmp ne i8 %call, 0, !dbg !5231
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !5233
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_sched() #5 !dbg !5234 {
entry:
  %0 = load i32, i32* @flag_selective_scheduling, align 4, !dbg !5235
  %tobool = icmp eq i32 %0, 0, !dbg !5235
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5237

land.lhs.true:                                    ; preds = %entry
  %call = tail call zeroext i8 @maybe_skip_selective_scheduling() #6, !dbg !5238
  %tobool1 = icmp eq i8 %call, 0, !dbg !5238
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5239

if.then:                                          ; preds = %land.lhs.true
  tail call void @run_selective_scheduling() #6, !dbg !5240
  br label %if.end, !dbg !5240

if.else:                                          ; preds = %land.lhs.true, %entry
  tail call void @schedule_insns() #8, !dbg !5241
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !5242
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_sched2() #5 !dbg !5243 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !5244
  %cmp = icmp sgt i32 %0, 0, !dbg !5245
  %1 = load i32, i32* @flag_schedule_insns_after_reload, align 4, !dbg !5246
  %tobool = icmp ne i32 %1, 0, !dbg !5246
  %or.cond = and i1 %cmp, %tobool, !dbg !5247
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !5247

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 26) #6, !dbg !5248
  %tobool1 = icmp ne i8 %call, 0, !dbg !5249
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !5250
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_sched2() #5 !dbg !5251 {
entry:
  %0 = load i32, i32* @flag_selective_scheduling2, align 4, !dbg !5252
  %tobool = icmp eq i32 %0, 0, !dbg !5252
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5254

land.lhs.true:                                    ; preds = %entry
  %call = tail call zeroext i8 @maybe_skip_selective_scheduling() #6, !dbg !5255
  %tobool1 = icmp eq i8 %call, 0, !dbg !5255
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5256

if.then:                                          ; preds = %land.lhs.true
  tail call void @run_selective_scheduling() #6, !dbg !5257
  br label %if.end5, !dbg !5257

if.else:                                          ; preds = %land.lhs.true, %entry
  %1 = load i32, i32* @flag_sched2_use_superblocks, align 4, !dbg !5258
  %tobool2 = icmp eq i32 %1, 0, !dbg !5258
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !5261

if.then3:                                         ; preds = %if.else
  tail call void @schedule_ebbs() #6, !dbg !5262
  br label %if.end5, !dbg !5262

if.else4:                                         ; preds = %if.else
  tail call void @schedule_insns() #8, !dbg !5263
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.else4, %if.then
  ret i32 0, !dbg !5264
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5265 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5270
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5270
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5270

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5270
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5270
  br label %cond.end, !dbg !5270

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5270
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5270
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !5271
  %conv3 = zext i1 %cmp to i8, !dbg !5272
  ret i8 %conv3, !dbg !5273
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5274 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5279
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5279
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5279

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5279
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5279
  br label %cond.end, !dbg !5279

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5279
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !5279
  ret %struct.edge_def* %call2, !dbg !5280
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5281 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5287, metadata !DIExpression()), !dbg !5288
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5289
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5289

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5289
  %0 = load i32, i32* %num, align 8, !dbg !5289
  br label %cond.end, !dbg !5289

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5289
  ret i32 %cond, !dbg !5289
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5290 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5295
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5295

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5295
  br label %cond.end, !dbg !5295

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5296
  ret %struct.VEC_edge_gc* %0, !dbg !5297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5298 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5303, metadata !DIExpression()), !dbg !5304
  br label %land.end, !dbg !5305

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5305
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5305
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5305
  ret %struct.edge_def* %0, !dbg !5305
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

declare dso_local void @sd_next_list(%struct.rtx_def*, i32*, %struct._deps_list**, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @current_function_has_exception_handlers() local_unnamed_addr #2

declare dso_local i32 @computed_jump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5306 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5313, metadata !DIExpression()), !dbg !5314
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5315
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5315
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5315
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5315

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5315
  br label %cond.end, !dbg !5315

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5315
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5315
  %cmp = icmp eq i32 %call, 1, !dbg !5316
  %conv2 = zext i1 %cmp to i8, !dbg !5315
  ret i8 %conv2, !dbg !5317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5318 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5322, metadata !DIExpression()), !dbg !5323
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !5324
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !5325
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5325
  ret %struct.basic_block_def* %0, !dbg !5326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5327 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5331, metadata !DIExpression()), !dbg !5332
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !5333
  %tobool = icmp eq i8 %call, 0, !dbg !5333
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5333

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5333
  br label %cond.end, !dbg !5333

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5334
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5334
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5334
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5334

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5334
  br label %cond.end5, !dbg !5334

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5334
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !5334
  ret %struct.edge_def* %call7, !dbg !5335
}

declare dso_local void @sel_find_rgns() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @haifa_find_rgns() unnamed_addr #5 !dbg !5336 {
entry:
  %idx = alloca i32, align 4
  %current_edge = alloca %struct.edge_iterator, align 8
  %num_bbs = alloca i32, align 4
  %num_insns = alloca i32, align 4
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp278 = alloca %struct.edge_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp290 = alloca %struct.edge_iterator, align 8
  %e408 = alloca %struct.edge_def*, align 8
  %ei409 = alloca %struct.edge_iterator, align 8
  %tmp458 = alloca %struct.edge_iterator, align 8
  %e520 = alloca %struct.edge_def*, align 8
  %tmp521 = alloca %struct.edge_iterator, align 8
  %e565 = alloca %struct.edge_def*, align 8
  %tmp569 = alloca %struct.edge_iterator, align 8
  %e672 = alloca %struct.edge_def*, align 8
  %tmp688 = alloca %struct.edge_iterator, align 8
  %tmp731 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 1, metadata !5341, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 0, metadata !5348, metadata !DIExpression()), !dbg !5395
  %0 = bitcast i32* %idx to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5396
  call void @llvm.dbg.value(metadata i32 0, metadata !5350, metadata !DIExpression()), !dbg !5395
  store i32 0, i32* %idx, align 4, !dbg !5397
  %1 = bitcast %struct.edge_iterator* %current_edge to i8*, !dbg !5398
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5398
  %2 = bitcast i32* %num_bbs to i8*, !dbg !5399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !5399
  %3 = bitcast i32* %num_insns to i8*, !dbg !5399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !5399
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5400
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5400
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5400
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !5400
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !5400
  %conv = sext i32 %6 to i64, !dbg !5400
  %mul = shl nsw i64 %conv, 2, !dbg !5400
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5400
  %7 = bitcast i8* %call to i32*, !dbg !5400
  call void @llvm.dbg.value(metadata i32* %7, metadata !5338, metadata !DIExpression()), !dbg !5395
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5401
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !5401
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5401
  %x_last_basic_block3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 5, !dbg !5401
  %10 = load i32, i32* %x_last_basic_block3, align 8, !dbg !5401
  %conv4 = sext i32 %10 to i64, !dbg !5401
  %call5 = tail call i8* @xcalloc(i64 %conv4, i64 4) #6, !dbg !5401
  call void @llvm.dbg.value(metadata i32* %30, metadata !5339, metadata !DIExpression()), !dbg !5395
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5402
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !5402
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !5402
  %x_n_edges = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 4, !dbg !5402
  %13 = load i32, i32* %x_n_edges, align 4, !dbg !5402
  %conv8 = sext i32 %13 to i64, !dbg !5402
  %mul9 = shl nsw i64 %conv8, 4, !dbg !5402
  %call10 = tail call i8* @xmalloc(i64 %mul9) #6, !dbg !5402
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %31, metadata !5352, metadata !DIExpression()), !dbg !5395
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5403
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !5403
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !5403
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 5, !dbg !5403
  %16 = load i32, i32* %x_last_basic_block13, align 8, !dbg !5403
  %call14 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %16) #6, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call14, metadata !5359, metadata !DIExpression()), !dbg !5395
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call14) #6, !dbg !5405
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5406
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !5406
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !5406
  %x_last_basic_block17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 5, !dbg !5406
  %19 = load i32, i32* %x_last_basic_block17, align 8, !dbg !5406
  %call18 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %19) #6, !dbg !5407
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call18, metadata !5358, metadata !DIExpression()), !dbg !5395
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call18) #6, !dbg !5408
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5409
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !5409
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !5409
  %x_last_basic_block21 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 5, !dbg !5409
  %22 = load i32, i32* %x_last_basic_block21, align 8, !dbg !5409
  %call22 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %22) #6, !dbg !5410
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call22, metadata !5360, metadata !DIExpression()), !dbg !5395
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call22) #6, !dbg !5411
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5412
  %cfg24 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !5412
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !5412
  %x_last_basic_block25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 5, !dbg !5412
  %25 = load i32, i32* %x_last_basic_block25, align 8, !dbg !5412
  %call26 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %25) #6, !dbg !5413
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call26, metadata !5361, metadata !DIExpression()), !dbg !5395
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call26) #6, !dbg !5414
  call void @llvm.dbg.value(metadata i32 0, metadata !5345, metadata !DIExpression()), !dbg !5395
  br label %for.cond, !dbg !5415

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv61 = phi i64 [ %indvars.iv.next62, %for.body ], [ 0, %entry ], !dbg !5417
  call void @llvm.dbg.value(metadata i64 %indvars.iv61, metadata !5345, metadata !DIExpression()), !dbg !5395
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5418
  %cfg28 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !5418
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg28, align 8, !dbg !5418
  %x_last_basic_block29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 5, !dbg !5418
  %28 = load i32, i32* %x_last_basic_block29, align 8, !dbg !5418
  %29 = sext i32 %28 to i64, !dbg !5420
  %cmp = icmp slt i64 %indvars.iv61, %29, !dbg !5420
  br i1 %cmp, label %for.body, label %for.end, !dbg !5421

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %indvars.iv61, !dbg !5422
  store i32 -1, i32* %arrayidx, align 4, !dbg !5423
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !5424
  call void @llvm.dbg.value(metadata i32 undef, metadata !5345, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5395
  br label %for.cond, !dbg !5425, !llvm.loop !5426

for.end:                                          ; preds = %for.cond
  %.lcssa78 = phi %struct.control_flow_graph* [ %27, %for.cond ], !dbg !5418
  %30 = bitcast i8* %call5 to i32*, !dbg !5401
  %31 = bitcast i8* %call10 to %struct.edge_iterator*, !dbg !5402
  %32 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5428
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7, !dbg !5428
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa78, i64 0, i32 0, !dbg !5428
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5428
  %call33 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %33) #8, !dbg !5428
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call33, i64 0, i32 1, !dbg !5428
  %call34 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !5428
  %34 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5428
  %35 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 0, !dbg !5428
  store i32 %35, i32* %34, align 8, !dbg !5428
  %36 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5428
  %37 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 1, !dbg !5428
  store %struct.VEC_edge_gc** %37, %struct.VEC_edge_gc*** %36, align 8, !dbg !5428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %32, i64 16, i1 false), !dbg !5428
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7, !dbg !5428
  call void @llvm.dbg.value(metadata i32 -1, metadata !5349, metadata !DIExpression()), !dbg !5395
  %38 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %current_edge, i64 0, i32 0, !dbg !5429
  %39 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %current_edge, i64 0, i32 1, !dbg !5434
  %40 = bitcast %struct.edge_iterator* %tmp278 to i8*, !dbg !5435
  %41 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp278, i64 0, i32 0, !dbg !5435
  %42 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp278, i64 0, i32 1, !dbg !5435
  br label %while.cond.outer, !dbg !5436

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %for.end
  %sp.0.ph = phi i32 [ -1, %for.end ], [ %sp.0.ph.be, %while.cond.outer.backedge ]
  %count.0.ph = phi i32 [ 0, %for.end ], [ %count.0.ph.be, %while.cond.outer.backedge ]
  %no_loops.0.ph = phi i8 [ 1, %for.end ], [ %no_loops.0.ph1075, %while.cond.outer.backedge ]
  br label %while.cond.outer8, !dbg !5436

while.cond.outer8:                                ; preds = %while.cond.outer, %if.end195
  %count.0.ph9 = phi i32 [ %count.0.ph, %while.cond.outer ], [ %inc139.lcssa, %if.end195 ]
  %no_loops.0.ph10 = phi i8 [ %no_loops.0.ph, %while.cond.outer ], [ 0, %if.end195 ]
  br label %while.cond, !dbg !5436

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.outer8
  %count.0 = phi i32 [ %count.0.ph9, %while.cond.outer8 ], [ %inc139, %while.cond.backedge ], !dbg !5395
  call void @llvm.dbg.value(metadata i8 %no_loops.0.ph10, metadata !5341, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %sp.0.ph, metadata !5349, metadata !DIExpression()), !dbg !5395
  %43 = load i32, i32* %38, align 8, !dbg !5437
  %44 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5437
  %call35 = call fastcc zeroext i8 @ei_end_p(i32 %43, %struct.VEC_edge_gc** %44) #8, !dbg !5437
  %tobool = icmp eq i8 %call35, 0, !dbg !5437
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5437

lor.lhs.false:                                    ; preds = %while.cond
  %45 = load i32, i32* %38, align 8, !dbg !5437
  %46 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5437
  %call37 = call fastcc %struct.edge_def* @ei_edge(i32 %45, %struct.VEC_edge_gc** %46) #8, !dbg !5437
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 3, !dbg !5437
  %47 = load i8*, i8** %aux, align 8, !dbg !5437
  %tobool38 = icmp eq i8* %47, null, !dbg !5437
  br i1 %tobool38, label %if.end129, label %if.then, !dbg !5438

if.then:                                          ; preds = %lor.lhs.false, %while.cond
  %no_loops.0.ph10.lcssa = phi i8 [ %no_loops.0.ph10, %lor.lhs.false ], [ %no_loops.0.ph10, %while.cond ]
  %count.0.lcssa = phi i32 [ %count.0, %lor.lhs.false ], [ %count.0, %while.cond ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5348, metadata !DIExpression()), !dbg !5395
  %48 = sext i32 %sp.0.ph to i64, !dbg !5439
  br label %while.cond39, !dbg !5439

while.cond39:                                     ; preds = %if.end116, %if.then
  %indvars.iv59 = phi i64 [ %indvars.iv.next60, %if.end116 ], [ %48, %if.then ], !dbg !5395
  call void @llvm.dbg.value(metadata i64 %indvars.iv59, metadata !5349, metadata !DIExpression()), !dbg !5395
  %cmp40 = icmp sgt i64 %indvars.iv59, -1, !dbg !5440
  %49 = trunc i64 %indvars.iv59 to i32, !dbg !5441
  br i1 %cmp40, label %land.rhs, label %while.end, !dbg !5441

land.rhs:                                         ; preds = %while.cond39
  %50 = load i32, i32* %38, align 8, !dbg !5442
  %51 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5442
  %call42 = call fastcc zeroext i8 @ei_end_p(i32 %50, %struct.VEC_edge_gc** %51) #8, !dbg !5442
  %tobool44 = icmp eq i8 %call42, 0, !dbg !5442
  br i1 %tobool44, label %lor.rhs, label %while.body48, !dbg !5442

lor.rhs:                                          ; preds = %land.rhs
  %52 = load i32, i32* %38, align 8, !dbg !5442
  %53 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5442
  %call45 = call fastcc %struct.edge_def* @ei_edge(i32 %52, %struct.VEC_edge_gc** %53) #8, !dbg !5442
  %aux46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call45, i64 0, i32 3, !dbg !5442
  %54 = load i8*, i8** %aux46, align 8, !dbg !5442
  %tobool47 = icmp eq i8* %54, null, !dbg !5442
  br i1 %tobool47, label %while.end, label %while.body48, !dbg !5439

while.body48:                                     ; preds = %lor.rhs, %land.rhs
  %indvars.iv.next60 = add nsw i64 %indvars.iv59, -1, !dbg !5443
  call void @llvm.dbg.value(metadata i32 undef, metadata !5349, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5395
  %arrayidx50 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %31, i64 %indvars.iv59, !dbg !5445
  %55 = bitcast %struct.edge_iterator* %arrayidx50 to i8*, !dbg !5445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %55, i64 16, i1 false), !dbg !5445
  %56 = load i32, i32* %38, align 8, !dbg !5446
  %57 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5446
  %call51 = call fastcc %struct.edge_def* @ei_edge(i32 %56, %struct.VEC_edge_gc** %57) #8, !dbg !5446
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call51, i64 0, i32 0, !dbg !5447
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5447
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i64 0, i32 9, !dbg !5448
  %59 = load i32, i32* %index, align 8, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %59, metadata !5342, metadata !DIExpression()), !dbg !5395
  %cmp52 = icmp eq i32 %59, 0, !dbg !5449
  br i1 %cmp52, label %cond.true, label %cond.end, !dbg !5449

cond.true:                                        ; preds = %while.body48
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 684, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5449
  br label %cond.end, !dbg !5449

cond.end:                                         ; preds = %while.body48, %cond.true
  %60 = load i32, i32* %38, align 8, !dbg !5450
  %61 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5450
  %call54 = call fastcc %struct.edge_def* @ei_edge(i32 %60, %struct.VEC_edge_gc** %61) #8, !dbg !5450
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call54, i64 0, i32 1, !dbg !5451
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5451
  %index55 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %62, i64 0, i32 9, !dbg !5452
  %63 = load i32, i32* %index55, align 8, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %63, metadata !5343, metadata !DIExpression()), !dbg !5395
  %cmp56 = icmp eq i32 %63, 1, !dbg !5453
  br i1 %cmp56, label %cond.true58, label %cond.end60, !dbg !5453

cond.true58:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 686, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5453
  br label %cond.end60, !dbg !5453

cond.end60:                                       ; preds = %cond.end, %cond.true58
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call26, i32 %63) #8, !dbg !5454
  %idxprom62 = sext i32 %63 to i64, !dbg !5455
  %arrayidx63 = getelementptr inbounds i32, i32* %7, i64 %idxprom62, !dbg !5455
  %64 = load i32, i32* %arrayidx63, align 4, !dbg !5455
  %cmp64 = icmp sgt i32 %64, -1, !dbg !5457
  br i1 %cmp64, label %land.lhs.true, label %if.end116, !dbg !5458

land.lhs.true:                                    ; preds = %cond.end60
  %div = lshr i32 %64, 6, !dbg !5459
  %idxprom68 = zext i32 %div to i64, !dbg !5459
  %arrayidx69 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call26, i64 0, i32 3, i64 %idxprom68, !dbg !5459
  %65 = load i64, i64* %arrayidx69, align 8, !dbg !5459
  %rem = and i32 %64, 63, !dbg !5459
  %sh_prom = zext i32 %rem to i64, !dbg !5459
  %66 = shl i64 1, %sh_prom, !dbg !5459
  %67 = and i64 %65, %66, !dbg !5459
  %tobool72 = icmp eq i64 %67, 0, !dbg !5459
  br i1 %tobool72, label %if.end116, label %if.then73, !dbg !5460

if.then73:                                        ; preds = %land.lhs.true
  %idxprom74 = sext i32 %59 to i64, !dbg !5461
  %arrayidx75 = getelementptr inbounds i32, i32* %7, i64 %idxprom74, !dbg !5461
  %68 = load i32, i32* %arrayidx75, align 4, !dbg !5461
  %cmp76 = icmp eq i32 %68, -1, !dbg !5461
  br i1 %cmp76, label %if.then78, label %if.else, !dbg !5464

if.then78:                                        ; preds = %if.then73
  store i32 %64, i32* %arrayidx75, align 4, !dbg !5461
  br label %if.end116, !dbg !5461

if.else:                                          ; preds = %if.then73
  %idxprom85 = sext i32 %68 to i64, !dbg !5465
  %arrayidx86 = getelementptr inbounds i32, i32* %30, i64 %idxprom85, !dbg !5465
  %69 = load i32, i32* %arrayidx86, align 4, !dbg !5465
  %idxprom89 = sext i32 %64 to i64, !dbg !5465
  %arrayidx90 = getelementptr inbounds i32, i32* %30, i64 %idxprom89, !dbg !5465
  %70 = load i32, i32* %arrayidx90, align 4, !dbg !5465
  %cmp91 = icmp sgt i32 %69, %70, !dbg !5465
  br i1 %cmp91, label %if.then93, label %if.else96, !dbg !5461

if.then93:                                        ; preds = %if.else
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %64) #8, !dbg !5465
  br label %if.end116, !dbg !5465

if.else96:                                        ; preds = %if.else
  %cmp105 = icmp slt i32 %69, %70, !dbg !5467
  br i1 %cmp105, label %if.then107, label %if.end116, !dbg !5465

if.then107:                                       ; preds = %if.else96
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %68) #8, !dbg !5469
  %71 = load i32, i32* %arrayidx63, align 4, !dbg !5469
  store i32 %71, i32* %arrayidx75, align 4, !dbg !5469
  br label %if.end116, !dbg !5469

if.end116:                                        ; preds = %land.lhs.true, %if.then78, %if.else96, %if.then107, %if.then93, %cond.end60
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %current_edge, metadata !5351, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %current_edge) #8, !dbg !5471
  br label %while.cond39, !dbg !5439, !llvm.loop !5472

while.end:                                        ; preds = %lor.rhs, %while.cond39
  %.lcssa77 = phi i32 [ %49, %lor.rhs ], [ %49, %while.cond39 ], !dbg !5441
  call void @llvm.dbg.value(metadata i32 %.lcssa77, metadata !5349, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %.lcssa77, metadata !5349, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %.lcssa77, metadata !5349, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %.lcssa77, metadata !5349, metadata !DIExpression()), !dbg !5395
  %cmp117 = icmp slt i32 %.lcssa77, 0, !dbg !5474
  br i1 %cmp117, label %land.lhs.true119, label %if.end128, !dbg !5475

land.lhs.true119:                                 ; preds = %while.end
  %72 = load i32, i32* %38, align 8, !dbg !5429
  %73 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5429
  %call120 = call fastcc zeroext i8 @ei_end_p(i32 %72, %struct.VEC_edge_gc** %73) #8, !dbg !5429
  %tobool122 = icmp eq i8 %call120, 0, !dbg !5429
  br i1 %tobool122, label %lor.lhs.false123, label %while.end283, !dbg !5429

lor.lhs.false123:                                 ; preds = %land.lhs.true119
  %74 = load i32, i32* %38, align 8, !dbg !5429
  %75 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5429
  %call124 = call fastcc %struct.edge_def* @ei_edge(i32 %74, %struct.VEC_edge_gc** %75) #8, !dbg !5429
  %aux125 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call124, i64 0, i32 3, !dbg !5429
  %76 = load i8*, i8** %aux125, align 8, !dbg !5429
  %tobool126 = icmp eq i8* %76, null, !dbg !5429
  br i1 %tobool126, label %if.end128, label %while.end283, !dbg !5476

if.end128:                                        ; preds = %lor.lhs.false123, %while.end
  br label %while.cond.outer.backedge, !dbg !5477

while.cond.outer.backedge:                        ; preds = %if.end128, %if.end271
  %no_loops.0.ph1075 = phi i8 [ %no_loops.0.ph10.lcssa74, %if.end271 ], [ %no_loops.0.ph10.lcssa, %if.end128 ]
  %sp.0.ph.be = phi i32 [ %inc272, %if.end271 ], [ %.lcssa77, %if.end128 ]
  %count.0.ph.be = phi i32 [ %inc139.lcssa73, %if.end271 ], [ %count.0.lcssa, %if.end128 ]
  br label %while.cond.outer, !dbg !5436, !llvm.loop !5478

if.end129:                                        ; preds = %lor.lhs.false
  %77 = load i32, i32* %38, align 8, !dbg !5480
  %78 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5480
  %call130 = call fastcc %struct.edge_def* @ei_edge(i32 %77, %struct.VEC_edge_gc** %78) #8, !dbg !5480
  %src131 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call130, i64 0, i32 0, !dbg !5481
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %src131, align 8, !dbg !5481
  %index132 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %79, i64 0, i32 9, !dbg !5482
  %80 = load i32, i32* %index132, align 8, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %80, metadata !5342, metadata !DIExpression()), !dbg !5395
  %cmp133 = icmp eq i32 %80, 0, !dbg !5483
  br i1 %cmp133, label %cond.true135, label %cond.end137, !dbg !5483

cond.true135:                                     ; preds = %if.end129
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 703, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5483
  br label %cond.end137, !dbg !5483

cond.end137:                                      ; preds = %if.end129, %cond.true135
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call26, i32 %80) #8, !dbg !5484
  %inc139 = add nsw i32 %count.0, 1, !dbg !5485
  call void @llvm.dbg.value(metadata i32 %inc139, metadata !5348, metadata !DIExpression()), !dbg !5395
  %idxprom140 = sext i32 %80 to i64, !dbg !5486
  %arrayidx141 = getelementptr inbounds i32, i32* %30, i64 %idxprom140, !dbg !5486
  store i32 %inc139, i32* %arrayidx141, align 4, !dbg !5487
  %81 = load i32, i32* %38, align 8, !dbg !5488
  %82 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5488
  %call142 = call fastcc %struct.edge_def* @ei_edge(i32 %81, %struct.VEC_edge_gc** %82) #8, !dbg !5488
  %dest143 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call142, i64 0, i32 1, !dbg !5489
  %83 = load %struct.basic_block_def*, %struct.basic_block_def** %dest143, align 8, !dbg !5489
  %index144 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %83, i64 0, i32 9, !dbg !5490
  %84 = load i32, i32* %index144, align 8, !dbg !5490
  call void @llvm.dbg.value(metadata i32 %84, metadata !5343, metadata !DIExpression()), !dbg !5395
  %cmp145 = icmp eq i32 %84, 1, !dbg !5491
  br i1 %cmp145, label %if.then147, label %if.end151, !dbg !5493

if.then147:                                       ; preds = %cond.end137
  %85 = load i32, i32* %38, align 8, !dbg !5494
  %86 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5494
  %call148 = call fastcc %struct.edge_def* @ei_edge(i32 %85, %struct.VEC_edge_gc** %86) #8, !dbg !5494
  %87 = load i32, i32* %38, align 8, !dbg !5494
  %88 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5494
  %call149 = call fastcc %struct.edge_def* @ei_edge(i32 %87, %struct.VEC_edge_gc** %88) #8, !dbg !5494
  %aux150 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call149, i64 0, i32 3, !dbg !5494
  %89 = bitcast i8** %aux150 to %struct.edge_def**, !dbg !5494
  store %struct.edge_def* %call148, %struct.edge_def** %89, align 8, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %current_edge, metadata !5351, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %current_edge) #8, !dbg !5496
  br label %while.cond.backedge, !dbg !5497

while.cond.backedge:                              ; preds = %if.then147, %if.end267
  br label %while.cond, !dbg !5395, !llvm.loop !5478

if.end151:                                        ; preds = %cond.end137
  %div153 = lshr i32 %84, 6, !dbg !5498
  %idxprom154 = zext i32 %div153 to i64, !dbg !5498
  %arrayidx155 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call26, i64 0, i32 3, i64 %idxprom154, !dbg !5498
  %90 = load i64, i64* %arrayidx155, align 8, !dbg !5498
  %rem156 = and i32 %84, 63, !dbg !5498
  %sh_prom157 = zext i32 %rem156 to i64, !dbg !5498
  %91 = shl i64 1, %sh_prom157, !dbg !5498
  %92 = and i64 %90, %91, !dbg !5498
  %tobool160 = icmp eq i64 %92, 0, !dbg !5498
  br i1 %tobool160, label %if.end199, label %if.then161, !dbg !5500

if.then161:                                       ; preds = %if.end151
  %inc139.lcssa = phi i32 [ %inc139, %if.end151 ], !dbg !5485
  %idxprom140.lcssa = phi i64 [ %idxprom140, %if.end151 ], !dbg !5486
  %.lcssa70 = phi i32 [ %84, %if.end151 ], !dbg !5490
  call void @llvm.dbg.value(metadata i8 0, metadata !5341, metadata !DIExpression()), !dbg !5395
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call18, i32 %.lcssa70) #8, !dbg !5501
  %arrayidx163 = getelementptr inbounds i32, i32* %7, i64 %idxprom140.lcssa, !dbg !5503
  %93 = load i32, i32* %arrayidx163, align 4, !dbg !5503
  %cmp164 = icmp eq i32 %93, -1, !dbg !5503
  br i1 %cmp164, label %if.then166, label %if.else169, !dbg !5506

if.then166:                                       ; preds = %if.then161
  store i32 %.lcssa70, i32* %arrayidx163, align 4, !dbg !5503
  br label %if.end195, !dbg !5503

if.else169:                                       ; preds = %if.then161
  %idxprom172 = sext i32 %93 to i64, !dbg !5507
  %arrayidx173 = getelementptr inbounds i32, i32* %30, i64 %idxprom172, !dbg !5507
  %94 = load i32, i32* %arrayidx173, align 4, !dbg !5507
  %idxprom174 = sext i32 %.lcssa70 to i64, !dbg !5507
  %arrayidx175 = getelementptr inbounds i32, i32* %30, i64 %idxprom174, !dbg !5507
  %95 = load i32, i32* %arrayidx175, align 4, !dbg !5507
  %cmp176 = icmp sgt i32 %94, %95, !dbg !5507
  br i1 %cmp176, label %if.then178, label %if.else179, !dbg !5503

if.then178:                                       ; preds = %if.else169
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %.lcssa70) #8, !dbg !5507
  br label %if.end195, !dbg !5507

if.else179:                                       ; preds = %if.else169
  %cmp186 = icmp slt i32 %94, %95, !dbg !5509
  br i1 %cmp186, label %if.then188, label %if.end195, !dbg !5507

if.then188:                                       ; preds = %if.else179
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %93) #8, !dbg !5511
  store i32 %.lcssa70, i32* %arrayidx163, align 4, !dbg !5511
  br label %if.end195, !dbg !5511

if.end195:                                        ; preds = %if.then178, %if.then188, %if.else179, %if.then166
  %96 = load i32, i32* %38, align 8, !dbg !5513
  %97 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5513
  %call196 = call fastcc %struct.edge_def* @ei_edge(i32 %96, %struct.VEC_edge_gc** %97) #8, !dbg !5513
  %98 = load i32, i32* %38, align 8, !dbg !5513
  %99 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5513
  %call197 = call fastcc %struct.edge_def* @ei_edge(i32 %98, %struct.VEC_edge_gc** %99) #8, !dbg !5513
  %aux198 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call197, i64 0, i32 3, !dbg !5513
  %100 = bitcast i8** %aux198 to %struct.edge_def**, !dbg !5513
  store %struct.edge_def* %call196, %struct.edge_def** %100, align 8, !dbg !5513
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %current_edge, metadata !5351, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %current_edge) #8, !dbg !5514
  br label %while.cond.outer8, !dbg !5515, !llvm.loop !5478

if.end199:                                        ; preds = %if.end151
  %idxprom200 = sext i32 %84 to i64, !dbg !5516
  %arrayidx201 = getelementptr inbounds i32, i32* %30, i64 %idxprom200, !dbg !5516
  %101 = load i32, i32* %arrayidx201, align 4, !dbg !5516
  %tobool202 = icmp eq i32 %101, 0, !dbg !5516
  br i1 %tobool202, label %if.end271, label %if.then203, !dbg !5518

if.then203:                                       ; preds = %if.end199
  %arrayidx205 = getelementptr inbounds i32, i32* %7, i64 %idxprom200, !dbg !5519
  %102 = load i32, i32* %arrayidx205, align 4, !dbg !5519
  %cmp206 = icmp sgt i32 %102, -1, !dbg !5522
  br i1 %cmp206, label %land.lhs.true208, label %if.end267, !dbg !5523

land.lhs.true208:                                 ; preds = %if.then203
  %div212 = lshr i32 %102, 6, !dbg !5524
  %idxprom213 = zext i32 %div212 to i64, !dbg !5524
  %arrayidx214 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call26, i64 0, i32 3, i64 %idxprom213, !dbg !5524
  %103 = load i64, i64* %arrayidx214, align 8, !dbg !5524
  %rem217 = and i32 %102, 63, !dbg !5524
  %sh_prom218 = zext i32 %rem217 to i64, !dbg !5524
  %104 = shl i64 1, %sh_prom218, !dbg !5524
  %105 = and i64 %103, %104, !dbg !5524
  %tobool221 = icmp eq i64 %105, 0, !dbg !5524
  br i1 %tobool221, label %if.end267, label %if.then222, !dbg !5525

if.then222:                                       ; preds = %land.lhs.true208
  %arrayidx224 = getelementptr inbounds i32, i32* %7, i64 %idxprom140, !dbg !5526
  %106 = load i32, i32* %arrayidx224, align 4, !dbg !5526
  %cmp225 = icmp eq i32 %106, -1, !dbg !5526
  br i1 %cmp225, label %if.then227, label %if.else232, !dbg !5529

if.then227:                                       ; preds = %if.then222
  store i32 %102, i32* %arrayidx224, align 4, !dbg !5526
  br label %if.end267, !dbg !5526

if.else232:                                       ; preds = %if.then222
  %idxprom235 = sext i32 %106 to i64, !dbg !5530
  %arrayidx236 = getelementptr inbounds i32, i32* %30, i64 %idxprom235, !dbg !5530
  %107 = load i32, i32* %arrayidx236, align 4, !dbg !5530
  %idxprom239 = sext i32 %102 to i64, !dbg !5530
  %arrayidx240 = getelementptr inbounds i32, i32* %30, i64 %idxprom239, !dbg !5530
  %108 = load i32, i32* %arrayidx240, align 4, !dbg !5530
  %cmp241 = icmp sgt i32 %107, %108, !dbg !5530
  br i1 %cmp241, label %if.then243, label %if.else246, !dbg !5526

if.then243:                                       ; preds = %if.else232
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %102) #8, !dbg !5530
  br label %if.end267, !dbg !5530

if.else246:                                       ; preds = %if.else232
  %cmp255 = icmp slt i32 %107, %108, !dbg !5532
  br i1 %cmp255, label %if.then257, label %if.end267, !dbg !5530

if.then257:                                       ; preds = %if.else246
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call14, i32 %106) #8, !dbg !5534
  %109 = load i32, i32* %arrayidx205, align 4, !dbg !5534
  store i32 %109, i32* %arrayidx224, align 4, !dbg !5534
  br label %if.end267, !dbg !5534

if.end267:                                        ; preds = %land.lhs.true208, %if.then227, %if.else246, %if.then257, %if.then243, %if.then203
  %110 = load i32, i32* %38, align 8, !dbg !5536
  %111 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5536
  %call268 = call fastcc %struct.edge_def* @ei_edge(i32 %110, %struct.VEC_edge_gc** %111) #8, !dbg !5536
  %112 = load i32, i32* %38, align 8, !dbg !5536
  %113 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5536
  %call269 = call fastcc %struct.edge_def* @ei_edge(i32 %112, %struct.VEC_edge_gc** %113) #8, !dbg !5536
  %aux270 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call269, i64 0, i32 3, !dbg !5536
  %114 = bitcast i8** %aux270 to %struct.edge_def**, !dbg !5536
  store %struct.edge_def* %call268, %struct.edge_def** %114, align 8, !dbg !5536
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %current_edge, metadata !5351, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %current_edge) #8, !dbg !5537
  br label %while.cond.backedge, !dbg !5538

if.end271:                                        ; preds = %if.end199
  %no_loops.0.ph10.lcssa74 = phi i8 [ %no_loops.0.ph10, %if.end199 ]
  %inc139.lcssa73 = phi i32 [ %inc139, %if.end199 ], !dbg !5485
  %inc272 = add nsw i32 %sp.0.ph, 1, !dbg !5539
  call void @llvm.dbg.value(metadata i32 %inc272, metadata !5349, metadata !DIExpression()), !dbg !5395
  %idxprom273 = sext i32 %inc272 to i64, !dbg !5540
  %arrayidx274 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %31, i64 %idxprom273, !dbg !5540
  %115 = bitcast %struct.edge_iterator* %arrayidx274 to i8*, !dbg !5541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !5541
  %116 = load i32, i32* %38, align 8, !dbg !5542
  %117 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5542
  %call275 = call fastcc %struct.edge_def* @ei_edge(i32 %116, %struct.VEC_edge_gc** %117) #8, !dbg !5542
  %118 = load i32, i32* %38, align 8, !dbg !5542
  %119 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5542
  %call276 = call fastcc %struct.edge_def* @ei_edge(i32 %118, %struct.VEC_edge_gc** %119) #8, !dbg !5542
  %aux277 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call276, i64 0, i32 3, !dbg !5542
  %120 = bitcast i8** %aux277 to %struct.edge_def**, !dbg !5542
  store %struct.edge_def* %call275, %struct.edge_def** %120, align 8, !dbg !5542
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7, !dbg !5543
  %121 = load i32, i32* %38, align 8, !dbg !5543
  %122 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !5543
  %call279 = call fastcc %struct.edge_def* @ei_edge(i32 %121, %struct.VEC_edge_gc** %122) #8, !dbg !5543
  %dest280 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call279, i64 0, i32 1, !dbg !5543
  %123 = load %struct.basic_block_def*, %struct.basic_block_def** %dest280, align 8, !dbg !5543
  %succs281 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %123, i64 0, i32 1, !dbg !5543
  %call282 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs281) #8, !dbg !5543
  %124 = extractvalue { i32, %struct.VEC_edge_gc** } %call282, 0, !dbg !5543
  store i32 %124, i32* %41, align 8, !dbg !5543
  %125 = extractvalue { i32, %struct.VEC_edge_gc** } %call282, 1, !dbg !5543
  store %struct.VEC_edge_gc** %125, %struct.VEC_edge_gc*** %42, align 8, !dbg !5543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %40, i64 16, i1 false), !dbg !5543
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7, !dbg !5543
  br label %while.cond.outer.backedge, !dbg !5436

while.end283:                                     ; preds = %lor.lhs.false123, %land.lhs.true119
  %no_loops.0.ph1076 = phi i8 [ %no_loops.0.ph10.lcssa, %lor.lhs.false123 ], [ %no_loops.0.ph10.lcssa, %land.lhs.true119 ]
  %126 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5544
  %cfg285 = getelementptr inbounds %struct.function, %struct.function* %126, i64 0, i32 1, !dbg !5544
  %127 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg285, align 8, !dbg !5544
  %x_entry_block_ptr286 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %127, i64 0, i32 0, !dbg !5544
  %128 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5545
  %129 = bitcast %struct.edge_def** %e to i8*, !dbg !5545
  %130 = bitcast %struct.edge_iterator* %tmp290 to i8*, !dbg !5546
  %131 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp290, i64 0, i32 0, !dbg !5546
  %132 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp290, i64 0, i32 1, !dbg !5546
  %133 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5548
  %134 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5548
  br label %for.cond287, !dbg !5544

for.cond287:                                      ; preds = %for.end299, %while.end283
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr286, %while.end283 ], [ %next_bb, %for.end299 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5550
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5357, metadata !DIExpression()), !dbg !5395
  %tobool288 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5544
  br i1 %tobool288, label %for.end301, label %for.body289, !dbg !5544

for.body289:                                      ; preds = %for.cond287
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #7, !dbg !5551
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #7, !dbg !5552
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #7, !dbg !5553
  %succs291 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !5553
  %call292 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs291) #8, !dbg !5553
  %135 = extractvalue { i32, %struct.VEC_edge_gc** } %call292, 0, !dbg !5553
  store i32 %135, i32* %131, align 8, !dbg !5553
  %136 = extractvalue { i32, %struct.VEC_edge_gc** } %call292, 1, !dbg !5553
  store %struct.VEC_edge_gc** %136, %struct.VEC_edge_gc*** %132, align 8, !dbg !5553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %128, i8* nonnull align 8 %130, i64 16, i1 false), !dbg !5553
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #7, !dbg !5553
  br label %for.cond293, !dbg !5553

for.cond293:                                      ; preds = %for.body296, %for.body289
  %137 = load i32, i32* %133, align 8, !dbg !5554
  %138 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %134, align 8, !dbg !5554
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5366, metadata !DIExpression(DW_OP_deref)), !dbg !5545
  %call294 = call fastcc zeroext i8 @ei_cond(i32 %137, %struct.VEC_edge_gc** %138, %struct.edge_def** nonnull %e) #8, !dbg !5554
  %tobool295 = icmp eq i8 %call294, 0, !dbg !5553
  br i1 %tobool295, label %for.end299, label %for.body296, !dbg !5553

for.body296:                                      ; preds = %for.cond293
  %139 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5555
  call void @llvm.dbg.value(metadata %struct.edge_def* %139, metadata !5366, metadata !DIExpression()), !dbg !5545
  %aux297 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %139, i64 0, i32 3, !dbg !5556
  store i8* null, i8** %aux297, align 8, !dbg !5557
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5362, metadata !DIExpression(DW_OP_deref)), !dbg !5545
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !5554
  br label %for.cond293, !dbg !5554, !llvm.loop !5558

for.end299:                                       ; preds = %for.cond293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #7, !dbg !5560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #7, !dbg !5560
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5561
  br label %for.cond287, !dbg !5561, !llvm.loop !5562

for.end301:                                       ; preds = %for.cond287
  call void @llvm.dbg.value(metadata i32 0, metadata !5355, metadata !DIExpression()), !dbg !5395
  %140 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5564
  %cfg303 = getelementptr inbounds %struct.function, %struct.function* %140, i64 0, i32 1, !dbg !5564
  %141 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg303, align 8, !dbg !5564
  %x_entry_block_ptr304 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %141, i64 0, i32 0, !dbg !5564
  %142 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr304, align 8, !dbg !5564
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %141, i64 0, i32 1, !dbg !5566
  %143 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5566
  br label %for.cond306, !dbg !5564

for.cond306:                                      ; preds = %for.inc319, %for.end301
  %.pn = phi %struct.basic_block_def* [ %142, %for.end301 ], [ %bb.1, %for.inc319 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5568
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5568
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5357, metadata !DIExpression()), !dbg !5395
  %cmp309 = icmp eq %struct.basic_block_def* %bb.1, %143, !dbg !5569
  br i1 %cmp309, label %for.end321, label %for.body311, !dbg !5564

for.body311:                                      ; preds = %for.cond306
  %index312 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5570
  %144 = load i32, i32* %index312, align 8, !dbg !5570
  %idxprom313 = sext i32 %144 to i64, !dbg !5572
  %arrayidx314 = getelementptr inbounds i32, i32* %30, i64 %idxprom313, !dbg !5572
  %145 = load i32, i32* %arrayidx314, align 4, !dbg !5572
  %cmp315 = icmp eq i32 %145, 0, !dbg !5573
  br i1 %cmp315, label %for.end321, label %for.inc319, !dbg !5574

for.inc319:                                       ; preds = %for.body311
  br label %for.cond306, !dbg !5569, !llvm.loop !5575

for.end321:                                       ; preds = %for.cond306, %for.body311
  %unreachable.0 = phi i32 [ 0, %for.cond306 ], [ 1, %for.body311 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %unreachable.0, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %30, metadata !5340, metadata !DIExpression()), !dbg !5395
  br label %for.cond326, !dbg !5577

for.cond326:                                      ; preds = %cond.end337, %for.end321
  %146 = phi %struct.basic_block_def* [ %143, %for.end321 ], [ %.pre25, %cond.end337 ], !dbg !5579
  %147 = phi %struct.control_flow_graph* [ %141, %for.end321 ], [ %.pre24, %cond.end337 ], !dbg !5579
  %.pn3 = phi %struct.basic_block_def* [ %142, %for.end321 ], [ %bb.2, %cond.end337 ]
  %bb.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn3, i64 0, i32 6, !dbg !5581
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !5581
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !5357, metadata !DIExpression()), !dbg !5395
  %cmp330 = icmp eq %struct.basic_block_def* %bb.2, %146, !dbg !5579
  br i1 %cmp330, label %for.end345, label %for.body332, !dbg !5577

for.body332:                                      ; preds = %for.cond326
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 0, !dbg !5582
  %148 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5582
  %tobool333 = icmp eq %struct.VEC_edge_gc* %148, null, !dbg !5582
  br i1 %tobool333, label %cond.end337, label %cond.true334, !dbg !5582

cond.true334:                                     ; preds = %for.body332
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %148, i64 0, i32 0, !dbg !5582
  br label %cond.end337, !dbg !5582

cond.end337:                                      ; preds = %for.body332, %cond.true334
  %cond338 = phi %struct.VEC_edge_base* [ %base, %cond.true334 ], [ null, %for.body332 ], !dbg !5582
  %call339 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond338) #8, !dbg !5582
  %index340 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 9, !dbg !5583
  %149 = load i32, i32* %index340, align 8, !dbg !5583
  %idxprom341 = sext i32 %149 to i64, !dbg !5584
  %arrayidx342 = getelementptr inbounds i32, i32* %30, i64 %idxprom341, !dbg !5584
  store i32 %call339, i32* %arrayidx342, align 4, !dbg !5585
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5579
  %cfg328.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5586
  %.pre24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg328.phi.trans.insert, align 8, !dbg !5579
  %x_exit_block_ptr329.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre24, i64 0, i32 1, !dbg !5586
  %.pre25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr329.phi.trans.insert, align 8, !dbg !5579
  br label %for.cond326, !dbg !5579, !llvm.loop !5587

for.end345:                                       ; preds = %for.cond326
  %.lcssa67 = phi %struct.control_flow_graph* [ %147, %for.cond326 ], !dbg !5579
  %tobool346 = icmp eq i32 %unreachable.0, 0, !dbg !5589
  br i1 %tobool346, label %if.then347, label %if.end761, !dbg !5590

if.then347:                                       ; preds = %for.end345
  call void @llvm.dbg.value(metadata i32* null, metadata !5370, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* null, metadata !5371, metadata !DIExpression()), !dbg !5591
  %tobool348 = icmp eq i8 %no_loops.0.ph1076, 0, !dbg !5592
  br i1 %tobool348, label %if.end350, label %if.then349, !dbg !5594

if.then349:                                       ; preds = %if.then347
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call18, i32 0) #8, !dbg !5595
  %.pre26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5596
  %cfg352.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre26, i64 0, i32 1, !dbg !5591
  %.pre27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg352.phi.trans.insert, align 8, !dbg !5596
  br label %if.end350, !dbg !5595

if.end350:                                        ; preds = %if.then347, %if.then349
  %150 = phi %struct.control_flow_graph* [ %.lcssa67, %if.then347 ], [ %.pre27, %if.then349 ], !dbg !5596
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %150, i64 0, i32 3, !dbg !5596
  %151 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5596
  %conv353 = sext i32 %151 to i64, !dbg !5596
  %mul354 = shl nsw i64 %conv353, 2, !dbg !5596
  %call355 = call i8* @xmalloc(i64 %mul354) #6, !dbg !5596
  %152 = bitcast i8* %call355 to i32*, !dbg !5596
  call void @llvm.dbg.value(metadata i32* %152, metadata !5367, metadata !DIExpression()), !dbg !5591
  %153 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5597
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %153, i64 82, i32 1, !dbg !5597
  %154 = load i32, i32* %value, align 8, !dbg !5597
  %cmp357 = icmp sgt i32 %154, 0, !dbg !5598
  call void @llvm.dbg.value(metadata i1 %cmp357, metadata !5372, metadata !DIExpression()), !dbg !5591
  br i1 %cmp357, label %if.then361, label %if.end372, !dbg !5599

if.then361:                                       ; preds = %if.end350
  %155 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5600
  %cfg363 = getelementptr inbounds %struct.function, %struct.function* %155, i64 0, i32 1, !dbg !5600
  %156 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg363, align 8, !dbg !5600
  %x_last_basic_block364 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %156, i64 0, i32 5, !dbg !5600
  %157 = load i32, i32* %x_last_basic_block364, align 8, !dbg !5600
  %conv365 = sext i32 %157 to i64, !dbg !5600
  %mul366 = shl nsw i64 %conv365, 2, !dbg !5600
  %call367 = call i8* @xmalloc(i64 %mul366) #6, !dbg !5600
  %158 = bitcast i8* %call367 to i32*, !dbg !5600
  call void @llvm.dbg.value(metadata i32* %158, metadata !5370, metadata !DIExpression()), !dbg !5591
  %159 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5603
  %cfg369 = getelementptr inbounds %struct.function, %struct.function* %159, i64 0, i32 1, !dbg !5603
  %160 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg369, align 8, !dbg !5603
  %x_last_basic_block370 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %160, i64 0, i32 5, !dbg !5603
  %161 = load i32, i32* %x_last_basic_block370, align 8, !dbg !5603
  %call371 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %161) #6, !dbg !5604
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call371, metadata !5371, metadata !DIExpression()), !dbg !5591
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call371) #6, !dbg !5605
  br label %if.end372, !dbg !5606

if.end372:                                        ; preds = %if.then361, %if.end350
  %162 = phi i8* [ %call367, %if.then361 ], [ null, %if.end350 ], !dbg !5591
  %degree1.0 = phi i32* [ %158, %if.then361 ], [ null, %if.end350 ], !dbg !5591
  %extended_rgn_header.0 = phi %struct.simple_bitmap_def* [ %call371, %if.then361 ], [ null, %if.end350 ], !dbg !5591
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %extended_rgn_header.0, metadata !5371, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32* %degree1.0, metadata !5370, metadata !DIExpression()), !dbg !5591
  %163 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5607
  %cfg374 = getelementptr inbounds %struct.function, %struct.function* %163, i64 0, i32 1, !dbg !5607
  %164 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg374, align 8, !dbg !5607
  %x_entry_block_ptr375 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %164, i64 0, i32 0, !dbg !5607
  %165 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr375, align 8, !dbg !5607
  %166 = bitcast %struct.edge_def** %e408 to i8*, !dbg !5608
  %167 = bitcast %struct.edge_iterator* %ei409 to i8*, !dbg !5608
  %168 = bitcast %struct.edge_iterator* %tmp458 to i8*, !dbg !5609
  %169 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp458, i64 0, i32 0, !dbg !5609
  %170 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp458, i64 0, i32 1, !dbg !5609
  %171 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei409, i64 0, i32 0, !dbg !5611
  %172 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei409, i64 0, i32 1, !dbg !5611
  %173 = bitcast %struct.edge_def** %e520 to i8*, !dbg !5613
  %174 = bitcast %struct.edge_iterator* %tmp521 to i8*, !dbg !5614
  %175 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp521, i64 0, i32 0, !dbg !5614
  %176 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp521, i64 0, i32 1, !dbg !5614
  %177 = bitcast %struct.edge_def** %e565 to i8*, !dbg !5616
  %178 = bitcast %struct.edge_iterator* %tmp569 to i8*, !dbg !5617
  %179 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp569, i64 0, i32 0, !dbg !5617
  %180 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp569, i64 0, i32 1, !dbg !5617
  %181 = bitcast %struct.edge_def** %e672 to i8*, !dbg !5619
  %182 = bitcast %struct.edge_iterator* %tmp688 to i8*, !dbg !5620
  %183 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp688, i64 0, i32 0, !dbg !5620
  %184 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp688, i64 0, i32 1, !dbg !5620
  %185 = bitcast %struct.edge_iterator* %tmp731 to i8*, !dbg !5622
  %186 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp731, i64 0, i32 0, !dbg !5622
  %187 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp731, i64 0, i32 1, !dbg !5622
  br label %for.cond377, !dbg !5607

for.cond377:                                      ; preds = %for.inc755, %if.end372
  %.pre2838 = phi %struct.function* [ %163, %if.end372 ], [ %.pre28, %for.inc755 ]
  %188 = phi %struct.control_flow_graph* [ %164, %if.end372 ], [ %.pre29, %for.inc755 ], !dbg !5624
  %189 = phi %struct.function* [ %163, %if.end372 ], [ %.pre28, %for.inc755 ], !dbg !5624
  %.pn5 = phi %struct.basic_block_def* [ %165, %if.end372 ], [ %bb.3, %for.inc755 ]
  %190 = phi i8* [ %162, %if.end372 ], [ %321, %for.inc755 ], !dbg !5625
  %degree1.1 = phi i32* [ %degree1.0, %if.end372 ], [ %degree1.6, %for.inc755 ], !dbg !5625
  %191 = phi i8* [ %call5, %if.end372 ], [ %322, %for.inc755 ], !dbg !5626
  %degree.0 = phi i32* [ %30, %if.end372 ], [ %degree.5, %for.inc755 ], !dbg !5626
  %bb.3.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn5, i64 0, i32 6, !dbg !5627
  %bb.3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.3.in, align 8, !dbg !5627
  call void @llvm.dbg.value(metadata i32* %degree.0, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree1.1, metadata !5370, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.3, metadata !5357, metadata !DIExpression()), !dbg !5395
  %x_exit_block_ptr380 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %188, i64 0, i32 1, !dbg !5624
  %192 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr380, align 8, !dbg !5624
  %cmp381 = icmp eq %struct.basic_block_def* %bb.3, %192, !dbg !5624
  br i1 %cmp381, label %for.end757, label %for.body383, !dbg !5607

for.body383:                                      ; preds = %for.cond377
  %index385 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.3, i64 0, i32 9, !dbg !5628
  %193 = load i32, i32* %index385, align 8, !dbg !5628
  %div386 = lshr i32 %193, 6, !dbg !5628
  %idxprom387 = zext i32 %div386 to i64, !dbg !5628
  %arrayidx388 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call18, i64 0, i32 3, i64 %idxprom387, !dbg !5628
  %194 = load i64, i64* %arrayidx388, align 8, !dbg !5628
  %rem390 = and i32 %193, 63, !dbg !5628
  %sh_prom391 = zext i32 %rem390 to i64, !dbg !5628
  %195 = shl i64 1, %sh_prom391, !dbg !5628
  %196 = and i64 %194, %195, !dbg !5628
  %tobool394 = icmp eq i64 %196, 0, !dbg !5628
  br i1 %tobool394, label %for.inc755, label %land.lhs.true395, !dbg !5629

land.lhs.true395:                                 ; preds = %for.body383
  %arrayidx400 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call14, i64 0, i32 3, i64 %idxprom387, !dbg !5630
  %197 = load i64, i64* %arrayidx400, align 8, !dbg !5630
  %198 = and i64 %197, %195, !dbg !5630
  %tobool406 = icmp eq i64 %198, 0, !dbg !5630
  br i1 %tobool406, label %for.inc755, label %if.then407, !dbg !5631

if.then407:                                       ; preds = %land.lhs.true395
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #7, !dbg !5632
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #7, !dbg !5633
  %x_entry_block_ptr412 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %188, i64 0, i32 0, !dbg !5634
  %199 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr412, align 8, !dbg !5634
  br label %for.cond414, !dbg !5634

for.cond414:                                      ; preds = %for.inc436, %if.then407
  %.pre3033 = phi %struct.function* [ %189, %if.then407 ], [ %.pre30, %for.inc436 ]
  %200 = phi %struct.basic_block_def* [ %192, %if.then407 ], [ %.pre32, %for.inc436 ], !dbg !5636
  %.pn6 = phi %struct.basic_block_def* [ %199, %if.then407 ], [ %jbb.0, %for.inc436 ]
  %jbb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn6, i64 0, i32 6, !dbg !5638
  %jbb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %jbb.0.in, align 8, !dbg !5638
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %jbb.0, metadata !5380, metadata !DIExpression()), !dbg !5608
  %cmp418 = icmp eq %struct.basic_block_def* %jbb.0, %200, !dbg !5636
  br i1 %cmp418, label %for.end438.loopexit, label %for.body420, !dbg !5634

for.body420:                                      ; preds = %for.cond414
  %201 = load i32, i32* %index385, align 8, !dbg !5639
  %index422 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %jbb.0, i64 0, i32 9, !dbg !5642
  %202 = load i32, i32* %index422, align 8, !dbg !5642
  %idxprom423 = sext i32 %202 to i64, !dbg !5643
  %arrayidx424 = getelementptr inbounds i32, i32* %7, i64 %idxprom423, !dbg !5643
  %203 = load i32, i32* %arrayidx424, align 4, !dbg !5643
  %cmp425 = icmp eq i32 %201, %203, !dbg !5644
  %cmp428 = icmp ne %struct.basic_block_def* %bb.3, %jbb.0, !dbg !5645
  %or.cond = and i1 %cmp425, %cmp428, !dbg !5646
  br i1 %or.cond, label %if.then430, label %for.inc436, !dbg !5646

if.then430:                                       ; preds = %for.body420
  %call431 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %jbb.0, %struct.basic_block_def* %bb.3) #6, !dbg !5647
  %tobool432 = icmp eq i8 %call431, 0, !dbg !5647
  br i1 %tobool432, label %if.then430.for.end438_crit_edge, label %if.then430.for.inc436_crit_edge, !dbg !5650

if.then430.for.end438_crit_edge:                  ; preds = %if.then430
  %jbb.0.lcssa63 = phi %struct.basic_block_def* [ %jbb.0, %if.then430 ], !dbg !5638
  %.pre35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5651
  br label %for.end438, !dbg !5650

if.then430.for.inc436_crit_edge:                  ; preds = %if.then430
  %.pre30.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5636
  br label %for.inc436, !dbg !5650

for.inc436:                                       ; preds = %if.then430.for.inc436_crit_edge, %for.body420
  %.pre30 = phi %struct.function* [ %.pre30.pre, %if.then430.for.inc436_crit_edge ], [ %.pre3033, %for.body420 ], !dbg !5636
  %cfg416.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre30, i64 0, i32 1, !dbg !5653
  %.pre31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg416.phi.trans.insert, align 8, !dbg !5636
  %x_exit_block_ptr417.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre31, i64 0, i32 1, !dbg !5653
  %.pre32 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr417.phi.trans.insert, align 8, !dbg !5636
  br label %for.cond414, !dbg !5636, !llvm.loop !5654

for.end438.loopexit:                              ; preds = %for.cond414
  %.pre3033.lcssa = phi %struct.function* [ %.pre3033, %for.cond414 ]
  %jbb.0.lcssa = phi %struct.basic_block_def* [ %jbb.0, %for.cond414 ], !dbg !5638
  br label %for.end438, !dbg !5651

for.end438:                                       ; preds = %for.end438.loopexit, %if.then430.for.end438_crit_edge
  %jbb.064 = phi %struct.basic_block_def* [ %jbb.0.lcssa63, %if.then430.for.end438_crit_edge ], [ %jbb.0.lcssa, %for.end438.loopexit ]
  %204 = phi %struct.function* [ %.pre35, %if.then430.for.end438_crit_edge ], [ %.pre3033.lcssa, %for.end438.loopexit ], !dbg !5651
  %cfg440 = getelementptr inbounds %struct.function, %struct.function* %204, i64 0, i32 1, !dbg !5651
  %205 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg440, align 8, !dbg !5651
  %x_exit_block_ptr441 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %205, i64 0, i32 1, !dbg !5651
  %206 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr441, align 8, !dbg !5651
  %cmp442 = icmp eq %struct.basic_block_def* %jbb.064, %206, !dbg !5656
  br i1 %cmp442, label %if.end445, label %cleanup, !dbg !5657

if.end445:                                        ; preds = %for.end438
  call void @llvm.dbg.value(metadata i32 -1, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 -1, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 0, metadata !5356, metadata !DIExpression()), !dbg !5395
  %207 = load i32, i32* %index385, align 8, !dbg !5658
  %idxprom447 = sext i32 %207 to i64, !dbg !5659
  %arrayidx448 = getelementptr inbounds i32, i32* %7, i64 %idxprom447, !dbg !5659
  %208 = load i32, i32* %arrayidx448, align 4, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %208, metadata !5344, metadata !DIExpression()), !dbg !5395
  br i1 %cmp357, label %if.then450, label %if.end457, !dbg !5660

if.then450:                                       ; preds = %if.end445
  %x_last_basic_block453 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %205, i64 0, i32 5, !dbg !5661
  %209 = load i32, i32* %x_last_basic_block453, align 8, !dbg !5661
  %conv454 = sext i32 %209 to i64, !dbg !5661
  %mul455 = shl nsw i64 %conv454, 2, !dbg !5663
  %call456 = call i8* @memcpy(i8* %190, i8* %191, i64 %mul455) #6, !dbg !5664
  br label %if.end457, !dbg !5664

if.end457:                                        ; preds = %if.then450, %if.end445
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #7, !dbg !5665
  %succs459 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.3, i64 0, i32 1, !dbg !5665
  %call460 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs459) #8, !dbg !5665
  %210 = extractvalue { i32, %struct.VEC_edge_gc** } %call460, 0, !dbg !5665
  store i32 %210, i32* %169, align 8, !dbg !5665
  %211 = extractvalue { i32, %struct.VEC_edge_gc** } %call460, 1, !dbg !5665
  store %struct.VEC_edge_gc** %211, %struct.VEC_edge_gc*** %170, align 8, !dbg !5665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %168, i64 16, i1 false), !dbg !5665
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #7, !dbg !5665
  br label %for.cond461, !dbg !5665

for.cond461:                                      ; preds = %for.inc478, %if.end457
  %212 = load i32, i32* %171, align 8, !dbg !5666
  %213 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %struct.edge_def** %e408, metadata !5373, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  %call462 = call fastcc zeroext i8 @ei_cond(i32 %212, %struct.VEC_edge_gc** %213, %struct.edge_def** nonnull %e408) #8, !dbg !5666
  %tobool463 = icmp eq i8 %call462, 0, !dbg !5665
  br i1 %tobool463, label %for.end479, label %for.body464, !dbg !5665

for.body464:                                      ; preds = %for.cond461
  %214 = load %struct.edge_def*, %struct.edge_def** %e408, align 8, !dbg !5667
  call void @llvm.dbg.value(metadata %struct.edge_def* %214, metadata !5373, metadata !DIExpression()), !dbg !5608
  %dest465 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %214, i64 0, i32 1, !dbg !5669
  %215 = load %struct.basic_block_def*, %struct.basic_block_def** %dest465, align 8, !dbg !5669
  %216 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5670
  %cfg467 = getelementptr inbounds %struct.function, %struct.function* %216, i64 0, i32 1, !dbg !5670
  %217 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg467, align 8, !dbg !5670
  %x_exit_block_ptr468 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %217, i64 0, i32 1, !dbg !5670
  %218 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr468, align 8, !dbg !5670
  %cmp469 = icmp eq %struct.basic_block_def* %215, %218, !dbg !5671
  br i1 %cmp469, label %for.inc478, label %if.then471, !dbg !5672

if.then471:                                       ; preds = %for.body464
  call void @llvm.dbg.value(metadata %struct.edge_def* %214, metadata !5373, metadata !DIExpression()), !dbg !5608
  %index473 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %215, i64 0, i32 9, !dbg !5673
  %219 = load i32, i32* %index473, align 8, !dbg !5673
  %idxprom474 = sext i32 %219 to i64, !dbg !5674
  %arrayidx475 = getelementptr inbounds i32, i32* %degree.0, i64 %idxprom474, !dbg !5674
  %220 = load i32, i32* %arrayidx475, align 4, !dbg !5675
  %dec476 = add nsw i32 %220, -1, !dbg !5675
  store i32 %dec476, i32* %arrayidx475, align 4, !dbg !5675
  br label %for.inc478, !dbg !5675

for.inc478:                                       ; preds = %for.body464, %if.then471
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei409, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei409) #8, !dbg !5666
  br label %for.cond461, !dbg !5666, !llvm.loop !5676

for.end479:                                       ; preds = %for.cond461
  call void @llvm.dbg.value(metadata i32 1, metadata !5353, metadata !DIExpression()), !dbg !5395
  store i32 1, i32* %num_bbs, align 4, !dbg !5678
  %221 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !5679
  %estimate_number_of_insns = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %221, i64 0, i32 2, !dbg !5680
  %222 = load i32 (%struct.basic_block_def*)*, i32 (%struct.basic_block_def*)** %estimate_number_of_insns, align 8, !dbg !5680
  %call480 = call i32 %222(%struct.basic_block_def* %bb.3) #6, !dbg !5679
  call void @llvm.dbg.value(metadata i32 %call480, metadata !5354, metadata !DIExpression()), !dbg !5395
  store i32 %call480, i32* %num_insns, align 4, !dbg !5681
  br i1 %tobool348, label %if.else519, label %if.then482, !dbg !5682

if.then482:                                       ; preds = %for.end479
  %223 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5683
  %cfg484 = getelementptr inbounds %struct.function, %struct.function* %223, i64 0, i32 1, !dbg !5683
  %224 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg484, align 8, !dbg !5683
  %x_entry_block_ptr485 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %224, i64 0, i32 0, !dbg !5683
  %225 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr485, align 8, !dbg !5683
  br label %for.cond487, !dbg !5683

for.cond487:                                      ; preds = %for.inc516, %if.then482
  %226 = phi %struct.control_flow_graph* [ %224, %if.then482 ], [ %.pre37, %for.inc516 ], !dbg !5686
  %tail.0 = phi i32 [ -1, %if.then482 ], [ %tail.1, %for.inc516 ], !dbg !5608
  %.pn7 = phi %struct.basic_block_def* [ %225, %if.then482 ], [ %jbb.1, %for.inc516 ]
  %jbb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn7, i64 0, i32 6, !dbg !5688
  %jbb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %jbb.1.in, align 8, !dbg !5688
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %jbb.1, metadata !5380, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.0, metadata !5347, metadata !DIExpression()), !dbg !5395
  %x_exit_block_ptr490 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %226, i64 0, i32 1, !dbg !5686
  %227 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr490, align 8, !dbg !5686
  %cmp491 = icmp eq %struct.basic_block_def* %jbb.1, %227, !dbg !5686
  br i1 %cmp491, label %if.end557.loopexit, label %for.body493, !dbg !5683

for.body493:                                      ; preds = %for.cond487
  %call494 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %jbb.1) #8, !dbg !5689
  %tobool496 = icmp eq i8 %call494, 0, !dbg !5689
  br i1 %tobool496, label %for.inc516, label %land.lhs.true497, !dbg !5691

land.lhs.true497:                                 ; preds = %for.body493
  %call498 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %jbb.1) #8, !dbg !5692
  %228 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5693
  %cfg500 = getelementptr inbounds %struct.function, %struct.function* %228, i64 0, i32 1, !dbg !5693
  %229 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg500, align 8, !dbg !5693
  %x_exit_block_ptr501 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %229, i64 0, i32 1, !dbg !5693
  %230 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr501, align 8, !dbg !5693
  %cmp502 = icmp eq %struct.basic_block_def* %call498, %230, !dbg !5694
  br i1 %cmp502, label %if.then504, label %for.inc516, !dbg !5695

if.then504:                                       ; preds = %land.lhs.true497
  %index505 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %jbb.1, i64 0, i32 9, !dbg !5696
  %231 = load i32, i32* %index505, align 8, !dbg !5696
  %inc506 = add nsw i32 %tail.0, 1, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %inc506, metadata !5347, metadata !DIExpression()), !dbg !5395
  %idxprom507 = sext i32 %inc506 to i64, !dbg !5699
  %arrayidx508 = getelementptr inbounds i32, i32* %152, i64 %idxprom507, !dbg !5699
  store i32 %231, i32* %arrayidx508, align 4, !dbg !5700
  %232 = load i32, i32* %index505, align 8, !dbg !5701
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call22, i32 %232) #8, !dbg !5702
  %233 = load i32, i32* %index505, align 8, !dbg !5703
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !5353, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !5354, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  %call511 = call fastcc zeroext i8 @too_large(i32 %233, i32* nonnull %num_bbs, i32* nonnull %num_insns) #8, !dbg !5705
  %tobool512 = icmp eq i8 %call511, 0, !dbg !5705
  br i1 %tobool512, label %for.inc516, label %if.end557.loopexit, !dbg !5706

for.inc516:                                       ; preds = %if.then504, %for.body493, %land.lhs.true497
  %tail.1 = phi i32 [ %tail.0, %land.lhs.true497 ], [ %tail.0, %for.body493 ], [ %inc506, %if.then504 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.1, metadata !5347, metadata !DIExpression()), !dbg !5395
  %.pre36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5686
  %cfg489.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre36, i64 0, i32 1, !dbg !5707
  %.pre37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg489.phi.trans.insert, align 8, !dbg !5686
  br label %for.cond487, !dbg !5686, !llvm.loop !5708

if.else519:                                       ; preds = %for.end479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #7, !dbg !5710
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #7, !dbg !5711
  %preds522 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.3, i64 0, i32 0, !dbg !5711
  %call523 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds522) #8, !dbg !5711
  %234 = extractvalue { i32, %struct.VEC_edge_gc** } %call523, 0, !dbg !5711
  store i32 %234, i32* %175, align 8, !dbg !5711
  %235 = extractvalue { i32, %struct.VEC_edge_gc** } %call523, 1, !dbg !5711
  store %struct.VEC_edge_gc** %235, %struct.VEC_edge_gc*** %176, align 8, !dbg !5711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %174, i64 16, i1 false), !dbg !5711
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #7, !dbg !5711
  br label %for.cond524, !dbg !5711

for.cond524:                                      ; preds = %for.inc555, %if.else519
  %tail.3 = phi i32 [ -1, %if.else519 ], [ %tail.5, %for.inc555 ], !dbg !5712
  call void @llvm.dbg.value(metadata i32 %tail.3, metadata !5347, metadata !DIExpression()), !dbg !5395
  %236 = load i32, i32* %171, align 8, !dbg !5713
  %237 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !5713
  call void @llvm.dbg.value(metadata %struct.edge_def** %e520, metadata !5381, metadata !DIExpression(DW_OP_deref)), !dbg !5613
  %call525 = call fastcc zeroext i8 @ei_cond(i32 %236, %struct.VEC_edge_gc** %237, %struct.edge_def** nonnull %e520) #8, !dbg !5713
  %tobool526 = icmp eq i8 %call525, 0, !dbg !5711
  br i1 %tobool526, label %for.end556, label %for.body527, !dbg !5711

for.body527:                                      ; preds = %for.cond524
  %238 = load %struct.edge_def*, %struct.edge_def** %e520, align 8, !dbg !5715
  call void @llvm.dbg.value(metadata %struct.edge_def* %238, metadata !5381, metadata !DIExpression()), !dbg !5613
  %src528 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %238, i64 0, i32 0, !dbg !5718
  %239 = load %struct.basic_block_def*, %struct.basic_block_def** %src528, align 8, !dbg !5718
  %240 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5719
  %cfg530 = getelementptr inbounds %struct.function, %struct.function* %240, i64 0, i32 1, !dbg !5719
  %241 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg530, align 8, !dbg !5719
  %x_entry_block_ptr531 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %241, i64 0, i32 0, !dbg !5719
  %242 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr531, align 8, !dbg !5719
  %cmp532 = icmp eq %struct.basic_block_def* %239, %242, !dbg !5720
  br i1 %cmp532, label %for.inc555, label %if.end535, !dbg !5721

if.end535:                                        ; preds = %for.body527
  call void @llvm.dbg.value(metadata %struct.edge_def* %238, metadata !5381, metadata !DIExpression()), !dbg !5613
  %index537 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %239, i64 0, i32 9, !dbg !5722
  %243 = load i32, i32* %index537, align 8, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %243, metadata !5342, metadata !DIExpression()), !dbg !5395
  %idxprom538 = sext i32 %243 to i64, !dbg !5723
  %arrayidx539 = getelementptr inbounds i32, i32* %7, i64 %idxprom538, !dbg !5723
  %244 = load i32, i32* %arrayidx539, align 4, !dbg !5723
  %cmp540 = icmp eq i32 %244, %208, !dbg !5725
  br i1 %cmp540, label %land.lhs.true542, label %for.inc555, !dbg !5726

land.lhs.true542:                                 ; preds = %if.end535
  %245 = load i32, i32* %index385, align 8, !dbg !5727
  %cmp544 = icmp eq i32 %243, %245, !dbg !5728
  br i1 %cmp544, label %for.inc555, label %if.then546, !dbg !5729

if.then546:                                       ; preds = %land.lhs.true542
  %inc547 = add nsw i32 %tail.3, 1, !dbg !5730
  call void @llvm.dbg.value(metadata i32 %inc547, metadata !5347, metadata !DIExpression()), !dbg !5395
  %idxprom548 = sext i32 %inc547 to i64, !dbg !5732
  %arrayidx549 = getelementptr inbounds i32, i32* %152, i64 %idxprom548, !dbg !5732
  store i32 %243, i32* %arrayidx549, align 4, !dbg !5733
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call22, i32 %243) #8, !dbg !5734
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !5353, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !5354, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  %call550 = call fastcc zeroext i8 @too_large(i32 %243, i32* nonnull %num_bbs, i32* nonnull %num_insns) #8, !dbg !5735
  %tobool551 = icmp eq i8 %call550, 0, !dbg !5735
  br i1 %tobool551, label %for.inc555, label %for.end556, !dbg !5737

for.inc555:                                       ; preds = %if.then546, %land.lhs.true542, %if.end535, %for.body527
  %tail.5 = phi i32 [ %tail.3, %for.body527 ], [ %tail.3, %land.lhs.true542 ], [ %tail.3, %if.end535 ], [ %inc547, %if.then546 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.5, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei409, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei409) #8, !dbg !5713
  br label %for.cond524, !dbg !5713, !llvm.loop !5738

for.end556:                                       ; preds = %if.then546, %for.cond524
  %too_large_failure.1 = phi i32 [ 0, %for.cond524 ], [ 1, %if.then546 ], !dbg !5608
  %tail.6 = phi i32 [ %tail.3, %for.cond524 ], [ %inc547, %if.then546 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.6, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.1, metadata !5356, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #7, !dbg !5740
  br label %if.end557

if.end557.loopexit:                               ; preds = %for.cond487, %if.then504
  %too_large_failure.2.ph = phi i32 [ 1, %if.then504 ], [ 0, %for.cond487 ]
  %tail.7.ph = phi i32 [ %inc506, %if.then504 ], [ %tail.0, %for.cond487 ]
  br label %if.end557, !dbg !5741

if.end557:                                        ; preds = %if.end557.loopexit, %for.end556
  %too_large_failure.2 = phi i32 [ %too_large_failure.1, %for.end556 ], [ %too_large_failure.2.ph, %if.end557.loopexit ], !dbg !5742
  %tail.7 = phi i32 [ %tail.6, %for.end556 ], [ %tail.7.ph, %if.end557.loopexit ], !dbg !5742
  call void @llvm.dbg.value(metadata i32 %tail.7, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.2, metadata !5356, metadata !DIExpression()), !dbg !5395
  br label %while.cond558, !dbg !5741

while.cond558:                                    ; preds = %for.end627, %if.end557
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end627 ], [ -1, %if.end557 ], !dbg !5743
  %too_large_failure.3 = phi i32 [ %too_large_failure.4, %for.end627 ], [ %too_large_failure.2, %if.end557 ], !dbg !5743
  %tail.8 = phi i32 [ %tail.11, %for.end627 ], [ %tail.7, %if.end557 ], !dbg !5608
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.8, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.3, metadata !5356, metadata !DIExpression()), !dbg !5395
  %246 = sext i32 %tail.8 to i64, !dbg !5745
  %cmp559 = icmp slt i64 %indvars.iv, %246, !dbg !5745
  %tobool562 = icmp eq i32 %too_large_failure.3, 0, !dbg !5746
  %or.cond2 = and i1 %cmp559, %tobool562, !dbg !5747
  br i1 %or.cond2, label %while.body564, label %while.end628, !dbg !5747

while.body564:                                    ; preds = %while.cond558
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #7, !dbg !5748
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5749
  call void @llvm.dbg.value(metadata i32 undef, metadata !5346, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5395
  %arrayidx568 = getelementptr inbounds i32, i32* %152, i64 %indvars.iv.next, !dbg !5750
  %247 = load i32, i32* %arrayidx568, align 4, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %247, metadata !5343, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #7, !dbg !5751
  %248 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5751
  %cfg571 = getelementptr inbounds %struct.function, %struct.function* %248, i64 0, i32 1, !dbg !5751
  %249 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg571, align 8, !dbg !5751
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %249, i64 0, i32 2, !dbg !5751
  %250 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5751
  %tobool572 = icmp eq %struct.VEC_basic_block_gc* %250, null, !dbg !5751
  br i1 %tobool572, label %cond.end579, label %cond.true573, !dbg !5751

cond.true573:                                     ; preds = %while.body564
  %base577 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %250, i64 0, i32 0, !dbg !5751
  br label %cond.end579, !dbg !5751

cond.end579:                                      ; preds = %while.body564, %cond.true573
  %cond580 = phi %struct.VEC_basic_block_base* [ %base577, %cond.true573 ], [ null, %while.body564 ], !dbg !5751
  %call581 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond580, i32 %247) #8, !dbg !5751
  %preds582 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call581, i64 0, i32 0, !dbg !5751
  %call583 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds582) #8, !dbg !5751
  %251 = extractvalue { i32, %struct.VEC_edge_gc** } %call583, 0, !dbg !5751
  store i32 %251, i32* %179, align 8, !dbg !5751
  %252 = extractvalue { i32, %struct.VEC_edge_gc** } %call583, 1, !dbg !5751
  store %struct.VEC_edge_gc** %252, %struct.VEC_edge_gc*** %180, align 8, !dbg !5751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %178, i64 16, i1 false), !dbg !5751
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #7, !dbg !5751
  br label %for.cond584, !dbg !5751

for.cond584:                                      ; preds = %for.inc626, %cond.end579
  %tail.9 = phi i32 [ %tail.8, %cond.end579 ], [ %tail.10, %for.inc626 ], !dbg !5698
  call void @llvm.dbg.value(metadata i32 %tail.9, metadata !5347, metadata !DIExpression()), !dbg !5395
  %253 = load i32, i32* %171, align 8, !dbg !5752
  %254 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !5752
  call void @llvm.dbg.value(metadata %struct.edge_def** %e565, metadata !5384, metadata !DIExpression(DW_OP_deref)), !dbg !5616
  %call585 = call fastcc zeroext i8 @ei_cond(i32 %253, %struct.VEC_edge_gc** %254, %struct.edge_def** nonnull %e565) #8, !dbg !5752
  %tobool586 = icmp eq i8 %call585, 0, !dbg !5751
  br i1 %tobool586, label %for.end627, label %for.body587, !dbg !5751

for.body587:                                      ; preds = %for.cond584
  %255 = load %struct.edge_def*, %struct.edge_def** %e565, align 8, !dbg !5754
  call void @llvm.dbg.value(metadata %struct.edge_def* %255, metadata !5384, metadata !DIExpression()), !dbg !5616
  %src588 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %255, i64 0, i32 0, !dbg !5756
  %256 = load %struct.basic_block_def*, %struct.basic_block_def** %src588, align 8, !dbg !5756
  %index589 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %256, i64 0, i32 9, !dbg !5757
  %257 = load i32, i32* %index589, align 8, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %257, metadata !5342, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_def* %255, metadata !5384, metadata !DIExpression()), !dbg !5616
  %258 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5758
  %cfg592 = getelementptr inbounds %struct.function, %struct.function* %258, i64 0, i32 1, !dbg !5758
  %259 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg592, align 8, !dbg !5758
  %x_entry_block_ptr593 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %259, i64 0, i32 0, !dbg !5758
  %260 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr593, align 8, !dbg !5758
  %cmp594 = icmp eq %struct.basic_block_def* %256, %260, !dbg !5760
  br i1 %cmp594, label %for.end627, label %lor.lhs.false596, !dbg !5761

lor.lhs.false596:                                 ; preds = %for.body587
  %idxprom597 = sext i32 %257 to i64, !dbg !5762
  %arrayidx598 = getelementptr inbounds i32, i32* %7, i64 %idxprom597, !dbg !5762
  %261 = load i32, i32* %arrayidx598, align 4, !dbg !5762
  %cmp599 = icmp eq i32 %261, %208, !dbg !5763
  br i1 %cmp599, label %if.else602, label %for.end627, !dbg !5764

if.else602:                                       ; preds = %lor.lhs.false596
  %div604 = lshr i32 %257, 6, !dbg !5765
  %idxprom605 = zext i32 %div604 to i64, !dbg !5765
  %arrayidx606 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call22, i64 0, i32 3, i64 %idxprom605, !dbg !5765
  %262 = load i64, i64* %arrayidx606, align 8, !dbg !5765
  %rem607 = and i32 %257, 63, !dbg !5765
  %sh_prom608 = zext i32 %rem607 to i64, !dbg !5765
  %263 = shl i64 1, %sh_prom608, !dbg !5765
  %264 = and i64 %262, %263, !dbg !5765
  %tobool611 = icmp eq i64 %264, 0, !dbg !5765
  br i1 %tobool611, label %land.lhs.true612, label %for.inc626, !dbg !5767

land.lhs.true612:                                 ; preds = %if.else602
  %265 = load i32, i32* %index385, align 8, !dbg !5768
  %cmp614 = icmp eq i32 %257, %265, !dbg !5769
  br i1 %cmp614, label %for.inc626, label %if.then616, !dbg !5770

if.then616:                                       ; preds = %land.lhs.true612
  %inc617 = add nsw i32 %tail.9, 1, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %inc617, metadata !5347, metadata !DIExpression()), !dbg !5395
  %idxprom618 = sext i32 %inc617 to i64, !dbg !5773
  %arrayidx619 = getelementptr inbounds i32, i32* %152, i64 %idxprom618, !dbg !5773
  store i32 %257, i32* %arrayidx619, align 4, !dbg !5774
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call22, i32 %257) #8, !dbg !5775
  call void @llvm.dbg.value(metadata i32* %num_bbs, metadata !5353, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %num_insns, metadata !5354, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  %call620 = call fastcc zeroext i8 @too_large(i32 %257, i32* nonnull %num_bbs, i32* nonnull %num_insns) #8, !dbg !5776
  %tobool621 = icmp eq i8 %call620, 0, !dbg !5776
  br i1 %tobool621, label %for.inc626, label %for.end627, !dbg !5778

for.inc626:                                       ; preds = %if.then616, %land.lhs.true612, %if.else602
  %tail.10 = phi i32 [ %tail.9, %if.else602 ], [ %tail.9, %land.lhs.true612 ], [ %inc617, %if.then616 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.10, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei409, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei409) #8, !dbg !5752
  br label %for.cond584, !dbg !5752, !llvm.loop !5779

for.end627:                                       ; preds = %if.then616, %lor.lhs.false596, %for.cond584, %for.body587
  %too_large_failure.4 = phi i32 [ 0, %for.cond584 ], [ 0, %lor.lhs.false596 ], [ 0, %for.body587 ], [ 1, %if.then616 ], !dbg !5608
  %tail.11 = phi i32 [ %tail.9, %for.cond584 ], [ -1, %lor.lhs.false596 ], [ -1, %for.body587 ], [ %inc617, %if.then616 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %tail.11, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.4, metadata !5356, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #7, !dbg !5781
  br label %while.cond558, !dbg !5741, !llvm.loop !5782

while.end628:                                     ; preds = %while.cond558
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %while.cond558 ], !dbg !5743
  %too_large_failure.3.lcssa = phi i32 [ %too_large_failure.3, %while.cond558 ], !dbg !5743
  %tail.8.lcssa = phi i32 [ %tail.8, %while.cond558 ], !dbg !5608
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.3.lcssa, metadata !5356, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.8.lcssa, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.3.lcssa, metadata !5356, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.8.lcssa, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 undef, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %too_large_failure.3.lcssa, metadata !5356, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.8.lcssa, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 undef, metadata !5346, metadata !DIExpression()), !dbg !5395
  %cmp629 = icmp slt i32 %tail.8.lcssa, 0, !dbg !5783
  %tobool632 = icmp ne i32 %too_large_failure.3.lcssa, 0, !dbg !5784
  %or.cond1 = or i1 %cmp629, %tobool632, !dbg !5785
  br i1 %or.cond1, label %if.else728, label %if.then633, !dbg !5785

if.then633:                                       ; preds = %while.end628
  %266 = trunc i64 %indvars.iv.lcssa to i32, !dbg !5395
  call void @llvm.dbg.value(metadata i32 %266, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %266, metadata !5346, metadata !DIExpression()), !dbg !5395
  %267 = load i32, i32* %index385, align 8, !dbg !5786
  %idxprom635 = sext i32 %267 to i64, !dbg !5787
  %arrayidx636 = getelementptr inbounds i32, i32* %degree.0, i64 %idxprom635, !dbg !5787
  store i32 -1, i32* %arrayidx636, align 4, !dbg !5788
  %268 = load i32, i32* %index385, align 8, !dbg !5789
  %269 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5790
  %270 = load i32, i32* %idx, align 4, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %270, metadata !5350, metadata !DIExpression()), !dbg !5395
  %idxprom638 = sext i32 %270 to i64, !dbg !5790
  %arrayidx639 = getelementptr inbounds i32, i32* %269, i64 %idxprom638, !dbg !5790
  store i32 %268, i32* %arrayidx639, align 4, !dbg !5792
  %271 = load i32, i32* %num_bbs, align 4, !dbg !5793
  call void @llvm.dbg.value(metadata i32 %271, metadata !5353, metadata !DIExpression()), !dbg !5395
  %272 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5794
  %273 = load i32, i32* @nr_regions, align 4, !dbg !5794
  %idxprom640 = sext i32 %273 to i64, !dbg !5794
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %272, i64 %idxprom640, i32 0, !dbg !5794
  store i32 %271, i32* %rgn_nr_blocks, align 4, !dbg !5795
  %274 = load i32, i32* %idx, align 4, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %274, metadata !5350, metadata !DIExpression()), !dbg !5395
  %inc642 = add nsw i32 %274, 1, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %inc642, metadata !5350, metadata !DIExpression()), !dbg !5395
  store i32 %inc642, i32* %idx, align 4, !dbg !5796
  %275 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5797
  %276 = load i32, i32* @nr_regions, align 4, !dbg !5797
  %idxprom643 = sext i32 %276 to i64, !dbg !5797
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %275, i64 %idxprom643, i32 1, !dbg !5797
  store i32 %274, i32* %rgn_blocks, align 4, !dbg !5798
  %277 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5799
  %278 = load i32, i32* @nr_regions, align 4, !dbg !5799
  %idxprom645 = sext i32 %278 to i64, !dbg !5799
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %277, i64 %idxprom645, i32 2, !dbg !5799
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !5800
  %bf.clear = and i8 %bf.load, -2, !dbg !5800
  store i8 %bf.clear, i8* %dont_calc_deps, align 4, !dbg !5800
  %279 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5801
  %280 = load i32, i32* @nr_regions, align 4, !dbg !5801
  %idxprom647 = sext i32 %280 to i64, !dbg !5801
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %279, i64 %idxprom647, i32 2, !dbg !5801
  %bf.load649 = load i8, i8* %has_real_ebb, align 4, !dbg !5802
  %bf.clear650 = and i8 %bf.load649, -3, !dbg !5802
  store i8 %bf.clear650, i8* %has_real_ebb, align 4, !dbg !5802
  %281 = load i32, i32* @nr_regions, align 4, !dbg !5803
  %282 = load i32*, i32** @containing_rgn, align 8, !dbg !5804
  %283 = load i32, i32* %index385, align 8, !dbg !5804
  %idxprom652 = sext i32 %283 to i64, !dbg !5804
  %arrayidx653 = getelementptr inbounds i32, i32* %282, i64 %idxprom652, !dbg !5804
  store i32 %281, i32* %arrayidx653, align 4, !dbg !5805
  call void @llvm.dbg.value(metadata i32 0, metadata !5348, metadata !DIExpression()), !dbg !5395
  %284 = load i32*, i32** @block_to_bb, align 8, !dbg !5806
  %285 = load i32, i32* %index385, align 8, !dbg !5806
  %idxprom655 = sext i32 %285 to i64, !dbg !5806
  %arrayidx656 = getelementptr inbounds i32, i32* %284, i64 %idxprom655, !dbg !5806
  store i32 0, i32* %arrayidx656, align 4, !dbg !5807
  br label %while.cond657, !dbg !5808

while.cond657:                                    ; preds = %if.end725, %if.then633
  %count.1 = phi i32 [ 0, %if.then633 ], [ %count.2, %if.end725 ], !dbg !5809
  %tail.12 = phi i32 [ %tail.8.lcssa, %if.then633 ], [ %tail.13, %if.end725 ], !dbg !5608
  %head.1 = phi i32 [ %266, %if.then633 ], [ %head.3, %if.end725 ], !dbg !5608
  call void @llvm.dbg.value(metadata i32 %head.1, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.12, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !5348, metadata !DIExpression()), !dbg !5395
  %cmp658 = icmp sgt i32 %tail.12, -1, !dbg !5810
  br i1 %cmp658, label %while.body660, label %while.end726, !dbg !5808

while.body660:                                    ; preds = %while.cond657
  %cmp661 = icmp slt i32 %head.1, 0, !dbg !5811
  %spec.select = select i1 %cmp661, i32 %tail.12, i32 %head.1, !dbg !5813
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5346, metadata !DIExpression()), !dbg !5395
  %idxprom665 = sext i32 %spec.select to i64, !dbg !5814
  %arrayidx666 = getelementptr inbounds i32, i32* %152, i64 %idxprom665, !dbg !5814
  %286 = load i32, i32* %arrayidx666, align 4, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %286, metadata !5343, metadata !DIExpression()), !dbg !5395
  %idxprom667 = sext i32 %286 to i64, !dbg !5815
  %arrayidx668 = getelementptr inbounds i32, i32* %degree.0, i64 %idxprom667, !dbg !5815
  %287 = load i32, i32* %arrayidx668, align 4, !dbg !5815
  %cmp669 = icmp eq i32 %287, 0, !dbg !5816
  br i1 %cmp669, label %if.then671, label %if.else723, !dbg !5817

if.then671:                                       ; preds = %while.body660
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #7, !dbg !5818
  store i32 -1, i32* %arrayidx668, align 4, !dbg !5819
  %288 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5820
  %289 = load i32, i32* %idx, align 4, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %289, metadata !5350, metadata !DIExpression()), !dbg !5395
  %inc675 = add nsw i32 %289, 1, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %inc675, metadata !5350, metadata !DIExpression()), !dbg !5395
  store i32 %inc675, i32* %idx, align 4, !dbg !5821
  %idxprom676 = sext i32 %289 to i64, !dbg !5820
  %arrayidx677 = getelementptr inbounds i32, i32* %288, i64 %idxprom676, !dbg !5820
  store i32 %286, i32* %arrayidx677, align 4, !dbg !5822
  %inc678 = add nsw i32 %count.1, 1, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %inc678, metadata !5348, metadata !DIExpression()), !dbg !5395
  %290 = load i32*, i32** @block_to_bb, align 8, !dbg !5824
  %arrayidx680 = getelementptr inbounds i32, i32* %290, i64 %idxprom667, !dbg !5824
  store i32 %inc678, i32* %arrayidx680, align 4, !dbg !5825
  %291 = load i32, i32* @nr_regions, align 4, !dbg !5826
  %292 = load i32*, i32** @containing_rgn, align 8, !dbg !5827
  %arrayidx682 = getelementptr inbounds i32, i32* %292, i64 %idxprom667, !dbg !5827
  store i32 %291, i32* %arrayidx682, align 4, !dbg !5828
  %dec683 = add nsw i32 %tail.12, -1, !dbg !5829
  call void @llvm.dbg.value(metadata i32 %dec683, metadata !5347, metadata !DIExpression()), !dbg !5395
  %idxprom684 = sext i32 %tail.12 to i64, !dbg !5830
  %arrayidx685 = getelementptr inbounds i32, i32* %152, i64 %idxprom684, !dbg !5830
  %293 = load i32, i32* %arrayidx685, align 4, !dbg !5830
  store i32 %293, i32* %arrayidx666, align 4, !dbg !5831
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #7, !dbg !5832
  %294 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5832
  %cfg690 = getelementptr inbounds %struct.function, %struct.function* %294, i64 0, i32 1, !dbg !5832
  %295 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg690, align 8, !dbg !5832
  %x_basic_block_info691 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %295, i64 0, i32 2, !dbg !5832
  %296 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info691, align 8, !dbg !5832
  %tobool692 = icmp eq %struct.VEC_basic_block_gc* %296, null, !dbg !5832
  br i1 %tobool692, label %cond.end699, label %cond.true693, !dbg !5832

cond.true693:                                     ; preds = %if.then671
  %base697 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %296, i64 0, i32 0, !dbg !5832
  br label %cond.end699, !dbg !5832

cond.end699:                                      ; preds = %if.then671, %cond.true693
  %cond700 = phi %struct.VEC_basic_block_base* [ %base697, %cond.true693 ], [ null, %if.then671 ], !dbg !5832
  %call701 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond700, i32 %286) #8, !dbg !5832
  %succs702 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call701, i64 0, i32 1, !dbg !5832
  %call703 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs702) #8, !dbg !5832
  %297 = extractvalue { i32, %struct.VEC_edge_gc** } %call703, 0, !dbg !5832
  store i32 %297, i32* %183, align 8, !dbg !5832
  %298 = extractvalue { i32, %struct.VEC_edge_gc** } %call703, 1, !dbg !5832
  store %struct.VEC_edge_gc** %298, %struct.VEC_edge_gc*** %184, align 8, !dbg !5832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %182, i64 16, i1 false), !dbg !5832
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #7, !dbg !5832
  br label %for.cond704, !dbg !5832

for.cond704:                                      ; preds = %for.inc721, %cond.end699
  %299 = load i32, i32* %171, align 8, !dbg !5833
  %300 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !5833
  call void @llvm.dbg.value(metadata %struct.edge_def** %e672, metadata !5386, metadata !DIExpression(DW_OP_deref)), !dbg !5619
  %call705 = call fastcc zeroext i8 @ei_cond(i32 %299, %struct.VEC_edge_gc** %300, %struct.edge_def** nonnull %e672) #8, !dbg !5833
  %tobool706 = icmp eq i8 %call705, 0, !dbg !5832
  br i1 %tobool706, label %for.end722, label %for.body707, !dbg !5832

for.body707:                                      ; preds = %for.cond704
  %301 = load %struct.edge_def*, %struct.edge_def** %e672, align 8, !dbg !5835
  call void @llvm.dbg.value(metadata %struct.edge_def* %301, metadata !5386, metadata !DIExpression()), !dbg !5619
  %dest708 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %301, i64 0, i32 1, !dbg !5837
  %302 = load %struct.basic_block_def*, %struct.basic_block_def** %dest708, align 8, !dbg !5837
  %303 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5838
  %cfg710 = getelementptr inbounds %struct.function, %struct.function* %303, i64 0, i32 1, !dbg !5838
  %304 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg710, align 8, !dbg !5838
  %x_exit_block_ptr711 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %304, i64 0, i32 1, !dbg !5838
  %305 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr711, align 8, !dbg !5838
  %cmp712 = icmp eq %struct.basic_block_def* %302, %305, !dbg !5839
  br i1 %cmp712, label %for.inc721, label %if.then714, !dbg !5840

if.then714:                                       ; preds = %for.body707
  call void @llvm.dbg.value(metadata %struct.edge_def* %301, metadata !5386, metadata !DIExpression()), !dbg !5619
  %index716 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %302, i64 0, i32 9, !dbg !5841
  %306 = load i32, i32* %index716, align 8, !dbg !5841
  %idxprom717 = sext i32 %306 to i64, !dbg !5842
  %arrayidx718 = getelementptr inbounds i32, i32* %degree.0, i64 %idxprom717, !dbg !5842
  %307 = load i32, i32* %arrayidx718, align 4, !dbg !5843
  %dec719 = add nsw i32 %307, -1, !dbg !5843
  store i32 %dec719, i32* %arrayidx718, align 4, !dbg !5843
  br label %for.inc721, !dbg !5843

for.inc721:                                       ; preds = %for.body707, %if.then714
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei409, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei409) #8, !dbg !5833
  br label %for.cond704, !dbg !5833, !llvm.loop !5844

for.end722:                                       ; preds = %for.cond704
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #7, !dbg !5846
  br label %if.end725, !dbg !5847

if.else723:                                       ; preds = %while.body660
  %dec724 = add nsw i32 %spec.select, -1, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %dec724, metadata !5346, metadata !DIExpression()), !dbg !5395
  br label %if.end725

if.end725:                                        ; preds = %if.else723, %for.end722
  %count.2 = phi i32 [ %inc678, %for.end722 ], [ %count.1, %if.else723 ], !dbg !5809
  %tail.13 = phi i32 [ %dec683, %for.end722 ], [ %tail.12, %if.else723 ], !dbg !5608
  %head.3 = phi i32 [ %spec.select, %for.end722 ], [ %dec724, %if.else723 ], !dbg !5849
  call void @llvm.dbg.value(metadata i32 %head.3, metadata !5346, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %tail.13, metadata !5347, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %count.2, metadata !5348, metadata !DIExpression()), !dbg !5395
  br label %while.cond657, !dbg !5808, !llvm.loop !5850

while.end726:                                     ; preds = %while.cond657
  %308 = load i32, i32* @nr_regions, align 4, !dbg !5852
  %inc727 = add nsw i32 %308, 1, !dbg !5852
  store i32 %inc727, i32* @nr_regions, align 4, !dbg !5852
  br label %cleanup, !dbg !5853

if.else728:                                       ; preds = %while.end628
  br i1 %cmp357, label %if.then730, label %cleanup, !dbg !5854

if.then730:                                       ; preds = %if.else728
  call void @llvm.dbg.value(metadata i32* %degree.0, metadata !5392, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.value(metadata i32* %degree1.1, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree.0, metadata !5370, metadata !DIExpression()), !dbg !5591
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #7, !dbg !5856
  %call733 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs459) #8, !dbg !5856
  %309 = extractvalue { i32, %struct.VEC_edge_gc** } %call733, 0, !dbg !5856
  store i32 %309, i32* %186, align 8, !dbg !5856
  %310 = extractvalue { i32, %struct.VEC_edge_gc** } %call733, 1, !dbg !5856
  store %struct.VEC_edge_gc** %310, %struct.VEC_edge_gc*** %187, align 8, !dbg !5856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %185, i64 16, i1 false), !dbg !5856
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #7, !dbg !5856
  br label %for.cond734, !dbg !5856

for.cond734:                                      ; preds = %for.inc748, %if.then730
  %311 = load i32, i32* %171, align 8, !dbg !5857
  %312 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !5857
  call void @llvm.dbg.value(metadata %struct.edge_def** %e408, metadata !5373, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  %call735 = call fastcc zeroext i8 @ei_cond(i32 %311, %struct.VEC_edge_gc** %312, %struct.edge_def** nonnull %e408) #8, !dbg !5857
  %tobool736 = icmp eq i8 %call735, 0, !dbg !5856
  br i1 %tobool736, label %cleanup.loopexit, label %for.body737, !dbg !5856

for.body737:                                      ; preds = %for.cond734
  %313 = load %struct.edge_def*, %struct.edge_def** %e408, align 8, !dbg !5859
  call void @llvm.dbg.value(metadata %struct.edge_def* %313, metadata !5373, metadata !DIExpression()), !dbg !5608
  %dest738 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %313, i64 0, i32 1, !dbg !5861
  %314 = load %struct.basic_block_def*, %struct.basic_block_def** %dest738, align 8, !dbg !5861
  %315 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5862
  %cfg740 = getelementptr inbounds %struct.function, %struct.function* %315, i64 0, i32 1, !dbg !5862
  %316 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg740, align 8, !dbg !5862
  %x_exit_block_ptr741 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %316, i64 0, i32 1, !dbg !5862
  %317 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr741, align 8, !dbg !5862
  %cmp742 = icmp eq %struct.basic_block_def* %314, %317, !dbg !5863
  br i1 %cmp742, label %for.inc748, label %if.then744, !dbg !5864

if.then744:                                       ; preds = %for.body737
  call void @llvm.dbg.value(metadata %struct.edge_def* %313, metadata !5373, metadata !DIExpression()), !dbg !5608
  %index746 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %314, i64 0, i32 9, !dbg !5865
  %318 = load i32, i32* %index746, align 8, !dbg !5865
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %extended_rgn_header.0, i32 %318) #8, !dbg !5866
  br label %for.inc748, !dbg !5866

for.inc748:                                       ; preds = %for.body737, %if.then744
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei409, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei409) #8, !dbg !5857
  br label %for.cond734, !dbg !5857, !llvm.loop !5867

cleanup.loopexit:                                 ; preds = %for.cond734
  br label %cleanup, !dbg !5869

cleanup:                                          ; preds = %cleanup.loopexit, %for.end438, %while.end726, %if.else728
  %319 = phi i8* [ %190, %for.end438 ], [ %190, %while.end726 ], [ %190, %if.else728 ], [ %191, %cleanup.loopexit ], !dbg !5591
  %degree1.4 = phi i32* [ %degree1.1, %for.end438 ], [ %degree1.1, %while.end726 ], [ %degree1.1, %if.else728 ], [ %degree.0, %cleanup.loopexit ], !dbg !5591
  %320 = phi i8* [ %191, %for.end438 ], [ %191, %while.end726 ], [ %191, %if.else728 ], [ %190, %cleanup.loopexit ], !dbg !5395
  %degree.3 = phi i32* [ %degree.0, %for.end438 ], [ %degree.0, %while.end726 ], [ %degree.0, %if.else728 ], [ %degree1.1, %cleanup.loopexit ], !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree.3, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree1.4, metadata !5370, metadata !DIExpression()), !dbg !5591
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #7, !dbg !5869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #7, !dbg !5869
  %.pre28.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5624
  br label %for.inc755

for.inc755:                                       ; preds = %land.lhs.true395, %for.body383, %cleanup
  %.pre28 = phi %struct.function* [ %.pre2838, %land.lhs.true395 ], [ %.pre2838, %for.body383 ], [ %.pre28.pre, %cleanup ], !dbg !5624
  %321 = phi i8* [ %190, %land.lhs.true395 ], [ %190, %for.body383 ], [ %319, %cleanup ], !dbg !5625
  %degree1.6 = phi i32* [ %degree1.1, %land.lhs.true395 ], [ %degree1.1, %for.body383 ], [ %degree1.4, %cleanup ], !dbg !5625
  %322 = phi i8* [ %191, %land.lhs.true395 ], [ %191, %for.body383 ], [ %320, %cleanup ], !dbg !5626
  %degree.5 = phi i32* [ %degree.0, %land.lhs.true395 ], [ %degree.0, %for.body383 ], [ %degree.3, %cleanup ], !dbg !5626
  call void @llvm.dbg.value(metadata i32* %degree.5, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree1.6, metadata !5370, metadata !DIExpression()), !dbg !5591
  %cfg379.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre28, i64 0, i32 1, !dbg !5870
  %.pre29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg379.phi.trans.insert, align 8, !dbg !5624
  br label %for.cond377, !dbg !5624, !llvm.loop !5871

for.end757:                                       ; preds = %for.cond377
  %.lcssa66 = phi i8* [ %190, %for.cond377 ], !dbg !5625
  %.lcssa = phi i8* [ %191, %for.cond377 ], !dbg !5626
  %degree.0.lcssa = phi i32* [ %degree.0, %for.cond377 ], !dbg !5626
  call void @llvm.dbg.value(metadata i32* %degree.0.lcssa, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree.0.lcssa, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32* %degree.0.lcssa, metadata !5340, metadata !DIExpression()), !dbg !5395
  call void @free(i8* %call355) #6, !dbg !5873
  br i1 %cmp357, label %if.then759, label %if.end761, !dbg !5874

if.then759:                                       ; preds = %for.end757
  call void @free(i8* %.lcssa66) #6, !dbg !5875
  call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %call18, %struct.simple_bitmap_def* %call18, %struct.simple_bitmap_def* %extended_rgn_header.0) #6, !dbg !5878
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %extended_rgn_header.0, i64 0, i32 0, !dbg !5879
  %323 = load i8*, i8** %popcount, align 8, !dbg !5879
  call void @free(i8* %323) #6, !dbg !5879
  %324 = bitcast %struct.simple_bitmap_def* %extended_rgn_header.0 to i8*, !dbg !5879
  call void @free(i8* %324) #6, !dbg !5879
  call void @llvm.dbg.value(metadata i32* %idx, metadata !5350, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call void @extend_rgns(i32* %degree.0.lcssa, i32* nonnull %idx, %struct.simple_bitmap_def* %call18, i32* %7) #8, !dbg !5880
  br label %if.end761, !dbg !5881

if.end761:                                        ; preds = %for.end345, %for.end757, %if.then759
  %325 = phi i8* [ %call5, %for.end345 ], [ %.lcssa, %if.then759 ], [ %.lcssa, %for.end757 ], !dbg !5626
  %degree.6 = phi i32* [ %30, %for.end345 ], [ %degree.0.lcssa, %if.then759 ], [ %degree.0.lcssa, %for.end757 ], !dbg !5626
  call void @llvm.dbg.value(metadata i32* %degree.6, metadata !5340, metadata !DIExpression()), !dbg !5395
  %326 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5882
  %cfg763 = getelementptr inbounds %struct.function, %struct.function* %326, i64 0, i32 1, !dbg !5882
  %327 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg763, align 8, !dbg !5882
  %x_entry_block_ptr764 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %327, i64 0, i32 0, !dbg !5882
  %328 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr764, align 8, !dbg !5882
  br label %for.cond766, !dbg !5882

for.cond766:                                      ; preds = %for.inc807, %if.end761
  %.pre4042 = phi %struct.function* [ %326, %if.end761 ], [ %.pre40, %for.inc807 ]
  %329 = phi %struct.control_flow_graph* [ %327, %if.end761 ], [ %.pre41, %for.inc807 ], !dbg !5884
  %.pn4 = phi %struct.basic_block_def* [ %328, %if.end761 ], [ %bb.4, %for.inc807 ]
  %bb.4.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn4, i64 0, i32 6, !dbg !5886
  %bb.4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.4.in, align 8, !dbg !5886
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.4, metadata !5357, metadata !DIExpression()), !dbg !5395
  %x_exit_block_ptr769 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %329, i64 0, i32 1, !dbg !5884
  %330 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr769, align 8, !dbg !5884
  %cmp770 = icmp eq %struct.basic_block_def* %bb.4, %330, !dbg !5884
  br i1 %cmp770, label %for.end809, label %for.body772, !dbg !5882

for.body772:                                      ; preds = %for.cond766
  %index773 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.4, i64 0, i32 9, !dbg !5887
  %331 = load i32, i32* %index773, align 8, !dbg !5887
  %idxprom774 = sext i32 %331 to i64, !dbg !5889
  %arrayidx775 = getelementptr inbounds i32, i32* %degree.6, i64 %idxprom774, !dbg !5889
  %332 = load i32, i32* %arrayidx775, align 4, !dbg !5889
  %cmp776 = icmp sgt i32 %332, -1, !dbg !5890
  br i1 %cmp776, label %if.then778, label %for.inc807, !dbg !5891

if.then778:                                       ; preds = %for.body772
  %333 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5892
  %334 = load i32, i32* %idx, align 4, !dbg !5894
  call void @llvm.dbg.value(metadata i32 %334, metadata !5350, metadata !DIExpression()), !dbg !5395
  %idxprom780 = sext i32 %334 to i64, !dbg !5892
  %arrayidx781 = getelementptr inbounds i32, i32* %333, i64 %idxprom780, !dbg !5892
  store i32 %331, i32* %arrayidx781, align 4, !dbg !5895
  %335 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5896
  %336 = load i32, i32* @nr_regions, align 4, !dbg !5896
  %idxprom782 = sext i32 %336 to i64, !dbg !5896
  %rgn_nr_blocks784 = getelementptr inbounds %struct.region, %struct.region* %335, i64 %idxprom782, i32 0, !dbg !5896
  store i32 1, i32* %rgn_nr_blocks784, align 4, !dbg !5897
  %337 = load i32, i32* %idx, align 4, !dbg !5898
  call void @llvm.dbg.value(metadata i32 %337, metadata !5350, metadata !DIExpression()), !dbg !5395
  %inc785 = add nsw i32 %337, 1, !dbg !5898
  call void @llvm.dbg.value(metadata i32 %inc785, metadata !5350, metadata !DIExpression()), !dbg !5395
  store i32 %inc785, i32* %idx, align 4, !dbg !5898
  %338 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5899
  %339 = load i32, i32* @nr_regions, align 4, !dbg !5899
  %idxprom786 = sext i32 %339 to i64, !dbg !5899
  %rgn_blocks788 = getelementptr inbounds %struct.region, %struct.region* %338, i64 %idxprom786, i32 1, !dbg !5899
  store i32 %337, i32* %rgn_blocks788, align 4, !dbg !5900
  %340 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5901
  %341 = load i32, i32* @nr_regions, align 4, !dbg !5901
  %idxprom789 = sext i32 %341 to i64, !dbg !5901
  %dont_calc_deps791 = getelementptr inbounds %struct.region, %struct.region* %340, i64 %idxprom789, i32 2, !dbg !5901
  %bf.load792 = load i8, i8* %dont_calc_deps791, align 4, !dbg !5902
  %bf.clear793 = and i8 %bf.load792, -2, !dbg !5902
  store i8 %bf.clear793, i8* %dont_calc_deps791, align 4, !dbg !5902
  %342 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !5903
  %343 = load i32, i32* @nr_regions, align 4, !dbg !5903
  %idxprom794 = sext i32 %343 to i64, !dbg !5903
  %has_real_ebb796 = getelementptr inbounds %struct.region, %struct.region* %342, i64 %idxprom794, i32 2, !dbg !5903
  %bf.load797 = load i8, i8* %has_real_ebb796, align 4, !dbg !5904
  %bf.clear798 = and i8 %bf.load797, -3, !dbg !5904
  store i8 %bf.clear798, i8* %has_real_ebb796, align 4, !dbg !5904
  %344 = load i32, i32* @nr_regions, align 4, !dbg !5905
  %inc799 = add nsw i32 %344, 1, !dbg !5905
  store i32 %inc799, i32* @nr_regions, align 4, !dbg !5905
  %345 = load i32*, i32** @containing_rgn, align 8, !dbg !5906
  %346 = load i32, i32* %index773, align 8, !dbg !5906
  %idxprom801 = sext i32 %346 to i64, !dbg !5906
  %arrayidx802 = getelementptr inbounds i32, i32* %345, i64 %idxprom801, !dbg !5906
  store i32 %344, i32* %arrayidx802, align 4, !dbg !5907
  %347 = load i32*, i32** @block_to_bb, align 8, !dbg !5908
  %348 = load i32, i32* %index773, align 8, !dbg !5908
  %idxprom804 = sext i32 %348 to i64, !dbg !5908
  %arrayidx805 = getelementptr inbounds i32, i32* %347, i64 %idxprom804, !dbg !5908
  store i32 0, i32* %arrayidx805, align 4, !dbg !5909
  %.pre40.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5884
  br label %for.inc807, !dbg !5910

for.inc807:                                       ; preds = %for.body772, %if.then778
  %.pre40 = phi %struct.function* [ %.pre4042, %for.body772 ], [ %.pre40.pre, %if.then778 ], !dbg !5884
  %cfg768.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre40, i64 0, i32 1, !dbg !5911
  %.pre41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg768.phi.trans.insert, align 8, !dbg !5884
  br label %for.cond766, !dbg !5884, !llvm.loop !5912

for.end809:                                       ; preds = %for.cond766
  call void @free(i8* %call) #6, !dbg !5914
  call void @free(i8* %325) #6, !dbg !5915
  call void @free(i8* %call10) #6, !dbg !5916
  %popcount810 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call18, i64 0, i32 0, !dbg !5917
  %349 = load i8*, i8** %popcount810, align 8, !dbg !5917
  call void @free(i8* %349) #6, !dbg !5917
  %350 = bitcast %struct.simple_bitmap_def* %call18 to i8*, !dbg !5917
  call void @free(i8* %350) #6, !dbg !5917
  %popcount811 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call14, i64 0, i32 0, !dbg !5918
  %351 = load i8*, i8** %popcount811, align 8, !dbg !5918
  call void @free(i8* %351) #6, !dbg !5918
  %352 = bitcast %struct.simple_bitmap_def* %call14 to i8*, !dbg !5918
  call void @free(i8* %352) #6, !dbg !5918
  %popcount812 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call22, i64 0, i32 0, !dbg !5919
  %353 = load i8*, i8** %popcount812, align 8, !dbg !5919
  call void @free(i8* %353) #6, !dbg !5919
  %354 = bitcast %struct.simple_bitmap_def* %call22 to i8*, !dbg !5919
  call void @free(i8* %354) #6, !dbg !5919
  %popcount813 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call26, i64 0, i32 0, !dbg !5920
  %355 = load i8*, i8** %popcount813, align 8, !dbg !5920
  call void @free(i8* %355) #6, !dbg !5920
  %356 = bitcast %struct.simple_bitmap_def* %call26 to i8*, !dbg !5920
  call void @free(i8* %356) #6, !dbg !5920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !5921
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !5921
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5921
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5921
  ret void, !dbg !5921
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5922 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5924, metadata !DIExpression()), !dbg !5925
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !5926
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !5927
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5927
  ret %struct.basic_block_def* %0, !dbg !5928
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5929 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5931, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5932, metadata !DIExpression()), !dbg !5936
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5937
  %0 = load i8*, i8** %popcount, align 8, !dbg !5937
  %tobool = icmp eq i8* %0, null, !dbg !5938
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5939

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5940
  %.pre2 = zext i32 %.pre to i64, !dbg !5941
  %.pre3 = shl i64 1, %.pre2, !dbg !5941
  %.pre4 = lshr i32 %bitno, 6, !dbg !5942
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5943
  br label %if.end7, !dbg !5939

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5944
  %idxprom = zext i32 %div to i64, !dbg !5944
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5944
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5944
  %rem = and i32 %bitno, 63, !dbg !5944
  %sh_prom = zext i32 %rem to i64, !dbg !5944
  %2 = shl i64 1, %sh_prom, !dbg !5945
  %3 = and i64 %1, %2, !dbg !5945
  %tobool1 = icmp eq i64 %3, 0, !dbg !5945
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !5947

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5948
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5949
  %dec = add i8 %4, -1, !dbg !5949
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !5949
  br label %if.end7, !dbg !5948

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5943
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5941
  %neg = xor i64 %shl.pre-phi, -1, !dbg !5950
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5943
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5951
  %and14 = and i64 %5, %neg, !dbg !5951
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !5951
  ret void, !dbg !5952
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5953 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5955, metadata !DIExpression()), !dbg !5956
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5957
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5957
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5957
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5957

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5957
  br label %cond.end, !dbg !5957

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5957
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5957
  %cmp = icmp eq i32 %call, 1, !dbg !5958
  %conv2 = zext i1 %cmp to i8, !dbg !5957
  ret i8 %conv2, !dbg !5959
}

declare dso_local void @sbitmap_a_or_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5962, metadata !DIExpression()), !dbg !5963
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !5964
  %tobool = icmp eq i8 %call, 0, !dbg !5964
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5964

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5964
  br label %cond.end, !dbg !5964

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5965
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5965
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5965
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5965

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5965
  br label %cond.end5, !dbg !5965

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5965
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !5965
  ret %struct.edge_def* %call7, !dbg !5966
}

declare dso_local void @sched_analyze(%struct.deps*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_branch_dependences(%struct.rtx_def* %head, %struct.rtx_def* %tail) unnamed_addr #5 !dbg !5967 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !5969, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5970, metadata !DIExpression()), !dbg !5973
  br label %while.cond, !dbg !5974

while.cond:                                       ; preds = %while.body, %entry
  %tail.addr.0 = phi %struct.rtx_def* [ %tail, %entry ], [ %2, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0, metadata !5970, metadata !DIExpression()), !dbg !5973
  %cmp = icmp eq %struct.rtx_def* %tail.addr.0, %head, !dbg !5975
  br i1 %cmp, label %while.end, label %land.rhs, !dbg !5976

land.rhs:                                         ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail.addr.0, i64 0, i32 0, !dbg !5977
  %bf.load = load i32, i32* %0, align 8, !dbg !5977
  %bf.clear = and i32 %bf.load, 65535, !dbg !5977
  %cmp1 = icmp eq i32 %bf.clear, 7, !dbg !5977
  br i1 %cmp1, label %while.body, label %while.end, !dbg !5974

while.body:                                       ; preds = %land.rhs
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5978
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5978
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5970, metadata !DIExpression()), !dbg !5973
  br label %while.cond, !dbg !5974, !llvm.loop !5979

while.end:                                        ; preds = %while.cond, %land.rhs
  %tail.addr.0.lcssa = phi %struct.rtx_def* [ %tail.addr.0, %while.cond ], [ %tail.addr.0, %land.rhs ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail.addr.0.lcssa, metadata !5971, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5972, metadata !DIExpression()), !dbg !5973
  br label %while.cond2, !dbg !5980

while.cond2:                                      ; preds = %do.end, %while.end
  %last.0 = phi %struct.rtx_def* [ null, %while.end ], [ %last.1, %do.end ], !dbg !5981
  %insn.0 = phi %struct.rtx_def* [ %tail.addr.0.lcssa, %while.end ], [ %.lcssa, %do.end ], !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5971, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !5972, metadata !DIExpression()), !dbg !5973
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5982
  %bf.load3 = load i32, i32* %3, align 8, !dbg !5982
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5982
  %cmp5 = icmp eq i32 %bf.clear4, 10, !dbg !5982
  br i1 %cmp5, label %while.body43, label %lor.lhs.false, !dbg !5983

lor.lhs.false:                                    ; preds = %while.cond2
  %cmp8 = icmp eq i32 %bf.clear4, 9, !dbg !5984
  br i1 %cmp8, label %while.body43, label %lor.lhs.false9, !dbg !5985

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear4, 8, !dbg !5986
  br i1 %cmp12, label %land.lhs.true, label %lor.rhs, !dbg !5987

land.lhs.true:                                    ; preds = %lor.lhs.false9
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5988
  %4 = getelementptr inbounds %union.u, %union.u* %u13, i64 1, i32 0, i32 0, i64 0, !dbg !5988
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !5988
  %6 = load i32*, i32** %5, align 8, !dbg !5988
  %bf.load17 = load i32, i32* %6, align 8, !dbg !5988
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !5988
  %cmp19 = icmp eq i32 %bf.clear18, 24, !dbg !5989
  br i1 %cmp19, label %while.body43, label %lor.lhs.false20, !dbg !5990

lor.lhs.false20:                                  ; preds = %land.lhs.true
  %cmp27 = icmp eq i32 %bf.clear18, 25, !dbg !5991
  br i1 %cmp27, label %while.body43, label %lor.lhs.false28, !dbg !5992

lor.lhs.false28:                                  ; preds = %lor.lhs.false20
  %call = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn.0) #6, !dbg !5993
  %tobool = icmp eq i8 %call, 0, !dbg !5993
  br i1 %tobool, label %lor.lhs.false29, label %while.body43, !dbg !5994

lor.lhs.false29:                                  ; preds = %lor.lhs.false28
  %7 = load i32, i32* @reload_completed, align 4, !dbg !5995
  %tobool30 = icmp eq i32 %7, 0, !dbg !5995
  br i1 %tobool30, label %land.lhs.true31, label %lor.rhs, !dbg !5996

land.lhs.true31:                                  ; preds = %lor.lhs.false29
  %rt_rtx35 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5997
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !5997
  %call36 = tail call fastcc zeroext i8 @sets_likely_spilled(%struct.rtx_def* %8) #8, !dbg !5998
  %tobool38 = icmp eq i8 %call36, 0, !dbg !5998
  br i1 %tobool38, label %lor.rhs, label %while.body43, !dbg !5999

lor.rhs:                                          ; preds = %land.lhs.true31, %lor.lhs.false29, %lor.lhs.false9
  %bf.load39 = load i32, i32* %3, align 8, !dbg !6000
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6000
  %cmp41 = icmp eq i32 %bf.clear40, 13, !dbg !6000
  br i1 %cmp41, label %while.body43, label %while.end101, !dbg !5980

while.body43:                                     ; preds = %land.lhs.true31, %lor.lhs.false28, %while.cond2, %lor.lhs.false, %land.lhs.true, %lor.lhs.false20, %lor.rhs
  %bf.load44 = load i32, i32* %3, align 8, !dbg !6001
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !6001
  %cmp46 = icmp eq i32 %bf.clear45, 13, !dbg !6001
  br i1 %cmp46, label %if.end84, label %if.then, !dbg !6004

if.then:                                          ; preds = %while.body43
  %cmp48 = icmp eq %struct.rtx_def* %last.0, null, !dbg !6005
  br i1 %cmp48, label %if.end63, label %land.lhs.true50, !dbg !6008

land.lhs.true50:                                  ; preds = %if.then
  %call51 = tail call %struct._dep* @sd_find_dep_between(%struct.rtx_def* %insn.0, %struct.rtx_def* nonnull %last.0, i8 zeroext 0) #6, !dbg !6009
  %cmp52 = icmp eq %struct._dep* %call51, null, !dbg !6010
  br i1 %cmp52, label %if.then54, label %if.end63, !dbg !6011

if.then54:                                        ; preds = %land.lhs.true50
  %call55 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* nonnull %last.0, %struct.rtx_def* %insn.0) #6, !dbg !6012
  %tobool56 = icmp eq i8 %call55, 0, !dbg !6012
  br i1 %tobool56, label %if.then57, label %if.end, !dbg !6015

if.then57:                                        ; preds = %if.then54
  tail call void @add_dependence(%struct.rtx_def* nonnull %last.0, %struct.rtx_def* %insn.0, i32 12) #6, !dbg !6016
  br label %if.end, !dbg !6016

if.end:                                           ; preds = %if.then54, %if.then57
  %9 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @insn_referenced, align 8, !dbg !6017
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6018
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !6018
  %arrayidx61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6018
  %rt_int = bitcast %union.rtunion_def* %arrayidx61 to i32*, !dbg !6018
  %11 = load i32, i32* %rt_int, align 8, !dbg !6018
  %call62 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %11) #8, !dbg !6018
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %9, i32 %call62) #8, !dbg !6019
  br label %if.end63, !dbg !6020

if.end63:                                         ; preds = %if.then, %if.end, %land.lhs.true50
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6021
  %base66 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %12, i64 0, i32 0, !dbg !6021
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6021
  %base72 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !6021
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6021
  %rt_int79 = bitcast %union.rtunion_def* %arrayidx78 to i32*, !dbg !6021
  %14 = load i32, i32* %rt_int79, align 8, !dbg !6021
  %call80 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base72, i32 %14) #8, !dbg !6021
  %call81 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base66, i32 %call80) #8, !dbg !6021
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call81, i64 0, i32 7, !dbg !6021
  %bf.load82 = load i8, i8* %cant_move, align 8, !dbg !6022
  %bf.set = or i8 %bf.load82, 1, !dbg !6022
  store i8 %bf.set, i8* %cant_move, align 8, !dbg !6022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5972, metadata !DIExpression()), !dbg !5973
  br label %if.end84, !dbg !6023

if.end84:                                         ; preds = %if.end63, %while.body43
  %last.1 = phi %struct.rtx_def* [ %last.0, %while.body43 ], [ %insn.0, %if.end63 ], !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !5972, metadata !DIExpression()), !dbg !5973
  %cmp85 = icmp eq %struct.rtx_def* %insn.0, %head, !dbg !6024
  br i1 %cmp85, label %while.end101, label %do.body.preheader, !dbg !6026

do.body.preheader:                                ; preds = %if.end84
  br label %do.body, !dbg !6027

do.body:                                          ; preds = %do.body.preheader, %land.rhs95
  %insn.1 = phi %struct.rtx_def* [ %16, %land.rhs95 ], [ %insn.0, %do.body.preheader ], !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5971, metadata !DIExpression()), !dbg !5973
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6028
  %rt_rtx92 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !6028
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !6028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !5971, metadata !DIExpression()), !dbg !5973
  %cmp93 = icmp eq %struct.rtx_def* %16, %head, !dbg !6029
  br i1 %cmp93, label %do.end, label %land.rhs95, !dbg !6030

land.rhs95:                                       ; preds = %do.body
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 0, !dbg !6031
  %bf.load96 = load i32, i32* %17, align 8, !dbg !6031
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !6031
  %cmp98 = icmp eq i32 %bf.clear97, 7, !dbg !6031
  br i1 %cmp98, label %do.body, label %do.end, !dbg !6032, !llvm.loop !6033

do.end:                                           ; preds = %do.body, %land.rhs95
  %.lcssa = phi %struct.rtx_def* [ %16, %do.body ], [ %16, %land.rhs95 ], !dbg !6028
  br label %while.cond2, !dbg !5980, !llvm.loop !6035

while.end101:                                     ; preds = %if.end84, %lor.rhs
  %last.2 = phi %struct.rtx_def* [ %last.0, %lor.rhs ], [ %last.1, %if.end84 ], !dbg !5981
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !5972, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !5971, metadata !DIExpression()), !dbg !5973
  %cmp102 = icmp eq %struct.rtx_def* %last.2, null, !dbg !6037
  br i1 %cmp102, label %if.end146, label %while.cond105.preheader, !dbg !6039

while.cond105.preheader:                          ; preds = %while.end101
  br label %while.cond105, !dbg !6040

while.cond105:                                    ; preds = %while.cond105.backedge, %while.cond105.preheader
  %insn.2 = phi %struct.rtx_def* [ %last.2, %while.cond105.preheader ], [ %call109, %while.cond105.backedge ], !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5971, metadata !DIExpression()), !dbg !5973
  %cmp106 = icmp eq %struct.rtx_def* %insn.2, %head, !dbg !6041
  br i1 %cmp106, label %if.end146.loopexit, label %while.body108, !dbg !6040

while.body108:                                    ; preds = %while.cond105
  %call109 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.2) #6, !dbg !6042
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call109, metadata !5971, metadata !DIExpression()), !dbg !5973
  %18 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @insn_referenced, align 8, !dbg !6044
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6044
  %base112 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !6044
  %arrayidx118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call109, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6044
  %rt_int119 = bitcast %union.rtunion_def* %arrayidx118 to i32*, !dbg !6044
  %20 = load i32, i32* %rt_int119, align 8, !dbg !6044
  %call120 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base112, i32 %20) #8, !dbg !6044
  %div = lshr i32 %call120, 6, !dbg !6044
  %idxprom = zext i32 %div to i64, !dbg !6044
  %arrayidx121 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %18, i64 0, i32 3, i64 %idxprom, !dbg !6044
  %21 = load i64, i64* %arrayidx121, align 8, !dbg !6044
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6044
  %base124 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !6044
  %23 = load i32, i32* %rt_int119, align 8, !dbg !6044
  %call132 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base124, i32 %23) #8, !dbg !6044
  %rem = and i32 %call132, 63, !dbg !6044
  %sh_prom = zext i32 %rem to i64, !dbg !6044
  %24 = shl i64 1, %sh_prom, !dbg !6044
  %25 = and i64 %21, %24, !dbg !6044
  %tobool133 = icmp eq i64 %25, 0, !dbg !6044
  br i1 %tobool133, label %lor.lhs.false134, label %if.then139, !dbg !6046

lor.lhs.false134:                                 ; preds = %while.body108
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call109, i64 0, i32 0, !dbg !6047
  %bf.load135 = load i32, i32* %26, align 8, !dbg !6047
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !6047
  %cmp137 = icmp eq i32 %bf.clear136, 7, !dbg !6047
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !6048

if.then139:                                       ; preds = %while.body108, %lor.lhs.false134
  br label %while.cond105.backedge, !dbg !6049

while.cond105.backedge:                           ; preds = %if.then139, %if.end144
  br label %while.cond105, !dbg !5973, !llvm.loop !6050

if.end140:                                        ; preds = %lor.lhs.false134
  %call141 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* nonnull %last.2, %struct.rtx_def* %call109) #6, !dbg !6052
  %tobool142 = icmp eq i8 %call141, 0, !dbg !6052
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !6054

if.then143:                                       ; preds = %if.end140
  tail call void @add_dependence(%struct.rtx_def* nonnull %last.2, %struct.rtx_def* %call109, i32 12) #6, !dbg !6055
  br label %if.end144, !dbg !6055

if.end144:                                        ; preds = %if.end140, %if.then143
  br label %while.cond105.backedge, !dbg !6040

if.end146.loopexit:                               ; preds = %while.cond105
  br label %if.end146, !dbg !6056

if.end146:                                        ; preds = %if.end146.loopexit, %while.end101
  %27 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !6056
  %call147 = tail call zeroext i8 %27() #6, !dbg !6058
  %tobool148 = icmp ne i8 %call147, 0, !dbg !6058
  %28 = load i32, i32* @reload_completed, align 4, !dbg !6059
  %tobool151 = icmp ne i32 %28, 0, !dbg !6059
  %or.cond = and i1 %tobool148, %tobool151, !dbg !6061
  br i1 %or.cond, label %lor.lhs.false152, label %cleanup.cont, !dbg !6061

lor.lhs.false152:                                 ; preds = %if.end146
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail.addr.0.lcssa, i64 0, i32 0, !dbg !6062
  %bf.load153 = load i32, i32* %29, align 8, !dbg !6062
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !6062
  %cmp155 = icmp eq i32 %bf.clear154, 9, !dbg !6062
  br i1 %cmp155, label %while.cond159.preheader, label %cleanup.cont, !dbg !6063

while.cond159.preheader:                          ; preds = %lor.lhs.false152
  br label %while.cond159, !dbg !6064

while.cond159:                                    ; preds = %while.cond159.preheader, %if.end196
  %insn.3 = phi %struct.rtx_def* [ %31, %if.end196 ], [ %tail.addr.0.lcssa, %while.cond159.preheader ], !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5971, metadata !DIExpression()), !dbg !5973
  %cmp160 = icmp eq %struct.rtx_def* %insn.3, %head, !dbg !6065
  br i1 %cmp160, label %cleanup.cont.loopexit, label %while.body162, !dbg !6064

while.body162:                                    ; preds = %while.cond159
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6066
  %rt_rtx166 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !6066
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx166, align 8, !dbg !6066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !5971, metadata !DIExpression()), !dbg !5973
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 0, !dbg !6068
  %bf.load167 = load i32, i32* %32, align 8, !dbg !6068
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !6068
  %cmp169 = icmp eq i32 %bf.clear168, 8, !dbg !6068
  br i1 %cmp169, label %land.lhs.true186, label %lor.lhs.false171, !dbg !6068

lor.lhs.false171:                                 ; preds = %while.body162
  %cmp174 = icmp eq i32 %bf.clear168, 7, !dbg !6068
  br i1 %cmp174, label %land.lhs.true186, label %lor.lhs.false176, !dbg !6068

lor.lhs.false176:                                 ; preds = %lor.lhs.false171
  %cmp179 = icmp eq i32 %bf.clear168, 9, !dbg !6068
  br i1 %cmp179, label %land.lhs.true186, label %lor.lhs.false181, !dbg !6068

lor.lhs.false181:                                 ; preds = %lor.lhs.false176
  %cmp184 = icmp eq i32 %bf.clear168, 10, !dbg !6068
  br i1 %cmp184, label %land.lhs.true186, label %if.end196, !dbg !6070

land.lhs.true186:                                 ; preds = %lor.lhs.false181, %lor.lhs.false176, %lor.lhs.false171, %while.body162
  %u187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, !dbg !6071
  %33 = getelementptr inbounds %union.u, %union.u* %u187, i64 1, i32 0, i32 0, i64 0, !dbg !6071
  %34 = bitcast %union.rtunion_def* %33 to i32**, !dbg !6071
  %35 = load i32*, i32** %34, align 8, !dbg !6071
  %bf.load191 = load i32, i32* %35, align 8, !dbg !6071
  %bf.clear192 = and i32 %bf.load191, 65535, !dbg !6071
  %cmp193 = icmp eq i32 %bf.clear192, 14, !dbg !6072
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !6073

if.then195:                                       ; preds = %land.lhs.true186
  tail call void @add_dependence(%struct.rtx_def* %tail.addr.0.lcssa, %struct.rtx_def* %31, i32 12) #6, !dbg !6074
  br label %if.end196, !dbg !6074

if.end196:                                        ; preds = %if.then195, %land.lhs.true186, %lor.lhs.false181
  br label %while.cond159, !dbg !6064, !llvm.loop !6075

cleanup.cont.loopexit:                            ; preds = %while.cond159
  br label %cleanup.cont, !dbg !6077

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end146, %lor.lhs.false152
  ret void, !dbg !6077
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_deps(i32 %bb, %struct.deps* %pred_deps) unnamed_addr #5 !dbg !6078 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %bb, metadata !6082, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.value(metadata %struct.deps* %pred_deps, metadata !6083, metadata !DIExpression()), !dbg !6087
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6088
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6088
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6088
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !6088
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6088
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !6088
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6088

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !6088
  br label %cond.end, !dbg !6088

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6088
  %3 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6088
  %4 = load i32*, i32** @ebb_head, align 8, !dbg !6088
  %idxprom = sext i32 %bb to i64, !dbg !6088
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !6088
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6088
  %idxprom4 = sext i32 %5 to i64, !dbg !6088
  %arrayidx5 = getelementptr inbounds i32, i32* %3, i64 %idxprom4, !dbg !6088
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !6088
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6) #8, !dbg !6088
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6084, metadata !DIExpression()), !dbg !6087
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6089
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7, !dbg !6089
  %8 = bitcast %struct.edge_def** %e to i8*, !dbg !6090
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6090
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6091
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7, !dbg !6091
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !6091
  %call6 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !6091
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6091
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 0, !dbg !6091
  store i32 %11, i32* %10, align 8, !dbg !6091
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6091
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 1, !dbg !6091
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !6091
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !6091
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7, !dbg !6091
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6093
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6093
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !6095
  br label %for.cond, !dbg !6091

for.cond:                                         ; preds = %for.inc, %cond.end
  %16 = load i32, i32* %14, align 8, !dbg !6098
  %17 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !6098
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6086, metadata !DIExpression(DW_OP_deref)), !dbg !6087
  %call7 = call fastcc zeroext i8 @ei_cond(i32 %16, %struct.VEC_edge_gc** %17, %struct.edge_def** nonnull %e) #8, !dbg !6098
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6091
  br i1 %tobool8, label %for.end, label %for.body, !dbg !6091

for.body:                                         ; preds = %for.cond
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6099
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !6086, metadata !DIExpression()), !dbg !6087
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i64 0, i32 1, !dbg !6100
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6100
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6101
  %cfg10 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !6101
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10, align 8, !dbg !6101
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 1, !dbg !6101
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6101
  %cmp = icmp eq %struct.basic_block_def* %19, %22, !dbg !6102
  br i1 %cmp, label %for.inc, label %lor.lhs.false, !dbg !6103

lor.lhs.false:                                    ; preds = %for.body
  %23 = load i32*, i32** @containing_rgn, align 8, !dbg !6104
  %24 = load i32, i32* %index, align 8, !dbg !6104
  %idxprom11 = sext i32 %24 to i64, !dbg !6104
  %arrayidx12 = getelementptr inbounds i32, i32* %23, i64 %idxprom11, !dbg !6104
  %25 = load i32, i32* %arrayidx12, align 4, !dbg !6104
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !6086, metadata !DIExpression()), !dbg !6087
  %index14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 9, !dbg !6105
  %26 = load i32, i32* %index14, align 8, !dbg !6105
  %idxprom15 = sext i32 %26 to i64, !dbg !6105
  %arrayidx16 = getelementptr inbounds i32, i32* %23, i64 %idxprom15, !dbg !6105
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !6105
  %cmp17 = icmp eq i32 %25, %27, !dbg !6106
  br i1 %cmp17, label %lor.lhs.false18, label %for.inc, !dbg !6107

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %28 = load i32*, i32** @block_to_bb, align 8, !dbg !6108
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !6086, metadata !DIExpression()), !dbg !6087
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom15, !dbg !6108
  %29 = load i32, i32* %arrayidx22, align 4, !dbg !6108
  %cmp23 = icmp sgt i32 %29, %bb, !dbg !6109
  br i1 %cmp23, label %if.end, label %for.inc, !dbg !6110

if.end:                                           ; preds = %lor.lhs.false18
  %30 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !6111
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !6086, metadata !DIExpression()), !dbg !6087
  %idx.ext = sext i32 %29 to i64, !dbg !6112
  %add.ptr28 = getelementptr inbounds %struct.deps, %struct.deps* %30, i64 %idx.ext, !dbg !6112
  call void @deps_join(%struct.deps* %add.ptr28, %struct.deps* %pred_deps) #8, !dbg !6113
  br label %for.inc, !dbg !6114

for.inc:                                          ; preds = %lor.lhs.false18, %lor.lhs.false, %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6085, metadata !DIExpression(DW_OP_deref)), !dbg !6087
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6098
  br label %for.cond, !dbg !6098, !llvm.loop !6115

for.end:                                          ; preds = %for.cond
  %31 = bitcast %struct.deps* %pred_deps to i64*, !dbg !6117
  %32 = load i64, i64* %31, align 8, !dbg !6117
  %33 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !6118
  %arrayidx30 = getelementptr inbounds %struct.deps, %struct.deps* %33, i64 %idxprom, !dbg !6118
  %34 = bitcast %struct.deps* %arrayidx30 to i64*, !dbg !6119
  store i64 %32, i64* %34, align 8, !dbg !6119
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 1, !dbg !6120
  %35 = bitcast %struct.rtx_def** %pending_read_mems to i64*, !dbg !6120
  %36 = load i64, i64* %35, align 8, !dbg !6120
  %37 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !6121
  %pending_read_mems34 = getelementptr inbounds %struct.deps, %struct.deps* %37, i64 %idxprom, i32 1, !dbg !6122
  %38 = bitcast %struct.rtx_def** %pending_read_mems34 to i64*, !dbg !6123
  store i64 %36, i64* %38, align 8, !dbg !6123
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 2, !dbg !6124
  %39 = bitcast %struct.rtx_def** %pending_write_insns to i64*, !dbg !6124
  %40 = load i64, i64* %39, align 8, !dbg !6124
  %41 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !6125
  %pending_write_insns37 = getelementptr inbounds %struct.deps, %struct.deps* %41, i64 %idxprom, i32 2, !dbg !6126
  %42 = bitcast %struct.rtx_def** %pending_write_insns37 to i64*, !dbg !6127
  store i64 %40, i64* %42, align 8, !dbg !6127
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 3, !dbg !6128
  %43 = bitcast %struct.rtx_def** %pending_write_mems to i64*, !dbg !6128
  %44 = load i64, i64* %43, align 8, !dbg !6128
  %45 = load %struct.deps*, %struct.deps** @bb_deps, align 8, !dbg !6129
  %pending_write_mems40 = getelementptr inbounds %struct.deps, %struct.deps* %45, i64 %idxprom, i32 3, !dbg !6130
  %46 = bitcast %struct.rtx_def** %pending_write_mems40 to i64*, !dbg !6131
  store i64 %44, i64* %46, align 8, !dbg !6131
  %pending_read_insns41 = getelementptr inbounds %struct.deps, %struct.deps* %pred_deps, i64 0, i32 0, !dbg !6132
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_insns41, align 8, !dbg !6133
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_mems, align 8, !dbg !6134
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_insns, align 8, !dbg !6135
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_mems, align 8, !dbg !6136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7, !dbg !6137
  ret void, !dbg !6137
}

declare dso_local void @free_deps(%struct.deps*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sets_likely_spilled(%struct.rtx_def* %pat) unnamed_addr #5 !dbg !6138 {
entry:
  %ret = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !6140, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i8* %ret, metadata !6141, metadata !DIExpression(DW_OP_deref)), !dbg !6142
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ret) #7, !dbg !6143
  call void @llvm.dbg.value(metadata i8 0, metadata !6141, metadata !DIExpression()), !dbg !6142
  store i8 0, i8* %ret, align 1, !dbg !6144
  call void @llvm.dbg.value(metadata i8* %ret, metadata !6141, metadata !DIExpression(DW_OP_deref)), !dbg !6142
  call void @note_stores(%struct.rtx_def* %pat, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @sets_likely_spilled_1, i8* nonnull %ret) #6, !dbg !6145
  %0 = load i8, i8* %ret, align 1, !dbg !6146
  call void @llvm.dbg.value(metadata i8 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i8* %ret, metadata !6141, metadata !DIExpression(DW_OP_deref)), !dbg !6142
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ret) #7, !dbg !6147
  ret i8 %0, !dbg !6148
}

declare dso_local %struct._dep* @sd_find_dep_between(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @add_dependence(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6149 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6163, metadata !DIExpression()), !dbg !6164
  br label %land.end, !dbg !6165

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6165
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6165
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6165
  ret i32 %0, !dbg !6165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6166 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !6190, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6191, metadata !DIExpression()), !dbg !6192
  br label %land.end, !dbg !6193

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6193
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6193
  ret %struct._haifa_deps_insn_data* %arrayidx, !dbg !6193
}

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @sets_likely_spilled_1(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #5 !dbg !6194 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6198, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !6199, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8* %data, metadata !6200, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8* %data, metadata !6201, metadata !DIExpression()), !dbg !6202
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !6203
  %bf.load = load i32, i32* %0, align 8, !dbg !6203
  %bf.clear = and i32 %bf.load, 65535, !dbg !6203
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !6205
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6206

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6207
  %bf.load1 = load i32, i32* %1, align 8, !dbg !6207
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6207
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !6207
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !6208

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6209
  %cmp5 = icmp ult i32 %call, 53, !dbg !6210
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !6211

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %call7 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom = zext i32 %call7 to i64, !dbg !6212
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom, !dbg !6212
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6212
  %cmp8 = icmp eq i32 %2, 1, !dbg !6212
  br i1 %cmp8, label %if.then, label %lor.lhs.false, !dbg !6212

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom10 = zext i32 %call9 to i64, !dbg !6212
  %arrayidx11 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom10, !dbg !6212
  %3 = load i32, i32* %arrayidx11, align 4, !dbg !6212
  %cmp12 = icmp eq i32 %3, 2, !dbg !6212
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !6212

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %call14 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom15 = zext i32 %call14 to i64, !dbg !6212
  %arrayidx16 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom15, !dbg !6212
  %4 = load i32, i32* %arrayidx16, align 4, !dbg !6212
  %cmp17 = icmp eq i32 %4, 3, !dbg !6212
  br i1 %cmp17, label %if.then, label %lor.lhs.false18, !dbg !6212

lor.lhs.false18:                                  ; preds = %lor.lhs.false13
  %call19 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom20 = zext i32 %call19 to i64, !dbg !6212
  %arrayidx21 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom20, !dbg !6212
  %5 = load i32, i32* %arrayidx21, align 4, !dbg !6212
  %cmp22 = icmp eq i32 %5, 4, !dbg !6212
  br i1 %cmp22, label %if.then, label %lor.lhs.false23, !dbg !6212

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %call24 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom25 = zext i32 %call24 to i64, !dbg !6212
  %arrayidx26 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom25, !dbg !6212
  %6 = load i32, i32* %arrayidx26, align 4, !dbg !6212
  %cmp27 = icmp eq i32 %6, 7, !dbg !6212
  br i1 %cmp27, label %if.then, label %lor.lhs.false28, !dbg !6212

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %call29 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom30 = zext i32 %call29 to i64, !dbg !6212
  %arrayidx31 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom30, !dbg !6212
  %7 = load i32, i32* %arrayidx31, align 4, !dbg !6212
  %cmp32 = icmp eq i32 %7, 5, !dbg !6212
  br i1 %cmp32, label %if.then, label %lor.lhs.false33, !dbg !6212

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %call34 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom35 = zext i32 %call34 to i64, !dbg !6212
  %arrayidx36 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom35, !dbg !6212
  %8 = load i32, i32* %arrayidx36, align 4, !dbg !6212
  %cmp37 = icmp eq i32 %8, 6, !dbg !6212
  br i1 %cmp37, label %if.then, label %lor.lhs.false38, !dbg !6212

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %call39 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom40 = zext i32 %call39 to i64, !dbg !6212
  %arrayidx41 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom40, !dbg !6212
  %9 = load i32, i32* %arrayidx41, align 4, !dbg !6212
  %cmp42 = icmp eq i32 %9, 17, !dbg !6212
  br i1 %cmp42, label %if.then, label %lor.lhs.false43, !dbg !6212

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %call44 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom45 = zext i32 %call44 to i64, !dbg !6212
  %arrayidx46 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom45, !dbg !6212
  %10 = load i32, i32* %arrayidx46, align 4, !dbg !6212
  %cmp47 = icmp eq i32 %10, 14, !dbg !6212
  br i1 %cmp47, label %if.then, label %lor.lhs.false48, !dbg !6212

lor.lhs.false48:                                  ; preds = %lor.lhs.false43
  %call49 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !6212
  %idxprom50 = zext i32 %call49 to i64, !dbg !6212
  %arrayidx51 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom50, !dbg !6212
  %11 = load i32, i32* %arrayidx51, align 4, !dbg !6212
  %cmp52 = icmp eq i32 %11, 15, !dbg !6212
  br i1 %cmp52, label %if.then, label %if.end, !dbg !6213

if.then:                                          ; preds = %lor.lhs.false48, %lor.lhs.false43, %lor.lhs.false38, %lor.lhs.false33, %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false18, %lor.lhs.false13, %lor.lhs.false, %land.lhs.true6
  store i8 1, i8* %data, align 1, !dbg !6214
  br label %if.end, !dbg !6215

if.end:                                           ; preds = %if.then, %lor.lhs.false48, %land.lhs.true4, %land.lhs.true, %entry
  ret void, !dbg !6216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !6217 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6221, metadata !DIExpression()), !dbg !6222
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6223
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6223
  %0 = load i32, i32* %rt_uint, align 8, !dbg !6223
  ret i32 %0, !dbg !6224
}

declare dso_local void @free_INSN_LIST_list(%struct.rtx_def**) local_unnamed_addr #2

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) local_unnamed_addr #2

declare dso_local void @sbitmap_a_and_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @sbitmap_difference(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @compute_jump_reg_dependencies(%struct.rtx_def* %insn, %struct.bitmap_head_def* %cond_exec, %struct.bitmap_head_def* %used, %struct.bitmap_head_def* %set) #5 !dbg !6225 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6227, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %cond_exec, metadata !6228, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used, metadata !6229, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !6230, metadata !DIExpression()), !dbg !6231
  ret void, !dbg !6232
}

; Function Attrs: nounwind uwtable
define internal void @init_ready_list() #5 !dbg !6233 {
entry:
  %tail = alloca %struct.rtx_def*, align 8
  %head = alloca %struct.rtx_def*, align 8
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6247
  %prev_head1 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 8, !dbg !6248
  %1 = load %struct.rtx_def*, %struct.rtx_def** %prev_head1, align 8, !dbg !6248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6235, metadata !DIExpression()), !dbg !6249
  %next_tail2 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 9, !dbg !6250
  %2 = load %struct.rtx_def*, %struct.rtx_def** %next_tail2, align 8, !dbg !6250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6236, metadata !DIExpression()), !dbg !6249
  store i32 0, i32* @target_n_insns, align 4, !dbg !6251
  store i32 0, i32* @sched_target_n_insns, align 4, !dbg !6252
  store i32 0, i32* @sched_n_insns, align 4, !dbg !6253
  %3 = load i32, i32* @sched_verbose, align 4, !dbg !6254
  %cmp = icmp sgt i32 %3, 4, !dbg !6256
  br i1 %cmp, label %if.then, label %if.end, !dbg !6257

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @target_bb, align 4, !dbg !6258
  tail call void @debug_rgn_dependencies(i32 %4) #8, !dbg !6259
  br label %if.end, !dbg !6259

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* @current_nr_blocks, align 4, !dbg !6260
  %cmp3 = icmp sgt i32 %5, 1, !dbg !6262
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6263

if.then4:                                         ; preds = %if.end
  %6 = load i32, i32* @target_bb, align 4, !dbg !6264
  tail call fastcc void @compute_trg_info(i32 %6) #8, !dbg !6265
  br label %if.end5, !dbg !6265

if.end5:                                          ; preds = %if.then4, %if.end
  br label %for.cond, !dbg !6266

for.cond:                                         ; preds = %for.inc, %if.end5
  %.pn = phi %struct.rtx_def* [ %1, %if.end5 ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6268
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !6268
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6238, metadata !DIExpression()), !dbg !6249
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %2, !dbg !6269
  br i1 %cmp6, label %for.end, label %for.body, !dbg !6271

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @try_ready(%struct.rtx_def* %insn.0) #6, !dbg !6272
  %7 = load i32, i32* @target_n_insns, align 4, !dbg !6274
  %inc = add nsw i32 %7, 1, !dbg !6274
  store i32 %inc, i32* @target_n_insns, align 4, !dbg !6274
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6275
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !6275
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6275
  %rt_int = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !6275
  %9 = load i32, i32* %rt_int, align 8, !dbg !6275
  %call10 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %9) #8, !dbg !6275
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call10, i64 0, i32 8, !dbg !6275
  %10 = load i32, i32* %todo_spec, align 8, !dbg !6275
  %and = and i32 %10, 258048, !dbg !6275
  %tobool11 = icmp eq i32 %and, 0, !dbg !6275
  br i1 %tobool11, label %for.inc, label %cond.true12, !dbg !6275

cond.true12:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6275
  br label %for.inc, !dbg !6275

for.inc:                                          ; preds = %for.body, %cond.true12
  br label %for.cond, !dbg !6276, !llvm.loop !6277

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* @target_bb, align 4, !dbg !6279
  call void @llvm.dbg.value(metadata i32 %11, metadata !6237, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6249
  %12 = bitcast %struct.rtx_def** %tail to i8*, !dbg !6280
  %13 = bitcast %struct.rtx_def** %head to i8*, !dbg !6280
  %14 = sext i32 %11 to i64, !dbg !6281
  br label %for.cond20, !dbg !6281

for.cond20:                                       ; preds = %for.inc94, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc94 ], [ %14, %for.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6282
  call void @llvm.dbg.value(metadata i32 undef, metadata !6237, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6249
  %15 = load i32, i32* @current_nr_blocks, align 4, !dbg !6283
  %16 = sext i32 %15 to i64, !dbg !6284
  %cmp21 = icmp slt i64 %indvars.iv.next, %16, !dbg !6284
  br i1 %cmp21, label %for.body22, label %for.end96, !dbg !6285

for.body22:                                       ; preds = %for.cond20
  %17 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6286
  %is_valid = getelementptr inbounds %struct.candidate, %struct.candidate* %17, i64 %indvars.iv.next, i32 0, !dbg !6286
  %18 = load i8, i8* %is_valid, align 8, !dbg !6286
  %tobool24 = icmp eq i8 %18, 0, !dbg !6286
  br i1 %tobool24, label %for.inc94, label %if.then25, !dbg !6287

if.then25:                                        ; preds = %for.body22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6288
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7, !dbg !6288
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6289
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !6289
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6289
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 2, !dbg !6289
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6289
  %tobool26 = icmp eq %struct.VEC_basic_block_gc* %21, null, !dbg !6289
  br i1 %tobool26, label %cond.end33, label %cond.true27, !dbg !6289

cond.true27:                                      ; preds = %if.then25
  %base31 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i64 0, i32 0, !dbg !6289
  br label %cond.end33, !dbg !6289

cond.end33:                                       ; preds = %if.then25, %cond.true27
  %cond34 = phi %struct.VEC_basic_block_base* [ %base31, %cond.true27 ], [ null, %if.then25 ], !dbg !6289
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6289
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !6289
  %arrayidx36 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv.next, !dbg !6289
  %24 = load i32, i32* %arrayidx36, align 4, !dbg !6289
  %idxprom37 = sext i32 %24 to i64, !dbg !6289
  %arrayidx38 = getelementptr inbounds i32, i32* %22, i64 %idxprom37, !dbg !6289
  %25 = load i32, i32* %arrayidx38, align 4, !dbg !6289
  %call39 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond34, i32 %25) #8, !dbg !6289
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6290
  %cfg41 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !6290
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41, align 8, !dbg !6290
  %x_basic_block_info42 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 2, !dbg !6290
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info42, align 8, !dbg !6290
  %tobool43 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !6290
  br i1 %tobool43, label %cond.end50, label %cond.true44, !dbg !6290

cond.true44:                                      ; preds = %cond.end33
  %base48 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !6290
  br label %cond.end50, !dbg !6290

cond.end50:                                       ; preds = %cond.end33, %cond.true44
  %cond51 = phi %struct.VEC_basic_block_base* [ %base48, %cond.true44 ], [ null, %cond.end33 ], !dbg !6290
  %29 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6290
  %30 = load i32*, i32** @ebb_head, align 8, !dbg !6290
  %31 = add nsw i64 %indvars.iv, 2, !dbg !6290
  %arrayidx54 = getelementptr inbounds i32, i32* %30, i64 %31, !dbg !6290
  %32 = load i32, i32* %arrayidx54, align 4, !dbg !6290
  %sub = add nsw i32 %32, -1, !dbg !6290
  %idxprom55 = sext i32 %sub to i64, !dbg !6290
  %arrayidx56 = getelementptr inbounds i32, i32* %29, i64 %idxprom55, !dbg !6290
  %33 = load i32, i32* %arrayidx56, align 4, !dbg !6290
  %call57 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond51, i32 %33) #8, !dbg !6290
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !6245, metadata !DIExpression(DW_OP_deref)), !dbg !6280
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !6246, metadata !DIExpression(DW_OP_deref)), !dbg !6280
  call void @get_ebb_head_tail(%struct.basic_block_def* %call39, %struct.basic_block_def* %call57, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !6291
  %34 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !6245, metadata !DIExpression()), !dbg !6280
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6292
  %rt_rtx61 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !6292
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !6244, metadata !DIExpression()), !dbg !6280
  br label %for.cond62, !dbg !6293

for.cond62:                                       ; preds = %for.inc87, %cond.end50
  %insn.1.in = phi %struct.rtx_def** [ %head, %cond.end50 ], [ %rt_rtx91, %for.inc87 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !6238, metadata !DIExpression()), !dbg !6249
  %cmp63 = icmp eq %struct.rtx_def* %insn.1, %36, !dbg !6296
  br i1 %cmp63, label %for.end92, label %for.body64, !dbg !6298

for.body64:                                       ; preds = %for.cond62
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !6299
  %bf.load = load i32, i32* %37, align 8, !dbg !6299
  %bf.clear = and i32 %bf.load, 65535, !dbg !6299
  %cmp65 = icmp eq i32 %bf.clear, 8, !dbg !6299
  br i1 %cmp65, label %land.lhs.true, label %lor.lhs.false, !dbg !6299

lor.lhs.false:                                    ; preds = %for.body64
  %cmp68 = icmp eq i32 %bf.clear, 7, !dbg !6299
  br i1 %cmp68, label %land.lhs.true, label %lor.lhs.false69, !dbg !6299

lor.lhs.false69:                                  ; preds = %lor.lhs.false
  %cmp72 = icmp eq i32 %bf.clear, 9, !dbg !6299
  br i1 %cmp72, label %land.lhs.true, label %lor.lhs.false73, !dbg !6299

lor.lhs.false73:                                  ; preds = %lor.lhs.false69
  %cmp76 = icmp eq i32 %bf.clear, 10, !dbg !6299
  br i1 %cmp76, label %land.lhs.true, label %for.inc87, !dbg !6301

land.lhs.true:                                    ; preds = %lor.lhs.false73, %lor.lhs.false69, %lor.lhs.false, %for.body64
  %cmp79 = icmp eq i32 %bf.clear, 7, !dbg !6302
  br i1 %cmp79, label %land.lhs.true80, label %if.then84, !dbg !6302

land.lhs.true80:                                  ; preds = %land.lhs.true
  %bf.clear82 = and i32 %bf.load, 67108864, !dbg !6302
  %tobool83 = icmp eq i32 %bf.clear82, 0, !dbg !6302
  br i1 %tobool83, label %for.inc87, label %if.then84, !dbg !6303

if.then84:                                        ; preds = %land.lhs.true80, %land.lhs.true
  %call85 = call i32 @try_ready(%struct.rtx_def* %insn.1) #6, !dbg !6304
  br label %for.inc87, !dbg !6304

for.inc87:                                        ; preds = %land.lhs.true80, %lor.lhs.false73, %if.then84
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6305
  %rt_rtx91 = bitcast %union.rtunion_def* %38 to %struct.rtx_def**, !dbg !6305
  br label %for.cond62, !dbg !6306, !llvm.loop !6307

for.end92:                                        ; preds = %for.cond62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7, !dbg !6309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6309
  br label %for.inc94, !dbg !6310

for.inc94:                                        ; preds = %for.body22, %for.end92
  call void @llvm.dbg.value(metadata i32 undef, metadata !6237, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6249
  br label %for.cond20, !dbg !6311, !llvm.loop !6312

for.end96:                                        ; preds = %for.cond20
  ret void, !dbg !6314
}

; Function Attrs: nounwind uwtable
define internal i32 @can_schedule_ready_p(%struct.rtx_def* %insn) #5 !dbg !6315 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6317, metadata !DIExpression()), !dbg !6318
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6319
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6319
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6319
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6319
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6319
  %2 = load i32, i32* %index, align 8, !dbg !6319
  %idxprom = sext i32 %2 to i64, !dbg !6319
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6319
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6319
  %4 = load i32, i32* @target_bb, align 4, !dbg !6321
  %cmp = icmp eq i32 %3, %4, !dbg !6322
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !6323

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6324
  %idxprom10 = sext i32 %3 to i64, !dbg !6324
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %5, i64 %idxprom10, i32 1, !dbg !6324
  %6 = load i8, i8* %is_speculative, align 1, !dbg !6324
  %tobool = icmp eq i8 %6, 0, !dbg !6324
  br i1 %tobool, label %if.else, label %land.lhs.true12, !dbg !6325

land.lhs.true12:                                  ; preds = %land.lhs.true
  %call = tail call fastcc i32 @check_live(%struct.rtx_def* %insn, i32 %3) #8, !dbg !6326
  %tobool21 = icmp eq i32 %call, 0, !dbg !6326
  br i1 %tobool21, label %return, label %if.else, !dbg !6327

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true, %entry
  br label %return, !dbg !6328

return:                                           ; preds = %land.lhs.true12, %if.else
  %retval.0 = phi i32 [ 1, %if.else ], [ 0, %land.lhs.true12 ], !dbg !6329
  ret i32 %retval.0, !dbg !6330
}

; Function Attrs: nounwind uwtable
define internal i32 @schedule_more_p() #5 !dbg !6331 {
entry:
  %0 = load i32, i32* @sched_target_n_insns, align 4, !dbg !6332
  %1 = load i32, i32* @target_n_insns, align 4, !dbg !6333
  %cmp = icmp slt i32 %0, %1, !dbg !6334
  %conv = zext i1 %cmp to i32, !dbg !6334
  ret i32 %conv, !dbg !6335
}

; Function Attrs: nounwind uwtable
define internal i32 @new_ready(%struct.rtx_def* %next, i32 %ts) #5 !dbg !6336 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next, metadata !6338, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %ts, metadata !6339, metadata !DIExpression()), !dbg !6348
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6349
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 1, !dbg !6349
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6349
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6349
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6349
  %2 = load i32, i32* %index, align 8, !dbg !6349
  %idxprom = sext i32 %2 to i64, !dbg !6349
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6349
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6349
  %4 = load i32, i32* @target_bb, align 4, !dbg !6350
  %cmp = icmp eq i32 %3, %4, !dbg !6351
  br i1 %cmp, label %if.end108, label %if.then, !dbg !6352

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !6340, metadata !DIExpression()), !dbg !6353
  %5 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6354
  %idxprom10 = sext i32 %3 to i64, !dbg !6354
  %is_valid = getelementptr inbounds %struct.candidate, %struct.candidate* %5, i64 %idxprom10, i32 0, !dbg !6354
  %6 = load i8, i8* %is_valid, align 8, !dbg !6354
  %tobool = icmp eq i8 %6, 0, !dbg !6354
  br i1 %tobool, label %if.then88, label %lor.lhs.false, !dbg !6355

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6356
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %7, i64 0, i32 0, !dbg !6356
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6356
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !6356
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6356
  %rt_int = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !6356
  %9 = load i32, i32* %rt_int, align 8, !dbg !6356
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base15, i32 %9) #8, !dbg !6356
  %call22 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #8, !dbg !6356
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call22, i64 0, i32 7, !dbg !6356
  %bf.load = load i8, i8* %cant_move, align 8, !dbg !6356
  %bf.clear = and i8 %bf.load, 1, !dbg !6356
  %tobool23 = icmp eq i8 %bf.clear, 0, !dbg !6356
  br i1 %tobool23, label %lor.lhs.false24, label %if.then88, !dbg !6357

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %10 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6358
  %11 = load i32*, i32** @block_to_bb, align 8, !dbg !6358
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6358
  %index29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !6358
  %13 = load i32, i32* %index29, align 8, !dbg !6358
  %idxprom31 = sext i32 %13 to i64, !dbg !6358
  %arrayidx32 = getelementptr inbounds i32, i32* %11, i64 %idxprom31, !dbg !6358
  %14 = load i32, i32* %arrayidx32, align 4, !dbg !6358
  %idxprom33 = sext i32 %14 to i64, !dbg !6358
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %10, i64 %idxprom33, i32 1, !dbg !6358
  %15 = load i8, i8* %is_speculative, align 1, !dbg !6358
  %tobool35 = icmp eq i8 %15, 0, !dbg !6358
  br i1 %tobool35, label %if.end108, label %land.lhs.true, !dbg !6359

land.lhs.true:                                    ; preds = %lor.lhs.false24
  %call36 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %next) #8, !dbg !6360
  %cmp37 = icmp sgt i32 %call36, -1, !dbg !6361
  br i1 %cmp37, label %land.lhs.true39, label %lor.lhs.false44, !dbg !6362

land.lhs.true39:                                  ; preds = %land.lhs.true
  %16 = load i8*, i8** @curr_state, align 8, !dbg !6363
  %call40 = tail call i32 @min_insn_conflict_delay(i8* %16, %struct.rtx_def* %next, %struct.rtx_def* %next) #6, !dbg !6364
  %17 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6365
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %17, i64 83, i32 1, !dbg !6365
  %18 = load i32, i32* %value, align 8, !dbg !6365
  %cmp42 = icmp sgt i32 %call40, %18, !dbg !6366
  br i1 %cmp42, label %if.then88, label %lor.lhs.false44, !dbg !6367

lor.lhs.false44:                                  ; preds = %land.lhs.true39, %land.lhs.true
  %call45 = tail call fastcc zeroext i8 @sel_sched_p() #8, !dbg !6368
  %tobool47 = icmp eq i8 %call45, 0, !dbg !6368
  br i1 %tobool47, label %cond.false52, label %cond.true48, !dbg !6369

cond.true48:                                      ; preds = %lor.lhs.false44
  %call49 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %next) #6, !dbg !6368
  %tobool51 = icmp eq i8 %call49, 0, !dbg !6368
  br i1 %tobool51, label %lor.lhs.false66, label %if.then88, !dbg !6368

cond.false52:                                     ; preds = %lor.lhs.false44
  %19 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6368
  %base55 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %19, i64 0, i32 0, !dbg !6368
  %20 = load i32, i32* %rt_int, align 8, !dbg !6368
  %call63 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base55, i32 %20) #8, !dbg !6368
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call63, i64 0, i32 11, !dbg !6368
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !6368
  %cmp64 = icmp eq %struct.basic_block_def* %21, null, !dbg !6368
  br i1 %cmp64, label %lor.lhs.false66, label %if.then88, !dbg !6369

lor.lhs.false66:                                  ; preds = %cond.true48, %cond.false52
  %22 = load i32*, i32** @block_to_bb, align 8, !dbg !6370
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6370
  %index71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !6370
  %24 = load i32, i32* %index71, align 8, !dbg !6370
  %idxprom73 = sext i32 %24 to i64, !dbg !6370
  %arrayidx74 = getelementptr inbounds i32, i32* %22, i64 %idxprom73, !dbg !6370
  %25 = load i32, i32* %arrayidx74, align 4, !dbg !6370
  %call75 = tail call fastcc i32 @check_live(%struct.rtx_def* %next, i32 %25) #8, !dbg !6371
  %tobool76 = icmp eq i32 %call75, 0, !dbg !6371
  br i1 %tobool76, label %if.then88, label %lor.lhs.false77, !dbg !6372

lor.lhs.false77:                                  ; preds = %lor.lhs.false66
  %26 = load i32*, i32** @block_to_bb, align 8, !dbg !6373
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6373
  %index82 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 9, !dbg !6373
  %28 = load i32, i32* %index82, align 8, !dbg !6373
  %idxprom84 = sext i32 %28 to i64, !dbg !6373
  %arrayidx85 = getelementptr inbounds i32, i32* %26, i64 %idxprom84, !dbg !6373
  %29 = load i32, i32* %arrayidx85, align 4, !dbg !6373
  %30 = load i32, i32* @target_bb, align 4, !dbg !6374
  %call86 = tail call fastcc i32 @is_exception_free(%struct.rtx_def* %next, i32 %29, i32 %30) #8, !dbg !6375
  %tobool87 = icmp eq i32 %call86, 0, !dbg !6376
  %lnot.ext = zext i1 %tobool87 to i32, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6340, metadata !DIExpression()), !dbg !6353
  br i1 %tobool87, label %if.then88, label %if.end108, !dbg !6377

if.then88:                                        ; preds = %cond.true48, %lor.lhs.false66, %cond.false52, %lor.lhs.false, %if.then, %lor.lhs.false77, %land.lhs.true39
  %not_ex_free.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %land.lhs.true39 ], [ 0, %cond.true48 ], [ %lnot.ext, %lor.lhs.false77 ], [ 0, %lor.lhs.false66 ], [ 0, %cond.false52 ], [ 0, %if.then ], !dbg !6353
  call void @llvm.dbg.value(metadata i32 %not_ex_free.0, metadata !6340, metadata !DIExpression()), !dbg !6353
  %tobool89 = icmp eq i32 %not_ex_free.0, 0, !dbg !6378
  br i1 %tobool89, label %if.else103, label %land.lhs.true90, !dbg !6379

land.lhs.true90:                                  ; preds = %if.then88
  %31 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6380
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %31, i64 0, i32 12, !dbg !6381
  %bf.load91 = load i8, i8* %generate_spec_deps, align 8, !dbg !6381
  %bf.clear92 = and i8 %bf.load91, 4, !dbg !6381
  %tobool94 = icmp eq i8 %bf.clear92, 0, !dbg !6380
  br i1 %tobool94, label %if.else103, label %land.lhs.true95, !dbg !6382

land.lhs.true95:                                  ; preds = %land.lhs.true90
  %32 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6383
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %32, i64 0, i32 0, !dbg !6384
  %33 = load i32, i32* %mask, align 8, !dbg !6384
  %and = and i32 %33, 258048, !dbg !6385
  %tobool96 = icmp eq i32 %and, 0, !dbg !6385
  br i1 %tobool96, label %if.else103, label %if.then97, !dbg !6386

if.then97:                                        ; preds = %land.lhs.true95
  %call98 = tail call i32 @set_dep_weak(i32 %ts, i32 258048, i32 62) #6, !dbg !6387
  call void @llvm.dbg.value(metadata i32 %call98, metadata !6343, metadata !DIExpression()), !dbg !6388
  %call99 = tail call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %next, i32 %call98) #6, !dbg !6389
  %tobool100 = icmp eq i8 %call99, 0, !dbg !6389
  %and102 = and i32 %ts, -150994944, !dbg !6391
  %or = or i32 %and102, 134217728, !dbg !6391
  %ts.addr.0 = select i1 %tobool100, i32 %or, i32 %call98, !dbg !6391
  br label %if.end108, !dbg !6391

if.else103:                                       ; preds = %land.lhs.true95, %land.lhs.true90, %if.then88
  %and104 = and i32 %ts, -150994944, !dbg !6392
  %or105 = or i32 %and104, 134217728, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %or105, metadata !6339, metadata !DIExpression()), !dbg !6348
  br label %if.end108

if.end108:                                        ; preds = %lor.lhs.false24, %entry, %lor.lhs.false77, %if.then97, %if.else103
  %ts.addr.3 = phi i32 [ %ts, %entry ], [ %ts, %lor.lhs.false77 ], [ %ts, %lor.lhs.false24 ], [ %or105, %if.else103 ], [ %ts.addr.0, %if.then97 ]
  call void @llvm.dbg.value(metadata i32 %ts.addr.3, metadata !6339, metadata !DIExpression()), !dbg !6348
  ret i32 %ts.addr.3, !dbg !6394
}

; Function Attrs: nounwind uwtable
define internal i32 @rgn_rank(%struct.rtx_def* %insn1, %struct.rtx_def* %insn2) #5 !dbg !6395 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn1, metadata !6397, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn2, metadata !6398, metadata !DIExpression()), !dbg !6403
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6404
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn1, i64 0, i32 1, i32 0, i32 1, !dbg !6404
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6404
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6404
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6404
  %2 = load i32, i32* %index, align 8, !dbg !6404
  %idxprom = sext i32 %2 to i64, !dbg !6404
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6404
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6404
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn2, i64 0, i32 1, i32 0, i32 1, !dbg !6405
  %rt_bb5 = bitcast %struct.object_block** %arrayidx4 to %struct.basic_block_def**, !dbg !6405
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb5, align 8, !dbg !6405
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !6405
  %5 = load i32, i32* %index6, align 8, !dbg !6405
  %idxprom8 = sext i32 %5 to i64, !dbg !6405
  %arrayidx9 = getelementptr inbounds i32, i32* %0, i64 %idxprom8, !dbg !6405
  %6 = load i32, i32* %arrayidx9, align 4, !dbg !6405
  %cmp = icmp eq i32 %3, %6, !dbg !6406
  br i1 %cmp, label %if.end100, label %if.then, !dbg !6407

if.then:                                          ; preds = %entry
  %7 = load i32, i32* @target_bb, align 4, !dbg !6408
  %cmp18 = icmp eq i32 %6, %7, !dbg !6410
  br i1 %cmp18, label %land.lhs.true, label %if.end, !dbg !6411

land.lhs.true:                                    ; preds = %if.then
  br i1 false, label %land.lhs.true.if.end_crit_edge, label %cleanup, !dbg !6412

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  br label %if.end, !dbg !6412

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %if.then
  %cmp37 = icmp eq i32 %3, %7, !dbg !6413
  br i1 %cmp37, label %land.lhs.true38, label %if.end49, !dbg !6415

land.lhs.true38:                                  ; preds = %if.end
  br i1 %cmp18, label %if.end49, label %cleanup, !dbg !6416

if.end49:                                         ; preds = %land.lhs.true38, %if.end
  %8 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6417
  %idxprom58 = sext i32 %3 to i64, !dbg !6417
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idxprom58, i32 1, !dbg !6417
  %9 = load i8, i8* %is_speculative, align 1, !dbg !6417
  %conv = sext i8 %9 to i32, !dbg !6417
  %idxprom68 = sext i32 %6 to i64, !dbg !6418
  %is_speculative70 = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idxprom68, i32 1, !dbg !6418
  %10 = load i8, i8* %is_speculative70, align 1, !dbg !6418
  %conv71 = sext i8 %10 to i32, !dbg !6418
  %sub = sub nsw i32 %conv, %conv71, !dbg !6419
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6399, metadata !DIExpression()), !dbg !6420
  %tobool = icmp eq i32 %sub, 0, !dbg !6421
  br i1 %tobool, label %if.end73, label %cleanup, !dbg !6423

if.end73:                                         ; preds = %if.end49
  %src_prob = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idxprom68, i32 2, !dbg !6424
  %11 = load i32, i32* %src_prob, align 4, !dbg !6424
  %src_prob94 = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idxprom58, i32 2, !dbg !6425
  %12 = load i32, i32* %src_prob94, align 4, !dbg !6425
  %sub95 = sub nsw i32 %11, %12, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %sub95, metadata !6402, metadata !DIExpression()), !dbg !6420
  %tobool96 = icmp eq i32 %sub95, 0, !dbg !6427
  br label %cleanup, !dbg !6429

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true38, %if.end49, %if.end73
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true ], [ false, %land.lhs.true38 ], [ false, %if.end49 ], [ %tobool96, %if.end73 ]
  %retval.0 = phi i32 [ 1, %land.lhs.true ], [ -1, %land.lhs.true38 ], [ %sub, %if.end49 ], [ %sub95, %if.end73 ]
  br i1 %cleanup.dest.slot.0, label %if.end100, label %return

if.end100:                                        ; preds = %entry, %cleanup
  br label %return, !dbg !6430

return:                                           ; preds = %cleanup, %if.end100
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ 0, %if.end100 ], !dbg !6403
  ret i32 %retval.1, !dbg !6431
}

; Function Attrs: nounwind uwtable
define internal i8* @rgn_print_insn(%struct.rtx_def* %insn, i32 %aligned) #5 !dbg !2236 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2238, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 %aligned, metadata !2239, metadata !DIExpression()), !dbg !6432
  %tobool = icmp eq i32 %aligned, 0, !dbg !6433
  br i1 %tobool, label %if.else, label %if.then, !dbg !6435

if.then:                                          ; preds = %entry
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6436
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6436
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6436
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6436
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6436
  %2 = load i32, i32* %index, align 8, !dbg !6436
  %idxprom = sext i32 %2 to i64, !dbg !6436
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6436
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6436
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6437
  %rt_int = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !6437
  %4 = load i32, i32* %rt_int, align 8, !dbg !6437
  %call = tail call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i32 %3, i32 %4) #6, !dbg !6438
  br label %if.end34, !dbg !6438

if.else:                                          ; preds = %entry
  %5 = load i32, i32* @current_nr_blocks, align 4, !dbg !6439
  %cmp = icmp sgt i32 %5, 1, !dbg !6442
  br i1 %cmp, label %land.lhs.true, label %if.else28, !dbg !6443

land.lhs.true:                                    ; preds = %if.else
  %6 = load i32*, i32** @block_to_bb, align 8, !dbg !6444
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6444
  %rt_bb8 = bitcast %struct.object_block** %arrayidx7 to %struct.basic_block_def**, !dbg !6444
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb8, align 8, !dbg !6444
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !6444
  %8 = load i32, i32* %index9, align 8, !dbg !6444
  %idxprom11 = sext i32 %8 to i64, !dbg !6444
  %arrayidx12 = getelementptr inbounds i32, i32* %6, i64 %idxprom11, !dbg !6444
  %9 = load i32, i32* %arrayidx12, align 4, !dbg !6444
  %10 = load i32, i32* @target_bb, align 4, !dbg !6445
  %cmp13 = icmp eq i32 %9, %10, !dbg !6446
  br i1 %cmp13, label %if.else28, label %if.then14, !dbg !6447

if.then14:                                        ; preds = %land.lhs.true
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6448
  %rt_int18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !6448
  %11 = load i32, i32* %rt_int18, align 8, !dbg !6448
  %call27 = tail call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i32 %11, i32 %9) #6, !dbg !6449
  br label %if.end34, !dbg !6449

if.else28:                                        ; preds = %land.lhs.true, %if.else
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6450
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !6450
  %12 = load i32, i32* %rt_int32, align 8, !dbg !6450
  %call33 = tail call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i32 %12) #6, !dbg !6451
  br label %if.end34

if.end34:                                         ; preds = %if.then14, %if.else28, %if.then
  ret i8* getelementptr inbounds ([80 x i8], [80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), !dbg !6452
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rgn_insn_finishes_block_p(%struct.rtx_def* %insn) #5 !dbg !6453 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6455, metadata !DIExpression()), !dbg !6456
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6457
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6457
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6457
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6457
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6457
  %2 = load i32, i32* %index, align 8, !dbg !6457
  %idxprom = sext i32 %2 to i64, !dbg !6457
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6457
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6457
  %4 = load i32, i32* @target_bb, align 4, !dbg !6459
  %cmp = icmp eq i32 %3, %4, !dbg !6460
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6461

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @sched_target_n_insns, align 4, !dbg !6462
  %add2 = add nsw i32 %5, 1, !dbg !6463
  %6 = load i32, i32* @target_n_insns, align 4, !dbg !6464
  %cmp3 = icmp eq i32 %add2, %6, !dbg !6465
  br i1 %cmp3, label %return, label %if.end, !dbg !6466

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %return, !dbg !6467

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true ], !dbg !6456
  ret i8 %retval.0, !dbg !6468
}

; Function Attrs: nounwind uwtable
define internal void @rgn_add_remove_insn(%struct.rtx_def* %insn, i32 %remove_p) #5 !dbg !6469 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6471, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.value(metadata i32 %remove_p, metadata !6472, metadata !DIExpression()), !dbg !6473
  %tobool = icmp eq i32 %remove_p, 0, !dbg !6474
  %0 = load i32, i32* @rgn_n_insns, align 4, !dbg !6476
  br i1 %tobool, label %if.then, label %if.else, !dbg !6477

if.then:                                          ; preds = %entry
  %inc = add nsw i32 %0, 1, !dbg !6478
  br label %if.end, !dbg !6479

if.else:                                          ; preds = %entry
  %dec = add nsw i32 %0, -1, !dbg !6480
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %inc, %if.then ], [ %dec, %if.else ], !dbg !6476
  store i32 %storemerge, i32* @rgn_n_insns, align 4, !dbg !6476
  %1 = load i32*, i32** @block_to_bb, align 8, !dbg !6481
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6481
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6481
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6481
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !6481
  %3 = load i32, i32* %index, align 8, !dbg !6481
  %idxprom = sext i32 %3 to i64, !dbg !6481
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !6481
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !6481
  %5 = load i32, i32* @target_bb, align 4, !dbg !6483
  %cmp = icmp eq i32 %4, %5, !dbg !6484
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !6485

if.then2:                                         ; preds = %if.end
  %6 = load i32, i32* @target_n_insns, align 4, !dbg !6486
  br i1 %tobool, label %if.then4, label %if.else6, !dbg !6489

if.then4:                                         ; preds = %if.then2
  %inc5 = add nsw i32 %6, 1, !dbg !6490
  store i32 %inc5, i32* @target_n_insns, align 4, !dbg !6490
  br label %if.end9, !dbg !6491

if.else6:                                         ; preds = %if.then2
  %dec7 = add nsw i32 %6, -1, !dbg !6492
  store i32 %dec7, i32* @target_n_insns, align 4, !dbg !6492
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.else6, %if.end
  ret void, !dbg !6493
}

; Function Attrs: nounwind uwtable
define internal void @begin_schedule_ready(%struct.rtx_def* %insn, %struct.rtx_def* %last) #5 !dbg !6494 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6496, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !6497, metadata !DIExpression()), !dbg !6498
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6499
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6499
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6499
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6499
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6499
  %2 = load i32, i32* %index, align 8, !dbg !6499
  %idxprom = sext i32 %2 to i64, !dbg !6499
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6499
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6499
  %4 = load i32, i32* @target_bb, align 4, !dbg !6501
  %cmp = icmp eq i32 %3, %4, !dbg !6502
  br i1 %cmp, label %if.else, label %if.then, !dbg !6503

if.then:                                          ; preds = %entry
  %5 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6504
  %idxprom10 = sext i32 %3 to i64, !dbg !6504
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %5, i64 %idxprom10, i32 1, !dbg !6504
  %6 = load i8, i8* %is_speculative, align 1, !dbg !6504
  %tobool = icmp eq i8 %6, 0, !dbg !6504
  br i1 %tobool, label %if.end56, label %if.then12, !dbg !6507

if.then12:                                        ; preds = %if.then
  %call = tail call fastcc i32 @check_live(%struct.rtx_def* %insn, i32 %3) #8, !dbg !6508
  %tobool21 = icmp eq i32 %call, 0, !dbg !6508
  br i1 %tobool21, label %cond.true, label %cond.end, !dbg !6508

cond.true:                                        ; preds = %if.then12
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 2177, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6508
  br label %cond.end, !dbg !6508

cond.end:                                         ; preds = %if.then12, %cond.true
  %7 = load i32*, i32** @block_to_bb, align 8, !dbg !6510
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6510
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 9, !dbg !6510
  %9 = load i32, i32* %index26, align 8, !dbg !6510
  %idxprom28 = sext i32 %9 to i64, !dbg !6510
  %arrayidx29 = getelementptr inbounds i32, i32* %7, i64 %idxprom28, !dbg !6510
  %10 = load i32, i32* %arrayidx29, align 4, !dbg !6510
  tail call fastcc void @update_live(%struct.rtx_def* %insn, i32 %10) #8, !dbg !6511
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6512
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !6512
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6512
  %rt_int = bitcast %union.rtunion_def* %arrayidx37 to i32*, !dbg !6512
  %12 = load i32, i32* %rt_int, align 8, !dbg !6512
  %call38 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %12) #8, !dbg !6512
  %is_load_insn = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call38, i64 0, i32 6, !dbg !6512
  %bf.load = load i8, i8* %is_load_insn, align 2, !dbg !6512
  %bf.clear = and i8 %bf.load, 2, !dbg !6512
  %tobool39 = icmp eq i8 %bf.clear, 0, !dbg !6512
  br i1 %tobool39, label %lor.lhs.false, label %if.then55, !dbg !6514

lor.lhs.false:                                    ; preds = %cond.end
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6515
  %base42 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i64 0, i32 0, !dbg !6515
  %14 = load i32, i32* %rt_int, align 8, !dbg !6515
  %call50 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base42, i32 %14) #8, !dbg !6515
  %fed_by_spec_load = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call50, i64 0, i32 6, !dbg !6515
  %bf.load51 = load i8, i8* %fed_by_spec_load, align 2, !dbg !6515
  %bf.clear52 = and i8 %bf.load51, 1, !dbg !6515
  %tobool54 = icmp eq i8 %bf.clear52, 0, !dbg !6515
  br i1 %tobool54, label %if.end, label %if.then55, !dbg !6516

if.then55:                                        ; preds = %lor.lhs.false, %cond.end
  tail call fastcc void @set_spec_fed(%struct.rtx_def* %insn) #8, !dbg !6517
  br label %if.end, !dbg !6517

if.end:                                           ; preds = %lor.lhs.false, %if.then55
  %15 = load i32, i32* @nr_spec, align 4, !dbg !6518
  %inc = add nsw i32 %15, 1, !dbg !6518
  store i32 %inc, i32* @nr_spec, align 4, !dbg !6518
  br label %if.end56, !dbg !6519

if.end56:                                         ; preds = %if.then, %if.end
  %16 = load i32, i32* @nr_inter, align 4, !dbg !6520
  %inc57 = add nsw i32 %16, 1, !dbg !6520
  store i32 %inc57, i32* @nr_inter, align 4, !dbg !6520
  br label %if.end59, !dbg !6521

if.else:                                          ; preds = %entry
  %17 = load i32, i32* @sched_target_n_insns, align 4, !dbg !6522
  %inc58 = add nsw i32 %17, 1, !dbg !6522
  store i32 %inc58, i32* @sched_target_n_insns, align 4, !dbg !6522
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.end56
  %18 = load i32, i32* @sched_n_insns, align 4, !dbg !6524
  %inc60 = add nsw i32 %18, 1, !dbg !6524
  store i32 %inc60, i32* @sched_n_insns, align 4, !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @advance_target_bb(%struct.basic_block_def* %bb, %struct.rtx_def* %insn) #5 !dbg !6526 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6528, metadata !DIExpression()), !dbg !6530
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6529, metadata !DIExpression()), !dbg !6530
  %tobool = icmp eq %struct.rtx_def* %insn, null, !dbg !6531
  br i1 %tobool, label %if.end, label %return, !dbg !6533

if.end:                                           ; preds = %entry
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6534
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6534
  %1 = load i32, i32* %index, align 8, !dbg !6534
  %idxprom = sext i32 %1 to i64, !dbg !6534
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6534
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6534
  %3 = load i32, i32* @target_bb, align 4, !dbg !6534
  %cmp = icmp eq i32 %2, %3, !dbg !6534
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6534

land.lhs.true:                                    ; preds = %if.end
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !6534
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6534
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !6534
  %5 = load i32, i32* %index1, align 8, !dbg !6534
  %idxprom2 = sext i32 %5 to i64, !dbg !6534
  %arrayidx3 = getelementptr inbounds i32, i32* %0, i64 %idxprom2, !dbg !6534
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !6534
  %cmp4 = icmp eq i32 %6, %2, !dbg !6534
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !6534

cond.true:                                        ; preds = %land.lhs.true, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 3487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6534
  %next_bb5.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !6530
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb5.phi.trans.insert, align 8, !dbg !6535
  br label %cond.end, !dbg !6534

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %7 = phi %struct.basic_block_def* [ %4, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !6535
  br label %return, !dbg !6536

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi %struct.basic_block_def* [ %7, %cond.end ], [ null, %entry ], !dbg !6530
  ret %struct.basic_block_def* %retval.0, !dbg !6537
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_trg_info(i32 %trg) unnamed_addr #5 !dbg !6538 {
entry:
  %el = alloca %struct.edgelst, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %trg, metadata !6540, metadata !DIExpression()), !dbg !6563
  %0 = bitcast %struct.edgelst* %el to i8*, !dbg !6564
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6564
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false), !dbg !6565
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6566
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6566
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !6567
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6567
  %3 = load i32, i32* @current_nr_blocks, align 4, !dbg !6568
  %conv = sext i32 %3 to i64, !dbg !6568
  %mul = mul nsw i64 %conv, 40, !dbg !6568
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !6568
  store i8* %call, i8** bitcast (%struct.candidate** @candidate_table to i8**), align 8, !dbg !6569
  store i32 0, i32* @bblst_last, align 4, !dbg !6570
  %4 = load i32, i32* @current_nr_blocks, align 4, !dbg !6571
  %5 = load i32, i32* @target_bb, align 4, !dbg !6572
  %sub = sub nsw i32 %4, %5, !dbg !6573
  %6 = load i32, i32* @rgn_nr_edges, align 4, !dbg !6574
  %mul1 = mul nsw i32 %sub, %6, !dbg !6575
  store i32 %mul1, i32* @bblst_size, align 4, !dbg !6576
  %conv2 = sext i32 %mul1 to i64, !dbg !6577
  %mul3 = shl nsw i64 %conv2, 3, !dbg !6577
  %call4 = tail call i8* @xmalloc(i64 %mul3) #6, !dbg !6577
  store i8* %call4, i8** bitcast (%struct.basic_block_def*** @bblst_table to i8**), align 8, !dbg !6578
  store i32 0, i32* @edgelst_last, align 4, !dbg !6579
  %7 = load i32, i32* @rgn_nr_edges, align 4, !dbg !6580
  %conv5 = sext i32 %7 to i64, !dbg !6580
  %mul6 = shl nsw i64 %conv5, 3, !dbg !6580
  %call7 = tail call i8* @xmalloc(i64 %mul6) #6, !dbg !6580
  store i8* %call7, i8** bitcast (%struct.edge_def*** @edgelst_table to i8**), align 8, !dbg !6581
  %8 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6582
  %idx.ext = sext i32 %trg to i64, !dbg !6583
  call void @llvm.dbg.value(metadata %struct.candidate* undef, metadata !6541, metadata !DIExpression()), !dbg !6563
  %is_valid = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idx.ext, i32 0, !dbg !6584
  store i8 1, i8* %is_valid, align 8, !dbg !6585
  %is_speculative = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idx.ext, i32 1, !dbg !6586
  store i8 0, i8* %is_speculative, align 1, !dbg !6587
  %src_prob = getelementptr inbounds %struct.candidate, %struct.candidate* %8, i64 %idx.ext, i32 2, !dbg !6588
  store i32 10000, i32* %src_prob, align 4, !dbg !6589
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6590
  %cfg = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !6590
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6590
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !6590
  %11 = load i32, i32* %x_last_basic_block, align 8, !dbg !6590
  %call9 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %11) #6, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call9, metadata !6553, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %trg, metadata !6548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  %div = lshr i32 %trg, 6, !dbg !6592
  %idxprom13 = zext i32 %div to i64, !dbg !6592
  %rem = and i32 %trg, 63, !dbg !6592
  %sh_prom = zext i32 %rem to i64, !dbg !6592
  %nr_members = getelementptr inbounds %struct.edgelst, %struct.edgelst* %el, i64 0, i32 1, !dbg !6593
  %first_member59 = getelementptr inbounds %struct.edgelst, %struct.edgelst* %el, i64 0, i32 0, !dbg !6596
  %12 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6601
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6601
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6601
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6606
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6606
  %17 = sext i32 %trg to i64, !dbg !6608
  br label %for.cond, !dbg !6608

for.cond:                                         ; preds = %for.inc142, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc142 ], [ %17, %entry ]
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1, !dbg !6609
  call void @llvm.dbg.value(metadata i32 undef, metadata !6548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  %18 = load i32, i32* @current_nr_blocks, align 4, !dbg !6610
  %19 = sext i32 %18 to i64, !dbg !6611
  %cmp = icmp slt i64 %indvars.iv.next6, %19, !dbg !6611
  br i1 %cmp, label %for.body, label %for.end144, !dbg !6612

for.body:                                         ; preds = %for.cond
  %20 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !6613
  call void @llvm.dbg.value(metadata %struct.candidate* undef, metadata !6541, metadata !DIExpression()), !dbg !6563
  %21 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @dom, align 8, !dbg !6614
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %21, i64 %indvars.iv.next6, !dbg !6614
  %22 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !6614
  %arrayidx14 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %22, i64 0, i32 3, i64 %idxprom13, !dbg !6614
  %23 = load i64, i64* %arrayidx14, align 8, !dbg !6614
  %shr = lshr i64 %23, %sh_prom, !dbg !6614
  %24 = trunc i64 %shr to i8, !dbg !6614
  %conv15 = and i8 %24, 1, !dbg !6614
  %is_valid16 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 0, !dbg !6615
  store i8 %conv15, i8* %is_valid16, align 8, !dbg !6616
  %tobool = icmp eq i8 %conv15, 0, !dbg !6617
  br i1 %tobool, label %if.end, label %if.then, !dbg !6618

if.then:                                          ; preds = %for.body
  %25 = load i32*, i32** @prob, align 8, !dbg !6619
  %arrayidx19 = getelementptr inbounds i32, i32* %25, i64 %idx.ext, !dbg !6619
  %26 = load i32, i32* %arrayidx19, align 4, !dbg !6619
  call void @llvm.dbg.value(metadata i32 %26, metadata !6556, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 undef, metadata !6562, metadata !DIExpression()), !dbg !6620
  %tobool22 = icmp eq i32 %26, 0, !dbg !6621
  br i1 %tobool22, label %cond.end, label %cond.true, !dbg !6621

cond.true:                                        ; preds = %if.then
  %arrayidx21 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv.next6, !dbg !6622
  %27 = load i32, i32* %arrayidx21, align 4, !dbg !6622
  call void @llvm.dbg.value(metadata i32 %27, metadata !6562, metadata !DIExpression()), !dbg !6620
  %mul23 = mul nsw i32 %27, 10000, !dbg !6623
  %div24 = sdiv i32 %mul23, %26, !dbg !6624
  br label %cond.end, !dbg !6621

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi i32 [ %div24, %cond.true ], [ 0, %if.then ], !dbg !6621
  %src_prob25 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 2, !dbg !6625
  store i32 %cond, i32* %src_prob25, align 4, !dbg !6626
  %28 = load i32, i32* @min_spec_prob, align 4, !dbg !6627
  %cmp27 = icmp sge i32 %cond, %28, !dbg !6628
  %conv29 = zext i1 %cmp27 to i8, !dbg !6629
  store i8 %conv29, i8* %is_valid16, align 8, !dbg !6630
  br label %if.end, !dbg !6631

if.end:                                           ; preds = %for.body, %cond.end
  %29 = phi i8 [ 0, %for.body ], [ %conv29, %cond.end ], !dbg !6632
  %tobool32 = icmp eq i8 %29, 0, !dbg !6633
  br i1 %tobool32, label %if.end45, label %if.then33, !dbg !6634

if.then33:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.edgelst* %el, metadata !6542, metadata !DIExpression(DW_OP_deref)), !dbg !6563
  %30 = trunc i64 %indvars.iv.next6 to i32, !dbg !6635
  call fastcc void @split_edges(i32 %30, i32 %trg, %struct.edgelst* nonnull %el) #8, !dbg !6635
  %31 = load i32, i32* %nr_members, align 8, !dbg !6636
  %tobool34 = icmp ne i32 %31, 0, !dbg !6637
  %conv36 = zext i1 %tobool34 to i8, !dbg !6637
  %is_speculative37 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 1, !dbg !6638
  store i8 %conv36, i8* %is_speculative37, align 1, !dbg !6639
  %tobool40 = xor i1 %tobool34, true, !dbg !6640
  %32 = load i32, i32* @flag_schedule_speculative, align 4, !dbg !6642
  %tobool41 = icmp ne i32 %32, 0, !dbg !6642
  %or.cond = or i1 %tobool41, %tobool40, !dbg !6643
  br i1 %or.cond, label %if.then33.if.end45_crit_edge, label %if.then42, !dbg !6643

if.then33.if.end45_crit_edge:                     ; preds = %if.then33
  %.pre = load i8, i8* %is_valid16, align 8, !dbg !6644
  br label %if.end45, !dbg !6643

if.then42:                                        ; preds = %if.then33
  store i8 0, i8* %is_valid16, align 8, !dbg !6645
  br label %if.end45, !dbg !6646

if.end45:                                         ; preds = %if.then33.if.end45_crit_edge, %if.end, %if.then42
  %33 = phi i8 [ %.pre, %if.then33.if.end45_crit_edge ], [ 0, %if.end ], [ 0, %if.then42 ], !dbg !6644
  %tobool47 = icmp eq i8 %33, 0, !dbg !6647
  br i1 %tobool47, label %if.else, label %if.then48, !dbg !6648

if.then48:                                        ; preds = %if.end45
  %34 = load %struct.basic_block_def**, %struct.basic_block_def*** @bblst_table, align 8, !dbg !6649
  %35 = load i32, i32* @bblst_last, align 4, !dbg !6650
  %idxprom49 = sext i32 %35 to i64, !dbg !6649
  %arrayidx50 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %34, i64 %idxprom49, !dbg !6649
  %first_member = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 3, i32 0, !dbg !6651
  store %struct.basic_block_def** %arrayidx50, %struct.basic_block_def*** %first_member, align 8, !dbg !6652
  %36 = load i32, i32* %nr_members, align 8, !dbg !6653
  %nr_members53 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 3, i32 1, !dbg !6654
  store i32 %36, i32* %nr_members53, align 8, !dbg !6655
  call void @llvm.dbg.value(metadata i32 0, metadata !6549, metadata !DIExpression()), !dbg !6563
  br label %for.cond54, !dbg !6656

for.cond54:                                       ; preds = %for.body58, %if.then48
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body58 ], [ 0, %if.then48 ], !dbg !6657
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6549, metadata !DIExpression()), !dbg !6563
  %37 = load i32, i32* %nr_members, align 8, !dbg !6658
  %38 = sext i32 %37 to i64, !dbg !6659
  %cmp56 = icmp slt i64 %indvars.iv, %38, !dbg !6659
  br i1 %cmp56, label %for.body58, label %for.end, !dbg !6660

for.body58:                                       ; preds = %for.cond54
  %39 = load %struct.edge_def**, %struct.edge_def*** %first_member59, align 8, !dbg !6661
  %arrayidx61 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %39, i64 %indvars.iv, !dbg !6662
  %40 = load %struct.edge_def*, %struct.edge_def** %arrayidx61, align 8, !dbg !6662
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %40, i64 0, i32 1, !dbg !6663
  %41 = bitcast %struct.basic_block_def** %dest to i64*, !dbg !6663
  %42 = load i64, i64* %41, align 8, !dbg !6663
  %43 = load %struct.basic_block_def**, %struct.basic_block_def*** @bblst_table, align 8, !dbg !6664
  %44 = load i32, i32* @bblst_last, align 4, !dbg !6665
  %idxprom62 = sext i32 %44 to i64, !dbg !6664
  %arrayidx63 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %43, i64 %idxprom62, !dbg !6664
  %45 = bitcast %struct.basic_block_def** %arrayidx63 to i64*, !dbg !6666
  store i64 %42, i64* %45, align 8, !dbg !6666
  %inc = add nsw i32 %44, 1, !dbg !6667
  store i32 %inc, i32* @bblst_last, align 4, !dbg !6667
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6668
  call void @llvm.dbg.value(metadata i32 undef, metadata !6549, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  br label %for.cond54, !dbg !6669, !llvm.loop !6670

for.end:                                          ; preds = %for.cond54
  %46 = load %struct.basic_block_def**, %struct.basic_block_def*** @bblst_table, align 8, !dbg !6672
  %47 = load i32, i32* @bblst_last, align 4, !dbg !6673
  %idxprom65 = sext i32 %47 to i64, !dbg !6672
  %arrayidx66 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %46, i64 %idxprom65, !dbg !6672
  %first_member67 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 4, i32 0, !dbg !6674
  store %struct.basic_block_def** %arrayidx66, %struct.basic_block_def*** %first_member67, align 8, !dbg !6675
  call void @llvm.dbg.value(metadata i32 0, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call9) #6, !dbg !6676
  call void @llvm.dbg.value(metadata i32 0, metadata !6549, metadata !DIExpression()), !dbg !6563
  br label %for.cond68, !dbg !6677

for.cond68:                                       ; preds = %for.inc124, %for.end
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc124 ], [ 0, %for.end ], !dbg !6678
  %update_idx.0 = phi i32 [ %update_idx.1.lcssa, %for.inc124 ], [ 0, %for.end ], !dbg !6679
  call void @llvm.dbg.value(metadata i32 %update_idx.0, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !6549, metadata !DIExpression()), !dbg !6563
  %48 = load i32, i32* %nr_members, align 8, !dbg !6680
  %49 = sext i32 %48 to i64, !dbg !6681
  %cmp70 = icmp slt i64 %indvars.iv3, %49, !dbg !6681
  br i1 %cmp70, label %for.body72, label %for.end126, !dbg !6682

for.body72:                                       ; preds = %for.cond68
  %50 = load %struct.edge_def**, %struct.edge_def*** %first_member59, align 8, !dbg !6683
  %arrayidx75 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %50, i64 %indvars.iv3, !dbg !6684
  %51 = load %struct.edge_def*, %struct.edge_def** %arrayidx75, align 8, !dbg !6684
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %51, i64 0, i32 0, !dbg !6685
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6685
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %52, metadata !6552, metadata !DIExpression()), !dbg !6563
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7, !dbg !6686
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i64 0, i32 1, !dbg !6686
  %call76 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !6686
  %53 = extractvalue { i32, %struct.VEC_edge_gc** } %call76, 0, !dbg !6686
  store i32 %53, i32* %13, align 8, !dbg !6686
  %54 = extractvalue { i32, %struct.VEC_edge_gc** } %call76, 1, !dbg !6686
  store %struct.VEC_edge_gc** %54, %struct.VEC_edge_gc*** %14, align 8, !dbg !6686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %12, i64 16, i1 false), !dbg !6686
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7, !dbg !6686
  br label %for.cond77, !dbg !6686

for.cond77:                                       ; preds = %for.inc122, %for.body72
  %update_idx.1 = phi i32 [ %update_idx.0, %for.body72 ], [ %update_idx.3, %for.inc122 ], !dbg !6679
  call void @llvm.dbg.value(metadata i32 %update_idx.1, metadata !6551, metadata !DIExpression()), !dbg !6563
  %55 = load i32, i32* %15, align 8, !dbg !6687
  %56 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %16, align 8, !dbg !6687
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6555, metadata !DIExpression(DW_OP_deref)), !dbg !6563
  %call78 = call fastcc zeroext i8 @ei_cond(i32 %55, %struct.VEC_edge_gc** %56, %struct.edge_def** nonnull %e) #8, !dbg !6687
  %tobool79 = icmp eq i8 %call78, 0, !dbg !6686
  br i1 %tobool79, label %for.inc124, label %for.body80, !dbg !6686

for.body80:                                       ; preds = %for.cond77
  %57 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6688
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !6555, metadata !DIExpression()), !dbg !6563
  %dest82 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %57, i64 0, i32 1, !dbg !6688
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %dest82, align 8, !dbg !6688
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i64 0, i32 9, !dbg !6688
  %59 = load i32, i32* %index, align 8, !dbg !6688
  %div83 = lshr i32 %59, 6, !dbg !6688
  %idxprom84 = zext i32 %div83 to i64, !dbg !6688
  %arrayidx85 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call9, i64 0, i32 3, i64 %idxprom84, !dbg !6688
  %60 = load i64, i64* %arrayidx85, align 8, !dbg !6688
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !6555, metadata !DIExpression()), !dbg !6563
  %rem88 = and i32 %59, 63, !dbg !6688
  %sh_prom89 = zext i32 %rem88 to i64, !dbg !6688
  %61 = shl i64 1, %sh_prom89, !dbg !6688
  %62 = and i64 %60, %61, !dbg !6688
  %tobool92 = icmp eq i64 %62, 0, !dbg !6688
  %63 = ptrtoint %struct.basic_block_def* %58 to i64, !dbg !6691
  br i1 %tobool92, label %for.cond94.preheader, label %for.inc122, !dbg !6691

for.cond94.preheader:                             ; preds = %for.body80
  %64 = load i32, i32* %nr_members, align 8, !dbg !6692
  %65 = load %struct.edge_def**, %struct.edge_def*** %first_member59, align 8, !dbg !6696
  %66 = sext i32 %64 to i64, !dbg !6698
  br label %for.cond94, !dbg !6698

for.cond94:                                       ; preds = %for.cond94.preheader, %for.inc106
  %indvars.iv1 = phi i64 [ 0, %for.cond94.preheader ], [ %indvars.iv.next2, %for.inc106 ], !dbg !6699
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6550, metadata !DIExpression()), !dbg !6563
  %cmp96 = icmp slt i64 %indvars.iv1, %66, !dbg !6700
  br i1 %cmp96, label %for.body98, label %for.end108, !dbg !6698

for.body98:                                       ; preds = %for.cond94
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !6555, metadata !DIExpression()), !dbg !6563
  %arrayidx101 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %65, i64 %indvars.iv1, !dbg !6701
  %67 = load %struct.edge_def*, %struct.edge_def** %arrayidx101, align 8, !dbg !6701
  %cmp102 = icmp eq %struct.edge_def* %57, %67, !dbg !6702
  br i1 %cmp102, label %for.end108, label %for.inc106, !dbg !6703

for.inc106:                                       ; preds = %for.body98
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !6704
  call void @llvm.dbg.value(metadata i32 undef, metadata !6550, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  br label %for.cond94, !dbg !6705, !llvm.loop !6706

for.end108:                                       ; preds = %for.body98, %for.cond94
  %cmp96.lcssa = phi i1 [ %cmp96, %for.body98 ], [ %cmp96, %for.cond94 ], !dbg !6700
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6550, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6550, metadata !DIExpression()), !dbg !6563
  br i1 %cmp96.lcssa, label %for.inc122, label %if.then112, !dbg !6708

if.then112:                                       ; preds = %for.end108
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !6555, metadata !DIExpression()), !dbg !6563
  %68 = load %struct.basic_block_def**, %struct.basic_block_def*** @bblst_table, align 8, !dbg !6709
  %69 = load i32, i32* @bblst_last, align 4, !dbg !6712
  %inc114 = add nsw i32 %69, 1, !dbg !6712
  store i32 %inc114, i32* @bblst_last, align 4, !dbg !6712
  %idxprom115 = sext i32 %69 to i64, !dbg !6709
  %arrayidx116 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %68, i64 %idxprom115, !dbg !6709
  %70 = bitcast %struct.basic_block_def** %arrayidx116 to i64*, !dbg !6713
  store i64 %63, i64* %70, align 8, !dbg !6713
  %71 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6714
  call void @llvm.dbg.value(metadata %struct.edge_def* %71, metadata !6555, metadata !DIExpression()), !dbg !6563
  %dest117 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %71, i64 0, i32 1, !dbg !6715
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %dest117, align 8, !dbg !6715
  %index118 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %72, i64 0, i32 9, !dbg !6716
  %73 = load i32, i32* %index118, align 8, !dbg !6716
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call9, i32 %73) #8, !dbg !6717
  %inc119 = add nsw i32 %update_idx.1, 1, !dbg !6718
  call void @llvm.dbg.value(metadata i32 %inc119, metadata !6551, metadata !DIExpression()), !dbg !6563
  br label %for.inc122, !dbg !6719

for.inc122:                                       ; preds = %for.end108, %for.body80, %if.then112
  %update_idx.3 = phi i32 [ %update_idx.1, %for.body80 ], [ %inc119, %if.then112 ], [ %update_idx.1, %for.end108 ], !dbg !6720
  call void @llvm.dbg.value(metadata i32 %update_idx.3, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6554, metadata !DIExpression(DW_OP_deref)), !dbg !6563
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6687
  br label %for.cond77, !dbg !6687, !llvm.loop !6721

for.inc124:                                       ; preds = %for.cond77
  %update_idx.1.lcssa = phi i32 [ %update_idx.1, %for.cond77 ], !dbg !6679
  call void @llvm.dbg.value(metadata i32 %update_idx.1.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %update_idx.1.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %update_idx.1.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !6723
  call void @llvm.dbg.value(metadata i32 undef, metadata !6549, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  br label %for.cond68, !dbg !6724, !llvm.loop !6725

for.end126:                                       ; preds = %for.cond68
  %update_idx.0.lcssa = phi i32 [ %update_idx.0, %for.cond68 ], !dbg !6679
  call void @llvm.dbg.value(metadata i32 %update_idx.0.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %update_idx.0.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %update_idx.0.lcssa, metadata !6551, metadata !DIExpression()), !dbg !6563
  %nr_members128 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 4, i32 1, !dbg !6727
  store i32 %update_idx.0.lcssa, i32* %nr_members128, align 8, !dbg !6728
  %74 = load i32, i32* @bblst_last, align 4, !dbg !6729
  %75 = load i32, i32* @bblst_size, align 4, !dbg !6729
  %cmp129 = icmp sgt i32 %74, %75, !dbg !6729
  br i1 %cmp129, label %cond.true131, label %for.inc142, !dbg !6729

cond.true131:                                     ; preds = %for.end126
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1572, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6729
  br label %for.inc142, !dbg !6729

if.else:                                          ; preds = %if.end45
  %nr_members136 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 4, i32 1, !dbg !6730
  store i32 0, i32* %nr_members136, align 8, !dbg !6732
  %nr_members138 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 3, i32 1, !dbg !6733
  store i32 0, i32* %nr_members138, align 8, !dbg !6734
  %is_speculative139 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 1, !dbg !6735
  store i8 0, i8* %is_speculative139, align 1, !dbg !6736
  %src_prob140 = getelementptr inbounds %struct.candidate, %struct.candidate* %20, i64 %indvars.iv.next6, i32 2, !dbg !6737
  store i32 0, i32* %src_prob140, align 4, !dbg !6738
  br label %for.inc142

for.inc142:                                       ; preds = %for.end126, %if.else, %cond.true131
  call void @llvm.dbg.value(metadata i32 undef, metadata !6548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6563
  br label %for.cond, !dbg !6739, !llvm.loop !6740

for.end144:                                       ; preds = %for.cond
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call9, i64 0, i32 0, !dbg !6742
  %76 = load i8*, i8** %popcount, align 8, !dbg !6742
  call void @free(i8* %76) #6, !dbg !6742
  %77 = bitcast %struct.simple_bitmap_def* %call9 to i8*, !dbg !6742
  call void @free(i8* %77) #6, !dbg !6742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6743
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6743
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6743
  ret void, !dbg !6743
}

declare dso_local i32 @try_ready(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc void @split_edges(i32 %bb_src, i32 %bb_trg, %struct.edgelst* %bl) unnamed_addr #5 !dbg !6744 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_src, metadata !6749, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %bb_trg, metadata !6750, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.edgelst* %bl, metadata !6751, metadata !DIExpression()), !dbg !6753
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !6754
  %idxprom = sext i32 %bb_src to i64, !dbg !6754
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %0, i64 %idxprom, !dbg !6754
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !6754
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 1, !dbg !6755
  %2 = load i32, i32* %n_bits, align 8, !dbg !6755
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !6756
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !6752, metadata !DIExpression()), !dbg !6753
  %3 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !6757
  %arrayidx2 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %3, i64 %idxprom, !dbg !6757
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx2, align 8, !dbg !6757
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %4) #6, !dbg !6758
  %5 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pot_split, align 8, !dbg !6759
  %idxprom3 = sext i32 %bb_trg to i64, !dbg !6759
  %arrayidx4 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %5, i64 %idxprom3, !dbg !6759
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx4, align 8, !dbg !6759
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %6) #6, !dbg !6760
  tail call fastcc void @extract_edgelst(%struct.simple_bitmap_def* %call, %struct.edgelst* %bl) #8, !dbg !6761
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !6762
  %7 = load i8*, i8** %popcount, align 8, !dbg !6762
  tail call void @free(i8* %7) #6, !dbg !6762
  %8 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !6762
  tail call void @free(i8* %8) #6, !dbg !6762
  ret void, !dbg !6763
}

declare dso_local void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @extract_edgelst(%struct.simple_bitmap_def* %set, %struct.edgelst* %el) unnamed_addr #5 !dbg !6764 {
entry:
  %i = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %set, metadata !6768, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.value(metadata %struct.edgelst* %el, metadata !6769, metadata !DIExpression()), !dbg !6782
  %0 = bitcast i32* %i to i8*, !dbg !6783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6783
  call void @llvm.dbg.value(metadata i32 0, metadata !6770, metadata !DIExpression()), !dbg !6782
  store i32 0, i32* %i, align 4, !dbg !6784
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !6785
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6785
  store i32 0, i32* @edgelst_last, align 4, !dbg !6786
  %2 = load i64, i64* bitcast (%struct.edge_def*** @edgelst_table to i64*), align 8, !dbg !6787
  %3 = bitcast %struct.edgelst* %el to i64*, !dbg !6788
  store i64 %2, i64* %3, align 8, !dbg !6788
  %nr_members = getelementptr inbounds %struct.edgelst, %struct.edgelst* %el, i64 0, i32 1, !dbg !6789
  store i32 0, i32* %nr_members, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !6771, metadata !DIExpression(DW_OP_deref)), !dbg !6782
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %set, i32 0) #8, !dbg !6791
  br label %for.cond, !dbg !6791

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6770, metadata !DIExpression(DW_OP_deref)), !dbg !6782
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !6771, metadata !DIExpression(DW_OP_deref)), !dbg !6782
  %call = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #8, !dbg !6793
  %tobool = icmp eq i8 %call, 0, !dbg !6791
  br i1 %tobool, label %for.end, label %for.body, !dbg !6791

for.body:                                         ; preds = %for.cond
  %4 = load %struct.edge_def**, %struct.edge_def*** @rgn_edges, align 8, !dbg !6795
  %5 = load i32, i32* %i, align 4, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %5, metadata !6770, metadata !DIExpression()), !dbg !6782
  %idxprom1 = zext i32 %5 to i64, !dbg !6795
  %arrayidx2 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %4, i64 %idxprom1, !dbg !6795
  %6 = bitcast %struct.edge_def** %arrayidx2 to i64*, !dbg !6795
  %7 = load i64, i64* %6, align 8, !dbg !6795
  %8 = load %struct.edge_def**, %struct.edge_def*** @edgelst_table, align 8, !dbg !6798
  %9 = load i32, i32* @edgelst_last, align 4, !dbg !6799
  %inc = add nsw i32 %9, 1, !dbg !6799
  store i32 %inc, i32* @edgelst_last, align 4, !dbg !6799
  %idxprom3 = sext i32 %9 to i64, !dbg !6798
  %arrayidx4 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %8, i64 %idxprom3, !dbg !6798
  %10 = bitcast %struct.edge_def** %arrayidx4 to i64*, !dbg !6800
  store i64 %7, i64* %10, align 8, !dbg !6800
  %11 = load i32, i32* %nr_members, align 8, !dbg !6801
  %inc6 = add nsw i32 %11, 1, !dbg !6801
  store i32 %inc6, i32* %nr_members, align 8, !dbg !6801
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !6771, metadata !DIExpression(DW_OP_deref)), !dbg !6782
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #8, !dbg !6793
  br label %for.cond, !dbg !6793, !llvm.loop !6802

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6804
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6804
  ret void, !dbg !6804
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* %i, %struct.simple_bitmap_def* %bmp, i32 %min) unnamed_addr #0 !dbg !6805 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6813, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %bmp, metadata !6814, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i32 0, metadata !6815, metadata !DIExpression()), !dbg !6816
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !6817
  store i32 0, i32* %word_num, align 4, !dbg !6818
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6819
  store i32 0, i32* %bit_num, align 8, !dbg !6820
  %size = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 2, !dbg !6821
  %0 = load i32, i32* %size, align 4, !dbg !6821
  %size1 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !6822
  store i32 %0, i32* %size1, align 8, !dbg !6823
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 3, i64 0, !dbg !6824
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !6825
  store i64* %arraydecay, i64** %ptr, align 8, !dbg !6826
  %cmp = icmp eq i32 %0, 0, !dbg !6827
  br i1 %cmp, label %if.then, label %if.else, !dbg !6829

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6830
  store i64 0, i64* %word, align 8, !dbg !6831
  br label %if.end, !dbg !6832

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %arraydecay, align 8, !dbg !6833
  %word7 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6834
  store i64 %1, i64* %word7, align 8, !dbg !6835
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* %i, i32* %n) unnamed_addr #0 !dbg !6837 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6841, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32* %n, metadata !6842, metadata !DIExpression()), !dbg !6843
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6844
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !6847
  %size = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !6849
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6847
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !6844
  %.pre = load i64, i64* %word, align 8, !dbg !6851
  br label %for.cond, !dbg !6852

for.cond:                                         ; preds = %if.end, %entry
  %0 = phi i64 [ %4, %if.end ], [ %.pre, %entry ], !dbg !6851
  %cmp = icmp eq i64 %0, 0, !dbg !6853
  br i1 %cmp, label %for.body, label %for.cond6.preheader, !dbg !6854

for.cond6.preheader:                              ; preds = %for.cond
  %.lcssa4 = phi i64 [ %0, %for.cond ], !dbg !6851
  %.pre1 = load i32, i32* %bit_num, align 8, !dbg !6843
  br label %for.cond6, !dbg !6855

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %word_num, align 4, !dbg !6857
  %inc = add i32 %1, 1, !dbg !6857
  store i32 %inc, i32* %word_num, align 4, !dbg !6857
  %2 = load i32, i32* %size, align 8, !dbg !6858
  %cmp2 = icmp ult i32 %inc, %2, !dbg !6859
  br i1 %cmp2, label %if.end, label %return.loopexit, !dbg !6860

if.end:                                           ; preds = %for.body
  %mul = shl i32 %inc, 6, !dbg !6861
  store i32 %mul, i32* %bit_num, align 8, !dbg !6862
  %3 = load i64*, i64** %ptr, align 8, !dbg !6863
  %idxprom = zext i32 %inc to i64, !dbg !6864
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !6864
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6864
  store i64 %4, i64* %word, align 8, !dbg !6865
  br label %for.cond, !dbg !6866, !llvm.loop !6867

for.cond6:                                        ; preds = %for.cond6.preheader, %for.body9
  %5 = phi i32 [ %.pre1, %for.cond6.preheader ], [ %inc11, %for.body9 ], !dbg !6843
  %6 = phi i64 [ %.lcssa4, %for.cond6.preheader ], [ %shr, %for.body9 ], !dbg !6869
  %and = and i64 %6, 1, !dbg !6871
  %cmp8 = icmp eq i64 %and, 0, !dbg !6872
  br i1 %cmp8, label %for.body9, label %for.end14, !dbg !6855

for.body9:                                        ; preds = %for.cond6
  %inc11 = add i32 %5, 1, !dbg !6873
  store i32 %inc11, i32* %bit_num, align 8, !dbg !6873
  %shr = lshr i64 %6, 1, !dbg !6874
  store i64 %shr, i64* %word, align 8, !dbg !6874
  br label %for.cond6, !dbg !6875, !llvm.loop !6876

for.end14:                                        ; preds = %for.cond6
  %.lcssa = phi i32 [ %5, %for.cond6 ], !dbg !6843
  store i32 %.lcssa, i32* %n, align 4, !dbg !6878
  br label %return, !dbg !6879

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !6880

return:                                           ; preds = %return.loopexit, %for.end14
  %retval.0 = phi i8 [ 1, %for.end14 ], [ 0, %return.loopexit ], !dbg !6843
  ret i8 %retval.0, !dbg !6880
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* %i) unnamed_addr #0 !dbg !6881 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6885, metadata !DIExpression()), !dbg !6886
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6887
  %0 = load i64, i64* %word, align 8, !dbg !6888
  %shr = lshr i64 %0, 1, !dbg !6888
  store i64 %shr, i64* %word, align 8, !dbg !6888
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6889
  %1 = load i32, i32* %bit_num, align 8, !dbg !6890
  %inc = add i32 %1, 1, !dbg !6890
  store i32 %inc, i32* %bit_num, align 8, !dbg !6890
  ret void, !dbg !6891
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_live(%struct.rtx_def* %insn, i32 %src) unnamed_addr #5 !dbg !6892 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6896, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 %src, metadata !6897, metadata !DIExpression()), !dbg !6902
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6903
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6903
  %1 = bitcast %union.rtunion_def* %0 to i32**, !dbg !6903
  %2 = load i32*, i32** %1, align 8, !dbg !6903
  %bf.load = load i32, i32* %2, align 8, !dbg !6903
  %bf.clear = and i32 %bf.load, 65535, !dbg !6903
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !6904
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !6905
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6905

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i32 %bf.clear, 25, !dbg !6906
  br i1 %cmp7, label %if.then, label %if.else, !dbg !6907

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* %3) #8, !dbg !6908
  br label %return, !dbg !6909

if.else:                                          ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %bf.clear, 15, !dbg !6910
  br i1 %cmp18, label %if.then19, label %return, !dbg !6911

if.then19:                                        ; preds = %if.else
  %rt_rtx23 = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6912
  %arrayidx26 = getelementptr inbounds i32, i32* %2, i64 2, !dbg !6912
  %rt_rtvec = bitcast i32* %arrayidx26 to %struct.rtvec_def**, !dbg !6912
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6912
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !6912
  %5 = load i32, i32* %num_elem, align 8, !dbg !6912
  call void @llvm.dbg.value(metadata i32 %5, metadata !6898, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6914
  %6 = sext i32 %5 to i64, !dbg !6915
  br label %for.cond, !dbg !6915

for.cond:                                         ; preds = %for.inc, %if.then19
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %6, %if.then19 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6916
  call void @llvm.dbg.value(metadata i32 undef, metadata !6898, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6914
  %cmp27 = icmp sgt i64 %indvars.iv, 0, !dbg !6917
  br i1 %cmp27, label %for.body, label %return.loopexit, !dbg !6919

for.body:                                         ; preds = %for.cond
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6920
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6920
  %rt_rtvec35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtvec_def**, !dbg !6920
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec35, align 8, !dbg !6920
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6920
  %9 = bitcast %struct.rtx_def** %arrayidx36 to i32**, !dbg !6920
  %10 = load i32*, i32** %9, align 8, !dbg !6920
  %bf.load37 = load i32, i32* %10, align 8, !dbg !6920
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !6920
  %cmp39 = icmp eq i32 %bf.clear38, 23, !dbg !6922
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !6923
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false40, !dbg !6923

lor.lhs.false40:                                  ; preds = %for.body
  %cmp54 = icmp eq i32 %bf.clear38, 25, !dbg !6924
  br i1 %cmp54, label %land.lhs.true, label %for.inc, !dbg !6925

land.lhs.true:                                    ; preds = %lor.lhs.false40, %for.body
  %call66 = tail call fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* %11) #8, !dbg !6926
  %tobool = icmp eq i32 %call66, 0, !dbg !6926
  br i1 %tobool, label %return.loopexit, label %for.inc, !dbg !6927

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false40
  call void @llvm.dbg.value(metadata i32 undef, metadata !6898, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6914
  br label %for.cond, !dbg !6928, !llvm.loop !6929

return.loopexit:                                  ; preds = %for.cond, %land.lhs.true
  %retval.1.ph = phi i32 [ 1, %for.cond ], [ 0, %land.lhs.true ]
  br label %return, !dbg !6931

return:                                           ; preds = %return.loopexit, %if.else, %if.then
  %retval.1 = phi i32 [ %call, %if.then ], [ 1, %if.else ], [ %retval.1.ph, %return.loopexit ], !dbg !6902
  ret i32 %retval.1, !dbg !6931
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* %x) unnamed_addr #5 !dbg !6932 {
entry:
  call void @llvm.dbg.value(metadata i32 %src, metadata !6936, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6937, metadata !DIExpression()), !dbg !6961
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6962
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6962
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6940, metadata !DIExpression()), !dbg !6961
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !6963
  br i1 %cmp, label %cleanup165, label %while.cond.preheader, !dbg !6965

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !6966

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %reg.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %0, %while.cond.preheader ], !dbg !6961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !6940, metadata !DIExpression()), !dbg !6961
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0, i64 0, i32 0, !dbg !6967
  %bf.load = load i32, i32* %1, align 8, !dbg !6967
  %bf.clear = and i32 %bf.load, 65535, !dbg !6967
  %cmp1 = icmp eq i32 %bf.clear, 39, !dbg !6968
  br i1 %cmp1, label %while.body, label %lor.lhs.false, !dbg !6969

lor.lhs.false:                                    ; preds = %while.cond
  %cmp4 = icmp eq i32 %bf.clear, 120, !dbg !6970
  %cmp7 = icmp eq i32 %bf.clear, 40, !dbg !6971
  %or.cond = or i1 %cmp4, %cmp7, !dbg !6972
  br i1 %or.cond, label %while.body, label %while.end, !dbg !6972

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6973
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !6973
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !6973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6940, metadata !DIExpression()), !dbg !6961
  br label %while.cond, !dbg !6966, !llvm.loop !6974

while.end:                                        ; preds = %lor.lhs.false
  %reg.0.lcssa = phi %struct.rtx_def* [ %reg.0, %lor.lhs.false ], !dbg !6961
  %.lcssa = phi i32* [ %1, %lor.lhs.false ], !dbg !6967
  %bf.clear.lcssa = phi i32 [ %bf.clear, %lor.lhs.false ], !dbg !6967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !6940, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !6940, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !6940, metadata !DIExpression()), !dbg !6961
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 15, !dbg !6975
  br i1 %cmp14, label %if.then15, label %if.end46, !dbg !6976

if.then15:                                        ; preds = %while.end
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6977
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !6977
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6977
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !6977
  %4 = load i32, i32* %num_elem, align 8, !dbg !6977
  call void @llvm.dbg.value(metadata i32 %4, metadata !6941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6979
  %5 = sext i32 %4 to i64, !dbg !6980
  br label %for.cond, !dbg !6980

for.cond:                                         ; preds = %for.inc, %if.then15
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %5, %if.then15 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6981
  call void @llvm.dbg.value(metadata i32 undef, metadata !6941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6979
  %cmp20 = icmp sgt i64 %indvars.iv, 0, !dbg !6982
  br i1 %cmp20, label %for.body, label %cleanup165.loopexit, !dbg !6984

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6985
  %arrayidx25 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6985
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx25, align 8, !dbg !6985
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6985
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !6985
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !6985
  %cmp30 = icmp eq %struct.rtx_def* %8, null, !dbg !6987
  br i1 %cmp30, label %for.inc, label %if.then31, !dbg !6988

if.then31:                                        ; preds = %for.body
  %call = tail call fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* nonnull %8) #8, !dbg !6989
  %tobool = icmp eq i32 %call, 0, !dbg !6989
  br i1 %tobool, label %for.inc, label %cleanup165.loopexit, !dbg !6991

for.inc:                                          ; preds = %if.then31, %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !6941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6979
  br label %for.cond, !dbg !6992, !llvm.loop !6993

if.end46:                                         ; preds = %while.end
  %cmp49 = icmp eq i32 %bf.clear.lcssa, 37, !dbg !6995
  br i1 %cmp49, label %if.end51, label %cleanup165, !dbg !6997

if.end51:                                         ; preds = %if.end46
  %call52 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.0.lcssa) #8, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %call52, metadata !6939, metadata !DIExpression()), !dbg !6961
  %cmp53 = icmp slt i32 %call52, 53, !dbg !6999
  br i1 %cmp53, label %land.lhs.true, label %if.else, !dbg !7000

land.lhs.true:                                    ; preds = %if.end51
  %idxprom54 = sext i32 %call52 to i64, !dbg !7001
  %arrayidx55 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom54, !dbg !7001
  %9 = load i8, i8* %arrayidx55, align 1, !dbg !7001
  %tobool56 = icmp eq i8 %9, 0, !dbg !7001
  br i1 %tobool56, label %if.else, label %cleanup165, !dbg !7002

if.else:                                          ; preds = %land.lhs.true, %if.end51
  br i1 %cmp53, label %if.then60, label %for.cond114.preheader, !dbg !7003

for.cond114.preheader:                            ; preds = %if.else
  %idxprom115 = sext i32 %src to i64, !dbg !7004
  br label %for.cond114, !dbg !7005

if.then60:                                        ; preds = %if.else
  %idxprom61 = sext i32 %call52 to i64, !dbg !7006
  %bf.load63 = load i32, i32* %.lcssa, align 8, !dbg !7007
  %bf.lshr = lshr i32 %bf.load63, 16, !dbg !7007
  %bf.clear64 = and i32 %bf.lshr, 255, !dbg !7007
  %idxprom65 = zext i32 %bf.clear64 to i64, !dbg !7006
  %arrayidx66 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom61, i64 %idxprom65, !dbg !7006
  %10 = load i8, i8* %arrayidx66, align 1, !dbg !7006
  %conv67 = zext i8 %10 to i32, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %conv67, metadata !6944, metadata !DIExpression()), !dbg !7008
  %idxprom74 = sext i32 %src to i64, !dbg !7009
  br label %while.cond68, !dbg !7010

while.cond68.loopexit:                            ; preds = %for.cond73
  br label %while.cond68, !dbg !7010

while.cond68:                                     ; preds = %while.cond68.loopexit, %if.then60
  %j.0 = phi i32 [ %conv67, %if.then60 ], [ %dec69, %while.cond68.loopexit ], !dbg !7008
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6944, metadata !DIExpression()), !dbg !7008
  %dec69 = add nsw i32 %j.0, -1, !dbg !7011
  call void @llvm.dbg.value(metadata i32 %dec69, metadata !6944, metadata !DIExpression()), !dbg !7008
  %cmp70 = icmp sgt i32 %j.0, 0, !dbg !7012
  br i1 %cmp70, label %for.cond73.preheader, label %cleanup110.loopexit8, !dbg !7010

for.cond73.preheader:                             ; preds = %while.cond68
  %add = add nsw i32 %call52, %dec69, !dbg !7013
  br label %for.cond73, !dbg !7015

for.cond73:                                       ; preds = %for.cond73.preheader, %for.inc107
  %indvars.iv12 = phi i64 [ 0, %for.cond73.preheader ], [ %indvars.iv.next13, %for.inc107 ], !dbg !7016
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !6938, metadata !DIExpression()), !dbg !6961
  %11 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !7017
  %nr_members = getelementptr inbounds %struct.candidate, %struct.candidate* %11, i64 %idxprom74, i32 3, i32 1, !dbg !7018
  %12 = load i32, i32* %nr_members, align 8, !dbg !7018
  %13 = sext i32 %12 to i64, !dbg !7019
  %cmp76 = icmp slt i64 %indvars.iv12, %13, !dbg !7019
  br i1 %cmp76, label %for.body78, label %while.cond68.loopexit, !dbg !7015, !llvm.loop !7020

for.body78:                                       ; preds = %for.cond73
  %first_member = getelementptr inbounds %struct.candidate, %struct.candidate* %11, i64 %idxprom74, i32 3, i32 0, !dbg !7022
  %14 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member, align 8, !dbg !7022
  %arrayidx83 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %14, i64 %indvars.iv12, !dbg !7023
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx83, align 8, !dbg !7023
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !6949, metadata !DIExpression()), !dbg !7024
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !7025
  %16 = load i32, i32* %index, align 8, !dbg !7025
  %call84 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull @not_in_df, i32 %16) #6, !dbg !7026
  call void @llvm.dbg.value(metadata i32 %call84, metadata !6954, metadata !DIExpression()), !dbg !7024
  %tobool85 = icmp eq i32 %call84, 0, !dbg !7027
  br i1 %tobool85, label %cond.end, label %lor.lhs.false86, !dbg !7027

lor.lhs.false86:                                  ; preds = %for.body78
  %17 = load i32*, i32** @containing_rgn, align 8, !dbg !7027
  %18 = load i32, i32* %index, align 8, !dbg !7027
  %idxprom88 = sext i32 %18 to i64, !dbg !7027
  %arrayidx89 = getelementptr inbounds i32, i32* %17, i64 %idxprom88, !dbg !7027
  %19 = load i32, i32* %arrayidx89, align 4, !dbg !7027
  %20 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7027
  %21 = load i32*, i32** @ebb_head, align 8, !dbg !7027
  %arrayidx91 = getelementptr inbounds i32, i32* %21, i64 %idxprom74, !dbg !7027
  %22 = load i32, i32* %arrayidx91, align 4, !dbg !7027
  %idxprom92 = sext i32 %22 to i64, !dbg !7027
  %arrayidx93 = getelementptr inbounds i32, i32* %20, i64 %idxprom92, !dbg !7027
  %23 = load i32, i32* %arrayidx93, align 4, !dbg !7027
  %idxprom94 = sext i32 %23 to i64, !dbg !7027
  %arrayidx95 = getelementptr inbounds i32, i32* %17, i64 %idxprom94, !dbg !7027
  %24 = load i32, i32* %arrayidx95, align 4, !dbg !7027
  %cmp96 = icmp eq i32 %19, %24, !dbg !7027
  br i1 %cmp96, label %cond.true, label %cond.end, !dbg !7027

cond.true:                                        ; preds = %lor.lhs.false86
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1705, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !7027
  br label %cond.end, !dbg !7027

cond.end:                                         ; preds = %lor.lhs.false86, %for.body78, %cond.true
  br i1 %tobool85, label %lor.lhs.false99, label %cleanup105, !dbg !7028

lor.lhs.false99:                                  ; preds = %cond.end
  %call100 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %15) #6, !dbg !7029
  %call101 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call100, i32 %add) #6, !dbg !7029
  %tobool102 = icmp ne i32 %call101, 0, !dbg !7029
  %spec.select = zext i1 %tobool102 to i32, !dbg !7030
  br label %cleanup105, !dbg !7030

cleanup105:                                       ; preds = %cond.end, %lor.lhs.false99
  %cleanup.dest.slot.0 = phi i32 [ 1, %cond.end ], [ %spec.select, %lor.lhs.false99 ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond3, label %for.inc107, label %cleanup110.loopexit

for.inc107:                                       ; preds = %cleanup105
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !7031
  call void @llvm.dbg.value(metadata i32 undef, metadata !6938, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6961
  br label %for.cond73, !dbg !7032, !llvm.loop !7033

cleanup110.loopexit:                              ; preds = %cleanup105
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup105 ]
  br label %cleanup110

cleanup110.loopexit8:                             ; preds = %while.cond68
  br label %cleanup110

cleanup110:                                       ; preds = %cleanup110.loopexit8, %cleanup110.loopexit
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0.lcssa, %cleanup110.loopexit ], [ 0, %cleanup110.loopexit8 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end164, label %cleanup165

for.cond114:                                      ; preds = %for.cond114.preheader, %for.inc160
  %indvars.iv14 = phi i64 [ 0, %for.cond114.preheader ], [ %indvars.iv.next15, %for.inc160 ], !dbg !7035
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !6938, metadata !DIExpression()), !dbg !6961
  %25 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !7036
  %nr_members118 = getelementptr inbounds %struct.candidate, %struct.candidate* %25, i64 %idxprom115, i32 3, i32 1, !dbg !7037
  %26 = load i32, i32* %nr_members118, align 8, !dbg !7037
  %27 = sext i32 %26 to i64, !dbg !7038
  %cmp119 = icmp slt i64 %indvars.iv14, %27, !dbg !7038
  br i1 %cmp119, label %for.body121, label %if.end164.loopexit, !dbg !7005

for.body121:                                      ; preds = %for.cond114
  %first_member126 = getelementptr inbounds %struct.candidate, %struct.candidate* %25, i64 %idxprom115, i32 3, i32 0, !dbg !7039
  %28 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member126, align 8, !dbg !7039
  %arrayidx128 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %28, i64 %indvars.iv14, !dbg !7040
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx128, align 8, !dbg !7040
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !6955, metadata !DIExpression()), !dbg !7041
  %index130 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 9, !dbg !7042
  %30 = load i32, i32* %index130, align 8, !dbg !7042
  %call131 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull @not_in_df, i32 %30) #6, !dbg !7043
  call void @llvm.dbg.value(metadata i32 %call131, metadata !6960, metadata !DIExpression()), !dbg !7041
  %tobool132 = icmp eq i32 %call131, 0, !dbg !7044
  br i1 %tobool132, label %cond.end147, label %lor.lhs.false133, !dbg !7044

lor.lhs.false133:                                 ; preds = %for.body121
  %31 = load i32*, i32** @containing_rgn, align 8, !dbg !7044
  %32 = load i32, i32* %index130, align 8, !dbg !7044
  %idxprom135 = sext i32 %32 to i64, !dbg !7044
  %arrayidx136 = getelementptr inbounds i32, i32* %31, i64 %idxprom135, !dbg !7044
  %33 = load i32, i32* %arrayidx136, align 4, !dbg !7044
  %34 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7044
  %35 = load i32*, i32** @ebb_head, align 8, !dbg !7044
  %arrayidx138 = getelementptr inbounds i32, i32* %35, i64 %idxprom115, !dbg !7044
  %36 = load i32, i32* %arrayidx138, align 4, !dbg !7044
  %idxprom139 = sext i32 %36 to i64, !dbg !7044
  %arrayidx140 = getelementptr inbounds i32, i32* %34, i64 %idxprom139, !dbg !7044
  %37 = load i32, i32* %arrayidx140, align 4, !dbg !7044
  %idxprom141 = sext i32 %37 to i64, !dbg !7044
  %arrayidx142 = getelementptr inbounds i32, i32* %31, i64 %idxprom141, !dbg !7044
  %38 = load i32, i32* %arrayidx142, align 4, !dbg !7044
  %cmp143 = icmp eq i32 %33, %38, !dbg !7044
  br i1 %cmp143, label %cond.true145, label %cond.end147, !dbg !7044

cond.true145:                                     ; preds = %lor.lhs.false133
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1721, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !7044
  br label %cond.end147, !dbg !7044

cond.end147:                                      ; preds = %lor.lhs.false133, %for.body121, %cond.true145
  br i1 %tobool132, label %lor.lhs.false150, label %cleanup156, !dbg !7045

lor.lhs.false150:                                 ; preds = %cond.end147
  %call151 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %29) #6, !dbg !7047
  %call152 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call151, i32 %call52) #6, !dbg !7047
  %tobool153 = icmp ne i32 %call152, 0, !dbg !7047
  %spec.select6 = zext i1 %tobool153 to i32, !dbg !7048
  br label %cleanup156, !dbg !7048

cleanup156:                                       ; preds = %cond.end147, %lor.lhs.false150
  %cleanup.dest.slot.2 = phi i32 [ 1, %cond.end147 ], [ %spec.select6, %lor.lhs.false150 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %for.inc160, label %cleanup165.loopexit9

for.inc160:                                       ; preds = %cleanup156
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !7049
  call void @llvm.dbg.value(metadata i32 undef, metadata !6938, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6961
  br label %for.cond114, !dbg !7050, !llvm.loop !7051

if.end164.loopexit:                               ; preds = %for.cond114
  br label %if.end164, !dbg !7053

if.end164:                                        ; preds = %if.end164.loopexit, %cleanup110
  br label %cleanup165, !dbg !7053

cleanup165.loopexit:                              ; preds = %for.cond, %if.then31
  %retval.7.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then31 ]
  br label %cleanup165, !dbg !7054

cleanup165.loopexit9:                             ; preds = %cleanup156
  br label %cleanup165, !dbg !7054

cleanup165:                                       ; preds = %cleanup165.loopexit9, %cleanup165.loopexit, %land.lhs.true, %if.end46, %entry, %cleanup110, %if.end164
  %retval.7 = phi i32 [ 0, %cleanup110 ], [ 1, %if.end164 ], [ 1, %entry ], [ 1, %if.end46 ], [ 0, %land.lhs.true ], [ %retval.7.ph, %cleanup165.loopexit ], [ 0, %cleanup165.loopexit9 ], !dbg !6961
  ret i32 %retval.7, !dbg !7054
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @min_insn_conflict_delay(i8*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_exception_free(%struct.rtx_def* %insn, i32 %bb_src, i32 %bb_trg) unnamed_addr #5 !dbg !7055 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7059, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %bb_src, metadata !7060, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %bb_trg, metadata !7061, metadata !DIExpression()), !dbg !7063
  %call = tail call i32 @haifa_classify_insn(%struct.rtx_def* %insn) #6, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %call, metadata !7062, metadata !DIExpression()), !dbg !7063
  switch i32 %call, label %sw.epilog [
    i32 0, label %cleanup
    i32 5, label %sw.bb1
  ], !dbg !7065

sw.bb1:                                           ; preds = %entry
  br label %cleanup, !dbg !7066

sw.epilog:                                        ; preds = %entry
  %0 = load i32, i32* @flag_schedule_speculative_load, align 4, !dbg !7068
  %tobool = icmp eq i32 %0, 0, !dbg !7068
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7070

if.end:                                           ; preds = %sw.epilog
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7071
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !7071
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7071
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7071
  %2 = load i32, i32* %rt_int, align 8, !dbg !7071
  %call3 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #8, !dbg !7071
  %is_load_insn = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i64 0, i32 6, !dbg !7071
  %bf.load = load i8, i8* %is_load_insn, align 2, !dbg !7072
  %bf.set = or i8 %bf.load, 2, !dbg !7072
  store i8 %bf.set, i8* %is_load_insn, align 2, !dbg !7072
  switch i32 %call, label %sw.epilog18 [
    i32 1, label %cleanup
    i32 4, label %sw.bb5
    i32 2, label %sw.bb6
    i32 3, label %sw.bb11
  ], !dbg !7073

sw.bb5:                                           ; preds = %if.end
  br label %cleanup, !dbg !7074

sw.bb6:                                           ; preds = %if.end
  %call7 = tail call fastcc i32 @is_pfree(%struct.rtx_def* %insn, i32 %bb_src, i32 %bb_trg) #8, !dbg !7076
  %tobool8 = icmp eq i32 %call7, 0, !dbg !7076
  br i1 %tobool8, label %sw.bb11, label %cleanup, !dbg !7078

sw.bb11:                                          ; preds = %sw.bb6, %if.end
  %3 = load i32, i32* @flag_schedule_speculative_load_dangerous, align 4, !dbg !7079
  %tobool12 = icmp eq i32 %3, 0, !dbg !7079
  br i1 %tobool12, label %cleanup, label %lor.lhs.false, !dbg !7081

lor.lhs.false:                                    ; preds = %sw.bb11
  %call13 = tail call fastcc i32 @is_prisky(%struct.rtx_def* %insn, i32 %bb_src, i32 %bb_trg) #8, !dbg !7082
  %tobool14 = icmp eq i32 %call13, 0, !dbg !7082
  br i1 %tobool14, label %sw.epilog18, label %cleanup, !dbg !7083

sw.epilog18:                                      ; preds = %lor.lhs.false, %if.end
  %4 = load i32, i32* @flag_schedule_speculative_load_dangerous, align 4, !dbg !7084
  br label %cleanup, !dbg !7085

cleanup:                                          ; preds = %sw.bb6, %lor.lhs.false, %sw.bb11, %sw.epilog, %if.end, %entry, %sw.epilog18, %sw.bb5, %sw.bb1
  %retval.0 = phi i32 [ %4, %sw.epilog18 ], [ 0, %sw.bb5 ], [ 0, %sw.bb1 ], [ 1, %entry ], [ 0, %sw.epilog ], [ 1, %if.end ], [ 1, %sw.bb6 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb11 ], !dbg !7063
  ret i32 %retval.0, !dbg !7086
}

declare dso_local i32 @set_dep_weak(i32, i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @haifa_classify_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_pfree(%struct.rtx_def* %load_insn, i32 %bb_src, i32 %bb_trg) unnamed_addr #5 !dbg !7087 {
entry:
  %back_sd_it = alloca %struct._sd_iterator, align 8
  %back_dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %fore_sd_it = alloca %struct._sd_iterator, align 8
  %fore_dep = alloca %struct._dep*, align 8
  %tmp3 = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %load_insn, metadata !7089, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %bb_src, metadata !7090, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %bb_trg, metadata !7091, metadata !DIExpression()), !dbg !7107
  %0 = bitcast %struct._sd_iterator* %back_sd_it to i8*, !dbg !7108
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7108
  %1 = bitcast %struct._dep** %back_dep to i8*, !dbg !7109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7109
  %2 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !7110
  %idx.ext = sext i32 %bb_src to i64, !dbg !7111
  call void @llvm.dbg.value(metadata %struct.candidate* undef, metadata !7094, metadata !DIExpression()), !dbg !7107
  %nr_members = getelementptr inbounds %struct.candidate, %struct.candidate* %2, i64 %idx.ext, i32 3, i32 1, !dbg !7112
  %3 = load i32, i32* %nr_members, align 8, !dbg !7112
  %cmp = icmp eq i32 %3, 1, !dbg !7114
  br i1 %cmp, label %if.end, label %cleanup38, !dbg !7115

if.end:                                           ; preds = %entry
  %4 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7116
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7, !dbg !7116
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %load_insn, i32 3) #8, !dbg !7116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 32, i1 false), !dbg !7116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7, !dbg !7116
  %5 = bitcast %struct._sd_iterator* %fore_sd_it to i8*, !dbg !7117
  %6 = bitcast %struct._dep** %fore_dep to i8*, !dbg !7117
  %7 = bitcast %struct._sd_iterator* %tmp3 to i8*, !dbg !7118
  %first_member = getelementptr inbounds %struct.candidate, %struct.candidate* %2, i64 %idx.ext, i32 3, i32 0, !dbg !7119
  br label %for.cond, !dbg !7116

for.cond:                                         ; preds = %for.inc36, %if.end
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %back_sd_it, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7107
  call void @llvm.dbg.value(metadata %struct._dep** %back_dep, metadata !7093, metadata !DIExpression(DW_OP_deref)), !dbg !7107
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %back_sd_it, %struct._dep** nonnull %back_dep) #8, !dbg !7123
  %tobool = icmp eq i8 %call, 0, !dbg !7116
  br i1 %tobool, label %cleanup38.loopexit, label %for.body, !dbg !7116

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._dep* undef, metadata !7093, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !7095, metadata !DIExpression()), !dbg !7124
  %8 = load %struct._dep*, %struct._dep** %back_dep, align 8, !dbg !7125
  call void @llvm.dbg.value(metadata %struct._dep* %8, metadata !7093, metadata !DIExpression()), !dbg !7107
  %type = getelementptr inbounds %struct._dep, %struct._dep* %8, i64 0, i32 2, !dbg !7125
  %9 = load i32, i32* %type, align 8, !dbg !7125
  %cmp1 = icmp eq i32 %9, 0, !dbg !7126
  br i1 %cmp1, label %if.then2, label %if.end32, !dbg !7127

if.then2:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._dep* %8, metadata !7093, metadata !DIExpression()), !dbg !7107
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %8, i64 0, i32 0, !dbg !7128
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !7095, metadata !DIExpression()), !dbg !7124
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #7, !dbg !7129
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7130
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #7, !dbg !7131
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp3, %struct.rtx_def* %10, i32 4) #8, !dbg !7131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %7, i64 32, i1 false), !dbg !7131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #7, !dbg !7131
  br label %for.cond4, !dbg !7131

for.cond4:                                        ; preds = %for.inc, %if.then2
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %fore_sd_it, metadata !7099, metadata !DIExpression(DW_OP_deref)), !dbg !7117
  call void @llvm.dbg.value(metadata %struct._dep** %fore_dep, metadata !7102, metadata !DIExpression(DW_OP_deref)), !dbg !7117
  %call5 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %fore_sd_it, %struct._dep** nonnull %fore_dep) #8, !dbg !7132
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7131
  br i1 %tobool6, label %cleanup28, label %for.body7, !dbg !7131

for.body7:                                        ; preds = %for.cond4
  %11 = load %struct._dep*, %struct._dep** %fore_dep, align 8, !dbg !7133
  call void @llvm.dbg.value(metadata %struct._dep* %11, metadata !7102, metadata !DIExpression()), !dbg !7117
  %con = getelementptr inbounds %struct._dep, %struct._dep* %11, i64 0, i32 1, !dbg !7133
  %12 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !7103, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata %struct._dep* %11, metadata !7102, metadata !DIExpression()), !dbg !7117
  %type8 = getelementptr inbounds %struct._dep, %struct._dep* %11, i64 0, i32 2, !dbg !7135
  %13 = load i32, i32* %type8, align 8, !dbg !7135
  %cmp9 = icmp eq i32 %13, 0, !dbg !7136
  br i1 %cmp9, label %if.then10, label %if.end27, !dbg !7137

if.then10:                                        ; preds = %for.body7
  %call11 = call i32 @haifa_classify_insn(%struct.rtx_def* %12) #6, !dbg !7138
  %cmp12 = icmp eq i32 %call11, 2, !dbg !7140
  br i1 %cmp12, label %if.end14, label %cleanup, !dbg !7141

if.end14:                                         ; preds = %if.then10
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !7142
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 1, !dbg !7142
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7142
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7142
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !7142
  %16 = load i32, i32* %index, align 8, !dbg !7142
  %idxprom = sext i32 %16 to i64, !dbg !7142
  %arrayidx15 = getelementptr inbounds i32, i32* %14, i64 %idxprom, !dbg !7142
  %17 = load i32, i32* %arrayidx15, align 4, !dbg !7142
  %cmp16 = icmp eq i32 %17, %bb_trg, !dbg !7144
  br i1 %cmp16, label %cleanup, label %if.end18, !dbg !7145

if.end18:                                         ; preds = %if.end14
  %18 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member, align 8, !dbg !7146
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %18, align 8, !dbg !7147
  %cmp24 = icmp eq %struct.basic_block_def* %19, %15, !dbg !7148
  br i1 %cmp24, label %cleanup, label %if.end27, !dbg !7149

if.end27:                                         ; preds = %if.end18, %for.body7
  br label %cleanup, !dbg !7150

cleanup:                                          ; preds = %if.then10, %if.end18, %if.end14, %if.end27
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end27 ], [ 7, %if.then10 ], [ 1, %if.end14 ], [ 1, %if.end18 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup28 [
    i32 0, label %for.inc
    i32 7, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %fore_sd_it, metadata !7099, metadata !DIExpression(DW_OP_deref)), !dbg !7117
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %fore_sd_it) #8, !dbg !7132
  br label %for.cond4, !dbg !7132, !llvm.loop !7151

cleanup28:                                        ; preds = %for.cond4, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #7, !dbg !7153
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end32, label %cleanup33

if.end32:                                         ; preds = %cleanup28, %for.body
  br label %cleanup33, !dbg !7154

cleanup33:                                        ; preds = %cleanup28, %if.end32
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup28 ], [ 0, %if.end32 ]
  %cond = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond, label %for.inc36, label %cleanup38.loopexit

for.inc36:                                        ; preds = %cleanup33
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %back_sd_it, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7107
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %back_sd_it) #8, !dbg !7123
  br label %for.cond, !dbg !7123, !llvm.loop !7155

cleanup38.loopexit:                               ; preds = %cleanup33, %for.cond
  %retval.6.ph = phi i32 [ 0, %for.cond ], [ 1, %cleanup33 ]
  br label %cleanup38, !dbg !7157

cleanup38:                                        ; preds = %cleanup38.loopexit, %entry
  %retval.6 = phi i32 [ 0, %entry ], [ %retval.6.ph, %cleanup38.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7157
  ret i32 %retval.6, !dbg !7157
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_prisky(%struct.rtx_def* %load_insn, i32 %bb_src, i32 %bb_trg) unnamed_addr #5 !dbg !7158 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %load_insn, metadata !7160, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %bb_src, metadata !7161, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %bb_trg, metadata !7162, metadata !DIExpression()), !dbg !7163
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7164
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7164
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %load_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7164
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7164
  %1 = load i32, i32* %rt_int, align 8, !dbg !7164
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #8, !dbg !7164
  %fed_by_spec_load = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 6, !dbg !7164
  %bf.load = load i8, i8* %fed_by_spec_load, align 2, !dbg !7164
  %bf.clear = and i8 %bf.load, 1, !dbg !7164
  %tobool1 = icmp eq i8 %bf.clear, 0, !dbg !7164
  br i1 %tobool1, label %if.end, label %return, !dbg !7166

if.end:                                           ; preds = %entry
  %call2 = tail call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %load_insn, i32 3) #6, !dbg !7167
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7167
  br i1 %tobool3, label %if.end5, label %return, !dbg !7169

if.end5:                                          ; preds = %if.end
  %call6 = tail call fastcc i32 @is_conditionally_protected(%struct.rtx_def* %load_insn, i32 %bb_src, i32 %bb_trg) #8, !dbg !7170
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7170
  %. = zext i1 %tobool7 to i32, !dbg !7163
  br label %return, !dbg !7163

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.end ], [ %., %if.end5 ], !dbg !7163
  ret i32 %retval.0, !dbg !7172
}

declare dso_local zeroext i8 @sd_lists_empty_p(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_conditionally_protected(%struct.rtx_def* %load_insn, i32 %bb_src, i32 %bb_trg) unnamed_addr #5 !dbg !7173 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %load_insn, metadata !7175, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i32 %bb_src, metadata !7176, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i32 %bb_trg, metadata !7177, metadata !DIExpression()), !dbg !7184
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !7185
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7185
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !7186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7186
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7187
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7187
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %load_insn, i32 3) #8, !dbg !7187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !7187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7187
  %idxprom13 = sext i32 %bb_src to i64, !dbg !7188
  %tobool31 = icmp ne i32 %bb_trg, 0, !dbg !7188
  %idxprom47 = sext i32 %bb_trg to i64, !dbg !7188
  br label %for.cond, !dbg !7187

for.cond:                                         ; preds = %for.inc, %entry
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7178, metadata !DIExpression(DW_OP_deref)), !dbg !7184
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !7179, metadata !DIExpression(DW_OP_deref)), !dbg !7184
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #8, !dbg !7190
  %tobool = icmp eq i8 %call, 0, !dbg !7187
  br i1 %tobool, label %cleanup171, label %for.body, !dbg !7187

for.body:                                         ; preds = %for.cond
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7191
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !7179, metadata !DIExpression()), !dbg !7184
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 0, !dbg !7191
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !7180, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !7179, metadata !DIExpression()), !dbg !7184
  %type = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 2, !dbg !7193
  %5 = load i32, i32* %type, align 8, !dbg !7193
  %cmp = icmp eq i32 %5, 0, !dbg !7195
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !7196

lor.lhs.false:                                    ; preds = %for.body
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !7197
  %bf.load = load i32, i32* %6, align 8, !dbg !7197
  %bf.clear = and i32 %bf.load, 65535, !dbg !7197
  %cmp1 = icmp eq i32 %bf.clear, 9, !dbg !7197
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !7198

if.end:                                           ; preds = %lor.lhs.false
  %7 = load i32*, i32** @block_to_bb, align 8, !dbg !7199
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 1, !dbg !7199
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7199
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7199
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 9, !dbg !7199
  %9 = load i32, i32* %index, align 8, !dbg !7199
  %idxprom = sext i32 %9 to i64, !dbg !7199
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !7199
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !7199
  %cmp3 = icmp eq i32 %10, %bb_src, !dbg !7200
  br i1 %cmp3, label %cleanup, label %lor.lhs.false4, !dbg !7201

lor.lhs.false4:                                   ; preds = %if.end
  %11 = load i32*, i32** @containing_rgn, align 8, !dbg !7202
  %arrayidx12 = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !7202
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !7202
  %13 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7203
  %14 = load i32*, i32** @ebb_head, align 8, !dbg !7203
  %arrayidx14 = getelementptr inbounds i32, i32* %14, i64 %idxprom13, !dbg !7203
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !7203
  %idxprom15 = sext i32 %15 to i64, !dbg !7203
  %arrayidx16 = getelementptr inbounds i32, i32* %13, i64 %idxprom15, !dbg !7203
  %16 = load i32, i32* %arrayidx16, align 4, !dbg !7203
  %idxprom17 = sext i32 %16 to i64, !dbg !7203
  %arrayidx18 = getelementptr inbounds i32, i32* %11, i64 %idxprom17, !dbg !7203
  %17 = load i32, i32* %arrayidx18, align 4, !dbg !7203
  %cmp19 = icmp eq i32 %12, %17, !dbg !7204
  br i1 %cmp19, label %lor.lhs.false20, label %cleanup, !dbg !7205

lor.lhs.false20:                                  ; preds = %lor.lhs.false4
  %cmp29 = icmp ne i32 %10, %bb_trg, !dbg !7206
  %or.cond = and i1 %cmp29, %tobool31, !dbg !7206
  br i1 %or.cond, label %lor.lhs.false32, label %if.end165, !dbg !7206

lor.lhs.false32:                                  ; preds = %lor.lhs.false20
  %18 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !7206
  %idxprom41 = sext i32 %10 to i64, !dbg !7206
  %arrayidx42 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %18, i64 %idxprom41, !dbg !7206
  %19 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx42, align 8, !dbg !7206
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7206
  %cfg = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !7206
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7206
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 2, !dbg !7206
  %22 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7206
  %tobool43 = icmp eq %struct.VEC_basic_block_gc* %22, null, !dbg !7206
  br i1 %tobool43, label %cond.end, label %cond.true, !dbg !7206

cond.true:                                        ; preds = %lor.lhs.false32
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %22, i64 0, i32 0, !dbg !7206
  br label %cond.end, !dbg !7206

cond.end:                                         ; preds = %lor.lhs.false32, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %lor.lhs.false32 ], !dbg !7206
  %arrayidx48 = getelementptr inbounds i32, i32* %14, i64 %idxprom47, !dbg !7206
  %23 = load i32, i32* %arrayidx48, align 4, !dbg !7206
  %idxprom49 = sext i32 %23 to i64, !dbg !7206
  %arrayidx50 = getelementptr inbounds i32, i32* %13, i64 %idxprom49, !dbg !7206
  %24 = load i32, i32* %arrayidx50, align 4, !dbg !7206
  %call51 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %24) #8, !dbg !7206
  %call52 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call51) #8, !dbg !7206
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call52, i64 0, i32 3, !dbg !7206
  %25 = bitcast i8** %aux to i64*, !dbg !7206
  %26 = load i64, i64* %25, align 8, !dbg !7206
  %div = lshr i64 %26, 6, !dbg !7206
  %idxprom53 = and i64 %div, 67108863, !dbg !7206
  %arrayidx54 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %19, i64 0, i32 3, i64 %idxprom53, !dbg !7206
  %27 = load i64, i64* %arrayidx54, align 8, !dbg !7206
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7206
  %cfg56 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 1, !dbg !7206
  %29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg56, align 8, !dbg !7206
  %x_basic_block_info57 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 2, !dbg !7206
  %30 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info57, align 8, !dbg !7206
  %tobool58 = icmp eq %struct.VEC_basic_block_gc* %30, null, !dbg !7206
  br i1 %tobool58, label %cond.end65, label %cond.true59, !dbg !7206

cond.true59:                                      ; preds = %cond.end
  %base63 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %30, i64 0, i32 0, !dbg !7206
  br label %cond.end65, !dbg !7206

cond.end65:                                       ; preds = %cond.end, %cond.true59
  %cond66 = phi %struct.VEC_basic_block_base* [ %base63, %cond.true59 ], [ null, %cond.end ], !dbg !7206
  %31 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7206
  %32 = load i32*, i32** @ebb_head, align 8, !dbg !7206
  %arrayidx68 = getelementptr inbounds i32, i32* %32, i64 %idxprom47, !dbg !7206
  %33 = load i32, i32* %arrayidx68, align 4, !dbg !7206
  %idxprom69 = sext i32 %33 to i64, !dbg !7206
  %arrayidx70 = getelementptr inbounds i32, i32* %31, i64 %idxprom69, !dbg !7206
  %34 = load i32, i32* %arrayidx70, align 4, !dbg !7206
  %call71 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond66, i32 %34) #8, !dbg !7206
  %call72 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call71) #8, !dbg !7206
  %aux73 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call72, i64 0, i32 3, !dbg !7206
  %35 = bitcast i8** %aux73 to i64*, !dbg !7206
  %36 = load i64, i64* %35, align 8, !dbg !7206
  %rem = and i64 %36, 63, !dbg !7206
  %37 = shl i64 1, %rem, !dbg !7206
  %38 = and i64 %27, %37, !dbg !7206
  %tobool75 = icmp eq i64 %38, 0, !dbg !7206
  br i1 %tobool75, label %land.lhs.true, label %if.end165, !dbg !7207

land.lhs.true:                                    ; preds = %cond.end65
  %39 = load i32*, i32** @block_to_bb, align 8, !dbg !7208
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7208
  %index80 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 9, !dbg !7208
  %41 = load i32, i32* %index80, align 8, !dbg !7208
  %idxprom82 = sext i32 %41 to i64, !dbg !7208
  %arrayidx83 = getelementptr inbounds i32, i32* %39, i64 %idxprom82, !dbg !7208
  %42 = load i32, i32* %arrayidx83, align 4, !dbg !7208
  %cmp84 = icmp eq i32 %42, %bb_trg, !dbg !7208
  br i1 %cmp84, label %if.end165, label %lor.lhs.false86, !dbg !7208

lor.lhs.false86:                                  ; preds = %land.lhs.true
  %tobool95 = icmp eq i32 %42, 0, !dbg !7208
  br i1 %tobool95, label %if.end165, label %lor.lhs.false96, !dbg !7208

lor.lhs.false96:                                  ; preds = %lor.lhs.false86
  %43 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !7208
  %arrayidx98 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %43, i64 %idxprom47, !dbg !7208
  %44 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx98, align 8, !dbg !7208
  %45 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7208
  %cfg101 = getelementptr inbounds %struct.function, %struct.function* %45, i64 0, i32 1, !dbg !7208
  %46 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg101, align 8, !dbg !7208
  %x_basic_block_info102 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %46, i64 0, i32 2, !dbg !7208
  %47 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info102, align 8, !dbg !7208
  %tobool103 = icmp eq %struct.VEC_basic_block_gc* %47, null, !dbg !7208
  br i1 %tobool103, label %cond.end110, label %cond.true104, !dbg !7208

cond.true104:                                     ; preds = %lor.lhs.false96
  %base108 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %47, i64 0, i32 0, !dbg !7208
  br label %cond.end110, !dbg !7208

cond.end110:                                      ; preds = %lor.lhs.false96, %cond.true104
  %cond111 = phi %struct.VEC_basic_block_base* [ %base108, %cond.true104 ], [ null, %lor.lhs.false96 ], !dbg !7208
  %48 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7208
  %49 = load i32*, i32** @ebb_head, align 8, !dbg !7208
  %idxprom120 = sext i32 %42 to i64, !dbg !7208
  %arrayidx121 = getelementptr inbounds i32, i32* %49, i64 %idxprom120, !dbg !7208
  %50 = load i32, i32* %arrayidx121, align 4, !dbg !7208
  %idxprom122 = sext i32 %50 to i64, !dbg !7208
  %arrayidx123 = getelementptr inbounds i32, i32* %48, i64 %idxprom122, !dbg !7208
  %51 = load i32, i32* %arrayidx123, align 4, !dbg !7208
  %call124 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond111, i32 %51) #8, !dbg !7208
  %call125 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call124) #8, !dbg !7208
  %aux126 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call125, i64 0, i32 3, !dbg !7208
  %52 = bitcast i8** %aux126 to i64*, !dbg !7208
  %53 = load i64, i64* %52, align 8, !dbg !7208
  %div128 = lshr i64 %53, 6, !dbg !7208
  %idxprom129 = and i64 %div128, 67108863, !dbg !7208
  %arrayidx130 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %44, i64 0, i32 3, i64 %idxprom129, !dbg !7208
  %54 = load i64, i64* %arrayidx130, align 8, !dbg !7208
  %55 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7208
  %cfg132 = getelementptr inbounds %struct.function, %struct.function* %55, i64 0, i32 1, !dbg !7208
  %56 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg132, align 8, !dbg !7208
  %x_basic_block_info133 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %56, i64 0, i32 2, !dbg !7208
  %57 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info133, align 8, !dbg !7208
  %tobool134 = icmp eq %struct.VEC_basic_block_gc* %57, null, !dbg !7208
  br i1 %tobool134, label %cond.end141, label %cond.true135, !dbg !7208

cond.true135:                                     ; preds = %cond.end110
  %base139 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %57, i64 0, i32 0, !dbg !7208
  br label %cond.end141, !dbg !7208

cond.end141:                                      ; preds = %cond.end110, %cond.true135
  %cond142 = phi %struct.VEC_basic_block_base* [ %base139, %cond.true135 ], [ null, %cond.end110 ], !dbg !7208
  %58 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7208
  %59 = load i32*, i32** @ebb_head, align 8, !dbg !7208
  %60 = load i32*, i32** @block_to_bb, align 8, !dbg !7208
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7208
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %61, i64 0, i32 9, !dbg !7208
  %62 = load i32, i32* %index147, align 8, !dbg !7208
  %idxprom149 = sext i32 %62 to i64, !dbg !7208
  %arrayidx150 = getelementptr inbounds i32, i32* %60, i64 %idxprom149, !dbg !7208
  %63 = load i32, i32* %arrayidx150, align 4, !dbg !7208
  %idxprom151 = sext i32 %63 to i64, !dbg !7208
  %arrayidx152 = getelementptr inbounds i32, i32* %59, i64 %idxprom151, !dbg !7208
  %64 = load i32, i32* %arrayidx152, align 4, !dbg !7208
  %idxprom153 = sext i32 %64 to i64, !dbg !7208
  %arrayidx154 = getelementptr inbounds i32, i32* %58, i64 %idxprom153, !dbg !7208
  %65 = load i32, i32* %arrayidx154, align 4, !dbg !7208
  %call155 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond142, i32 %65) #8, !dbg !7208
  %call156 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call155) #8, !dbg !7208
  %aux157 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call156, i64 0, i32 3, !dbg !7208
  %66 = bitcast i8** %aux157 to i64*, !dbg !7208
  %67 = load i64, i64* %66, align 8, !dbg !7208
  %rem159 = and i64 %67, 63, !dbg !7208
  %68 = shl i64 1, %rem159, !dbg !7208
  %69 = and i64 %54, %68, !dbg !7208
  %tobool163 = icmp eq i64 %69, 0, !dbg !7208
  br i1 %tobool163, label %cleanup, label %if.end165, !dbg !7209

if.end165:                                        ; preds = %cond.end141, %lor.lhs.false86, %cond.end65, %lor.lhs.false20, %land.lhs.true
  %call166 = call fastcc i32 @find_conditional_protection(%struct.rtx_def* %4, i32 %bb_src) #8, !dbg !7210
  %tobool167 = icmp eq i32 %call166, 0, !dbg !7210
  br i1 %tobool167, label %if.end169, label %cleanup, !dbg !7212

if.end169:                                        ; preds = %if.end165
  %call170 = call fastcc i32 @is_conditionally_protected(%struct.rtx_def* %4, i32 %bb_src, i32 %bb_trg) #8, !dbg !7213
  br label %cleanup, !dbg !7214

cleanup:                                          ; preds = %cond.end141, %if.end165, %lor.lhs.false4, %for.body, %if.end, %lor.lhs.false, %if.end169
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end169 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ true, %cond.end141 ], [ true, %lor.lhs.false4 ], [ true, %if.end ], [ false, %if.end165 ]
  %retval.1 = phi i32 [ %call170, %if.end169 ], [ %retval.0, %lor.lhs.false ], [ %retval.0, %for.body ], [ %retval.0, %cond.end141 ], [ %retval.0, %lor.lhs.false4 ], [ %retval.0, %if.end ], [ 1, %if.end165 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup171

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7178, metadata !DIExpression(DW_OP_deref)), !dbg !7184
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #8, !dbg !7190
  br label %for.cond, !dbg !7190, !llvm.loop !7215

cleanup171:                                       ; preds = %for.cond, %cleanup
  %retval.2 = phi i32 [ %retval.1, %cleanup ], [ 0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7217
  ret i32 %retval.2, !dbg !7217
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_conditional_protection(%struct.rtx_def* %insn, i32 %load_insn_bb) unnamed_addr #5 !dbg !7218 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7220, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %load_insn_bb, metadata !7221, metadata !DIExpression()), !dbg !7228
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !7229
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7229
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !7230
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7230
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7231
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7231
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 4) #8, !dbg !7231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !7231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7231
  %idxprom2 = sext i32 %load_insn_bb to i64, !dbg !7232
  br label %for.cond, !dbg !7231

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7222, metadata !DIExpression(DW_OP_deref)), !dbg !7228
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !7223, metadata !DIExpression(DW_OP_deref)), !dbg !7228
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #8, !dbg !7234
  %tobool = icmp eq i8 %call, 0, !dbg !7231
  br i1 %tobool, label %cleanup98, label %for.body, !dbg !7231

for.body:                                         ; preds = %for.cond
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7235
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !7223, metadata !DIExpression()), !dbg !7228
  %con = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 1, !dbg !7235
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !7224, metadata !DIExpression()), !dbg !7236
  %5 = load i32*, i32** @containing_rgn, align 8, !dbg !7237
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 1, !dbg !7237
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7237
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7237
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 9, !dbg !7237
  %7 = load i32, i32* %index, align 8, !dbg !7237
  %idxprom = sext i32 %7 to i64, !dbg !7237
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !7237
  %8 = load i32, i32* %arrayidx1, align 4, !dbg !7237
  %9 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7238
  %10 = load i32*, i32** @ebb_head, align 8, !dbg !7238
  %arrayidx3 = getelementptr inbounds i32, i32* %10, i64 %idxprom2, !dbg !7238
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !7238
  %idxprom4 = sext i32 %11 to i64, !dbg !7238
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 %idxprom4, !dbg !7238
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !7238
  %idxprom6 = sext i32 %12 to i64, !dbg !7238
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 %idxprom6, !dbg !7238
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !7238
  %cmp = icmp eq i32 %8, %13, !dbg !7239
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7240

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !7241
  %arrayidx15 = getelementptr inbounds i32, i32* %14, i64 %idxprom, !dbg !7241
  %15 = load i32, i32* %arrayidx15, align 4, !dbg !7241
  %cmp16 = icmp eq i32 %15, %load_insn_bb, !dbg !7241
  br i1 %cmp16, label %land.lhs.true78, label %lor.lhs.false, !dbg !7241

lor.lhs.false:                                    ; preds = %land.lhs.true
  %tobool25 = icmp eq i32 %15, 0, !dbg !7241
  br i1 %tobool25, label %land.lhs.true78, label %lor.lhs.false26, !dbg !7241

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %16 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !dbg !7241
  %arrayidx28 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %16, i64 %idxprom2, !dbg !7241
  %17 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx28, align 8, !dbg !7241
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7241
  %cfg = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 1, !dbg !7241
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7241
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i64 0, i32 2, !dbg !7241
  %20 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7241
  %tobool29 = icmp eq %struct.VEC_basic_block_gc* %20, null, !dbg !7241
  br i1 %tobool29, label %cond.end, label %cond.true, !dbg !7241

cond.true:                                        ; preds = %lor.lhs.false26
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %20, i64 0, i32 0, !dbg !7241
  br label %cond.end, !dbg !7241

cond.end:                                         ; preds = %lor.lhs.false26, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %lor.lhs.false26 ], !dbg !7241
  %idxprom41 = sext i32 %15 to i64, !dbg !7241
  %arrayidx42 = getelementptr inbounds i32, i32* %10, i64 %idxprom41, !dbg !7241
  %21 = load i32, i32* %arrayidx42, align 4, !dbg !7241
  %idxprom43 = sext i32 %21 to i64, !dbg !7241
  %arrayidx44 = getelementptr inbounds i32, i32* %9, i64 %idxprom43, !dbg !7241
  %22 = load i32, i32* %arrayidx44, align 4, !dbg !7241
  %call45 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %22) #8, !dbg !7241
  %call46 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call45) #8, !dbg !7241
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call46, i64 0, i32 3, !dbg !7241
  %23 = bitcast i8** %aux to i64*, !dbg !7241
  %24 = load i64, i64* %23, align 8, !dbg !7241
  %div = lshr i64 %24, 6, !dbg !7241
  %idxprom47 = and i64 %div, 67108863, !dbg !7241
  %arrayidx48 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %17, i64 0, i32 3, i64 %idxprom47, !dbg !7241
  %25 = load i64, i64* %arrayidx48, align 8, !dbg !7241
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7241
  %cfg50 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !7241
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg50, align 8, !dbg !7241
  %x_basic_block_info51 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 2, !dbg !7241
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info51, align 8, !dbg !7241
  %tobool52 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !7241
  br i1 %tobool52, label %cond.end59, label %cond.true53, !dbg !7241

cond.true53:                                      ; preds = %cond.end
  %base57 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !7241
  br label %cond.end59, !dbg !7241

cond.end59:                                       ; preds = %cond.end, %cond.true53
  %cond60 = phi %struct.VEC_basic_block_base* [ %base57, %cond.true53 ], [ null, %cond.end ], !dbg !7241
  %29 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7241
  %30 = load i32*, i32** @ebb_head, align 8, !dbg !7241
  %31 = load i32*, i32** @block_to_bb, align 8, !dbg !7241
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7241
  %index65 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 9, !dbg !7241
  %33 = load i32, i32* %index65, align 8, !dbg !7241
  %idxprom67 = sext i32 %33 to i64, !dbg !7241
  %arrayidx68 = getelementptr inbounds i32, i32* %31, i64 %idxprom67, !dbg !7241
  %34 = load i32, i32* %arrayidx68, align 4, !dbg !7241
  %idxprom69 = sext i32 %34 to i64, !dbg !7241
  %arrayidx70 = getelementptr inbounds i32, i32* %30, i64 %idxprom69, !dbg !7241
  %35 = load i32, i32* %arrayidx70, align 4, !dbg !7241
  %idxprom71 = sext i32 %35 to i64, !dbg !7241
  %arrayidx72 = getelementptr inbounds i32, i32* %29, i64 %idxprom71, !dbg !7241
  %36 = load i32, i32* %arrayidx72, align 4, !dbg !7241
  %call73 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond60, i32 %36) #8, !dbg !7241
  %call74 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call73) #8, !dbg !7241
  %aux75 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 3, !dbg !7241
  %37 = bitcast i8** %aux75 to i64*, !dbg !7241
  %38 = load i64, i64* %37, align 8, !dbg !7241
  %rem = and i64 %38, 63, !dbg !7241
  %39 = shl i64 1, %rem, !dbg !7241
  %40 = and i64 %25, %39, !dbg !7241
  %tobool77 = icmp eq i64 %40, 0, !dbg !7241
  br i1 %tobool77, label %if.end, label %cond.end59.land.lhs.true78_crit_edge, !dbg !7242

cond.end59.land.lhs.true78_crit_edge:             ; preds = %cond.end59
  %.pre = load i32*, i32** @block_to_bb, align 8, !dbg !7243
  %.pre2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7243
  %index83.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre2, i64 0, i32 9, !dbg !7232
  %.pre3 = load i32, i32* %index83.phi.trans.insert, align 8, !dbg !7243
  %idxprom85.phi.trans.insert = sext i32 %.pre3 to i64, !dbg !7232
  %arrayidx86.phi.trans.insert = getelementptr inbounds i32, i32* %.pre, i64 %idxprom85.phi.trans.insert, !dbg !7232
  %.pre4 = load i32, i32* %arrayidx86.phi.trans.insert, align 4, !dbg !7243
  br label %land.lhs.true78, !dbg !7242

land.lhs.true78:                                  ; preds = %cond.end59.land.lhs.true78_crit_edge, %lor.lhs.false, %land.lhs.true
  %41 = phi i32 [ %.pre4, %cond.end59.land.lhs.true78_crit_edge ], [ 0, %lor.lhs.false ], [ %load_insn_bb, %land.lhs.true ], !dbg !7243
  %cmp87 = icmp eq i32 %41, %load_insn_bb, !dbg !7244
  br i1 %cmp87, label %if.end, label %land.lhs.true89, !dbg !7245

land.lhs.true89:                                  ; preds = %land.lhs.true78
  %42 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7246
  call void @llvm.dbg.value(metadata %struct._dep* %42, metadata !7223, metadata !DIExpression()), !dbg !7228
  %type = getelementptr inbounds %struct._dep, %struct._dep* %42, i64 0, i32 2, !dbg !7246
  %43 = load i32, i32* %type, align 8, !dbg !7246
  %cmp90 = icmp eq i32 %43, 0, !dbg !7247
  br i1 %cmp90, label %land.lhs.true92, label %if.end, !dbg !7248

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !7249
  %bf.load = load i32, i32* %44, align 8, !dbg !7249
  %bf.clear = and i32 %bf.load, 65535, !dbg !7249
  %cmp93 = icmp eq i32 %bf.clear, 9, !dbg !7249
  br i1 %cmp93, label %cleanup, label %lor.lhs.false95, !dbg !7250

lor.lhs.false95:                                  ; preds = %land.lhs.true92
  %call96 = call fastcc i32 @find_conditional_protection(%struct.rtx_def* %4, i32 %load_insn_bb) #8, !dbg !7251
  %tobool97 = icmp eq i32 %call96, 0, !dbg !7251
  br i1 %tobool97, label %if.end, label %cleanup, !dbg !7252

if.end:                                           ; preds = %cond.end59, %lor.lhs.false95, %land.lhs.true78, %land.lhs.true89, %for.body
  br label %cleanup, !dbg !7253

cleanup:                                          ; preds = %lor.lhs.false95, %land.lhs.true92, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %lor.lhs.false95 ], [ false, %land.lhs.true92 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup98

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7222, metadata !DIExpression(DW_OP_deref)), !dbg !7228
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #8, !dbg !7234
  br label %for.cond, !dbg !7234, !llvm.loop !7254

cleanup98:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i32 [ 1, %cleanup ], [ 0, %for.cond ], !dbg !7228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7256
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7256
  ret i32 %retval.2, !dbg !7256
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @update_live(%struct.rtx_def* %insn, i32 %src) unnamed_addr #5 !dbg !7257 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7259, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata i32 %src, metadata !7260, metadata !DIExpression()), !dbg !7265
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7266
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7266
  %1 = bitcast %union.rtunion_def* %0 to i32**, !dbg !7266
  %2 = load i32*, i32** %1, align 8, !dbg !7266
  %bf.load = load i32, i32* %2, align 8, !dbg !7266
  %bf.clear = and i32 %bf.load, 65535, !dbg !7266
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !7267
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !7268
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7268

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i32 %bf.clear, 25, !dbg !7269
  br i1 %cmp7, label %if.then, label %if.else, !dbg !7270

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call fastcc void @update_live_1(i32 %src, %struct.rtx_def* %3) #8, !dbg !7271
  br label %if.end68, !dbg !7271

if.else:                                          ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %bf.clear, 15, !dbg !7272
  br i1 %cmp18, label %if.then19, label %if.end68, !dbg !7273

if.then19:                                        ; preds = %if.else
  %rt_rtx23 = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7274
  %arrayidx26 = getelementptr inbounds i32, i32* %2, i64 2, !dbg !7274
  %rt_rtvec = bitcast i32* %arrayidx26 to %struct.rtvec_def**, !dbg !7274
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7274
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !7274
  %5 = load i32, i32* %num_elem, align 8, !dbg !7274
  call void @llvm.dbg.value(metadata i32 %5, metadata !7261, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7276
  %6 = sext i32 %5 to i64, !dbg !7277
  br label %for.cond, !dbg !7277

for.cond:                                         ; preds = %for.inc, %if.then19
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %6, %if.then19 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7278
  call void @llvm.dbg.value(metadata i32 undef, metadata !7261, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7276
  %cmp27 = icmp sgt i64 %indvars.iv, 0, !dbg !7279
  br i1 %cmp27, label %for.body, label %if.end68.loopexit, !dbg !7281

for.body:                                         ; preds = %for.cond
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7282
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7282
  %rt_rtvec35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtvec_def**, !dbg !7282
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec35, align 8, !dbg !7282
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7282
  %9 = bitcast %struct.rtx_def** %arrayidx36 to i32**, !dbg !7282
  %10 = load i32*, i32** %9, align 8, !dbg !7282
  %bf.load37 = load i32, i32* %10, align 8, !dbg !7282
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !7282
  %cmp39 = icmp eq i32 %bf.clear38, 23, !dbg !7284
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !7285
  br i1 %cmp39, label %if.then55, label %lor.lhs.false40, !dbg !7285

lor.lhs.false40:                                  ; preds = %for.body
  %cmp54 = icmp eq i32 %bf.clear38, 25, !dbg !7286
  br i1 %cmp54, label %if.then55, label %for.inc, !dbg !7287

if.then55:                                        ; preds = %lor.lhs.false40, %for.body
  tail call fastcc void @update_live_1(i32 %src, %struct.rtx_def* %11) #8, !dbg !7288
  br label %for.inc, !dbg !7288

for.inc:                                          ; preds = %lor.lhs.false40, %if.then55
  call void @llvm.dbg.value(metadata i32 undef, metadata !7261, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7276
  br label %for.cond, !dbg !7289, !llvm.loop !7290

if.end68.loopexit:                                ; preds = %for.cond
  br label %if.end68, !dbg !7292

if.end68:                                         ; preds = %if.end68.loopexit, %if.else, %if.then
  ret void, !dbg !7292
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_spec_fed(%struct.rtx_def* %load_insn) unnamed_addr #5 !dbg !7293 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %load_insn, metadata !7295, metadata !DIExpression()), !dbg !7298
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !7299
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7299
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !7300
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7300
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7301
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7301
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %load_insn, i32 4) #8, !dbg !7301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !7301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7301
  br label %for.cond, !dbg !7301

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7296, metadata !DIExpression(DW_OP_deref)), !dbg !7298
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !7297, metadata !DIExpression(DW_OP_deref)), !dbg !7298
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #8, !dbg !7303
  %tobool = icmp eq i8 %call, 0, !dbg !7301
  br i1 %tobool, label %for.end, label %for.body, !dbg !7301

for.body:                                         ; preds = %for.cond
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7305
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !7297, metadata !DIExpression()), !dbg !7298
  %type = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 2, !dbg !7305
  %4 = load i32, i32* %type, align 8, !dbg !7305
  %cmp = icmp eq i32 %4, 0, !dbg !7307
  br i1 %cmp, label %if.then, label %for.inc, !dbg !7308

if.then:                                          ; preds = %for.body
  %5 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7309
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %5, i64 0, i32 0, !dbg !7309
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !7297, metadata !DIExpression()), !dbg !7298
  %con = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 1, !dbg !7309
  %6 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7309
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7309
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7309
  %7 = load i32, i32* %rt_int, align 8, !dbg !7309
  %call2 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %7) #8, !dbg !7309
  %fed_by_spec_load = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call2, i64 0, i32 6, !dbg !7309
  %bf.load = load i8, i8* %fed_by_spec_load, align 2, !dbg !7310
  %bf.set = or i8 %bf.load, 1, !dbg !7310
  store i8 %bf.set, i8* %fed_by_spec_load, align 2, !dbg !7310
  br label %for.inc, !dbg !7309

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7296, metadata !DIExpression(DW_OP_deref)), !dbg !7298
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #8, !dbg !7303
  br label %for.cond, !dbg !7303, !llvm.loop !7311

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7313
  ret void, !dbg !7313
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_live_1(i32 %src, %struct.rtx_def* %x) unnamed_addr #5 !dbg !7314 {
entry:
  call void @llvm.dbg.value(metadata i32 %src, metadata !7318, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7319, metadata !DIExpression()), !dbg !7341
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7342
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7342
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7322, metadata !DIExpression()), !dbg !7341
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !7343
  br i1 %cmp, label %cleanup.cont, label %while.cond.preheader, !dbg !7345

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !7346

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %reg.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %0, %while.cond.preheader ], !dbg !7341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !7322, metadata !DIExpression()), !dbg !7341
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0, i64 0, i32 0, !dbg !7347
  %bf.load = load i32, i32* %1, align 8, !dbg !7347
  %bf.clear = and i32 %bf.load, 65535, !dbg !7347
  %cmp1 = icmp eq i32 %bf.clear, 39, !dbg !7348
  br i1 %cmp1, label %while.body, label %lor.lhs.false, !dbg !7349

lor.lhs.false:                                    ; preds = %while.cond
  %cmp4 = icmp eq i32 %bf.clear, 120, !dbg !7350
  %cmp7 = icmp eq i32 %bf.clear, 40, !dbg !7351
  %or.cond = or i1 %cmp4, %cmp7, !dbg !7352
  br i1 %or.cond, label %while.body, label %while.end, !dbg !7352

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7353
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !7353
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !7353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7322, metadata !DIExpression()), !dbg !7341
  br label %while.cond, !dbg !7346, !llvm.loop !7354

while.end:                                        ; preds = %lor.lhs.false
  %reg.0.lcssa = phi %struct.rtx_def* [ %reg.0, %lor.lhs.false ], !dbg !7341
  %.lcssa = phi i32* [ %1, %lor.lhs.false ], !dbg !7347
  %bf.clear.lcssa = phi i32 [ %bf.clear, %lor.lhs.false ], !dbg !7347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !7322, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !7322, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0.lcssa, metadata !7322, metadata !DIExpression()), !dbg !7341
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 15, !dbg !7355
  br i1 %cmp14, label %if.then15, label %if.end44, !dbg !7356

if.then15:                                        ; preds = %while.end
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7357
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !7357
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7357
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !7357
  %4 = load i32, i32* %num_elem, align 8, !dbg !7357
  call void @llvm.dbg.value(metadata i32 %4, metadata !7323, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7359
  %5 = sext i32 %4 to i64, !dbg !7360
  br label %for.cond, !dbg !7360

for.cond:                                         ; preds = %for.inc, %if.then15
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %5, %if.then15 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7361
  call void @llvm.dbg.value(metadata i32 undef, metadata !7323, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7359
  %cmp20 = icmp sgt i64 %indvars.iv, 0, !dbg !7362
  br i1 %cmp20, label %for.body, label %cleanup.cont.loopexit, !dbg !7364

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7365
  %arrayidx25 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7365
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx25, align 8, !dbg !7365
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7365
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !7365
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !7365
  %cmp30 = icmp eq %struct.rtx_def* %8, null, !dbg !7367
  br i1 %cmp30, label %for.inc, label %if.then31, !dbg !7368

if.then31:                                        ; preds = %for.body
  tail call fastcc void @update_live_1(i32 %src, %struct.rtx_def* nonnull %8) #8, !dbg !7369
  br label %for.inc, !dbg !7369

for.inc:                                          ; preds = %for.body, %if.then31
  call void @llvm.dbg.value(metadata i32 undef, metadata !7323, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7359
  br label %for.cond, !dbg !7370, !llvm.loop !7371

if.end44:                                         ; preds = %while.end
  %cmp47 = icmp eq i32 %bf.clear.lcssa, 37, !dbg !7373
  br i1 %cmp47, label %if.end49, label %cleanup.cont, !dbg !7375

if.end49:                                         ; preds = %if.end44
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.0.lcssa) #8, !dbg !7376
  call void @llvm.dbg.value(metadata i32 %call, metadata !7321, metadata !DIExpression()), !dbg !7341
  %cmp50 = icmp sgt i32 %call, 52, !dbg !7377
  br i1 %cmp50, label %if.then54, label %lor.lhs.false51, !dbg !7378

lor.lhs.false51:                                  ; preds = %if.end49
  %idxprom52 = sext i32 %call to i64, !dbg !7379
  %arrayidx53 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom52, !dbg !7379
  %9 = load i8, i8* %arrayidx53, align 1, !dbg !7379
  %tobool = icmp eq i8 %9, 0, !dbg !7379
  br i1 %tobool, label %if.then54, label %cleanup.cont, !dbg !7380

if.then54:                                        ; preds = %lor.lhs.false51, %if.end49
  %cmp55 = icmp slt i32 %call, 53, !dbg !7381
  br i1 %cmp55, label %if.then56, label %for.cond84.preheader, !dbg !7382

for.cond84.preheader:                             ; preds = %if.then54
  %idxprom85 = sext i32 %src to i64, !dbg !7383
  br label %for.cond84, !dbg !7384

if.then56:                                        ; preds = %if.then54
  %idxprom57 = sext i32 %call to i64, !dbg !7385
  %bf.load59 = load i32, i32* %.lcssa, align 8, !dbg !7386
  %bf.lshr = lshr i32 %bf.load59, 16, !dbg !7386
  %bf.clear60 = and i32 %bf.lshr, 255, !dbg !7386
  %idxprom61 = zext i32 %bf.clear60 to i64, !dbg !7385
  %arrayidx62 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom57, i64 %idxprom61, !dbg !7385
  %10 = load i8, i8* %arrayidx62, align 1, !dbg !7385
  %conv = zext i8 %10 to i32, !dbg !7385
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7326, metadata !DIExpression()), !dbg !7387
  %idxprom69 = sext i32 %src to i64, !dbg !7388
  br label %while.cond63, !dbg !7389

while.cond63.loopexit:                            ; preds = %for.cond68
  br label %while.cond63, !dbg !7389

while.cond63:                                     ; preds = %while.cond63.loopexit, %if.then56
  %j.0 = phi i32 [ %conv, %if.then56 ], [ %dec64, %while.cond63.loopexit ], !dbg !7387
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7326, metadata !DIExpression()), !dbg !7387
  %dec64 = add nsw i32 %j.0, -1, !dbg !7390
  call void @llvm.dbg.value(metadata i32 %dec64, metadata !7326, metadata !DIExpression()), !dbg !7387
  %cmp65 = icmp sgt i32 %j.0, 0, !dbg !7391
  br i1 %cmp65, label %for.cond68.preheader, label %cleanup.cont.loopexit2, !dbg !7389

for.cond68.preheader:                             ; preds = %while.cond63
  %add = add nsw i32 %call, %dec64, !dbg !7392
  br label %for.cond68, !dbg !7393

for.cond68:                                       ; preds = %for.cond68.preheader, %for.body73
  %indvars.iv4 = phi i64 [ 0, %for.cond68.preheader ], [ %indvars.iv.next5, %for.body73 ], !dbg !7394
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !7320, metadata !DIExpression()), !dbg !7341
  %11 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !7395
  %nr_members = getelementptr inbounds %struct.candidate, %struct.candidate* %11, i64 %idxprom69, i32 4, i32 1, !dbg !7396
  %12 = load i32, i32* %nr_members, align 8, !dbg !7396
  %13 = sext i32 %12 to i64, !dbg !7397
  %cmp71 = icmp slt i64 %indvars.iv4, %13, !dbg !7397
  br i1 %cmp71, label %for.body73, label %while.cond63.loopexit, !dbg !7393, !llvm.loop !7398

for.body73:                                       ; preds = %for.cond68
  %first_member = getelementptr inbounds %struct.candidate, %struct.candidate* %11, i64 %idxprom69, i32 4, i32 0, !dbg !7400
  %14 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member, align 8, !dbg !7400
  %arrayidx78 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %14, i64 %indvars.iv4, !dbg !7401
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx78, align 8, !dbg !7401
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !7331, metadata !DIExpression()), !dbg !7392
  %call79 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %15) #6, !dbg !7402
  %call80 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call79, i32 %add) #6, !dbg !7402
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !7403
  call void @llvm.dbg.value(metadata i32 undef, metadata !7320, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7341
  br label %for.cond68, !dbg !7404, !llvm.loop !7405

for.cond84:                                       ; preds = %for.cond84.preheader, %for.body91
  %indvars.iv6 = phi i64 [ 0, %for.cond84.preheader ], [ %indvars.iv.next7, %for.body91 ], !dbg !7407
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !7320, metadata !DIExpression()), !dbg !7341
  %16 = load %struct.candidate*, %struct.candidate** @candidate_table, align 8, !dbg !7408
  %nr_members88 = getelementptr inbounds %struct.candidate, %struct.candidate* %16, i64 %idxprom85, i32 4, i32 1, !dbg !7409
  %17 = load i32, i32* %nr_members88, align 8, !dbg !7409
  %18 = sext i32 %17 to i64, !dbg !7410
  %cmp89 = icmp slt i64 %indvars.iv6, %18, !dbg !7410
  br i1 %cmp89, label %for.body91, label %cleanup.cont.loopexit3, !dbg !7384

for.body91:                                       ; preds = %for.cond84
  %first_member96 = getelementptr inbounds %struct.candidate, %struct.candidate* %16, i64 %idxprom85, i32 4, i32 0, !dbg !7411
  %19 = load %struct.basic_block_def**, %struct.basic_block_def*** %first_member96, align 8, !dbg !7411
  %arrayidx98 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %19, i64 %indvars.iv6, !dbg !7412
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx98, align 8, !dbg !7412
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !7336, metadata !DIExpression()), !dbg !7413
  %call99 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %20) #6, !dbg !7414
  %call100 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call99, i32 %call) #6, !dbg !7414
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !7415
  call void @llvm.dbg.value(metadata i32 undef, metadata !7320, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7341
  br label %for.cond84, !dbg !7416, !llvm.loop !7417

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !7419

cleanup.cont.loopexit2:                           ; preds = %while.cond63
  br label %cleanup.cont, !dbg !7419

cleanup.cont.loopexit3:                           ; preds = %for.cond84
  br label %cleanup.cont, !dbg !7419

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit3, %cleanup.cont.loopexit2, %cleanup.cont.loopexit, %lor.lhs.false51, %entry, %if.end44
  ret void, !dbg !7419
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local void @sched_extend_ready_list(i32) local_unnamed_addr #2

declare dso_local void @sched_init_region_reg_pressure_info() local_unnamed_addr #2

declare dso_local void @sched_setup_bb_reg_pressure_info(%struct.basic_block_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @remove_notes(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @unlink_bb_notes(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @schedule_block(%struct.basic_block_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_trg_info() unnamed_addr #5 !dbg !7420 {
entry:
  %0 = load i8*, i8** bitcast (%struct.candidate** @candidate_table to i8**), align 8, !dbg !7421
  tail call void @free(i8* %0) #6, !dbg !7422
  %1 = load i8*, i8** bitcast (%struct.basic_block_def*** @bblst_table to i8**), align 8, !dbg !7423
  tail call void @free(i8* %1) #6, !dbg !7424
  %2 = load i8*, i8** bitcast (%struct.edge_def*** @edgelst_table to i8**), align 8, !dbg !7425
  tail call void @free(i8* %2) #6, !dbg !7426
  ret void, !dbg !7427
}

declare dso_local void @sched_finish_ready_list() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_block_dependencies(i32 %bb) unnamed_addr #5 !dbg !7428 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %bb, metadata !7430, metadata !DIExpression()), !dbg !7433
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !7434
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7434
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !7435
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7435
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7436
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !7436
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7436
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !7436
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7436
  %tobool = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !7436
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7436

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !7436
  br label %cond.end, !dbg !7436

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7436
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7436
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !7436
  %idxprom = sext i32 %bb to i64, !dbg !7436
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !7436
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7436
  %idxprom4 = sext i32 %7 to i64, !dbg !7436
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4, !dbg !7436
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7436
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %8) #8, !dbg !7436
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7437
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !7437
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !7437
  %x_basic_block_info8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !7437
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info8, align 8, !dbg !7437
  %tobool9 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !7437
  br i1 %tobool9, label %cond.end16, label %cond.true10, !dbg !7437

cond.true10:                                      ; preds = %cond.end
  %base14 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !7437
  br label %cond.end16, !dbg !7437

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi %struct.VEC_basic_block_base* [ %base14, %cond.true10 ], [ null, %cond.end ], !dbg !7437
  %12 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7437
  %13 = load i32*, i32** @ebb_head, align 8, !dbg !7437
  %add = add nsw i32 %bb, 1, !dbg !7437
  %idxprom18 = sext i32 %add to i64, !dbg !7437
  %arrayidx19 = getelementptr inbounds i32, i32* %13, i64 %idxprom18, !dbg !7437
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !7437
  %sub = add nsw i32 %14, -1, !dbg !7437
  %idxprom20 = sext i32 %sub to i64, !dbg !7437
  %arrayidx21 = getelementptr inbounds i32, i32* %12, i64 %idxprom20, !dbg !7437
  %15 = load i32, i32* %arrayidx21, align 4, !dbg !7437
  %call22 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond17, i32 %15) #8, !dbg !7437
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7433
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !7432, metadata !DIExpression(DW_OP_deref)), !dbg !7433
  call void @get_ebb_head_tail(%struct.basic_block_def* %call, %struct.basic_block_def* %call22, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !7438
  %16 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !7439
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !7431, metadata !DIExpression()), !dbg !7433
  %17 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !7441
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !7432, metadata !DIExpression()), !dbg !7433
  %call23 = call i32 @no_real_insns_p(%struct.rtx_def* %16, %struct.rtx_def* %17) #6, !dbg !7442
  %tobool24 = icmp eq i32 %call23, 0, !dbg !7442
  br i1 %tobool24, label %if.end, label %cleanup, !dbg !7443

if.end:                                           ; preds = %cond.end16
  %18 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !7444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !7431, metadata !DIExpression()), !dbg !7433
  %19 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !7445
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @sched_free_deps(%struct.rtx_def* %18, %struct.rtx_def* %19, i8 zeroext 1) #6, !dbg !7446
  br label %cleanup, !dbg !7447

cleanup:                                          ; preds = %cond.end16, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7447
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7447
  ret void, !dbg !7447
}

declare dso_local zeroext i8 @deps_pools_are_empty_p() local_unnamed_addr #2

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_skip_selective_scheduling() local_unnamed_addr #2

declare dso_local void @run_selective_scheduling() local_unnamed_addr #2

declare dso_local void @schedule_ebbs() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2243, !2244, !2245}
!llvm.ident = !{!2246}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "nr_regions", scope: !2, file: !3, line: 85, type: !765, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !762, globals: !1974, nameTableKind: None)
!3 = !DIFile(filename: "sched-rgn.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !390, !395, !538, !572, !579, !755}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !385, line: 432, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389}
!387 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !385, line: 424, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394}
!392 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !396, line: 45, baseType: !7, size: 32, elements: !397)
!396 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!397 = !{!398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537}
!398 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!403 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!404 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!405 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!406 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!407 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!408 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!409 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!410 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!411 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!412 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!413 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!414 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!415 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!416 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!417 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!418 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!419 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!420 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!421 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!422 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!423 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!424 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!425 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!426 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!427 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!428 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!429 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!430 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!431 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!432 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!433 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!434 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!435 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!436 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!437 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!438 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!439 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!440 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!441 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!442 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!443 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!444 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!445 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!446 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!447 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!448 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!449 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!450 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!451 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!452 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!453 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!454 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!455 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!456 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!457 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!458 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!459 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!460 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!461 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!462 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!463 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!464 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!465 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!466 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!467 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!468 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!469 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!470 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!471 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!472 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!473 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!474 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!475 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!476 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!477 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!478 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!479 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!480 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!481 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!482 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!483 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!484 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!485 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!486 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!487 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!488 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!489 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!490 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!491 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!492 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!493 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!494 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!495 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!496 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!497 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!498 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!499 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!500 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!501 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!502 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!503 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!504 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!505 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!506 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!507 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!508 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!509 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!510 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!511 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!512 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!513 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!514 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!515 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!516 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!517 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!518 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!519 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!520 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!521 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!522 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!523 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!524 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!525 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!526 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!527 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!528 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!529 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!530 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!531 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!532 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!533 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!534 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!535 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!536 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!537 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!538 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !396, line: 836, baseType: !7, size: 32, elements: !539)
!539 = !{!540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!540 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!541 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!542 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!543 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!544 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!545 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!546 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!547 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!548 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!549 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!550 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!551 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!552 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!553 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!554 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!555 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!556 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!557 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!558 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!559 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!560 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!561 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!562 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!563 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!564 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!565 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!566 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!567 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!568 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!569 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!570 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!571 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !573, line: 104, baseType: !7, size: 32, elements: !574)
!573 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!574 = !{!575, !576, !577, !578}
!575 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!576 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!577 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!578 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !580, line: 74, baseType: !7, size: 32, elements: !581)
!580 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754}
!582 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!724 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!725 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!726 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!727 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!728 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!729 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!730 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!731 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!732 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!733 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!734 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!735 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!736 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!737 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!738 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!739 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!740 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!741 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!742 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!743 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!744 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!745 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!746 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!747 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!748 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!749 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!750 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!751 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!752 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!753 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!754 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sched_pass_id_t", file: !385, line: 37, baseType: !7, size: 32, elements: !756)
!756 = !{!757, !758, !759, !760, !761}
!757 = !DIEnumerator(name: "SCHED_PASS_UNKNOWN", value: 0, isUnsigned: true)
!758 = !DIEnumerator(name: "SCHED_RGN_PASS", value: 1, isUnsigned: true)
!759 = !DIEnumerator(name: "SCHED_EBB_PASS", value: 2, isUnsigned: true)
!760 = !DIEnumerator(name: "SCHED_SMS_PASS", value: 3, isUnsigned: true)
!761 = !DIEnumerator(name: "SCHED_SEL_PASS", value: 4, isUnsigned: true)
!762 = !{!763, !764, !765, !766, !769, !770, !772, !7, !395, !773, !1249, !1942, !1943, !847, !777, !1951, !1958, !1959, !1971, !5}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!765 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !385, line: 451, size: 1472, elements: !775)
!775 = !{!776, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1936, !1939, !1940, !1941}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !774, file: !385, line: 463, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !778, line: 50, baseType: !779)
!778 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !396, line: 240, size: 384, elements: !781)
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !780, file: !396, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !780, file: !396, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !780, file: !396, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !780, file: !396, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !780, file: !396, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !780, file: !396, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !780, file: !396, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !780, file: !396, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !780, file: !396, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !780, file: !396, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !780, file: !396, line: 321, baseType: !793, size: 320, offset: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !396, line: 315, size: 320, elements: !794)
!794 = !{!795, !1880, !1882, !1911, !1912}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !793, file: !396, line: 316, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 64, elements: !812)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !396, line: 183, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !396, line: 166, size: 64, elements: !799)
!799 = !{!800, !801, !802, !803, !804, !814, !815, !827, !830, !892, !1858, !1859, !1870, !1877}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !798, file: !396, line: 168, baseType: !765, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !798, file: !396, line: 169, baseType: !7, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !798, file: !396, line: 170, baseType: !770, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !798, file: !396, line: 171, baseType: !777, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !798, file: !396, line: 172, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !778, line: 53, baseType: !806)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !396, line: 359, size: 128, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !807, file: !396, line: 360, baseType: !765, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !807, file: !396, line: 361, baseType: !811, size: 64, offset: 64)
!811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 64, elements: !812)
!812 = !{!813}
!813 = !DISubrange(count: 1)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !798, file: !396, line: 173, baseType: !5, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !798, file: !396, line: 174, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !396, line: 133, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 115, size: 32, elements: !818)
!818 = !{!819, !820, !821, !822, !823, !824, !825, !826}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !817, file: !396, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !817, file: !396, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !817, file: !396, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !817, file: !396, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !817, file: !396, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !817, file: !396, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !817, file: !396, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !817, file: !396, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !798, file: !396, line: 175, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !396, line: 175, flags: DIFlagFwdDecl)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !798, file: !396, line: 176, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !833, line: 75, size: 256, elements: !834)
!833 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!834 = !{!835, !850, !851, !852}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !832, file: !833, line: 76, baseType: !836, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !833, line: 68, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !833, line: 63, size: 320, elements: !839)
!839 = !{!840, !842, !843, !844}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !838, file: !833, line: 64, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !838, file: !833, line: 65, baseType: !841, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !838, file: !833, line: 66, baseType: !7, size: 32, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !838, file: !833, line: 67, baseType: !845, size: 128, offset: 192)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 128, elements: !848)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !833, line: 29, baseType: !847)
!847 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!848 = !{!849}
!849 = !DISubrange(count: 2)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !832, file: !833, line: 77, baseType: !836, size: 64, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !832, file: !833, line: 78, baseType: !7, size: 32, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !832, file: !833, line: 79, baseType: !853, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !833, line: 49, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !833, line: 45, size: 832, elements: !856)
!856 = !{!857, !858, !859}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !855, file: !833, line: 46, baseType: !841, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !855, file: !833, line: 47, baseType: !831, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !855, file: !833, line: 48, baseType: !860, size: 704, offset: 128)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !861, line: 164, size: 704, elements: !862)
!861 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!862 = !{!863, !865, !875, !876, !877, !878, !879, !880, !884, !888, !889, !890, !891}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !860, file: !861, line: 166, baseType: !864, size: 64)
!864 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !860, file: !861, line: 167, baseType: !866, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !861, line: 157, size: 192, elements: !868)
!868 = !{!869, !870, !871}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !867, file: !861, line: 159, baseType: !767, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !867, file: !861, line: 160, baseType: !866, size: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !867, file: !861, line: 161, baseType: !872, size: 32, offset: 128)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 32, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 4)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !860, file: !861, line: 168, baseType: !767, size: 64, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !860, file: !861, line: 169, baseType: !767, size: 64, offset: 192)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !860, file: !861, line: 170, baseType: !767, size: 64, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !860, file: !861, line: 171, baseType: !864, size: 64, offset: 320)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !860, file: !861, line: 172, baseType: !765, size: 32, offset: 384)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !860, file: !861, line: 176, baseType: !881, size: 64, offset: 448)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!866, !769, !864}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !860, file: !861, line: 177, baseType: !885, size: 64, offset: 512)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{null, !769, !866}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !860, file: !861, line: 178, baseType: !769, size: 64, offset: 576)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !860, file: !861, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !860, file: !861, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !860, file: !861, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !798, file: !396, line: 177, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !778, line: 56, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !896)
!896 = !{!897, !930, !936, !947, !966, !977, !982, !989, !995, !1008, !1020, !1058, !1063, !1091, !1099, !1100, !1105, !1114, !1120, !1125, !1129, !1133, !1494, !1543, !1549, !1555, !1562, !1588, !1602, !1619, !1631, !1653, !1668, !1840}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !895, file: !158, line: 3372, baseType: !898, size: 64)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !899)
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !898, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !898, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !898, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !898, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !898, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !898, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !898, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !898, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !898, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !898, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !898, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !898, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !898, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !898, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !898, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !898, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !898, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !898, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !898, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !898, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !898, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !898, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !898, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !898, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !898, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !898, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !898, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !898, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !898, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !898, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !895, file: !158, line: 3373, baseType: !931, size: 192)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !932)
!932 = !{!933, !934, !935}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !931, file: !158, line: 403, baseType: !898, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !931, file: !158, line: 404, baseType: !893, size: 64, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !931, file: !158, line: 405, baseType: !893, size: 64, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !895, file: !158, line: 3374, baseType: !937, size: 320)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !937, file: !158, line: 1385, baseType: !931, size: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !937, file: !158, line: 1386, baseType: !941, size: 128, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !942, line: 58, baseType: !943)
!942 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !942, line: 54, size: 128, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !943, file: !942, line: 56, baseType: !847, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !943, file: !942, line: 57, baseType: !864, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !895, file: !158, line: 3375, baseType: !948, size: 256)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !948, file: !158, line: 1398, baseType: !931, size: 192)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !948, file: !158, line: 1399, baseType: !952, size: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !954, line: 52, size: 256, elements: !955)
!954 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!955 = !{!956, !957, !958, !959, !960, !961, !962}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !953, file: !954, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !953, file: !954, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !953, file: !954, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !953, file: !954, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !953, file: !954, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !953, file: !954, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !953, file: !954, line: 62, baseType: !963, size: 192, offset: 64)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 192, elements: !964)
!964 = !{!965}
!965 = !DISubrange(count: 3)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !895, file: !158, line: 3376, baseType: !967, size: 256)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !967, file: !158, line: 1409, baseType: !931, size: 192)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !967, file: !158, line: 1410, baseType: !971, size: 64, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !973, line: 27, size: 192, elements: !974)
!973 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!974 = !{!975, !976}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !972, file: !973, line: 29, baseType: !941, size: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !972, file: !973, line: 30, baseType: !5, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !895, file: !158, line: 3377, baseType: !978, size: 256)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !979)
!979 = !{!980, !981}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !978, file: !158, line: 1438, baseType: !931, size: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !978, file: !158, line: 1439, baseType: !893, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !895, file: !158, line: 3378, baseType: !983, size: 256)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !983, file: !158, line: 1419, baseType: !931, size: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !983, file: !158, line: 1420, baseType: !765, size: 32, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !983, file: !158, line: 1421, baseType: !988, size: 8, offset: 224)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 8, elements: !812)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !895, file: !158, line: 3379, baseType: !990, size: 320)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !991)
!991 = !{!992, !993, !994}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !990, file: !158, line: 1429, baseType: !931, size: 192)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !990, file: !158, line: 1430, baseType: !893, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !990, file: !158, line: 1431, baseType: !893, size: 64, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !895, file: !158, line: 3380, baseType: !996, size: 320)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !996, file: !158, line: 1461, baseType: !931, size: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !996, file: !158, line: 1462, baseType: !1000, size: 128, offset: 192)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1001, line: 31, size: 128, elements: !1002)
!1001 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1002 = !{!1003, !1006, !1007}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1000, file: !1001, line: 32, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !764)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1000, file: !1001, line: 33, baseType: !7, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1000, file: !1001, line: 34, baseType: !7, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !895, file: !158, line: 3381, baseType: !1009, size: 384)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !1010)
!1010 = !{!1011, !1012, !1017, !1018, !1019}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1009, file: !158, line: 2508, baseType: !931, size: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1009, file: !158, line: 2509, baseType: !1013, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1014, line: 58, baseType: !1015)
!1014 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1016, line: 44, baseType: !7)
!1016 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1009, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1009, file: !158, line: 2511, baseType: !893, size: 64, offset: 256)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1009, file: !158, line: 2512, baseType: !893, size: 64, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !895, file: !158, line: 3382, baseType: !1021, size: 896)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1021, file: !158, line: 2653, baseType: !1009, size: 384)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1021, file: !158, line: 2654, baseType: !893, size: 64, offset: 384)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1021, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1021, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1021, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1021, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1021, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1021, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1021, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1021, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1021, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1021, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1021, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1021, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1021, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1021, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1021, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1021, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1021, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1021, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1021, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1021, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1021, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1021, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1021, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1021, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1021, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1021, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1021, file: !158, line: 2705, baseType: !893, size: 64, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1021, file: !158, line: 2706, baseType: !893, size: 64, offset: 640)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1021, file: !158, line: 2707, baseType: !893, size: 64, offset: 704)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1021, file: !158, line: 2708, baseType: !893, size: 64, offset: 768)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1021, file: !158, line: 2711, baseType: !1056, size: 64, offset: 832)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !895, file: !158, line: 3383, baseType: !1059, size: 960)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1059, file: !158, line: 2757, baseType: !1021, size: 896)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1059, file: !158, line: 2758, baseType: !777, size: 64, offset: 896)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !895, file: !158, line: 3384, baseType: !1064, size: 1472)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1065)
!1065 = !{!1066, !1087, !1088, !1089, !1090}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !158, line: 3115, baseType: !1067, size: 1216)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1067, file: !158, line: 2985, baseType: !1059, size: 960)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1067, file: !158, line: 2986, baseType: !893, size: 64, offset: 960)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1067, file: !158, line: 2987, baseType: !893, size: 64, offset: 1024)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1067, file: !158, line: 2988, baseType: !893, size: 64, offset: 1088)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1067, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1067, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1067, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1067, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1067, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1067, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1067, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1067, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1067, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1067, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1067, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1067, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1067, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1067, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1064, file: !158, line: 3117, baseType: !893, size: 64, offset: 1216)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1064, file: !158, line: 3119, baseType: !893, size: 64, offset: 1280)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1064, file: !158, line: 3121, baseType: !893, size: 64, offset: 1344)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1064, file: !158, line: 3123, baseType: !893, size: 64, offset: 1408)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !895, file: !158, line: 3385, baseType: !1092, size: 1088)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1093)
!1093 = !{!1094, !1095, !1096}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1092, file: !158, line: 2875, baseType: !1059, size: 960)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1092, file: !158, line: 2876, baseType: !777, size: 64, offset: 960)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1092, file: !158, line: 2877, baseType: !1097, size: 64, offset: 1024)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !895, file: !158, line: 3386, baseType: !1067, size: 1216)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !895, file: !158, line: 3387, baseType: !1101, size: 1280)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1101, file: !158, line: 3094, baseType: !1067, size: 1216)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1101, file: !158, line: 3095, baseType: !1097, size: 64, offset: 1216)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !895, file: !158, line: 3388, baseType: !1106, size: 1216)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112, !1113}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1106, file: !158, line: 2825, baseType: !1021, size: 896)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1106, file: !158, line: 2827, baseType: !893, size: 64, offset: 896)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1106, file: !158, line: 2828, baseType: !893, size: 64, offset: 960)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1106, file: !158, line: 2829, baseType: !893, size: 64, offset: 1024)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1106, file: !158, line: 2830, baseType: !893, size: 64, offset: 1088)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1106, file: !158, line: 2831, baseType: !893, size: 64, offset: 1152)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !895, file: !158, line: 3389, baseType: !1115, size: 1024)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1116)
!1116 = !{!1117, !1118, !1119}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1115, file: !158, line: 2851, baseType: !1059, size: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1115, file: !158, line: 2852, baseType: !765, size: 32, offset: 960)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1115, file: !158, line: 2853, baseType: !765, size: 32, offset: 992)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !895, file: !158, line: 3390, baseType: !1121, size: 1024)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1122)
!1122 = !{!1123, !1124}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1121, file: !158, line: 2858, baseType: !1059, size: 960)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1121, file: !158, line: 2859, baseType: !1097, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !895, file: !158, line: 3391, baseType: !1126, size: 960)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1126, file: !158, line: 2863, baseType: !1059, size: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !895, file: !158, line: 3392, baseType: !1130, size: 1472)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1131)
!1131 = !{!1132}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !158, line: 3305, baseType: !1064, size: 1472)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !895, file: !158, line: 3393, baseType: !1134, size: 1792)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1135)
!1135 = !{!1136, !1137, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1134, file: !158, line: 3249, baseType: !1064, size: 1472)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1134, file: !158, line: 3251, baseType: !1138, size: 64, offset: 1472)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1140, line: 463, size: 1152, elements: !1141)
!1140 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1141 = !{!1142, !1306, !1410, !1411, !1414, !1417, !1418, !1419, !1420, !1421, !1422, !1446, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1139, file: !1140, line: 464, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1145)
!1145 = !{!1146, !1195, !1208, !1222, !1274, !1287}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1144, file: !135, line: 197, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1148)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1183, !1192, !1193, !1194}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1149, file: !135, line: 119, baseType: !1148, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1149, file: !135, line: 122, baseType: !1148, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1149, file: !135, line: 123, baseType: !1148, size: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1149, file: !135, line: 126, baseType: !765, size: 32, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1149, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1149, file: !135, line: 165, baseType: !1157, size: 192, offset: 256)
!1157 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1158)
!1158 = !{!1159, !1172, !1178}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1157, file: !135, line: 137, baseType: !1160, size: 128)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1161)
!1161 = !{!1162, !1171}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1160, file: !135, line: 135, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1164, file: !135, line: 96, baseType: !1163, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1164, file: !135, line: 97, baseType: !1163, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1164, file: !135, line: 101, baseType: !893, size: 64, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1164, file: !135, line: 106, baseType: !893, size: 64, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1164, file: !135, line: 111, baseType: !893, size: 64, offset: 256)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1160, file: !135, line: 136, baseType: !1163, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1157, file: !135, line: 151, baseType: !1173, size: 192)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1173, file: !135, line: 141, baseType: !893, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1173, file: !135, line: 145, baseType: !893, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1173, file: !135, line: 150, baseType: !765, size: 32, offset: 128)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1157, file: !135, line: 164, baseType: !1179, size: 128)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1179, file: !135, line: 161, baseType: !893, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1179, file: !135, line: 163, baseType: !1013, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1149, file: !135, line: 168, baseType: !1184, size: 64, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190, !1191}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1185, file: !135, line: 70, baseType: !1184, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1185, file: !135, line: 73, baseType: !1148, size: 64, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1185, file: !135, line: 78, baseType: !893, size: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1185, file: !135, line: 85, baseType: !777, size: 64, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1185, file: !135, line: 88, baseType: !765, size: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1149, file: !135, line: 173, baseType: !777, size: 64, offset: 512)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1149, file: !135, line: 173, baseType: !777, size: 64, offset: 576)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1149, file: !135, line: 177, baseType: !764, size: 8, offset: 640)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1144, file: !135, line: 200, baseType: !1196, size: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1198, file: !135, line: 185, baseType: !1201, size: 128)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1202, file: !135, line: 184, baseType: !7, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1202, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1202, file: !135, line: 184, baseType: !1207, size: 64, offset: 64)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 64, elements: !812)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1144, file: !135, line: 203, baseType: !1209, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1211, file: !135, line: 189, baseType: !1214, size: 128)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1216)
!1216 = !{!1217, !1218, !1219}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1215, file: !135, line: 188, baseType: !7, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1215, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1215, file: !135, line: 188, baseType: !1220, size: 64, offset: 64)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1221, size: 64, elements: !812)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1184)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1144, file: !135, line: 207, baseType: !1223, size: 64, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1224, line: 144, baseType: !1225)
!1224 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1224, line: 100, size: 896, elements: !1227)
!1227 = !{!1228, !1236, !1241, !1246, !1248, !1251, !1252, !1253, !1254, !1255, !1260, !1262, !1263, !1268, !1273}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1226, file: !1224, line: 102, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1224, line: 52, baseType: !1230)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!1233, !1234}
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1224, line: 47, baseType: !7)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1226, file: !1224, line: 105, baseType: !1237, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1224, line: 59, baseType: !1238)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!765, !1234, !1234}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1226, file: !1224, line: 108, baseType: !1242, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1224, line: 63, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !769}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1226, file: !1224, line: 111, baseType: !1247, size: 64, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1226, file: !1224, line: 114, baseType: !1249, size: 64, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1250, line: 46, baseType: !847)
!1250 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1226, file: !1224, line: 117, baseType: !1249, size: 64, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1226, file: !1224, line: 120, baseType: !1249, size: 64, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1226, file: !1224, line: 124, baseType: !7, size: 32, offset: 448)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1226, file: !1224, line: 128, baseType: !7, size: 32, offset: 480)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1226, file: !1224, line: 131, baseType: !1256, size: 64, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1224, line: 75, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!769, !1249, !1249}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1226, file: !1224, line: 132, baseType: !1261, size: 64, offset: 576)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1224, line: 78, baseType: !1243)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1226, file: !1224, line: 135, baseType: !769, size: 64, offset: 640)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1226, file: !1224, line: 136, baseType: !1264, size: 64, offset: 704)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1224, line: 82, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!769, !769, !1249, !1249}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1226, file: !1224, line: 137, baseType: !1269, size: 64, offset: 768)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1224, line: 83, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !769, !769}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1226, file: !1224, line: 141, baseType: !7, size: 32, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1144, file: !135, line: 211, baseType: !1275, size: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1277, file: !158, line: 183, baseType: !1280, size: 128)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1281, file: !158, line: 182, baseType: !7, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1281, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1281, file: !158, line: 182, baseType: !1286, size: 64, offset: 64)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 64, elements: !812)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1144, file: !135, line: 220, baseType: !1288, size: 64, offset: 320)
!1288 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1289)
!1289 = !{!1290, !1291}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1288, file: !135, line: 218, baseType: !1275, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1288, file: !135, line: 219, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1294, line: 29, baseType: !1295)
!1294 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1294, line: 29, size: 96, elements: !1296)
!1296 = !{!1297}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1295, file: !1294, line: 29, baseType: !1298, size: 96)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1294, line: 27, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1294, line: 27, size: 96, elements: !1300)
!1300 = !{!1301, !1302, !1303}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1299, file: !1294, line: 27, baseType: !7, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1299, file: !1294, line: 27, baseType: !7, size: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1299, file: !1294, line: 27, baseType: !1304, size: 8, offset: 64)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1305, size: 8, elements: !812)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1294, line: 26, baseType: !764)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1139, file: !1140, line: 467, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1309)
!1309 = !{!1310, !1385, !1386, !1399, !1400, !1401, !1402, !1403, !1404, !1406, !1408, !1409}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1308, file: !142, line: 377, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !778, line: 111, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1314)
!1314 = !{!1315, !1350, !1351, !1352, !1355, !1359, !1360, !1361, !1379, !1380, !1381, !1382, !1383, !1384}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1313, file: !142, line: 219, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1319)
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1318, file: !142, line: 151, baseType: !1321, size: 128)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1323)
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1322, file: !142, line: 150, baseType: !7, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1322, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1322, file: !142, line: 150, baseType: !1327, size: 64, offset: 64)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 64, elements: !812)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !778, line: 108, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1342, !1343, !1344, !1345, !1346, !1347, !1348}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1330, file: !142, line: 124, baseType: !1312, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1330, file: !142, line: 125, baseType: !1312, size: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1330, file: !142, line: 131, baseType: !1335, size: 64, offset: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1336)
!1336 = !{!1337, !1341}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1335, file: !142, line: 129, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !778, line: 66, baseType: !1339)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !778, line: 65, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1335, file: !142, line: 130, baseType: !777, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1330, file: !142, line: 134, baseType: !769, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1330, file: !142, line: 137, baseType: !893, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1330, file: !142, line: 138, baseType: !1013, size: 32, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1330, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1330, file: !142, line: 144, baseType: !765, size: 32, offset: 384)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1330, file: !142, line: 145, baseType: !765, size: 32, offset: 416)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1330, file: !142, line: 146, baseType: !1349, size: 64, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !864)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1313, file: !142, line: 220, baseType: !1316, size: 64, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1313, file: !142, line: 223, baseType: !769, size: 64, offset: 128)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1313, file: !142, line: 226, baseType: !1353, size: 64, offset: 192)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1313, file: !142, line: 229, baseType: !1356, size: 128, offset: 256)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 128, elements: !848)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1313, file: !142, line: 232, baseType: !1312, size: 64, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1313, file: !142, line: 233, baseType: !1312, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1313, file: !142, line: 238, baseType: !1362, size: 64, offset: 512)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1363)
!1363 = !{!1364, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1362, file: !142, line: 236, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1367)
!1367 = !{!1368, !1369}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1366, file: !142, line: 275, baseType: !1338, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1366, file: !142, line: 278, baseType: !1338, size: 64, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1362, file: !142, line: 237, baseType: !1371, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1378}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1372, file: !142, line: 261, baseType: !777, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1372, file: !142, line: 262, baseType: !777, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1372, file: !142, line: 266, baseType: !777, size: 64, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1372, file: !142, line: 267, baseType: !777, size: 64, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1372, file: !142, line: 270, baseType: !765, size: 32, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1313, file: !142, line: 241, baseType: !1349, size: 64, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1313, file: !142, line: 244, baseType: !765, size: 32, offset: 640)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1313, file: !142, line: 247, baseType: !765, size: 32, offset: 672)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1313, file: !142, line: 250, baseType: !765, size: 32, offset: 704)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1313, file: !142, line: 253, baseType: !765, size: 32, offset: 736)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1313, file: !142, line: 256, baseType: !765, size: 32, offset: 768)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1308, file: !142, line: 378, baseType: !1311, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1308, file: !142, line: 381, baseType: !1387, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1390)
!1390 = !{!1391}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1389, file: !142, line: 282, baseType: !1392, size: 128)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1394)
!1394 = !{!1395, !1396, !1397}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1393, file: !142, line: 281, baseType: !7, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1393, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1393, file: !142, line: 281, baseType: !1398, size: 64, offset: 64)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1311, size: 64, elements: !812)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1308, file: !142, line: 384, baseType: !765, size: 32, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1308, file: !142, line: 387, baseType: !765, size: 32, offset: 224)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1308, file: !142, line: 390, baseType: !765, size: 32, offset: 256)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1308, file: !142, line: 394, baseType: !1387, size: 64, offset: 320)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1308, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1308, file: !142, line: 399, baseType: !1405, size: 64, offset: 416)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !848)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1308, file: !142, line: 402, baseType: !1407, size: 64, offset: 480)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !848)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1308, file: !142, line: 406, baseType: !765, size: 32, offset: 544)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1308, file: !142, line: 409, baseType: !765, size: 32, offset: 576)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1139, file: !1140, line: 470, baseType: !1339, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1139, file: !1140, line: 473, baseType: !1412, size: 64, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1140, line: 166, flags: DIFlagFwdDecl)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1139, file: !1140, line: 476, baseType: !1415, size: 64, offset: 256)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1140, line: 476, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1139, file: !1140, line: 479, baseType: !1223, size: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1139, file: !1140, line: 484, baseType: !893, size: 64, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1139, file: !1140, line: 488, baseType: !893, size: 64, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1139, file: !1140, line: 493, baseType: !893, size: 64, offset: 512)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1139, file: !1140, line: 496, baseType: !893, size: 64, offset: 576)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1139, file: !1140, line: 501, baseType: !1423, size: 64, offset: 640)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1425)
!1425 = !{!1426, !1429, !1430, !1431, !1432, !1434, !1435, !1440, !1441, !1442, !1443, !1444, !1445}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1424, file: !153, line: 2356, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1424, file: !153, line: 2357, baseType: !770, size: 64, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1424, file: !153, line: 2358, baseType: !765, size: 32, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1424, file: !153, line: 2359, baseType: !765, size: 32, offset: 160)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1424, file: !153, line: 2360, baseType: !1433, size: 128, offset: 192)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 128, elements: !873)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1424, file: !153, line: 2364, baseType: !765, size: 32, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1424, file: !153, line: 2367, baseType: !1436, size: 128, offset: 384)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1436, file: !153, line: 2351, baseType: !777, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1436, file: !153, line: 2352, baseType: !864, size: 64, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1424, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1424, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1424, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1424, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1424, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1424, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1139, file: !1140, line: 504, baseType: !1447, size: 64, offset: 704)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1140, line: 504, flags: DIFlagFwdDecl)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1139, file: !1140, line: 507, baseType: !1223, size: 64, offset: 768)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1139, file: !1140, line: 510, baseType: !765, size: 32, offset: 832)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1139, file: !1140, line: 513, baseType: !765, size: 32, offset: 864)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1139, file: !1140, line: 516, baseType: !1013, size: 32, offset: 896)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1139, file: !1140, line: 519, baseType: !1013, size: 32, offset: 928)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1139, file: !1140, line: 522, baseType: !7, size: 32, offset: 960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1139, file: !1140, line: 523, baseType: !7, size: 32, offset: 992)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1139, file: !1140, line: 528, baseType: !770, size: 64, offset: 1024)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1139, file: !1140, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1139, file: !1140, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1139, file: !1140, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1139, file: !1140, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1139, file: !1140, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1139, file: !1140, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1139, file: !1140, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1139, file: !1140, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1139, file: !1140, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1139, file: !1140, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1139, file: !1140, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1139, file: !1140, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1139, file: !1140, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1139, file: !1140, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1139, file: !1140, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1139, file: !1140, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1134, file: !158, line: 3254, baseType: !893, size: 64, offset: 1536)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1134, file: !158, line: 3257, baseType: !893, size: 64, offset: 1600)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1134, file: !158, line: 3258, baseType: !893, size: 64, offset: 1664)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1134, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1134, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1134, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1134, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1134, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1134, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1134, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1134, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1134, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1134, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1134, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1134, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1134, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1134, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1134, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1134, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1134, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1134, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !895, file: !158, line: 3394, baseType: !1495, size: 1344)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1522, !1523, !1524, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1495, file: !158, line: 2280, baseType: !931, size: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1495, file: !158, line: 2281, baseType: !893, size: 64, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !158, line: 2282, baseType: !893, size: 64, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1495, file: !158, line: 2283, baseType: !893, size: 64, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !158, line: 2284, baseType: !893, size: 64, offset: 384)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1495, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1495, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1495, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1495, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1495, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1495, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1495, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1495, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1495, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1495, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1495, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1495, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1495, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1495, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1495, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1495, file: !158, line: 2306, baseType: !1520, size: 32, offset: 544)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1521, line: 31, baseType: !765)
!1521 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1495, file: !158, line: 2307, baseType: !893, size: 64, offset: 576)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1495, file: !158, line: 2308, baseType: !893, size: 64, offset: 640)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1495, file: !158, line: 2314, baseType: !1525, size: 64, offset: 704)
!1525 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1526)
!1526 = !{!1527, !1528, !1529}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1525, file: !158, line: 2310, baseType: !765, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1525, file: !158, line: 2311, baseType: !770, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1525, file: !158, line: 2312, baseType: !1530, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1495, file: !158, line: 2315, baseType: !893, size: 64, offset: 768)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1495, file: !158, line: 2316, baseType: !893, size: 64, offset: 832)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1495, file: !158, line: 2317, baseType: !893, size: 64, offset: 896)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1495, file: !158, line: 2318, baseType: !893, size: 64, offset: 960)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1495, file: !158, line: 2319, baseType: !893, size: 64, offset: 1024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1495, file: !158, line: 2320, baseType: !893, size: 64, offset: 1088)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1495, file: !158, line: 2321, baseType: !893, size: 64, offset: 1152)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1495, file: !158, line: 2322, baseType: !893, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1495, file: !158, line: 2324, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !895, file: !158, line: 3395, baseType: !1544, size: 320)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1545)
!1545 = !{!1546, !1547, !1548}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1544, file: !158, line: 1470, baseType: !931, size: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1544, file: !158, line: 1471, baseType: !893, size: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1544, file: !158, line: 1472, baseType: !893, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !895, file: !158, line: 3396, baseType: !1550, size: 320)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1551)
!1551 = !{!1552, !1553, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1550, file: !158, line: 1483, baseType: !931, size: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1550, file: !158, line: 1484, baseType: !765, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1550, file: !158, line: 1485, baseType: !1286, size: 64, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !895, file: !158, line: 3397, baseType: !1556, size: 384)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1556, file: !158, line: 1830, baseType: !931, size: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1556, file: !158, line: 1831, baseType: !1013, size: 32, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1556, file: !158, line: 1832, baseType: !893, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1556, file: !158, line: 1835, baseType: !1286, size: 64, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !895, file: !158, line: 3398, baseType: !1563, size: 704)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1571, !1572, !1575}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1563, file: !158, line: 1899, baseType: !931, size: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1563, file: !158, line: 1902, baseType: !893, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1563, file: !158, line: 1905, baseType: !1568, size: 64, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !778, line: 58, baseType: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !778, line: 57, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1563, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1563, file: !158, line: 1911, baseType: !1573, size: 64, offset: 384)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1563, file: !158, line: 1914, baseType: !1576, size: 256, offset: 448)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1577)
!1577 = !{!1578, !1580, !1581, !1586}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1576, file: !158, line: 1884, baseType: !1579, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1576, file: !158, line: 1885, baseType: !1579, size: 64, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1576, file: !158, line: 1891, baseType: !1582, size: 64, offset: 128)
!1582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1576, file: !158, line: 1891, size: 64, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1582, file: !158, line: 1891, baseType: !1568, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1582, file: !158, line: 1891, baseType: !893, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1576, file: !158, line: 1892, baseType: !1587, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !895, file: !158, line: 3399, baseType: !1589, size: 704)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1589, file: !158, line: 2009, baseType: !931, size: 192)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1589, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1589, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1589, file: !158, line: 2014, baseType: !1013, size: 32, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1589, file: !158, line: 2016, baseType: !893, size: 64, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1589, file: !158, line: 2017, baseType: !1275, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1589, file: !158, line: 2019, baseType: !893, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1589, file: !158, line: 2020, baseType: !893, size: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1589, file: !158, line: 2021, baseType: !893, size: 64, offset: 512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1589, file: !158, line: 2022, baseType: !893, size: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1589, file: !158, line: 2023, baseType: !893, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !895, file: !158, line: 3400, baseType: !1603, size: 832)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !158, line: 2431, baseType: !931, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1603, file: !158, line: 2433, baseType: !893, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1603, file: !158, line: 2434, baseType: !893, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1603, file: !158, line: 2435, baseType: !893, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1603, file: !158, line: 2436, baseType: !893, size: 64, offset: 384)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1603, file: !158, line: 2437, baseType: !1275, size: 64, offset: 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1603, file: !158, line: 2438, baseType: !893, size: 64, offset: 512)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1603, file: !158, line: 2440, baseType: !893, size: 64, offset: 576)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1603, file: !158, line: 2441, baseType: !893, size: 64, offset: 640)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1603, file: !158, line: 2443, baseType: !1615, size: 128, offset: 704)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1616, file: !158, line: 182, baseType: !1280, size: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !895, file: !158, line: 3401, baseType: !1620, size: 320)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1621)
!1621 = !{!1622, !1623, !1630}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1620, file: !158, line: 3329, baseType: !931, size: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1620, file: !158, line: 3330, baseType: !1624, size: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1626)
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1625, file: !158, line: 3322, baseType: !1624, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1625, file: !158, line: 3323, baseType: !1624, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1625, file: !158, line: 3324, baseType: !893, size: 64, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1620, file: !158, line: 3331, baseType: !1624, size: 64, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !895, file: !158, line: 3402, baseType: !1632, size: 256)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1632, file: !158, line: 1541, baseType: !931, size: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1632, file: !158, line: 1542, baseType: !1636, size: 64, offset: 192)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1639)
!1639 = !{!1640}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1638, file: !158, line: 1538, baseType: !1641, size: 192)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1642, file: !158, line: 1537, baseType: !7, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1642, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1642, file: !158, line: 1537, baseType: !1647, size: 128, offset: 64)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 128, elements: !812)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1649, file: !158, line: 1533, baseType: !893, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1649, file: !158, line: 1534, baseType: !893, size: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !895, file: !158, line: 3403, baseType: !1654, size: 512)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1665, !1666, !1667}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1654, file: !158, line: 1939, baseType: !931, size: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1654, file: !158, line: 1940, baseType: !1013, size: 32, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1654, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1654, file: !158, line: 1946, baseType: !1660, size: 32, offset: 256)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1661)
!1661 = !{!1662, !1663, !1664}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1660, file: !158, line: 1943, baseType: !176, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1660, file: !158, line: 1944, baseType: !183, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1660, file: !158, line: 1945, baseType: !190, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1654, file: !158, line: 1950, baseType: !1338, size: 64, offset: 320)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1654, file: !158, line: 1951, baseType: !1338, size: 64, offset: 384)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1654, file: !158, line: 1953, baseType: !1286, size: 64, offset: 448)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !895, file: !158, line: 3404, baseType: !1669, size: 1664)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1669, file: !158, line: 3338, baseType: !931, size: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1669, file: !158, line: 3341, baseType: !1673, size: 1472, offset: 192)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1674, line: 410, size: 1472, elements: !1675)
!1674 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1673, file: !1674, line: 412, baseType: !765, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1673, file: !1674, line: 413, baseType: !765, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1673, file: !1674, line: 414, baseType: !765, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1673, file: !1674, line: 415, baseType: !765, size: 32, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1673, file: !1674, line: 416, baseType: !765, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1673, file: !1674, line: 417, baseType: !765, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1673, file: !1674, line: 418, baseType: !764, size: 8, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1673, file: !1674, line: 419, baseType: !764, size: 8, offset: 200)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1673, file: !1674, line: 420, baseType: !1685, size: 8, offset: 208)
!1685 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1673, file: !1674, line: 421, baseType: !1685, size: 8, offset: 216)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1673, file: !1674, line: 422, baseType: !1685, size: 8, offset: 224)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1673, file: !1674, line: 423, baseType: !1685, size: 8, offset: 232)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1673, file: !1674, line: 424, baseType: !1685, size: 8, offset: 240)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1673, file: !1674, line: 425, baseType: !1685, size: 8, offset: 248)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1673, file: !1674, line: 426, baseType: !1685, size: 8, offset: 256)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1673, file: !1674, line: 427, baseType: !1685, size: 8, offset: 264)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1673, file: !1674, line: 428, baseType: !1685, size: 8, offset: 272)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1673, file: !1674, line: 429, baseType: !1685, size: 8, offset: 280)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1673, file: !1674, line: 430, baseType: !1685, size: 8, offset: 288)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1673, file: !1674, line: 431, baseType: !1685, size: 8, offset: 296)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1673, file: !1674, line: 432, baseType: !1685, size: 8, offset: 304)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1673, file: !1674, line: 433, baseType: !1685, size: 8, offset: 312)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1673, file: !1674, line: 434, baseType: !1685, size: 8, offset: 320)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1673, file: !1674, line: 435, baseType: !1685, size: 8, offset: 328)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1673, file: !1674, line: 436, baseType: !1685, size: 8, offset: 336)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1673, file: !1674, line: 437, baseType: !1685, size: 8, offset: 344)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1673, file: !1674, line: 438, baseType: !1685, size: 8, offset: 352)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1673, file: !1674, line: 439, baseType: !1685, size: 8, offset: 360)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1673, file: !1674, line: 440, baseType: !1685, size: 8, offset: 368)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1673, file: !1674, line: 441, baseType: !1685, size: 8, offset: 376)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1673, file: !1674, line: 442, baseType: !1685, size: 8, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1673, file: !1674, line: 443, baseType: !1685, size: 8, offset: 392)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1673, file: !1674, line: 444, baseType: !1685, size: 8, offset: 400)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1673, file: !1674, line: 445, baseType: !1685, size: 8, offset: 408)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1673, file: !1674, line: 446, baseType: !1685, size: 8, offset: 416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1673, file: !1674, line: 447, baseType: !1685, size: 8, offset: 424)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1673, file: !1674, line: 448, baseType: !1685, size: 8, offset: 432)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1673, file: !1674, line: 449, baseType: !1685, size: 8, offset: 440)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1673, file: !1674, line: 450, baseType: !1685, size: 8, offset: 448)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1673, file: !1674, line: 451, baseType: !1685, size: 8, offset: 456)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1673, file: !1674, line: 452, baseType: !1685, size: 8, offset: 464)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1673, file: !1674, line: 453, baseType: !1685, size: 8, offset: 472)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1673, file: !1674, line: 454, baseType: !1685, size: 8, offset: 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1673, file: !1674, line: 455, baseType: !1685, size: 8, offset: 488)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1673, file: !1674, line: 456, baseType: !1685, size: 8, offset: 496)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1673, file: !1674, line: 457, baseType: !1685, size: 8, offset: 504)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1673, file: !1674, line: 458, baseType: !1685, size: 8, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1673, file: !1674, line: 459, baseType: !1685, size: 8, offset: 520)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1673, file: !1674, line: 460, baseType: !1685, size: 8, offset: 528)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1673, file: !1674, line: 461, baseType: !1685, size: 8, offset: 536)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1673, file: !1674, line: 462, baseType: !1685, size: 8, offset: 544)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1673, file: !1674, line: 463, baseType: !1685, size: 8, offset: 552)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1673, file: !1674, line: 464, baseType: !1685, size: 8, offset: 560)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1673, file: !1674, line: 465, baseType: !1685, size: 8, offset: 568)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1673, file: !1674, line: 466, baseType: !1685, size: 8, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1673, file: !1674, line: 467, baseType: !1685, size: 8, offset: 584)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1673, file: !1674, line: 468, baseType: !1685, size: 8, offset: 592)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1673, file: !1674, line: 469, baseType: !1685, size: 8, offset: 600)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1673, file: !1674, line: 470, baseType: !1685, size: 8, offset: 608)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1673, file: !1674, line: 471, baseType: !1685, size: 8, offset: 616)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1673, file: !1674, line: 472, baseType: !1685, size: 8, offset: 624)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1673, file: !1674, line: 473, baseType: !1685, size: 8, offset: 632)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1673, file: !1674, line: 474, baseType: !1685, size: 8, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1673, file: !1674, line: 475, baseType: !1685, size: 8, offset: 648)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1673, file: !1674, line: 476, baseType: !1685, size: 8, offset: 656)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1673, file: !1674, line: 477, baseType: !1685, size: 8, offset: 664)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1673, file: !1674, line: 478, baseType: !1685, size: 8, offset: 672)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1673, file: !1674, line: 479, baseType: !1685, size: 8, offset: 680)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1673, file: !1674, line: 480, baseType: !1685, size: 8, offset: 688)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1673, file: !1674, line: 481, baseType: !1685, size: 8, offset: 696)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1673, file: !1674, line: 482, baseType: !1685, size: 8, offset: 704)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1673, file: !1674, line: 483, baseType: !1685, size: 8, offset: 712)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1673, file: !1674, line: 484, baseType: !1685, size: 8, offset: 720)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1673, file: !1674, line: 485, baseType: !1685, size: 8, offset: 728)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1673, file: !1674, line: 486, baseType: !1685, size: 8, offset: 736)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1673, file: !1674, line: 487, baseType: !1685, size: 8, offset: 744)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1673, file: !1674, line: 488, baseType: !1685, size: 8, offset: 752)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1673, file: !1674, line: 489, baseType: !1685, size: 8, offset: 760)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1673, file: !1674, line: 490, baseType: !1685, size: 8, offset: 768)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1673, file: !1674, line: 491, baseType: !1685, size: 8, offset: 776)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1673, file: !1674, line: 492, baseType: !1685, size: 8, offset: 784)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1673, file: !1674, line: 493, baseType: !1685, size: 8, offset: 792)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1673, file: !1674, line: 494, baseType: !1685, size: 8, offset: 800)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1673, file: !1674, line: 495, baseType: !1685, size: 8, offset: 808)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1673, file: !1674, line: 496, baseType: !1685, size: 8, offset: 816)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1673, file: !1674, line: 497, baseType: !1685, size: 8, offset: 824)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1673, file: !1674, line: 498, baseType: !1685, size: 8, offset: 832)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1673, file: !1674, line: 499, baseType: !1685, size: 8, offset: 840)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1673, file: !1674, line: 500, baseType: !1685, size: 8, offset: 848)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1673, file: !1674, line: 501, baseType: !1685, size: 8, offset: 856)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1673, file: !1674, line: 502, baseType: !1685, size: 8, offset: 864)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1673, file: !1674, line: 503, baseType: !1685, size: 8, offset: 872)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1673, file: !1674, line: 504, baseType: !1685, size: 8, offset: 880)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1673, file: !1674, line: 505, baseType: !1685, size: 8, offset: 888)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1673, file: !1674, line: 506, baseType: !1685, size: 8, offset: 896)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1673, file: !1674, line: 507, baseType: !1685, size: 8, offset: 904)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1673, file: !1674, line: 508, baseType: !1685, size: 8, offset: 912)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1673, file: !1674, line: 509, baseType: !1685, size: 8, offset: 920)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1673, file: !1674, line: 510, baseType: !1685, size: 8, offset: 928)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1673, file: !1674, line: 511, baseType: !1685, size: 8, offset: 936)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1673, file: !1674, line: 512, baseType: !1685, size: 8, offset: 944)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1673, file: !1674, line: 513, baseType: !1685, size: 8, offset: 952)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1673, file: !1674, line: 514, baseType: !1685, size: 8, offset: 960)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1673, file: !1674, line: 515, baseType: !1685, size: 8, offset: 968)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1673, file: !1674, line: 516, baseType: !1685, size: 8, offset: 976)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1673, file: !1674, line: 517, baseType: !1685, size: 8, offset: 984)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1673, file: !1674, line: 518, baseType: !1685, size: 8, offset: 992)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1673, file: !1674, line: 519, baseType: !1685, size: 8, offset: 1000)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1673, file: !1674, line: 520, baseType: !1685, size: 8, offset: 1008)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1673, file: !1674, line: 521, baseType: !1685, size: 8, offset: 1016)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1673, file: !1674, line: 522, baseType: !1685, size: 8, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1673, file: !1674, line: 523, baseType: !1685, size: 8, offset: 1032)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1673, file: !1674, line: 524, baseType: !1685, size: 8, offset: 1040)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1673, file: !1674, line: 525, baseType: !1685, size: 8, offset: 1048)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1673, file: !1674, line: 526, baseType: !1685, size: 8, offset: 1056)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1673, file: !1674, line: 527, baseType: !1685, size: 8, offset: 1064)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1673, file: !1674, line: 528, baseType: !1685, size: 8, offset: 1072)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1673, file: !1674, line: 529, baseType: !1685, size: 8, offset: 1080)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1673, file: !1674, line: 530, baseType: !1685, size: 8, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1673, file: !1674, line: 531, baseType: !1685, size: 8, offset: 1096)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1673, file: !1674, line: 532, baseType: !1685, size: 8, offset: 1104)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1673, file: !1674, line: 533, baseType: !1685, size: 8, offset: 1112)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1673, file: !1674, line: 534, baseType: !1685, size: 8, offset: 1120)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1673, file: !1674, line: 535, baseType: !1685, size: 8, offset: 1128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1673, file: !1674, line: 536, baseType: !1685, size: 8, offset: 1136)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1673, file: !1674, line: 537, baseType: !1685, size: 8, offset: 1144)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1673, file: !1674, line: 538, baseType: !1685, size: 8, offset: 1152)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1673, file: !1674, line: 539, baseType: !1685, size: 8, offset: 1160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1673, file: !1674, line: 540, baseType: !1685, size: 8, offset: 1168)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1673, file: !1674, line: 541, baseType: !1685, size: 8, offset: 1176)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1673, file: !1674, line: 542, baseType: !1685, size: 8, offset: 1184)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1673, file: !1674, line: 543, baseType: !1685, size: 8, offset: 1192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1673, file: !1674, line: 544, baseType: !1685, size: 8, offset: 1200)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1673, file: !1674, line: 545, baseType: !1685, size: 8, offset: 1208)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1673, file: !1674, line: 546, baseType: !1685, size: 8, offset: 1216)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1673, file: !1674, line: 547, baseType: !1685, size: 8, offset: 1224)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1673, file: !1674, line: 548, baseType: !1685, size: 8, offset: 1232)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1673, file: !1674, line: 549, baseType: !1685, size: 8, offset: 1240)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1673, file: !1674, line: 550, baseType: !1685, size: 8, offset: 1248)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1673, file: !1674, line: 551, baseType: !1685, size: 8, offset: 1256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1673, file: !1674, line: 552, baseType: !1685, size: 8, offset: 1264)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1673, file: !1674, line: 553, baseType: !1685, size: 8, offset: 1272)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1673, file: !1674, line: 554, baseType: !1685, size: 8, offset: 1280)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1673, file: !1674, line: 555, baseType: !1685, size: 8, offset: 1288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1673, file: !1674, line: 556, baseType: !1685, size: 8, offset: 1296)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1673, file: !1674, line: 557, baseType: !1685, size: 8, offset: 1304)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1673, file: !1674, line: 558, baseType: !1685, size: 8, offset: 1312)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1673, file: !1674, line: 559, baseType: !1685, size: 8, offset: 1320)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1673, file: !1674, line: 560, baseType: !1685, size: 8, offset: 1328)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1673, file: !1674, line: 561, baseType: !1685, size: 8, offset: 1336)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1673, file: !1674, line: 562, baseType: !1685, size: 8, offset: 1344)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1673, file: !1674, line: 563, baseType: !1685, size: 8, offset: 1352)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1673, file: !1674, line: 564, baseType: !1685, size: 8, offset: 1360)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1673, file: !1674, line: 565, baseType: !1685, size: 8, offset: 1368)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1673, file: !1674, line: 566, baseType: !1685, size: 8, offset: 1376)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1673, file: !1674, line: 567, baseType: !1685, size: 8, offset: 1384)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1673, file: !1674, line: 568, baseType: !1685, size: 8, offset: 1392)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1673, file: !1674, line: 569, baseType: !1685, size: 8, offset: 1400)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1673, file: !1674, line: 570, baseType: !1685, size: 8, offset: 1408)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1673, file: !1674, line: 571, baseType: !1685, size: 8, offset: 1416)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1673, file: !1674, line: 572, baseType: !1685, size: 8, offset: 1424)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1673, file: !1674, line: 573, baseType: !1685, size: 8, offset: 1432)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1673, file: !1674, line: 574, baseType: !1685, size: 8, offset: 1440)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !895, file: !158, line: 3405, baseType: !1841, size: 384)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1841, file: !158, line: 3353, baseType: !931, size: 192)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1841, file: !158, line: 3356, baseType: !1845, size: 192, offset: 192)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1674, line: 578, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1845, file: !1674, line: 580, baseType: !765, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1845, file: !1674, line: 581, baseType: !765, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1845, file: !1674, line: 582, baseType: !765, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1845, file: !1674, line: 583, baseType: !765, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1845, file: !1674, line: 584, baseType: !764, size: 8, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1845, file: !1674, line: 585, baseType: !764, size: 8, offset: 136)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1845, file: !1674, line: 586, baseType: !764, size: 8, offset: 144)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1845, file: !1674, line: 587, baseType: !764, size: 8, offset: 152)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1845, file: !1674, line: 588, baseType: !764, size: 8, offset: 160)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1845, file: !1674, line: 589, baseType: !764, size: 8, offset: 168)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1845, file: !1674, line: 590, baseType: !764, size: 8, offset: 176)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !798, file: !396, line: 178, baseType: !1312, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !798, file: !396, line: 179, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !396, line: 150, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !396, line: 142, size: 320, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1868, !1869}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1862, file: !396, line: 144, baseType: !893, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1862, file: !396, line: 145, baseType: !777, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1862, file: !396, line: 146, baseType: !777, size: 64, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1862, file: !396, line: 147, baseType: !1520, size: 32, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1862, file: !396, line: 148, baseType: !7, size: 32, offset: 224)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1862, file: !396, line: 149, baseType: !764, size: 8, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !798, file: !396, line: 180, baseType: !1871, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !396, line: 162, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !396, line: 159, size: 128, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1873, file: !396, line: 160, baseType: !893, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1873, file: !396, line: 161, baseType: !864, size: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !798, file: !396, line: 181, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !396, line: 181, flags: DIFlagFwdDecl)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !793, file: !396, line: 317, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 64, elements: !812)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !793, file: !396, line: 318, baseType: !1883, size: 320)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !396, line: 188, size: 320, elements: !1884)
!1884 = !{!1885, !1887, !1910}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1883, file: !396, line: 190, baseType: !1886, size: 192)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 192, elements: !964)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1883, file: !396, line: 193, baseType: !1888, size: 64, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !396, line: 206, size: 320, elements: !1890)
!1890 = !{!1891, !1895, !1896, !1897, !1909}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1889, file: !396, line: 208, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !778, line: 62, baseType: !1894)
!1894 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !778, line: 61, flags: DIFlagFwdDecl)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1889, file: !396, line: 211, baseType: !7, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1889, file: !396, line: 214, baseType: !864, size: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1889, file: !396, line: 224, baseType: !1898, size: 64, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !396, line: 202, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !396, line: 202, size: 128, elements: !1901)
!1901 = !{!1902}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1900, file: !396, line: 202, baseType: !1903, size: 128)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !396, line: 200, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !396, line: 200, size: 128, elements: !1905)
!1905 = !{!1906, !1907, !1908}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1904, file: !396, line: 200, baseType: !7, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1904, file: !396, line: 200, baseType: !7, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1904, file: !396, line: 200, baseType: !811, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1889, file: !396, line: 234, baseType: !1898, size: 64, offset: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1883, file: !396, line: 197, baseType: !864, size: 64, offset: 256)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !793, file: !396, line: 319, baseType: !953, size: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !793, file: !396, line: 320, baseType: !972, size: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !774, file: !385, line: 466, baseType: !777, size: 64, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !774, file: !385, line: 469, baseType: !777, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !774, file: !385, line: 472, baseType: !777, size: 64, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !774, file: !385, line: 480, baseType: !765, size: 32, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !774, file: !385, line: 483, baseType: !765, size: 32, offset: 288)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !774, file: !385, line: 487, baseType: !765, size: 32, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !774, file: !385, line: 498, baseType: !777, size: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !774, file: !385, line: 503, baseType: !777, size: 64, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !774, file: !385, line: 509, baseType: !777, size: 64, offset: 512)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !774, file: !385, line: 515, baseType: !777, size: 64, offset: 576)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !774, file: !385, line: 519, baseType: !384, size: 32, offset: 640)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !774, file: !385, line: 522, baseType: !777, size: 64, offset: 704)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !774, file: !385, line: 526, baseType: !765, size: 32, offset: 768)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !774, file: !385, line: 532, baseType: !1927, size: 64, offset: 832)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !385, line: 440, size: 320, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933, !1934, !1935}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1928, file: !385, line: 442, baseType: !777, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !1928, file: !385, line: 443, baseType: !777, size: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !1928, file: !385, line: 444, baseType: !777, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !1928, file: !385, line: 445, baseType: !777, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !1928, file: !385, line: 446, baseType: !765, size: 32, offset: 256)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !1928, file: !385, line: 447, baseType: !765, size: 32, offset: 288)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !774, file: !385, line: 536, baseType: !1937, size: 256, offset: 896)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !142, line: 34, baseType: !1938)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !833, line: 84, baseType: !832)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !774, file: !385, line: 539, baseType: !1937, size: 256, offset: 1152)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !774, file: !385, line: 542, baseType: !390, size: 32, offset: 1408)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !774, file: !385, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "region", file: !385, line: 1302, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 1290, size: 96, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "rgn_nr_blocks", scope: !1945, file: !385, line: 1293, baseType: !765, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "rgn_blocks", scope: !1945, file: !385, line: 1295, baseType: !765, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "dont_calc_deps", scope: !1945, file: !385, line: 1298, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "has_real_ebb", scope: !1945, file: !385, line: 1300, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !1954)
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1953, file: !142, line: 680, baseType: !7, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !1953, file: !142, line: 681, baseType: !1957, size: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !385, line: 218, baseType: !765)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "candidate", file: !3, line: 151, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 143, size: 320, elements: !1962)
!1962 = !{!1963, !1964, !1965, !1966, !1973}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !1961, file: !3, line: 145, baseType: !768, size: 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "is_speculative", scope: !1961, file: !3, line: 146, baseType: !768, size: 8, offset: 8)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "src_prob", scope: !1961, file: !3, line: 147, baseType: !765, size: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "split_bbs", scope: !1961, file: !3, line: 148, baseType: !1967, size: 128, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "bblst", file: !3, line: 141, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 136, size: 128, elements: !1969)
!1969 = !{!1970, !1972}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "first_member", scope: !1968, file: !3, line: 138, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "nr_members", scope: !1968, file: !3, line: 139, baseType: !765, size: 32, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "update_bbs", scope: !1961, file: !3, line: 149, baseType: !1967, size: 128, offset: 192)
!1974 = !{!0, !1975, !1977, !1979, !1981, !1983, !1985, !2013, !2015, !2017, !2019, !2021, !2023, !2025, !2027, !2029, !2042, !2044, !2046, !2048, !2052, !2054, !2056, !2077, !2116, !2165, !2167, !2169, !2171, !2210, !2213, !2215, !2218, !2220, !2222, !2224, !2226, !2228, !2230, !2232, !2234}
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "rgn_table", scope: !2, file: !3, line: 88, type: !1943, isLocal: false, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "rgn_bb_table", scope: !2, file: !3, line: 91, type: !772, isLocal: false, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "block_to_bb", scope: !2, file: !3, line: 97, type: !772, isLocal: false, isDefinition: true)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "containing_rgn", scope: !2, file: !3, line: 100, type: !772, isLocal: false, isDefinition: true)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "ebb_head", scope: !2, file: !3, line: 106, type: !772, isLocal: false, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "pass_sched", scope: !2, file: !3, line: 3549, type: !1987, isLocal: false, isDefinition: true)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !573, line: 162, size: 640, elements: !1988)
!1988 = !{!1989}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1987, file: !573, line: 164, baseType: !1990, size: 640)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !573, line: 114, size: 640, elements: !1991)
!1991 = !{!1992, !1993, !1994, !1998, !2002, !2004, !2005, !2006, !2008, !2009, !2010, !2011, !2012}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1990, file: !573, line: 117, baseType: !572, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1990, file: !573, line: 121, baseType: !770, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1990, file: !573, line: 125, baseType: !1995, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!764}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1990, file: !573, line: 130, baseType: !1999, size: 64, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{!7}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1990, file: !573, line: 133, baseType: !2003, size: 64, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1990, file: !573, line: 136, baseType: !2003, size: 64, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1990, file: !573, line: 139, baseType: !765, size: 32, offset: 384)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1990, file: !573, line: 143, baseType: !2007, size: 32, offset: 416)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !580, line: 80, baseType: !579)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1990, file: !573, line: 146, baseType: !7, size: 32, offset: 448)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1990, file: !573, line: 147, baseType: !7, size: 32, offset: 480)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1990, file: !573, line: 148, baseType: !7, size: 32, offset: 512)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1990, file: !573, line: 151, baseType: !7, size: 32, offset: 544)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1990, file: !573, line: 152, baseType: !7, size: 32, offset: 576)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "pass_sched2", scope: !2, file: !3, line: 3571, type: !1987, isLocal: false, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "nr_inter", scope: !2, file: !3, line: 80, type: !765, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "nr_spec", scope: !2, file: !3, line: 80, type: !765, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "min_spec_prob", scope: !2, file: !3, line: 110, type: !765, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "current_nr_blocks", scope: !2, file: !3, line: 117, type: !765, isLocal: false, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "current_blocks", scope: !2, file: !3, line: 118, type: !765, isLocal: false, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "candidate_table", scope: !2, file: !3, line: 153, type: !1959, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "target_bb", scope: !2, file: !3, line: 161, type: !765, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "dom", scope: !2, file: !3, line: 184, type: !2031, isLocal: true, isDefinition: true)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2033, line: 45, baseType: !2034)
!2033 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2033, line: 39, size: 192, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2035, file: !2033, line: 41, baseType: !763, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2035, file: !2033, line: 42, baseType: !7, size: 32, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2035, file: !2033, line: 43, baseType: !7, size: 32, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2035, file: !2033, line: 44, baseType: !2041, size: 64, offset: 128)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 64, elements: !812)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "prob", scope: !2, file: !3, line: 195, type: !772, isLocal: true, isDefinition: true)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "rgn_nr_edges", scope: !2, file: !3, line: 201, type: !765, isLocal: true, isDefinition: true)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "rgn_edges", scope: !2, file: !3, line: 204, type: !1942, isLocal: true, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "pot_split", scope: !2, file: !3, line: 216, type: !2050, isLocal: true, isDefinition: true)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "edgeset", file: !3, line: 198, baseType: !2032)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "ancestor_edges", scope: !2, file: !3, line: 219, type: !2050, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "not_in_df", scope: !2, file: !3, line: 1647, type: !1938, isLocal: true, isDefinition: true)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "rgn_common_sched_info", scope: !2, file: !3, line: 2330, type: !2058, isLocal: true, isDefinition: true)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "common_sched_info_def", file: !385, line: 81, size: 320, elements: !2059)
!2059 = !{!2060, !2064, !2068, !2072, !2076}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fix_recovery_cfg", scope: !2058, file: !385, line: 89, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !765, !765, !765}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "add_block", scope: !2058, file: !385, line: 96, baseType: !2065, size: 64, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{null, !1311, !1311}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_number_of_insns", scope: !2058, file: !385, line: 99, baseType: !2069, size: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!765, !1311}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "luid_for_non_insn", scope: !2058, file: !385, line: 105, baseType: !2073, size: 64, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!765, !777}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sched_pass_id", scope: !2058, file: !385, line: 108, baseType: !755, size: 32, offset: 256)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(name: "rgn_sched_deps_info", scope: !2, file: !3, line: 2335, type: !2079, isLocal: true, isDefinition: true)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_deps_info_def", file: !385, line: 1149, size: 832, elements: !2080)
!2080 = !{!2081, !2087, !2091, !2095, !2096, !2097, !2098, !2099, !2103, !2104, !2105, !2109, !2113, !2114, !2115}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "compute_jump_reg_dependencies", scope: !2079, file: !385, line: 1154, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !777, !2085, !2085, !2085}
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !142, line: 37, baseType: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !778, line: 47, baseType: !831)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "start_insn", scope: !2079, file: !385, line: 1157, baseType: !2088, size: 64, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{null, !777}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "finish_insn", scope: !2079, file: !385, line: 1160, baseType: !2092, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "start_lhs", scope: !2079, file: !385, line: 1163, baseType: !2088, size: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "finish_lhs", scope: !2079, file: !385, line: 1166, baseType: !2092, size: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "start_rhs", scope: !2079, file: !385, line: 1169, baseType: !2088, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "finish_rhs", scope: !2079, file: !385, line: 1172, baseType: !2092, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_set", scope: !2079, file: !385, line: 1175, baseType: !2100, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{null, !765}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_clobber", scope: !2079, file: !385, line: 1178, baseType: !2100, size: 64, offset: 512)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_use", scope: !2079, file: !385, line: 1181, baseType: !2100, size: 64, offset: 576)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "note_mem_dep", scope: !2079, file: !385, line: 1185, baseType: !2106, size: 64, offset: 640)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{null, !777, !777, !777, !1958}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "note_dep", scope: !2079, file: !385, line: 1188, baseType: !2110, size: 64, offset: 704)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{null, !777, !1958}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "use_cselib", scope: !2079, file: !385, line: 1194, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "use_deps_list", scope: !2079, file: !385, line: 1198, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "generate_spec_deps", scope: !2079, file: !385, line: 1202, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "rgn_sched_info", scope: !2, file: !3, line: 2393, type: !2118, isLocal: true, isDefinition: true)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "haifa_sched_info", file: !385, line: 556, size: 1088, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2126, !2130, !2134, !2141, !2142, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2156, !2160, !2164}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "init_ready_list", scope: !2118, file: !385, line: 560, baseType: !2092, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "can_schedule_ready_p", scope: !2118, file: !385, line: 563, baseType: !2073, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_more_p", scope: !2118, file: !385, line: 565, baseType: !2123, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!765}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "new_ready", scope: !2118, file: !385, line: 571, baseType: !2127, size: 64, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!1958, !777, !1958}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !2118, file: !385, line: 575, baseType: !2131, size: 64, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!765, !777, !777}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "print_insn", scope: !2118, file: !385, line: 580, baseType: !2135, size: 64, offset: 320)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!770, !2138, !765}
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !778, line: 51, baseType: !2139)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "contributes_to_priority", scope: !2118, file: !385, line: 583, baseType: !2131, size: 64, offset: 384)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "insn_finishes_block_p", scope: !2118, file: !385, line: 587, baseType: !2143, size: 64, offset: 448)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!764, !777}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "prev_head", scope: !2118, file: !385, line: 590, baseType: !777, size: 64, offset: 512)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next_tail", scope: !2118, file: !385, line: 590, baseType: !777, size: 64, offset: 576)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2118, file: !385, line: 594, baseType: !777, size: 64, offset: 640)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2118, file: !385, line: 594, baseType: !777, size: 64, offset: 704)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "queue_must_finish_empty", scope: !2118, file: !385, line: 597, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sched_max_insns_priority", scope: !2118, file: !385, line: 600, baseType: !765, size: 32, offset: 800)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "add_remove_insn", scope: !2118, file: !385, line: 606, baseType: !2153, size: 64, offset: 832)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{null, !777, !765}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "begin_schedule_ready", scope: !2118, file: !385, line: 611, baseType: !2157, size: 64, offset: 896)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !777, !777}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "advance_target_bb", scope: !2118, file: !385, line: 617, baseType: !2161, size: 64, offset: 960)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!1311, !1311, !777}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2118, file: !385, line: 621, baseType: !7, size: 32, offset: 1024)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "insn_referenced", scope: !2, file: !3, line: 2427, type: !2032, isLocal: true, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "bb_deps", scope: !2, file: !3, line: 2570, type: !773, isLocal: true, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "rgn_n_insns", scope: !2, file: !3, line: 2895, type: !765, isLocal: true, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "null_link", scope: !2173, file: !385, line: 1430, type: !2184, isLocal: true, isDefinition: true)
!2173 = distinct !DISubprogram(name: "sd_iterator_start", scope: !385, file: !385, line: 1427, type: !2174, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2206)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!2176, !777, !2180}
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_iterator_def", file: !385, line: 1414, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sd_iterator", file: !385, line: 1395, size: 256, elements: !2178)
!2178 = !{!2179, !2181, !2182, !2205}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2177, file: !385, line: 1398, baseType: !2180, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_list_types_def", file: !385, line: 1390, baseType: !765)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2177, file: !385, line: 1401, baseType: !777, size: 64, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "linkp", scope: !2177, file: !385, line: 1408, baseType: !2183, size: 64, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_link_t", file: !385, line: 280, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_link", file: !385, line: 265, size: 192, elements: !2187)
!2187 = !{!2188, !2202, !2203}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2186, file: !385, line: 268, baseType: !2189, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_node_t", file: !385, line: 261, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_node", file: !385, line: 405, size: 576, elements: !2192)
!2192 = !{!2193, !2194, !2201}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2191, file: !385, line: 408, baseType: !2186, size: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !2191, file: !385, line: 411, baseType: !2195, size: 192, offset: 192)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep", file: !385, line: 227, size: 192, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !2195, file: !385, line: 230, baseType: !777, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !2195, file: !385, line: 233, baseType: !777, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2195, file: !385, line: 237, baseType: !538, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2195, file: !385, line: 241, baseType: !1958, size: 32, offset: 160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "forw", scope: !2191, file: !385, line: 414, baseType: !2186, size: 192, offset: 384)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2186, file: !385, line: 271, baseType: !2185, size: 64, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "prev_nextp", scope: !2186, file: !385, line: 278, baseType: !2204, size: 64, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_p", scope: !2177, file: !385, line: 1411, baseType: !764, size: 8, offset: 192)
!2206 = !{!2207, !2208, !2209}
!2207 = !DILocalVariable(name: "insn", arg: 1, scope: !2173, file: !385, line: 1427, type: !777)
!2208 = !DILocalVariable(name: "types", arg: 2, scope: !2173, file: !385, line: 1427, type: !2180)
!2209 = !DILocalVariable(name: "i", scope: !2173, file: !385, line: 1432, type: !2176)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "rgn_const_sched_deps_info", scope: !2, file: !3, line: 2339, type: !2212, isLocal: true, isDefinition: true)
!2212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "rgn_const_sel_sched_deps_info", scope: !2, file: !3, line: 2347, type: !2212, isLocal: true, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "rgn_const_sched_info", scope: !2, file: !3, line: 2370, type: !2217, isLocal: true, isDefinition: true)
!2217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2118)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "target_n_insns", scope: !2, file: !3, line: 2068, type: !765, isLocal: true, isDefinition: true)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "sched_target_n_insns", scope: !2, file: !3, line: 2066, type: !765, isLocal: true, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "sched_n_insns", scope: !2, file: !3, line: 2070, type: !765, isLocal: true, isDefinition: true)
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "bblst_last", scope: !2, file: !3, line: 128, type: !765, isLocal: true, isDefinition: true)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "bblst_size", scope: !2, file: !3, line: 128, type: !765, isLocal: true, isDefinition: true)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "bblst_table", scope: !2, file: !3, line: 127, type: !1971, isLocal: true, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "edgelst_last", scope: !2, file: !3, line: 172, type: !765, isLocal: true, isDefinition: true)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "edgelst_table", scope: !2, file: !3, line: 171, type: !1942, isLocal: true, isDefinition: true)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "tmp", scope: !2236, file: !3, line: 2257, type: !2240, isLocal: true, isDefinition: true)
!2236 = distinct !DISubprogram(name: "rgn_print_insn", scope: !3, file: !3, line: 2255, type: !2136, scopeLine: 2256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2237)
!2237 = !{!2238, !2239}
!2238 = !DILocalVariable(name: "insn", arg: 1, scope: !2236, file: !3, line: 2255, type: !2138)
!2239 = !DILocalVariable(name: "aligned", arg: 2, scope: !2236, file: !3, line: 2255, type: !765)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 640, elements: !2241)
!2241 = !{!2242}
!2242 = !DISubrange(count: 80)
!2243 = !{i32 2, !"Dwarf Version", i32 4}
!2244 = !{i32 2, !"Debug Info Version", i32 3}
!2245 = !{i32 1, !"wchar_size", i32 4}
!2246 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2247 = distinct !DISubprogram(name: "vprintf", scope: !2248, file: !2248, line: 39, type: !2249, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2259)
!2248 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!765, !2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !770)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2253, file: !3, baseType: !7, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2253, file: !3, baseType: !7, size: 32, offset: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2253, file: !3, baseType: !769, size: 64, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2253, file: !3, baseType: !769, size: 64, offset: 128)
!2259 = !{!2260, !2261}
!2260 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2247, file: !2248, line: 39, type: !2251)
!2261 = !DILocalVariable(name: "__arg", arg: 2, scope: !2247, file: !2248, line: 39, type: !2252)
!2262 = !DILocation(line: 0, scope: !2247)
!2263 = !DILocation(line: 41, column: 20, scope: !2247)
!2264 = !DILocation(line: 41, column: 10, scope: !2247)
!2265 = !DILocation(line: 41, column: 3, scope: !2247)
!2266 = distinct !DISubprogram(name: "getchar", scope: !2248, file: !2248, line: 47, type: !2124, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!2267 = !{}
!2268 = !DILocation(line: 49, column: 16, scope: !2266)
!2269 = !DILocation(line: 49, column: 10, scope: !2266)
!2270 = !DILocation(line: 49, column: 3, scope: !2266)
!2271 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2248, file: !2248, line: 56, type: !2272, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!765, !2274}
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2276, line: 7, baseType: !2277)
!2276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2278, line: 49, size: 1728, elements: !2279)
!2278 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2279 = !{!2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2295, !2297, !2298, !2299, !2302, !2304, !2305, !2306, !2309, !2311, !2314, !2317, !2318, !2319, !2320, !2321}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2277, file: !2278, line: 51, baseType: !765, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2277, file: !2278, line: 54, baseType: !767, size: 64, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2277, file: !2278, line: 55, baseType: !767, size: 64, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2277, file: !2278, line: 56, baseType: !767, size: 64, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2277, file: !2278, line: 57, baseType: !767, size: 64, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2277, file: !2278, line: 58, baseType: !767, size: 64, offset: 320)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2277, file: !2278, line: 59, baseType: !767, size: 64, offset: 384)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2277, file: !2278, line: 60, baseType: !767, size: 64, offset: 448)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2277, file: !2278, line: 61, baseType: !767, size: 64, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2277, file: !2278, line: 64, baseType: !767, size: 64, offset: 576)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2277, file: !2278, line: 65, baseType: !767, size: 64, offset: 640)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2277, file: !2278, line: 66, baseType: !767, size: 64, offset: 704)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2277, file: !2278, line: 68, baseType: !2293, size: 64, offset: 768)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2278, line: 36, flags: DIFlagFwdDecl)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2277, file: !2278, line: 70, baseType: !2296, size: 64, offset: 832)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2277, file: !2278, line: 72, baseType: !765, size: 32, offset: 896)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2277, file: !2278, line: 73, baseType: !765, size: 32, offset: 928)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2277, file: !2278, line: 74, baseType: !2300, size: 64, offset: 960)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2301, line: 152, baseType: !864)
!2301 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2277, file: !2278, line: 77, baseType: !2303, size: 16, offset: 1024)
!2303 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2277, file: !2278, line: 78, baseType: !1685, size: 8, offset: 1040)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2277, file: !2278, line: 79, baseType: !988, size: 8, offset: 1048)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2277, file: !2278, line: 81, baseType: !2307, size: 64, offset: 1088)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2278, line: 43, baseType: null)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2277, file: !2278, line: 89, baseType: !2310, size: 64, offset: 1152)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2301, line: 153, baseType: !864)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2277, file: !2278, line: 91, baseType: !2312, size: 64, offset: 1216)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2278, line: 37, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2277, file: !2278, line: 92, baseType: !2315, size: 64, offset: 1280)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2278, line: 38, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2277, file: !2278, line: 93, baseType: !2296, size: 64, offset: 1344)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2277, file: !2278, line: 94, baseType: !769, size: 64, offset: 1408)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2277, file: !2278, line: 95, baseType: !1249, size: 64, offset: 1472)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2277, file: !2278, line: 96, baseType: !765, size: 32, offset: 1536)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2277, file: !2278, line: 98, baseType: !2322, size: 160, offset: 1568)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 160, elements: !2323)
!2323 = !{!2324}
!2324 = !DISubrange(count: 20)
!2325 = !{!2326}
!2326 = !DILocalVariable(name: "__fp", arg: 1, scope: !2271, file: !2248, line: 56, type: !2274)
!2327 = !DILocation(line: 0, scope: !2271)
!2328 = !DILocation(line: 58, column: 10, scope: !2271)
!2329 = !DILocation(line: 58, column: 3, scope: !2271)
!2330 = distinct !DISubprogram(name: "getc_unlocked", scope: !2248, file: !2248, line: 66, type: !2272, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2331)
!2331 = !{!2332}
!2332 = !DILocalVariable(name: "__fp", arg: 1, scope: !2330, file: !2248, line: 66, type: !2274)
!2333 = !DILocation(line: 0, scope: !2330)
!2334 = !DILocation(line: 68, column: 10, scope: !2330)
!2335 = !DILocation(line: 68, column: 3, scope: !2330)
!2336 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2248, file: !2248, line: 73, type: !2124, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!2337 = !DILocation(line: 75, column: 10, scope: !2336)
!2338 = !DILocation(line: 75, column: 3, scope: !2336)
!2339 = distinct !DISubprogram(name: "putchar", scope: !2248, file: !2248, line: 82, type: !2340, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2342)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{!765, !765}
!2342 = !{!2343}
!2343 = !DILocalVariable(name: "__c", arg: 1, scope: !2339, file: !2248, line: 82, type: !765)
!2344 = !DILocation(line: 0, scope: !2339)
!2345 = !DILocation(line: 84, column: 21, scope: !2339)
!2346 = !DILocation(line: 84, column: 10, scope: !2339)
!2347 = !DILocation(line: 84, column: 3, scope: !2339)
!2348 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2248, file: !2248, line: 91, type: !2349, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2351)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!765, !765, !2274}
!2351 = !{!2352, !2353}
!2352 = !DILocalVariable(name: "__c", arg: 1, scope: !2348, file: !2248, line: 91, type: !765)
!2353 = !DILocalVariable(name: "__stream", arg: 2, scope: !2348, file: !2248, line: 91, type: !2274)
!2354 = !DILocation(line: 0, scope: !2348)
!2355 = !DILocation(line: 93, column: 10, scope: !2348)
!2356 = !DILocation(line: 93, column: 3, scope: !2348)
!2357 = distinct !DISubprogram(name: "putc_unlocked", scope: !2248, file: !2248, line: 101, type: !2349, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2358)
!2358 = !{!2359, !2360}
!2359 = !DILocalVariable(name: "__c", arg: 1, scope: !2357, file: !2248, line: 101, type: !765)
!2360 = !DILocalVariable(name: "__stream", arg: 2, scope: !2357, file: !2248, line: 101, type: !2274)
!2361 = !DILocation(line: 0, scope: !2357)
!2362 = !DILocation(line: 103, column: 10, scope: !2357)
!2363 = !DILocation(line: 103, column: 3, scope: !2357)
!2364 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2248, file: !2248, line: 108, type: !2340, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2365 = !{!2366}
!2366 = !DILocalVariable(name: "__c", arg: 1, scope: !2364, file: !2248, line: 108, type: !765)
!2367 = !DILocation(line: 0, scope: !2364)
!2368 = !DILocation(line: 110, column: 10, scope: !2364)
!2369 = !DILocation(line: 110, column: 3, scope: !2364)
!2370 = distinct !DISubprogram(name: "getline", scope: !2248, file: !2248, line: 118, type: !2371, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2375)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!2373, !766, !2374, !2274}
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2301, line: 193, baseType: !864)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!2375 = !{!2376, !2377, !2378}
!2376 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2370, file: !2248, line: 118, type: !766)
!2377 = !DILocalVariable(name: "__n", arg: 2, scope: !2370, file: !2248, line: 118, type: !2374)
!2378 = !DILocalVariable(name: "__stream", arg: 3, scope: !2370, file: !2248, line: 118, type: !2274)
!2379 = !DILocation(line: 0, scope: !2370)
!2380 = !DILocation(line: 120, column: 10, scope: !2370)
!2381 = !DILocation(line: 120, column: 3, scope: !2370)
!2382 = distinct !DISubprogram(name: "feof_unlocked", scope: !2248, file: !2248, line: 128, type: !2272, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2383)
!2383 = !{!2384}
!2384 = !DILocalVariable(name: "__stream", arg: 1, scope: !2382, file: !2248, line: 128, type: !2274)
!2385 = !DILocation(line: 0, scope: !2382)
!2386 = !DILocation(line: 130, column: 10, scope: !2382)
!2387 = !DILocation(line: 130, column: 3, scope: !2382)
!2388 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2248, file: !2248, line: 135, type: !2272, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2389)
!2389 = !{!2390}
!2390 = !DILocalVariable(name: "__stream", arg: 1, scope: !2388, file: !2248, line: 135, type: !2274)
!2391 = !DILocation(line: 0, scope: !2388)
!2392 = !DILocation(line: 137, column: 10, scope: !2388)
!2393 = !DILocation(line: 137, column: 3, scope: !2388)
!2394 = distinct !DISubprogram(name: "tolower", scope: !2395, file: !2395, line: 207, type: !2340, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2396)
!2395 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2396 = !{!2397}
!2397 = !DILocalVariable(name: "__c", arg: 1, scope: !2394, file: !2395, line: 207, type: !765)
!2398 = !DILocation(line: 0, scope: !2394)
!2399 = !DILocation(line: 209, column: 22, scope: !2394)
!2400 = !DILocation(line: 209, column: 39, scope: !2394)
!2401 = !DILocation(line: 209, column: 38, scope: !2394)
!2402 = !DILocation(line: 209, column: 37, scope: !2394)
!2403 = !DILocation(line: 209, column: 10, scope: !2394)
!2404 = !DILocation(line: 209, column: 3, scope: !2394)
!2405 = distinct !DISubprogram(name: "toupper", scope: !2395, file: !2395, line: 213, type: !2340, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2406)
!2406 = !{!2407}
!2407 = !DILocalVariable(name: "__c", arg: 1, scope: !2405, file: !2395, line: 213, type: !765)
!2408 = !DILocation(line: 0, scope: !2405)
!2409 = !DILocation(line: 215, column: 22, scope: !2405)
!2410 = !DILocation(line: 215, column: 39, scope: !2405)
!2411 = !DILocation(line: 215, column: 38, scope: !2405)
!2412 = !DILocation(line: 215, column: 37, scope: !2405)
!2413 = !DILocation(line: 215, column: 10, scope: !2405)
!2414 = !DILocation(line: 215, column: 3, scope: !2405)
!2415 = distinct !DISubprogram(name: "atoi", scope: !2416, file: !2416, line: 361, type: !2417, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2419)
!2416 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!765, !770}
!2419 = !{!2420}
!2420 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2415, file: !2416, line: 361, type: !770)
!2421 = !DILocation(line: 0, scope: !2415)
!2422 = !DILocation(line: 363, column: 16, scope: !2415)
!2423 = !DILocation(line: 363, column: 10, scope: !2415)
!2424 = !DILocation(line: 363, column: 3, scope: !2415)
!2425 = distinct !DISubprogram(name: "atol", scope: !2416, file: !2416, line: 366, type: !2426, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2428)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!864, !770}
!2428 = !{!2429}
!2429 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2425, file: !2416, line: 366, type: !770)
!2430 = !DILocation(line: 0, scope: !2425)
!2431 = !DILocation(line: 368, column: 10, scope: !2425)
!2432 = !DILocation(line: 368, column: 3, scope: !2425)
!2433 = distinct !DISubprogram(name: "atoll", scope: !2416, file: !2416, line: 373, type: !2434, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2437)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!2436, !770}
!2436 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2437 = !{!2438}
!2438 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2433, file: !2416, line: 373, type: !770)
!2439 = !DILocation(line: 0, scope: !2433)
!2440 = !DILocation(line: 375, column: 10, scope: !2433)
!2441 = !DILocation(line: 375, column: 3, scope: !2433)
!2442 = distinct !DISubprogram(name: "bsearch", scope: !2443, file: !2443, line: 20, type: !2444, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2447)
!2443 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!769, !1234, !1234, !1249, !1249, !2446}
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2416, line: 808, baseType: !1238)
!2447 = !{!2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457}
!2448 = !DILocalVariable(name: "__key", arg: 1, scope: !2442, file: !2443, line: 20, type: !1234)
!2449 = !DILocalVariable(name: "__base", arg: 2, scope: !2442, file: !2443, line: 20, type: !1234)
!2450 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2442, file: !2443, line: 20, type: !1249)
!2451 = !DILocalVariable(name: "__size", arg: 4, scope: !2442, file: !2443, line: 20, type: !1249)
!2452 = !DILocalVariable(name: "__compar", arg: 5, scope: !2442, file: !2443, line: 21, type: !2446)
!2453 = !DILocalVariable(name: "__l", scope: !2442, file: !2443, line: 23, type: !1249)
!2454 = !DILocalVariable(name: "__u", scope: !2442, file: !2443, line: 23, type: !1249)
!2455 = !DILocalVariable(name: "__idx", scope: !2442, file: !2443, line: 23, type: !1249)
!2456 = !DILocalVariable(name: "__p", scope: !2442, file: !2443, line: 24, type: !1234)
!2457 = !DILocalVariable(name: "__comparison", scope: !2442, file: !2443, line: 25, type: !765)
!2458 = !DILocation(line: 0, scope: !2442)
!2459 = !DILocation(line: 29, column: 3, scope: !2442)
!2460 = !DILocation(line: 27, column: 7, scope: !2442)
!2461 = !DILocation(line: 29, column: 14, scope: !2442)
!2462 = !DILocation(line: 31, column: 20, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2442, file: !2443, line: 30, column: 5)
!2464 = !DILocation(line: 31, column: 27, scope: !2463)
!2465 = !DILocation(line: 32, column: 56, scope: !2463)
!2466 = !DILocation(line: 32, column: 47, scope: !2463)
!2467 = !DILocation(line: 33, column: 22, scope: !2463)
!2468 = !DILocation(line: 34, column: 24, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2463, file: !2443, line: 34, column: 11)
!2470 = !DILocation(line: 34, column: 11, scope: !2463)
!2471 = !DILocation(line: 36, column: 29, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !2443, line: 36, column: 16)
!2473 = !DILocation(line: 36, column: 16, scope: !2469)
!2474 = !DILocation(line: 37, column: 14, scope: !2472)
!2475 = distinct !{!2475, !2459, !2476}
!2476 = !DILocation(line: 40, column: 5, scope: !2442)
!2477 = !DILocation(line: 43, column: 1, scope: !2442)
!2478 = distinct !DISubprogram(name: "atof", scope: !2479, file: !2479, line: 25, type: !2480, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2483)
!2479 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!2482, !770}
!2482 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2483 = !{!2484}
!2484 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2478, file: !2479, line: 25, type: !770)
!2485 = !DILocation(line: 0, scope: !2478)
!2486 = !DILocation(line: 27, column: 10, scope: !2478)
!2487 = !DILocation(line: 27, column: 3, scope: !2478)
!2488 = distinct !DISubprogram(name: "strtoimax", scope: !2489, file: !2489, line: 324, type: !2490, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2496)
!2489 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!2492, !2251, !2495, !765}
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2493, line: 101, baseType: !2494)
!2493 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2301, line: 72, baseType: !864)
!2495 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !766)
!2496 = !{!2497, !2498, !2499}
!2497 = !DILocalVariable(name: "nptr", arg: 1, scope: !2488, file: !2489, line: 324, type: !2251)
!2498 = !DILocalVariable(name: "endptr", arg: 2, scope: !2488, file: !2489, line: 324, type: !2495)
!2499 = !DILocalVariable(name: "base", arg: 3, scope: !2488, file: !2489, line: 324, type: !765)
!2500 = !DILocation(line: 0, scope: !2488)
!2501 = !DILocation(line: 327, column: 10, scope: !2488)
!2502 = !DILocation(line: 327, column: 3, scope: !2488)
!2503 = distinct !DISubprogram(name: "strtoumax", scope: !2489, file: !2489, line: 336, type: !2504, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2508)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!2506, !2251, !2495, !765}
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2493, line: 102, baseType: !2507)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2301, line: 73, baseType: !847)
!2508 = !{!2509, !2510, !2511}
!2509 = !DILocalVariable(name: "nptr", arg: 1, scope: !2503, file: !2489, line: 336, type: !2251)
!2510 = !DILocalVariable(name: "endptr", arg: 2, scope: !2503, file: !2489, line: 336, type: !2495)
!2511 = !DILocalVariable(name: "base", arg: 3, scope: !2503, file: !2489, line: 336, type: !765)
!2512 = !DILocation(line: 0, scope: !2503)
!2513 = !DILocation(line: 339, column: 10, scope: !2503)
!2514 = !DILocation(line: 339, column: 3, scope: !2503)
!2515 = distinct !DISubprogram(name: "wcstoimax", scope: !2489, file: !2489, line: 348, type: !2516, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!2492, !2518, !2522, !765}
!2518 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2519)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2489, line: 34, baseType: !765)
!2522 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2523)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2525 = !{!2526, !2527, !2528}
!2526 = !DILocalVariable(name: "nptr", arg: 1, scope: !2515, file: !2489, line: 348, type: !2518)
!2527 = !DILocalVariable(name: "endptr", arg: 2, scope: !2515, file: !2489, line: 348, type: !2522)
!2528 = !DILocalVariable(name: "base", arg: 3, scope: !2515, file: !2489, line: 348, type: !765)
!2529 = !DILocation(line: 0, scope: !2515)
!2530 = !DILocation(line: 351, column: 10, scope: !2515)
!2531 = !DILocation(line: 351, column: 3, scope: !2515)
!2532 = distinct !DISubprogram(name: "wcstoumax", scope: !2489, file: !2489, line: 362, type: !2533, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2535)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!2506, !2518, !2522, !765}
!2535 = !{!2536, !2537, !2538}
!2536 = !DILocalVariable(name: "nptr", arg: 1, scope: !2532, file: !2489, line: 362, type: !2518)
!2537 = !DILocalVariable(name: "endptr", arg: 2, scope: !2532, file: !2489, line: 362, type: !2522)
!2538 = !DILocalVariable(name: "base", arg: 3, scope: !2532, file: !2489, line: 362, type: !765)
!2539 = !DILocation(line: 0, scope: !2532)
!2540 = !DILocation(line: 365, column: 10, scope: !2532)
!2541 = !DILocation(line: 365, column: 3, scope: !2532)
!2542 = distinct !DISubprogram(name: "stat", scope: !2543, file: !2543, line: 453, type: !2544, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2581)
!2543 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!765, !770, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2548, line: 46, size: 1152, elements: !2549)
!2548 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2549 = !{!2550, !2552, !2554, !2556, !2558, !2560, !2562, !2563, !2564, !2565, !2567, !2569, !2577, !2578, !2579}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2547, file: !2548, line: 48, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2301, line: 145, baseType: !847)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2547, file: !2548, line: 53, baseType: !2553, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2301, line: 148, baseType: !847)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2547, file: !2548, line: 61, baseType: !2555, size: 64, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2301, line: 151, baseType: !847)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2547, file: !2548, line: 62, baseType: !2557, size: 32, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2301, line: 150, baseType: !7)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2547, file: !2548, line: 64, baseType: !2559, size: 32, offset: 224)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2301, line: 146, baseType: !7)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2547, file: !2548, line: 65, baseType: !2561, size: 32, offset: 256)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2301, line: 147, baseType: !7)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2547, file: !2548, line: 67, baseType: !765, size: 32, offset: 288)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2547, file: !2548, line: 69, baseType: !2551, size: 64, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2547, file: !2548, line: 74, baseType: !2300, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2547, file: !2548, line: 78, baseType: !2566, size: 64, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2301, line: 174, baseType: !864)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2547, file: !2548, line: 80, baseType: !2568, size: 64, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2301, line: 179, baseType: !864)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2547, file: !2548, line: 91, baseType: !2570, size: 128, offset: 576)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2571, line: 10, size: 128, elements: !2572)
!2571 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2572 = !{!2573, !2575}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2570, file: !2571, line: 12, baseType: !2574, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2301, line: 160, baseType: !864)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2570, file: !2571, line: 16, baseType: !2576, size: 64, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2301, line: 196, baseType: !864)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2547, file: !2548, line: 92, baseType: !2570, size: 128, offset: 704)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2547, file: !2548, line: 93, baseType: !2570, size: 128, offset: 832)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2547, file: !2548, line: 106, baseType: !2580, size: 192, offset: 960)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, size: 192, elements: !964)
!2581 = !{!2582, !2583}
!2582 = !DILocalVariable(name: "__path", arg: 1, scope: !2542, file: !2543, line: 453, type: !770)
!2583 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2542, file: !2543, line: 453, type: !2546)
!2584 = !DILocation(line: 0, scope: !2542)
!2585 = !DILocation(line: 455, column: 10, scope: !2542)
!2586 = !DILocation(line: 455, column: 3, scope: !2542)
!2587 = distinct !DISubprogram(name: "lstat", scope: !2543, file: !2543, line: 460, type: !2544, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2588 = !{!2589, !2590}
!2589 = !DILocalVariable(name: "__path", arg: 1, scope: !2587, file: !2543, line: 460, type: !770)
!2590 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2587, file: !2543, line: 460, type: !2546)
!2591 = !DILocation(line: 0, scope: !2587)
!2592 = !DILocation(line: 462, column: 10, scope: !2587)
!2593 = !DILocation(line: 462, column: 3, scope: !2587)
!2594 = distinct !DISubprogram(name: "fstat", scope: !2543, file: !2543, line: 467, type: !2595, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2597)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!765, !765, !2546}
!2597 = !{!2598, !2599}
!2598 = !DILocalVariable(name: "__fd", arg: 1, scope: !2594, file: !2543, line: 467, type: !765)
!2599 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2594, file: !2543, line: 467, type: !2546)
!2600 = !DILocation(line: 0, scope: !2594)
!2601 = !DILocation(line: 469, column: 10, scope: !2594)
!2602 = !DILocation(line: 469, column: 3, scope: !2594)
!2603 = distinct !DISubprogram(name: "fstatat", scope: !2543, file: !2543, line: 474, type: !2604, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2606)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!765, !765, !770, !2546, !765}
!2606 = !{!2607, !2608, !2609, !2610}
!2607 = !DILocalVariable(name: "__fd", arg: 1, scope: !2603, file: !2543, line: 474, type: !765)
!2608 = !DILocalVariable(name: "__filename", arg: 2, scope: !2603, file: !2543, line: 474, type: !770)
!2609 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2603, file: !2543, line: 474, type: !2546)
!2610 = !DILocalVariable(name: "__flag", arg: 4, scope: !2603, file: !2543, line: 474, type: !765)
!2611 = !DILocation(line: 0, scope: !2603)
!2612 = !DILocation(line: 477, column: 10, scope: !2603)
!2613 = !DILocation(line: 477, column: 3, scope: !2603)
!2614 = distinct !DISubprogram(name: "mknod", scope: !2543, file: !2543, line: 483, type: !2615, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2617)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!765, !770, !2557, !2551}
!2617 = !{!2618, !2619, !2620}
!2618 = !DILocalVariable(name: "__path", arg: 1, scope: !2614, file: !2543, line: 483, type: !770)
!2619 = !DILocalVariable(name: "__mode", arg: 2, scope: !2614, file: !2543, line: 483, type: !2557)
!2620 = !DILocalVariable(name: "__dev", arg: 3, scope: !2614, file: !2543, line: 483, type: !2551)
!2621 = !DILocation(line: 0, scope: !2614)
!2622 = !DILocation(line: 485, column: 10, scope: !2614)
!2623 = !DILocation(line: 485, column: 3, scope: !2614)
!2624 = distinct !DISubprogram(name: "mknodat", scope: !2543, file: !2543, line: 491, type: !2625, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2627)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!765, !765, !770, !2557, !2551}
!2627 = !{!2628, !2629, !2630, !2631}
!2628 = !DILocalVariable(name: "__fd", arg: 1, scope: !2624, file: !2543, line: 491, type: !765)
!2629 = !DILocalVariable(name: "__path", arg: 2, scope: !2624, file: !2543, line: 491, type: !770)
!2630 = !DILocalVariable(name: "__mode", arg: 3, scope: !2624, file: !2543, line: 491, type: !2557)
!2631 = !DILocalVariable(name: "__dev", arg: 4, scope: !2624, file: !2543, line: 491, type: !2551)
!2632 = !DILocation(line: 0, scope: !2624)
!2633 = !DILocation(line: 494, column: 10, scope: !2624)
!2634 = !DILocation(line: 494, column: 3, scope: !2624)
!2635 = distinct !DISubprogram(name: "stat64", scope: !2543, file: !2543, line: 502, type: !2636, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!765, !770, !2638}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2548, line: 119, size: 1152, elements: !2640)
!2640 = !{!2641, !2642, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2654, !2655, !2656, !2657}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2639, file: !2548, line: 121, baseType: !2551, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2639, file: !2548, line: 123, baseType: !2643, size: 64, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2301, line: 149, baseType: !847)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2639, file: !2548, line: 124, baseType: !2555, size: 64, offset: 128)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2639, file: !2548, line: 125, baseType: !2557, size: 32, offset: 192)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2639, file: !2548, line: 132, baseType: !2559, size: 32, offset: 224)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2639, file: !2548, line: 133, baseType: !2561, size: 32, offset: 256)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2639, file: !2548, line: 135, baseType: !765, size: 32, offset: 288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2639, file: !2548, line: 136, baseType: !2551, size: 64, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2639, file: !2548, line: 137, baseType: !2300, size: 64, offset: 384)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2639, file: !2548, line: 143, baseType: !2566, size: 64, offset: 448)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2639, file: !2548, line: 144, baseType: !2653, size: 64, offset: 512)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2301, line: 180, baseType: !864)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2639, file: !2548, line: 152, baseType: !2570, size: 128, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2639, file: !2548, line: 153, baseType: !2570, size: 128, offset: 704)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2639, file: !2548, line: 154, baseType: !2570, size: 128, offset: 832)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2639, file: !2548, line: 164, baseType: !2580, size: 192, offset: 960)
!2658 = !{!2659, !2660}
!2659 = !DILocalVariable(name: "__path", arg: 1, scope: !2635, file: !2543, line: 502, type: !770)
!2660 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2635, file: !2543, line: 502, type: !2638)
!2661 = !DILocation(line: 0, scope: !2635)
!2662 = !DILocation(line: 504, column: 10, scope: !2635)
!2663 = !DILocation(line: 504, column: 3, scope: !2635)
!2664 = distinct !DISubprogram(name: "lstat64", scope: !2543, file: !2543, line: 509, type: !2636, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2665)
!2665 = !{!2666, !2667}
!2666 = !DILocalVariable(name: "__path", arg: 1, scope: !2664, file: !2543, line: 509, type: !770)
!2667 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2664, file: !2543, line: 509, type: !2638)
!2668 = !DILocation(line: 0, scope: !2664)
!2669 = !DILocation(line: 511, column: 10, scope: !2664)
!2670 = !DILocation(line: 511, column: 3, scope: !2664)
!2671 = distinct !DISubprogram(name: "fstat64", scope: !2543, file: !2543, line: 516, type: !2672, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!765, !765, !2638}
!2674 = !{!2675, !2676}
!2675 = !DILocalVariable(name: "__fd", arg: 1, scope: !2671, file: !2543, line: 516, type: !765)
!2676 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2671, file: !2543, line: 516, type: !2638)
!2677 = !DILocation(line: 0, scope: !2671)
!2678 = !DILocation(line: 518, column: 10, scope: !2671)
!2679 = !DILocation(line: 518, column: 3, scope: !2671)
!2680 = distinct !DISubprogram(name: "fstatat64", scope: !2543, file: !2543, line: 523, type: !2681, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2683)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!765, !765, !770, !2638, !765}
!2683 = !{!2684, !2685, !2686, !2687}
!2684 = !DILocalVariable(name: "__fd", arg: 1, scope: !2680, file: !2543, line: 523, type: !765)
!2685 = !DILocalVariable(name: "__filename", arg: 2, scope: !2680, file: !2543, line: 523, type: !770)
!2686 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2680, file: !2543, line: 523, type: !2638)
!2687 = !DILocalVariable(name: "__flag", arg: 4, scope: !2680, file: !2543, line: 523, type: !765)
!2688 = !DILocation(line: 0, scope: !2680)
!2689 = !DILocation(line: 526, column: 10, scope: !2680)
!2690 = !DILocation(line: 526, column: 3, scope: !2680)
!2691 = distinct !DISubprogram(name: "debug_regions", scope: !3, file: !3, line: 358, type: !2093, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2692)
!2692 = !{!2693, !2694}
!2693 = !DILocalVariable(name: "rgn", scope: !2691, file: !3, line: 360, type: !765)
!2694 = !DILocalVariable(name: "bb", scope: !2691, file: !3, line: 360, type: !765)
!2695 = !DILocation(line: 362, column: 12, scope: !2691)
!2696 = !DILocation(line: 362, column: 3, scope: !2691)
!2697 = !DILocation(line: 0, scope: !2691)
!2698 = !DILocation(line: 363, column: 8, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 363, column: 3)
!2700 = !DILocation(line: 0, scope: !2699)
!2701 = !DILocation(line: 363, column: 23, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2699, file: !3, line: 363, column: 3)
!2703 = !DILocation(line: 363, column: 21, scope: !2702)
!2704 = !DILocation(line: 363, column: 3, scope: !2699)
!2705 = !DILocation(line: 365, column: 16, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 364, column: 5)
!2707 = !DILocation(line: 366, column: 9, scope: !2706)
!2708 = !DILocation(line: 366, column: 24, scope: !2706)
!2709 = !DILocation(line: 365, column: 7, scope: !2706)
!2710 = !DILocation(line: 367, column: 16, scope: !2706)
!2711 = !DILocation(line: 367, column: 7, scope: !2706)
!2712 = !DILocation(line: 371, column: 24, scope: !2706)
!2713 = !DILocation(line: 371, column: 22, scope: !2706)
!2714 = !DILocation(line: 373, column: 12, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 373, column: 7)
!2716 = !DILocation(line: 373, column: 25, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 373, column: 7)
!2718 = !DILocation(line: 0, scope: !2715)
!2719 = !DILocation(line: 373, column: 40, scope: !2717)
!2720 = !DILocation(line: 373, column: 23, scope: !2717)
!2721 = !DILocation(line: 0, scope: !2706)
!2722 = !DILocation(line: 373, column: 7, scope: !2715)
!2723 = !DILocation(line: 374, column: 38, scope: !2717)
!2724 = !DILocation(line: 374, column: 51, scope: !2717)
!2725 = !DILocation(line: 374, column: 66, scope: !2717)
!2726 = !DILocation(line: 374, column: 2, scope: !2717)
!2727 = !DILocation(line: 373, column: 57, scope: !2717)
!2728 = !DILocation(line: 373, column: 7, scope: !2717)
!2729 = distinct !{!2729, !2722, !2730}
!2730 = !DILocation(line: 374, column: 71, scope: !2715)
!2731 = !DILocation(line: 376, column: 7, scope: !2706)
!2732 = !DILocation(line: 363, column: 38, scope: !2702)
!2733 = !DILocation(line: 363, column: 3, scope: !2702)
!2734 = distinct !{!2734, !2704, !2735}
!2735 = !DILocation(line: 377, column: 5, scope: !2699)
!2736 = !DILocation(line: 378, column: 1, scope: !2691)
!2737 = distinct !DISubprogram(name: "debug_region", scope: !3, file: !3, line: 383, type: !2101, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2738)
!2738 = !{!2739, !2740}
!2739 = !DILocalVariable(name: "rgn", arg: 1, scope: !2737, file: !3, line: 383, type: !765)
!2740 = !DILocalVariable(name: "bb", scope: !2737, file: !3, line: 385, type: !765)
!2741 = !DILocation(line: 0, scope: !2737)
!2742 = !DILocation(line: 387, column: 12, scope: !2737)
!2743 = !DILocation(line: 387, column: 3, scope: !2737)
!2744 = !DILocation(line: 388, column: 12, scope: !2737)
!2745 = !DILocation(line: 389, column: 5, scope: !2737)
!2746 = !DILocation(line: 389, column: 20, scope: !2737)
!2747 = !DILocation(line: 388, column: 3, scope: !2737)
!2748 = !DILocation(line: 390, column: 12, scope: !2737)
!2749 = !DILocation(line: 390, column: 3, scope: !2737)
!2750 = !DILocation(line: 394, column: 20, scope: !2737)
!2751 = !DILocation(line: 394, column: 18, scope: !2737)
!2752 = !DILocation(line: 396, column: 8, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 396, column: 3)
!2754 = !DILocation(line: 396, column: 21, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 396, column: 3)
!2756 = !DILocation(line: 0, scope: !2753)
!2757 = !DILocation(line: 396, column: 36, scope: !2755)
!2758 = !DILocation(line: 396, column: 19, scope: !2755)
!2759 = !DILocation(line: 396, column: 3, scope: !2753)
!2760 = !DILocation(line: 397, column: 37, scope: !2755)
!2761 = !DILocation(line: 397, column: 50, scope: !2755)
!2762 = !DILocation(line: 397, column: 65, scope: !2755)
!2763 = !DILocation(line: 397, column: 5, scope: !2755)
!2764 = !DILocation(line: 396, column: 53, scope: !2755)
!2765 = !DILocation(line: 396, column: 3, scope: !2755)
!2766 = distinct !{!2766, !2759, !2767}
!2767 = !DILocation(line: 397, column: 70, scope: !2753)
!2768 = !DILocation(line: 399, column: 3, scope: !2737)
!2769 = !DILocation(line: 401, column: 8, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 401, column: 3)
!2771 = !DILocation(line: 0, scope: !2770)
!2772 = !DILocation(line: 401, column: 21, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 401, column: 3)
!2774 = !DILocation(line: 401, column: 36, scope: !2773)
!2775 = !DILocation(line: 401, column: 19, scope: !2773)
!2776 = !DILocation(line: 401, column: 3, scope: !2770)
!2777 = !DILocation(line: 403, column: 24, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 402, column: 5)
!2779 = !DILocation(line: 403, column: 37, scope: !2778)
!2780 = !DILocation(line: 403, column: 52, scope: !2778)
!2781 = !DILocation(line: 403, column: 7, scope: !2778)
!2782 = !DILocation(line: 404, column: 16, scope: !2778)
!2783 = !DILocation(line: 404, column: 7, scope: !2778)
!2784 = !DILocation(line: 401, column: 53, scope: !2773)
!2785 = !DILocation(line: 401, column: 3, scope: !2773)
!2786 = distinct !{!2786, !2776, !2787}
!2787 = !DILocation(line: 405, column: 5, scope: !2770)
!2788 = !DILocation(line: 407, column: 12, scope: !2737)
!2789 = !DILocation(line: 407, column: 3, scope: !2737)
!2790 = !DILocation(line: 409, column: 1, scope: !2737)
!2791 = distinct !DISubprogram(name: "dump_region_dot", scope: !3, file: !3, line: 426, type: !2792, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2794)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !2274, !765}
!2794 = !{!2795, !2796, !2797, !2798, !2802, !2803, !2804}
!2795 = !DILocalVariable(name: "f", arg: 1, scope: !2791, file: !3, line: 426, type: !2274)
!2796 = !DILocalVariable(name: "rgn", arg: 2, scope: !2791, file: !3, line: 426, type: !765)
!2797 = !DILocalVariable(name: "i", scope: !2791, file: !3, line: 428, type: !765)
!2798 = !DILocalVariable(name: "e", scope: !2799, file: !3, line: 438, type: !1328)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 437, column: 5)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 436, column: 3)
!2801 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 436, column: 3)
!2802 = !DILocalVariable(name: "ei", scope: !2799, file: !3, line: 439, type: !1952)
!2803 = !DILocalVariable(name: "src_bb_num", scope: !2799, file: !3, line: 440, type: !765)
!2804 = !DILocalVariable(name: "bb", scope: !2799, file: !3, line: 441, type: !1312)
!2805 = !DILocation(line: 0, scope: !2791)
!2806 = !DILocation(line: 430, column: 3, scope: !2791)
!2807 = !DILocation(line: 434, column: 20, scope: !2791)
!2808 = !DILocation(line: 434, column: 18, scope: !2791)
!2809 = !DILocation(line: 0, scope: !2799)
!2810 = !DILocation(line: 0, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 443, column: 7)
!2812 = !DILocation(line: 0, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 443, column: 7)
!2814 = !DILocation(line: 436, column: 8, scope: !2801)
!2815 = !DILocation(line: 436, column: 19, scope: !2800)
!2816 = !DILocation(line: 0, scope: !2801)
!2817 = !DILocation(line: 436, column: 34, scope: !2800)
!2818 = !DILocation(line: 436, column: 17, scope: !2800)
!2819 = !DILocation(line: 436, column: 3, scope: !2801)
!2820 = !DILocation(line: 438, column: 7, scope: !2799)
!2821 = !DILocation(line: 439, column: 7, scope: !2799)
!2822 = !DILocation(line: 440, column: 24, scope: !2799)
!2823 = !DILocation(line: 440, column: 37, scope: !2799)
!2824 = !DILocation(line: 440, column: 52, scope: !2799)
!2825 = !DILocation(line: 441, column: 36, scope: !2799)
!2826 = !DILocation(line: 443, column: 7, scope: !2811)
!2827 = !DILocation(line: 443, column: 7, scope: !2813)
!2828 = !DILocation(line: 444, column: 29, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 444, column: 13)
!2830 = !DILocation(line: 444, column: 32, scope: !2829)
!2831 = !DILocation(line: 444, column: 38, scope: !2829)
!2832 = !DILocation(line: 444, column: 13, scope: !2829)
!2833 = !DILocation(line: 444, column: 13, scope: !2813)
!2834 = !DILocation(line: 445, column: 44, scope: !2829)
!2835 = !DILocation(line: 445, column: 47, scope: !2829)
!2836 = !DILocation(line: 445, column: 53, scope: !2829)
!2837 = !DILocation(line: 445, column: 4, scope: !2829)
!2838 = distinct !{!2838, !2826, !2839}
!2839 = !DILocation(line: 445, column: 58, scope: !2811)
!2840 = !DILocation(line: 446, column: 5, scope: !2800)
!2841 = !DILocation(line: 436, column: 50, scope: !2800)
!2842 = !DILocation(line: 436, column: 3, scope: !2800)
!2843 = distinct !{!2843, !2819, !2844}
!2844 = !DILocation(line: 446, column: 5, scope: !2801)
!2845 = !DILocation(line: 447, column: 3, scope: !2791)
!2846 = !DILocation(line: 448, column: 1, scope: !2791)
!2847 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !142, file: !142, line: 281, type: !2848, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2852)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!1311, !2850, !7}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!2852 = !{!2853, !2854}
!2853 = !DILocalVariable(name: "vec_", arg: 1, scope: !2847, file: !142, line: 281, type: !2850)
!2854 = !DILocalVariable(name: "ix_", arg: 2, scope: !2847, file: !142, line: 281, type: !7)
!2855 = !DILocation(line: 0, scope: !2847)
!2856 = !DILocation(line: 281, column: 1, scope: !2847)
!2857 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !2858, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2860)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!1952, !1957}
!2860 = !{!2861, !2862}
!2861 = !DILocalVariable(name: "ev", arg: 1, scope: !2857, file: !142, line: 696, type: !1957)
!2862 = !DILocalVariable(name: "i", scope: !2857, file: !142, line: 698, type: !1952)
!2863 = !DILocation(line: 0, scope: !2857)
!2864 = !DILocation(line: 700, column: 5, scope: !2857)
!2865 = !DILocation(line: 700, column: 11, scope: !2857)
!2866 = !DILocation(line: 701, column: 5, scope: !2857)
!2867 = !DILocation(line: 701, column: 15, scope: !2857)
!2868 = !DILocation(line: 703, column: 3, scope: !2857)
!2869 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !2870, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2872)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!764, !1952, !1942}
!2872 = !{!2873, !2874}
!2873 = !DILocalVariable(name: "ei", arg: 1, scope: !2869, file: !142, line: 771, type: !1952)
!2874 = !DILocalVariable(name: "p", arg: 2, scope: !2869, file: !142, line: 771, type: !1942)
!2875 = !DILocation(line: 0, scope: !2869)
!2876 = !DILocation(line: 773, column: 8, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2869, file: !142, line: 773, column: 7)
!2878 = !DILocation(line: 773, column: 7, scope: !2869)
!2879 = !DILocation(line: 775, column: 12, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2877, file: !142, line: 774, column: 5)
!2881 = !DILocation(line: 776, column: 7, scope: !2880)
!2882 = !DILocation(line: 781, column: 7, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2877, file: !142, line: 779, column: 5)
!2884 = !DILocation(line: 0, scope: !2877)
!2885 = !DILocation(line: 783, column: 1, scope: !2869)
!2886 = distinct !DISubprogram(name: "bb_in_region_p", scope: !3, file: !3, line: 413, type: !2887, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2889)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!764, !765, !765}
!2889 = !{!2890, !2891, !2892}
!2890 = !DILocalVariable(name: "bb_index", arg: 1, scope: !2886, file: !3, line: 413, type: !765)
!2891 = !DILocalVariable(name: "rgn", arg: 2, scope: !2886, file: !3, line: 413, type: !765)
!2892 = !DILocalVariable(name: "i", scope: !2886, file: !3, line: 415, type: !765)
!2893 = !DILocation(line: 0, scope: !2886)
!2894 = !DILocation(line: 0, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 417, column: 3)
!2896 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 417, column: 3)
!2897 = !DILocation(line: 0, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 418, column: 9)
!2899 = !DILocation(line: 417, column: 8, scope: !2896)
!2900 = !DILocation(line: 0, scope: !2896)
!2901 = !DILocation(line: 417, column: 17, scope: !2895)
!2902 = !DILocation(line: 417, column: 3, scope: !2896)
!2903 = !DILocation(line: 418, column: 37, scope: !2898)
!2904 = !DILocation(line: 418, column: 9, scope: !2898)
!2905 = !DILocation(line: 418, column: 42, scope: !2898)
!2906 = !DILocation(line: 418, column: 9, scope: !2895)
!2907 = !DILocation(line: 417, column: 50, scope: !2895)
!2908 = !DILocation(line: 417, column: 3, scope: !2895)
!2909 = distinct !{!2909, !2902, !2910}
!2910 = !DILocation(line: 419, column: 14, scope: !2896)
!2911 = !DILocation(line: 422, column: 1, scope: !2886)
!2912 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !2913, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2915)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{null, !1951}
!2915 = !{!2916}
!2916 = !DILocalVariable(name: "i", arg: 1, scope: !2912, file: !142, line: 736, type: !1951)
!2917 = !DILocation(line: 0, scope: !2912)
!2918 = !DILocation(line: 738, column: 3, scope: !2912)
!2919 = !DILocation(line: 739, column: 11, scope: !2912)
!2920 = !DILocation(line: 740, column: 1, scope: !2912)
!2921 = distinct !DISubprogram(name: "dump_region_dot_file", scope: !3, file: !3, line: 452, type: !2922, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2924)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{null, !770, !765}
!2924 = !{!2925, !2926, !2927}
!2925 = !DILocalVariable(name: "fname", arg: 1, scope: !2921, file: !3, line: 452, type: !770)
!2926 = !DILocalVariable(name: "rgn", arg: 2, scope: !2921, file: !3, line: 452, type: !765)
!2927 = !DILocalVariable(name: "f", scope: !2921, file: !3, line: 454, type: !2274)
!2928 = !DILocation(line: 0, scope: !2921)
!2929 = !DILocation(line: 454, column: 13, scope: !2921)
!2930 = !DILocation(line: 455, column: 3, scope: !2921)
!2931 = !DILocation(line: 456, column: 3, scope: !2921)
!2932 = !DILocation(line: 457, column: 1, scope: !2921)
!2933 = distinct !DISubprogram(name: "extend_rgns", scope: !3, file: !3, line: 1154, type: !2934, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2936)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{null, !772, !772, !2032, !772}
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2953, !2958, !2959, !2960, !2963, !2967, !2970, !2971, !2975, !2978, !2979, !2980, !2981, !2982, !2983, !2988, !2992, !2995}
!2937 = !DILocalVariable(name: "degree", arg: 1, scope: !2933, file: !3, line: 1154, type: !772)
!2938 = !DILocalVariable(name: "idxp", arg: 2, scope: !2933, file: !3, line: 1154, type: !772)
!2939 = !DILocalVariable(name: "header", arg: 3, scope: !2933, file: !3, line: 1154, type: !2032)
!2940 = !DILocalVariable(name: "loop_hdr", arg: 4, scope: !2933, file: !3, line: 1154, type: !772)
!2941 = !DILocalVariable(name: "order", scope: !2933, file: !3, line: 1156, type: !772)
!2942 = !DILocalVariable(name: "i", scope: !2933, file: !3, line: 1156, type: !765)
!2943 = !DILocalVariable(name: "rescan", scope: !2933, file: !3, line: 1156, type: !765)
!2944 = !DILocalVariable(name: "idx", scope: !2933, file: !3, line: 1156, type: !765)
!2945 = !DILocalVariable(name: "iter", scope: !2933, file: !3, line: 1156, type: !765)
!2946 = !DILocalVariable(name: "max_iter", scope: !2933, file: !3, line: 1156, type: !765)
!2947 = !DILocalVariable(name: "max_hdr", scope: !2933, file: !3, line: 1156, type: !772)
!2948 = !DILocalVariable(name: "nblocks", scope: !2933, file: !3, line: 1157, type: !765)
!2949 = !DILocalVariable(name: "bbn", scope: !2950, file: !3, line: 1168, type: !765)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 1167, column: 5)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 1166, column: 3)
!2952 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1166, column: 3)
!2953 = !DILocalVariable(name: "e", scope: !2954, file: !3, line: 1196, type: !1328)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 1195, column: 2)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 1194, column: 7)
!2956 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 1194, column: 7)
!2957 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1191, column: 5)
!2958 = !DILocalVariable(name: "ei", scope: !2954, file: !3, line: 1197, type: !1952)
!2959 = !DILocalVariable(name: "bbn", scope: !2954, file: !3, line: 1198, type: !765)
!2960 = !DILocalVariable(name: "hdr", scope: !2961, file: !3, line: 1202, type: !765)
!2961 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 1201, column: 6)
!2962 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 1200, column: 8)
!2963 = !DILocalVariable(name: "predn", scope: !2964, file: !3, line: 1206, type: !765)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 1205, column: 3)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1204, column: 8)
!2966 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 1204, column: 8)
!2967 = !DILocalVariable(name: "s1", scope: !2968, file: !3, line: 1280, type: !772)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1279, column: 5)
!2969 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1278, column: 7)
!2970 = !DILocalVariable(name: "s1_sz", scope: !2968, file: !3, line: 1280, type: !765)
!2971 = !DILocalVariable(name: "bbn", scope: !2972, file: !3, line: 1289, type: !765)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 1288, column: 2)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1287, column: 7)
!2974 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 1287, column: 7)
!2975 = !DILocalVariable(name: "e", scope: !2976, file: !3, line: 1294, type: !1328)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 1293, column: 6)
!2977 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1291, column: 8)
!2978 = !DILocalVariable(name: "ei", scope: !2976, file: !3, line: 1295, type: !1952)
!2979 = !DILocalVariable(name: "num_bbs", scope: !2976, file: !3, line: 1296, type: !765)
!2980 = !DILocalVariable(name: "j", scope: !2976, file: !3, line: 1296, type: !765)
!2981 = !DILocalVariable(name: "num_insns", scope: !2976, file: !3, line: 1296, type: !765)
!2982 = !DILocalVariable(name: "large", scope: !2976, file: !3, line: 1296, type: !765)
!2983 = !DILocalVariable(name: "succn", scope: !2984, file: !3, line: 1316, type: !765)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 1315, column: 5)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 1314, column: 3)
!2986 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 1314, column: 3)
!2987 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1312, column: 12)
!2988 = !DILocalVariable(name: "succn", scope: !2989, file: !3, line: 1338, type: !765)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 1337, column: 3)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1336, column: 8)
!2991 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1336, column: 8)
!2992 = !DILocalVariable(name: "s2", scope: !2993, file: !3, line: 1381, type: !772)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 1380, column: 2)
!2994 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 1379, column: 11)
!2995 = !DILocalVariable(name: "s2_sz", scope: !2993, file: !3, line: 1381, type: !765)
!2996 = !DILocation(line: 0, scope: !2933)
!2997 = !DILocation(line: 1156, column: 36, scope: !2933)
!2998 = !DILocation(line: 1157, column: 17, scope: !2933)
!2999 = !DILocation(line: 1159, column: 14, scope: !2933)
!3000 = !DILocation(line: 1161, column: 13, scope: !2933)
!3001 = !DILocation(line: 1163, column: 11, scope: !2933)
!3002 = !DILocation(line: 1164, column: 3, scope: !2933)
!3003 = !DILocation(line: 1166, column: 8, scope: !2952)
!3004 = !DILocation(line: 1166, column: 27, scope: !2951)
!3005 = !DILocation(line: 1166, column: 3, scope: !2952)
!3006 = !DILocation(line: 0, scope: !2954)
!3007 = !DILocation(line: 0, scope: !2966)
!3008 = !DILocation(line: 0, scope: !2965)
!3009 = !DILocation(line: 1190, column: 3, scope: !2933)
!3010 = !DILocation(line: 1168, column: 17, scope: !2950)
!3011 = !DILocation(line: 0, scope: !2950)
!3012 = !DILocation(line: 1169, column: 11, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 1169, column: 11)
!3014 = !DILocation(line: 1169, column: 23, scope: !3013)
!3015 = !DILocation(line: 0, scope: !3013)
!3016 = !DILocation(line: 1169, column: 11, scope: !2950)
!3017 = !DILocation(line: 1173, column: 2, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 1170, column: 2)
!3019 = !DILocation(line: 1166, column: 34, scope: !2951)
!3020 = !DILocation(line: 1166, column: 3, scope: !2951)
!3021 = distinct !{!3021, !3005, !3022}
!3022 = !DILocation(line: 1177, column: 5, scope: !2952)
!3023 = !DILocation(line: 1190, column: 10, scope: !2933)
!3024 = !DILocation(line: 1190, column: 25, scope: !2933)
!3025 = !DILocation(line: 1190, column: 17, scope: !2933)
!3026 = !DILocation(line: 1194, column: 12, scope: !2956)
!3027 = !DILocation(line: 1192, column: 14, scope: !2957)
!3028 = !DILocation(line: 1194, column: 31, scope: !2955)
!3029 = !DILocation(line: 1194, column: 7, scope: !2956)
!3030 = !DILocation(line: 1196, column: 4, scope: !2954)
!3031 = !DILocation(line: 1197, column: 4, scope: !2954)
!3032 = !DILocation(line: 1198, column: 14, scope: !2954)
!3033 = !DILocation(line: 1200, column: 8, scope: !2962)
!3034 = !DILocation(line: 1200, column: 21, scope: !2962)
!3035 = !DILocation(line: 1200, column: 27, scope: !2962)
!3036 = !DILocation(line: 1200, column: 31, scope: !2962)
!3037 = !DILocation(line: 1200, column: 8, scope: !2954)
!3038 = !DILocation(line: 0, scope: !2961)
!3039 = !DILocation(line: 1204, column: 8, scope: !2966)
!3040 = !DILocation(line: 0, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 1208, column: 9)
!3042 = !DILocation(line: 1204, column: 8, scope: !2965)
!3043 = !DILocation(line: 1206, column: 17, scope: !2964)
!3044 = !DILocation(line: 1206, column: 20, scope: !2964)
!3045 = !DILocation(line: 1206, column: 25, scope: !2964)
!3046 = !DILocation(line: 0, scope: !2964)
!3047 = !DILocation(line: 1208, column: 15, scope: !3041)
!3048 = !DILocation(line: 1210, column: 9, scope: !3041)
!3049 = !DILocation(line: 1210, column: 12, scope: !3041)
!3050 = !DILocation(line: 1210, column: 27, scope: !3041)
!3051 = !DILocation(line: 1213, column: 9, scope: !3041)
!3052 = !DILocation(line: 1213, column: 12, scope: !3041)
!3053 = !DILocation(line: 1213, column: 29, scope: !3041)
!3054 = !DILocation(line: 1213, column: 26, scope: !3041)
!3055 = !DILocation(line: 1208, column: 9, scope: !2964)
!3056 = !DILocation(line: 1215, column: 17, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 1215, column: 13)
!3058 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1214, column: 7)
!3059 = !DILocation(line: 1215, column: 13, scope: !3058)
!3060 = !DILocation(line: 1218, column: 22, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 1218, column: 18)
!3062 = !DILocation(line: 1218, column: 18, scope: !3057)
!3063 = !DILocation(line: 1233, column: 3, scope: !2965)
!3064 = distinct !{!3064, !3039, !3065}
!3065 = !DILocation(line: 1233, column: 3, scope: !2966)
!3066 = !DILocation(line: 1235, column: 16, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 1235, column: 12)
!3068 = !DILocation(line: 1235, column: 12, scope: !2961)
!3069 = !DILocation(line: 1239, column: 5, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 1236, column: 3)
!3071 = !DILocation(line: 1241, column: 3, scope: !3070)
!3072 = !DILocation(line: 1243, column: 3, scope: !3067)
!3073 = !DILocation(line: 0, scope: !2957)
!3074 = !DILocation(line: 1245, column: 21, scope: !2961)
!3075 = !DILocation(line: 1246, column: 6, scope: !2961)
!3076 = !DILocation(line: 1247, column: 2, scope: !2955)
!3077 = !DILocation(line: 1194, column: 38, scope: !2955)
!3078 = !DILocation(line: 1194, column: 7, scope: !2955)
!3079 = distinct !{!3079, !3029, !3080}
!3080 = !DILocation(line: 1247, column: 2, scope: !2956)
!3081 = !DILocation(line: 1249, column: 11, scope: !2957)
!3082 = distinct !{!3082, !3009, !3083}
!3083 = !DILocation(line: 1250, column: 5, scope: !2933)
!3084 = !DILocation(line: 1274, column: 7, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1274, column: 7)
!3086 = !DILocation(line: 1274, column: 29, scope: !3085)
!3087 = !DILocation(line: 1274, column: 21, scope: !3085)
!3088 = !DILocation(line: 1275, column: 14, scope: !3085)
!3089 = !DILocation(line: 1276, column: 7, scope: !3085)
!3090 = !DILocation(line: 1275, column: 5, scope: !3085)
!3091 = !DILocation(line: 1278, column: 8, scope: !2969)
!3092 = !DILocation(line: 1278, column: 15, scope: !2969)
!3093 = !DILocation(line: 1280, column: 7, scope: !2968)
!3094 = !DILocation(line: 0, scope: !2968)
!3095 = !DILocation(line: 1280, column: 12, scope: !2968)
!3096 = !DILocation(line: 1283, column: 11, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 1283, column: 11)
!3098 = !DILocation(line: 1283, column: 25, scope: !3097)
!3099 = !DILocation(line: 1283, column: 11, scope: !2968)
!3100 = !DILocation(line: 1284, column: 10, scope: !3097)
!3101 = !DILocation(line: 1284, column: 2, scope: !3097)
!3102 = !DILocation(line: 0, scope: !2976)
!3103 = !DILocation(line: 0, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1308, column: 8)
!3105 = !DILocation(line: 0, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 1308, column: 8)
!3107 = !DILocation(line: 0, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1365, column: 9)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 1345, column: 7)
!3110 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 1340, column: 9)
!3111 = !DILocation(line: 1287, column: 12, scope: !2974)
!3112 = !DILocation(line: 1287, column: 31, scope: !2973)
!3113 = !DILocation(line: 1287, column: 7, scope: !2974)
!3114 = !DILocation(line: 1289, column: 14, scope: !2972)
!3115 = !DILocation(line: 0, scope: !2972)
!3116 = !DILocation(line: 1291, column: 8, scope: !2977)
!3117 = !DILocation(line: 1291, column: 21, scope: !2977)
!3118 = !DILocation(line: 1291, column: 8, scope: !2972)
!3119 = !DILocation(line: 1294, column: 8, scope: !2976)
!3120 = !DILocation(line: 1295, column: 8, scope: !2976)
!3121 = !DILocation(line: 1296, column: 8, scope: !2976)
!3122 = !DILocation(line: 1296, column: 12, scope: !2976)
!3123 = !DILocation(line: 1296, column: 28, scope: !2976)
!3124 = !DILocation(line: 1298, column: 16, scope: !2976)
!3125 = !DILocation(line: 1300, column: 8, scope: !2976)
!3126 = !DILocation(line: 1300, column: 20, scope: !2976)
!3127 = !DILocation(line: 1301, column: 8, scope: !2976)
!3128 = !DILocation(line: 1301, column: 26, scope: !2976)
!3129 = !DILocation(line: 1302, column: 37, scope: !2976)
!3130 = !DILocation(line: 1302, column: 8, scope: !2976)
!3131 = !DILocation(line: 1302, column: 32, scope: !2976)
!3132 = !DILocation(line: 1303, column: 8, scope: !2976)
!3133 = !DILocation(line: 1303, column: 40, scope: !2976)
!3134 = !DILocation(line: 1304, column: 8, scope: !2976)
!3135 = !DILocation(line: 1304, column: 38, scope: !2976)
!3136 = !DILocation(line: 1305, column: 31, scope: !2976)
!3137 = !DILocation(line: 1305, column: 8, scope: !2976)
!3138 = !DILocation(line: 1305, column: 29, scope: !2976)
!3139 = !DILocation(line: 1306, column: 8, scope: !2976)
!3140 = !DILocation(line: 1306, column: 26, scope: !2976)
!3141 = !DILocation(line: 1308, column: 8, scope: !3104)
!3142 = !DILocation(line: 1308, column: 8, scope: !3106)
!3143 = !DILocation(line: 1309, column: 7, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1309, column: 7)
!3145 = !DILocation(line: 1309, column: 10, scope: !3144)
!3146 = !DILocation(line: 1309, column: 18, scope: !3144)
!3147 = !DILocation(line: 1309, column: 15, scope: !3144)
!3148 = !DILocation(line: 1309, column: 7, scope: !3106)
!3149 = !DILocation(line: 1310, column: 21, scope: !3144)
!3150 = !DILocation(line: 1310, column: 5, scope: !3144)
!3151 = !DILocation(line: 1310, column: 27, scope: !3144)
!3152 = distinct !{!3152, !3141, !3153}
!3153 = !DILocation(line: 1310, column: 27, scope: !3104)
!3154 = !DILocation(line: 1312, column: 13, scope: !2987)
!3155 = !DILocation(line: 1312, column: 12, scope: !2976)
!3156 = !DILocation(line: 1314, column: 8, scope: !2986)
!3157 = !DILocation(line: 0, scope: !2986)
!3158 = !DILocation(line: 1314, column: 21, scope: !2985)
!3159 = !DILocation(line: 1314, column: 3, scope: !2986)
!3160 = !DILocation(line: 1316, column: 19, scope: !2984)
!3161 = !DILocation(line: 0, scope: !2984)
!3162 = !DILocation(line: 1317, column: 11, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 1317, column: 11)
!3164 = !DILocation(line: 1317, column: 26, scope: !3163)
!3165 = !DILocation(line: 1317, column: 11, scope: !2984)
!3166 = !DILocation(line: 1319, column: 17, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1319, column: 8)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1318, column: 9)
!3169 = !DILocation(line: 1319, column: 15, scope: !3167)
!3170 = !DILocation(line: 1319, column: 8, scope: !3168)
!3171 = !DILocation(line: 1322, column: 5, scope: !2985)
!3172 = !DILocation(line: 1314, column: 3, scope: !2985)
!3173 = distinct !{!3173, !3159, !3174}
!3174 = !DILocation(line: 1322, column: 5, scope: !2986)
!3175 = !DILocation(line: 1324, column: 12, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1324, column: 12)
!3177 = !DILocation(line: 1324, column: 12, scope: !2976)
!3178 = !DILocation(line: 1330, column: 5, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 1329, column: 3)
!3180 = !DILocation(line: 1330, column: 32, scope: !3179)
!3181 = !DILocation(line: 1331, column: 15, scope: !3179)
!3182 = !DILocation(line: 1332, column: 3, scope: !3179)
!3183 = !DILocation(line: 1334, column: 16, scope: !2976)
!3184 = !DILocation(line: 1336, column: 13, scope: !2991)
!3185 = !DILocation(line: 0, scope: !2991)
!3186 = !DILocation(line: 1336, column: 26, scope: !2990)
!3187 = !DILocation(line: 1336, column: 8, scope: !2991)
!3188 = !DILocation(line: 1338, column: 17, scope: !2989)
!3189 = !DILocation(line: 0, scope: !2989)
!3190 = !DILocation(line: 1340, column: 9, scope: !3110)
!3191 = !DILocation(line: 1340, column: 24, scope: !3110)
!3192 = !DILocation(line: 1340, column: 9, scope: !2989)
!3193 = !DILocation(line: 1346, column: 9, scope: !3109)
!3194 = !DILocation(line: 1348, column: 23, scope: !3109)
!3195 = !DILocation(line: 1349, column: 9, scope: !3109)
!3196 = !DILocation(line: 1349, column: 27, scope: !3109)
!3197 = !DILocation(line: 1350, column: 31, scope: !3109)
!3198 = !DILocation(line: 1350, column: 50, scope: !3109)
!3199 = !DILocation(line: 1350, column: 9, scope: !3109)
!3200 = !DILocation(line: 1350, column: 29, scope: !3109)
!3201 = !DILocation(line: 1351, column: 34, scope: !3109)
!3202 = !DILocation(line: 1351, column: 9, scope: !3109)
!3203 = !DILocation(line: 1351, column: 32, scope: !3109)
!3204 = !DILocation(line: 1353, column: 13, scope: !3109)
!3205 = !DILocation(line: 1356, column: 6, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 1355, column: 4)
!3207 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1353, column: 13)
!3208 = !DILocation(line: 1356, column: 30, scope: !3206)
!3209 = !DILocation(line: 1357, column: 6, scope: !3206)
!3210 = !DILocation(line: 1357, column: 33, scope: !3206)
!3211 = !DILocation(line: 1358, column: 6, scope: !3206)
!3212 = !DILocation(line: 1358, column: 38, scope: !3206)
!3213 = !DILocation(line: 1359, column: 6, scope: !3206)
!3214 = !DILocation(line: 1359, column: 36, scope: !3206)
!3215 = !DILocation(line: 1360, column: 16, scope: !3206)
!3216 = !DILocation(line: 1361, column: 4, scope: !3206)
!3217 = !DILocation(line: 1363, column: 12, scope: !3109)
!3218 = !DILocation(line: 1365, column: 9, scope: !3108)
!3219 = !DILocation(line: 1365, column: 9, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 1365, column: 9)
!3221 = !DILocation(line: 1366, column: 8, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1366, column: 8)
!3223 = !DILocation(line: 1366, column: 11, scope: !3222)
!3224 = !DILocation(line: 1366, column: 19, scope: !3222)
!3225 = !DILocation(line: 1366, column: 16, scope: !3222)
!3226 = !DILocation(line: 1366, column: 8, scope: !3220)
!3227 = !DILocation(line: 1367, column: 22, scope: !3222)
!3228 = !DILocation(line: 1367, column: 6, scope: !3222)
!3229 = !DILocation(line: 1367, column: 28, scope: !3222)
!3230 = distinct !{!3230, !3218, !3231}
!3231 = !DILocation(line: 1367, column: 28, scope: !3108)
!3232 = !DILocation(line: 1336, column: 8, scope: !2990)
!3233 = distinct !{!3233, !3187, !3234}
!3234 = !DILocation(line: 1369, column: 3, scope: !2991)
!3235 = !DILocation(line: 1371, column: 12, scope: !2976)
!3236 = !DILocation(line: 1373, column: 34, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 1372, column: 3)
!3238 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1371, column: 12)
!3239 = !DILocation(line: 1373, column: 5, scope: !3237)
!3240 = !DILocation(line: 1373, column: 32, scope: !3237)
!3241 = !DILocation(line: 1374, column: 15, scope: !3237)
!3242 = !DILocation(line: 1375, column: 3, scope: !3237)
!3243 = !DILocation(line: 1376, column: 6, scope: !2977)
!3244 = !DILocation(line: 1376, column: 6, scope: !2976)
!3245 = !DILocation(line: 1287, column: 38, scope: !2973)
!3246 = !DILocation(line: 1287, column: 7, scope: !2973)
!3247 = distinct !{!3247, !3113, !3248}
!3248 = !DILocation(line: 1377, column: 2, scope: !2974)
!3249 = !DILocation(line: 1379, column: 11, scope: !2994)
!3250 = !DILocation(line: 1379, column: 25, scope: !2994)
!3251 = !DILocation(line: 1379, column: 11, scope: !2968)
!3252 = !DILocation(line: 1381, column: 4, scope: !2993)
!3253 = !DILocation(line: 0, scope: !2993)
!3254 = !DILocation(line: 1385, column: 12, scope: !2993)
!3255 = !DILocation(line: 1386, column: 29, scope: !2993)
!3256 = !DILocation(line: 1386, column: 40, scope: !2993)
!3257 = !DILocation(line: 1386, column: 4, scope: !2993)
!3258 = !DILocation(line: 1387, column: 10, scope: !2993)
!3259 = !DILocation(line: 1387, column: 4, scope: !2993)
!3260 = !DILocation(line: 1388, column: 10, scope: !2993)
!3261 = !DILocation(line: 1388, column: 4, scope: !2993)
!3262 = !DILocation(line: 1389, column: 2, scope: !2994)
!3263 = !DILocation(line: 1389, column: 2, scope: !2993)
!3264 = !DILocation(line: 1390, column: 5, scope: !2969)
!3265 = !DILocation(line: 1390, column: 5, scope: !2968)
!3266 = !DILocation(line: 1156, column: 30, scope: !2933)
!3267 = !DILocation(line: 1392, column: 3, scope: !2933)
!3268 = !DILocation(line: 1393, column: 3, scope: !2933)
!3269 = !DILocation(line: 1395, column: 9, scope: !2933)
!3270 = !DILocation(line: 1396, column: 1, scope: !2933)
!3271 = distinct !DISubprogram(name: "SET_BIT", scope: !2033, file: !2033, line: 63, type: !3272, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3274)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{null, !2032, !7}
!3274 = !{!3275, !3276, !3277}
!3275 = !DILocalVariable(name: "map", arg: 1, scope: !3271, file: !2033, line: 63, type: !2032)
!3276 = !DILocalVariable(name: "bitno", arg: 2, scope: !3271, file: !2033, line: 63, type: !7)
!3277 = !DILocalVariable(name: "oldbit", scope: !3278, file: !2033, line: 67, type: !764)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !2033, line: 66, column: 5)
!3279 = distinct !DILexicalBlock(scope: !3271, file: !2033, line: 65, column: 7)
!3280 = !DILocation(line: 0, scope: !3271)
!3281 = !DILocation(line: 65, column: 12, scope: !3279)
!3282 = !DILocation(line: 65, column: 7, scope: !3279)
!3283 = !DILocation(line: 65, column: 7, scope: !3271)
!3284 = !DILocation(line: 73, column: 40, scope: !3271)
!3285 = !DILocation(line: 73, column: 29, scope: !3271)
!3286 = !DILocation(line: 72, column: 19, scope: !3271)
!3287 = !DILocation(line: 72, column: 3, scope: !3271)
!3288 = !DILocation(line: 68, column: 16, scope: !3278)
!3289 = !DILocation(line: 69, column: 12, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3278, file: !2033, line: 69, column: 11)
!3291 = !DILocation(line: 69, column: 11, scope: !3278)
!3292 = !DILocation(line: 70, column: 2, scope: !3290)
!3293 = !DILocation(line: 70, column: 41, scope: !3290)
!3294 = !DILocation(line: 73, column: 5, scope: !3271)
!3295 = !DILocation(line: 74, column: 1, scope: !3271)
!3296 = distinct !DISubprogram(name: "gather_region_statistics", scope: !3, file: !3, line: 1091, type: !3297, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3300)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!765, !3299}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!3300 = !{!3301, !3302, !3303, !3304, !3305}
!3301 = !DILocalVariable(name: "rsp", arg: 1, scope: !3296, file: !3, line: 1091, type: !3299)
!3302 = !DILocalVariable(name: "i", scope: !3296, file: !3, line: 1093, type: !765)
!3303 = !DILocalVariable(name: "a", scope: !3296, file: !3, line: 1093, type: !772)
!3304 = !DILocalVariable(name: "a_sz", scope: !3296, file: !3, line: 1093, type: !765)
!3305 = !DILocalVariable(name: "nr_blocks", scope: !3306, file: !3, line: 1098, type: !765)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 1097, column: 5)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 1096, column: 3)
!3308 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1096, column: 3)
!3309 = !DILocation(line: 0, scope: !3296)
!3310 = !DILocation(line: 1096, column: 8, scope: !3308)
!3311 = !DILocation(line: 1096, column: 19, scope: !3307)
!3312 = !DILocation(line: 1096, column: 17, scope: !3307)
!3313 = !DILocation(line: 1096, column: 3, scope: !3308)
!3314 = !DILocation(line: 1098, column: 23, scope: !3306)
!3315 = !DILocation(line: 0, scope: !3306)
!3316 = !DILocation(line: 1100, column: 7, scope: !3306)
!3317 = !DILocation(line: 1102, column: 21, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1102, column: 11)
!3319 = !DILocation(line: 1102, column: 11, scope: !3306)
!3320 = !DILocation(line: 1104, column: 8, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 1103, column: 2)
!3322 = !DILocation(line: 1105, column: 4, scope: !3321)
!3323 = !DILocation(line: 1106, column: 12, scope: !3321)
!3324 = !DILocation(line: 1106, column: 6, scope: !3321)
!3325 = !DILocation(line: 1106, column: 16, scope: !3321)
!3326 = distinct !{!3326, !3322, !3327}
!3327 = !DILocation(line: 1107, column: 28, scope: !3321)
!3328 = !DILocation(line: 1110, column: 19, scope: !3306)
!3329 = !DILocation(line: 1110, column: 7, scope: !3306)
!3330 = !DILocation(line: 1110, column: 23, scope: !3306)
!3331 = !DILocation(line: 1096, column: 32, scope: !3307)
!3332 = !DILocation(line: 1096, column: 3, scope: !3307)
!3333 = distinct !{!3333, !3313, !3334}
!3334 = !DILocation(line: 1111, column: 5, scope: !3308)
!3335 = !DILocation(line: 1113, column: 8, scope: !3296)
!3336 = !DILocation(line: 1114, column: 3, scope: !3296)
!3337 = distinct !DISubprogram(name: "too_large", scope: !3, file: !3, line: 554, type: !3338, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3340)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!764, !765, !772, !772}
!3340 = !{!3341, !3342, !3343}
!3341 = !DILocalVariable(name: "block", arg: 1, scope: !3337, file: !3, line: 554, type: !765)
!3342 = !DILocalVariable(name: "num_bbs", arg: 2, scope: !3337, file: !3, line: 554, type: !772)
!3343 = !DILocalVariable(name: "num_insns", arg: 3, scope: !3337, file: !3, line: 554, type: !772)
!3344 = !DILocation(line: 0, scope: !3337)
!3345 = !DILocation(line: 556, column: 13, scope: !3337)
!3346 = !DILocation(line: 557, column: 20, scope: !3337)
!3347 = !DILocation(line: 557, column: 39, scope: !3337)
!3348 = !DILocation(line: 558, column: 21, scope: !3337)
!3349 = !DILocation(line: 557, column: 16, scope: !3337)
!3350 = !DILocation(line: 560, column: 12, scope: !3337)
!3351 = !DILocation(line: 560, column: 23, scope: !3337)
!3352 = !DILocation(line: 560, column: 21, scope: !3337)
!3353 = !DILocation(line: 561, column: 4, scope: !3337)
!3354 = !DILocation(line: 561, column: 21, scope: !3337)
!3355 = !DILocation(line: 561, column: 19, scope: !3337)
!3356 = !DILocation(line: 560, column: 3, scope: !3337)
!3357 = distinct !DISubprogram(name: "print_region_statistics", scope: !3, file: !3, line: 1120, type: !3358, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3360)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{null, !772, !765, !772, !765}
!3360 = !{!3361, !3362, !3363, !3364, !3365, !3366, !3370}
!3361 = !DILocalVariable(name: "s1", arg: 1, scope: !3357, file: !3, line: 1120, type: !772)
!3362 = !DILocalVariable(name: "s1_sz", arg: 2, scope: !3357, file: !3, line: 1120, type: !765)
!3363 = !DILocalVariable(name: "s2", arg: 3, scope: !3357, file: !3, line: 1120, type: !772)
!3364 = !DILocalVariable(name: "s2_sz", arg: 4, scope: !3357, file: !3, line: 1120, type: !765)
!3365 = !DILocalVariable(name: "i", scope: !3357, file: !3, line: 1122, type: !765)
!3366 = !DILocalVariable(name: "n1", scope: !3367, file: !3, line: 1128, type: !765)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 1127, column: 5)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 1126, column: 3)
!3369 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 1126, column: 3)
!3370 = !DILocalVariable(name: "n2", scope: !3367, file: !3, line: 1128, type: !765)
!3371 = !DILocation(line: 0, scope: !3357)
!3372 = !DILocation(line: 1126, column: 8, scope: !3369)
!3373 = !DILocation(line: 0, scope: !3369)
!3374 = !DILocation(line: 1126, column: 17, scope: !3368)
!3375 = !DILocation(line: 1126, column: 3, scope: !3369)
!3376 = !DILocation(line: 1130, column: 12, scope: !3367)
!3377 = !DILocation(line: 0, scope: !3367)
!3378 = !DILocation(line: 1132, column: 14, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 1132, column: 11)
!3380 = !DILocation(line: 1132, column: 11, scope: !3367)
!3381 = !DILocation(line: 1126, column: 27, scope: !3368)
!3382 = !DILocation(line: 1135, column: 13, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 1135, column: 11)
!3384 = !DILocation(line: 1135, column: 11, scope: !3367)
!3385 = !DILocation(line: 1138, column: 7, scope: !3383)
!3386 = !DILocation(line: 0, scope: !3383)
!3387 = !DILocation(line: 1140, column: 16, scope: !3367)
!3388 = !DILocation(line: 1141, column: 33, scope: !3367)
!3389 = !DILocation(line: 1141, column: 45, scope: !3367)
!3390 = !DILocation(line: 1140, column: 7, scope: !3367)
!3391 = !DILocation(line: 1142, column: 5, scope: !3368)
!3392 = !DILocation(line: 1126, column: 3, scope: !3368)
!3393 = distinct !{!3393, !3375, !3394}
!3394 = !DILocation(line: 1142, column: 5, scope: !3369)
!3395 = !DILocation(line: 1143, column: 1, scope: !3357)
!3396 = distinct !DISubprogram(name: "debug_candidate", scope: !3, file: !3, line: 1598, type: !2101, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3397)
!3397 = !{!3398, !3399, !3402, !3406}
!3398 = !DILocalVariable(name: "i", arg: 1, scope: !3396, file: !3, line: 1598, type: !765)
!3399 = !DILocalVariable(name: "j", scope: !3400, file: !3, line: 1605, type: !765)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1604, column: 5)
!3401 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1603, column: 7)
!3402 = !DILocalVariable(name: "b", scope: !3403, file: !3, line: 1611, type: !765)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1610, column: 2)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 1609, column: 7)
!3405 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1609, column: 7)
!3406 = !DILocalVariable(name: "b", scope: !3407, file: !3, line: 1620, type: !765)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 1619, column: 2)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1618, column: 7)
!3409 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1618, column: 7)
!3410 = !DILocation(line: 0, scope: !3396)
!3411 = !DILocation(line: 1600, column: 8, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1600, column: 7)
!3413 = !DILocation(line: 1600, column: 27, scope: !3412)
!3414 = !DILocation(line: 1600, column: 7, scope: !3396)
!3415 = !DILocation(line: 1603, column: 26, scope: !3401)
!3416 = !DILocation(line: 1603, column: 7, scope: !3401)
!3417 = !DILocation(line: 0, scope: !3401)
!3418 = !DILocation(line: 1603, column: 7, scope: !3396)
!3419 = !DILocation(line: 1606, column: 7, scope: !3400)
!3420 = !DILocation(line: 1608, column: 16, scope: !3400)
!3421 = !DILocation(line: 1608, column: 7, scope: !3400)
!3422 = !DILocation(line: 0, scope: !3400)
!3423 = !DILocation(line: 1609, column: 12, scope: !3405)
!3424 = !DILocation(line: 0, scope: !3405)
!3425 = !DILocation(line: 1609, column: 23, scope: !3404)
!3426 = !DILocation(line: 1609, column: 52, scope: !3404)
!3427 = !DILocation(line: 1609, column: 21, scope: !3404)
!3428 = !DILocation(line: 1609, column: 7, scope: !3405)
!3429 = !DILocation(line: 1611, column: 41, scope: !3403)
!3430 = !DILocation(line: 1611, column: 12, scope: !3403)
!3431 = !DILocation(line: 1611, column: 58, scope: !3403)
!3432 = !DILocation(line: 0, scope: !3403)
!3433 = !DILocation(line: 1613, column: 13, scope: !3403)
!3434 = !DILocation(line: 1613, column: 4, scope: !3403)
!3435 = !DILocation(line: 1609, column: 65, scope: !3404)
!3436 = !DILocation(line: 1609, column: 7, scope: !3404)
!3437 = distinct !{!3437, !3428, !3438}
!3438 = !DILocation(line: 1614, column: 2, scope: !3405)
!3439 = !DILocation(line: 1615, column: 16, scope: !3400)
!3440 = !DILocation(line: 1615, column: 7, scope: !3400)
!3441 = !DILocation(line: 1617, column: 16, scope: !3400)
!3442 = !DILocation(line: 1617, column: 7, scope: !3400)
!3443 = !DILocation(line: 1618, column: 12, scope: !3409)
!3444 = !DILocation(line: 0, scope: !3409)
!3445 = !DILocation(line: 1618, column: 23, scope: !3408)
!3446 = !DILocation(line: 1618, column: 53, scope: !3408)
!3447 = !DILocation(line: 1618, column: 21, scope: !3408)
!3448 = !DILocation(line: 1618, column: 7, scope: !3409)
!3449 = !DILocation(line: 1620, column: 42, scope: !3407)
!3450 = !DILocation(line: 1620, column: 12, scope: !3407)
!3451 = !DILocation(line: 1620, column: 59, scope: !3407)
!3452 = !DILocation(line: 0, scope: !3407)
!3453 = !DILocation(line: 1622, column: 13, scope: !3407)
!3454 = !DILocation(line: 1622, column: 4, scope: !3407)
!3455 = !DILocation(line: 1618, column: 66, scope: !3408)
!3456 = !DILocation(line: 1618, column: 7, scope: !3408)
!3457 = distinct !{!3457, !3448, !3458}
!3458 = !DILocation(line: 1623, column: 2, scope: !3409)
!3459 = !DILocation(line: 1624, column: 16, scope: !3400)
!3460 = !DILocation(line: 1624, column: 7, scope: !3400)
!3461 = !DILocation(line: 1625, column: 5, scope: !3400)
!3462 = !DILocation(line: 1628, column: 7, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1627, column: 5)
!3464 = !DILocation(line: 1630, column: 1, scope: !3396)
!3465 = distinct !DISubprogram(name: "debug_candidates", scope: !3, file: !3, line: 1635, type: !2101, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3466)
!3466 = !{!3467, !3468}
!3467 = !DILocalVariable(name: "trg", arg: 1, scope: !3465, file: !3, line: 1635, type: !765)
!3468 = !DILocalVariable(name: "i", scope: !3465, file: !3, line: 1637, type: !765)
!3469 = !DILocation(line: 0, scope: !3465)
!3470 = !DILocation(line: 1639, column: 12, scope: !3465)
!3471 = !DILocation(line: 1640, column: 5, scope: !3465)
!3472 = !DILocation(line: 1639, column: 3, scope: !3465)
!3473 = !DILocation(line: 1641, column: 8, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 1641, column: 3)
!3475 = !DILocation(line: 0, scope: !3474)
!3476 = !DILocation(line: 1641, column: 25, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1641, column: 3)
!3478 = !DILocation(line: 1641, column: 23, scope: !3477)
!3479 = !DILocation(line: 1641, column: 3, scope: !3474)
!3480 = !DILocation(line: 1642, column: 5, scope: !3477)
!3481 = !DILocation(line: 1641, column: 3, scope: !3477)
!3482 = distinct !{!3482, !3479, !3483}
!3483 = !DILocation(line: 1642, column: 23, scope: !3474)
!3484 = !DILocation(line: 1643, column: 1, scope: !3465)
!3485 = distinct !DISubprogram(name: "contributes_to_priority", scope: !3, file: !3, line: 2307, type: !2132, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3486)
!3486 = !{!3487, !3488}
!3487 = !DILocalVariable(name: "next", arg: 1, scope: !3485, file: !3, line: 2307, type: !777)
!3488 = !DILocalVariable(name: "insn", arg: 2, scope: !3485, file: !3, line: 2307, type: !777)
!3489 = !DILocation(line: 0, scope: !3485)
!3490 = !DILocation(line: 2310, column: 10, scope: !3485)
!3491 = !DILocation(line: 2310, column: 44, scope: !3485)
!3492 = !DILocation(line: 2310, column: 41, scope: !3485)
!3493 = !DILocation(line: 2310, column: 3, scope: !3485)
!3494 = distinct !DISubprogram(name: "get_rgn_sched_max_insns_priority", scope: !3, file: !3, line: 2398, type: !2124, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!3495 = !DILocation(line: 2400, column: 25, scope: !3494)
!3496 = !DILocation(line: 2400, column: 3, scope: !3494)
!3497 = distinct !DISubprogram(name: "deps_join", scope: !3, file: !3, line: 2604, type: !3498, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3500)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{null, !773, !773}
!3500 = !{!3501, !3502, !3503, !3504, !3513, !3517}
!3501 = !DILocalVariable(name: "succ_deps", arg: 1, scope: !3497, file: !3, line: 2604, type: !773)
!3502 = !DILocalVariable(name: "pred_deps", arg: 2, scope: !3497, file: !3, line: 2604, type: !773)
!3503 = !DILocalVariable(name: "reg", scope: !3497, file: !3, line: 2606, type: !7)
!3504 = !DILocalVariable(name: "rsi", scope: !3497, file: !3, line: 2607, type: !3505)
!3505 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !142, line: 90, baseType: !3506)
!3506 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !833, line: 218, baseType: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !833, line: 203, size: 256, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3507, file: !833, line: 206, baseType: !836, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3507, file: !833, line: 209, baseType: !836, size: 64, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3507, file: !833, line: 212, baseType: !7, size: 32, offset: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3507, file: !833, line: 217, baseType: !846, size: 64, offset: 192)
!3513 = !DILocalVariable(name: "pred_rl", scope: !3514, file: !3, line: 2612, type: !1927)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 2611, column: 5)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2610, column: 3)
!3516 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 2610, column: 3)
!3517 = !DILocalVariable(name: "succ_rl", scope: !3514, file: !3, line: 2613, type: !1927)
!3518 = !DILocation(line: 0, scope: !3497)
!3519 = !DILocation(line: 2606, column: 3, scope: !3497)
!3520 = !DILocation(line: 2607, column: 3, scope: !3497)
!3521 = !DILocation(line: 2610, column: 3, scope: !3516)
!3522 = !DILocation(line: 0, scope: !3514)
!3523 = !DILocation(line: 2610, column: 3, scope: !3515)
!3524 = !DILocation(line: 2612, column: 46, scope: !3514)
!3525 = !DILocation(line: 2612, column: 55, scope: !3514)
!3526 = !DILocation(line: 2612, column: 35, scope: !3514)
!3527 = !DILocation(line: 2613, column: 46, scope: !3514)
!3528 = !DILocation(line: 2615, column: 50, scope: !3514)
!3529 = !DILocation(line: 2615, column: 65, scope: !3514)
!3530 = !DILocation(line: 2615, column: 23, scope: !3514)
!3531 = !DILocation(line: 2615, column: 21, scope: !3514)
!3532 = !DILocation(line: 2616, column: 50, scope: !3514)
!3533 = !DILocation(line: 2616, column: 65, scope: !3514)
!3534 = !DILocation(line: 2616, column: 23, scope: !3514)
!3535 = !DILocation(line: 2616, column: 21, scope: !3514)
!3536 = !DILocation(line: 2618, column: 31, scope: !3514)
!3537 = !DILocation(line: 2618, column: 55, scope: !3514)
!3538 = !DILocation(line: 2618, column: 4, scope: !3514)
!3539 = !DILocation(line: 2618, column: 2, scope: !3514)
!3540 = !DILocation(line: 2619, column: 54, scope: !3514)
!3541 = !DILocation(line: 2620, column: 54, scope: !3514)
!3542 = !DILocation(line: 2619, column: 27, scope: !3514)
!3543 = !DILocation(line: 2619, column: 25, scope: !3514)
!3544 = !DILocation(line: 2621, column: 40, scope: !3514)
!3545 = !DILocation(line: 2621, column: 16, scope: !3514)
!3546 = !DILocation(line: 2621, column: 28, scope: !3514)
!3547 = !DILocation(line: 2622, column: 44, scope: !3514)
!3548 = !DILocation(line: 2622, column: 16, scope: !3514)
!3549 = !DILocation(line: 2622, column: 32, scope: !3514)
!3550 = distinct !{!3550, !3521, !3551}
!3551 = !DILocation(line: 2623, column: 5, scope: !3516)
!3552 = !DILocation(line: 2624, column: 3, scope: !3497)
!3553 = !DILocation(line: 2627, column: 36, scope: !3497)
!3554 = !DILocation(line: 2628, column: 36, scope: !3497)
!3555 = !DILocation(line: 2629, column: 37, scope: !3497)
!3556 = !DILocation(line: 2630, column: 37, scope: !3497)
!3557 = !DILocation(line: 2627, column: 3, scope: !3497)
!3558 = !DILocation(line: 2631, column: 36, scope: !3497)
!3559 = !DILocation(line: 2632, column: 36, scope: !3497)
!3560 = !DILocation(line: 2633, column: 37, scope: !3497)
!3561 = !DILocation(line: 2634, column: 37, scope: !3497)
!3562 = !DILocation(line: 2631, column: 3, scope: !3497)
!3563 = !DILocation(line: 2637, column: 36, scope: !3497)
!3564 = !DILocation(line: 2638, column: 36, scope: !3497)
!3565 = !DILocation(line: 2637, column: 7, scope: !3497)
!3566 = !DILocation(line: 2637, column: 5, scope: !3497)
!3567 = !DILocation(line: 2640, column: 53, scope: !3497)
!3568 = !DILocation(line: 2640, column: 14, scope: !3497)
!3569 = !DILocation(line: 2640, column: 39, scope: !3497)
!3570 = !DILocation(line: 2641, column: 54, scope: !3497)
!3571 = !DILocation(line: 2641, column: 14, scope: !3497)
!3572 = !DILocation(line: 2641, column: 40, scope: !3497)
!3573 = !DILocation(line: 2642, column: 49, scope: !3497)
!3574 = !DILocation(line: 2642, column: 14, scope: !3497)
!3575 = !DILocation(line: 2642, column: 35, scope: !3497)
!3576 = !DILocation(line: 2646, column: 36, scope: !3497)
!3577 = !DILocation(line: 2647, column: 36, scope: !3497)
!3578 = !DILocation(line: 2646, column: 7, scope: !3497)
!3579 = !DILocation(line: 2646, column: 5, scope: !3497)
!3580 = !DILocation(line: 2651, column: 36, scope: !3497)
!3581 = !DILocation(line: 2652, column: 36, scope: !3497)
!3582 = !DILocation(line: 2651, column: 7, scope: !3497)
!3583 = !DILocation(line: 2651, column: 5, scope: !3497)
!3584 = !DILocation(line: 2656, column: 36, scope: !3497)
!3585 = !DILocation(line: 2657, column: 36, scope: !3497)
!3586 = !DILocation(line: 2656, column: 7, scope: !3497)
!3587 = !DILocation(line: 2656, column: 5, scope: !3497)
!3588 = !DILocation(line: 2658, column: 1, scope: !3497)
!3589 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !833, file: !833, line: 224, type: !3590, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3597)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !3592, !3593, !7, !3596}
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !778, line: 48, baseType: !3594)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3597 = !{!3598, !3599, !3600, !3601}
!3598 = !DILocalVariable(name: "bi", arg: 1, scope: !3589, file: !833, line: 224, type: !3592)
!3599 = !DILocalVariable(name: "map", arg: 2, scope: !3589, file: !833, line: 224, type: !3593)
!3600 = !DILocalVariable(name: "start_bit", arg: 3, scope: !3589, file: !833, line: 225, type: !7)
!3601 = !DILocalVariable(name: "bit_no", arg: 4, scope: !3589, file: !833, line: 225, type: !3596)
!3602 = !DILocation(line: 0, scope: !3589)
!3603 = !DILocation(line: 227, column: 19, scope: !3589)
!3604 = !DILocation(line: 227, column: 12, scope: !3589)
!3605 = !DILocation(line: 228, column: 7, scope: !3589)
!3606 = !DILocation(line: 228, column: 12, scope: !3589)
!3607 = !DILocation(line: 0, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !833, line: 233, column: 11)
!3609 = distinct !DILexicalBlock(scope: !3589, file: !833, line: 232, column: 5)
!3610 = !DILocation(line: 231, column: 3, scope: !3589)
!3611 = !DILocation(line: 233, column: 12, scope: !3608)
!3612 = !DILocation(line: 233, column: 11, scope: !3609)
!3613 = !DILocation(line: 235, column: 13, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !833, line: 234, column: 2)
!3615 = !DILocation(line: 236, column: 4, scope: !3614)
!3616 = !DILocation(line: 239, column: 11, scope: !3609)
!3617 = distinct !{!3617, !3610, !3618}
!3618 = !DILocation(line: 242, column: 5, scope: !3589)
!3619 = !DILocation(line: 245, column: 11, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3589, file: !833, line: 245, column: 7)
!3621 = !DILocation(line: 245, column: 17, scope: !3620)
!3622 = !DILocation(line: 245, column: 22, scope: !3620)
!3623 = !DILocation(line: 245, column: 7, scope: !3589)
!3624 = !DILocation(line: 246, column: 27, scope: !3620)
!3625 = !DILocation(line: 246, column: 32, scope: !3620)
!3626 = !DILocation(line: 246, column: 5, scope: !3620)
!3627 = !DILocation(line: 249, column: 7, scope: !3589)
!3628 = !DILocation(line: 249, column: 15, scope: !3589)
!3629 = !DILocation(line: 250, column: 14, scope: !3589)
!3630 = !DILocation(line: 251, column: 7, scope: !3589)
!3631 = !DILocation(line: 251, column: 12, scope: !3589)
!3632 = !DILocation(line: 257, column: 16, scope: !3589)
!3633 = !DILocation(line: 257, column: 13, scope: !3589)
!3634 = !DILocation(line: 259, column: 11, scope: !3589)
!3635 = !DILocation(line: 260, column: 1, scope: !3589)
!3636 = distinct !DISubprogram(name: "bmp_iter_set", scope: !833, file: !833, line: 393, type: !3637, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3639)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!764, !3592, !3596}
!3639 = !{!3640, !3641, !3642}
!3640 = !DILocalVariable(name: "bi", arg: 1, scope: !3636, file: !833, line: 393, type: !3592)
!3641 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3636, file: !833, line: 393, type: !3596)
!3642 = !DILabel(scope: !3643, name: "next_bit", file: !833, line: 398)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !833, line: 397, column: 5)
!3644 = distinct !DILexicalBlock(scope: !3636, file: !833, line: 396, column: 7)
!3645 = !DILocation(line: 0, scope: !3636)
!3646 = !DILocation(line: 396, column: 11, scope: !3644)
!3647 = !DILocation(line: 396, column: 7, scope: !3644)
!3648 = !DILocation(line: 396, column: 7, scope: !3636)
!3649 = !DILocation(line: 419, column: 15, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !833, line: 418, column: 2)
!3651 = distinct !DILexicalBlock(scope: !3636, file: !833, line: 415, column: 5)
!3652 = !DILocation(line: 399, column: 7, scope: !3643)
!3653 = !DILocation(line: 398, column: 5, scope: !3643)
!3654 = !DILocation(line: 399, column: 20, scope: !3643)
!3655 = !DILocation(line: 399, column: 25, scope: !3643)
!3656 = !DILocation(line: 399, column: 14, scope: !3643)
!3657 = !DILocation(line: 401, column: 13, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3643, file: !833, line: 400, column: 2)
!3659 = !DILocation(line: 402, column: 12, scope: !3658)
!3660 = distinct !{!3660, !3652, !3661}
!3661 = !DILocation(line: 403, column: 2, scope: !3643)
!3662 = !DILocation(line: 410, column: 15, scope: !3636)
!3663 = !DILocation(line: 410, column: 42, scope: !3636)
!3664 = !DILocation(line: 411, column: 26, scope: !3636)
!3665 = !DILocation(line: 410, column: 11, scope: !3636)
!3666 = !DILocation(line: 412, column: 7, scope: !3636)
!3667 = !DILocation(line: 412, column: 14, scope: !3636)
!3668 = !DILocation(line: 0, scope: !3651)
!3669 = !DILocation(line: 414, column: 3, scope: !3636)
!3670 = !DILocation(line: 417, column: 7, scope: !3651)
!3671 = !DILocation(line: 417, column: 18, scope: !3651)
!3672 = !DILocation(line: 417, column: 26, scope: !3651)
!3673 = !DILocation(line: 419, column: 13, scope: !3650)
!3674 = !DILocation(line: 420, column: 8, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3650, file: !833, line: 420, column: 8)
!3676 = !DILocation(line: 420, column: 8, scope: !3650)
!3677 = !DILocation(line: 422, column: 12, scope: !3650)
!3678 = !DILocation(line: 423, column: 15, scope: !3650)
!3679 = distinct !{!3679, !3670, !3680}
!3680 = !DILocation(line: 424, column: 2, scope: !3651)
!3681 = !DILocation(line: 427, column: 28, scope: !3651)
!3682 = !DILocation(line: 427, column: 16, scope: !3651)
!3683 = !DILocation(line: 428, column: 12, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3651, file: !833, line: 428, column: 11)
!3685 = !DILocation(line: 428, column: 11, scope: !3651)
!3686 = !DILocation(line: 430, column: 27, scope: !3651)
!3687 = !DILocation(line: 430, column: 32, scope: !3651)
!3688 = !DILocation(line: 430, column: 15, scope: !3651)
!3689 = !DILocation(line: 431, column: 19, scope: !3651)
!3690 = distinct !{!3690, !3669, !3691}
!3691 = !DILocation(line: 432, column: 5, scope: !3636)
!3692 = !DILocation(line: 433, column: 1, scope: !3636)
!3693 = distinct !DISubprogram(name: "concat_INSN_LIST", scope: !3, file: !3, line: 2575, type: !3694, scopeLine: 2576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!777, !777, !777}
!3696 = !{!3697, !3698, !3699}
!3697 = !DILocalVariable(name: "copy", arg: 1, scope: !3693, file: !3, line: 2575, type: !777)
!3698 = !DILocalVariable(name: "old", arg: 2, scope: !3693, file: !3, line: 2575, type: !777)
!3699 = !DILocalVariable(name: "new_rtx", scope: !3693, file: !3, line: 2577, type: !777)
!3700 = !DILocation(line: 0, scope: !3693)
!3701 = !DILocation(line: 2578, column: 3, scope: !3693)
!3702 = !DILocation(line: 2578, column: 3, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 2578, column: 3)
!3704 = !DILocation(line: 2579, column: 32, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 2578, column: 3)
!3706 = !DILocation(line: 2579, column: 15, scope: !3705)
!3707 = !DILocation(line: 2578, column: 24, scope: !3705)
!3708 = !DILocation(line: 2578, column: 3, scope: !3705)
!3709 = distinct !{!3709, !3702, !3710}
!3710 = !DILocation(line: 2579, column: 55, scope: !3703)
!3711 = !DILocation(line: 2580, column: 3, scope: !3693)
!3712 = distinct !DISubprogram(name: "bmp_iter_next", scope: !833, file: !833, line: 382, type: !3713, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{null, !3592, !3596}
!3715 = !{!3716, !3717}
!3716 = !DILocalVariable(name: "bi", arg: 1, scope: !3712, file: !833, line: 382, type: !3592)
!3717 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3712, file: !833, line: 382, type: !3596)
!3718 = !DILocation(line: 0, scope: !3712)
!3719 = !DILocation(line: 384, column: 7, scope: !3712)
!3720 = !DILocation(line: 384, column: 12, scope: !3712)
!3721 = !DILocation(line: 385, column: 11, scope: !3712)
!3722 = !DILocation(line: 386, column: 1, scope: !3712)
!3723 = distinct !DISubprogram(name: "concat_insn_mem_list", scope: !3, file: !3, line: 2584, type: !3724, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3727)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{null, !777, !777, !3726, !3726}
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!3727 = !{!3728, !3729, !3730, !3731, !3732, !3733}
!3728 = !DILocalVariable(name: "copy_insns", arg: 1, scope: !3723, file: !3, line: 2584, type: !777)
!3729 = !DILocalVariable(name: "copy_mems", arg: 2, scope: !3723, file: !3, line: 2584, type: !777)
!3730 = !DILocalVariable(name: "old_insns_p", arg: 3, scope: !3723, file: !3, line: 2584, type: !3726)
!3731 = !DILocalVariable(name: "old_mems_p", arg: 4, scope: !3723, file: !3, line: 2585, type: !3726)
!3732 = !DILocalVariable(name: "new_insns", scope: !3723, file: !3, line: 2587, type: !777)
!3733 = !DILocalVariable(name: "new_mems", scope: !3723, file: !3, line: 2588, type: !777)
!3734 = !DILocation(line: 0, scope: !3723)
!3735 = !DILocation(line: 2587, column: 19, scope: !3723)
!3736 = !DILocation(line: 2588, column: 18, scope: !3723)
!3737 = !DILocation(line: 2590, column: 3, scope: !3723)
!3738 = !DILocation(line: 2592, column: 36, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 2591, column: 5)
!3740 = !DILocation(line: 2592, column: 19, scope: !3739)
!3741 = !DILocation(line: 2593, column: 45, scope: !3739)
!3742 = !DILocation(line: 2593, column: 18, scope: !3739)
!3743 = !DILocation(line: 2594, column: 20, scope: !3739)
!3744 = !DILocation(line: 2595, column: 19, scope: !3739)
!3745 = distinct !{!3745, !3737, !3746}
!3746 = !DILocation(line: 2596, column: 5, scope: !3723)
!3747 = !DILocation(line: 2598, column: 16, scope: !3723)
!3748 = !DILocation(line: 2599, column: 15, scope: !3723)
!3749 = !DILocation(line: 2600, column: 1, scope: !3723)
!3750 = distinct !DISubprogram(name: "debug_rgn_dependencies", scope: !3, file: !3, line: 2779, type: !2101, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3751)
!3751 = !{!3752, !3753, !3754, !3758}
!3752 = !DILocalVariable(name: "from_bb", arg: 1, scope: !3750, file: !3, line: 2779, type: !765)
!3753 = !DILocalVariable(name: "bb", scope: !3750, file: !3, line: 2781, type: !765)
!3754 = !DILocalVariable(name: "head", scope: !3755, file: !3, line: 2788, type: !777)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 2787, column: 5)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 2786, column: 3)
!3757 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 2786, column: 3)
!3758 = !DILocalVariable(name: "tail", scope: !3755, file: !3, line: 2788, type: !777)
!3759 = !DILocation(line: 0, scope: !3750)
!3760 = !DILocation(line: 2783, column: 12, scope: !3750)
!3761 = !DILocation(line: 2783, column: 3, scope: !3750)
!3762 = !DILocation(line: 0, scope: !3755)
!3763 = !DILocation(line: 2786, column: 8, scope: !3757)
!3764 = !DILocation(line: 0, scope: !3757)
!3765 = !DILocation(line: 2786, column: 27, scope: !3756)
!3766 = !DILocation(line: 2786, column: 25, scope: !3756)
!3767 = !DILocation(line: 2786, column: 3, scope: !3757)
!3768 = !DILocation(line: 2788, column: 7, scope: !3755)
!3769 = !DILocation(line: 2790, column: 26, scope: !3755)
!3770 = !DILocation(line: 2790, column: 45, scope: !3755)
!3771 = !DILocation(line: 2790, column: 7, scope: !3755)
!3772 = !DILocation(line: 2791, column: 16, scope: !3755)
!3773 = !DILocation(line: 2792, column: 9, scope: !3755)
!3774 = !DILocation(line: 2791, column: 7, scope: !3755)
!3775 = !DILocation(line: 2794, column: 27, scope: !3755)
!3776 = !DILocation(line: 2794, column: 33, scope: !3755)
!3777 = !DILocation(line: 2794, column: 7, scope: !3755)
!3778 = !DILocation(line: 2795, column: 5, scope: !3756)
!3779 = !DILocation(line: 2786, column: 3, scope: !3756)
!3780 = distinct !{!3780, !3767, !3781}
!3781 = !DILocation(line: 2795, column: 5, scope: !3757)
!3782 = !DILocation(line: 2796, column: 1, scope: !3750)
!3783 = distinct !DISubprogram(name: "debug_dependencies", scope: !3, file: !3, line: 2800, type: !2158, scopeLine: 2801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3784)
!3784 = !{!3785, !3786, !3787, !3788, !3789, !3795, !3797}
!3785 = !DILocalVariable(name: "head", arg: 1, scope: !3783, file: !3, line: 2800, type: !777)
!3786 = !DILocalVariable(name: "tail", arg: 2, scope: !3783, file: !3, line: 2800, type: !777)
!3787 = !DILocalVariable(name: "insn", scope: !3783, file: !3, line: 2802, type: !777)
!3788 = !DILocalVariable(name: "next_tail", scope: !3783, file: !3, line: 2803, type: !777)
!3789 = !DILocalVariable(name: "n", scope: !3790, file: !3, line: 2816, type: !765)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 2815, column: 2)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2814, column: 11)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 2813, column: 5)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2812, column: 3)
!3794 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 2812, column: 3)
!3795 = !DILocalVariable(name: "sd_it", scope: !3796, file: !3, line: 2849, type: !2176)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2848, column: 7)
!3797 = !DILocalVariable(name: "dep", scope: !3796, file: !3, line: 2850, type: !3798)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_t", file: !385, line: 245, baseType: !3799)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_def", file: !385, line: 244, baseType: !2195)
!3801 = !DILocation(line: 0, scope: !3783)
!3802 = !DILocation(line: 2803, column: 19, scope: !3783)
!3803 = !DILocation(line: 2805, column: 12, scope: !3783)
!3804 = !DILocation(line: 2805, column: 3, scope: !3783)
!3805 = !DILocation(line: 2808, column: 12, scope: !3783)
!3806 = !DILocation(line: 2808, column: 3, scope: !3783)
!3807 = !DILocation(line: 0, scope: !3796)
!3808 = !DILocation(line: 0, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 2852, column: 2)
!3810 = !DILocation(line: 2812, column: 8, scope: !3794)
!3811 = !DILocation(line: 0, scope: !3794)
!3812 = !DILocation(line: 2812, column: 26, scope: !3793)
!3813 = !DILocation(line: 2812, column: 3, scope: !3794)
!3814 = !DILocation(line: 2814, column: 13, scope: !3791)
!3815 = !DILocation(line: 2814, column: 11, scope: !3792)
!3816 = !DILocation(line: 2817, column: 13, scope: !3790)
!3817 = !DILocation(line: 2817, column: 38, scope: !3790)
!3818 = !DILocation(line: 2817, column: 4, scope: !3790)
!3819 = !DILocation(line: 2818, column: 8, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 2818, column: 8)
!3821 = !DILocation(line: 2818, column: 8, scope: !3790)
!3822 = !DILocation(line: 2820, column: 12, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 2819, column: 6)
!3824 = !DILocation(line: 0, scope: !3790)
!3825 = !DILocation(line: 2821, column: 17, scope: !3823)
!3826 = !DILocation(line: 2821, column: 37, scope: !3823)
!3827 = !DILocation(line: 2821, column: 8, scope: !3823)
!3828 = !DILocation(line: 2822, column: 6, scope: !3823)
!3829 = !DILocation(line: 2824, column: 15, scope: !3820)
!3830 = !DILocation(line: 2824, column: 38, scope: !3820)
!3831 = !DILocation(line: 2824, column: 6, scope: !3820)
!3832 = !DILocation(line: 2828, column: 16, scope: !3792)
!3833 = !DILocation(line: 2830, column: 10, scope: !3792)
!3834 = !DILocation(line: 2831, column: 9, scope: !3792)
!3835 = !DILocation(line: 2832, column: 9, scope: !3792)
!3836 = !DILocation(line: 2833, column: 9, scope: !3792)
!3837 = !DILocation(line: 2834, column: 9, scope: !3792)
!3838 = !DILocation(line: 2834, column: 38, scope: !3792)
!3839 = !DILocation(line: 2835, column: 10, scope: !3792)
!3840 = !DILocation(line: 2835, column: 28, scope: !3792)
!3841 = !DILocation(line: 2836, column: 13, scope: !3792)
!3842 = !DILocation(line: 2837, column: 5, scope: !3792)
!3843 = !DILocation(line: 2838, column: 10, scope: !3792)
!3844 = !DILocation(line: 2838, column: 28, scope: !3792)
!3845 = !DILocation(line: 2839, column: 13, scope: !3792)
!3846 = !DILocation(line: 2840, column: 5, scope: !3792)
!3847 = !DILocation(line: 2828, column: 7, scope: !3792)
!3848 = !DILocation(line: 2842, column: 11, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2842, column: 11)
!3850 = !DILocation(line: 2842, column: 33, scope: !3849)
!3851 = !DILocation(line: 0, scope: !3849)
!3852 = !DILocation(line: 2842, column: 11, scope: !3792)
!3853 = !DILocation(line: 2843, column: 2, scope: !3849)
!3854 = !DILocation(line: 2845, column: 2, scope: !3849)
!3855 = !DILocation(line: 2847, column: 16, scope: !3792)
!3856 = !DILocation(line: 2847, column: 7, scope: !3792)
!3857 = !DILocation(line: 2849, column: 2, scope: !3796)
!3858 = !DILocation(line: 2850, column: 2, scope: !3796)
!3859 = !DILocation(line: 2852, column: 2, scope: !3809)
!3860 = !DILocation(line: 2852, column: 2, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 2852, column: 2)
!3862 = !DILocation(line: 2853, column: 13, scope: !3861)
!3863 = !DILocation(line: 2853, column: 32, scope: !3861)
!3864 = !DILocation(line: 2853, column: 4, scope: !3861)
!3865 = distinct !{!3865, !3859, !3866}
!3866 = !DILocation(line: 2853, column: 56, scope: !3809)
!3867 = !DILocation(line: 2854, column: 7, scope: !3792)
!3868 = !DILocation(line: 2855, column: 16, scope: !3792)
!3869 = !DILocation(line: 2855, column: 7, scope: !3792)
!3870 = !DILocation(line: 2856, column: 5, scope: !3792)
!3871 = !DILocation(line: 2812, column: 47, scope: !3793)
!3872 = !DILocation(line: 2812, column: 3, scope: !3793)
!3873 = distinct !{!3873, !3813, !3874}
!3874 = !DILocation(line: 2856, column: 5, scope: !3794)
!3875 = !DILocation(line: 2858, column: 12, scope: !3783)
!3876 = !DILocation(line: 2858, column: 3, scope: !3783)
!3877 = !DILocation(line: 2859, column: 1, scope: !3783)
!3878 = distinct !DISubprogram(name: "sel_sched_p", scope: !385, file: !385, line: 117, type: !1996, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!3879 = !DILocation(line: 119, column: 10, scope: !3878)
!3880 = !DILocation(line: 119, column: 29, scope: !3878)
!3881 = !DILocation(line: 119, column: 43, scope: !3878)
!3882 = !DILocation(line: 119, column: 3, scope: !3878)
!3883 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_index", scope: !385, file: !385, line: 825, type: !3884, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3938)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!3886, !3930, !7}
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_def", file: !385, line: 822, baseType: !3888)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_insn_data", file: !385, line: 751, size: 768, elements: !3889)
!3889 = !{!3890, !3891, !3892, !3893, !3894, !3895, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3913, !3914, !3922, !3929}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !3888, file: !385, line: 758, baseType: !765, size: 32)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3888, file: !385, line: 761, baseType: !765, size: 32, offset: 32)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !3888, file: !385, line: 765, baseType: !765, size: 32, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "inter_tick", scope: !3888, file: !385, line: 769, baseType: !765, size: 32, offset: 96)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !3888, file: !385, line: 772, baseType: !765, size: 32, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3888, file: !385, line: 774, baseType: !3896, size: 16, offset: 160)
!3896 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "fed_by_spec_load", scope: !3888, file: !385, line: 778, baseType: !7, size: 1, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "is_load_insn", scope: !3888, file: !385, line: 779, baseType: !7, size: 1, offset: 177, flags: DIFlagBitField, extraData: i64 176)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "priority_status", scope: !3888, file: !385, line: 784, baseType: !1685, size: 8, offset: 184)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "todo_spec", scope: !3888, file: !385, line: 787, baseType: !1958, size: 32, offset: 192)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "done_spec", scope: !3888, file: !385, line: 790, baseType: !1958, size: 32, offset: 224)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "check_spec", scope: !3888, file: !385, line: 793, baseType: !1958, size: 32, offset: 256)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_block", scope: !3888, file: !385, line: 796, baseType: !1311, size: 64, offset: 320)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pat", scope: !3888, file: !385, line: 799, baseType: !777, size: 64, offset: 384)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !3888, file: !385, line: 804, baseType: !3906, size: 64, offset: 448)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_pressure_data", file: !385, line: 711, size: 32, elements: !3908)
!3908 = !{!3909, !3910, !3911, !3912}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "clobber_increase", scope: !3907, file: !385, line: 714, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "set_increase", scope: !3907, file: !385, line: 717, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "unused_set_increase", scope: !3907, file: !385, line: 720, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !3907, file: !385, line: 722, baseType: !765, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_pressure", scope: !3888, file: !385, line: 810, baseType: !772, size: 64, offset: 512)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "reg_use_list", scope: !3888, file: !385, line: 813, baseType: !3915, size: 64, offset: 576)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use_data", file: !385, line: 726, size: 256, elements: !3917)
!3917 = !{!3918, !3919, !3920, !3921}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !3916, file: !385, line: 729, baseType: !765, size: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3916, file: !385, line: 731, baseType: !777, size: 64, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_use", scope: !3916, file: !385, line: 733, baseType: !3915, size: 64, offset: 128)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_use", scope: !3916, file: !385, line: 735, baseType: !3915, size: 64, offset: 192)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set_list", scope: !3888, file: !385, line: 816, baseType: !3923, size: 64, offset: 640)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_set_data", file: !385, line: 741, size: 192, elements: !3925)
!3925 = !{!3926, !3927, !3928}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !3924, file: !385, line: 744, baseType: !765, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3924, file: !385, line: 746, baseType: !777, size: 64, offset: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_set", scope: !3924, file: !385, line: 748, baseType: !3923, size: 64, offset: 128)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure_excess_cost_change", scope: !3888, file: !385, line: 819, baseType: !765, size: 32, offset: 704)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_base", file: !385, line: 825, baseType: !3932)
!3932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_base", file: !385, line: 825, size: 832, elements: !3933)
!3933 = !{!3934, !3935, !3936}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3932, file: !385, line: 825, baseType: !7, size: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3932, file: !385, line: 825, baseType: !7, size: 32, offset: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3932, file: !385, line: 825, baseType: !3937, size: 768, offset: 64)
!3937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3887, size: 768, elements: !812)
!3938 = !{!3939, !3940}
!3939 = !DILocalVariable(name: "vec_", arg: 1, scope: !3883, file: !385, line: 825, type: !3930)
!3940 = !DILocalVariable(name: "ix_", arg: 2, scope: !3883, file: !385, line: 825, type: !7)
!3941 = !DILocation(line: 0, scope: !3883)
!3942 = !DILocation(line: 825, column: 1, scope: !3883)
!3943 = distinct !DISubprogram(name: "recog_memoized", scope: !3944, file: !3944, line: 150, type: !2074, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3945)
!3944 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3945 = !{!3946}
!3946 = !DILocalVariable(name: "insn", arg: 1, scope: !3943, file: !3944, line: 150, type: !777)
!3947 = !DILocation(line: 0, scope: !3943)
!3948 = !DILocation(line: 152, column: 7, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3943, file: !3944, line: 152, column: 7)
!3950 = !DILocation(line: 152, column: 24, scope: !3949)
!3951 = !DILocation(line: 152, column: 7, scope: !3943)
!3952 = !DILocation(line: 153, column: 31, scope: !3949)
!3953 = !DILocation(line: 153, column: 24, scope: !3949)
!3954 = !DILocation(line: 153, column: 22, scope: !3949)
!3955 = !DILocation(line: 153, column: 5, scope: !3949)
!3956 = !DILocation(line: 154, column: 10, scope: !3943)
!3957 = !DILocation(line: 154, column: 3, scope: !3943)
!3958 = !DILocation(line: 0, scope: !2173)
!3959 = !DILocation(line: 1432, column: 19, scope: !2173)
!3960 = !DILocation(line: 1434, column: 5, scope: !2173)
!3961 = !DILocation(line: 1434, column: 11, scope: !2173)
!3962 = !DILocation(line: 1435, column: 5, scope: !2173)
!3963 = !DILocation(line: 1435, column: 10, scope: !2173)
!3964 = !DILocation(line: 1436, column: 5, scope: !2173)
!3965 = !DILocation(line: 1436, column: 11, scope: !2173)
!3966 = !DILocation(line: 1439, column: 5, scope: !2173)
!3967 = !DILocation(line: 1439, column: 16, scope: !2173)
!3968 = !DILocation(line: 1441, column: 3, scope: !2173)
!3969 = distinct !DISubprogram(name: "sd_iterator_cond", scope: !385, file: !385, line: 1446, type: !3970, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3974)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!764, !3972, !3973}
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3974 = !{!3975, !3976, !3977, !3978, !3981}
!3975 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !3969, file: !385, line: 1446, type: !3972)
!3976 = !DILocalVariable(name: "dep_ptr", arg: 2, scope: !3969, file: !385, line: 1446, type: !3973)
!3977 = !DILocalVariable(name: "link", scope: !3969, file: !385, line: 1448, type: !2184)
!3978 = !DILocalVariable(name: "types", scope: !3979, file: !385, line: 1457, type: !2180)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !385, line: 1456, column: 5)
!3980 = distinct !DILexicalBlock(scope: !3969, file: !385, line: 1450, column: 7)
!3981 = !DILocalVariable(name: "list", scope: !3982, file: !385, line: 1462, type: !3984)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !385, line: 1461, column: 2)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !385, line: 1459, column: 11)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_list_t", file: !385, line: 305, baseType: !3985)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_deps_list", file: !385, line: 297, size: 128, elements: !3987)
!3987 = !{!3988, !3989}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3986, file: !385, line: 300, baseType: !2184, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !3986, file: !385, line: 303, baseType: !765, size: 32, offset: 64)
!3990 = !DILocation(line: 0, scope: !3969)
!3991 = !DILocation(line: 1448, column: 30, scope: !3969)
!3992 = !DILocation(line: 1448, column: 21, scope: !3969)
!3993 = !DILocation(line: 1450, column: 12, scope: !3980)
!3994 = !DILocation(line: 1450, column: 7, scope: !3969)
!3995 = !DILocation(line: 1452, column: 18, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3980, file: !385, line: 1451, column: 5)
!3997 = !DILocation(line: 1452, column: 16, scope: !3996)
!3998 = !DILocation(line: 1453, column: 7, scope: !3996)
!3999 = !DILocation(line: 1457, column: 41, scope: !3979)
!4000 = !DILocation(line: 0, scope: !3979)
!4001 = !DILocation(line: 1459, column: 17, scope: !3983)
!4002 = !DILocation(line: 1459, column: 11, scope: !3979)
!4003 = !DILocation(line: 1462, column: 4, scope: !3982)
!4004 = !DILocation(line: 1464, column: 26, scope: !3982)
!4005 = !DILocation(line: 1465, column: 36, scope: !3982)
!4006 = !DILocation(line: 0, scope: !3982)
!4007 = !DILocation(line: 1464, column: 4, scope: !3982)
!4008 = !DILocation(line: 1467, column: 21, scope: !3982)
!4009 = !DILocation(line: 1467, column: 18, scope: !3982)
!4010 = !DILocation(line: 1469, column: 8, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3982, file: !385, line: 1469, column: 8)
!4012 = !DILocation(line: 1469, column: 8, scope: !3982)
!4013 = !DILocation(line: 1470, column: 13, scope: !4011)
!4014 = !DILocation(line: 1470, column: 6, scope: !4011)
!4015 = !DILocation(line: 1471, column: 2, scope: !3983)
!4016 = !DILocation(line: 1473, column: 16, scope: !3979)
!4017 = !DILocation(line: 1474, column: 7, scope: !3979)
!4018 = !DILocation(line: 0, scope: !3980)
!4019 = !DILocation(line: 1476, column: 1, scope: !3969)
!4020 = distinct !DISubprogram(name: "sd_iterator_next", scope: !385, file: !385, line: 1480, type: !4021, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{null, !3972}
!4023 = !{!4024}
!4024 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !4020, file: !385, line: 1480, type: !3972)
!4025 = !DILocation(line: 0, scope: !4020)
!4026 = !DILocation(line: 1482, column: 20, scope: !4020)
!4027 = !DILocation(line: 1482, column: 17, scope: !4020)
!4028 = !DILocation(line: 1483, column: 1, scope: !4020)
!4029 = distinct !DISubprogram(name: "sched_is_disabled_for_current_region_p", scope: !3, file: !3, line: 2864, type: !1996, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4030)
!4030 = !{!4031}
!4031 = !DILocalVariable(name: "bb", scope: !4029, file: !3, line: 2866, type: !765)
!4032 = !DILocation(line: 0, scope: !4029)
!4033 = !DILocation(line: 2868, column: 8, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2868, column: 3)
!4035 = !DILocation(line: 0, scope: !4034)
!4036 = !DILocation(line: 2868, column: 21, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2868, column: 3)
!4038 = !DILocation(line: 2868, column: 19, scope: !4037)
!4039 = !DILocation(line: 2868, column: 3, scope: !4034)
!4040 = !DILocation(line: 2869, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 2869, column: 9)
!4042 = !DILocation(line: 2869, column: 43, scope: !4041)
!4043 = !DILocation(line: 2869, column: 49, scope: !4041)
!4044 = !DILocation(line: 2869, column: 9, scope: !4037)
!4045 = !DILocation(line: 2868, column: 42, scope: !4037)
!4046 = !DILocation(line: 2868, column: 3, scope: !4037)
!4047 = distinct !{!4047, !4039, !4048}
!4048 = !DILocation(line: 2870, column: 14, scope: !4034)
!4049 = !DILocation(line: 2873, column: 1, scope: !4029)
!4050 = distinct !DISubprogram(name: "free_rgn_deps", scope: !3, file: !3, line: 2880, type: !2093, scopeLine: 2881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4051)
!4051 = !{!4052, !4053, !4057}
!4052 = !DILocalVariable(name: "bb", scope: !4050, file: !3, line: 2882, type: !765)
!4053 = !DILocalVariable(name: "head", scope: !4054, file: !3, line: 2886, type: !777)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 2885, column: 5)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 2884, column: 3)
!4056 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 2884, column: 3)
!4057 = !DILocalVariable(name: "tail", scope: !4054, file: !3, line: 2886, type: !777)
!4058 = !DILocation(line: 0, scope: !4050)
!4059 = !DILocation(line: 0, scope: !4054)
!4060 = !DILocation(line: 2884, column: 8, scope: !4056)
!4061 = !DILocation(line: 0, scope: !4056)
!4062 = !DILocation(line: 2884, column: 21, scope: !4055)
!4063 = !DILocation(line: 2884, column: 19, scope: !4055)
!4064 = !DILocation(line: 2884, column: 3, scope: !4056)
!4065 = !DILocation(line: 2886, column: 7, scope: !4054)
!4066 = !DILocation(line: 2888, column: 7, scope: !4054)
!4067 = !DILocation(line: 2889, column: 26, scope: !4054)
!4068 = !DILocation(line: 2889, column: 45, scope: !4054)
!4069 = !DILocation(line: 2889, column: 7, scope: !4054)
!4070 = !DILocation(line: 2891, column: 24, scope: !4054)
!4071 = !DILocation(line: 2891, column: 30, scope: !4054)
!4072 = !DILocation(line: 2891, column: 7, scope: !4054)
!4073 = !DILocation(line: 2892, column: 5, scope: !4055)
!4074 = !DILocation(line: 2884, column: 3, scope: !4055)
!4075 = distinct !{!4075, !4064, !4076}
!4076 = !DILocation(line: 2892, column: 5, scope: !4056)
!4077 = !DILocation(line: 2893, column: 1, scope: !4050)
!4078 = distinct !DISubprogram(name: "compute_priorities", scope: !3, file: !3, line: 2899, type: !2093, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4079)
!4079 = !{!4080, !4081, !4085}
!4080 = !DILocalVariable(name: "bb", scope: !4078, file: !3, line: 2901, type: !765)
!4081 = !DILocalVariable(name: "head", scope: !4082, file: !3, line: 2906, type: !777)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 2905, column: 5)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 2904, column: 3)
!4084 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 2904, column: 3)
!4085 = !DILocalVariable(name: "tail", scope: !4082, file: !3, line: 2906, type: !777)
!4086 = !DILocation(line: 2903, column: 3, scope: !4078)
!4087 = !DILocation(line: 2903, column: 23, scope: !4078)
!4088 = !DILocation(line: 2903, column: 48, scope: !4078)
!4089 = !DILocation(line: 0, scope: !4078)
!4090 = !DILocation(line: 0, scope: !4082)
!4091 = !DILocation(line: 2904, column: 8, scope: !4084)
!4092 = !DILocation(line: 0, scope: !4084)
!4093 = !DILocation(line: 2904, column: 21, scope: !4083)
!4094 = !DILocation(line: 2904, column: 19, scope: !4083)
!4095 = !DILocation(line: 2904, column: 3, scope: !4084)
!4096 = !DILocation(line: 2906, column: 7, scope: !4082)
!4097 = !DILocation(line: 2908, column: 7, scope: !4082)
!4098 = !DILocation(line: 2909, column: 26, scope: !4082)
!4099 = !DILocation(line: 2909, column: 45, scope: !4082)
!4100 = !DILocation(line: 2909, column: 7, scope: !4082)
!4101 = !DILocation(line: 2911, column: 28, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 2911, column: 11)
!4103 = !DILocation(line: 2911, column: 34, scope: !4102)
!4104 = !DILocation(line: 2911, column: 11, scope: !4102)
!4105 = !DILocation(line: 2911, column: 11, scope: !4082)
!4106 = !DILocation(line: 2914, column: 38, scope: !4082)
!4107 = !DILocation(line: 2914, column: 44, scope: !4082)
!4108 = !DILocation(line: 2914, column: 22, scope: !4082)
!4109 = !DILocation(line: 2914, column: 19, scope: !4082)
!4110 = !DILocation(line: 2915, column: 5, scope: !4083)
!4111 = !DILocation(line: 2904, column: 3, scope: !4083)
!4112 = distinct !{!4112, !4095, !4113}
!4113 = !DILocation(line: 2915, column: 5, scope: !4084)
!4114 = !DILocation(line: 2916, column: 3, scope: !4078)
!4115 = !DILocation(line: 2916, column: 23, scope: !4078)
!4116 = !DILocation(line: 2916, column: 47, scope: !4078)
!4117 = !DILocation(line: 2917, column: 1, scope: !4078)
!4118 = distinct !DISubprogram(name: "sched_rgn_init", scope: !3, file: !3, line: 3034, type: !4119, scopeLine: 3035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !764}
!4121 = !{!4122}
!4122 = !DILocalVariable(name: "single_blocks_p", arg: 1, scope: !4118, file: !3, line: 3034, type: !764)
!4123 = !DILocation(line: 0, scope: !4118)
!4124 = !DILocation(line: 3036, column: 21, scope: !4118)
!4125 = !DILocation(line: 3037, column: 7, scope: !4118)
!4126 = !DILocation(line: 3036, column: 17, scope: !4118)
!4127 = !DILocation(line: 3039, column: 12, scope: !4118)
!4128 = !DILocation(line: 3040, column: 11, scope: !4118)
!4129 = !DILocation(line: 3042, column: 3, scope: !4118)
!4130 = !DILocation(line: 3044, column: 3, scope: !4118)
!4131 = !DILocation(line: 3044, column: 32, scope: !4118)
!4132 = !DILocation(line: 3045, column: 3, scope: !4118)
!4133 = !DILocation(line: 3045, column: 31, scope: !4118)
!4134 = !DILocation(line: 3048, column: 7, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 3048, column: 7)
!4136 = !DILocation(line: 3049, column: 7, scope: !4135)
!4137 = !DILocation(line: 3049, column: 10, scope: !4135)
!4138 = !DILocation(line: 3049, column: 25, scope: !4135)
!4139 = !DILocation(line: 3050, column: 11, scope: !4135)
!4140 = !DILocation(line: 3050, column: 7, scope: !4135)
!4141 = !DILocation(line: 3051, column: 10, scope: !4135)
!4142 = !DILocation(line: 3048, column: 7, scope: !4118)
!4143 = !DILocation(line: 3053, column: 33, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 3052, column: 5)
!4145 = !DILocation(line: 3053, column: 7, scope: !4144)
!4146 = !DILocation(line: 3054, column: 5, scope: !4144)
!4147 = !DILocation(line: 3058, column: 12, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 3058, column: 11)
!4149 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 3056, column: 5)
!4150 = !DILocation(line: 3058, column: 11, scope: !4149)
!4151 = !DILocation(line: 3059, column: 2, scope: !4148)
!4152 = !DILocation(line: 3062, column: 7, scope: !4149)
!4153 = !DILocation(line: 3064, column: 11, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 3064, column: 11)
!4155 = !DILocation(line: 3064, column: 25, scope: !4154)
!4156 = !DILocation(line: 3064, column: 11, scope: !4149)
!4157 = !DILocation(line: 3065, column: 2, scope: !4154)
!4158 = !DILocation(line: 3069, column: 12, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 3069, column: 11)
!4160 = !DILocation(line: 3069, column: 11, scope: !4149)
!4161 = !DILocation(line: 3070, column: 2, scope: !4159)
!4162 = !DILocation(line: 3073, column: 3, scope: !4118)
!4163 = !DILocation(line: 3075, column: 30, scope: !4118)
!4164 = !DILocation(line: 3075, column: 3, scope: !4118)
!4165 = !DILocation(line: 3076, column: 9, scope: !4118)
!4166 = !DILocation(line: 3075, column: 58, scope: !4118)
!4167 = !DILocation(line: 3075, column: 27, scope: !4118)
!4168 = !DILocation(line: 3077, column: 1, scope: !4118)
!4169 = distinct !DISubprogram(name: "extend_regions", scope: !3, file: !3, line: 3351, type: !2093, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4170 = !DILocation(line: 3353, column: 15, scope: !4169)
!4171 = !DILocation(line: 3353, column: 13, scope: !4169)
!4172 = !DILocation(line: 3354, column: 18, scope: !4169)
!4173 = !DILocation(line: 3354, column: 16, scope: !4169)
!4174 = !DILocation(line: 3355, column: 17, scope: !4169)
!4175 = !DILocation(line: 3355, column: 15, scope: !4169)
!4176 = !DILocation(line: 3356, column: 20, scope: !4169)
!4177 = !DILocation(line: 3356, column: 18, scope: !4169)
!4178 = !DILocation(line: 3357, column: 1, scope: !4169)
!4179 = distinct !DISubprogram(name: "is_cfg_nonregular", scope: !3, file: !3, line: 252, type: !2124, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4180)
!4180 = !{!4181, !4182, !4183, !4189, !4190, !4191}
!4181 = !DILocalVariable(name: "b", scope: !4179, file: !3, line: 254, type: !1311)
!4182 = !DILocalVariable(name: "insn", scope: !4179, file: !3, line: 255, type: !777)
!4183 = !DILocalVariable(name: "note", scope: !4184, file: !3, line: 277, type: !777)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 276, column: 7)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 275, column: 5)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 275, column: 5)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 274, column: 3)
!4188 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 274, column: 3)
!4189 = !DILocalVariable(name: "next", scope: !4184, file: !3, line: 277, type: !777)
!4190 = !DILocalVariable(name: "set", scope: !4184, file: !3, line: 277, type: !777)
!4191 = !DILocalVariable(name: "dest", scope: !4184, file: !3, line: 277, type: !777)
!4192 = !DILocation(line: 259, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 259, column: 7)
!4194 = !DILocation(line: 263, column: 7, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 263, column: 7)
!4196 = !DILocation(line: 259, column: 7, scope: !4179)
!4197 = !DILocation(line: 269, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 269, column: 7)
!4199 = !DILocation(line: 269, column: 7, scope: !4179)
!4200 = !DILocation(line: 274, column: 3, scope: !4188)
!4201 = !DILocation(line: 274, column: 3, scope: !4187)
!4202 = !DILocation(line: 0, scope: !4188)
!4203 = !DILocation(line: 0, scope: !4179)
!4204 = !DILocation(line: 275, column: 5, scope: !4186)
!4205 = !DILocation(line: 0, scope: !4186)
!4206 = !DILocation(line: 275, column: 5, scope: !4185)
!4207 = !DILocation(line: 281, column: 6, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 281, column: 6)
!4209 = !DILocation(line: 281, column: 20, scope: !4208)
!4210 = !DILocation(line: 281, column: 23, scope: !4208)
!4211 = !DILocation(line: 281, column: 6, scope: !4184)
!4212 = !DILocation(line: 284, column: 7, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 284, column: 6)
!4214 = !DILocation(line: 284, column: 6, scope: !4184)
!4215 = !DILocation(line: 287, column: 9, scope: !4184)
!4216 = !DILocation(line: 0, scope: !4184)
!4217 = !DILocation(line: 288, column: 11, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 288, column: 6)
!4219 = !DILocation(line: 288, column: 6, scope: !4184)
!4220 = !DILocation(line: 295, column: 9, scope: !4184)
!4221 = !DILocation(line: 296, column: 11, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 296, column: 6)
!4223 = !DILocation(line: 297, column: 6, scope: !4222)
!4224 = !DILocation(line: 297, column: 10, scope: !4222)
!4225 = !DILocation(line: 298, column: 6, scope: !4222)
!4226 = !DILocation(line: 298, column: 10, scope: !4222)
!4227 = !DILocation(line: 298, column: 31, scope: !4222)
!4228 = !DILocation(line: 298, column: 28, scope: !4222)
!4229 = !DILocation(line: 299, column: 3, scope: !4222)
!4230 = !DILocation(line: 299, column: 6, scope: !4222)
!4231 = !DILocation(line: 300, column: 23, scope: !4222)
!4232 = !DILocation(line: 301, column: 6, scope: !4222)
!4233 = !DILocation(line: 301, column: 9, scope: !4222)
!4234 = !DILocation(line: 301, column: 34, scope: !4222)
!4235 = !DILocation(line: 301, column: 31, scope: !4222)
!4236 = !DILocation(line: 296, column: 6, scope: !4184)
!4237 = !DILocation(line: 304, column: 8, scope: !4184)
!4238 = !DILocation(line: 305, column: 10, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 305, column: 6)
!4240 = !DILocation(line: 305, column: 6, scope: !4184)
!4241 = !DILocation(line: 308, column: 9, scope: !4184)
!4242 = !DILocation(line: 309, column: 7, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 309, column: 6)
!4244 = !DILocation(line: 309, column: 20, scope: !4243)
!4245 = !DILocation(line: 309, column: 24, scope: !4243)
!4246 = !DILocation(line: 309, column: 6, scope: !4184)
!4247 = distinct !{!4247, !4204, !4248}
!4248 = !DILocation(line: 311, column: 7, scope: !4186)
!4249 = !DILocation(line: 0, scope: !4187)
!4250 = distinct !{!4250, !4200, !4251}
!4251 = !DILocation(line: 311, column: 7, scope: !4188)
!4252 = !DILocation(line: 319, column: 3, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 319, column: 3)
!4254 = !DILocation(line: 319, column: 3, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 319, column: 3)
!4256 = !DILocation(line: 0, scope: !4253)
!4257 = !DILocation(line: 321, column: 11, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 321, column: 11)
!4259 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 320, column: 5)
!4260 = !DILocation(line: 321, column: 33, scope: !4258)
!4261 = !DILocation(line: 322, column: 4, scope: !4258)
!4262 = !DILocation(line: 322, column: 8, scope: !4258)
!4263 = !DILocation(line: 323, column: 8, scope: !4258)
!4264 = !DILocation(line: 323, column: 11, scope: !4258)
!4265 = !DILocation(line: 323, column: 27, scope: !4258)
!4266 = !DILocation(line: 321, column: 11, scope: !4259)
!4267 = !DILocation(line: 0, scope: !4255)
!4268 = distinct !{!4268, !4252, !4269}
!4269 = !DILocation(line: 325, column: 5, scope: !4253)
!4270 = !DILocation(line: 329, column: 1, scope: !4179)
!4271 = distinct !DISubprogram(name: "find_single_block_region", scope: !3, file: !3, line: 464, type: !4119, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4272)
!4272 = !{!4273, !4274, !4275, !4276, !4277, !4280, !4287}
!4273 = !DILocalVariable(name: "ebbs_p", arg: 1, scope: !4271, file: !3, line: 464, type: !764)
!4274 = !DILocalVariable(name: "bb", scope: !4271, file: !3, line: 466, type: !1311)
!4275 = !DILocalVariable(name: "ebb_start", scope: !4271, file: !3, line: 466, type: !1311)
!4276 = !DILocalVariable(name: "i", scope: !4271, file: !3, line: 467, type: !765)
!4277 = !DILocalVariable(name: "probability_cutoff", scope: !4278, file: !3, line: 472, type: !765)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 471, column: 15)
!4279 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 471, column: 7)
!4280 = !DILocalVariable(name: "e", scope: !4281, file: !3, line: 488, type: !1328)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 487, column: 11)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 486, column: 9)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 486, column: 9)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 480, column: 7)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 479, column: 5)
!4286 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 479, column: 5)
!4287 = !DILocalVariable(name: "ei", scope: !4281, file: !3, line: 489, type: !1952)
!4288 = !DILocation(line: 0, scope: !4271)
!4289 = !DILocation(line: 469, column: 14, scope: !4271)
!4290 = !DILocation(line: 471, column: 7, scope: !4279)
!4291 = !DILocation(line: 471, column: 7, scope: !4271)
!4292 = !DILocation(line: 473, column: 9, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 473, column: 9)
!4294 = !DILocation(line: 473, column: 25, scope: !4293)
!4295 = !DILocation(line: 473, column: 22, scope: !4293)
!4296 = !DILocation(line: 0, scope: !4293)
!4297 = !DILocation(line: 474, column: 28, scope: !4293)
!4298 = !DILocation(line: 474, column: 7, scope: !4293)
!4299 = !DILocation(line: 476, column: 28, scope: !4293)
!4300 = !DILocation(line: 0, scope: !4278)
!4301 = !DILocation(line: 477, column: 49, scope: !4278)
!4302 = !DILocation(line: 479, column: 5, scope: !4286)
!4303 = !DILocation(line: 0, scope: !4281)
!4304 = !DILocation(line: 0, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 501, column: 13)
!4306 = !DILocation(line: 0, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 501, column: 13)
!4308 = !DILocation(line: 479, column: 5, scope: !4285)
!4309 = !DILocation(line: 0, scope: !4286)
!4310 = !DILocation(line: 481, column: 9, scope: !4284)
!4311 = !DILocation(line: 481, column: 36, scope: !4284)
!4312 = !DILocation(line: 482, column: 9, scope: !4284)
!4313 = !DILocation(line: 482, column: 33, scope: !4284)
!4314 = !DILocation(line: 483, column: 9, scope: !4284)
!4315 = !DILocation(line: 483, column: 41, scope: !4284)
!4316 = !DILocation(line: 484, column: 9, scope: !4284)
!4317 = !DILocation(line: 484, column: 39, scope: !4284)
!4318 = !DILocation(line: 486, column: 14, scope: !4283)
!4319 = !DILocation(line: 0, scope: !4283)
!4320 = !DILocation(line: 488, column: 13, scope: !4281)
!4321 = !DILocation(line: 489, column: 13, scope: !4281)
!4322 = !DILocation(line: 491, column: 35, scope: !4281)
!4323 = !DILocation(line: 491, column: 13, scope: !4281)
!4324 = !DILocation(line: 491, column: 29, scope: !4281)
!4325 = !DILocation(line: 492, column: 13, scope: !4281)
!4326 = !DILocation(line: 492, column: 39, scope: !4281)
!4327 = !DILocation(line: 493, column: 42, scope: !4281)
!4328 = !DILocation(line: 493, column: 13, scope: !4281)
!4329 = !DILocation(line: 493, column: 40, scope: !4281)
!4330 = !DILocation(line: 494, column: 43, scope: !4281)
!4331 = !DILocation(line: 494, column: 41, scope: !4281)
!4332 = !DILocation(line: 494, column: 13, scope: !4281)
!4333 = !DILocation(line: 494, column: 37, scope: !4281)
!4334 = !DILocation(line: 495, column: 14, scope: !4281)
!4335 = !DILocation(line: 497, column: 21, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 497, column: 17)
!4337 = !DILocation(line: 497, column: 32, scope: !4336)
!4338 = !DILocation(line: 497, column: 29, scope: !4336)
!4339 = !DILocation(line: 498, column: 17, scope: !4336)
!4340 = !DILocation(line: 498, column: 20, scope: !4336)
!4341 = !DILocation(line: 497, column: 17, scope: !4281)
!4342 = !DILocation(line: 501, column: 13, scope: !4305)
!4343 = !DILocation(line: 501, column: 13, scope: !4307)
!4344 = !DILocation(line: 504, column: 19, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 504, column: 17)
!4346 = !DILocation(line: 502, column: 19, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 502, column: 18)
!4348 = !DILocation(line: 502, column: 22, scope: !4347)
!4349 = !DILocation(line: 502, column: 28, scope: !4347)
!4350 = !DILocation(line: 502, column: 45, scope: !4347)
!4351 = !DILocation(line: 502, column: 18, scope: !4307)
!4352 = distinct !{!4352, !4342, !4353}
!4353 = !DILocation(line: 503, column: 16, scope: !4305)
!4354 = !DILocation(line: 504, column: 17, scope: !4281)
!4355 = !DILocation(line: 506, column: 20, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 506, column: 17)
!4357 = !DILocation(line: 506, column: 32, scope: !4356)
!4358 = !DILocation(line: 0, scope: !4282)
!4359 = !DILocation(line: 508, column: 11, scope: !4282)
!4360 = !DILocation(line: 486, column: 41, scope: !4282)
!4361 = !DILocation(line: 486, column: 9, scope: !4282)
!4362 = distinct !{!4362, !4363, !4364}
!4363 = !DILocation(line: 486, column: 9, scope: !4283)
!4364 = !DILocation(line: 508, column: 11, scope: !4283)
!4365 = !DILocation(line: 511, column: 19, scope: !4284)
!4366 = !DILocation(line: 0, scope: !4285)
!4367 = distinct !{!4367, !4302, !4368}
!4368 = !DILocation(line: 512, column: 7, scope: !4286)
!4369 = !DILocation(line: 515, column: 5, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 515, column: 5)
!4371 = !DILocation(line: 515, column: 5, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 515, column: 5)
!4373 = !DILocation(line: 0, scope: !4370)
!4374 = !DILocation(line: 517, column: 40, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 516, column: 7)
!4376 = !DILocation(line: 517, column: 9, scope: !4375)
!4377 = !DILocation(line: 517, column: 34, scope: !4375)
!4378 = !DILocation(line: 518, column: 9, scope: !4375)
!4379 = !DILocation(line: 518, column: 36, scope: !4375)
!4380 = !DILocation(line: 519, column: 35, scope: !4375)
!4381 = !DILocation(line: 519, column: 9, scope: !4375)
!4382 = !DILocation(line: 519, column: 33, scope: !4375)
!4383 = !DILocation(line: 520, column: 9, scope: !4375)
!4384 = !DILocation(line: 520, column: 41, scope: !4375)
!4385 = !DILocation(line: 521, column: 9, scope: !4375)
!4386 = !DILocation(line: 521, column: 39, scope: !4375)
!4387 = !DILocation(line: 523, column: 38, scope: !4375)
!4388 = !DILocation(line: 523, column: 9, scope: !4375)
!4389 = !DILocation(line: 523, column: 36, scope: !4375)
!4390 = !DILocation(line: 524, column: 9, scope: !4375)
!4391 = !DILocation(line: 524, column: 33, scope: !4375)
!4392 = !DILocation(line: 525, column: 19, scope: !4375)
!4393 = !DILocation(line: 0, scope: !4372)
!4394 = distinct !{!4394, !4369, !4395}
!4395 = !DILocation(line: 526, column: 7, scope: !4370)
!4396 = !DILocation(line: 527, column: 1, scope: !4271)
!4397 = distinct !DISubprogram(name: "find_rgns", scope: !3, file: !3, line: 1076, type: !2093, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4398 = !DILocation(line: 1078, column: 7, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 1078, column: 7)
!4400 = !DILocation(line: 1078, column: 25, scope: !4399)
!4401 = !DILocation(line: 1078, column: 22, scope: !4399)
!4402 = !DILocation(line: 1079, column: 5, scope: !4399)
!4403 = !DILocation(line: 1081, column: 5, scope: !4399)
!4404 = !DILocation(line: 1082, column: 1, scope: !4397)
!4405 = distinct !DISubprogram(name: "sched_rgn_finish", scope: !3, file: !3, line: 3081, type: !2093, scopeLine: 3082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4406 = !DILocation(line: 3085, column: 7, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 3085, column: 7)
!4408 = !DILocation(line: 3085, column: 7, scope: !4405)
!4409 = !DILocation(line: 3086, column: 5, scope: !4407)
!4410 = !DILocation(line: 3088, column: 7, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 3088, column: 7)
!4412 = !DILocation(line: 3088, column: 7, scope: !4405)
!4413 = !DILocation(line: 3090, column: 11, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 3090, column: 11)
!4415 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 3089, column: 5)
!4416 = !DILocation(line: 3090, column: 28, scope: !4414)
!4417 = !DILocation(line: 3091, column: 7, scope: !4414)
!4418 = !DILocation(line: 3091, column: 4, scope: !4414)
!4419 = !DILocation(line: 3093, column: 13, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 3092, column: 2)
!4421 = !DILocation(line: 3095, column: 6, scope: !4420)
!4422 = !DILocation(line: 3095, column: 16, scope: !4420)
!4423 = !DILocation(line: 3093, column: 4, scope: !4420)
!4424 = !DILocation(line: 3096, column: 2, scope: !4420)
!4425 = !DILocation(line: 3098, column: 2, scope: !4414)
!4426 = !DILocation(line: 3099, column: 16, scope: !4415)
!4427 = !DILocation(line: 3099, column: 7, scope: !4415)
!4428 = !DILocation(line: 3100, column: 5, scope: !4415)
!4429 = !DILocation(line: 3102, column: 14, scope: !4405)
!4430 = !DILocation(line: 3104, column: 9, scope: !4405)
!4431 = !DILocation(line: 3104, column: 3, scope: !4405)
!4432 = !DILocation(line: 3105, column: 13, scope: !4405)
!4433 = !DILocation(line: 3107, column: 9, scope: !4405)
!4434 = !DILocation(line: 3107, column: 3, scope: !4405)
!4435 = !DILocation(line: 3108, column: 16, scope: !4405)
!4436 = !DILocation(line: 3110, column: 9, scope: !4405)
!4437 = !DILocation(line: 3110, column: 3, scope: !4405)
!4438 = !DILocation(line: 3111, column: 15, scope: !4405)
!4439 = !DILocation(line: 3113, column: 9, scope: !4405)
!4440 = !DILocation(line: 3113, column: 3, scope: !4405)
!4441 = !DILocation(line: 3114, column: 18, scope: !4405)
!4442 = !DILocation(line: 3116, column: 9, scope: !4405)
!4443 = !DILocation(line: 3116, column: 3, scope: !4405)
!4444 = !DILocation(line: 3117, column: 12, scope: !4405)
!4445 = !DILocation(line: 3118, column: 1, scope: !4405)
!4446 = distinct !DISubprogram(name: "rgn_setup_region", scope: !3, file: !3, line: 3123, type: !2101, scopeLine: 3124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4447 = !{!4448, !4449}
!4448 = !DILocalVariable(name: "rgn", arg: 1, scope: !4446, file: !3, line: 3123, type: !765)
!4449 = !DILocalVariable(name: "bb", scope: !4446, file: !3, line: 3125, type: !765)
!4450 = !DILocation(line: 0, scope: !4446)
!4451 = !DILocation(line: 3128, column: 23, scope: !4446)
!4452 = !DILocation(line: 3128, column: 21, scope: !4446)
!4453 = !DILocation(line: 3129, column: 20, scope: !4446)
!4454 = !DILocation(line: 3129, column: 18, scope: !4446)
!4455 = !DILocation(line: 3134, column: 14, scope: !4446)
!4456 = !DILocation(line: 3134, column: 12, scope: !4446)
!4457 = !DILocation(line: 3135, column: 8, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 3135, column: 3)
!4459 = !DILocation(line: 0, scope: !4458)
!4460 = !DILocation(line: 3135, column: 22, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 3135, column: 3)
!4462 = !DILocation(line: 3135, column: 19, scope: !4461)
!4463 = !DILocation(line: 3135, column: 3, scope: !4458)
!4464 = !DILocation(line: 3136, column: 20, scope: !4461)
!4465 = !DILocation(line: 3136, column: 35, scope: !4461)
!4466 = !DILocation(line: 3136, column: 5, scope: !4461)
!4467 = !DILocation(line: 3136, column: 18, scope: !4461)
!4468 = !DILocation(line: 3135, column: 43, scope: !4461)
!4469 = !DILocation(line: 3135, column: 3, scope: !4461)
!4470 = distinct !{!4470, !4463, !4471}
!4471 = !DILocation(line: 3136, column: 37, scope: !4458)
!4472 = !DILocation(line: 3137, column: 1, scope: !4446)
!4473 = distinct !DISubprogram(name: "sched_rgn_compute_dependencies", scope: !3, file: !3, line: 3141, type: !2101, scopeLine: 3142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4474)
!4474 = !{!4475, !4476}
!4475 = !DILocalVariable(name: "rgn", arg: 1, scope: !4473, file: !3, line: 3141, type: !765)
!4476 = !DILocalVariable(name: "bb", scope: !4477, file: !3, line: 3145, type: !765)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 3144, column: 5)
!4478 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 3143, column: 7)
!4479 = !DILocation(line: 0, scope: !4473)
!4480 = !DILocation(line: 3143, column: 8, scope: !4478)
!4481 = !DILocation(line: 3143, column: 7, scope: !4473)
!4482 = !DILocation(line: 3147, column: 11, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3147, column: 11)
!4484 = !DILocation(line: 3147, column: 11, scope: !4477)
!4485 = !DILocation(line: 3148, column: 24, scope: !4483)
!4486 = !DILocation(line: 3148, column: 2, scope: !4483)
!4487 = !DILocation(line: 3150, column: 7, scope: !4477)
!4488 = !DILocation(line: 3153, column: 17, scope: !4477)
!4489 = !DILocation(line: 3153, column: 15, scope: !4477)
!4490 = !DILocation(line: 0, scope: !4477)
!4491 = !DILocation(line: 3154, column: 12, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3154, column: 7)
!4493 = !DILocation(line: 0, scope: !4492)
!4494 = !DILocation(line: 3154, column: 25, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 3154, column: 7)
!4496 = !DILocation(line: 3154, column: 23, scope: !4495)
!4497 = !DILocation(line: 3154, column: 7, scope: !4492)
!4498 = !DILocation(line: 3155, column: 13, scope: !4495)
!4499 = !DILocation(line: 3155, column: 21, scope: !4495)
!4500 = !DILocation(line: 3155, column: 2, scope: !4495)
!4501 = !DILocation(line: 3154, column: 46, scope: !4495)
!4502 = !DILocation(line: 3154, column: 7, scope: !4495)
!4503 = distinct !{!4503, !4497, !4504}
!4504 = !DILocation(line: 3155, column: 32, scope: !4492)
!4505 = !DILocation(line: 3158, column: 40, scope: !4477)
!4506 = !DILocation(line: 3158, column: 25, scope: !4477)
!4507 = !DILocation(line: 3158, column: 23, scope: !4477)
!4508 = !DILocation(line: 3159, column: 7, scope: !4477)
!4509 = !DILocation(line: 3162, column: 12, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3162, column: 7)
!4511 = !DILocation(line: 0, scope: !4510)
!4512 = !DILocation(line: 3162, column: 25, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 3162, column: 7)
!4514 = !DILocation(line: 3162, column: 23, scope: !4513)
!4515 = !DILocation(line: 3162, column: 7, scope: !4510)
!4516 = !DILocation(line: 3163, column: 2, scope: !4513)
!4517 = !DILocation(line: 3162, column: 46, scope: !4513)
!4518 = !DILocation(line: 3162, column: 7, scope: !4513)
!4519 = distinct !{!4519, !4515, !4520}
!4520 = !DILocation(line: 3163, column: 31, scope: !4510)
!4521 = !DILocation(line: 3165, column: 7, scope: !4477)
!4522 = !DILocation(line: 3166, column: 7, scope: !4477)
!4523 = !DILocation(line: 3167, column: 7, scope: !4477)
!4524 = !DILocation(line: 3168, column: 13, scope: !4477)
!4525 = !DILocation(line: 3168, column: 7, scope: !4477)
!4526 = !DILocation(line: 3171, column: 7, scope: !4477)
!4527 = !DILocation(line: 3171, column: 32, scope: !4477)
!4528 = !DILocation(line: 3173, column: 11, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3173, column: 11)
!4530 = !DILocation(line: 3173, column: 11, scope: !4477)
!4531 = !DILocation(line: 3174, column: 24, scope: !4529)
!4532 = !DILocation(line: 3174, column: 2, scope: !4529)
!4533 = !DILocation(line: 3179, column: 5, scope: !4478)
!4534 = !DILocation(line: 3180, column: 1, scope: !4473)
!4535 = distinct !DISubprogram(name: "compute_block_dependences", scope: !3, file: !3, line: 2715, type: !2101, scopeLine: 2716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4536 = !{!4537, !4538, !4539, !4540}
!4537 = !DILocalVariable(name: "bb", arg: 1, scope: !4535, file: !3, line: 2715, type: !765)
!4538 = !DILocalVariable(name: "head", scope: !4535, file: !3, line: 2717, type: !777)
!4539 = !DILocalVariable(name: "tail", scope: !4535, file: !3, line: 2717, type: !777)
!4540 = !DILocalVariable(name: "tmp_deps", scope: !4535, file: !3, line: 2718, type: !774)
!4541 = !DILocation(line: 0, scope: !4535)
!4542 = !DILocation(line: 2717, column: 3, scope: !4535)
!4543 = !DILocation(line: 2718, column: 3, scope: !4535)
!4544 = !DILocation(line: 2720, column: 14, scope: !4535)
!4545 = !DILocation(line: 2723, column: 3, scope: !4535)
!4546 = !DILocation(line: 2724, column: 22, scope: !4535)
!4547 = !DILocation(line: 2724, column: 41, scope: !4535)
!4548 = !DILocation(line: 2724, column: 3, scope: !4535)
!4549 = !DILocation(line: 2726, column: 29, scope: !4535)
!4550 = !DILocation(line: 2726, column: 35, scope: !4535)
!4551 = !DILocation(line: 2726, column: 3, scope: !4535)
!4552 = !DILocation(line: 2729, column: 8, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2729, column: 7)
!4554 = !DILocation(line: 2729, column: 7, scope: !4535)
!4555 = !DILocation(line: 2730, column: 29, scope: !4553)
!4556 = !DILocation(line: 2730, column: 35, scope: !4553)
!4557 = !DILocation(line: 2730, column: 5, scope: !4553)
!4558 = !DILocation(line: 2732, column: 7, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2732, column: 7)
!4560 = !DILocation(line: 2732, column: 25, scope: !4559)
!4561 = !DILocation(line: 2732, column: 7, scope: !4535)
!4562 = !DILocation(line: 2733, column: 5, scope: !4559)
!4563 = !DILocation(line: 2736, column: 3, scope: !4535)
!4564 = !DILocation(line: 2738, column: 21, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2738, column: 7)
!4566 = !DILocation(line: 2738, column: 7, scope: !4565)
!4567 = !DILocation(line: 2738, column: 7, scope: !4535)
!4568 = !DILocation(line: 2739, column: 49, scope: !4565)
!4569 = !DILocation(line: 2739, column: 55, scope: !4565)
!4570 = !DILocation(line: 2739, column: 5, scope: !4565)
!4571 = !DILocation(line: 2740, column: 1, scope: !4535)
!4572 = distinct !DISubprogram(name: "free_pending_lists", scope: !3, file: !3, line: 2761, type: !2093, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4573)
!4573 = !{!4574}
!4574 = !DILocalVariable(name: "bb", scope: !4572, file: !3, line: 2763, type: !765)
!4575 = !DILocation(line: 0, scope: !4572)
!4576 = !DILocation(line: 2765, column: 8, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2765, column: 3)
!4578 = !DILocation(line: 0, scope: !4577)
!4579 = !DILocation(line: 2765, column: 21, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 2765, column: 3)
!4581 = !DILocation(line: 2765, column: 19, scope: !4580)
!4582 = !DILocation(line: 2765, column: 3, scope: !4577)
!4583 = !DILocation(line: 2767, column: 29, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 2766, column: 5)
!4585 = !DILocation(line: 2767, column: 41, scope: !4584)
!4586 = !DILocation(line: 2767, column: 7, scope: !4584)
!4587 = !DILocation(line: 2768, column: 29, scope: !4584)
!4588 = !DILocation(line: 2768, column: 41, scope: !4584)
!4589 = !DILocation(line: 2768, column: 7, scope: !4584)
!4590 = !DILocation(line: 2769, column: 29, scope: !4584)
!4591 = !DILocation(line: 2769, column: 41, scope: !4584)
!4592 = !DILocation(line: 2769, column: 7, scope: !4584)
!4593 = !DILocation(line: 2770, column: 29, scope: !4584)
!4594 = !DILocation(line: 2770, column: 41, scope: !4584)
!4595 = !DILocation(line: 2770, column: 7, scope: !4584)
!4596 = !DILocation(line: 2765, column: 42, scope: !4580)
!4597 = !DILocation(line: 2765, column: 3, scope: !4580)
!4598 = distinct !{!4598, !4582, !4599}
!4599 = !DILocation(line: 2771, column: 5, scope: !4577)
!4600 = !DILocation(line: 2772, column: 1, scope: !4572)
!4601 = distinct !DISubprogram(name: "sched_rgn_local_init", scope: !3, file: !3, line: 3185, type: !2101, scopeLine: 3186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4602)
!4602 = !{!4603, !4604, !4605, !4608, !4609}
!4603 = !DILocalVariable(name: "rgn", arg: 1, scope: !4601, file: !3, line: 3185, type: !765)
!4604 = !DILocalVariable(name: "bb", scope: !4601, file: !3, line: 3187, type: !765)
!4605 = !DILocalVariable(name: "block", scope: !4606, file: !3, line: 3192, type: !1311)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 3191, column: 5)
!4607 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3190, column: 7)
!4608 = !DILocalVariable(name: "e", scope: !4606, file: !3, line: 3193, type: !1328)
!4609 = !DILocalVariable(name: "ei", scope: !4606, file: !3, line: 3194, type: !1952)
!4610 = !DILocation(line: 0, scope: !4601)
!4611 = !DILocation(line: 3190, column: 7, scope: !4607)
!4612 = !DILocation(line: 3190, column: 25, scope: !4607)
!4613 = !DILocation(line: 3190, column: 7, scope: !4601)
!4614 = !DILocation(line: 3193, column: 7, scope: !4606)
!4615 = !DILocation(line: 3194, column: 7, scope: !4606)
!4616 = !DILocation(line: 3196, column: 14, scope: !4606)
!4617 = !DILocation(line: 3196, column: 12, scope: !4606)
!4618 = !DILocation(line: 3198, column: 35, scope: !4606)
!4619 = !DILocation(line: 3198, column: 13, scope: !4606)
!4620 = !DILocation(line: 3198, column: 11, scope: !4606)
!4621 = !DILocation(line: 3199, column: 33, scope: !4606)
!4622 = !DILocation(line: 3199, column: 7, scope: !4606)
!4623 = !DILocation(line: 3202, column: 20, scope: !4606)
!4624 = !DILocation(line: 3203, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 3203, column: 7)
!4626 = !DILocation(line: 0, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 3207, column: 4)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 3204, column: 2)
!4629 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 3203, column: 7)
!4630 = !DILocation(line: 0, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 3207, column: 4)
!4632 = !DILocation(line: 3203, column: 7, scope: !4629)
!4633 = !DILocation(line: 0, scope: !4625)
!4634 = !DILocation(line: 0, scope: !4606)
!4635 = !DILocation(line: 3205, column: 8, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 3205, column: 8)
!4637 = !DILocation(line: 3205, column: 38, scope: !4636)
!4638 = !DILocation(line: 3205, column: 8, scope: !4628)
!4639 = !DILocation(line: 3207, column: 4, scope: !4627)
!4640 = !DILocation(line: 3207, column: 4, scope: !4631)
!4641 = !DILocation(line: 3208, column: 6, scope: !4631)
!4642 = distinct !{!4642, !4639, !4643}
!4643 = !DILocation(line: 3208, column: 6, scope: !4627)
!4644 = !DILocation(line: 0, scope: !4629)
!4645 = distinct !{!4645, !4624, !4646}
!4646 = !DILocation(line: 3209, column: 2, scope: !4625)
!4647 = !DILocation(line: 3211, column: 19, scope: !4606)
!4648 = !DILocation(line: 3211, column: 17, scope: !4606)
!4649 = !DILocation(line: 3212, column: 20, scope: !4606)
!4650 = !DILocation(line: 3213, column: 7, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 3213, column: 7)
!4652 = !DILocation(line: 0, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 3217, column: 4)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 3214, column: 2)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 3213, column: 7)
!4656 = !DILocation(line: 0, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 3217, column: 4)
!4658 = !DILocation(line: 3213, column: 7, scope: !4655)
!4659 = !DILocation(line: 0, scope: !4651)
!4660 = !DILocation(line: 3215, column: 8, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 3215, column: 8)
!4662 = !DILocation(line: 3215, column: 38, scope: !4661)
!4663 = !DILocation(line: 3215, column: 8, scope: !4654)
!4664 = !DILocation(line: 3217, column: 4, scope: !4653)
!4665 = !DILocation(line: 3217, column: 4, scope: !4657)
!4666 = !DILocation(line: 3218, column: 34, scope: !4657)
!4667 = !DILocation(line: 3218, column: 6, scope: !4657)
!4668 = !DILocation(line: 3218, column: 28, scope: !4657)
!4669 = !DILocation(line: 3218, column: 32, scope: !4657)
!4670 = distinct !{!4670, !4664, !4671}
!4671 = !DILocation(line: 3218, column: 34, scope: !4653)
!4672 = !DILocation(line: 0, scope: !4655)
!4673 = distinct !{!4673, !4650, !4674}
!4674 = !DILocation(line: 3219, column: 2, scope: !4651)
!4675 = !DILocation(line: 3222, column: 41, scope: !4606)
!4676 = !DILocation(line: 3222, column: 60, scope: !4606)
!4677 = !DILocation(line: 3222, column: 19, scope: !4606)
!4678 = !DILocation(line: 3222, column: 17, scope: !4606)
!4679 = !DILocation(line: 3223, column: 39, scope: !4606)
!4680 = !DILocation(line: 3223, column: 7, scope: !4606)
!4681 = !DILocation(line: 3224, column: 46, scope: !4606)
!4682 = !DILocation(line: 3224, column: 65, scope: !4606)
!4683 = !DILocation(line: 3224, column: 24, scope: !4606)
!4684 = !DILocation(line: 3224, column: 22, scope: !4606)
!4685 = !DILocation(line: 3225, column: 44, scope: !4606)
!4686 = !DILocation(line: 3225, column: 7, scope: !4606)
!4687 = !DILocation(line: 3228, column: 12, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 3228, column: 7)
!4689 = !DILocation(line: 0, scope: !4688)
!4690 = !DILocation(line: 3228, column: 25, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 3228, column: 7)
!4692 = !DILocation(line: 3228, column: 23, scope: !4691)
!4693 = !DILocation(line: 3228, column: 7, scope: !4688)
!4694 = !DILocation(line: 3229, column: 2, scope: !4691)
!4695 = !DILocation(line: 3228, column: 46, scope: !4691)
!4696 = !DILocation(line: 3228, column: 7, scope: !4691)
!4697 = distinct !{!4697, !4693, !4698}
!4698 = !DILocation(line: 3229, column: 25, scope: !4688)
!4699 = !DILocation(line: 3234, column: 7, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 3234, column: 7)
!4701 = !DILocation(line: 0, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 3238, column: 4)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 3235, column: 2)
!4704 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 3234, column: 7)
!4705 = !DILocation(line: 3234, column: 7, scope: !4704)
!4706 = !DILocation(line: 0, scope: !4700)
!4707 = !DILocation(line: 3236, column: 8, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 3236, column: 8)
!4709 = !DILocation(line: 3236, column: 38, scope: !4708)
!4710 = !DILocation(line: 3236, column: 8, scope: !4703)
!4711 = !DILocation(line: 3238, column: 4, scope: !4702)
!4712 = !DILocation(line: 3238, column: 4, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 3238, column: 4)
!4714 = !DILocation(line: 3239, column: 6, scope: !4713)
!4715 = !DILocation(line: 3239, column: 9, scope: !4713)
!4716 = !DILocation(line: 3239, column: 13, scope: !4713)
!4717 = distinct !{!4717, !4711, !4718}
!4718 = !DILocation(line: 3239, column: 15, scope: !4702)
!4719 = !DILocation(line: 0, scope: !4704)
!4720 = distinct !{!4720, !4699, !4721}
!4721 = !DILocation(line: 3240, column: 9, scope: !4700)
!4722 = !DILocation(line: 3241, column: 5, scope: !4607)
!4723 = !DILocation(line: 3241, column: 5, scope: !4606)
!4724 = !DILocation(line: 3242, column: 1, scope: !4601)
!4725 = distinct !DISubprogram(name: "compute_dom_prob_ps", scope: !3, file: !3, line: 1404, type: !2101, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4726)
!4726 = !{!4727, !4728, !4729, !4730, !4734, !4735}
!4727 = !DILocalVariable(name: "bb", arg: 1, scope: !4725, file: !3, line: 1404, type: !765)
!4728 = !DILocalVariable(name: "in_ei", scope: !4725, file: !3, line: 1406, type: !1952)
!4729 = !DILocalVariable(name: "in_edge", scope: !4725, file: !3, line: 1407, type: !1328)
!4730 = !DILocalVariable(name: "pred_bb", scope: !4731, file: !3, line: 1426, type: !765)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1425, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1424, column: 3)
!4733 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1424, column: 3)
!4734 = !DILocalVariable(name: "out_edge", scope: !4731, file: !3, line: 1427, type: !1328)
!4735 = !DILocalVariable(name: "out_ei", scope: !4731, file: !3, line: 1428, type: !1952)
!4736 = !DILocation(line: 0, scope: !4725)
!4737 = !DILocation(line: 1406, column: 3, scope: !4725)
!4738 = !DILocation(line: 1407, column: 3, scope: !4725)
!4739 = !DILocation(line: 1410, column: 3, scope: !4725)
!4740 = !DILocation(line: 1412, column: 7, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1412, column: 7)
!4742 = !DILocation(line: 1412, column: 7, scope: !4725)
!4743 = !DILocation(line: 1414, column: 16, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 1413, column: 5)
!4745 = !DILocation(line: 1414, column: 7, scope: !4744)
!4746 = !DILocation(line: 1415, column: 7, scope: !4744)
!4747 = !DILocation(line: 1415, column: 16, scope: !4744)
!4748 = !DILocation(line: 1416, column: 7, scope: !4744)
!4749 = !DILocation(line: 1419, column: 3, scope: !4725)
!4750 = !DILocation(line: 1419, column: 12, scope: !4725)
!4751 = !DILocation(line: 1422, column: 17, scope: !4725)
!4752 = !DILocation(line: 1422, column: 3, scope: !4725)
!4753 = !DILocation(line: 1424, column: 3, scope: !4733)
!4754 = !DILocation(line: 0, scope: !4732)
!4755 = !DILocation(line: 0, scope: !4731)
!4756 = !DILocation(line: 0, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1442, column: 7)
!4758 = !DILocation(line: 0, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1442, column: 7)
!4760 = !DILocation(line: 1424, column: 3, scope: !4732)
!4761 = !DILocation(line: 1427, column: 7, scope: !4731)
!4762 = !DILocation(line: 1428, column: 7, scope: !4731)
!4763 = !DILocation(line: 1430, column: 11, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1430, column: 11)
!4765 = !DILocation(line: 1430, column: 20, scope: !4764)
!4766 = !DILocation(line: 1430, column: 27, scope: !4764)
!4767 = !DILocation(line: 1430, column: 24, scope: !4764)
!4768 = !DILocation(line: 1430, column: 11, scope: !4731)
!4769 = !DILocation(line: 1433, column: 17, scope: !4731)
!4770 = !DILocation(line: 1434, column: 24, scope: !4731)
!4771 = !DILocation(line: 1434, column: 42, scope: !4731)
!4772 = !DILocation(line: 1434, column: 7, scope: !4731)
!4773 = !DILocation(line: 1435, column: 23, scope: !4731)
!4774 = !DILocation(line: 1436, column: 29, scope: !4731)
!4775 = !DILocation(line: 1435, column: 7, scope: !4731)
!4776 = !DILocation(line: 1438, column: 16, scope: !4731)
!4777 = !DILocation(line: 1438, column: 36, scope: !4731)
!4778 = !DILocation(line: 1438, column: 7, scope: !4731)
!4779 = !DILocation(line: 1440, column: 23, scope: !4731)
!4780 = !DILocation(line: 1440, column: 53, scope: !4731)
!4781 = !DILocation(line: 1440, column: 7, scope: !4731)
!4782 = !DILocation(line: 1442, column: 7, scope: !4757)
!4783 = !DILocation(line: 1442, column: 7, scope: !4759)
!4784 = !DILocation(line: 1443, column: 11, scope: !4759)
!4785 = !DILocation(line: 1443, column: 26, scope: !4759)
!4786 = !DILocation(line: 1443, column: 2, scope: !4759)
!4787 = distinct !{!4787, !4782, !4788}
!4788 = !DILocation(line: 1443, column: 48, scope: !4757)
!4789 = !DILocation(line: 1445, column: 21, scope: !4731)
!4790 = !DILocation(line: 1445, column: 37, scope: !4731)
!4791 = !DILocation(line: 1445, column: 46, scope: !4731)
!4792 = !DILocation(line: 1445, column: 35, scope: !4731)
!4793 = !DILocation(line: 1445, column: 59, scope: !4731)
!4794 = !DILocation(line: 1445, column: 7, scope: !4731)
!4795 = !DILocation(line: 1445, column: 16, scope: !4731)
!4796 = !DILocation(line: 1446, column: 5, scope: !4732)
!4797 = distinct !{!4797, !4753, !4798}
!4798 = !DILocation(line: 1446, column: 5, scope: !4733)
!4799 = !DILocation(line: 1448, column: 12, scope: !4725)
!4800 = !DILocation(line: 1448, column: 3, scope: !4725)
!4801 = !DILocation(line: 1449, column: 23, scope: !4725)
!4802 = !DILocation(line: 1449, column: 53, scope: !4725)
!4803 = !DILocation(line: 1449, column: 3, scope: !4725)
!4804 = !DILocation(line: 1451, column: 7, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1451, column: 7)
!4806 = !DILocation(line: 1451, column: 21, scope: !4805)
!4807 = !DILocation(line: 1451, column: 7, scope: !4725)
!4808 = !DILocation(line: 1452, column: 14, scope: !4805)
!4809 = !DILocation(line: 1452, column: 61, scope: !4805)
!4810 = !DILocation(line: 1453, column: 14, scope: !4805)
!4811 = !DILocation(line: 1453, column: 24, scope: !4805)
!4812 = !DILocation(line: 1452, column: 5, scope: !4805)
!4813 = !DILocation(line: 1454, column: 1, scope: !4725)
!4814 = distinct !DISubprogram(name: "sched_rgn_local_free", scope: !3, file: !3, line: 3246, type: !2093, scopeLine: 3247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4815 = !DILocation(line: 3248, column: 9, scope: !4814)
!4816 = !DILocation(line: 3248, column: 3, scope: !4814)
!4817 = !DILocation(line: 3249, column: 3, scope: !4814)
!4818 = !DILocation(line: 3250, column: 3, scope: !4814)
!4819 = !DILocation(line: 3251, column: 3, scope: !4814)
!4820 = !DILocation(line: 3252, column: 9, scope: !4814)
!4821 = !DILocation(line: 3252, column: 3, scope: !4814)
!4822 = !DILocation(line: 3253, column: 1, scope: !4814)
!4823 = distinct !DISubprogram(name: "sched_rgn_local_finish", scope: !3, file: !3, line: 3257, type: !2093, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4824 = !DILocation(line: 3259, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 3259, column: 7)
!4826 = !DILocation(line: 3259, column: 25, scope: !4825)
!4827 = !DILocation(line: 3259, column: 29, scope: !4825)
!4828 = !DILocation(line: 3259, column: 33, scope: !4825)
!4829 = !DILocation(line: 3259, column: 7, scope: !4823)
!4830 = !DILocation(line: 3261, column: 7, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 3260, column: 5)
!4832 = !DILocation(line: 3262, column: 5, scope: !4831)
!4833 = !DILocation(line: 3263, column: 1, scope: !4823)
!4834 = distinct !DISubprogram(name: "rgn_setup_common_sched_info", scope: !3, file: !3, line: 3267, type: !2093, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!4835 = !DILocation(line: 3269, column: 3, scope: !4834)
!4836 = !DILocation(line: 3272, column: 42, scope: !4834)
!4837 = !DILocation(line: 3273, column: 35, scope: !4834)
!4838 = !DILocation(line: 3275, column: 5, scope: !4834)
!4839 = !DILocation(line: 3276, column: 39, scope: !4834)
!4840 = !DILocation(line: 3278, column: 21, scope: !4834)
!4841 = !DILocation(line: 3279, column: 1, scope: !4834)
!4842 = distinct !DISubprogram(name: "rgn_fix_recovery_cfg", scope: !3, file: !3, line: 3449, type: !2062, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4843)
!4843 = !{!4844, !4845, !4846, !4847, !4848, !4849}
!4844 = !DILocalVariable(name: "bbi", arg: 1, scope: !4842, file: !3, line: 3449, type: !765)
!4845 = !DILocalVariable(name: "check_bbi", arg: 2, scope: !4842, file: !3, line: 3449, type: !765)
!4846 = !DILocalVariable(name: "check_bb_nexti", arg: 3, scope: !4842, file: !3, line: 3449, type: !765)
!4847 = !DILocalVariable(name: "old_pos", scope: !4842, file: !3, line: 3451, type: !765)
!4848 = !DILocalVariable(name: "new_pos", scope: !4842, file: !3, line: 3451, type: !765)
!4849 = !DILocalVariable(name: "i", scope: !4842, file: !3, line: 3451, type: !765)
!4850 = !DILocation(line: 0, scope: !4842)
!4851 = !DILocation(line: 3453, column: 34, scope: !4842)
!4852 = !DILocation(line: 3453, column: 3, scope: !4842)
!4853 = !DILocation(line: 3453, column: 32, scope: !4842)
!4854 = !DILocation(line: 3455, column: 18, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 3455, column: 3)
!4856 = !DILocation(line: 3455, column: 27, scope: !4855)
!4857 = !DILocation(line: 3455, column: 51, scope: !4855)
!4858 = !DILocation(line: 0, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 3455, column: 3)
!4860 = !DILocation(line: 3455, column: 8, scope: !4855)
!4861 = !DILocation(line: 0, scope: !4855)
!4862 = !DILocation(line: 3456, column: 8, scope: !4859)
!4863 = !DILocation(line: 3456, column: 30, scope: !4859)
!4864 = !DILocation(line: 3455, column: 3, scope: !4855)
!4865 = !DILocation(line: 3455, column: 3, scope: !4859)
!4866 = distinct !{!4866, !4864, !4867}
!4867 = !DILocation(line: 3457, column: 18, scope: !4855)
!4868 = !DILocation(line: 3458, column: 3, scope: !4842)
!4869 = !DILocation(line: 3460, column: 18, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 3460, column: 3)
!4871 = !DILocation(line: 3460, column: 27, scope: !4870)
!4872 = !DILocation(line: 0, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 3460, column: 3)
!4874 = !DILocation(line: 3460, column: 45, scope: !4870)
!4875 = !DILocation(line: 3460, column: 8, scope: !4870)
!4876 = !DILocation(line: 0, scope: !4870)
!4877 = !DILocation(line: 3461, column: 8, scope: !4873)
!4878 = !DILocation(line: 3461, column: 30, scope: !4873)
!4879 = !DILocation(line: 3460, column: 3, scope: !4870)
!4880 = !DILocation(line: 3460, column: 3, scope: !4873)
!4881 = distinct !{!4881, !4879, !4882}
!4882 = !DILocation(line: 3462, column: 18, scope: !4870)
!4883 = !DILocation(line: 3464, column: 3, scope: !4842)
!4884 = !DILocation(line: 3466, column: 3, scope: !4842)
!4885 = !DILocation(line: 3468, column: 12, scope: !4842)
!4886 = !DILocation(line: 3468, column: 25, scope: !4842)
!4887 = !DILocation(line: 3468, column: 35, scope: !4842)
!4888 = !DILocation(line: 3469, column: 5, scope: !4842)
!4889 = !DILocation(line: 3470, column: 14, scope: !4842)
!4890 = !DILocation(line: 3470, column: 5, scope: !4842)
!4891 = !DILocation(line: 3470, column: 25, scope: !4842)
!4892 = !DILocation(line: 3468, column: 3, scope: !4842)
!4893 = !DILocation(line: 3472, column: 3, scope: !4842)
!4894 = !DILocation(line: 3472, column: 25, scope: !4842)
!4895 = !DILocation(line: 3474, column: 12, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 3474, column: 3)
!4897 = !DILocation(line: 3474, column: 8, scope: !4896)
!4898 = !DILocation(line: 3474, column: 40, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 3474, column: 3)
!4900 = !DILocation(line: 0, scope: !4896)
!4901 = !DILocation(line: 3474, column: 37, scope: !4899)
!4902 = !DILocation(line: 3474, column: 3, scope: !4896)
!4903 = !DILocation(line: 3475, column: 5, scope: !4899)
!4904 = !DILocation(line: 3475, column: 16, scope: !4899)
!4905 = !DILocation(line: 3474, column: 3, scope: !4899)
!4906 = distinct !{!4906, !4902, !4907}
!4907 = !DILocation(line: 3475, column: 16, scope: !4896)
!4908 = !DILocation(line: 3476, column: 1, scope: !4842)
!4909 = distinct !DISubprogram(name: "rgn_add_block", scope: !3, file: !3, line: 3381, type: !2066, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4910)
!4910 = !{!4911, !4912, !4913, !4916}
!4911 = !DILocalVariable(name: "bb", arg: 1, scope: !4909, file: !3, line: 3381, type: !1311)
!4912 = !DILocalVariable(name: "after", arg: 2, scope: !4909, file: !3, line: 3381, type: !1311)
!4913 = !DILocalVariable(name: "i", scope: !4914, file: !3, line: 3393, type: !765)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 3392, column: 5)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 3386, column: 7)
!4916 = !DILocalVariable(name: "pos", scope: !4914, file: !3, line: 3393, type: !765)
!4917 = !DILocation(line: 0, scope: !4909)
!4918 = !DILocation(line: 3383, column: 3, scope: !4909)
!4919 = !DILocation(line: 3384, column: 35, scope: !4909)
!4920 = !DILocation(line: 3384, column: 3, scope: !4909)
!4921 = !DILocation(line: 3386, column: 13, scope: !4915)
!4922 = !DILocation(line: 3386, column: 18, scope: !4915)
!4923 = !DILocation(line: 3386, column: 30, scope: !4915)
!4924 = !DILocation(line: 3386, column: 27, scope: !4915)
!4925 = !DILocation(line: 3386, column: 7, scope: !4909)
!4926 = !DILocation(line: 3388, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 3387, column: 5)
!4928 = !DILocation(line: 3389, column: 55, scope: !4927)
!4929 = !DILocation(line: 3389, column: 52, scope: !4927)
!4930 = !DILocation(line: 3389, column: 7, scope: !4927)
!4931 = !DILocation(line: 3389, column: 43, scope: !4927)
!4932 = !DILocation(line: 3390, column: 5, scope: !4927)
!4933 = !DILocation(line: 3398, column: 33, scope: !4914)
!4934 = !DILocation(line: 3398, column: 7, scope: !4914)
!4935 = !DILocation(line: 3398, column: 31, scope: !4914)
!4936 = !DILocation(line: 3405, column: 11, scope: !4914)
!4937 = !DILocation(line: 3405, column: 38, scope: !4914)
!4938 = !DILocation(line: 0, scope: !4914)
!4939 = !DILocation(line: 3406, column: 13, scope: !4914)
!4940 = !DILocation(line: 0, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 3410, column: 7)
!4942 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3410, column: 7)
!4943 = !DILocation(line: 3410, column: 7, scope: !4914)
!4944 = !DILocation(line: 3410, column: 14, scope: !4941)
!4945 = !DILocation(line: 3410, column: 32, scope: !4941)
!4946 = !DILocation(line: 3410, column: 7, scope: !4942)
!4947 = !DILocation(line: 3410, column: 7, scope: !4941)
!4948 = distinct !{!4948, !4946, !4949}
!4949 = !DILocation(line: 3410, column: 55, scope: !4942)
!4950 = !DILocation(line: 3413, column: 7, scope: !4914)
!4951 = !DILocation(line: 3425, column: 16, scope: !4914)
!4952 = !DILocation(line: 3425, column: 29, scope: !4914)
!4953 = !DILocation(line: 3425, column: 35, scope: !4914)
!4954 = !DILocation(line: 3426, column: 9, scope: !4914)
!4955 = !DILocation(line: 3427, column: 11, scope: !4914)
!4956 = !DILocation(line: 3427, column: 48, scope: !4914)
!4957 = !DILocation(line: 3427, column: 9, scope: !4914)
!4958 = !DILocation(line: 3428, column: 9, scope: !4914)
!4959 = !DILocation(line: 3425, column: 7, scope: !4914)
!4960 = !DILocation(line: 3430, column: 31, scope: !4914)
!4961 = !DILocation(line: 3430, column: 7, scope: !4914)
!4962 = !DILocation(line: 3430, column: 25, scope: !4914)
!4963 = !DILocation(line: 3432, column: 7, scope: !4914)
!4964 = !DILocation(line: 3432, column: 19, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 3432, column: 7)
!4966 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3432, column: 7)
!4967 = !DILocation(line: 3432, column: 16, scope: !4965)
!4968 = !DILocation(line: 3432, column: 7, scope: !4966)
!4969 = !DILocation(line: 3433, column: 2, scope: !4965)
!4970 = !DILocation(line: 3433, column: 14, scope: !4965)
!4971 = !DILocation(line: 3432, column: 39, scope: !4965)
!4972 = !DILocation(line: 3432, column: 7, scope: !4965)
!4973 = distinct !{!4973, !4968, !4974}
!4974 = !DILocation(line: 3433, column: 14, scope: !4966)
!4975 = !DILocation(line: 3435, column: 11, scope: !4914)
!4976 = !DILocation(line: 3436, column: 7, scope: !4914)
!4977 = !DILocation(line: 3436, column: 34, scope: !4914)
!4978 = !DILocation(line: 3438, column: 7, scope: !4914)
!4979 = !DILocation(line: 3438, column: 28, scope: !4914)
!4980 = !DILocation(line: 3440, column: 12, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3440, column: 7)
!4982 = !DILocation(line: 0, scope: !4981)
!4983 = !DILocation(line: 3440, column: 22, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 3440, column: 7)
!4985 = !DILocation(line: 3440, column: 19, scope: !4984)
!4986 = !DILocation(line: 3440, column: 7, scope: !4981)
!4987 = !DILocation(line: 3441, column: 2, scope: !4984)
!4988 = !DILocation(line: 3441, column: 16, scope: !4984)
!4989 = !DILocation(line: 3440, column: 7, scope: !4984)
!4990 = distinct !{!4990, !4986, !4991}
!4991 = !DILocation(line: 3441, column: 16, scope: !4981)
!4992 = !DILocation(line: 3443, column: 1, scope: !4909)
!4993 = distinct !DISubprogram(name: "rgn_estimate_number_of_insns", scope: !3, file: !3, line: 531, type: !2070, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4994)
!4994 = !{!4995, !4996, !4997}
!4995 = !DILocalVariable(name: "bb", arg: 1, scope: !4993, file: !3, line: 531, type: !1311)
!4996 = !DILocalVariable(name: "count", scope: !4993, file: !3, line: 533, type: !765)
!4997 = !DILocalVariable(name: "insn", scope: !4998, file: !3, line: 539, type: !777)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 538, column: 5)
!4999 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 537, column: 7)
!5000 = !DILocation(line: 0, scope: !4993)
!5001 = !DILocation(line: 535, column: 11, scope: !4993)
!5002 = !DILocation(line: 535, column: 37, scope: !4993)
!5003 = !DILocation(line: 535, column: 35, scope: !4993)
!5004 = !DILocation(line: 537, column: 7, scope: !4999)
!5005 = !DILocation(line: 537, column: 7, scope: !4993)
!5006 = !DILocation(line: 541, column: 7, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 541, column: 7)
!5008 = !DILocation(line: 541, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 541, column: 7)
!5010 = !DILocation(line: 0, scope: !5007)
!5011 = !DILocation(line: 0, scope: !4998)
!5012 = !DILocation(line: 542, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 542, column: 6)
!5014 = !DILocation(line: 542, column: 6, scope: !5009)
!5015 = distinct !{!5015, !5006, !5016}
!5016 = !DILocation(line: 543, column: 9, scope: !5007)
!5017 = !DILocation(line: 546, column: 3, scope: !4993)
!5018 = !DILocation(line: 535, column: 9, scope: !4993)
!5019 = distinct !DISubprogram(name: "rgn_setup_sched_infos", scope: !3, file: !3, line: 3284, type: !2093, scopeLine: 3285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!5020 = !DILocation(line: 3286, column: 8, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3286, column: 7)
!5022 = !DILocation(line: 3286, column: 7, scope: !5019)
!5023 = !DILocation(line: 3287, column: 5, scope: !5021)
!5024 = !DILocation(line: 3290, column: 5, scope: !5021)
!5025 = !DILocation(line: 3293, column: 19, scope: !5019)
!5026 = !DILocation(line: 3295, column: 3, scope: !5019)
!5027 = !DILocation(line: 3296, column: 22, scope: !5019)
!5028 = !DILocation(line: 3297, column: 1, scope: !5019)
!5029 = distinct !DISubprogram(name: "schedule_insns", scope: !3, file: !3, line: 3301, type: !2093, scopeLine: 3302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5030)
!5030 = !{!5031}
!5031 = !DILocalVariable(name: "rgn", scope: !5029, file: !3, line: 3303, type: !765)
!5032 = !DILocation(line: 3307, column: 7, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3307, column: 7)
!5034 = !DILocation(line: 3307, column: 22, scope: !5033)
!5035 = !DILocation(line: 3307, column: 7, scope: !5029)
!5036 = !DILocation(line: 3310, column: 3, scope: !5029)
!5037 = !DILocation(line: 3311, column: 3, scope: !5029)
!5038 = !DILocation(line: 3313, column: 3, scope: !5029)
!5039 = !DILocation(line: 3314, column: 19, scope: !5029)
!5040 = !DILocation(line: 3314, column: 3, scope: !5029)
!5041 = !DILocation(line: 3316, column: 3, scope: !5029)
!5042 = !DILocation(line: 3317, column: 3, scope: !5029)
!5043 = !DILocation(line: 0, scope: !5029)
!5044 = !DILocation(line: 3320, column: 8, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3320, column: 3)
!5046 = !DILocation(line: 0, scope: !5045)
!5047 = !DILocation(line: 3320, column: 23, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 3320, column: 3)
!5049 = !DILocation(line: 3320, column: 21, scope: !5048)
!5050 = !DILocation(line: 3320, column: 3, scope: !5045)
!5051 = !DILocation(line: 3321, column: 9, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 3321, column: 9)
!5053 = !DILocation(line: 3321, column: 9, scope: !5048)
!5054 = !DILocation(line: 3322, column: 7, scope: !5052)
!5055 = !DILocation(line: 3320, column: 38, scope: !5048)
!5056 = !DILocation(line: 3320, column: 3, scope: !5048)
!5057 = distinct !{!5057, !5050, !5058}
!5058 = !DILocation(line: 3322, column: 27, scope: !5045)
!5059 = !DILocation(line: 3325, column: 3, scope: !5029)
!5060 = !DILocation(line: 3326, column: 3, scope: !5029)
!5061 = !DILocation(line: 3328, column: 3, scope: !5029)
!5062 = !DILocation(line: 3329, column: 1, scope: !5029)
!5063 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !833, file: !833, line: 165, type: !5064, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{null, !2086, !853}
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "head", arg: 1, scope: !5063, file: !833, line: 165, type: !2086)
!5068 = !DILocalVariable(name: "obstack", arg: 2, scope: !5063, file: !833, line: 165, type: !853)
!5069 = !DILocation(line: 0, scope: !5063)
!5070 = !DILocation(line: 167, column: 31, scope: !5063)
!5071 = !DILocation(line: 167, column: 15, scope: !5063)
!5072 = !DILocation(line: 168, column: 17, scope: !5063)
!5073 = !DILocation(line: 172, column: 1, scope: !5063)
!5074 = distinct !DISubprogram(name: "schedule_region", scope: !3, file: !3, line: 2924, type: !2101, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5075)
!5075 = !{!5076, !5077, !5078, !5079, !5085, !5086, !5087, !5088, !5092, !5093, !5094, !5095}
!5076 = !DILocalVariable(name: "rgn", arg: 1, scope: !5074, file: !3, line: 2924, type: !765)
!5077 = !DILocalVariable(name: "bb", scope: !5074, file: !3, line: 2926, type: !765)
!5078 = !DILocalVariable(name: "sched_rgn_n_insns", scope: !5074, file: !3, line: 2927, type: !765)
!5079 = !DILocalVariable(name: "first_bb", scope: !5080, file: !3, line: 2952, type: !1311)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 2951, column: 2)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2950, column: 7)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 2950, column: 7)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 2948, column: 5)
!5084 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2947, column: 7)
!5085 = !DILocalVariable(name: "last_bb", scope: !5080, file: !3, line: 2952, type: !1311)
!5086 = !DILocalVariable(name: "head", scope: !5080, file: !3, line: 2953, type: !777)
!5087 = !DILocalVariable(name: "tail", scope: !5080, file: !3, line: 2953, type: !777)
!5088 = !DILocalVariable(name: "first_bb", scope: !5089, file: !3, line: 2972, type: !1311)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 2971, column: 5)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 2970, column: 3)
!5091 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2970, column: 3)
!5092 = !DILocalVariable(name: "last_bb", scope: !5089, file: !3, line: 2972, type: !1311)
!5093 = !DILocalVariable(name: "curr_bb", scope: !5089, file: !3, line: 2972, type: !1311)
!5094 = !DILocalVariable(name: "head", scope: !5089, file: !3, line: 2973, type: !777)
!5095 = !DILocalVariable(name: "tail", scope: !5089, file: !3, line: 2973, type: !777)
!5096 = !DILocation(line: 0, scope: !5074)
!5097 = !DILocation(line: 2929, column: 15, scope: !5074)
!5098 = !DILocation(line: 2931, column: 3, scope: !5074)
!5099 = !DILocation(line: 2935, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2935, column: 7)
!5101 = !DILocation(line: 2935, column: 7, scope: !5074)
!5102 = !DILocation(line: 2938, column: 3, scope: !5074)
!5103 = !DILocation(line: 2940, column: 3, scope: !5074)
!5104 = !DILocation(line: 2943, column: 3, scope: !5074)
!5105 = !DILocation(line: 2945, column: 28, scope: !5074)
!5106 = !DILocation(line: 2945, column: 3, scope: !5074)
!5107 = !DILocation(line: 2947, column: 7, scope: !5084)
!5108 = !DILocation(line: 2947, column: 7, scope: !5074)
!5109 = !DILocation(line: 2949, column: 7, scope: !5083)
!5110 = !DILocation(line: 0, scope: !5080)
!5111 = !DILocation(line: 2950, column: 12, scope: !5082)
!5112 = !DILocation(line: 0, scope: !5082)
!5113 = !DILocation(line: 2950, column: 25, scope: !5081)
!5114 = !DILocation(line: 2950, column: 23, scope: !5081)
!5115 = !DILocation(line: 2950, column: 7, scope: !5082)
!5116 = !DILocation(line: 2953, column: 4, scope: !5080)
!5117 = !DILocation(line: 2955, column: 15, scope: !5080)
!5118 = !DILocation(line: 2956, column: 14, scope: !5080)
!5119 = !DILocation(line: 2958, column: 4, scope: !5080)
!5120 = !DILocation(line: 2960, column: 25, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 2960, column: 8)
!5122 = !DILocation(line: 2960, column: 31, scope: !5121)
!5123 = !DILocation(line: 2960, column: 8, scope: !5121)
!5124 = !DILocation(line: 2960, column: 8, scope: !5080)
!5125 = !DILocation(line: 2962, column: 8, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 2961, column: 6)
!5127 = !DILocation(line: 2965, column: 48, scope: !5080)
!5128 = !DILocation(line: 2965, column: 4, scope: !5080)
!5129 = !DILocation(line: 2966, column: 2, scope: !5081)
!5130 = !DILocation(line: 2950, column: 7, scope: !5081)
!5131 = distinct !{!5131, !5115, !5132}
!5132 = !DILocation(line: 2966, column: 2, scope: !5082)
!5133 = !DILocation(line: 2970, column: 8, scope: !5091)
!5134 = !DILocation(line: 0, scope: !5089)
!5135 = !DILocation(line: 2927, column: 7, scope: !5074)
!5136 = !DILocation(line: 2970, column: 21, scope: !5090)
!5137 = !DILocation(line: 2970, column: 19, scope: !5090)
!5138 = !DILocation(line: 2970, column: 3, scope: !5091)
!5139 = !DILocation(line: 2972, column: 7, scope: !5089)
!5140 = !DILocation(line: 2973, column: 7, scope: !5089)
!5141 = !DILocation(line: 2975, column: 18, scope: !5089)
!5142 = !DILocation(line: 2976, column: 17, scope: !5089)
!5143 = !DILocation(line: 2978, column: 7, scope: !5089)
!5144 = !DILocation(line: 2980, column: 28, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2980, column: 11)
!5146 = !DILocation(line: 2980, column: 34, scope: !5145)
!5147 = !DILocation(line: 2980, column: 11, scope: !5145)
!5148 = !DILocation(line: 2980, column: 11, scope: !5089)
!5149 = !DILocation(line: 2982, column: 4, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 2981, column: 2)
!5151 = !DILocation(line: 2986, column: 39, scope: !5089)
!5152 = !DILocation(line: 2986, column: 7, scope: !5089)
!5153 = !DILocation(line: 2986, column: 27, scope: !5089)
!5154 = !DILocation(line: 2986, column: 37, scope: !5089)
!5155 = !DILocation(line: 2987, column: 39, scope: !5089)
!5156 = !DILocation(line: 2987, column: 27, scope: !5089)
!5157 = !DILocation(line: 2987, column: 37, scope: !5089)
!5158 = !DILocation(line: 2989, column: 7, scope: !5089)
!5159 = !DILocation(line: 2991, column: 7, scope: !5089)
!5160 = !DILocation(line: 2993, column: 17, scope: !5089)
!5161 = !DILocation(line: 2995, column: 7, scope: !5089)
!5162 = !DILocation(line: 2996, column: 53, scope: !5089)
!5163 = !DILocation(line: 2996, column: 71, scope: !5089)
!5164 = !DILocation(line: 2996, column: 7, scope: !5089)
!5165 = !DILocation(line: 2996, column: 27, scope: !5089)
!5166 = !DILocation(line: 2996, column: 51, scope: !5089)
!5167 = !DILocation(line: 2998, column: 15, scope: !5089)
!5168 = !DILocation(line: 2999, column: 11, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2999, column: 11)
!5170 = !DILocation(line: 2999, column: 11, scope: !5089)
!5171 = !DILocation(line: 3001, column: 11, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 3000, column: 9)
!5173 = !DILocation(line: 3002, column: 11, scope: !5172)
!5174 = !DILocation(line: 3004, column: 9, scope: !5172)
!5175 = !DILocation(line: 0, scope: !5169)
!5176 = !DILocation(line: 3011, column: 11, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 3011, column: 11)
!5178 = !DILocation(line: 3011, column: 29, scope: !5177)
!5179 = !DILocation(line: 3011, column: 11, scope: !5089)
!5180 = !DILocation(line: 3012, column: 2, scope: !5177)
!5181 = !DILocation(line: 3013, column: 5, scope: !5090)
!5182 = !DILocation(line: 2970, column: 3, scope: !5090)
!5183 = distinct !{!5183, !5138, !5184}
!5184 = !DILocation(line: 3013, column: 5, scope: !5091)
!5185 = !DILocation(line: 3016, column: 3, scope: !5074)
!5186 = !DILocation(line: 3018, column: 3, scope: !5074)
!5187 = !DILocation(line: 3021, column: 3, scope: !5074)
!5188 = !DILocation(line: 3024, column: 8, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 3024, column: 3)
!5190 = !DILocation(line: 0, scope: !5189)
!5191 = !DILocation(line: 3024, column: 21, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 3024, column: 3)
!5193 = !DILocation(line: 3024, column: 19, scope: !5192)
!5194 = !DILocation(line: 3024, column: 3, scope: !5189)
!5195 = !DILocation(line: 3025, column: 5, scope: !5192)
!5196 = !DILocation(line: 3024, column: 40, scope: !5192)
!5197 = !DILocation(line: 3024, column: 3, scope: !5192)
!5198 = distinct !{!5198, !5194, !5199}
!5199 = !DILocation(line: 3025, column: 32, scope: !5189)
!5200 = !DILocation(line: 3027, column: 3, scope: !5074)
!5201 = !DILocation(line: 3029, column: 1, scope: !5074)
!5202 = distinct !DISubprogram(name: "rgn_make_new_region_out_of_new_block", scope: !3, file: !3, line: 3360, type: !5203, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5205)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{null, !1311}
!5205 = !{!5206, !5207}
!5206 = !DILocalVariable(name: "bb", arg: 1, scope: !5202, file: !3, line: 3360, type: !1311)
!5207 = !DILocalVariable(name: "i", scope: !5202, file: !3, line: 3362, type: !765)
!5208 = !DILocation(line: 0, scope: !5202)
!5209 = !DILocation(line: 3364, column: 7, scope: !5202)
!5210 = !DILocation(line: 3367, column: 25, scope: !5202)
!5211 = !DILocation(line: 3367, column: 3, scope: !5202)
!5212 = !DILocation(line: 3367, column: 19, scope: !5202)
!5213 = !DILocation(line: 3368, column: 3, scope: !5202)
!5214 = !DILocation(line: 3368, column: 30, scope: !5202)
!5215 = !DILocation(line: 3369, column: 3, scope: !5202)
!5216 = !DILocation(line: 3369, column: 33, scope: !5202)
!5217 = !DILocation(line: 3370, column: 3, scope: !5202)
!5218 = !DILocation(line: 3370, column: 35, scope: !5202)
!5219 = !DILocation(line: 3371, column: 32, scope: !5202)
!5220 = !DILocation(line: 3371, column: 3, scope: !5202)
!5221 = !DILocation(line: 3371, column: 30, scope: !5202)
!5222 = !DILocation(line: 3372, column: 3, scope: !5202)
!5223 = !DILocation(line: 3372, column: 27, scope: !5202)
!5224 = !DILocation(line: 3374, column: 13, scope: !5202)
!5225 = !DILocation(line: 3376, column: 31, scope: !5202)
!5226 = !DILocation(line: 3376, column: 3, scope: !5202)
!5227 = !DILocation(line: 3376, column: 27, scope: !5202)
!5228 = !DILocation(line: 3377, column: 1, scope: !5202)
!5229 = distinct !DISubprogram(name: "gate_handle_sched", scope: !3, file: !3, line: 3494, type: !1996, scopeLine: 3495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!5230 = !DILocation(line: 3497, column: 10, scope: !5229)
!5231 = !DILocation(line: 3497, column: 30, scope: !5229)
!5232 = !DILocation(line: 3497, column: 33, scope: !5229)
!5233 = !DILocation(line: 3497, column: 3, scope: !5229)
!5234 = distinct !DISubprogram(name: "rest_of_handle_sched", scope: !3, file: !3, line: 3505, type: !2000, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!5235 = !DILocation(line: 3508, column: 7, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 3508, column: 7)
!5237 = !DILocation(line: 3509, column: 7, scope: !5236)
!5238 = !DILocation(line: 3509, column: 12, scope: !5236)
!5239 = !DILocation(line: 3508, column: 7, scope: !5234)
!5240 = !DILocation(line: 3510, column: 5, scope: !5236)
!5241 = !DILocation(line: 3512, column: 5, scope: !5236)
!5242 = !DILocation(line: 3514, column: 3, scope: !5234)
!5243 = distinct !DISubprogram(name: "gate_handle_sched2", scope: !3, file: !3, line: 3518, type: !1996, scopeLine: 3519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!5244 = !DILocation(line: 3521, column: 10, scope: !5243)
!5245 = !DILocation(line: 3521, column: 19, scope: !5243)
!5246 = !DILocation(line: 3521, column: 26, scope: !5243)
!5247 = !DILocation(line: 3521, column: 23, scope: !5243)
!5248 = !DILocation(line: 3522, column: 8, scope: !5243)
!5249 = !DILocation(line: 3522, column: 5, scope: !5243)
!5250 = !DILocation(line: 3521, column: 3, scope: !5243)
!5251 = distinct !DISubprogram(name: "rest_of_handle_sched2", scope: !3, file: !3, line: 3530, type: !2000, scopeLine: 3531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!5252 = !DILocation(line: 3533, column: 7, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 3533, column: 7)
!5254 = !DILocation(line: 3534, column: 7, scope: !5253)
!5255 = !DILocation(line: 3534, column: 12, scope: !5253)
!5256 = !DILocation(line: 3533, column: 7, scope: !5251)
!5257 = !DILocation(line: 3535, column: 5, scope: !5253)
!5258 = !DILocation(line: 3540, column: 11, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 3540, column: 11)
!5260 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 3537, column: 5)
!5261 = !DILocation(line: 3540, column: 11, scope: !5260)
!5262 = !DILocation(line: 3541, column: 2, scope: !5259)
!5263 = !DILocation(line: 3543, column: 2, scope: !5259)
!5264 = !DILocation(line: 3546, column: 3, scope: !5251)
!5265 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !5266, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5268)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!764, !1952}
!5268 = !{!5269}
!5269 = !DILocalVariable(name: "i", arg: 1, scope: !5265, file: !142, line: 721, type: !1952)
!5270 = !DILocation(line: 723, column: 22, scope: !5265)
!5271 = !DILocation(line: 723, column: 19, scope: !5265)
!5272 = !DILocation(line: 723, column: 10, scope: !5265)
!5273 = !DILocation(line: 723, column: 3, scope: !5265)
!5274 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !5275, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5277)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!1328, !1952}
!5277 = !{!5278}
!5278 = !DILocalVariable(name: "i", arg: 1, scope: !5274, file: !142, line: 752, type: !1952)
!5279 = !DILocation(line: 754, column: 10, scope: !5274)
!5280 = !DILocation(line: 754, column: 3, scope: !5274)
!5281 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !5282, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5286)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!7, !5284}
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!5286 = !{!5287}
!5287 = !DILocalVariable(name: "vec_", arg: 1, scope: !5281, file: !142, line: 150, type: !5284)
!5288 = !DILocation(line: 0, scope: !5281)
!5289 = !DILocation(line: 150, column: 1, scope: !5281)
!5290 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !5291, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5293)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{!1316, !1952}
!5293 = !{!5294}
!5294 = !DILocalVariable(name: "i", arg: 1, scope: !5290, file: !142, line: 685, type: !1952)
!5295 = !DILocation(line: 687, column: 3, scope: !5290)
!5296 = !DILocation(line: 688, column: 10, scope: !5290)
!5297 = !DILocation(line: 688, column: 3, scope: !5290)
!5298 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !5299, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!1328, !5284, !7}
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "vec_", arg: 1, scope: !5298, file: !142, line: 150, type: !5284)
!5303 = !DILocalVariable(name: "ix_", arg: 2, scope: !5298, file: !142, line: 150, type: !7)
!5304 = !DILocation(line: 0, scope: !5298)
!5305 = !DILocation(line: 150, column: 1, scope: !5298)
!5306 = distinct !DISubprogram(name: "single_pred_p", scope: !142, file: !142, line: 634, type: !5307, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5312)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!764, !5309}
!5309 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !778, line: 112, baseType: !5310)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!5312 = !{!5313}
!5313 = !DILocalVariable(name: "bb", arg: 1, scope: !5306, file: !142, line: 634, type: !5309)
!5314 = !DILocation(line: 0, scope: !5306)
!5315 = !DILocation(line: 636, column: 10, scope: !5306)
!5316 = !DILocation(line: 636, column: 33, scope: !5306)
!5317 = !DILocation(line: 636, column: 3, scope: !5306)
!5318 = distinct !DISubprogram(name: "single_pred", scope: !142, file: !142, line: 672, type: !5319, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5321)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!1311, !5309}
!5321 = !{!5322}
!5322 = !DILocalVariable(name: "bb", arg: 1, scope: !5318, file: !142, line: 672, type: !5309)
!5323 = !DILocation(line: 0, scope: !5318)
!5324 = !DILocation(line: 674, column: 10, scope: !5318)
!5325 = !DILocation(line: 674, column: 33, scope: !5318)
!5326 = !DILocation(line: 674, column: 3, scope: !5318)
!5327 = distinct !DISubprogram(name: "single_pred_edge", scope: !142, file: !142, line: 653, type: !5328, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!1328, !5309}
!5330 = !{!5331}
!5331 = !DILocalVariable(name: "bb", arg: 1, scope: !5327, file: !142, line: 653, type: !5309)
!5332 = !DILocation(line: 0, scope: !5327)
!5333 = !DILocation(line: 655, column: 3, scope: !5327)
!5334 = !DILocation(line: 656, column: 10, scope: !5327)
!5335 = !DILocation(line: 656, column: 3, scope: !5327)
!5336 = distinct !DISubprogram(name: "haifa_find_rgns", scope: !3, file: !3, line: 611, type: !2093, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5337)
!5337 = !{!5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5366, !5367, !5370, !5371, !5372, !5373, !5379, !5380, !5381, !5384, !5386, !5392}
!5338 = !DILocalVariable(name: "max_hdr", scope: !5336, file: !3, line: 613, type: !772)
!5339 = !DILocalVariable(name: "dfs_nr", scope: !5336, file: !3, line: 613, type: !772)
!5340 = !DILocalVariable(name: "degree", scope: !5336, file: !3, line: 613, type: !772)
!5341 = !DILocalVariable(name: "no_loops", scope: !5336, file: !3, line: 614, type: !768)
!5342 = !DILocalVariable(name: "node", scope: !5336, file: !3, line: 615, type: !765)
!5343 = !DILocalVariable(name: "child", scope: !5336, file: !3, line: 615, type: !765)
!5344 = !DILocalVariable(name: "loop_head", scope: !5336, file: !3, line: 615, type: !765)
!5345 = !DILocalVariable(name: "i", scope: !5336, file: !3, line: 615, type: !765)
!5346 = !DILocalVariable(name: "head", scope: !5336, file: !3, line: 615, type: !765)
!5347 = !DILocalVariable(name: "tail", scope: !5336, file: !3, line: 615, type: !765)
!5348 = !DILocalVariable(name: "count", scope: !5336, file: !3, line: 616, type: !765)
!5349 = !DILocalVariable(name: "sp", scope: !5336, file: !3, line: 616, type: !765)
!5350 = !DILocalVariable(name: "idx", scope: !5336, file: !3, line: 616, type: !765)
!5351 = !DILocalVariable(name: "current_edge", scope: !5336, file: !3, line: 617, type: !1952)
!5352 = !DILocalVariable(name: "stack", scope: !5336, file: !3, line: 618, type: !1951)
!5353 = !DILocalVariable(name: "num_bbs", scope: !5336, file: !3, line: 619, type: !765)
!5354 = !DILocalVariable(name: "num_insns", scope: !5336, file: !3, line: 619, type: !765)
!5355 = !DILocalVariable(name: "unreachable", scope: !5336, file: !3, line: 619, type: !765)
!5356 = !DILocalVariable(name: "too_large_failure", scope: !5336, file: !3, line: 620, type: !765)
!5357 = !DILocalVariable(name: "bb", scope: !5336, file: !3, line: 621, type: !1311)
!5358 = !DILocalVariable(name: "header", scope: !5336, file: !3, line: 624, type: !2032)
!5359 = !DILocalVariable(name: "inner", scope: !5336, file: !3, line: 627, type: !2032)
!5360 = !DILocalVariable(name: "in_queue", scope: !5336, file: !3, line: 630, type: !2032)
!5361 = !DILocalVariable(name: "in_stack", scope: !5336, file: !3, line: 633, type: !2032)
!5362 = !DILocalVariable(name: "ei", scope: !5363, file: !3, line: 750, type: !1952)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 749, column: 5)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 748, column: 3)
!5365 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 748, column: 3)
!5366 = !DILocalVariable(name: "e", scope: !5363, file: !3, line: 751, type: !1328)
!5367 = !DILocalVariable(name: "queue", scope: !5368, file: !3, line: 783, type: !772)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 782, column: 5)
!5369 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 781, column: 7)
!5370 = !DILocalVariable(name: "degree1", scope: !5368, file: !3, line: 783, type: !772)
!5371 = !DILocalVariable(name: "extended_rgn_header", scope: !5368, file: !3, line: 788, type: !2032)
!5372 = !DILocalVariable(name: "extend_regions_p", scope: !5368, file: !3, line: 789, type: !764)
!5373 = !DILocalVariable(name: "e", scope: !5374, file: !3, line: 813, type: !1328)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 812, column: 6)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 811, column: 8)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 810, column: 2)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 809, column: 7)
!5378 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 809, column: 7)
!5379 = !DILocalVariable(name: "ei", scope: !5374, file: !3, line: 814, type: !1952)
!5380 = !DILocalVariable(name: "jbb", scope: !5374, file: !3, line: 815, type: !1311)
!5381 = !DILocalVariable(name: "e", scope: !5382, file: !3, line: 893, type: !1328)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 892, column: 3)
!5383 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 873, column: 12)
!5384 = !DILocalVariable(name: "e", scope: !5385, file: !3, line: 949, type: !1328)
!5385 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 948, column: 3)
!5386 = !DILocalVariable(name: "e", scope: !5387, file: !3, line: 1001, type: !1328)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1000, column: 4)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 999, column: 13)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 995, column: 7)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 979, column: 3)
!5391 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 978, column: 12)
!5392 = !DILocalVariable(name: "t", scope: !5393, file: !3, line: 1021, type: !772)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 1019, column: 17)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1018, column: 24)
!5395 = !DILocation(line: 0, scope: !5336)
!5396 = !DILocation(line: 616, column: 3, scope: !5336)
!5397 = !DILocation(line: 616, column: 22, scope: !5336)
!5398 = !DILocation(line: 617, column: 3, scope: !5336)
!5399 = !DILocation(line: 619, column: 3, scope: !5336)
!5400 = !DILocation(line: 645, column: 13, scope: !5336)
!5401 = !DILocation(line: 646, column: 12, scope: !5336)
!5402 = !DILocation(line: 647, column: 11, scope: !5336)
!5403 = !DILocation(line: 649, column: 26, scope: !5336)
!5404 = !DILocation(line: 649, column: 11, scope: !5336)
!5405 = !DILocation(line: 650, column: 3, scope: !5336)
!5406 = !DILocation(line: 652, column: 27, scope: !5336)
!5407 = !DILocation(line: 652, column: 12, scope: !5336)
!5408 = !DILocation(line: 653, column: 3, scope: !5336)
!5409 = !DILocation(line: 655, column: 29, scope: !5336)
!5410 = !DILocation(line: 655, column: 14, scope: !5336)
!5411 = !DILocation(line: 656, column: 3, scope: !5336)
!5412 = !DILocation(line: 658, column: 29, scope: !5336)
!5413 = !DILocation(line: 658, column: 14, scope: !5336)
!5414 = !DILocation(line: 659, column: 3, scope: !5336)
!5415 = !DILocation(line: 661, column: 8, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 661, column: 3)
!5417 = !DILocation(line: 0, scope: !5416)
!5418 = !DILocation(line: 661, column: 19, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 661, column: 3)
!5420 = !DILocation(line: 661, column: 17, scope: !5419)
!5421 = !DILocation(line: 661, column: 3, scope: !5416)
!5422 = !DILocation(line: 662, column: 5, scope: !5419)
!5423 = !DILocation(line: 662, column: 16, scope: !5419)
!5424 = !DILocation(line: 661, column: 38, scope: !5419)
!5425 = !DILocation(line: 661, column: 3, scope: !5419)
!5426 = distinct !{!5426, !5421, !5427}
!5427 = !DILocation(line: 662, column: 19, scope: !5416)
!5428 = !DILocation(line: 669, column: 18, scope: !5336)
!5429 = !DILocation(line: 694, column: 18, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 694, column: 8)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 675, column: 2)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 674, column: 11)
!5433 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 673, column: 5)
!5434 = !DILocation(line: 0, scope: !5432)
!5435 = !DILocation(line: 0, scope: !5433)
!5436 = !DILocation(line: 672, column: 3, scope: !5336)
!5437 = !DILocation(line: 674, column: 11, scope: !5432)
!5438 = !DILocation(line: 674, column: 11, scope: !5433)
!5439 = !DILocation(line: 679, column: 4, scope: !5431)
!5440 = !DILocation(line: 679, column: 14, scope: !5431)
!5441 = !DILocation(line: 679, column: 19, scope: !5431)
!5442 = !DILocation(line: 679, column: 22, scope: !5431)
!5443 = !DILocation(line: 682, column: 31, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 680, column: 6)
!5445 = !DILocation(line: 682, column: 23, scope: !5444)
!5446 = !DILocation(line: 683, column: 15, scope: !5444)
!5447 = !DILocation(line: 683, column: 39, scope: !5444)
!5448 = !DILocation(line: 683, column: 44, scope: !5444)
!5449 = !DILocation(line: 684, column: 8, scope: !5444)
!5450 = !DILocation(line: 685, column: 16, scope: !5444)
!5451 = !DILocation(line: 685, column: 40, scope: !5444)
!5452 = !DILocation(line: 685, column: 46, scope: !5444)
!5453 = !DILocation(line: 686, column: 8, scope: !5444)
!5454 = !DILocation(line: 687, column: 8, scope: !5444)
!5455 = !DILocation(line: 688, column: 12, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 688, column: 12)
!5457 = !DILocation(line: 688, column: 27, scope: !5456)
!5458 = !DILocation(line: 688, column: 32, scope: !5456)
!5459 = !DILocation(line: 688, column: 35, scope: !5456)
!5460 = !DILocation(line: 688, column: 12, scope: !5444)
!5461 = !DILocation(line: 689, column: 3, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 689, column: 3)
!5463 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 689, column: 3)
!5464 = !DILocation(line: 689, column: 3, scope: !5463)
!5465 = !DILocation(line: 689, column: 3, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 689, column: 3)
!5467 = !DILocation(line: 689, column: 3, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 689, column: 3)
!5469 = !DILocation(line: 689, column: 3, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 689, column: 3)
!5471 = !DILocation(line: 690, column: 8, scope: !5444)
!5472 = distinct !{!5472, !5439, !5473}
!5473 = !DILocation(line: 691, column: 6, scope: !5431)
!5474 = !DILocation(line: 694, column: 11, scope: !5430)
!5475 = !DILocation(line: 694, column: 15, scope: !5430)
!5476 = !DILocation(line: 694, column: 8, scope: !5431)
!5477 = !DILocation(line: 698, column: 4, scope: !5431)
!5478 = distinct !{!5478, !5436, !5479}
!5479 = !DILocation(line: 745, column: 5, scope: !5336)
!5480 = !DILocation(line: 702, column: 14, scope: !5433)
!5481 = !DILocation(line: 702, column: 38, scope: !5433)
!5482 = !DILocation(line: 702, column: 43, scope: !5433)
!5483 = !DILocation(line: 703, column: 7, scope: !5433)
!5484 = !DILocation(line: 704, column: 7, scope: !5433)
!5485 = !DILocation(line: 705, column: 22, scope: !5433)
!5486 = !DILocation(line: 705, column: 7, scope: !5433)
!5487 = !DILocation(line: 705, column: 20, scope: !5433)
!5488 = !DILocation(line: 708, column: 15, scope: !5433)
!5489 = !DILocation(line: 708, column: 39, scope: !5433)
!5490 = !DILocation(line: 708, column: 45, scope: !5433)
!5491 = !DILocation(line: 709, column: 17, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 709, column: 11)
!5493 = !DILocation(line: 709, column: 11, scope: !5433)
!5494 = !DILocation(line: 711, column: 4, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 710, column: 2)
!5496 = !DILocation(line: 712, column: 4, scope: !5495)
!5497 = !DILocation(line: 713, column: 4, scope: !5495)
!5498 = !DILocation(line: 719, column: 11, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 719, column: 11)
!5500 = !DILocation(line: 719, column: 11, scope: !5433)
!5501 = !DILocation(line: 722, column: 4, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 720, column: 2)
!5503 = !DILocation(line: 723, column: 4, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 723, column: 4)
!5505 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 723, column: 4)
!5506 = !DILocation(line: 723, column: 4, scope: !5505)
!5507 = !DILocation(line: 723, column: 4, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 723, column: 4)
!5509 = !DILocation(line: 723, column: 4, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 723, column: 4)
!5511 = !DILocation(line: 723, column: 4, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 723, column: 4)
!5513 = !DILocation(line: 724, column: 4, scope: !5502)
!5514 = !DILocation(line: 725, column: 4, scope: !5502)
!5515 = !DILocation(line: 726, column: 4, scope: !5502)
!5516 = !DILocation(line: 732, column: 11, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 732, column: 11)
!5518 = !DILocation(line: 732, column: 11, scope: !5433)
!5519 = !DILocation(line: 734, column: 8, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 734, column: 8)
!5521 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 733, column: 2)
!5522 = !DILocation(line: 734, column: 23, scope: !5520)
!5523 = !DILocation(line: 734, column: 28, scope: !5520)
!5524 = !DILocation(line: 734, column: 31, scope: !5520)
!5525 = !DILocation(line: 734, column: 8, scope: !5521)
!5526 = !DILocation(line: 735, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 735, column: 6)
!5528 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 735, column: 6)
!5529 = !DILocation(line: 735, column: 6, scope: !5528)
!5530 = !DILocation(line: 735, column: 6, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 735, column: 6)
!5532 = !DILocation(line: 735, column: 6, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 735, column: 6)
!5534 = !DILocation(line: 735, column: 6, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 735, column: 6)
!5536 = !DILocation(line: 736, column: 4, scope: !5521)
!5537 = !DILocation(line: 737, column: 4, scope: !5521)
!5538 = !DILocation(line: 738, column: 4, scope: !5521)
!5539 = !DILocation(line: 742, column: 13, scope: !5433)
!5540 = !DILocation(line: 742, column: 7, scope: !5433)
!5541 = !DILocation(line: 742, column: 21, scope: !5433)
!5542 = !DILocation(line: 743, column: 7, scope: !5433)
!5543 = !DILocation(line: 744, column: 22, scope: !5433)
!5544 = !DILocation(line: 748, column: 3, scope: !5365)
!5545 = !DILocation(line: 0, scope: !5363)
!5546 = !DILocation(line: 0, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 752, column: 7)
!5548 = !DILocation(line: 0, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 752, column: 7)
!5550 = !DILocation(line: 0, scope: !5365)
!5551 = !DILocation(line: 750, column: 7, scope: !5363)
!5552 = !DILocation(line: 751, column: 7, scope: !5363)
!5553 = !DILocation(line: 752, column: 7, scope: !5547)
!5554 = !DILocation(line: 752, column: 7, scope: !5549)
!5555 = !DILocation(line: 753, column: 2, scope: !5549)
!5556 = !DILocation(line: 753, column: 5, scope: !5549)
!5557 = !DILocation(line: 753, column: 9, scope: !5549)
!5558 = distinct !{!5558, !5553, !5559}
!5559 = !DILocation(line: 753, column: 11, scope: !5547)
!5560 = !DILocation(line: 754, column: 5, scope: !5364)
!5561 = !DILocation(line: 748, column: 3, scope: !5364)
!5562 = distinct !{!5562, !5544, !5563}
!5563 = !DILocation(line: 754, column: 5, scope: !5365)
!5564 = !DILocation(line: 765, column: 3, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 765, column: 3)
!5566 = !DILocation(line: 0, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 765, column: 3)
!5568 = !DILocation(line: 0, scope: !5565)
!5569 = !DILocation(line: 765, column: 3, scope: !5567)
!5570 = !DILocation(line: 766, column: 20, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 766, column: 9)
!5572 = !DILocation(line: 766, column: 9, scope: !5571)
!5573 = !DILocation(line: 766, column: 27, scope: !5571)
!5574 = !DILocation(line: 766, column: 9, scope: !5567)
!5575 = distinct !{!5575, !5564, !5576}
!5576 = !DILocation(line: 770, column: 7, scope: !5565)
!5577 = !DILocation(line: 776, column: 3, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 776, column: 3)
!5579 = !DILocation(line: 776, column: 3, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 776, column: 3)
!5581 = !DILocation(line: 0, scope: !5578)
!5582 = !DILocation(line: 777, column: 25, scope: !5580)
!5583 = !DILocation(line: 777, column: 16, scope: !5580)
!5584 = !DILocation(line: 777, column: 5, scope: !5580)
!5585 = !DILocation(line: 777, column: 23, scope: !5580)
!5586 = !DILocation(line: 0, scope: !5580)
!5587 = distinct !{!5587, !5577, !5588}
!5588 = !DILocation(line: 777, column: 25, scope: !5578)
!5589 = !DILocation(line: 781, column: 8, scope: !5369)
!5590 = !DILocation(line: 781, column: 7, scope: !5336)
!5591 = !DILocation(line: 0, scope: !5368)
!5592 = !DILocation(line: 791, column: 11, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 791, column: 11)
!5594 = !DILocation(line: 791, column: 11, scope: !5368)
!5595 = !DILocation(line: 792, column: 2, scope: !5593)
!5596 = !DILocation(line: 797, column: 15, scope: !5368)
!5597 = !DILocation(line: 799, column: 26, scope: !5368)
!5598 = !DILocation(line: 799, column: 77, scope: !5368)
!5599 = !DILocation(line: 800, column: 11, scope: !5368)
!5600 = !DILocation(line: 802, column: 21, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 801, column: 9)
!5602 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 800, column: 11)
!5603 = !DILocation(line: 803, column: 48, scope: !5601)
!5604 = !DILocation(line: 803, column: 33, scope: !5601)
!5605 = !DILocation(line: 804, column: 11, scope: !5601)
!5606 = !DILocation(line: 805, column: 2, scope: !5601)
!5607 = !DILocation(line: 809, column: 7, scope: !5378)
!5608 = !DILocation(line: 0, scope: !5374)
!5609 = !DILocation(line: 0, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 861, column: 8)
!5611 = !DILocation(line: 0, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 861, column: 8)
!5613 = !DILocation(line: 0, scope: !5382)
!5614 = !DILocation(line: 0, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 895, column: 5)
!5616 = !DILocation(line: 0, scope: !5385)
!5617 = !DILocation(line: 0, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 952, column: 5)
!5619 = !DILocation(line: 0, scope: !5387)
!5620 = !DILocation(line: 0, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1009, column: 6)
!5622 = !DILocation(line: 0, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 1029, column: 19)
!5624 = !DILocation(line: 809, column: 7, scope: !5377)
!5625 = !DILocation(line: 802, column: 19, scope: !5601)
!5626 = !DILocation(line: 774, column: 10, scope: !5336)
!5627 = !DILocation(line: 0, scope: !5378)
!5628 = !DILocation(line: 811, column: 8, scope: !5375)
!5629 = !DILocation(line: 811, column: 37, scope: !5375)
!5630 = !DILocation(line: 811, column: 40, scope: !5375)
!5631 = !DILocation(line: 811, column: 8, scope: !5376)
!5632 = !DILocation(line: 813, column: 8, scope: !5374)
!5633 = !DILocation(line: 814, column: 8, scope: !5374)
!5634 = !DILocation(line: 828, column: 8, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 828, column: 8)
!5636 = !DILocation(line: 828, column: 8, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 828, column: 8)
!5638 = !DILocation(line: 0, scope: !5635)
!5639 = !DILocation(line: 832, column: 13, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 832, column: 9)
!5641 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 829, column: 3)
!5642 = !DILocation(line: 832, column: 35, scope: !5640)
!5643 = !DILocation(line: 832, column: 22, scope: !5640)
!5644 = !DILocation(line: 832, column: 19, scope: !5640)
!5645 = !DILocation(line: 832, column: 48, scope: !5640)
!5646 = !DILocation(line: 832, column: 42, scope: !5640)
!5647 = !DILocation(line: 836, column: 14, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 836, column: 13)
!5649 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 833, column: 7)
!5650 = !DILocation(line: 836, column: 13, scope: !5649)
!5651 = !DILocation(line: 844, column: 19, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 844, column: 12)
!5653 = !DILocation(line: 0, scope: !5637)
!5654 = distinct !{!5654, !5634, !5655}
!5655 = !DILocation(line: 839, column: 3, scope: !5635)
!5656 = !DILocation(line: 844, column: 16, scope: !5652)
!5657 = !DILocation(line: 844, column: 12, scope: !5374)
!5658 = !DILocation(line: 851, column: 32, scope: !5374)
!5659 = !DILocation(line: 851, column: 20, scope: !5374)
!5660 = !DILocation(line: 853, column: 19, scope: !5374)
!5661 = !DILocation(line: 857, column: 42, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 853, column: 19)
!5663 = !DILocation(line: 857, column: 59, scope: !5662)
!5664 = !DILocation(line: 857, column: 17, scope: !5662)
!5665 = !DILocation(line: 861, column: 8, scope: !5610)
!5666 = !DILocation(line: 861, column: 8, scope: !5612)
!5667 = !DILocation(line: 862, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 862, column: 7)
!5669 = !DILocation(line: 862, column: 10, scope: !5668)
!5670 = !DILocation(line: 862, column: 18, scope: !5668)
!5671 = !DILocation(line: 862, column: 15, scope: !5668)
!5672 = !DILocation(line: 862, column: 7, scope: !5612)
!5673 = !DILocation(line: 863, column: 23, scope: !5668)
!5674 = !DILocation(line: 863, column: 7, scope: !5668)
!5675 = !DILocation(line: 863, column: 5, scope: !5668)
!5676 = distinct !{!5676, !5665, !5677}
!5677 = !DILocation(line: 863, column: 28, scope: !5610)
!5678 = !DILocation(line: 866, column: 16, scope: !5374)
!5679 = !DILocation(line: 867, column: 20, scope: !5374)
!5680 = !DILocation(line: 867, column: 39, scope: !5374)
!5681 = !DILocation(line: 867, column: 18, scope: !5374)
!5682 = !DILocation(line: 873, column: 12, scope: !5374)
!5683 = !DILocation(line: 875, column: 5, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 875, column: 5)
!5685 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 874, column: 3)
!5686 = !DILocation(line: 875, column: 5, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 875, column: 5)
!5688 = !DILocation(line: 0, scope: !5684)
!5689 = !DILocation(line: 878, column: 11, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 878, column: 11)
!5691 = !DILocation(line: 879, column: 4, scope: !5690)
!5692 = !DILocation(line: 879, column: 7, scope: !5690)
!5693 = !DILocation(line: 879, column: 28, scope: !5690)
!5694 = !DILocation(line: 879, column: 25, scope: !5690)
!5695 = !DILocation(line: 878, column: 11, scope: !5687)
!5696 = !DILocation(line: 881, column: 25, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 880, column: 9)
!5698 = !DILocation(line: 881, column: 10, scope: !5697)
!5699 = !DILocation(line: 881, column: 4, scope: !5697)
!5700 = !DILocation(line: 881, column: 18, scope: !5697)
!5701 = !DILocation(line: 882, column: 28, scope: !5697)
!5702 = !DILocation(line: 882, column: 4, scope: !5697)
!5703 = !DILocation(line: 884, column: 24, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 884, column: 8)
!5705 = !DILocation(line: 884, column: 8, scope: !5704)
!5706 = !DILocation(line: 884, column: 8, scope: !5697)
!5707 = !DILocation(line: 0, scope: !5687)
!5708 = distinct !{!5708, !5683, !5709}
!5709 = !DILocation(line: 889, column: 9, scope: !5684)
!5710 = !DILocation(line: 893, column: 5, scope: !5382)
!5711 = !DILocation(line: 895, column: 5, scope: !5615)
!5712 = !DILocation(line: 849, column: 20, scope: !5374)
!5713 = !DILocation(line: 895, column: 5, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 895, column: 5)
!5715 = !DILocation(line: 897, column: 13, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 897, column: 13)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 896, column: 7)
!5718 = !DILocation(line: 897, column: 16, scope: !5716)
!5719 = !DILocation(line: 897, column: 23, scope: !5716)
!5720 = !DILocation(line: 897, column: 20, scope: !5716)
!5721 = !DILocation(line: 897, column: 13, scope: !5717)
!5722 = !DILocation(line: 900, column: 24, scope: !5717)
!5723 = !DILocation(line: 902, column: 13, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 902, column: 13)
!5725 = !DILocation(line: 902, column: 27, scope: !5724)
!5726 = !DILocation(line: 902, column: 40, scope: !5724)
!5727 = !DILocation(line: 902, column: 55, scope: !5724)
!5728 = !DILocation(line: 902, column: 48, scope: !5724)
!5729 = !DILocation(line: 902, column: 13, scope: !5717)
!5730 = !DILocation(line: 905, column: 12, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 903, column: 4)
!5732 = !DILocation(line: 905, column: 6, scope: !5731)
!5733 = !DILocation(line: 905, column: 20, scope: !5731)
!5734 = !DILocation(line: 906, column: 6, scope: !5731)
!5735 = !DILocation(line: 908, column: 10, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 908, column: 10)
!5737 = !DILocation(line: 908, column: 10, scope: !5731)
!5738 = distinct !{!5738, !5711, !5739}
!5739 = !DILocation(line: 914, column: 7, scope: !5615)
!5740 = !DILocation(line: 915, column: 3, scope: !5383)
!5741 = !DILocation(line: 947, column: 8, scope: !5374)
!5742 = !DILocation(line: 0, scope: !5383)
!5743 = !DILocation(line: 886, column: 26, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 885, column: 6)
!5745 = !DILocation(line: 947, column: 20, scope: !5374)
!5746 = !DILocation(line: 947, column: 30, scope: !5374)
!5747 = !DILocation(line: 947, column: 27, scope: !5374)
!5748 = !DILocation(line: 949, column: 5, scope: !5385)
!5749 = !DILocation(line: 950, column: 19, scope: !5385)
!5750 = !DILocation(line: 950, column: 13, scope: !5385)
!5751 = !DILocation(line: 952, column: 5, scope: !5618)
!5752 = !DILocation(line: 952, column: 5, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 952, column: 5)
!5754 = !DILocation(line: 954, column: 16, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 953, column: 7)
!5756 = !DILocation(line: 954, column: 19, scope: !5755)
!5757 = !DILocation(line: 954, column: 24, scope: !5755)
!5758 = !DILocation(line: 958, column: 23, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 958, column: 13)
!5760 = !DILocation(line: 958, column: 20, scope: !5759)
!5761 = !DILocation(line: 959, column: 6, scope: !5759)
!5762 = !DILocation(line: 959, column: 9, scope: !5759)
!5763 = !DILocation(line: 959, column: 23, scope: !5759)
!5764 = !DILocation(line: 958, column: 13, scope: !5755)
!5765 = !DILocation(line: 964, column: 19, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 964, column: 18)
!5767 = !DILocation(line: 964, column: 45, scope: !5766)
!5768 = !DILocation(line: 964, column: 60, scope: !5766)
!5769 = !DILocation(line: 964, column: 53, scope: !5766)
!5770 = !DILocation(line: 964, column: 18, scope: !5759)
!5771 = !DILocation(line: 966, column: 12, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 965, column: 4)
!5773 = !DILocation(line: 966, column: 6, scope: !5772)
!5774 = !DILocation(line: 966, column: 20, scope: !5772)
!5775 = !DILocation(line: 967, column: 6, scope: !5772)
!5776 = !DILocation(line: 969, column: 10, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 969, column: 10)
!5778 = !DILocation(line: 969, column: 10, scope: !5772)
!5779 = distinct !{!5779, !5751, !5780}
!5780 = !DILocation(line: 975, column: 7, scope: !5618)
!5781 = !DILocation(line: 976, column: 3, scope: !5374)
!5782 = distinct !{!5782, !5741, !5781}
!5783 = !DILocation(line: 978, column: 17, scope: !5391)
!5784 = !DILocation(line: 978, column: 26, scope: !5391)
!5785 = !DILocation(line: 978, column: 22, scope: !5391)
!5786 = !DILocation(line: 981, column: 16, scope: !5390)
!5787 = !DILocation(line: 981, column: 5, scope: !5390)
!5788 = !DILocation(line: 981, column: 23, scope: !5390)
!5789 = !DILocation(line: 982, column: 29, scope: !5390)
!5790 = !DILocation(line: 982, column: 5, scope: !5390)
!5791 = !DILocation(line: 982, column: 18, scope: !5390)
!5792 = !DILocation(line: 982, column: 23, scope: !5390)
!5793 = !DILocation(line: 983, column: 34, scope: !5390)
!5794 = !DILocation(line: 983, column: 5, scope: !5390)
!5795 = !DILocation(line: 983, column: 32, scope: !5390)
!5796 = !DILocation(line: 984, column: 34, scope: !5390)
!5797 = !DILocation(line: 984, column: 5, scope: !5390)
!5798 = !DILocation(line: 984, column: 29, scope: !5390)
!5799 = !DILocation(line: 985, column: 19, scope: !5390)
!5800 = !DILocation(line: 985, column: 51, scope: !5390)
!5801 = !DILocation(line: 986, column: 5, scope: !5390)
!5802 = !DILocation(line: 986, column: 35, scope: !5390)
!5803 = !DILocation(line: 987, column: 34, scope: !5390)
!5804 = !DILocation(line: 987, column: 5, scope: !5390)
!5805 = !DILocation(line: 987, column: 32, scope: !5390)
!5806 = !DILocation(line: 988, column: 5, scope: !5390)
!5807 = !DILocation(line: 988, column: 29, scope: !5390)
!5808 = !DILocation(line: 994, column: 5, scope: !5390)
!5809 = !DILocation(line: 0, scope: !5390)
!5810 = !DILocation(line: 994, column: 17, scope: !5390)
!5811 = !DILocation(line: 996, column: 18, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 996, column: 13)
!5813 = !DILocation(line: 996, column: 13, scope: !5389)
!5814 = !DILocation(line: 998, column: 17, scope: !5389)
!5815 = !DILocation(line: 999, column: 13, scope: !5388)
!5816 = !DILocation(line: 999, column: 27, scope: !5388)
!5817 = !DILocation(line: 999, column: 13, scope: !5389)
!5818 = !DILocation(line: 1001, column: 6, scope: !5387)
!5819 = !DILocation(line: 1003, column: 20, scope: !5387)
!5820 = !DILocation(line: 1004, column: 6, scope: !5387)
!5821 = !DILocation(line: 1004, column: 22, scope: !5387)
!5822 = !DILocation(line: 1004, column: 26, scope: !5387)
!5823 = !DILocation(line: 1005, column: 28, scope: !5387)
!5824 = !DILocation(line: 1005, column: 6, scope: !5387)
!5825 = !DILocation(line: 1005, column: 26, scope: !5387)
!5826 = !DILocation(line: 1006, column: 31, scope: !5387)
!5827 = !DILocation(line: 1006, column: 6, scope: !5387)
!5828 = !DILocation(line: 1006, column: 29, scope: !5387)
!5829 = !DILocation(line: 1007, column: 30, scope: !5387)
!5830 = !DILocation(line: 1007, column: 20, scope: !5387)
!5831 = !DILocation(line: 1007, column: 18, scope: !5387)
!5832 = !DILocation(line: 1009, column: 6, scope: !5621)
!5833 = !DILocation(line: 1009, column: 6, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1009, column: 6)
!5835 = !DILocation(line: 1010, column: 12, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 1010, column: 12)
!5837 = !DILocation(line: 1010, column: 15, scope: !5836)
!5838 = !DILocation(line: 1010, column: 23, scope: !5836)
!5839 = !DILocation(line: 1010, column: 20, scope: !5836)
!5840 = !DILocation(line: 1010, column: 12, scope: !5834)
!5841 = !DILocation(line: 1011, column: 28, scope: !5836)
!5842 = !DILocation(line: 1011, column: 12, scope: !5836)
!5843 = !DILocation(line: 1011, column: 10, scope: !5836)
!5844 = distinct !{!5844, !5832, !5845}
!5845 = !DILocation(line: 1011, column: 33, scope: !5621)
!5846 = !DILocation(line: 1012, column: 4, scope: !5388)
!5847 = !DILocation(line: 1012, column: 4, scope: !5387)
!5848 = !DILocation(line: 1014, column: 4, scope: !5388)
!5849 = !DILocation(line: 0, scope: !5389)
!5850 = distinct !{!5850, !5808, !5851}
!5851 = !DILocation(line: 1015, column: 7, scope: !5390)
!5852 = !DILocation(line: 1016, column: 5, scope: !5390)
!5853 = !DILocation(line: 1017, column: 3, scope: !5390)
!5854 = !DILocation(line: 1018, column: 24, scope: !5391)
!5855 = !DILocation(line: 0, scope: !5393)
!5856 = !DILocation(line: 1029, column: 19, scope: !5623)
!5857 = !DILocation(line: 1029, column: 19, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 1029, column: 19)
!5859 = !DILocation(line: 1030, column: 25, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1030, column: 25)
!5861 = !DILocation(line: 1030, column: 28, scope: !5860)
!5862 = !DILocation(line: 1030, column: 36, scope: !5860)
!5863 = !DILocation(line: 1030, column: 33, scope: !5860)
!5864 = !DILocation(line: 1030, column: 25, scope: !5858)
!5865 = !DILocation(line: 1031, column: 62, scope: !5860)
!5866 = !DILocation(line: 1031, column: 23, scope: !5860)
!5867 = distinct !{!5867, !5856, !5868}
!5868 = !DILocation(line: 1031, column: 67, scope: !5623)
!5869 = !DILocation(line: 1033, column: 6, scope: !5375)
!5870 = !DILocation(line: 0, scope: !5377)
!5871 = distinct !{!5871, !5607, !5872}
!5872 = !DILocation(line: 1034, column: 2, scope: !5378)
!5873 = !DILocation(line: 1035, column: 7, scope: !5368)
!5874 = !DILocation(line: 1037, column: 11, scope: !5368)
!5875 = !DILocation(line: 1039, column: 11, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1038, column: 9)
!5877 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1037, column: 11)
!5878 = !DILocation(line: 1041, column: 11, scope: !5876)
!5879 = !DILocation(line: 1042, column: 11, scope: !5876)
!5880 = !DILocation(line: 1044, column: 11, scope: !5876)
!5881 = !DILocation(line: 1045, column: 9, scope: !5876)
!5882 = !DILocation(line: 1050, column: 3, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 1050, column: 3)
!5884 = !DILocation(line: 1050, column: 3, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1050, column: 3)
!5886 = !DILocation(line: 0, scope: !5883)
!5887 = !DILocation(line: 1051, column: 20, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 1051, column: 9)
!5889 = !DILocation(line: 1051, column: 9, scope: !5888)
!5890 = !DILocation(line: 1051, column: 27, scope: !5888)
!5891 = !DILocation(line: 1051, column: 9, scope: !5885)
!5892 = !DILocation(line: 1053, column: 2, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1052, column: 7)
!5894 = !DILocation(line: 1053, column: 15, scope: !5893)
!5895 = !DILocation(line: 1053, column: 20, scope: !5893)
!5896 = !DILocation(line: 1054, column: 2, scope: !5893)
!5897 = !DILocation(line: 1054, column: 29, scope: !5893)
!5898 = !DILocation(line: 1055, column: 31, scope: !5893)
!5899 = !DILocation(line: 1055, column: 2, scope: !5893)
!5900 = !DILocation(line: 1055, column: 26, scope: !5893)
!5901 = !DILocation(line: 1056, column: 9, scope: !5893)
!5902 = !DILocation(line: 1056, column: 41, scope: !5893)
!5903 = !DILocation(line: 1057, column: 2, scope: !5893)
!5904 = !DILocation(line: 1057, column: 32, scope: !5893)
!5905 = !DILocation(line: 1058, column: 41, scope: !5893)
!5906 = !DILocation(line: 1058, column: 2, scope: !5893)
!5907 = !DILocation(line: 1058, column: 29, scope: !5893)
!5908 = !DILocation(line: 1059, column: 2, scope: !5893)
!5909 = !DILocation(line: 1059, column: 26, scope: !5893)
!5910 = !DILocation(line: 1060, column: 7, scope: !5893)
!5911 = !DILocation(line: 0, scope: !5885)
!5912 = distinct !{!5912, !5882, !5913}
!5913 = !DILocation(line: 1060, column: 7, scope: !5883)
!5914 = !DILocation(line: 1062, column: 3, scope: !5336)
!5915 = !DILocation(line: 1063, column: 3, scope: !5336)
!5916 = !DILocation(line: 1064, column: 3, scope: !5336)
!5917 = !DILocation(line: 1065, column: 3, scope: !5336)
!5918 = !DILocation(line: 1066, column: 3, scope: !5336)
!5919 = !DILocation(line: 1067, column: 3, scope: !5336)
!5920 = !DILocation(line: 1068, column: 3, scope: !5336)
!5921 = !DILocation(line: 1069, column: 1, scope: !5336)
!5922 = distinct !DISubprogram(name: "single_succ", scope: !142, file: !142, line: 663, type: !5319, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5923)
!5923 = !{!5924}
!5924 = !DILocalVariable(name: "bb", arg: 1, scope: !5922, file: !142, line: 663, type: !5309)
!5925 = !DILocation(line: 0, scope: !5922)
!5926 = !DILocation(line: 665, column: 10, scope: !5922)
!5927 = !DILocation(line: 665, column: 33, scope: !5922)
!5928 = !DILocation(line: 665, column: 3, scope: !5922)
!5929 = distinct !DISubprogram(name: "RESET_BIT", scope: !2033, file: !2033, line: 82, type: !3272, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5930)
!5930 = !{!5931, !5932, !5933}
!5931 = !DILocalVariable(name: "map", arg: 1, scope: !5929, file: !2033, line: 82, type: !2032)
!5932 = !DILocalVariable(name: "bitno", arg: 2, scope: !5929, file: !2033, line: 82, type: !7)
!5933 = !DILocalVariable(name: "oldbit", scope: !5934, file: !2033, line: 86, type: !764)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !2033, line: 85, column: 5)
!5935 = distinct !DILexicalBlock(scope: !5929, file: !2033, line: 84, column: 7)
!5936 = !DILocation(line: 0, scope: !5929)
!5937 = !DILocation(line: 84, column: 12, scope: !5935)
!5938 = !DILocation(line: 84, column: 7, scope: !5935)
!5939 = !DILocation(line: 84, column: 7, scope: !5929)
!5940 = !DILocation(line: 92, column: 42, scope: !5929)
!5941 = !DILocation(line: 92, column: 31, scope: !5929)
!5942 = !DILocation(line: 91, column: 19, scope: !5929)
!5943 = !DILocation(line: 91, column: 3, scope: !5929)
!5944 = !DILocation(line: 87, column: 16, scope: !5934)
!5945 = !DILocation(line: 88, column: 11, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5934, file: !2033, line: 88, column: 11)
!5947 = !DILocation(line: 88, column: 11, scope: !5934)
!5948 = !DILocation(line: 89, column: 2, scope: !5946)
!5949 = !DILocation(line: 89, column: 41, scope: !5946)
!5950 = !DILocation(line: 92, column: 8, scope: !5929)
!5951 = !DILocation(line: 92, column: 5, scope: !5929)
!5952 = !DILocation(line: 93, column: 1, scope: !5929)
!5953 = distinct !DISubprogram(name: "single_succ_p", scope: !142, file: !142, line: 626, type: !5307, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5954)
!5954 = !{!5955}
!5955 = !DILocalVariable(name: "bb", arg: 1, scope: !5953, file: !142, line: 626, type: !5309)
!5956 = !DILocation(line: 0, scope: !5953)
!5957 = !DILocation(line: 628, column: 10, scope: !5953)
!5958 = !DILocation(line: 628, column: 33, scope: !5953)
!5959 = !DILocation(line: 628, column: 3, scope: !5953)
!5960 = distinct !DISubprogram(name: "single_succ_edge", scope: !142, file: !142, line: 643, type: !5328, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5961)
!5961 = !{!5962}
!5962 = !DILocalVariable(name: "bb", arg: 1, scope: !5960, file: !142, line: 643, type: !5309)
!5963 = !DILocation(line: 0, scope: !5960)
!5964 = !DILocation(line: 645, column: 3, scope: !5960)
!5965 = !DILocation(line: 646, column: 10, scope: !5960)
!5966 = !DILocation(line: 646, column: 3, scope: !5960)
!5967 = distinct !DISubprogram(name: "add_branch_dependences", scope: !3, file: !3, line: 2432, type: !2158, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5968)
!5968 = !{!5969, !5970, !5971, !5972}
!5969 = !DILocalVariable(name: "head", arg: 1, scope: !5967, file: !3, line: 2432, type: !777)
!5970 = !DILocalVariable(name: "tail", arg: 2, scope: !5967, file: !3, line: 2432, type: !777)
!5971 = !DILocalVariable(name: "insn", scope: !5967, file: !3, line: 2434, type: !777)
!5972 = !DILocalVariable(name: "last", scope: !5967, file: !3, line: 2434, type: !777)
!5973 = !DILocation(line: 0, scope: !5967)
!5974 = !DILocation(line: 2454, column: 3, scope: !5967)
!5975 = !DILocation(line: 2454, column: 15, scope: !5967)
!5976 = !DILocation(line: 2454, column: 23, scope: !5967)
!5977 = !DILocation(line: 2454, column: 26, scope: !5967)
!5978 = !DILocation(line: 2455, column: 12, scope: !5967)
!5979 = distinct !{!5979, !5974, !5978}
!5980 = !DILocation(line: 2459, column: 3, scope: !5967)
!5981 = !DILocation(line: 2458, column: 8, scope: !5967)
!5982 = !DILocation(line: 2459, column: 10, scope: !5967)
!5983 = !DILocation(line: 2460, column: 3, scope: !5967)
!5984 = !DILocation(line: 2460, column: 6, scope: !5967)
!5985 = !DILocation(line: 2461, column: 3, scope: !5967)
!5986 = !DILocation(line: 2461, column: 7, scope: !5967)
!5987 = !DILocation(line: 2462, column: 7, scope: !5967)
!5988 = !DILocation(line: 2462, column: 11, scope: !5967)
!5989 = !DILocation(line: 2462, column: 37, scope: !5967)
!5990 = !DILocation(line: 2463, column: 4, scope: !5967)
!5991 = !DILocation(line: 2463, column: 33, scope: !5967)
!5992 = !DILocation(line: 2464, column: 4, scope: !5967)
!5993 = !DILocation(line: 2464, column: 7, scope: !5967)
!5994 = !DILocation(line: 2468, column: 4, scope: !5967)
!5995 = !DILocation(line: 2468, column: 9, scope: !5967)
!5996 = !DILocation(line: 2469, column: 8, scope: !5967)
!5997 = !DILocation(line: 2469, column: 32, scope: !5967)
!5998 = !DILocation(line: 2469, column: 11, scope: !5967)
!5999 = !DILocation(line: 2470, column: 3, scope: !5967)
!6000 = !DILocation(line: 2470, column: 6, scope: !5967)
!6001 = !DILocation(line: 2472, column: 12, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2472, column: 11)
!6003 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2471, column: 5)
!6004 = !DILocation(line: 2472, column: 11, scope: !6003)
!6005 = !DILocation(line: 2474, column: 13, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 2474, column: 8)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 2473, column: 2)
!6008 = !DILocation(line: 2475, column: 8, scope: !6006)
!6009 = !DILocation(line: 2475, column: 11, scope: !6006)
!6010 = !DILocation(line: 2475, column: 51, scope: !6006)
!6011 = !DILocation(line: 2474, column: 8, scope: !6007)
!6012 = !DILocation(line: 2477, column: 14, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2477, column: 12)
!6014 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 2476, column: 6)
!6015 = !DILocation(line: 2477, column: 12, scope: !6014)
!6016 = !DILocation(line: 2478, column: 3, scope: !6013)
!6017 = !DILocation(line: 2479, column: 17, scope: !6014)
!6018 = !DILocation(line: 2479, column: 34, scope: !6014)
!6019 = !DILocation(line: 2479, column: 8, scope: !6014)
!6020 = !DILocation(line: 2480, column: 6, scope: !6014)
!6021 = !DILocation(line: 2482, column: 4, scope: !6007)
!6022 = !DILocation(line: 2482, column: 21, scope: !6007)
!6023 = !DILocation(line: 2485, column: 2, scope: !6007)
!6024 = !DILocation(line: 2488, column: 16, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2488, column: 11)
!6026 = !DILocation(line: 2488, column: 11, scope: !6003)
!6027 = !DILocation(line: 2491, column: 7, scope: !6003)
!6028 = !DILocation(line: 2492, column: 9, scope: !6003)
!6029 = !DILocation(line: 2493, column: 19, scope: !6003)
!6030 = !DILocation(line: 2493, column: 27, scope: !6003)
!6031 = !DILocation(line: 2493, column: 30, scope: !6003)
!6032 = !DILocation(line: 2492, column: 2, scope: !6003)
!6033 = distinct !{!6033, !6027, !6034}
!6034 = !DILocation(line: 2493, column: 49, scope: !6003)
!6035 = distinct !{!6035, !5980, !6036}
!6036 = !DILocation(line: 2494, column: 5, scope: !5967)
!6037 = !DILocation(line: 2498, column: 12, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2498, column: 7)
!6039 = !DILocation(line: 2498, column: 7, scope: !5967)
!6040 = !DILocation(line: 2499, column: 5, scope: !6038)
!6041 = !DILocation(line: 2499, column: 17, scope: !6038)
!6042 = !DILocation(line: 2501, column: 9, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 2500, column: 7)
!6044 = !DILocation(line: 2503, column: 6, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 2503, column: 6)
!6046 = !DILocation(line: 2504, column: 6, scope: !6045)
!6047 = !DILocation(line: 2504, column: 9, scope: !6045)
!6048 = !DILocation(line: 2503, column: 6, scope: !6043)
!6049 = !DILocation(line: 2505, column: 4, scope: !6045)
!6050 = distinct !{!6050, !6040, !6051}
!6051 = !DILocation(line: 2509, column: 7, scope: !6038)
!6052 = !DILocation(line: 2507, column: 8, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 2507, column: 6)
!6054 = !DILocation(line: 2507, column: 6, scope: !6043)
!6055 = !DILocation(line: 2508, column: 4, scope: !6053)
!6056 = !DILocation(line: 2511, column: 16, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2511, column: 7)
!6058 = !DILocation(line: 2511, column: 8, scope: !6057)
!6059 = !DILocation(line: 2547, column: 8, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2547, column: 7)
!6061 = !DILocation(line: 2511, column: 7, scope: !5967)
!6062 = !DILocation(line: 2547, column: 30, scope: !6060)
!6063 = !DILocation(line: 2547, column: 7, scope: !5967)
!6064 = !DILocation(line: 2551, column: 3, scope: !5967)
!6065 = !DILocation(line: 2551, column: 15, scope: !5967)
!6066 = !DILocation(line: 2553, column: 14, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2552, column: 5)
!6068 = !DILocation(line: 2559, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2559, column: 11)
!6070 = !DILocation(line: 2559, column: 25, scope: !6069)
!6071 = !DILocation(line: 2559, column: 28, scope: !6069)
!6072 = !DILocation(line: 2559, column: 54, scope: !6069)
!6073 = !DILocation(line: 2559, column: 11, scope: !6067)
!6074 = !DILocation(line: 2560, column: 2, scope: !6069)
!6075 = distinct !{!6075, !6064, !6076}
!6076 = !DILocation(line: 2561, column: 5, scope: !5967)
!6077 = !DILocation(line: 2562, column: 1, scope: !5967)
!6078 = distinct !DISubprogram(name: "propagate_deps", scope: !3, file: !3, line: 2663, type: !6079, scopeLine: 2664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6081)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{null, !765, !773}
!6081 = !{!6082, !6083, !6084, !6085, !6086}
!6082 = !DILocalVariable(name: "bb", arg: 1, scope: !6078, file: !3, line: 2663, type: !765)
!6083 = !DILocalVariable(name: "pred_deps", arg: 2, scope: !6078, file: !3, line: 2663, type: !773)
!6084 = !DILocalVariable(name: "block", scope: !6078, file: !3, line: 2665, type: !1311)
!6085 = !DILocalVariable(name: "ei", scope: !6078, file: !3, line: 2666, type: !1952)
!6086 = !DILocalVariable(name: "e", scope: !6078, file: !3, line: 2667, type: !1328)
!6087 = !DILocation(line: 0, scope: !6078)
!6088 = !DILocation(line: 2665, column: 23, scope: !6078)
!6089 = !DILocation(line: 2666, column: 3, scope: !6078)
!6090 = !DILocation(line: 2667, column: 3, scope: !6078)
!6091 = !DILocation(line: 2670, column: 3, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 2670, column: 3)
!6093 = !DILocation(line: 0, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 2670, column: 3)
!6095 = !DILocation(line: 0, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 2673, column: 11)
!6097 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 2671, column: 5)
!6098 = !DILocation(line: 2670, column: 3, scope: !6094)
!6099 = !DILocation(line: 2673, column: 11, scope: !6096)
!6100 = !DILocation(line: 2673, column: 14, scope: !6096)
!6101 = !DILocation(line: 2673, column: 22, scope: !6096)
!6102 = !DILocation(line: 2673, column: 19, scope: !6096)
!6103 = !DILocation(line: 2674, column: 4, scope: !6096)
!6104 = !DILocation(line: 2674, column: 7, scope: !6096)
!6105 = !DILocation(line: 2674, column: 40, scope: !6096)
!6106 = !DILocation(line: 2674, column: 37, scope: !6096)
!6107 = !DILocation(line: 2675, column: 4, scope: !6096)
!6108 = !DILocation(line: 2675, column: 7, scope: !6096)
!6109 = !DILocation(line: 2675, column: 36, scope: !6096)
!6110 = !DILocation(line: 2673, column: 11, scope: !6097)
!6111 = !DILocation(line: 2678, column: 18, scope: !6097)
!6112 = !DILocation(line: 2678, column: 26, scope: !6097)
!6113 = !DILocation(line: 2678, column: 7, scope: !6097)
!6114 = !DILocation(line: 2679, column: 5, scope: !6097)
!6115 = distinct !{!6115, !6091, !6116}
!6116 = !DILocation(line: 2679, column: 5, scope: !6092)
!6117 = !DILocation(line: 2683, column: 47, scope: !6078)
!6118 = !DILocation(line: 2683, column: 3, scope: !6078)
!6119 = !DILocation(line: 2683, column: 34, scope: !6078)
!6120 = !DILocation(line: 2684, column: 46, scope: !6078)
!6121 = !DILocation(line: 2684, column: 3, scope: !6078)
!6122 = !DILocation(line: 2684, column: 15, scope: !6078)
!6123 = !DILocation(line: 2684, column: 33, scope: !6078)
!6124 = !DILocation(line: 2685, column: 48, scope: !6078)
!6125 = !DILocation(line: 2685, column: 3, scope: !6078)
!6126 = !DILocation(line: 2685, column: 15, scope: !6078)
!6127 = !DILocation(line: 2685, column: 35, scope: !6078)
!6128 = !DILocation(line: 2686, column: 47, scope: !6078)
!6129 = !DILocation(line: 2686, column: 3, scope: !6078)
!6130 = !DILocation(line: 2686, column: 15, scope: !6078)
!6131 = !DILocation(line: 2686, column: 34, scope: !6078)
!6132 = !DILocation(line: 2689, column: 14, scope: !6078)
!6133 = !DILocation(line: 2689, column: 33, scope: !6078)
!6134 = !DILocation(line: 2690, column: 32, scope: !6078)
!6135 = !DILocation(line: 2691, column: 34, scope: !6078)
!6136 = !DILocation(line: 2692, column: 33, scope: !6078)
!6137 = !DILocation(line: 2693, column: 1, scope: !6078)
!6138 = distinct !DISubprogram(name: "sets_likely_spilled", scope: !3, file: !3, line: 2406, type: !2144, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6139)
!6139 = !{!6140, !6141}
!6140 = !DILocalVariable(name: "pat", arg: 1, scope: !6138, file: !3, line: 2406, type: !777)
!6141 = !DILocalVariable(name: "ret", scope: !6138, file: !3, line: 2408, type: !764)
!6142 = !DILocation(line: 0, scope: !6138)
!6143 = !DILocation(line: 2408, column: 3, scope: !6138)
!6144 = !DILocation(line: 2408, column: 8, scope: !6138)
!6145 = !DILocation(line: 2409, column: 3, scope: !6138)
!6146 = !DILocation(line: 2410, column: 10, scope: !6138)
!6147 = !DILocation(line: 2411, column: 1, scope: !6138)
!6148 = !DILocation(line: 2410, column: 3, scope: !6138)
!6149 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1294, file: !1294, line: 31, type: !6150, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6161)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{!765, !6152, !7}
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6153, size: 64)
!6153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6154)
!6154 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1294, line: 31, baseType: !6155)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1294, line: 31, size: 96, elements: !6156)
!6156 = !{!6157, !6158, !6159}
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6155, file: !1294, line: 31, baseType: !7, size: 32)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6155, file: !1294, line: 31, baseType: !7, size: 32, offset: 32)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6155, file: !1294, line: 31, baseType: !6160, size: 32, offset: 64)
!6160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 32, elements: !812)
!6161 = !{!6162, !6163}
!6162 = !DILocalVariable(name: "vec_", arg: 1, scope: !6149, file: !1294, line: 31, type: !6152)
!6163 = !DILocalVariable(name: "ix_", arg: 2, scope: !6149, file: !1294, line: 31, type: !7)
!6164 = !DILocation(line: 0, scope: !6149)
!6165 = !DILocation(line: 31, column: 1, scope: !6149)
!6166 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_index", scope: !385, file: !385, line: 846, type: !6167, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6189)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!6169, !6181, !7}
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_deps_insn_data_def", file: !385, line: 843, baseType: !6171)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_deps_insn_data", file: !385, line: 663, size: 448, elements: !6172)
!6172 = !{!6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "dep_count", scope: !6171, file: !385, line: 668, baseType: !765, size: 32)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "has_internal_dep", scope: !6171, file: !385, line: 672, baseType: !7, size: 32, offset: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "hard_back_deps", scope: !6171, file: !385, line: 682, baseType: !3984, size: 64, offset: 64)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "spec_back_deps", scope: !6171, file: !385, line: 686, baseType: !3984, size: 64, offset: 128)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "forw_deps", scope: !6171, file: !385, line: 690, baseType: !3984, size: 64, offset: 192)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_back_deps", scope: !6171, file: !385, line: 694, baseType: !3984, size: 64, offset: 256)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_forw_deps", scope: !6171, file: !385, line: 699, baseType: !3984, size: 64, offset: 320)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !6171, file: !385, line: 702, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_base", file: !385, line: 846, baseType: !6183)
!6183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_base", file: !385, line: 846, size: 512, elements: !6184)
!6184 = !{!6185, !6186, !6187}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6183, file: !385, line: 846, baseType: !7, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6183, file: !385, line: 846, baseType: !7, size: 32, offset: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6183, file: !385, line: 846, baseType: !6188, size: 448, offset: 64)
!6188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6170, size: 448, elements: !812)
!6189 = !{!6190, !6191}
!6190 = !DILocalVariable(name: "vec_", arg: 1, scope: !6166, file: !385, line: 846, type: !6181)
!6191 = !DILocalVariable(name: "ix_", arg: 2, scope: !6166, file: !385, line: 846, type: !7)
!6192 = !DILocation(line: 0, scope: !6166)
!6193 = !DILocation(line: 846, column: 1, scope: !6166)
!6194 = distinct !DISubprogram(name: "sets_likely_spilled_1", scope: !3, file: !3, line: 2414, type: !6195, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6197)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{null, !777, !2138, !769}
!6197 = !{!6198, !6199, !6200, !6201}
!6198 = !DILocalVariable(name: "x", arg: 1, scope: !6194, file: !3, line: 2414, type: !777)
!6199 = !DILocalVariable(name: "pat", arg: 2, scope: !6194, file: !3, line: 2414, type: !2138)
!6200 = !DILocalVariable(name: "data", arg: 3, scope: !6194, file: !3, line: 2414, type: !769)
!6201 = !DILocalVariable(name: "ret", scope: !6194, file: !3, line: 2416, type: !763)
!6202 = !DILocation(line: 0, scope: !6194)
!6203 = !DILocation(line: 2418, column: 7, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 2418, column: 7)
!6205 = !DILocation(line: 2418, column: 22, scope: !6204)
!6206 = !DILocation(line: 2419, column: 7, scope: !6204)
!6207 = !DILocation(line: 2419, column: 10, scope: !6204)
!6208 = !DILocation(line: 2420, column: 7, scope: !6204)
!6209 = !DILocation(line: 2420, column: 10, scope: !6204)
!6210 = !DILocation(line: 2420, column: 20, scope: !6204)
!6211 = !DILocation(line: 2421, column: 7, scope: !6204)
!6212 = !DILocation(line: 2421, column: 10, scope: !6204)
!6213 = !DILocation(line: 2418, column: 7, scope: !6194)
!6214 = !DILocation(line: 2422, column: 10, scope: !6204)
!6215 = !DILocation(line: 2422, column: 5, scope: !6204)
!6216 = !DILocation(line: 2423, column: 1, scope: !6194)
!6217 = distinct !DISubprogram(name: "rhs_regno", scope: !396, file: !396, line: 1051, type: !6218, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!7, !2138}
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "x", arg: 1, scope: !6217, file: !396, line: 1051, type: !2138)
!6222 = !DILocation(line: 0, scope: !6217)
!6223 = !DILocation(line: 1053, column: 10, scope: !6217)
!6224 = !DILocation(line: 1053, column: 3, scope: !6217)
!6225 = distinct !DISubprogram(name: "compute_jump_reg_dependencies", scope: !3, file: !3, line: 2319, type: !2083, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6226)
!6226 = !{!6227, !6228, !6229, !6230}
!6227 = !DILocalVariable(name: "insn", arg: 1, scope: !6225, file: !3, line: 2319, type: !777)
!6228 = !DILocalVariable(name: "cond_exec", arg: 2, scope: !6225, file: !3, line: 2320, type: !2085)
!6229 = !DILocalVariable(name: "used", arg: 3, scope: !6225, file: !3, line: 2321, type: !2085)
!6230 = !DILocalVariable(name: "set", arg: 4, scope: !6225, file: !3, line: 2322, type: !2085)
!6231 = !DILocation(line: 0, scope: !6225)
!6232 = !DILocation(line: 2326, column: 1, scope: !6225)
!6233 = distinct !DISubprogram(name: "init_ready_list", scope: !3, file: !3, line: 2100, type: !2093, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6234)
!6234 = !{!6235, !6236, !6237, !6238, !6239, !6244, !6245, !6246}
!6235 = !DILocalVariable(name: "prev_head", scope: !6233, file: !3, line: 2102, type: !777)
!6236 = !DILocalVariable(name: "next_tail", scope: !6233, file: !3, line: 2103, type: !777)
!6237 = !DILocalVariable(name: "bb_src", scope: !6233, file: !3, line: 2104, type: !765)
!6238 = !DILocalVariable(name: "insn", scope: !6233, file: !3, line: 2105, type: !777)
!6239 = !DILocalVariable(name: "src_head", scope: !6240, file: !3, line: 2135, type: !777)
!6240 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 2134, column: 7)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2133, column: 9)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 2132, column: 3)
!6243 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2132, column: 3)
!6244 = !DILocalVariable(name: "src_next_tail", scope: !6240, file: !3, line: 2136, type: !777)
!6245 = !DILocalVariable(name: "tail", scope: !6240, file: !3, line: 2137, type: !777)
!6246 = !DILocalVariable(name: "head", scope: !6240, file: !3, line: 2137, type: !777)
!6247 = !DILocation(line: 2102, column: 19, scope: !6233)
!6248 = !DILocation(line: 2102, column: 39, scope: !6233)
!6249 = !DILocation(line: 0, scope: !6233)
!6250 = !DILocation(line: 2103, column: 39, scope: !6233)
!6251 = !DILocation(line: 2107, column: 18, scope: !6233)
!6252 = !DILocation(line: 2108, column: 24, scope: !6233)
!6253 = !DILocation(line: 2109, column: 17, scope: !6233)
!6254 = !DILocation(line: 2112, column: 7, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2112, column: 7)
!6256 = !DILocation(line: 2112, column: 21, scope: !6255)
!6257 = !DILocation(line: 2112, column: 7, scope: !6233)
!6258 = !DILocation(line: 2113, column: 29, scope: !6255)
!6259 = !DILocation(line: 2113, column: 5, scope: !6255)
!6260 = !DILocation(line: 2116, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2116, column: 7)
!6262 = !DILocation(line: 2116, column: 25, scope: !6261)
!6263 = !DILocation(line: 2116, column: 7, scope: !6233)
!6264 = !DILocation(line: 2117, column: 23, scope: !6261)
!6265 = !DILocation(line: 2117, column: 5, scope: !6261)
!6266 = !DILocation(line: 2121, column: 8, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2121, column: 3)
!6268 = !DILocation(line: 0, scope: !6267)
!6269 = !DILocation(line: 2121, column: 43, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2121, column: 3)
!6271 = !DILocation(line: 2121, column: 3, scope: !6267)
!6272 = !DILocation(line: 2123, column: 7, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2122, column: 5)
!6274 = !DILocation(line: 2124, column: 21, scope: !6273)
!6275 = !DILocation(line: 2126, column: 7, scope: !6273)
!6276 = !DILocation(line: 2121, column: 3, scope: !6270)
!6277 = distinct !{!6277, !6271, !6278}
!6278 = !DILocation(line: 2127, column: 5, scope: !6267)
!6279 = !DILocation(line: 2132, column: 17, scope: !6243)
!6280 = !DILocation(line: 0, scope: !6240)
!6281 = !DILocation(line: 2132, column: 8, scope: !6243)
!6282 = !DILocation(line: 0, scope: !6243)
!6283 = !DILocation(line: 2132, column: 41, scope: !6242)
!6284 = !DILocation(line: 2132, column: 39, scope: !6242)
!6285 = !DILocation(line: 2132, column: 3, scope: !6243)
!6286 = !DILocation(line: 2133, column: 9, scope: !6241)
!6287 = !DILocation(line: 2133, column: 9, scope: !6242)
!6288 = !DILocation(line: 2137, column: 2, scope: !6240)
!6289 = !DILocation(line: 2139, column: 21, scope: !6240)
!6290 = !DILocation(line: 2139, column: 44, scope: !6240)
!6291 = !DILocation(line: 2139, column: 2, scope: !6240)
!6292 = !DILocation(line: 2141, column: 18, scope: !6240)
!6293 = !DILocation(line: 2144, column: 7, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 2144, column: 2)
!6295 = !DILocation(line: 0, scope: !6294)
!6296 = !DILocation(line: 2144, column: 29, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2144, column: 2)
!6298 = !DILocation(line: 2144, column: 2, scope: !6294)
!6299 = !DILocation(line: 2145, column: 8, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2145, column: 8)
!6301 = !DILocation(line: 2145, column: 22, scope: !6300)
!6302 = !DILocation(line: 2145, column: 26, scope: !6300)
!6303 = !DILocation(line: 2145, column: 8, scope: !6297)
!6304 = !DILocation(line: 2146, column: 6, scope: !6300)
!6305 = !DILocation(line: 2144, column: 54, scope: !6297)
!6306 = !DILocation(line: 2144, column: 2, scope: !6297)
!6307 = distinct !{!6307, !6298, !6308}
!6308 = !DILocation(line: 2146, column: 21, scope: !6294)
!6309 = !DILocation(line: 2147, column: 7, scope: !6241)
!6310 = !DILocation(line: 2147, column: 7, scope: !6240)
!6311 = !DILocation(line: 2132, column: 3, scope: !6242)
!6312 = distinct !{!6312, !6285, !6313}
!6313 = !DILocation(line: 2147, column: 7, scope: !6243)
!6314 = !DILocation(line: 2148, column: 1, scope: !6233)
!6315 = distinct !DISubprogram(name: "can_schedule_ready_p", scope: !3, file: !3, line: 2154, type: !2074, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6316)
!6316 = !{!6317}
!6317 = !DILocalVariable(name: "insn", arg: 1, scope: !6315, file: !3, line: 2154, type: !777)
!6318 = !DILocation(line: 0, scope: !6315)
!6319 = !DILocation(line: 2157, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 2157, column: 7)
!6321 = !DILocation(line: 2157, column: 25, scope: !6320)
!6322 = !DILocation(line: 2157, column: 22, scope: !6320)
!6323 = !DILocation(line: 2158, column: 7, scope: !6320)
!6324 = !DILocation(line: 2158, column: 10, scope: !6320)
!6325 = !DILocation(line: 2159, column: 7, scope: !6320)
!6326 = !DILocation(line: 2159, column: 11, scope: !6320)
!6327 = !DILocation(line: 2157, column: 7, scope: !6315)
!6328 = !DILocation(line: 2162, column: 5, scope: !6320)
!6329 = !DILocation(line: 0, scope: !6320)
!6330 = !DILocation(line: 2163, column: 1, scope: !6315)
!6331 = distinct !DISubprogram(name: "schedule_more_p", scope: !3, file: !3, line: 2091, type: !2124, scopeLine: 2092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!6332 = !DILocation(line: 2093, column: 10, scope: !6331)
!6333 = !DILocation(line: 2093, column: 33, scope: !6331)
!6334 = !DILocation(line: 2093, column: 31, scope: !6331)
!6335 = !DILocation(line: 2093, column: 3, scope: !6331)
!6336 = distinct !DISubprogram(name: "new_ready", scope: !3, file: !3, line: 2202, type: !2128, scopeLine: 2203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6337)
!6337 = !{!6338, !6339, !6340, !6343}
!6338 = !DILocalVariable(name: "next", arg: 1, scope: !6336, file: !3, line: 2202, type: !777)
!6339 = !DILocalVariable(name: "ts", arg: 2, scope: !6336, file: !3, line: 2202, type: !1958)
!6340 = !DILocalVariable(name: "not_ex_free", scope: !6341, file: !3, line: 2206, type: !765)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 2205, column: 5)
!6342 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2204, column: 7)
!6343 = !DILocalVariable(name: "new_ds", scope: !6344, file: !3, line: 2227, type: !1958)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 2226, column: 6)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 2221, column: 8)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2220, column: 2)
!6347 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 2210, column: 11)
!6348 = !DILocation(line: 0, scope: !6336)
!6349 = !DILocation(line: 2204, column: 7, scope: !6342)
!6350 = !DILocation(line: 2204, column: 25, scope: !6342)
!6351 = !DILocation(line: 2204, column: 22, scope: !6342)
!6352 = !DILocation(line: 2204, column: 7, scope: !6336)
!6353 = !DILocation(line: 0, scope: !6341)
!6354 = !DILocation(line: 2210, column: 12, scope: !6347)
!6355 = !DILocation(line: 2211, column: 4, scope: !6347)
!6356 = !DILocation(line: 2211, column: 7, scope: !6347)
!6357 = !DILocation(line: 2212, column: 4, scope: !6347)
!6358 = !DILocation(line: 2212, column: 8, scope: !6347)
!6359 = !DILocation(line: 2213, column: 8, scope: !6347)
!6360 = !DILocation(line: 2213, column: 13, scope: !6347)
!6361 = !DILocation(line: 2213, column: 35, scope: !6347)
!6362 = !DILocation(line: 2214, column: 6, scope: !6347)
!6363 = !DILocation(line: 2214, column: 34, scope: !6347)
!6364 = !DILocation(line: 2214, column: 9, scope: !6347)
!6365 = !DILocation(line: 2215, column: 22, scope: !6347)
!6366 = !DILocation(line: 2215, column: 20, scope: !6347)
!6367 = !DILocation(line: 2216, column: 19, scope: !6347)
!6368 = !DILocation(line: 2216, column: 22, scope: !6347)
!6369 = !DILocation(line: 2217, column: 5, scope: !6347)
!6370 = !DILocation(line: 2217, column: 27, scope: !6347)
!6371 = !DILocation(line: 2217, column: 9, scope: !6347)
!6372 = !DILocation(line: 2218, column: 5, scope: !6347)
!6373 = !DILocation(line: 2218, column: 49, scope: !6347)
!6374 = !DILocation(line: 2219, column: 8, scope: !6347)
!6375 = !DILocation(line: 2218, column: 24, scope: !6347)
!6376 = !DILocation(line: 2218, column: 23, scope: !6347)
!6377 = !DILocation(line: 2210, column: 11, scope: !6341)
!6378 = !DILocation(line: 2221, column: 8, scope: !6345)
!6379 = !DILocation(line: 2224, column: 8, scope: !6345)
!6380 = !DILocation(line: 2224, column: 11, scope: !6345)
!6381 = !DILocation(line: 2224, column: 28, scope: !6345)
!6382 = !DILocation(line: 2225, column: 8, scope: !6345)
!6383 = !DILocation(line: 2225, column: 11, scope: !6345)
!6384 = !DILocation(line: 2225, column: 22, scope: !6345)
!6385 = !DILocation(line: 2225, column: 27, scope: !6345)
!6386 = !DILocation(line: 2221, column: 8, scope: !6346)
!6387 = !DILocation(line: 2230, column: 17, scope: !6344)
!6388 = !DILocation(line: 0, scope: !6344)
!6389 = !DILocation(line: 2233, column: 12, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 2233, column: 12)
!6391 = !DILocation(line: 2233, column: 12, scope: !6344)
!6392 = !DILocation(line: 2242, column: 22, scope: !6345)
!6393 = !DILocation(line: 2242, column: 38, scope: !6345)
!6394 = !DILocation(line: 2246, column: 3, scope: !6336)
!6395 = distinct !DISubprogram(name: "rgn_rank", scope: !3, file: !3, line: 2276, type: !2132, scopeLine: 2277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6396)
!6396 = !{!6397, !6398, !6399, !6402}
!6397 = !DILocalVariable(name: "insn1", arg: 1, scope: !6395, file: !3, line: 2276, type: !777)
!6398 = !DILocalVariable(name: "insn2", arg: 2, scope: !6395, file: !3, line: 2276, type: !777)
!6399 = !DILocalVariable(name: "spec_val", scope: !6400, file: !3, line: 2281, type: !765)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2280, column: 5)
!6401 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2279, column: 7)
!6402 = !DILocalVariable(name: "prob_val", scope: !6400, file: !3, line: 2281, type: !765)
!6403 = !DILocation(line: 0, scope: !6395)
!6404 = !DILocation(line: 2279, column: 7, scope: !6401)
!6405 = !DILocation(line: 2279, column: 26, scope: !6401)
!6406 = !DILocation(line: 2279, column: 23, scope: !6401)
!6407 = !DILocation(line: 2279, column: 7, scope: !6395)
!6408 = !DILocation(line: 2284, column: 31, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2284, column: 11)
!6410 = !DILocation(line: 2284, column: 28, scope: !6409)
!6411 = !DILocation(line: 2284, column: 42, scope: !6409)
!6412 = !DILocation(line: 2284, column: 11, scope: !6400)
!6413 = !DILocation(line: 2286, column: 28, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2286, column: 11)
!6415 = !DILocation(line: 2286, column: 42, scope: !6414)
!6416 = !DILocation(line: 2286, column: 11, scope: !6400)
!6417 = !DILocation(line: 2290, column: 18, scope: !6400)
!6418 = !DILocation(line: 2290, column: 48, scope: !6400)
!6419 = !DILocation(line: 2290, column: 46, scope: !6400)
!6420 = !DILocation(line: 0, scope: !6400)
!6421 = !DILocation(line: 2291, column: 11, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2291, column: 11)
!6423 = !DILocation(line: 2291, column: 11, scope: !6400)
!6424 = !DILocation(line: 2295, column: 18, scope: !6400)
!6425 = !DILocation(line: 2295, column: 45, scope: !6400)
!6426 = !DILocation(line: 2295, column: 43, scope: !6400)
!6427 = !DILocation(line: 2296, column: 11, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2296, column: 11)
!6429 = !DILocation(line: 0, scope: !6401)
!6430 = !DILocation(line: 2299, column: 3, scope: !6395)
!6431 = !DILocation(line: 2300, column: 1, scope: !6395)
!6432 = !DILocation(line: 0, scope: !2236)
!6433 = !DILocation(line: 2259, column: 7, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2259, column: 7)
!6435 = !DILocation(line: 2259, column: 7, scope: !2236)
!6436 = !DILocation(line: 2260, column: 33, scope: !6434)
!6437 = !DILocation(line: 2260, column: 49, scope: !6434)
!6438 = !DILocation(line: 2260, column: 5, scope: !6434)
!6439 = !DILocation(line: 2263, column: 11, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2263, column: 11)
!6441 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2262, column: 5)
!6442 = !DILocation(line: 2263, column: 29, scope: !6440)
!6443 = !DILocation(line: 2263, column: 33, scope: !6440)
!6444 = !DILocation(line: 2263, column: 36, scope: !6440)
!6445 = !DILocation(line: 2263, column: 54, scope: !6440)
!6446 = !DILocation(line: 2263, column: 51, scope: !6440)
!6447 = !DILocation(line: 2263, column: 11, scope: !6441)
!6448 = !DILocation(line: 2264, column: 26, scope: !6440)
!6449 = !DILocation(line: 2264, column: 2, scope: !6440)
!6450 = !DILocation(line: 2266, column: 22, scope: !6440)
!6451 = !DILocation(line: 2266, column: 2, scope: !6440)
!6452 = !DILocation(line: 2268, column: 3, scope: !2236)
!6453 = distinct !DISubprogram(name: "rgn_insn_finishes_block_p", scope: !3, file: !3, line: 2357, type: !2144, scopeLine: 2358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6454)
!6454 = !{!6455}
!6455 = !DILocalVariable(name: "insn", arg: 1, scope: !6453, file: !3, line: 2357, type: !777)
!6456 = !DILocation(line: 0, scope: !6453)
!6457 = !DILocation(line: 2359, column: 7, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 2359, column: 7)
!6459 = !DILocation(line: 2359, column: 25, scope: !6458)
!6460 = !DILocation(line: 2359, column: 22, scope: !6458)
!6461 = !DILocation(line: 2360, column: 7, scope: !6458)
!6462 = !DILocation(line: 2360, column: 10, scope: !6458)
!6463 = !DILocation(line: 2360, column: 31, scope: !6458)
!6464 = !DILocation(line: 2360, column: 38, scope: !6458)
!6465 = !DILocation(line: 2360, column: 35, scope: !6458)
!6466 = !DILocation(line: 2359, column: 7, scope: !6453)
!6467 = !DILocation(line: 2364, column: 3, scope: !6453)
!6468 = !DILocation(line: 2365, column: 1, scope: !6453)
!6469 = distinct !DISubprogram(name: "rgn_add_remove_insn", scope: !3, file: !3, line: 3333, type: !2154, scopeLine: 3334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6470)
!6470 = !{!6471, !6472}
!6471 = !DILocalVariable(name: "insn", arg: 1, scope: !6469, file: !3, line: 3333, type: !777)
!6472 = !DILocalVariable(name: "remove_p", arg: 2, scope: !6469, file: !3, line: 3333, type: !765)
!6473 = !DILocation(line: 0, scope: !6469)
!6474 = !DILocation(line: 3335, column: 8, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 3335, column: 7)
!6476 = !DILocation(line: 0, scope: !6475)
!6477 = !DILocation(line: 3335, column: 7, scope: !6469)
!6478 = !DILocation(line: 3336, column: 16, scope: !6475)
!6479 = !DILocation(line: 3336, column: 5, scope: !6475)
!6480 = !DILocation(line: 3338, column: 16, scope: !6475)
!6481 = !DILocation(line: 3340, column: 7, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 3340, column: 7)
!6483 = !DILocation(line: 3340, column: 25, scope: !6482)
!6484 = !DILocation(line: 3340, column: 22, scope: !6482)
!6485 = !DILocation(line: 3340, column: 7, scope: !6469)
!6486 = !DILocation(line: 0, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 3342, column: 11)
!6488 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 3341, column: 5)
!6489 = !DILocation(line: 3342, column: 11, scope: !6488)
!6490 = !DILocation(line: 3343, column: 16, scope: !6487)
!6491 = !DILocation(line: 3343, column: 2, scope: !6487)
!6492 = !DILocation(line: 3345, column: 16, scope: !6487)
!6493 = !DILocation(line: 3347, column: 1, scope: !6469)
!6494 = distinct !DISubprogram(name: "begin_schedule_ready", scope: !3, file: !3, line: 2170, type: !2158, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6495)
!6495 = !{!6496, !6497}
!6496 = !DILocalVariable(name: "insn", arg: 1, scope: !6494, file: !3, line: 2170, type: !777)
!6497 = !DILocalVariable(name: "last", arg: 2, scope: !6494, file: !3, line: 2170, type: !777)
!6498 = !DILocation(line: 0, scope: !6494)
!6499 = !DILocation(line: 2173, column: 7, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2173, column: 7)
!6501 = !DILocation(line: 2173, column: 25, scope: !6500)
!6502 = !DILocation(line: 2173, column: 22, scope: !6500)
!6503 = !DILocation(line: 2173, column: 7, scope: !6494)
!6504 = !DILocation(line: 2175, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 2175, column: 11)
!6506 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2174, column: 5)
!6507 = !DILocation(line: 2175, column: 11, scope: !6506)
!6508 = !DILocation(line: 2177, column: 4, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2176, column: 2)
!6510 = !DILocation(line: 2179, column: 23, scope: !6509)
!6511 = !DILocation(line: 2179, column: 4, scope: !6509)
!6512 = !DILocation(line: 2182, column: 8, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2182, column: 8)
!6514 = !DILocation(line: 2182, column: 28, scope: !6513)
!6515 = !DILocation(line: 2182, column: 31, scope: !6513)
!6516 = !DILocation(line: 2182, column: 8, scope: !6509)
!6517 = !DILocation(line: 2183, column: 6, scope: !6513)
!6518 = !DILocation(line: 2185, column: 11, scope: !6509)
!6519 = !DILocation(line: 2186, column: 2, scope: !6509)
!6520 = !DILocation(line: 2187, column: 15, scope: !6506)
!6521 = !DILocation(line: 2188, column: 5, scope: !6506)
!6522 = !DILocation(line: 2192, column: 27, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2190, column: 5)
!6524 = !DILocation(line: 2194, column: 16, scope: !6494)
!6525 = !DILocation(line: 2195, column: 1, scope: !6494)
!6526 = distinct !DISubprogram(name: "advance_target_bb", scope: !3, file: !3, line: 3481, type: !2162, scopeLine: 3482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6527)
!6527 = !{!6528, !6529}
!6528 = !DILocalVariable(name: "bb", arg: 1, scope: !6526, file: !3, line: 3481, type: !1311)
!6529 = !DILocalVariable(name: "insn", arg: 2, scope: !6526, file: !3, line: 3481, type: !777)
!6530 = !DILocation(line: 0, scope: !6526)
!6531 = !DILocation(line: 3483, column: 7, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 3483, column: 7)
!6533 = !DILocation(line: 3483, column: 7, scope: !6526)
!6534 = !DILocation(line: 3486, column: 3, scope: !6526)
!6535 = !DILocation(line: 3488, column: 14, scope: !6526)
!6536 = !DILocation(line: 3488, column: 3, scope: !6526)
!6537 = !DILocation(line: 3489, column: 1, scope: !6526)
!6538 = distinct !DISubprogram(name: "compute_trg_info", scope: !3, file: !3, line: 1477, type: !2101, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6539)
!6539 = !{!6540, !6541, !6542, !6548, !6549, !6550, !6551, !6552, !6553, !6554, !6555, !6556, !6562}
!6540 = !DILocalVariable(name: "trg", arg: 1, scope: !6538, file: !3, line: 1477, type: !765)
!6541 = !DILocalVariable(name: "sp", scope: !6538, file: !3, line: 1479, type: !1959)
!6542 = !DILocalVariable(name: "el", scope: !6538, file: !3, line: 1480, type: !6543)
!6543 = !DIDerivedType(tag: DW_TAG_typedef, name: "edgelst", file: !3, line: 169, baseType: !6544)
!6544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 164, size: 128, elements: !6545)
!6545 = !{!6546, !6547}
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "first_member", scope: !6544, file: !3, line: 166, baseType: !1942, size: 64)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_members", scope: !6544, file: !3, line: 167, baseType: !765, size: 32, offset: 64)
!6548 = !DILocalVariable(name: "i", scope: !6538, file: !3, line: 1481, type: !765)
!6549 = !DILocalVariable(name: "j", scope: !6538, file: !3, line: 1481, type: !765)
!6550 = !DILocalVariable(name: "k", scope: !6538, file: !3, line: 1481, type: !765)
!6551 = !DILocalVariable(name: "update_idx", scope: !6538, file: !3, line: 1481, type: !765)
!6552 = !DILocalVariable(name: "block", scope: !6538, file: !3, line: 1482, type: !1311)
!6553 = !DILocalVariable(name: "visited", scope: !6538, file: !3, line: 1483, type: !2032)
!6554 = !DILocalVariable(name: "ei", scope: !6538, file: !3, line: 1484, type: !1952)
!6555 = !DILocalVariable(name: "e", scope: !6538, file: !3, line: 1485, type: !1328)
!6556 = !DILocalVariable(name: "tf", scope: !6557, file: !3, line: 1515, type: !765)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 1514, column: 2)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1513, column: 11)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1509, column: 5)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 1508, column: 3)
!6561 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 1508, column: 3)
!6562 = !DILocalVariable(name: "cf", scope: !6557, file: !3, line: 1515, type: !765)
!6563 = !DILocation(line: 0, scope: !6538)
!6564 = !DILocation(line: 1480, column: 3, scope: !6538)
!6565 = !DILocation(line: 1480, column: 11, scope: !6538)
!6566 = !DILocation(line: 1484, column: 3, scope: !6538)
!6567 = !DILocation(line: 1485, column: 3, scope: !6538)
!6568 = !DILocation(line: 1487, column: 21, scope: !6538)
!6569 = !DILocation(line: 1487, column: 19, scope: !6538)
!6570 = !DILocation(line: 1489, column: 14, scope: !6538)
!6571 = !DILocation(line: 1494, column: 17, scope: !6538)
!6572 = !DILocation(line: 1494, column: 37, scope: !6538)
!6573 = !DILocation(line: 1494, column: 35, scope: !6538)
!6574 = !DILocation(line: 1494, column: 50, scope: !6538)
!6575 = !DILocation(line: 1494, column: 48, scope: !6538)
!6576 = !DILocation(line: 1494, column: 14, scope: !6538)
!6577 = !DILocation(line: 1495, column: 17, scope: !6538)
!6578 = !DILocation(line: 1495, column: 15, scope: !6538)
!6579 = !DILocation(line: 1497, column: 16, scope: !6538)
!6580 = !DILocation(line: 1498, column: 19, scope: !6538)
!6581 = !DILocation(line: 1498, column: 17, scope: !6538)
!6582 = !DILocation(line: 1501, column: 8, scope: !6538)
!6583 = !DILocation(line: 1501, column: 24, scope: !6538)
!6584 = !DILocation(line: 1502, column: 7, scope: !6538)
!6585 = !DILocation(line: 1502, column: 16, scope: !6538)
!6586 = !DILocation(line: 1503, column: 7, scope: !6538)
!6587 = !DILocation(line: 1503, column: 22, scope: !6538)
!6588 = !DILocation(line: 1504, column: 7, scope: !6538)
!6589 = !DILocation(line: 1504, column: 16, scope: !6538)
!6590 = !DILocation(line: 1506, column: 28, scope: !6538)
!6591 = !DILocation(line: 1506, column: 13, scope: !6538)
!6592 = !DILocation(line: 0, scope: !6559)
!6593 = !DILocation(line: 0, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1523, column: 2)
!6595 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1522, column: 11)
!6596 = !DILocation(line: 0, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1536, column: 4)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1536, column: 4)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1531, column: 2)
!6600 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1530, column: 11)
!6601 = !DILocation(line: 0, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 1552, column: 8)
!6603 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 1550, column: 6)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1549, column: 4)
!6605 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1549, column: 4)
!6606 = !DILocation(line: 0, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1552, column: 8)
!6608 = !DILocation(line: 1508, column: 8, scope: !6561)
!6609 = !DILocation(line: 0, scope: !6561)
!6610 = !DILocation(line: 1508, column: 25, scope: !6560)
!6611 = !DILocation(line: 1508, column: 23, scope: !6560)
!6612 = !DILocation(line: 1508, column: 3, scope: !6561)
!6613 = !DILocation(line: 1510, column: 12, scope: !6559)
!6614 = !DILocation(line: 1512, column: 22, scope: !6559)
!6615 = !DILocation(line: 1512, column: 11, scope: !6559)
!6616 = !DILocation(line: 1512, column: 20, scope: !6559)
!6617 = !DILocation(line: 1513, column: 11, scope: !6558)
!6618 = !DILocation(line: 1513, column: 11, scope: !6559)
!6619 = !DILocation(line: 1515, column: 13, scope: !6557)
!6620 = !DILocation(line: 0, scope: !6557)
!6621 = !DILocation(line: 1518, column: 20, scope: !6557)
!6622 = !DILocation(line: 1515, column: 29, scope: !6557)
!6623 = !DILocation(line: 1518, column: 30, scope: !6557)
!6624 = !DILocation(line: 1518, column: 50, scope: !6557)
!6625 = !DILocation(line: 1518, column: 8, scope: !6557)
!6626 = !DILocation(line: 1518, column: 17, scope: !6557)
!6627 = !DILocation(line: 1519, column: 36, scope: !6557)
!6628 = !DILocation(line: 1519, column: 33, scope: !6557)
!6629 = !DILocation(line: 1519, column: 19, scope: !6557)
!6630 = !DILocation(line: 1519, column: 17, scope: !6557)
!6631 = !DILocation(line: 1520, column: 2, scope: !6557)
!6632 = !DILocation(line: 1522, column: 15, scope: !6595)
!6633 = !DILocation(line: 1522, column: 11, scope: !6595)
!6634 = !DILocation(line: 1522, column: 11, scope: !6559)
!6635 = !DILocation(line: 1524, column: 4, scope: !6594)
!6636 = !DILocation(line: 1525, column: 29, scope: !6594)
!6637 = !DILocation(line: 1525, column: 25, scope: !6594)
!6638 = !DILocation(line: 1525, column: 8, scope: !6594)
!6639 = !DILocation(line: 1525, column: 23, scope: !6594)
!6640 = !DILocation(line: 1526, column: 8, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1526, column: 8)
!6642 = !DILocation(line: 1526, column: 31, scope: !6641)
!6643 = !DILocation(line: 1526, column: 27, scope: !6641)
!6644 = !DILocation(line: 1530, column: 15, scope: !6600)
!6645 = !DILocation(line: 1527, column: 19, scope: !6641)
!6646 = !DILocation(line: 1527, column: 6, scope: !6641)
!6647 = !DILocation(line: 1530, column: 11, scope: !6600)
!6648 = !DILocation(line: 1530, column: 11, scope: !6559)
!6649 = !DILocation(line: 1534, column: 34, scope: !6599)
!6650 = !DILocation(line: 1534, column: 46, scope: !6599)
!6651 = !DILocation(line: 1534, column: 18, scope: !6599)
!6652 = !DILocation(line: 1534, column: 31, scope: !6599)
!6653 = !DILocation(line: 1535, column: 34, scope: !6599)
!6654 = !DILocation(line: 1535, column: 18, scope: !6599)
!6655 = !DILocation(line: 1535, column: 29, scope: !6599)
!6656 = !DILocation(line: 1536, column: 9, scope: !6598)
!6657 = !DILocation(line: 0, scope: !6598)
!6658 = !DILocation(line: 1536, column: 23, scope: !6597)
!6659 = !DILocation(line: 1536, column: 18, scope: !6597)
!6660 = !DILocation(line: 1536, column: 4, scope: !6598)
!6661 = !DILocation(line: 1537, column: 35, scope: !6597)
!6662 = !DILocation(line: 1537, column: 32, scope: !6597)
!6663 = !DILocation(line: 1537, column: 52, scope: !6597)
!6664 = !DILocation(line: 1537, column: 6, scope: !6597)
!6665 = !DILocation(line: 1537, column: 18, scope: !6597)
!6666 = !DILocation(line: 1537, column: 30, scope: !6597)
!6667 = !DILocation(line: 1536, column: 45, scope: !6597)
!6668 = !DILocation(line: 1536, column: 50, scope: !6597)
!6669 = !DILocation(line: 1536, column: 4, scope: !6597)
!6670 = distinct !{!6670, !6660, !6671}
!6671 = !DILocation(line: 1537, column: 52, scope: !6598)
!6672 = !DILocation(line: 1538, column: 35, scope: !6599)
!6673 = !DILocation(line: 1538, column: 47, scope: !6599)
!6674 = !DILocation(line: 1538, column: 19, scope: !6599)
!6675 = !DILocation(line: 1538, column: 32, scope: !6599)
!6676 = !DILocation(line: 1548, column: 4, scope: !6599)
!6677 = !DILocation(line: 1549, column: 9, scope: !6605)
!6678 = !DILocation(line: 0, scope: !6605)
!6679 = !DILocation(line: 1547, column: 15, scope: !6599)
!6680 = !DILocation(line: 1549, column: 23, scope: !6604)
!6681 = !DILocation(line: 1549, column: 18, scope: !6604)
!6682 = !DILocation(line: 1549, column: 4, scope: !6605)
!6683 = !DILocation(line: 1551, column: 19, scope: !6603)
!6684 = !DILocation(line: 1551, column: 16, scope: !6603)
!6685 = !DILocation(line: 1551, column: 36, scope: !6603)
!6686 = !DILocation(line: 1552, column: 8, scope: !6602)
!6687 = !DILocation(line: 1552, column: 8, scope: !6607)
!6688 = !DILocation(line: 1554, column: 10, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 1554, column: 9)
!6690 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 1553, column: 3)
!6691 = !DILocation(line: 1554, column: 9, scope: !6690)
!6692 = !DILocation(line: 0, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1556, column: 9)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1556, column: 9)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1555, column: 7)
!6696 = !DILocation(line: 0, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1557, column: 8)
!6698 = !DILocation(line: 1556, column: 9, scope: !6694)
!6699 = !DILocation(line: 0, scope: !6694)
!6700 = !DILocation(line: 1556, column: 23, scope: !6693)
!6701 = !DILocation(line: 1557, column: 13, scope: !6697)
!6702 = !DILocation(line: 1557, column: 10, scope: !6697)
!6703 = !DILocation(line: 1557, column: 8, scope: !6693)
!6704 = !DILocation(line: 1556, column: 41, scope: !6693)
!6705 = !DILocation(line: 1556, column: 9, scope: !6693)
!6706 = distinct !{!6706, !6698, !6707}
!6707 = !DILocation(line: 1558, column: 6, scope: !6694)
!6708 = !DILocation(line: 1560, column: 13, scope: !6695)
!6709 = !DILocation(line: 1562, column: 6, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1561, column: 4)
!6711 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1560, column: 13)
!6712 = !DILocation(line: 1562, column: 28, scope: !6710)
!6713 = !DILocation(line: 1562, column: 32, scope: !6710)
!6714 = !DILocation(line: 1563, column: 24, scope: !6710)
!6715 = !DILocation(line: 1563, column: 27, scope: !6710)
!6716 = !DILocation(line: 1563, column: 33, scope: !6710)
!6717 = !DILocation(line: 1563, column: 6, scope: !6710)
!6718 = !DILocation(line: 1564, column: 16, scope: !6710)
!6719 = !DILocation(line: 1565, column: 4, scope: !6710)
!6720 = !DILocation(line: 0, scope: !6599)
!6721 = distinct !{!6721, !6686, !6722}
!6722 = !DILocation(line: 1567, column: 3, scope: !6602)
!6723 = !DILocation(line: 1549, column: 36, scope: !6604)
!6724 = !DILocation(line: 1549, column: 4, scope: !6604)
!6725 = distinct !{!6725, !6682, !6726}
!6726 = !DILocation(line: 1568, column: 6, scope: !6605)
!6727 = !DILocation(line: 1569, column: 19, scope: !6599)
!6728 = !DILocation(line: 1569, column: 30, scope: !6599)
!6729 = !DILocation(line: 1572, column: 4, scope: !6599)
!6730 = !DILocation(line: 1576, column: 46, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1575, column: 2)
!6732 = !DILocation(line: 1576, column: 57, scope: !6731)
!6733 = !DILocation(line: 1576, column: 18, scope: !6731)
!6734 = !DILocation(line: 1576, column: 29, scope: !6731)
!6735 = !DILocation(line: 1578, column: 8, scope: !6731)
!6736 = !DILocation(line: 1578, column: 23, scope: !6731)
!6737 = !DILocation(line: 1579, column: 8, scope: !6731)
!6738 = !DILocation(line: 1579, column: 17, scope: !6731)
!6739 = !DILocation(line: 1508, column: 3, scope: !6560)
!6740 = distinct !{!6740, !6612, !6741}
!6741 = !DILocation(line: 1581, column: 5, scope: !6561)
!6742 = !DILocation(line: 1583, column: 3, scope: !6538)
!6743 = !DILocation(line: 1584, column: 1, scope: !6538)
!6744 = distinct !DISubprogram(name: "split_edges", scope: !3, file: !3, line: 1462, type: !6745, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6748)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{null, !765, !765, !6747}
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6748 = !{!6749, !6750, !6751, !6752}
!6749 = !DILocalVariable(name: "bb_src", arg: 1, scope: !6744, file: !3, line: 1462, type: !765)
!6750 = !DILocalVariable(name: "bb_trg", arg: 2, scope: !6744, file: !3, line: 1462, type: !765)
!6751 = !DILocalVariable(name: "bl", arg: 3, scope: !6744, file: !3, line: 1462, type: !6747)
!6752 = !DILocalVariable(name: "src", scope: !6744, file: !3, line: 1464, type: !2032)
!6753 = !DILocation(line: 0, scope: !6744)
!6754 = !DILocation(line: 1464, column: 32, scope: !6744)
!6755 = !DILocation(line: 1464, column: 51, scope: !6744)
!6756 = !DILocation(line: 1464, column: 17, scope: !6744)
!6757 = !DILocation(line: 1465, column: 22, scope: !6744)
!6758 = !DILocation(line: 1465, column: 3, scope: !6744)
!6759 = !DILocation(line: 1467, column: 33, scope: !6744)
!6760 = !DILocation(line: 1467, column: 3, scope: !6744)
!6761 = !DILocation(line: 1468, column: 3, scope: !6744)
!6762 = !DILocation(line: 1469, column: 3, scope: !6744)
!6763 = !DILocation(line: 1470, column: 1, scope: !6744)
!6764 = distinct !DISubprogram(name: "extract_edgelst", scope: !3, file: !3, line: 334, type: !6765, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6767)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !2032, !6747}
!6767 = !{!6768, !6769, !6770, !6771}
!6768 = !DILocalVariable(name: "set", arg: 1, scope: !6764, file: !3, line: 334, type: !2032)
!6769 = !DILocalVariable(name: "el", arg: 2, scope: !6764, file: !3, line: 334, type: !6747)
!6770 = !DILocalVariable(name: "i", scope: !6764, file: !3, line: 336, type: !7)
!6771 = !DILocalVariable(name: "sbi", scope: !6764, file: !3, line: 337, type: !6772)
!6772 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap_iterator", file: !2033, line: 111, baseType: !6773)
!6773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2033, line: 96, size: 256, elements: !6774)
!6774 = !{!6775, !6778, !6779, !6780, !6781}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6773, file: !2033, line: 98, baseType: !6776, size: 64)
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64)
!6777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6773, file: !2033, line: 101, baseType: !7, size: 32, offset: 64)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "word_num", scope: !6773, file: !2033, line: 104, baseType: !7, size: 32, offset: 96)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !6773, file: !2033, line: 107, baseType: !7, size: 32, offset: 128)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !6773, file: !2033, line: 110, baseType: !847, size: 64, offset: 192)
!6782 = !DILocation(line: 0, scope: !6764)
!6783 = !DILocation(line: 336, column: 3, scope: !6764)
!6784 = !DILocation(line: 336, column: 16, scope: !6764)
!6785 = !DILocation(line: 337, column: 3, scope: !6764)
!6786 = !DILocation(line: 340, column: 16, scope: !6764)
!6787 = !DILocation(line: 342, column: 23, scope: !6764)
!6788 = !DILocation(line: 342, column: 20, scope: !6764)
!6789 = !DILocation(line: 343, column: 7, scope: !6764)
!6790 = !DILocation(line: 343, column: 18, scope: !6764)
!6791 = !DILocation(line: 346, column: 3, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 346, column: 3)
!6793 = !DILocation(line: 346, column: 3, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 346, column: 3)
!6795 = !DILocation(line: 348, column: 39, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 347, column: 5)
!6797 = !DILocation(line: 348, column: 49, scope: !6796)
!6798 = !DILocation(line: 348, column: 7, scope: !6796)
!6799 = !DILocation(line: 348, column: 33, scope: !6796)
!6800 = !DILocation(line: 348, column: 37, scope: !6796)
!6801 = !DILocation(line: 349, column: 21, scope: !6796)
!6802 = distinct !{!6802, !6791, !6803}
!6803 = !DILocation(line: 350, column: 5, scope: !6792)
!6804 = !DILocation(line: 351, column: 1, scope: !6764)
!6805 = distinct !DISubprogram(name: "sbitmap_iter_init", scope: !2033, file: !2033, line: 117, type: !6806, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6812)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{null, !6808, !6809, !7}
!6808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6809 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_sbitmap", file: !2033, line: 46, baseType: !6810)
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6811, size: 64)
!6811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2035)
!6812 = !{!6813, !6814, !6815}
!6813 = !DILocalVariable(name: "i", arg: 1, scope: !6805, file: !2033, line: 117, type: !6808)
!6814 = !DILocalVariable(name: "bmp", arg: 2, scope: !6805, file: !2033, line: 117, type: !6809)
!6815 = !DILocalVariable(name: "min", arg: 3, scope: !6805, file: !2033, line: 117, type: !7)
!6816 = !DILocation(line: 0, scope: !6805)
!6817 = !DILocation(line: 119, column: 6, scope: !6805)
!6818 = !DILocation(line: 119, column: 15, scope: !6805)
!6819 = !DILocation(line: 120, column: 6, scope: !6805)
!6820 = !DILocation(line: 120, column: 14, scope: !6805)
!6821 = !DILocation(line: 121, column: 18, scope: !6805)
!6822 = !DILocation(line: 121, column: 6, scope: !6805)
!6823 = !DILocation(line: 121, column: 11, scope: !6805)
!6824 = !DILocation(line: 122, column: 12, scope: !6805)
!6825 = !DILocation(line: 122, column: 6, scope: !6805)
!6826 = !DILocation(line: 122, column: 10, scope: !6805)
!6827 = !DILocation(line: 124, column: 19, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6805, file: !2033, line: 124, column: 7)
!6829 = !DILocation(line: 124, column: 7, scope: !6805)
!6830 = !DILocation(line: 125, column: 8, scope: !6828)
!6831 = !DILocation(line: 125, column: 13, scope: !6828)
!6832 = !DILocation(line: 125, column: 5, scope: !6828)
!6833 = !DILocation(line: 127, column: 16, scope: !6828)
!6834 = !DILocation(line: 127, column: 8, scope: !6828)
!6835 = !DILocation(line: 127, column: 13, scope: !6828)
!6836 = !DILocation(line: 129, column: 1, scope: !6805)
!6837 = distinct !DISubprogram(name: "sbitmap_iter_cond", scope: !2033, file: !2033, line: 136, type: !6838, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6840)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{!764, !6808, !3596}
!6840 = !{!6841, !6842}
!6841 = !DILocalVariable(name: "i", arg: 1, scope: !6837, file: !2033, line: 136, type: !6808)
!6842 = !DILocalVariable(name: "n", arg: 2, scope: !6837, file: !2033, line: 136, type: !3596)
!6843 = !DILocation(line: 0, scope: !6837)
!6844 = !DILocation(line: 0, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !2033, line: 139, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6837, file: !2033, line: 139, column: 3)
!6847 = !DILocation(line: 0, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6845, file: !2033, line: 140, column: 5)
!6849 = !DILocation(line: 0, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6848, file: !2033, line: 144, column: 11)
!6851 = !DILocation(line: 139, column: 13, scope: !6845)
!6852 = !DILocation(line: 139, column: 3, scope: !6837)
!6853 = !DILocation(line: 139, column: 18, scope: !6845)
!6854 = !DILocation(line: 139, column: 3, scope: !6846)
!6855 = !DILocation(line: 151, column: 3, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6837, file: !2033, line: 151, column: 3)
!6857 = !DILocation(line: 141, column: 18, scope: !6848)
!6858 = !DILocation(line: 144, column: 29, scope: !6850)
!6859 = !DILocation(line: 144, column: 23, scope: !6850)
!6860 = !DILocation(line: 144, column: 11, scope: !6848)
!6861 = !DILocation(line: 147, column: 32, scope: !6848)
!6862 = !DILocation(line: 147, column: 18, scope: !6848)
!6863 = !DILocation(line: 139, column: 37, scope: !6845)
!6864 = !DILocation(line: 139, column: 34, scope: !6845)
!6865 = !DILocation(line: 139, column: 32, scope: !6845)
!6866 = !DILocation(line: 139, column: 3, scope: !6845)
!6867 = distinct !{!6867, !6854, !6868}
!6868 = !DILocation(line: 148, column: 5, scope: !6846)
!6869 = !DILocation(line: 151, column: 14, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6856, file: !2033, line: 151, column: 3)
!6871 = !DILocation(line: 151, column: 19, scope: !6870)
!6872 = !DILocation(line: 151, column: 24, scope: !6870)
!6873 = !DILocation(line: 152, column: 15, scope: !6870)
!6874 = !DILocation(line: 151, column: 38, scope: !6870)
!6875 = !DILocation(line: 151, column: 3, scope: !6870)
!6876 = distinct !{!6876, !6855, !6877}
!6877 = !DILocation(line: 152, column: 15, scope: !6856)
!6878 = !DILocation(line: 154, column: 6, scope: !6837)
!6879 = !DILocation(line: 156, column: 3, scope: !6837)
!6880 = !DILocation(line: 157, column: 1, scope: !6837)
!6881 = distinct !DISubprogram(name: "sbitmap_iter_next", scope: !2033, file: !2033, line: 162, type: !6882, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6884)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{null, !6808}
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "i", arg: 1, scope: !6881, file: !2033, line: 162, type: !6808)
!6886 = !DILocation(line: 0, scope: !6881)
!6887 = !DILocation(line: 164, column: 6, scope: !6881)
!6888 = !DILocation(line: 164, column: 11, scope: !6881)
!6889 = !DILocation(line: 165, column: 6, scope: !6881)
!6890 = !DILocation(line: 165, column: 13, scope: !6881)
!6891 = !DILocation(line: 166, column: 1, scope: !6881)
!6892 = distinct !DISubprogram(name: "check_live", scope: !3, file: !3, line: 1801, type: !6893, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6895)
!6893 = !DISubroutineType(types: !6894)
!6894 = !{!765, !777, !765}
!6895 = !{!6896, !6897, !6898}
!6896 = !DILocalVariable(name: "insn", arg: 1, scope: !6892, file: !3, line: 1801, type: !777)
!6897 = !DILocalVariable(name: "src", arg: 2, scope: !6892, file: !3, line: 1801, type: !765)
!6898 = !DILocalVariable(name: "j", scope: !6899, file: !3, line: 1809, type: !765)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1808, column: 5)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1807, column: 12)
!6901 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 1804, column: 7)
!6902 = !DILocation(line: 0, scope: !6892)
!6903 = !DILocation(line: 1804, column: 7, scope: !6901)
!6904 = !DILocation(line: 1804, column: 33, scope: !6901)
!6905 = !DILocation(line: 1805, column: 7, scope: !6901)
!6906 = !DILocation(line: 1805, column: 36, scope: !6901)
!6907 = !DILocation(line: 1804, column: 7, scope: !6892)
!6908 = !DILocation(line: 1806, column: 12, scope: !6901)
!6909 = !DILocation(line: 1806, column: 5, scope: !6901)
!6910 = !DILocation(line: 1807, column: 38, scope: !6900)
!6911 = !DILocation(line: 1807, column: 12, scope: !6901)
!6912 = !DILocation(line: 1810, column: 16, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 1810, column: 7)
!6914 = !DILocation(line: 0, scope: !6899)
!6915 = !DILocation(line: 1810, column: 12, scope: !6913)
!6916 = !DILocation(line: 0, scope: !6913)
!6917 = !DILocation(line: 1810, column: 51, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1810, column: 7)
!6919 = !DILocation(line: 1810, column: 7, scope: !6913)
!6920 = !DILocation(line: 1811, column: 7, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 1811, column: 6)
!6922 = !DILocation(line: 1811, column: 49, scope: !6921)
!6923 = !DILocation(line: 1812, column: 7, scope: !6921)
!6924 = !DILocation(line: 1812, column: 52, scope: !6921)
!6925 = !DILocation(line: 1813, column: 6, scope: !6921)
!6926 = !DILocation(line: 1813, column: 10, scope: !6921)
!6927 = !DILocation(line: 1811, column: 6, scope: !6918)
!6928 = !DILocation(line: 1810, column: 7, scope: !6918)
!6929 = distinct !{!6929, !6919, !6930}
!6930 = !DILocation(line: 1814, column: 11, scope: !6913)
!6931 = !DILocation(line: 1820, column: 1, scope: !6892)
!6932 = distinct !DISubprogram(name: "check_live_1", scope: !3, file: !3, line: 1653, type: !6933, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6935)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!765, !765, !777}
!6935 = !{!6936, !6937, !6938, !6939, !6940, !6941, !6944, !6949, !6954, !6955, !6960}
!6936 = !DILocalVariable(name: "src", arg: 1, scope: !6932, file: !3, line: 1653, type: !765)
!6937 = !DILocalVariable(name: "x", arg: 2, scope: !6932, file: !3, line: 1653, type: !777)
!6938 = !DILocalVariable(name: "i", scope: !6932, file: !3, line: 1655, type: !765)
!6939 = !DILocalVariable(name: "regno", scope: !6932, file: !3, line: 1656, type: !765)
!6940 = !DILocalVariable(name: "reg", scope: !6932, file: !3, line: 1657, type: !777)
!6941 = !DILocalVariable(name: "i", scope: !6942, file: !3, line: 1669, type: !765)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 1668, column: 5)
!6943 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1667, column: 7)
!6944 = !DILocalVariable(name: "j", scope: !6945, file: !3, line: 1694, type: !765)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1692, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1691, column: 11)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 1690, column: 5)
!6948 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1684, column: 7)
!6949 = !DILocalVariable(name: "b", scope: !6950, file: !3, line: 1699, type: !1311)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 1698, column: 3)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 1697, column: 8)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 1697, column: 8)
!6953 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1696, column: 6)
!6954 = !DILocalVariable(name: "t", scope: !6950, file: !3, line: 1700, type: !765)
!6955 = !DILocalVariable(name: "b", scope: !6956, file: !3, line: 1717, type: !1311)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 1716, column: 6)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 1715, column: 4)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1715, column: 4)
!6959 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1713, column: 2)
!6960 = !DILocalVariable(name: "t", scope: !6956, file: !3, line: 1718, type: !765)
!6961 = !DILocation(line: 0, scope: !6932)
!6962 = !DILocation(line: 1657, column: 13, scope: !6932)
!6963 = !DILocation(line: 1659, column: 11, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1659, column: 7)
!6965 = !DILocation(line: 1659, column: 7, scope: !6932)
!6966 = !DILocation(line: 1662, column: 3, scope: !6932)
!6967 = !DILocation(line: 1662, column: 10, scope: !6932)
!6968 = !DILocation(line: 1662, column: 25, scope: !6932)
!6969 = !DILocation(line: 1663, column: 3, scope: !6932)
!6970 = !DILocation(line: 1663, column: 21, scope: !6932)
!6971 = !DILocation(line: 1664, column: 21, scope: !6932)
!6972 = !DILocation(line: 1664, column: 3, scope: !6932)
!6973 = !DILocation(line: 1665, column: 11, scope: !6932)
!6974 = distinct !{!6974, !6966, !6973}
!6975 = !DILocation(line: 1667, column: 22, scope: !6943)
!6976 = !DILocation(line: 1667, column: 7, scope: !6932)
!6977 = !DILocation(line: 1671, column: 16, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 1671, column: 7)
!6979 = !DILocation(line: 0, scope: !6942)
!6980 = !DILocation(line: 1671, column: 12, scope: !6978)
!6981 = !DILocation(line: 0, scope: !6978)
!6982 = !DILocation(line: 1671, column: 40, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 1671, column: 7)
!6984 = !DILocation(line: 1671, column: 7, scope: !6978)
!6985 = !DILocation(line: 1672, column: 6, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 1672, column: 6)
!6987 = !DILocation(line: 1672, column: 36, scope: !6986)
!6988 = !DILocation(line: 1672, column: 6, scope: !6983)
!6989 = !DILocation(line: 1673, column: 8, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1673, column: 8)
!6991 = !DILocation(line: 1673, column: 8, scope: !6986)
!6992 = !DILocation(line: 1671, column: 7, scope: !6983)
!6993 = distinct !{!6993, !6984, !6994}
!6994 = !DILocation(line: 1674, column: 13, scope: !6978)
!6995 = !DILocation(line: 1679, column: 8, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1679, column: 7)
!6997 = !DILocation(line: 1679, column: 7, scope: !6932)
!6998 = !DILocation(line: 1682, column: 11, scope: !6932)
!6999 = !DILocation(line: 1684, column: 13, scope: !6948)
!7000 = !DILocation(line: 1684, column: 37, scope: !6948)
!7001 = !DILocation(line: 1684, column: 40, scope: !6948)
!7002 = !DILocation(line: 1684, column: 7, scope: !6932)
!7003 = !DILocation(line: 1691, column: 11, scope: !6947)
!7004 = !DILocation(line: 0, scope: !6957)
!7005 = !DILocation(line: 1715, column: 4, scope: !6958)
!7006 = !DILocation(line: 1694, column: 12, scope: !6945)
!7007 = !DILocation(line: 1694, column: 36, scope: !6945)
!7008 = !DILocation(line: 0, scope: !6945)
!7009 = !DILocation(line: 0, scope: !6951)
!7010 = !DILocation(line: 1695, column: 4, scope: !6945)
!7011 = !DILocation(line: 1695, column: 11, scope: !6945)
!7012 = !DILocation(line: 1695, column: 15, scope: !6945)
!7013 = !DILocation(line: 0, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 1707, column: 9)
!7015 = !DILocation(line: 1697, column: 8, scope: !6952)
!7016 = !DILocation(line: 0, scope: !6952)
!7017 = !DILocation(line: 1697, column: 24, scope: !6951)
!7018 = !DILocation(line: 1697, column: 55, scope: !6951)
!7019 = !DILocation(line: 1697, column: 22, scope: !6951)
!7020 = distinct !{!7020, !7010, !7021}
!7021 = !DILocation(line: 1710, column: 6, scope: !6945)
!7022 = !DILocation(line: 1699, column: 52, scope: !6950)
!7023 = !DILocation(line: 1699, column: 21, scope: !6950)
!7024 = !DILocation(line: 0, scope: !6950)
!7025 = !DILocation(line: 1700, column: 42, scope: !6950)
!7026 = !DILocation(line: 1700, column: 13, scope: !6950)
!7027 = !DILocation(line: 1704, column: 5, scope: !6950)
!7028 = !DILocation(line: 1707, column: 11, scope: !7014)
!7029 = !DILocation(line: 1707, column: 14, scope: !7014)
!7030 = !DILocation(line: 1707, column: 9, scope: !6950)
!7031 = !DILocation(line: 1697, column: 68, scope: !6951)
!7032 = !DILocation(line: 1697, column: 8, scope: !6951)
!7033 = distinct !{!7033, !7015, !7034}
!7034 = !DILocation(line: 1709, column: 3, scope: !6952)
!7035 = !DILocation(line: 0, scope: !6958)
!7036 = !DILocation(line: 1715, column: 20, scope: !6957)
!7037 = !DILocation(line: 1715, column: 51, scope: !6957)
!7038 = !DILocation(line: 1715, column: 18, scope: !6957)
!7039 = !DILocation(line: 1717, column: 55, scope: !6956)
!7040 = !DILocation(line: 1717, column: 24, scope: !6956)
!7041 = !DILocation(line: 0, scope: !6956)
!7042 = !DILocation(line: 1718, column: 45, scope: !6956)
!7043 = !DILocation(line: 1718, column: 16, scope: !6956)
!7044 = !DILocation(line: 1720, column: 8, scope: !6956)
!7045 = !DILocation(line: 1723, column: 14, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1723, column: 12)
!7047 = !DILocation(line: 1723, column: 17, scope: !7046)
!7048 = !DILocation(line: 1723, column: 12, scope: !6956)
!7049 = !DILocation(line: 1715, column: 64, scope: !6957)
!7050 = !DILocation(line: 1715, column: 4, scope: !6957)
!7051 = distinct !{!7051, !7005, !7052}
!7052 = !DILocation(line: 1725, column: 6, scope: !6958)
!7053 = !DILocation(line: 1729, column: 3, scope: !6932)
!7054 = !DILocation(line: 1730, column: 1, scope: !6932)
!7055 = distinct !DISubprogram(name: "is_exception_free", scope: !3, file: !3, line: 2026, type: !7056, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!765, !777, !765, !765}
!7058 = !{!7059, !7060, !7061, !7062}
!7059 = !DILocalVariable(name: "insn", arg: 1, scope: !7055, file: !3, line: 2026, type: !777)
!7060 = !DILocalVariable(name: "bb_src", arg: 2, scope: !7055, file: !3, line: 2026, type: !765)
!7061 = !DILocalVariable(name: "bb_trg", arg: 3, scope: !7055, file: !3, line: 2026, type: !765)
!7062 = !DILocalVariable(name: "insn_class", scope: !7055, file: !3, line: 2028, type: !765)
!7063 = !DILocation(line: 0, scope: !7055)
!7064 = !DILocation(line: 2028, column: 20, scope: !7055)
!7065 = !DILocation(line: 2031, column: 3, scope: !7055)
!7066 = !DILocation(line: 2036, column: 7, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2032, column: 5)
!7068 = !DILocation(line: 2041, column: 8, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2041, column: 7)
!7070 = !DILocation(line: 2041, column: 7, scope: !7055)
!7071 = !DILocation(line: 2043, column: 3, scope: !7055)
!7072 = !DILocation(line: 2043, column: 23, scope: !7055)
!7073 = !DILocation(line: 2044, column: 3, scope: !7055)
!7074 = !DILocation(line: 2049, column: 7, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2045, column: 5)
!7076 = !DILocation(line: 2051, column: 11, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2051, column: 11)
!7078 = !DILocation(line: 2051, column: 11, scope: !7075)
!7079 = !DILocation(line: 2055, column: 12, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2055, column: 11)
!7081 = !DILocation(line: 2056, column: 4, scope: !7080)
!7082 = !DILocation(line: 2056, column: 7, scope: !7080)
!7083 = !DILocation(line: 2055, column: 11, scope: !7075)
!7084 = !DILocation(line: 2062, column: 10, scope: !7055)
!7085 = !DILocation(line: 2062, column: 3, scope: !7055)
!7086 = !DILocation(line: 2063, column: 1, scope: !7055)
!7087 = distinct !DISubprogram(name: "is_pfree", scope: !3, file: !3, line: 1954, type: !7056, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7088)
!7088 = !{!7089, !7090, !7091, !7092, !7093, !7094, !7095, !7099, !7102, !7103}
!7089 = !DILocalVariable(name: "load_insn", arg: 1, scope: !7087, file: !3, line: 1954, type: !777)
!7090 = !DILocalVariable(name: "bb_src", arg: 2, scope: !7087, file: !3, line: 1954, type: !765)
!7091 = !DILocalVariable(name: "bb_trg", arg: 3, scope: !7087, file: !3, line: 1954, type: !765)
!7092 = !DILocalVariable(name: "back_sd_it", scope: !7087, file: !3, line: 1956, type: !2176)
!7093 = !DILocalVariable(name: "back_dep", scope: !7087, file: !3, line: 1957, type: !3798)
!7094 = !DILocalVariable(name: "candp", scope: !7087, file: !3, line: 1958, type: !1959)
!7095 = !DILocalVariable(name: "insn1", scope: !7096, file: !3, line: 1966, type: !777)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1965, column: 5)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 1964, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1964, column: 3)
!7099 = !DILocalVariable(name: "fore_sd_it", scope: !7100, file: !3, line: 1971, type: !2176)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 1970, column: 2)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 1968, column: 11)
!7102 = !DILocalVariable(name: "fore_dep", scope: !7100, file: !3, line: 1972, type: !3798)
!7103 = !DILocalVariable(name: "insn2", scope: !7104, file: !3, line: 1976, type: !777)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 1975, column: 6)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 1974, column: 4)
!7106 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 1974, column: 4)
!7107 = !DILocation(line: 0, scope: !7087)
!7108 = !DILocation(line: 1956, column: 3, scope: !7087)
!7109 = !DILocation(line: 1957, column: 3, scope: !7087)
!7110 = !DILocation(line: 1958, column: 22, scope: !7087)
!7111 = !DILocation(line: 1958, column: 38, scope: !7087)
!7112 = !DILocation(line: 1960, column: 24, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1960, column: 7)
!7114 = !DILocation(line: 1960, column: 35, scope: !7113)
!7115 = !DILocation(line: 1960, column: 7, scope: !7087)
!7116 = !DILocation(line: 1964, column: 3, scope: !7098)
!7117 = !DILocation(line: 0, scope: !7100)
!7118 = !DILocation(line: 0, scope: !7106)
!7119 = !DILocation(line: 0, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1989, column: 9)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 1979, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 1978, column: 12)
!7123 = !DILocation(line: 1964, column: 3, scope: !7097)
!7124 = !DILocation(line: 0, scope: !7096)
!7125 = !DILocation(line: 1968, column: 11, scope: !7101)
!7126 = !DILocation(line: 1968, column: 31, scope: !7101)
!7127 = !DILocation(line: 1968, column: 11, scope: !7096)
!7128 = !DILocation(line: 1966, column: 19, scope: !7096)
!7129 = !DILocation(line: 1971, column: 4, scope: !7100)
!7130 = !DILocation(line: 1972, column: 4, scope: !7100)
!7131 = !DILocation(line: 1974, column: 4, scope: !7106)
!7132 = !DILocation(line: 1974, column: 4, scope: !7105)
!7133 = !DILocation(line: 1976, column: 20, scope: !7104)
!7134 = !DILocation(line: 0, scope: !7104)
!7135 = !DILocation(line: 1978, column: 12, scope: !7122)
!7136 = !DILocation(line: 1978, column: 32, scope: !7122)
!7137 = !DILocation(line: 1978, column: 12, scope: !7104)
!7138 = !DILocation(line: 1981, column: 9, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1981, column: 9)
!7140 = !DILocation(line: 1981, column: 37, scope: !7139)
!7141 = !DILocation(line: 1981, column: 9, scope: !7121)
!7142 = !DILocation(line: 1985, column: 9, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1985, column: 9)
!7144 = !DILocation(line: 1985, column: 25, scope: !7143)
!7145 = !DILocation(line: 1985, column: 9, scope: !7121)
!7146 = !DILocation(line: 1989, column: 28, scope: !7120)
!7147 = !DILocation(line: 1989, column: 9, scope: !7120)
!7148 = !DILocation(line: 1989, column: 42, scope: !7120)
!7149 = !DILocation(line: 1989, column: 9, scope: !7121)
!7150 = !DILocation(line: 1993, column: 6, scope: !7105)
!7151 = distinct !{!7151, !7131, !7152}
!7152 = !DILocation(line: 1993, column: 6, scope: !7106)
!7153 = !DILocation(line: 1994, column: 2, scope: !7101)
!7154 = !DILocation(line: 1995, column: 5, scope: !7097)
!7155 = distinct !{!7155, !7116, !7156}
!7156 = !DILocation(line: 1995, column: 5, scope: !7098)
!7157 = !DILocation(line: 1999, column: 1, scope: !7087)
!7158 = distinct !DISubprogram(name: "is_prisky", scope: !3, file: !3, line: 2006, type: !7056, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7159)
!7159 = !{!7160, !7161, !7162}
!7160 = !DILocalVariable(name: "load_insn", arg: 1, scope: !7158, file: !3, line: 2006, type: !777)
!7161 = !DILocalVariable(name: "bb_src", arg: 2, scope: !7158, file: !3, line: 2006, type: !765)
!7162 = !DILocalVariable(name: "bb_trg", arg: 3, scope: !7158, file: !3, line: 2006, type: !765)
!7163 = !DILocation(line: 0, scope: !7158)
!7164 = !DILocation(line: 2008, column: 7, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 2008, column: 7)
!7166 = !DILocation(line: 2008, column: 7, scope: !7158)
!7167 = !DILocation(line: 2011, column: 7, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 2011, column: 7)
!7169 = !DILocation(line: 2011, column: 7, scope: !7158)
!7170 = !DILocation(line: 2015, column: 7, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 2015, column: 7)
!7172 = !DILocation(line: 2019, column: 1, scope: !7158)
!7173 = distinct !DISubprogram(name: "is_conditionally_protected", scope: !3, file: !3, line: 1903, type: !7056, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7174)
!7174 = !{!7175, !7176, !7177, !7178, !7179, !7180}
!7175 = !DILocalVariable(name: "load_insn", arg: 1, scope: !7173, file: !3, line: 1903, type: !777)
!7176 = !DILocalVariable(name: "bb_src", arg: 2, scope: !7173, file: !3, line: 1903, type: !765)
!7177 = !DILocalVariable(name: "bb_trg", arg: 3, scope: !7173, file: !3, line: 1903, type: !765)
!7178 = !DILocalVariable(name: "sd_it", scope: !7173, file: !3, line: 1905, type: !2176)
!7179 = !DILocalVariable(name: "dep", scope: !7173, file: !3, line: 1906, type: !3798)
!7180 = !DILocalVariable(name: "insn1", scope: !7181, file: !3, line: 1910, type: !777)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1909, column: 5)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 1908, column: 3)
!7183 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 1908, column: 3)
!7184 = !DILocation(line: 0, scope: !7173)
!7185 = !DILocation(line: 1905, column: 3, scope: !7173)
!7186 = !DILocation(line: 1906, column: 3, scope: !7173)
!7187 = !DILocation(line: 1908, column: 3, scope: !7183)
!7188 = !DILocation(line: 0, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1918, column: 11)
!7190 = !DILocation(line: 1908, column: 3, scope: !7182)
!7191 = !DILocation(line: 1910, column: 19, scope: !7181)
!7192 = !DILocation(line: 0, scope: !7181)
!7193 = !DILocation(line: 1913, column: 11, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1913, column: 11)
!7195 = !DILocation(line: 1913, column: 26, scope: !7194)
!7196 = !DILocation(line: 1914, column: 4, scope: !7194)
!7197 = !DILocation(line: 1914, column: 7, scope: !7194)
!7198 = !DILocation(line: 1913, column: 11, scope: !7181)
!7199 = !DILocation(line: 1918, column: 11, scope: !7189)
!7200 = !DILocation(line: 1918, column: 27, scope: !7189)
!7201 = !DILocation(line: 1919, column: 4, scope: !7189)
!7202 = !DILocation(line: 1919, column: 8, scope: !7189)
!7203 = !DILocation(line: 1920, column: 11, scope: !7189)
!7204 = !DILocation(line: 1920, column: 8, scope: !7189)
!7205 = !DILocation(line: 1921, column: 4, scope: !7189)
!7206 = !DILocation(line: 1921, column: 9, scope: !7189)
!7207 = !DILocation(line: 1922, column: 8, scope: !7189)
!7208 = !DILocation(line: 1922, column: 12, scope: !7189)
!7209 = !DILocation(line: 1918, column: 11, scope: !7181)
!7210 = !DILocation(line: 1926, column: 11, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1926, column: 11)
!7212 = !DILocation(line: 1926, column: 11, scope: !7181)
!7213 = !DILocation(line: 1930, column: 14, scope: !7181)
!7214 = !DILocation(line: 1930, column: 7, scope: !7181)
!7215 = distinct !{!7215, !7187, !7216}
!7216 = !DILocation(line: 1931, column: 5, scope: !7183)
!7217 = !DILocation(line: 1935, column: 1, scope: !7173)
!7218 = distinct !DISubprogram(name: "find_conditional_protection", scope: !3, file: !3, line: 1866, type: !6893, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7219)
!7219 = !{!7220, !7221, !7222, !7223, !7224}
!7220 = !DILocalVariable(name: "insn", arg: 1, scope: !7218, file: !3, line: 1866, type: !777)
!7221 = !DILocalVariable(name: "load_insn_bb", arg: 2, scope: !7218, file: !3, line: 1866, type: !765)
!7222 = !DILocalVariable(name: "sd_it", scope: !7218, file: !3, line: 1868, type: !2176)
!7223 = !DILocalVariable(name: "dep", scope: !7218, file: !3, line: 1869, type: !3798)
!7224 = !DILocalVariable(name: "next", scope: !7225, file: !3, line: 1874, type: !777)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 1873, column: 5)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 1872, column: 3)
!7227 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1872, column: 3)
!7228 = !DILocation(line: 0, scope: !7218)
!7229 = !DILocation(line: 1868, column: 3, scope: !7218)
!7230 = !DILocation(line: 1869, column: 3, scope: !7218)
!7231 = !DILocation(line: 1872, column: 3, scope: !7227)
!7232 = !DILocation(line: 0, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 1876, column: 11)
!7234 = !DILocation(line: 1872, column: 3, scope: !7226)
!7235 = !DILocation(line: 1874, column: 18, scope: !7225)
!7236 = !DILocation(line: 0, scope: !7225)
!7237 = !DILocation(line: 1876, column: 12, scope: !7233)
!7238 = !DILocation(line: 1877, column: 5, scope: !7233)
!7239 = !DILocation(line: 1876, column: 46, scope: !7233)
!7240 = !DILocation(line: 1878, column: 4, scope: !7233)
!7241 = !DILocation(line: 1878, column: 7, scope: !7233)
!7242 = !DILocation(line: 1879, column: 4, scope: !7233)
!7243 = !DILocation(line: 1879, column: 23, scope: !7233)
!7244 = !DILocation(line: 1879, column: 20, scope: !7233)
!7245 = !DILocation(line: 1880, column: 4, scope: !7233)
!7246 = !DILocation(line: 1880, column: 7, scope: !7233)
!7247 = !DILocation(line: 1880, column: 22, scope: !7233)
!7248 = !DILocation(line: 1881, column: 4, scope: !7233)
!7249 = !DILocation(line: 1881, column: 8, scope: !7233)
!7250 = !DILocation(line: 1882, column: 8, scope: !7233)
!7251 = !DILocation(line: 1882, column: 11, scope: !7233)
!7252 = !DILocation(line: 1876, column: 11, scope: !7225)
!7253 = !DILocation(line: 1884, column: 5, scope: !7226)
!7254 = distinct !{!7254, !7231, !7255}
!7255 = !DILocation(line: 1884, column: 5, scope: !7227)
!7256 = !DILocation(line: 1886, column: 1, scope: !7218)
!7257 = distinct !DISubprogram(name: "update_live", scope: !3, file: !3, line: 1826, type: !2154, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7258)
!7258 = !{!7259, !7260, !7261}
!7259 = !DILocalVariable(name: "insn", arg: 1, scope: !7257, file: !3, line: 1826, type: !777)
!7260 = !DILocalVariable(name: "src", arg: 2, scope: !7257, file: !3, line: 1826, type: !765)
!7261 = !DILocalVariable(name: "j", scope: !7262, file: !3, line: 1834, type: !765)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 1833, column: 5)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 1832, column: 12)
!7264 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1829, column: 7)
!7265 = !DILocation(line: 0, scope: !7257)
!7266 = !DILocation(line: 1829, column: 7, scope: !7264)
!7267 = !DILocation(line: 1829, column: 33, scope: !7264)
!7268 = !DILocation(line: 1830, column: 7, scope: !7264)
!7269 = !DILocation(line: 1830, column: 36, scope: !7264)
!7270 = !DILocation(line: 1829, column: 7, scope: !7257)
!7271 = !DILocation(line: 1831, column: 5, scope: !7264)
!7272 = !DILocation(line: 1832, column: 38, scope: !7263)
!7273 = !DILocation(line: 1832, column: 12, scope: !7264)
!7274 = !DILocation(line: 1835, column: 16, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 1835, column: 7)
!7276 = !DILocation(line: 0, scope: !7262)
!7277 = !DILocation(line: 1835, column: 12, scope: !7275)
!7278 = !DILocation(line: 0, scope: !7275)
!7279 = !DILocation(line: 1835, column: 51, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 1835, column: 7)
!7281 = !DILocation(line: 1835, column: 7, scope: !7275)
!7282 = !DILocation(line: 1836, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 1836, column: 6)
!7284 = !DILocation(line: 1836, column: 48, scope: !7283)
!7285 = !DILocation(line: 1837, column: 6, scope: !7283)
!7286 = !DILocation(line: 1837, column: 51, scope: !7283)
!7287 = !DILocation(line: 1836, column: 6, scope: !7280)
!7288 = !DILocation(line: 1838, column: 4, scope: !7283)
!7289 = !DILocation(line: 1835, column: 7, scope: !7280)
!7290 = distinct !{!7290, !7281, !7291}
!7291 = !DILocation(line: 1838, column: 54, scope: !7275)
!7292 = !DILocation(line: 1840, column: 1, scope: !7257)
!7293 = distinct !DISubprogram(name: "set_spec_fed", scope: !3, file: !3, line: 1852, type: !2089, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7294)
!7294 = !{!7295, !7296, !7297}
!7295 = !DILocalVariable(name: "load_insn", arg: 1, scope: !7293, file: !3, line: 1852, type: !777)
!7296 = !DILocalVariable(name: "sd_it", scope: !7293, file: !3, line: 1854, type: !2176)
!7297 = !DILocalVariable(name: "dep", scope: !7293, file: !3, line: 1855, type: !3798)
!7298 = !DILocation(line: 0, scope: !7293)
!7299 = !DILocation(line: 1854, column: 3, scope: !7293)
!7300 = !DILocation(line: 1855, column: 3, scope: !7293)
!7301 = !DILocation(line: 1857, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 1857, column: 3)
!7303 = !DILocation(line: 1857, column: 3, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1857, column: 3)
!7305 = !DILocation(line: 1858, column: 9, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 1858, column: 9)
!7307 = !DILocation(line: 1858, column: 24, scope: !7306)
!7308 = !DILocation(line: 1858, column: 9, scope: !7304)
!7309 = !DILocation(line: 1859, column: 7, scope: !7306)
!7310 = !DILocation(line: 1859, column: 40, scope: !7306)
!7311 = distinct !{!7311, !7301, !7312}
!7312 = !DILocation(line: 1859, column: 42, scope: !7302)
!7313 = !DILocation(line: 1860, column: 1, scope: !7293)
!7314 = distinct !DISubprogram(name: "update_live_1", scope: !3, file: !3, line: 1736, type: !7315, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7317)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{null, !765, !777}
!7317 = !{!7318, !7319, !7320, !7321, !7322, !7323, !7326, !7331, !7336}
!7318 = !DILocalVariable(name: "src", arg: 1, scope: !7314, file: !3, line: 1736, type: !765)
!7319 = !DILocalVariable(name: "x", arg: 2, scope: !7314, file: !3, line: 1736, type: !777)
!7320 = !DILocalVariable(name: "i", scope: !7314, file: !3, line: 1738, type: !765)
!7321 = !DILocalVariable(name: "regno", scope: !7314, file: !3, line: 1739, type: !765)
!7322 = !DILocalVariable(name: "reg", scope: !7314, file: !3, line: 1740, type: !777)
!7323 = !DILocalVariable(name: "i", scope: !7324, file: !3, line: 1752, type: !765)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 1751, column: 5)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1750, column: 7)
!7326 = !DILocalVariable(name: "j", scope: !7327, file: !3, line: 1773, type: !765)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 1772, column: 2)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 1771, column: 11)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 1770, column: 5)
!7330 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1769, column: 7)
!7331 = !DILocalVariable(name: "b", scope: !7332, file: !3, line: 1778, type: !1311)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 1777, column: 3)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1776, column: 8)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1776, column: 8)
!7335 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1775, column: 6)
!7336 = !DILocalVariable(name: "b", scope: !7337, file: !3, line: 1788, type: !1311)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 1787, column: 6)
!7338 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 1786, column: 4)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 1786, column: 4)
!7340 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 1785, column: 2)
!7341 = !DILocation(line: 0, scope: !7314)
!7342 = !DILocation(line: 1740, column: 13, scope: !7314)
!7343 = !DILocation(line: 1742, column: 11, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1742, column: 7)
!7345 = !DILocation(line: 1742, column: 7, scope: !7314)
!7346 = !DILocation(line: 1745, column: 3, scope: !7314)
!7347 = !DILocation(line: 1745, column: 10, scope: !7314)
!7348 = !DILocation(line: 1745, column: 25, scope: !7314)
!7349 = !DILocation(line: 1746, column: 3, scope: !7314)
!7350 = !DILocation(line: 1746, column: 21, scope: !7314)
!7351 = !DILocation(line: 1747, column: 21, scope: !7314)
!7352 = !DILocation(line: 1747, column: 3, scope: !7314)
!7353 = !DILocation(line: 1748, column: 11, scope: !7314)
!7354 = distinct !{!7354, !7346, !7353}
!7355 = !DILocation(line: 1750, column: 22, scope: !7325)
!7356 = !DILocation(line: 1750, column: 7, scope: !7314)
!7357 = !DILocation(line: 1754, column: 16, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1754, column: 7)
!7359 = !DILocation(line: 0, scope: !7324)
!7360 = !DILocation(line: 1754, column: 12, scope: !7358)
!7361 = !DILocation(line: 0, scope: !7358)
!7362 = !DILocation(line: 1754, column: 40, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1754, column: 7)
!7364 = !DILocation(line: 1754, column: 7, scope: !7358)
!7365 = !DILocation(line: 1755, column: 6, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1755, column: 6)
!7367 = !DILocation(line: 1755, column: 36, scope: !7366)
!7368 = !DILocation(line: 1755, column: 6, scope: !7363)
!7369 = !DILocation(line: 1756, column: 4, scope: !7366)
!7370 = !DILocation(line: 1754, column: 7, scope: !7363)
!7371 = distinct !{!7371, !7364, !7372}
!7372 = !DILocation(line: 1756, column: 53, scope: !7358)
!7373 = !DILocation(line: 1761, column: 8, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1761, column: 7)
!7375 = !DILocation(line: 1761, column: 7, scope: !7314)
!7376 = !DILocation(line: 1767, column: 11, scope: !7314)
!7377 = !DILocation(line: 1769, column: 13, scope: !7330)
!7378 = !DILocation(line: 1769, column: 38, scope: !7330)
!7379 = !DILocation(line: 1769, column: 42, scope: !7330)
!7380 = !DILocation(line: 1769, column: 7, scope: !7314)
!7381 = !DILocation(line: 1771, column: 17, scope: !7328)
!7382 = !DILocation(line: 1771, column: 11, scope: !7329)
!7383 = !DILocation(line: 0, scope: !7338)
!7384 = !DILocation(line: 1786, column: 4, scope: !7339)
!7385 = !DILocation(line: 1773, column: 12, scope: !7327)
!7386 = !DILocation(line: 1773, column: 36, scope: !7327)
!7387 = !DILocation(line: 0, scope: !7327)
!7388 = !DILocation(line: 0, scope: !7333)
!7389 = !DILocation(line: 1774, column: 4, scope: !7327)
!7390 = !DILocation(line: 1774, column: 11, scope: !7327)
!7391 = !DILocation(line: 1774, column: 15, scope: !7327)
!7392 = !DILocation(line: 0, scope: !7332)
!7393 = !DILocation(line: 1776, column: 8, scope: !7334)
!7394 = !DILocation(line: 0, scope: !7334)
!7395 = !DILocation(line: 1776, column: 24, scope: !7333)
!7396 = !DILocation(line: 1776, column: 56, scope: !7333)
!7397 = !DILocation(line: 1776, column: 22, scope: !7333)
!7398 = distinct !{!7398, !7389, !7399}
!7399 = !DILocation(line: 1782, column: 6, scope: !7327)
!7400 = !DILocation(line: 1778, column: 53, scope: !7332)
!7401 = !DILocation(line: 1778, column: 21, scope: !7332)
!7402 = !DILocation(line: 1780, column: 5, scope: !7332)
!7403 = !DILocation(line: 1776, column: 69, scope: !7333)
!7404 = !DILocation(line: 1776, column: 8, scope: !7333)
!7405 = distinct !{!7405, !7393, !7406}
!7406 = !DILocation(line: 1781, column: 3, scope: !7334)
!7407 = !DILocation(line: 0, scope: !7339)
!7408 = !DILocation(line: 1786, column: 20, scope: !7338)
!7409 = !DILocation(line: 1786, column: 52, scope: !7338)
!7410 = !DILocation(line: 1786, column: 18, scope: !7338)
!7411 = !DILocation(line: 1788, column: 56, scope: !7337)
!7412 = !DILocation(line: 1788, column: 24, scope: !7337)
!7413 = !DILocation(line: 0, scope: !7337)
!7414 = !DILocation(line: 1790, column: 8, scope: !7337)
!7415 = !DILocation(line: 1786, column: 65, scope: !7338)
!7416 = !DILocation(line: 1786, column: 4, scope: !7338)
!7417 = distinct !{!7417, !7384, !7418}
!7418 = !DILocation(line: 1791, column: 6, scope: !7339)
!7419 = !DILocation(line: 1794, column: 1, scope: !7314)
!7420 = distinct !DISubprogram(name: "free_trg_info", scope: !3, file: !3, line: 1588, type: !2093, scopeLine: 1589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!7421 = !DILocation(line: 1590, column: 9, scope: !7420)
!7422 = !DILocation(line: 1590, column: 3, scope: !7420)
!7423 = !DILocation(line: 1591, column: 9, scope: !7420)
!7424 = !DILocation(line: 1591, column: 3, scope: !7420)
!7425 = !DILocation(line: 1592, column: 9, scope: !7420)
!7426 = !DILocation(line: 1592, column: 3, scope: !7420)
!7427 = !DILocation(line: 1593, column: 1, scope: !7420)
!7428 = distinct !DISubprogram(name: "free_block_dependencies", scope: !3, file: !3, line: 2744, type: !2101, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7429)
!7429 = !{!7430, !7431, !7432}
!7430 = !DILocalVariable(name: "bb", arg: 1, scope: !7428, file: !3, line: 2744, type: !765)
!7431 = !DILocalVariable(name: "head", scope: !7428, file: !3, line: 2746, type: !777)
!7432 = !DILocalVariable(name: "tail", scope: !7428, file: !3, line: 2747, type: !777)
!7433 = !DILocation(line: 0, scope: !7428)
!7434 = !DILocation(line: 2746, column: 3, scope: !7428)
!7435 = !DILocation(line: 2747, column: 3, scope: !7428)
!7436 = !DILocation(line: 2749, column: 22, scope: !7428)
!7437 = !DILocation(line: 2749, column: 41, scope: !7428)
!7438 = !DILocation(line: 2749, column: 3, scope: !7428)
!7439 = !DILocation(line: 2751, column: 24, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 2751, column: 7)
!7441 = !DILocation(line: 2751, column: 30, scope: !7440)
!7442 = !DILocation(line: 2751, column: 7, scope: !7440)
!7443 = !DILocation(line: 2751, column: 7, scope: !7428)
!7444 = !DILocation(line: 2754, column: 20, scope: !7428)
!7445 = !DILocation(line: 2754, column: 26, scope: !7428)
!7446 = !DILocation(line: 2754, column: 3, scope: !7428)
!7447 = !DILocation(line: 2755, column: 1, scope: !7428)
